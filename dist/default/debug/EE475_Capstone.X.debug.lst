

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 25 01:45:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F452 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  001230                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for stoa@F1152
    73  001230  28                 	db	40
    74  001231  6E                 	db	110
    75  001232  75                 	db	117
    76  001233  6C                 	db	108
    77  001234  6C                 	db	108
    78  001235  29                 	db	41
    79  001236  00                 	db	0
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISA	set	3986
    82  0000                     _PORTA	set	3968
    83  0000                     _PORTD	set	3971
    84  0000                     _PORTB	set	3969
    85  0000                     _PORTCbits	set	3970
    86  0000                     _TRISCbits	set	3988
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISD	set	3989
    89  0000                     _CCP1CON	set	4029
    90  0000                     _CCPR1L	set	4030
    91  0000                     _PR2	set	4043
    92  0000                     _T2CON	set	4042
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADRESH	set	4036
    95  0000                     _ADCON0	set	4034
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPSTATbits	set	4039
    99  0000                     _ADCON1	set	4033
   100  0000                     _RCREG1	set	4014
   101  0000                     _TXREG	set	4013
   102  0000                     _RCSTAbits	set	4011
   103  0000                     _RCSTA	set	4011
   104  0000                     _SPBRG	set	4015
   105  0000                     _TXSTAbits	set	4012
   106  0000                     _RCONbits	set	4048
   107  0000                     _GO_nDONE	set	32274
   108  0000                     _RCIF	set	31989
   109  0000                     _TMR2IP	set	31993
   110  0000                     _TMR2IE	set	31977
   111  0000                     _T0CON	set	4053
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR0H	set	4055
   114  0000                     _T0CONbits	set	4053
   115  0000                     _INTCON2bits	set	4081
   116  0000                     _INTCONbits	set	4082
   117  0000                     _TMR0IE	set	32661
   118  0000                     _TMR0IF	set	32658
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	opt callstack 0
   123  000600  00                 	db	0
   124  000601                     STR_103:
   125  000601  68                 	db	104	;'h'
   126  000602  68                 	db	104	;'h'
   127  000603  58                 	db	88	;'X'
   128  000604  00                 	db	0
   129  000605                     STR_3:
   130  000605  68                 	db	104	;'h'
   131  000606  68                 	db	104	;'h'
   132  000607  64                 	db	100	;'d'
   133  000608  00                 	db	0
   134  000609                     STR_7:
   135  000609  68                 	db	104	;'h'
   136  00060A  68                 	db	104	;'h'
   137  00060B  69                 	db	105	;'i'
   138  00060C  00                 	db	0
   139  00060D                     STR_59:
   140  00060D  68                 	db	104	;'h'
   141  00060E  68                 	db	104	;'h'
   142  00060F  6E                 	db	110	;'n'
   143  000610  00                 	db	0
   144  000611                     STR_39:
   145  000611  68                 	db	104	;'h'
   146  000612  68                 	db	104	;'h'
   147  000613  6F                 	db	111	;'o'
   148  000614  00                 	db	0
   149  000615                     STR_79:
   150  000615  68                 	db	104	;'h'
   151  000616  68                 	db	104	;'h'
   152  000617  75                 	db	117	;'u'
   153  000618  00                 	db	0
   154  000619                     STR_99:
   155  000619  68                 	db	104	;'h'
   156  00061A  68                 	db	104	;'h'
   157  00061B  78                 	db	120	;'x'
   158  00061C  00                 	db	0
   159  00061D                     STR_1:
   160  00061D  25                 	db	37
   161  00061E  6C                 	db	108	;'l'
   162  00061F  75                 	db	117	;'u'
   163  000620  00                 	db	0
   164  000621                     STR_121:
   165  000621  6C                 	db	108	;'l'
   166  000622  58                 	db	88	;'X'
   167  000623  00                 	db	0
   168  000624                     STR_130:
   169  000624  7A                 	db	122	;'z'
   170  000625  58                 	db	88	;'X'
   171  000626  00                 	db	0
   172  000627                     STR_21:
   173  000627  6C                 	db	108	;'l'
   174  000628  64                 	db	100	;'d'
   175  000629  00                 	db	0
   176  00062A                     STR_30:
   177  00062A  7A                 	db	122	;'z'
   178  00062B  64                 	db	100	;'d'
   179  00062C  00                 	db	0
   180  00062D                     STR_25:
   181  00062D  6C                 	db	108	;'l'
   182  00062E  69                 	db	105	;'i'
   183  00062F  00                 	db	0
   184  000630                     STR_34:
   185  000630  7A                 	db	122	;'z'
   186  000631  69                 	db	105	;'i'
   187  000632  00                 	db	0
   188  000633                     STR_69:
   189  000633  6C                 	db	108	;'l'
   190  000634  6E                 	db	110	;'n'
   191  000635  00                 	db	0
   192  000636                     STR_74:
   193  000636  7A                 	db	122	;'z'
   194  000637  6E                 	db	110	;'n'
   195  000638  00                 	db	0
   196  000639                     STR_49:
   197  000639  6C                 	db	108	;'l'
   198  00063A  6F                 	db	111	;'o'
   199  00063B  00                 	db	0
   200  00063C                     STR_54:
   201  00063C  7A                 	db	122	;'z'
   202  00063D  6F                 	db	111	;'o'
   203  00063E  00                 	db	0
   204  00063F                     STR_94:
   205  00063F  7A                 	db	122	;'z'
   206  000640  75                 	db	117	;'u'
   207  000641  00                 	db	0
   208  000642                     STR_117:
   209  000642  6C                 	db	108	;'l'
   210  000643  78                 	db	120	;'x'
   211  000644  00                 	db	0
   212  000645                     STR_126:
   213  000645  7A                 	db	122	;'z'
   214  000646  78                 	db	120	;'x'
   215  000647  00                 	db	0
   216  000648  25                 	db	37
   217  000649  64                 	db	100	;'d'
   218  00064A  00                 	db	0
   219  0000                     
   220                           ; #config settings
   221  00064B  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           	psect	cinit
   224  0010FA                     __pcinit:
   225                           	opt callstack 0
   226  0010FA                     start_initialization:
   227                           	opt callstack 0
   228  0010FA                     __initialization:
   229                           	opt callstack 0
   230                           
   231                           ; Initialize objects allocated to COMRAM (7 bytes)
   232                           ; load TBLPTR registers with __pidataCOMRAM
   233  0010FA  0E30               	movlw	low __pidataCOMRAM
   234  0010FC  6EF6               	movwf	tblptrl,c
   235  0010FE  0E12               	movlw	high __pidataCOMRAM
   236  001100  6EF7               	movwf	tblptrh,c
   237  001102  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   238  001104  6EF8               	movwf	tblptru,c
   239  001106  EE00  F06A         	lfsr	0,__pdataCOMRAM
   240  00110A  EE10 F007          	lfsr	1,7
   241  00110E                     copy_data0:
   242  00110E  0009               	tblrd		*+
   243  001110  CFF5 FFEE          	movff	tablat,postinc0
   244  001114  50E5               	movf	postdec1,w,c
   245  001116  50E1               	movf	fsr1l,w,c
   246  001118  E1FA               	bnz	copy_data0
   247                           
   248                           ; Clear objects allocated to BANK0 (32 bytes)
   249  00111A  EE00  F080         	lfsr	0,__pbssBANK0
   250  00111E  0E20               	movlw	32
   251  001120                     clear_0:
   252  001120  6AEE               	clrf	postinc0,c
   253  001122  06E8               	decf	wreg,f,c
   254  001124  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (28 bytes)
   257  001126  EE00  F04E         	lfsr	0,__pbssCOMRAM
   258  00112A  0E1C               	movlw	28
   259  00112C                     clear_1:
   260  00112C  6AEE               	clrf	postinc0,c
   261  00112E  06E8               	decf	wreg,f,c
   262  001130  E1FD               	bnz	clear_1
   263  001132                     end_of_initialization:
   264                           	opt callstack 0
   265  001132                     __end_of__initialization:
   266                           	opt callstack 0
   267  001132  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  001134  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  001136  0E00               	movlw	low (__Lsmallconst shr (0+16))
   270  001138  6EF8               	movwf	tblptru,c
   271  00113A  0E06               	movlw	high __Lsmallconst
   272  00113C  6EF7               	movwf	tblptrh,c
   273  00113E  0100               	movlb	0
   274  001140  EF06  F008         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277  00004E                     __pbssCOMRAM:
   278                           	opt callstack 0
   279  00004E                     _lcd:
   280                           	opt callstack 0
   281  00004E                     	ds	5
   282  000053                     _time_ms_2:
   283                           	opt callstack 0
   284  000053                     	ds	4
   285  000057                     _time_ms:
   286                           	opt callstack 0
   287  000057                     	ds	4
   288  00005B                     _errno:
   289                           	opt callstack 0
   290  00005B                     	ds	2
   291  00005D                     	ds	2
   292  00005F                     	ds	2
   293  000061                     	ds	2
   294  000063                     	ds	2
   295  000065                     _interval_events:
   296                           	opt callstack 0
   297  000065                     	ds	2
   298  000067                     	ds	1
   299  000068                     	ds	1
   300  000069                     _flag:
   301                           	opt callstack 0
   302  000069                     	ds	1
   303                           
   304                           	psect	dataCOMRAM
   305  00006A                     __pdataCOMRAM:
   306                           	opt callstack 0
   307  00006A                     	ds	7
   308                           
   309                           	psect	bssBANK0
   310  000080                     __pbssBANK0:
   311                           	opt callstack 0
   312  000080                     	ds	32
   313                           
   314                           	psect	cstackCOMRAM
   315  000001                     __pcstackCOMRAM:
   316                           	opt callstack 0
   317  000001                     ?_ADC_Read:
   318                           	opt callstack 0
   319  000001                     ?___fladd:
   320                           	opt callstack 0
   321  000001                     ?___xxtofl:
   322                           	opt callstack 0
   323  000001                     set_duty_cycle@lower_2:
   324                           	opt callstack 0
   325  000001                     initialize_PWM@freq:
   326                           	opt callstack 0
   327  000001                     ___fladd@b:
   328                           	opt callstack 0
   329  000001                     ___xxtofl@val:
   330                           	opt callstack 0
   331                           
   332                           ; 4 bytes @ 0x0
   333  000001                     	ds	1
   334  000002                     set_duty_cycle@upper_8:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000002                     	ds	1
   339  000003                     ??_ADC_Read:
   340  000003                     set_duty_cycle@mask:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x2
   344  000003                     	ds	2
   345  000005                     ??___xxtofl:
   346  000005                     ADC_Read@channel:
   347                           	opt callstack 0
   348  000005                     ___fladd@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x4
   352  000005                     	ds	4
   353  000009                     ??___fladd:
   354  000009                     ___xxtofl@sign:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     ___xxtofl@exp:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0x9
   363  00000A                     	ds	1
   364  00000B                     ___xxtofl@arg:
   365                           	opt callstack 0
   366                           
   367                           ; 4 bytes @ 0xA
   368  00000B                     	ds	2
   369  00000D                     ___fladd@signs:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00000D                     	ds	1
   374  00000E                     ___fladd@aexp:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  00000E                     	ds	1
   379  00000F                     ?___flmul:
   380                           	opt callstack 0
   381  00000F                     ___fladd@bexp:
   382                           	opt callstack 0
   383  00000F                     ___flmul@b:
   384                           	opt callstack 0
   385                           
   386                           ; 4 bytes @ 0xE
   387  00000F                     	ds	1
   388  000010                     ___fladd@grs:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0xF
   392  000010                     	ds	3
   393  000013                     ___flmul@a:
   394                           	opt callstack 0
   395                           
   396                           ; 4 bytes @ 0x12
   397  000013                     	ds	4
   398  000017                     ??___flmul:
   399                           
   400                           ; 1 bytes @ 0x16
   401  000017                     	ds	4
   402  00001B                     ___flmul@sign:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x1A
   406  00001B                     	ds	1
   407  00001C                     ___flmul@grs:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x1B
   411  00001C                     	ds	4
   412  000020                     ___flmul@aexp:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x1F
   416  000020                     	ds	1
   417  000021                     ___flmul@bexp:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x20
   421  000021                     	ds	1
   422  000022                     ___flmul@prod:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x21
   426  000022                     	ds	4
   427  000026                     ___flmul@temp:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x25
   431  000026                     	ds	2
   432  000028                     ?___flsub:
   433                           	opt callstack 0
   434  000028                     ___flsub@b:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x27
   438  000028                     	ds	4
   439  00002C                     ___flsub@a:
   440                           	opt callstack 0
   441                           
   442                           ; 4 bytes @ 0x2B
   443  00002C                     	ds	4
   444  000030                     ?_get_temp:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0x2F
   448  000030                     	ds	4
   449  000034                     get_temp@real_voltage:
   450                           	opt callstack 0
   451                           
   452                           ; 4 bytes @ 0x33
   453  000034                     	ds	4
   454  000038                     get_temp@temp:
   455                           	opt callstack 0
   456                           
   457                           ; 4 bytes @ 0x37
   458  000038                     	ds	4
   459  00003C                     get_temp@adc_voltage:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x3B
   463  00003C                     	ds	2
   464  00003E                     ?___fltol:
   465                           	opt callstack 0
   466  00003E                     ___fltol@f1:
   467                           	opt callstack 0
   468                           
   469                           ; 4 bytes @ 0x3D
   470  00003E                     	ds	4
   471  000042                     ??___fltol:
   472                           
   473                           ; 1 bytes @ 0x41
   474  000042                     	ds	4
   475  000046                     ___fltol@sign1:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x45
   479  000046                     	ds	1
   480  000047                     ___fltol@exp1:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x46
   484  000047                     	ds	1
   485  000048                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x47
   488  000048                     	ds	4
   489  00004C                     main@address:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x4B
   493  00004C                     	ds	2
   494                           
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 26 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  address         2   75[COMRAM] int 
   505 ;;  temp            2    0        int 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   515 ;;      Params:         0       0       0       0       0       0       0
   516 ;;      Locals:         4       0       0       0       0       0       0
   517 ;;      Temps:          2       0       0       0       0       0       0
   518 ;;      Totals:         6       0       0       0       0       0       0
   519 ;;Total ram usage:        6 bytes
   520 ;; Hardware stack levels required when called:    5
   521 ;; This function calls:
   522 ;;		_Timer0_Init
   523 ;;		_Timer0_StartTimer
   524 ;;		___fltol
   525 ;;		_get_temp
   526 ;;		_initialize_PWM
   527 ;;		_initialize_RX
   528 ;;		_initialize_TX
   529 ;;		_set_duty_cycle
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text0
   536  00100C                     __ptext0:
   537                           	opt callstack 0
   538  00100C                     _main:
   539                           	opt callstack 0
   540  00100C  FFFF               	dw	65535	; assembler added errata NOP
   541                           
   542                           ;main.c: 27:   TRISCbits.TRISC2 = 0;
   543                           
   544                           ;incstack = 0
   545  00100E  9494               	bcf	3988,2,c	;volatile
   546                           
   547                           ;main.c: 28:   TMR2IE = 1;
   548  001010  829D               	bsf	3997,1,c	;volatile
   549                           
   550                           ;main.c: 29:   TMR2IP = 1;
   551  001012  829F               	bsf	3999,1,c	;volatile
   552                           
   553                           ;main.c: 30:   RCONbits.IPEN = 1;
   554  001014  8ED0               	bsf	4048,7,c	;volatile
   555                           
   556                           ;main.c: 31:   initialize_PWM(0xFF);
   557  001016  0E00               	movlw	0
   558  001018  6E02               	movwf	initialize_PWM@freq+1,c
   559  00101A  6801               	setf	initialize_PWM@freq,c
   560  00101C  ECEA  F008         	call	_initialize_PWM	;wreg free
   561  001020                     l2708:
   562  001020  FFFF               	dw	65535	; assembler added errata NOP
   563                           
   564                           ;main.c: 33:     int address = 0;
   565  001022  0E00               	movlw	0
   566  001024  6E4D               	movwf	main@address+1,c
   567  001026  0E00               	movlw	0
   568  001028  6E4C               	movwf	main@address,c
   569                           
   570                           ;main.c: 34:     Timer0_Init();
   571  00102A  ECC7  F008         	call	_Timer0_Init	;wreg free
   572                           
   573                           ;main.c: 35:     Timer0_StartTimer();
   574  00102E  EC10  F009         	call	_Timer0_StartTimer	;wreg free
   575                           
   576                           ;main.c: 36:     initialize_TX();
   577  001032  ECF5  F008         	call	_initialize_TX	;wreg free
   578                           
   579                           ;main.c: 37:     initialize_RX();
   580  001036  ECFF  F008         	call	_initialize_RX	;wreg free
   581                           
   582                           ;main.c: 38:     TRISCbits.TRISC7 = 1;
   583  00103A  8E94               	bsf	3988,7,c	;volatile
   584                           
   585                           ;main.c: 39:     TRISCbits.TRISC6 = 0;
   586  00103C  9C94               	bcf	3988,6,c	;volatile
   587  00103E  ECA1  F007         	call	_get_temp	;wreg free
   588  001042  C030  F03E         	movff	?_get_temp,___fltol@f1
   589  001046  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
   590  00104A  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
   591  00104E  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
   592  001052  EC37  F007         	call	___fltol	;wreg free
   593                           
   594                           ;main.c: 42:     address++;
   595  001056  4A4C               	infsnz	main@address,f,c
   596  001058  2A4D               	incf	main@address+1,f,c
   597                           
   598                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   599  00105A  9E94               	bcf	3988,7,c	;volatile
   600                           
   601                           ;main.c: 44:     set_duty_cycle(0x00, 0x00);
   602  00105C  0E00               	movlw	0
   603  00105E  6E01               	movwf	set_duty_cycle@lower_2,c
   604  001060  0E00               	movlw	0
   605  001062  ECD9  F008         	call	_set_duty_cycle
   606                           
   607                           ;main.c: 45:     _delay((unsigned long)((5000)*(16000000/4000.0)));
   608  001066  0E4D               	movlw	77
   609  001068  6E49               	movwf	(??_main+1)& (0+255),c
   610  00106A  0E26               	movlw	38
   611  00106C  6E48               	movwf	??_main& (0+255),c
   612  00106E  0E05               	movlw	5
   613  001070                     u1727:
   614  001070  FFFF               	dw	65535	; errata NOP
   615  001072  2EE8               	decfsz	wreg,f,c
   616  001074  D7FD               	bra	u1727
   617  001076  2E48               	decfsz	??_main& (0+255),f,c
   618  001078  D7FB               	bra	u1727
   619  00107A  2E49               	decfsz	(??_main+1)& (0+255),f,c
   620  00107C  D7F9               	bra	u1727
   621  00107E  D000               	nop2	
   622                           
   623                           ;main.c: 46:     set_duty_cycle(0xFF, 0x03);
   624  001080  0E03               	movlw	3
   625  001082  6E01               	movwf	set_duty_cycle@lower_2,c
   626  001084  0EFF               	movlw	255
   627  001086  ECD9  F008         	call	_set_duty_cycle
   628                           
   629                           ;main.c: 47:     _delay((unsigned long)((5000)*(16000000/4000.0)));
   630  00108A  0E4D               	movlw	77
   631  00108C  6E49               	movwf	(??_main+1)& (0+255),c
   632  00108E  0E26               	movlw	38
   633  001090  6E48               	movwf	??_main& (0+255),c
   634  001092  0E05               	movlw	5
   635  001094                     u1737:
   636  001094  FFFF               	dw	65535	; errata NOP
   637  001096  2EE8               	decfsz	wreg,f,c
   638  001098  D7FD               	bra	u1737
   639  00109A  2E48               	decfsz	??_main& (0+255),f,c
   640  00109C  D7FB               	bra	u1737
   641  00109E  2E49               	decfsz	(??_main+1)& (0+255),f,c
   642  0010A0  D7F9               	bra	u1737
   643  0010A2  D000               	nop2	
   644  0010A4  D7BD               	goto	l2708
   645  0010A6                     __end_of_main:
   646                           	opt callstack 0
   647                           
   648 ;; *************** function _set_duty_cycle *****************
   649 ;; Defined at:
   650 ;;		line 18 in file "pwm.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  upper_8         1    wreg     unsigned char 
   653 ;;  lower_2         1    0[COMRAM] unsigned char 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  upper_8         1    1[COMRAM] unsigned char 
   656 ;;  mask            1    2[COMRAM] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         1       0       0       0       0       0       0
   667 ;;      Locals:         2       0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0
   669 ;;      Totals:         3       0       0       0       0       0       0
   670 ;;Total ram usage:        3 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    2
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text1
   681  0011B2                     __ptext1:
   682                           	opt callstack 0
   683  0011B2                     _set_duty_cycle:
   684                           	opt callstack 0
   685  0011B2  FFFF               	dw	65535	; assembler added errata NOP
   686                           
   687                           ;incstack = 0
   688                           ;set_duty_cycle@upper_8 stored from wreg
   689  0011B4  6E02               	movwf	set_duty_cycle@upper_8,c
   690                           
   691                           ;pwm.c: 19:   CCPR1L = upper_8;
   692  0011B6  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
   693                           
   694                           ;pwm.c: 20:   char mask = 0;
   695  0011BA  0E00               	movlw	0
   696  0011BC  6E03               	movwf	set_duty_cycle@mask,c
   697                           
   698                           ;pwm.c: 21:   mask |= lower_2;
   699  0011BE  5001               	movf	set_duty_cycle@lower_2,w,c
   700  0011C0  1203               	iorwf	set_duty_cycle@mask,f,c
   701                           
   702                           ;pwm.c: 22:   mask = mask << 4;
   703  0011C2  3803               	swapf	set_duty_cycle@mask,w,c
   704  0011C4  0BF0               	andlw	240
   705  0011C6  6E03               	movwf	set_duty_cycle@mask,c
   706                           
   707                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
   708  0011C8  50BD               	movf	4029,w,c	;volatile
   709  0011CA  0BCF               	andlw	207
   710  0011CC  1003               	iorwf	set_duty_cycle@mask,w,c
   711  0011CE  6EBD               	movwf	4029,c	;volatile
   712  0011D0  0012               	return		;funcret
   713  0011D2  FFFF               	dw	65535	; errata NOP
   714  0011D4                     __end_of_set_duty_cycle:
   715                           	opt callstack 0
   716                           
   717 ;; *************** function _initialize_TX *****************
   718 ;; Defined at:
   719 ;;		line 23 in file "serial.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   733 ;;      Params:         0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text2
   748  0011EA                     __ptext2:
   749                           	opt callstack 0
   750  0011EA                     _initialize_TX:
   751                           	opt callstack 0
   752  0011EA  FFFF               	dw	65535	; assembler added errata NOP
   753                           
   754                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
   755                           
   756                           ;incstack = 0
   757  0011EC  8CAC               	bsf	4012,6,c	;volatile
   758                           
   759                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
   760  0011EE  8AAC               	bsf	4012,5,c	;volatile
   761                           
   762                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
   763  0011F0  98AC               	bcf	4012,4,c	;volatile
   764                           
   765                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
   766  0011F2  94AC               	bcf	4012,2,c	;volatile
   767                           
   768                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
   769  0011F4  80AC               	bsf	4012,0,c	;volatile
   770                           
   771                           ;serial.c: 29:   SPBRG = 25;
   772  0011F6  0E19               	movlw	25
   773  0011F8  6EAF               	movwf	4015,c	;volatile
   774  0011FA  0012               	return		;funcret
   775  0011FC  FFFF               	dw	65535	; errata NOP
   776  0011FE                     __end_of_initialize_TX:
   777                           	opt callstack 0
   778                           
   779 ;; *************** function _initialize_RX *****************
   780 ;; Defined at:
   781 ;;		line 32 in file "serial.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   795 ;;      Params:         0       0       0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0
   798 ;;      Totals:         0       0       0       0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text3
   810  0011FE                     __ptext3:
   811                           	opt callstack 0
   812  0011FE                     _initialize_RX:
   813                           	opt callstack 0
   814  0011FE  FFFF               	dw	65535	; assembler added errata NOP
   815                           
   816                           ;serial.c: 33:   RCSTA = 0x00;
   817                           
   818                           ;incstack = 0
   819  001200  0E00               	movlw	0
   820  001202  6EAB               	movwf	4011,c	;volatile
   821                           
   822                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
   823  001204  8EAB               	bsf	4011,7,c	;volatile
   824                           
   825                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
   826  001206  8CAB               	bsf	4011,6,c	;volatile
   827                           
   828                           ;serial.c: 36:   RCSTAbits.CREN = 1;
   829  001208  88AB               	bsf	4011,4,c	;volatile
   830                           
   831                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
   832  00120A  96AB               	bcf	4011,3,c	;volatile
   833                           
   834                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
   835  00120C  80AB               	bsf	4011,0,c	;volatile
   836  00120E  0012               	return		;funcret
   837  001210  FFFF               	dw	65535	; errata NOP
   838  001212                     __end_of_initialize_RX:
   839                           	opt callstack 0
   840                           
   841 ;; *************** function _initialize_PWM *****************
   842 ;; Defined at:
   843 ;;		line 5 in file "pwm.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  freq            2    0[COMRAM] int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   857 ;;      Params:         2       0       0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    2
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text4
   872  0011D4                     __ptext4:
   873                           	opt callstack 0
   874  0011D4                     _initialize_PWM:
   875                           	opt callstack 0
   876  0011D4  FFFF               	dw	65535	; assembler added errata NOP
   877                           
   878                           ;pwm.c: 6:   T2CON &= ~(0x40);
   879                           
   880                           ;incstack = 0
   881  0011D6  9CCA               	bcf	4042,6,c	;volatile
   882                           
   883                           ;pwm.c: 7:   PR2 = 0xFF;
   884  0011D8  68CB               	setf	4043,c	;volatile
   885                           
   886                           ;pwm.c: 8:   CCPR1L = 0xFF;
   887  0011DA  68BE               	setf	4030,c	;volatile
   888                           
   889                           ;pwm.c: 9:   CCP1CON |= 0x00;
   890  0011DC  50BD               	movf	4029,w,c	;volatile
   891                           
   892                           ;pwm.c: 10:   T2CON = 0x07;
   893  0011DE  0E07               	movlw	7
   894  0011E0  6ECA               	movwf	4042,c	;volatile
   895                           
   896                           ;pwm.c: 11:   CCP1CON |= 0x0C;
   897  0011E2  0E0C               	movlw	12
   898  0011E4  12BD               	iorwf	4029,f,c	;volatile
   899  0011E6  0012               	return		;funcret
   900  0011E8  FFFF               	dw	65535	; errata NOP
   901  0011EA                     __end_of_initialize_PWM:
   902                           	opt callstack 0
   903                           
   904 ;; *************** function _get_temp *****************
   905 ;; Defined at:
   906 ;;		line 10 in file "temp_adc.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  temp            4   55[COMRAM] float 
   911 ;;  real_voltage    4   51[COMRAM] float 
   912 ;;  adc_voltage     2   59[COMRAM] unsigned int 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  4   47[COMRAM] float 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   922 ;;      Params:         4       0       0       0       0       0       0
   923 ;;      Locals:        10       0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0
   925 ;;      Totals:        14       0       0       0       0       0       0
   926 ;;Total ram usage:       14 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    4
   929 ;; This function calls:
   930 ;;		_ADC_Init
   931 ;;		_ADC_Read
   932 ;;		___flmul
   933 ;;		___flsub
   934 ;;		___xxtofl
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text5
   941  000F42                     __ptext5:
   942                           	opt callstack 0
   943  000F42                     _get_temp:
   944                           	opt callstack 0
   945  000F42  FFFF               	dw	65535	; assembler added errata NOP
   946                           
   947                           ;temp_adc.c: 11:   ADC_Init();
   948                           
   949                           ;incstack = 0
   950  000F44  EC09  F009         	call	_ADC_Init	;wreg free
   951                           
   952                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
   953  000F48  90C1               	bcf	4033,0,c	;volatile
   954                           
   955                           ;temp_adc.c: 13:   TRISA |= 0x01;
   956  000F4A  8092               	bsf	3986,0,c	;volatile
   957                           
   958                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
   959  000F4C  0E00               	movlw	0
   960  000F4E  EC53  F008         	call	_ADC_Read
   961  000F52  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
   962  000F56  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
   963                           
   964                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
   965  000F5A  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
   966  000F5E  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
   967  000F62  6A03               	clrf	___xxtofl@val+2,c
   968  000F64  6A04               	clrf	___xxtofl@val+3,c
   969  000F66  0E00               	movlw	0
   970  000F68  EC89  F006         	call	___xxtofl
   971  000F6C  C001  F00F         	movff	?___xxtofl,___flmul@b
   972  000F70  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   973  000F74  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   974  000F78  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   975  000F7C  0E9F               	movlw	159
   976  000F7E  6E13               	movwf	___flmul@a,c
   977  000F80  0EAB               	movlw	171
   978  000F82  6E14               	movwf	___flmul@a+1,c
   979  000F84  0EAD               	movlw	173
   980  000F86  6E15               	movwf	___flmul@a+2,c
   981  000F88  0E3B               	movlw	59
   982  000F8A  6E16               	movwf	___flmul@a+3,c
   983  000F8C  EC26  F003         	call	___flmul	;wreg free
   984  000F90  C00F  F034         	movff	?___flmul,get_temp@real_voltage
   985  000F94  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
   986  000F98  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
   987  000F9C  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
   988                           
   989                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
   990  000FA0  0E00               	movlw	0
   991  000FA2  6E28               	movwf	___flsub@b,c
   992  000FA4  0E00               	movlw	0
   993  000FA6  6E29               	movwf	___flsub@b+1,c
   994  000FA8  0E48               	movlw	72
   995  000FAA  6E2A               	movwf	___flsub@b+2,c
   996  000FAC  0E43               	movlw	67
   997  000FAE  6E2B               	movwf	___flsub@b+3,c
   998  000FB0  0E00               	movlw	0
   999  000FB2  6E13               	movwf	___flmul@a,c
  1000  000FB4  0E00               	movlw	0
  1001  000FB6  6E14               	movwf	___flmul@a+1,c
  1002  000FB8  0E0C               	movlw	12
  1003  000FBA  6E15               	movwf	___flmul@a+2,c
  1004  000FBC  0E42               	movlw	66
  1005  000FBE  6E16               	movwf	___flmul@a+3,c
  1006  000FC0  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  1007  000FC4  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  1008  000FC8  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  1009  000FCC  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  1010  000FD0  EC26  F003         	call	___flmul	;wreg free
  1011  000FD4  C00F  F02C         	movff	?___flmul,___flsub@a
  1012  000FD8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  1013  000FDC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  1014  000FE0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  1015  000FE4  ECA2  F008         	call	___flsub	;wreg free
  1016  000FE8  C028  F038         	movff	?___flsub,get_temp@temp
  1017  000FEC  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  1018  000FF0  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  1019  000FF4  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  1020                           
  1021                           ;temp_adc.c: 18:   return temp;
  1022  000FF8  C038  F030         	movff	get_temp@temp,?_get_temp
  1023  000FFC  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  1024  001000  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  1025  001004  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  1026  001008  0012               	return		;funcret
  1027  00100A  FFFF               	dw	65535	; errata NOP
  1028  00100C                     __end_of_get_temp:
  1029                           	opt callstack 0
  1030                           
  1031 ;; *************** function ___xxtofl *****************
  1032 ;; Defined at:
  1033 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  sign            1    wreg     unsigned char 
  1036 ;;  val             4    0[COMRAM] long 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  sign            1    8[COMRAM] unsigned char 
  1039 ;;  arg             4   10[COMRAM] unsigned long 
  1040 ;;  exp             1    9[COMRAM] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  4    0[COMRAM] unsigned char 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1050 ;;      Params:         4       0       0       0       0       0       0
  1051 ;;      Locals:         6       0       0       0       0       0       0
  1052 ;;      Temps:          4       0       0       0       0       0       0
  1053 ;;      Totals:        14       0       0       0       0       0       0
  1054 ;;Total ram usage:       14 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    2
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_get_temp
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text6
  1065  000D12                     __ptext6:
  1066                           	opt callstack 0
  1067  000D12                     ___xxtofl:
  1068                           	opt callstack 0
  1069  000D12  FFFF               	dw	65535	; assembler added errata NOP
  1070                           
  1071                           ;incstack = 0
  1072                           ;___xxtofl@sign stored from wreg
  1073  000D14  6E09               	movwf	___xxtofl@sign,c
  1074  000D16  5009               	movf	___xxtofl@sign,w,c
  1075  000D18  A4D8               	btfss	status,2,c
  1076  000D1A  AE04               	btfss	___xxtofl@val+3,7,c
  1077  000D1C  D01A               	goto	l1217
  1078  000D1E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1079  000D22  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1080  000D26  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1081  000D2A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1082  000D2E  1E05               	comf	??___xxtofl,f,c
  1083  000D30  1E06               	comf	??___xxtofl+1,f,c
  1084  000D32  1E07               	comf	??___xxtofl+2,f,c
  1085  000D34  1E08               	comf	??___xxtofl+3,f,c
  1086  000D36  2A05               	incf	??___xxtofl,f,c
  1087  000D38  0E00               	movlw	0
  1088  000D3A  2206               	addwfc	??___xxtofl+1,f,c
  1089  000D3C  2207               	addwfc	??___xxtofl+2,f,c
  1090  000D3E  2208               	addwfc	??___xxtofl+3,f,c
  1091  000D40  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1092  000D44  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1093  000D48  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1094  000D4C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1095  000D50  D009               	goto	l2582
  1096  000D52                     l1217:
  1097  000D52  FFFF               	dw	65535	; assembler added errata NOP
  1098  000D54  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1099  000D58  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1100  000D5C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1101  000D60  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1102  000D64                     l2582:
  1103  000D64  FFFF               	dw	65535	; assembler added errata NOP
  1104  000D66  5001               	movf	___xxtofl@val,w,c
  1105  000D68  1002               	iorwf	___xxtofl@val+1,w,c
  1106  000D6A  1003               	iorwf	___xxtofl@val+2,w,c
  1107  000D6C  1004               	iorwf	___xxtofl@val+3,w,c
  1108  000D6E  A4D8               	btfss	status,2,c
  1109  000D70  D009               	goto	l2588
  1110  000D72  0E00               	movlw	0
  1111  000D74  6E01               	movwf	?___xxtofl,c
  1112  000D76  0E00               	movlw	0
  1113  000D78  6E02               	movwf	?___xxtofl+1,c
  1114  000D7A  0E00               	movlw	0
  1115  000D7C  6E03               	movwf	?___xxtofl+2,c
  1116  000D7E  0E00               	movlw	0
  1117  000D80  6E04               	movwf	?___xxtofl+3,c
  1118  000D82  D072               	goto	l1220
  1119  000D84                     l2588:
  1120  000D84  FFFF               	dw	65535	; assembler added errata NOP
  1121  000D86  0E96               	movlw	150
  1122  000D88  6E0A               	movwf	___xxtofl@exp,c
  1123  000D8A  D007               	goto	l2592
  1124  000D8C                     l2590:
  1125  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  1126  000D8E  2A0A               	incf	___xxtofl@exp,f,c
  1127  000D90  90D8               	bcf	status,0,c
  1128  000D92  320E               	rrcf	___xxtofl@arg+3,f,c
  1129  000D94  320D               	rrcf	___xxtofl@arg+2,f,c
  1130  000D96  320C               	rrcf	___xxtofl@arg+1,f,c
  1131  000D98  320B               	rrcf	___xxtofl@arg,f,c
  1132  000D9A                     l2592:
  1133  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  1134  000D9C  0E00               	movlw	0
  1135  000D9E  140B               	andwf	___xxtofl@arg,w,c
  1136  000DA0  6E05               	movwf	??___xxtofl& (0+255),c
  1137  000DA2  0E00               	movlw	0
  1138  000DA4  140C               	andwf	___xxtofl@arg+1,w,c
  1139  000DA6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1140  000DA8  0E00               	movlw	0
  1141  000DAA  140D               	andwf	___xxtofl@arg+2,w,c
  1142  000DAC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1143  000DAE  0EFE               	movlw	254
  1144  000DB0  140E               	andwf	___xxtofl@arg+3,w,c
  1145  000DB2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1146  000DB4  5005               	movf	??___xxtofl,w,c
  1147  000DB6  1006               	iorwf	??___xxtofl+1,w,c
  1148  000DB8  1007               	iorwf	??___xxtofl+2,w,c
  1149  000DBA  1008               	iorwf	??___xxtofl+3,w,c
  1150  000DBC  B4D8               	btfsc	status,2,c
  1151  000DBE  D00E               	goto	l1224
  1152  000DC0  D7E5               	goto	l2590
  1153  000DC2                     l2594:
  1154  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  1155  000DC4  2A0A               	incf	___xxtofl@exp,f,c
  1156  000DC6  0E01               	movlw	1
  1157  000DC8  260B               	addwf	___xxtofl@arg,f,c
  1158  000DCA  0E00               	movlw	0
  1159  000DCC  220C               	addwfc	___xxtofl@arg+1,f,c
  1160  000DCE  220D               	addwfc	___xxtofl@arg+2,f,c
  1161  000DD0  220E               	addwfc	___xxtofl@arg+3,f,c
  1162  000DD2  90D8               	bcf	status,0,c
  1163  000DD4  320E               	rrcf	___xxtofl@arg+3,f,c
  1164  000DD6  320D               	rrcf	___xxtofl@arg+2,f,c
  1165  000DD8  320C               	rrcf	___xxtofl@arg+1,f,c
  1166  000DDA  320B               	rrcf	___xxtofl@arg,f,c
  1167  000DDC                     l1224:
  1168  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  1169  000DDE  0E00               	movlw	0
  1170  000DE0  140B               	andwf	___xxtofl@arg,w,c
  1171  000DE2  6E05               	movwf	??___xxtofl& (0+255),c
  1172  000DE4  0E00               	movlw	0
  1173  000DE6  140C               	andwf	___xxtofl@arg+1,w,c
  1174  000DE8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1175  000DEA  0E00               	movlw	0
  1176  000DEC  140D               	andwf	___xxtofl@arg+2,w,c
  1177  000DEE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1178  000DF0  0EFF               	movlw	255
  1179  000DF2  140E               	andwf	___xxtofl@arg+3,w,c
  1180  000DF4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1181  000DF6  5005               	movf	??___xxtofl,w,c
  1182  000DF8  1006               	iorwf	??___xxtofl+1,w,c
  1183  000DFA  1007               	iorwf	??___xxtofl+2,w,c
  1184  000DFC  1008               	iorwf	??___xxtofl+3,w,c
  1185  000DFE  B4D8               	btfsc	status,2,c
  1186  000E00  D008               	goto	l2602
  1187  000E02  D7DF               	goto	l2594
  1188  000E04                     l2600:
  1189  000E04  FFFF               	dw	65535	; assembler added errata NOP
  1190  000E06  060A               	decf	___xxtofl@exp,f,c
  1191  000E08  90D8               	bcf	status,0,c
  1192  000E0A  360B               	rlcf	___xxtofl@arg,f,c
  1193  000E0C  360C               	rlcf	___xxtofl@arg+1,f,c
  1194  000E0E  360D               	rlcf	___xxtofl@arg+2,f,c
  1195  000E10  360E               	rlcf	___xxtofl@arg+3,f,c
  1196  000E12                     l2602:
  1197  000E12  FFFF               	dw	65535	; assembler added errata NOP
  1198  000E14  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1199  000E16  D003               	goto	u1610
  1200  000E18  0E02               	movlw	2
  1201  000E1A  600A               	cpfslt	___xxtofl@exp,c
  1202  000E1C  D7F3               	goto	l2600
  1203  000E1E                     u1610:
  1204  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  1205  000E20  A00A               	btfss	___xxtofl@exp,0,c
  1206  000E22  9E0D               	bcf	___xxtofl@arg+2,7,c
  1207  000E24  90D8               	bcf	status,0,c
  1208  000E26  320A               	rrcf	___xxtofl@exp,f,c
  1209  000E28  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1210  000E2C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1211  000E2E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1212  000E30  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1213  000E32  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1214  000E36  6A07               	clrf	??___xxtofl+2,c
  1215  000E38  6A06               	clrf	??___xxtofl+1,c
  1216  000E3A  6A05               	clrf	??___xxtofl,c
  1217  000E3C  5005               	movf	??___xxtofl,w,c
  1218  000E3E  120B               	iorwf	___xxtofl@arg,f,c
  1219  000E40  5006               	movf	??___xxtofl+1,w,c
  1220  000E42  120C               	iorwf	___xxtofl@arg+1,f,c
  1221  000E44  5007               	movf	??___xxtofl+2,w,c
  1222  000E46  120D               	iorwf	___xxtofl@arg+2,f,c
  1223  000E48  5008               	movf	??___xxtofl+3,w,c
  1224  000E4A  120E               	iorwf	___xxtofl@arg+3,f,c
  1225  000E4C  5009               	movf	___xxtofl@sign,w,c
  1226  000E4E  A4D8               	btfss	status,2,c
  1227  000E50  AE04               	btfss	___xxtofl@val+3,7,c
  1228  000E52  D001               	goto	l2618
  1229  000E54  8E0E               	bsf	___xxtofl@arg+3,7,c
  1230  000E56                     l2618:
  1231  000E56  FFFF               	dw	65535	; assembler added errata NOP
  1232  000E58  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1233  000E5C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1234  000E60  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1235  000E64  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1236  000E68                     l1220:
  1237  000E68  FFFF               	dw	65535	; assembler added errata NOP
  1238  000E6A  0012               	return		;funcret
  1239  000E6C  FFFF               	dw	65535	; errata NOP
  1240  000E6E                     __end_of___xxtofl:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function ___flsub *****************
  1244 ;; Defined at:
  1245 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  b               4   39[COMRAM] unsigned char 
  1248 ;;  a               4   43[COMRAM] unsigned char 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  4   39[COMRAM] unsigned char 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1260 ;;      Params:         8       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0
  1263 ;;      Totals:         8       0       0       0       0       0       0
  1264 ;;Total ram usage:        8 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    3
  1267 ;; This function calls:
  1268 ;;		___fladd
  1269 ;; This function is called by:
  1270 ;;		_get_temp
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text7
  1275  001144                     __ptext7:
  1276                           	opt callstack 0
  1277  001144                     ___flsub:
  1278                           	opt callstack 0
  1279  001144  FFFF               	dw	65535	; assembler added errata NOP
  1280                           
  1281                           ;incstack = 0
  1282  001146  0E00               	movlw	0
  1283  001148  1A2C               	xorwf	___flsub@a,f,c
  1284  00114A  0E00               	movlw	0
  1285  00114C  1A2D               	xorwf	___flsub@a+1,f,c
  1286  00114E  0E00               	movlw	0
  1287  001150  1A2E               	xorwf	___flsub@a+2,f,c
  1288  001152  0E80               	movlw	128
  1289  001154  1A2F               	xorwf	___flsub@a+3,f,c
  1290  001156  C028  F001         	movff	___flsub@b,___fladd@b
  1291  00115A  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  1292  00115E  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  1293  001162  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  1294  001166  C02C  F005         	movff	___flsub@a,___fladd@a
  1295  00116A  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  1296  00116E  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  1297  001172  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  1298  001176  ECE7  F004         	call	___fladd	;wreg free
  1299  00117A  C001  F028         	movff	?___fladd,?___flsub
  1300  00117E  C002  F029         	movff	?___fladd+1,?___flsub+1
  1301  001182  C003  F02A         	movff	?___fladd+2,?___flsub+2
  1302  001186  C004  F02B         	movff	?___fladd+3,?___flsub+3
  1303  00118A  0012               	return		;funcret
  1304  00118C  FFFF               	dw	65535	; errata NOP
  1305  00118E                     __end_of___flsub:
  1306                           	opt callstack 0
  1307                           
  1308 ;; *************** function ___fladd *****************
  1309 ;; Defined at:
  1310 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  b               4    0[COMRAM] unsigned char 
  1313 ;;  a               4    4[COMRAM] unsigned char 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  grs             1   15[COMRAM] unsigned char 
  1316 ;;  bexp            1   14[COMRAM] unsigned char 
  1317 ;;  aexp            1   13[COMRAM] unsigned char 
  1318 ;;  signs           1   12[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  4    0[COMRAM] unsigned char 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         8       0       0       0       0       0       0
  1329 ;;      Locals:         4       0       0       0       0       0       0
  1330 ;;      Temps:          4       0       0       0       0       0       0
  1331 ;;      Totals:        16       0       0       0       0       0       0
  1332 ;;Total ram usage:       16 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		___flsub
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text8
  1343  0009CE                     __ptext8:
  1344                           	opt callstack 0
  1345  0009CE                     ___fladd:
  1346                           	opt callstack 0
  1347  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  1348                           
  1349                           ;incstack = 0
  1350  0009D0  5004               	movf	___fladd@b+3,w,c
  1351  0009D2  0B80               	andlw	128
  1352  0009D4  6E0D               	movwf	___fladd@signs,c
  1353  0009D6  5004               	movf	___fladd@b+3,w,c
  1354  0009D8  2404               	addwf	___fladd@b+3,w,c
  1355  0009DA  6E0F               	movwf	___fladd@bexp,c
  1356  0009DC  BE03               	btfsc	___fladd@b+2,7,c
  1357  0009DE  800F               	bsf	___fladd@bexp,0,c
  1358  0009E0  500F               	movf	___fladd@bexp,w,c
  1359  0009E2  B4D8               	btfsc	status,2,c
  1360  0009E4  D00E               	goto	l2238
  1361  0009E6  280F               	incf	___fladd@bexp,w,c
  1362  0009E8  A4D8               	btfss	status,2,c
  1363  0009EA  D008               	goto	l2234
  1364  0009EC  0E00               	movlw	0
  1365  0009EE  6E01               	movwf	___fladd@b,c
  1366  0009F0  0E00               	movlw	0
  1367  0009F2  6E02               	movwf	___fladd@b+1,c
  1368  0009F4  0E00               	movlw	0
  1369  0009F6  6E03               	movwf	___fladd@b+2,c
  1370  0009F8  0E00               	movlw	0
  1371  0009FA  6E04               	movwf	___fladd@b+3,c
  1372  0009FC                     l2234:
  1373  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  1374  0009FE  8E03               	bsf	___fladd@b+2,7,c
  1375  000A00  D007               	goto	L1
  1376  000A02                     l2238:
  1377  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1378  000A04  0E00               	movlw	0
  1379  000A06  6E01               	movwf	___fladd@b,c
  1380  000A08  0E00               	movlw	0
  1381  000A0A  6E02               	movwf	___fladd@b+1,c
  1382  000A0C  0E00               	movlw	0
  1383  000A0E  6E03               	movwf	___fladd@b+2,c
  1384  000A10                     L1:
  1385  000A10  FFFF               	dw	65535	; assembler added errata NOP
  1386  000A12  0E00               	movlw	0
  1387  000A14  6E04               	movwf	___fladd@b+3,c
  1388  000A16  5008               	movf	___fladd@a+3,w,c
  1389  000A18  0B80               	andlw	128
  1390  000A1A  6E0E               	movwf	___fladd@aexp,c
  1391  000A1C  500D               	movf	___fladd@signs,w,c
  1392  000A1E  180E               	xorwf	___fladd@aexp,w,c
  1393  000A20  A4D8               	btfss	status,2,c
  1394  000A22  8C0D               	bsf	___fladd@signs,6,c
  1395  000A24  5008               	movf	___fladd@a+3,w,c
  1396  000A26  2408               	addwf	___fladd@a+3,w,c
  1397  000A28  6E0E               	movwf	___fladd@aexp,c
  1398  000A2A  BE07               	btfsc	___fladd@a+2,7,c
  1399  000A2C  800E               	bsf	___fladd@aexp,0,c
  1400  000A2E  500E               	movf	___fladd@aexp,w,c
  1401  000A30  B4D8               	btfsc	status,2,c
  1402  000A32  D00E               	goto	l2262
  1403  000A34  280E               	incf	___fladd@aexp,w,c
  1404  000A36  A4D8               	btfss	status,2,c
  1405  000A38  D008               	goto	l2258
  1406  000A3A  0E00               	movlw	0
  1407  000A3C  6E05               	movwf	___fladd@a,c
  1408  000A3E  0E00               	movlw	0
  1409  000A40  6E06               	movwf	___fladd@a+1,c
  1410  000A42  0E00               	movlw	0
  1411  000A44  6E07               	movwf	___fladd@a+2,c
  1412  000A46  0E00               	movlw	0
  1413  000A48  6E08               	movwf	___fladd@a+3,c
  1414  000A4A                     l2258:
  1415  000A4A  FFFF               	dw	65535	; assembler added errata NOP
  1416  000A4C  8E07               	bsf	___fladd@a+2,7,c
  1417  000A4E  D007               	goto	L2
  1418  000A50                     l2262:
  1419  000A50  FFFF               	dw	65535	; assembler added errata NOP
  1420  000A52  0E00               	movlw	0
  1421  000A54  6E05               	movwf	___fladd@a,c
  1422  000A56  0E00               	movlw	0
  1423  000A58  6E06               	movwf	___fladd@a+1,c
  1424  000A5A  0E00               	movlw	0
  1425  000A5C  6E07               	movwf	___fladd@a+2,c
  1426  000A5E                     L2:
  1427  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  1428  000A60  0E00               	movlw	0
  1429  000A62  6E08               	movwf	___fladd@a+3,c
  1430  000A64  500F               	movf	___fladd@bexp,w,c
  1431  000A66  5C0E               	subwf	___fladd@aexp,w,c
  1432  000A68  B0D8               	btfsc	status,0,c
  1433  000A6A  D023               	goto	l2300
  1434  000A6C  AC0D               	btfss	___fladd@signs,6,c
  1435  000A6E  D002               	goto	l2270
  1436  000A70  0E80               	movlw	128
  1437  000A72  1A0D               	xorwf	___fladd@signs,f,c
  1438  000A74                     l2270:
  1439  000A74  FFFF               	dw	65535	; assembler added errata NOP
  1440  000A76  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  1441  000A7A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1442  000A7E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  1443  000A82  C001  F010         	movff	___fladd@b,___fladd@grs
  1444  000A86  C005  F001         	movff	___fladd@a,___fladd@b
  1445  000A8A  C010  F005         	movff	___fladd@grs,___fladd@a
  1446  000A8E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  1447  000A92  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  1448  000A96  C010  F006         	movff	___fladd@grs,___fladd@a+1
  1449  000A9A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  1450  000A9E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  1451  000AA2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  1452  000AA6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  1453  000AAA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  1454  000AAE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  1455  000AB2                     l2300:
  1456  000AB2  FFFF               	dw	65535	; assembler added errata NOP
  1457  000AB4  0E00               	movlw	0
  1458  000AB6  6E10               	movwf	___fladd@grs,c
  1459  000AB8  500F               	movf	___fladd@bexp,w,c
  1460  000ABA  C00E  F009         	movff	___fladd@aexp,??___fladd
  1461  000ABE  6A0A               	clrf	(??___fladd+1)& (0+255),c
  1462  000AC0  5E09               	subwf	??___fladd,f,c
  1463  000AC2  0E00               	movlw	0
  1464  000AC4  5A0A               	subwfb	??___fladd+1,f,c
  1465  000AC6  BE0A               	btfsc	??___fladd+1,7,c
  1466  000AC8  D031               	goto	l1091
  1467  000ACA  500A               	movf	??___fladd+1,w,c
  1468  000ACC  E104               	bnz	u1040
  1469  000ACE  0E1A               	movlw	26
  1470  000AD0  5C09               	subwf	??___fladd,w,c
  1471  000AD2  A0D8               	btfss	status,0,c
  1472  000AD4  D02B               	goto	l1091
  1473  000AD6                     u1040:
  1474  000AD6  5001               	movf	___fladd@b,w,c
  1475  000AD8  1002               	iorwf	___fladd@b+1,w,c
  1476  000ADA  1003               	iorwf	___fladd@b+2,w,c
  1477  000ADC  1004               	iorwf	___fladd@b+3,w,c
  1478  000ADE  B4D8               	btfsc	status,2,c
  1479  000AE0  D002               	goto	u1050
  1480  000AE2  0E01               	movlw	1
  1481  000AE4  D002               	goto	u1060
  1482  000AE6                     u1050:
  1483  000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1484  000AE8  0E00               	movlw	0
  1485  000AEA                     u1060:
  1486  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  1487  000AEC  6E10               	movwf	___fladd@grs,c
  1488  000AEE  0E00               	movlw	0
  1489  000AF0  6E01               	movwf	___fladd@b,c
  1490  000AF2  0E00               	movlw	0
  1491  000AF4  6E02               	movwf	___fladd@b+1,c
  1492  000AF6  0E00               	movlw	0
  1493  000AF8  6E03               	movwf	___fladd@b+2,c
  1494  000AFA  0E00               	movlw	0
  1495  000AFC  6E04               	movwf	___fladd@b+3,c
  1496  000AFE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1497  000B02  D019               	goto	u1090
  1498  000B04                     l1092:
  1499  000B04  FFFF               	dw	65535	; assembler added errata NOP
  1500  000B06  A010               	btfss	___fladd@grs,0,c
  1501  000B08  D005               	goto	l2312
  1502  000B0A  90D8               	bcf	status,0,c
  1503  000B0C  3010               	rrcf	___fladd@grs,w,c
  1504  000B0E  0901               	iorlw	1
  1505  000B10  6E10               	movwf	___fladd@grs,c
  1506  000B12  D003               	goto	l2314
  1507  000B14                     l2312:
  1508  000B14  FFFF               	dw	65535	; assembler added errata NOP
  1509  000B16  90D8               	bcf	status,0,c
  1510  000B18  3210               	rrcf	___fladd@grs,f,c
  1511  000B1A                     l2314:
  1512  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  1513  000B1C  B001               	btfsc	___fladd@b,0,c
  1514  000B1E  8E10               	bsf	___fladd@grs,7,c
  1515  000B20  3404               	rlcf	___fladd@b+3,w,c
  1516  000B22  3204               	rrcf	___fladd@b+3,f,c
  1517  000B24  3203               	rrcf	___fladd@b+2,f,c
  1518  000B26  3202               	rrcf	___fladd@b+1,f,c
  1519  000B28  3201               	rrcf	___fladd@b,f,c
  1520  000B2A  2A0F               	incf	___fladd@bexp,f,c
  1521  000B2C                     l1091:
  1522  000B2C  FFFF               	dw	65535	; assembler added errata NOP
  1523  000B2E  500E               	movf	___fladd@aexp,w,c
  1524  000B30  5C0F               	subwf	___fladd@bexp,w,c
  1525  000B32  A0D8               	btfss	status,0,c
  1526  000B34  D7E7               	goto	l1092
  1527  000B36                     u1090:
  1528  000B36  FFFF               	dw	65535	; assembler added errata NOP
  1529  000B38  BC0D               	btfsc	___fladd@signs,6,c
  1530  000B3A  D021               	goto	l2346
  1531  000B3C  500F               	movf	___fladd@bexp,w,c
  1532  000B3E  B4D8               	btfsc	status,2,c
  1533  000B40  D065               	goto	u1180
  1534  000B42  5005               	movf	___fladd@a,w,c
  1535  000B44  2601               	addwf	___fladd@b,f,c
  1536  000B46  5006               	movf	___fladd@a+1,w,c
  1537  000B48  2202               	addwfc	___fladd@b+1,f,c
  1538  000B4A  5007               	movf	___fladd@a+2,w,c
  1539  000B4C  2203               	addwfc	___fladd@b+2,f,c
  1540  000B4E  5008               	movf	___fladd@a+3,w,c
  1541  000B50  2204               	addwfc	___fladd@b+3,f,c
  1542  000B52  A004               	btfss	___fladd@b+3,0,c
  1543  000B54  D07B               	goto	u1220
  1544  000B56  A010               	btfss	___fladd@grs,0,c
  1545  000B58  D005               	goto	l2336
  1546  000B5A  90D8               	bcf	status,0,c
  1547  000B5C  3010               	rrcf	___fladd@grs,w,c
  1548  000B5E  0901               	iorlw	1
  1549  000B60  6E10               	movwf	___fladd@grs,c
  1550  000B62  D003               	goto	l2338
  1551  000B64                     l2336:
  1552  000B64  FFFF               	dw	65535	; assembler added errata NOP
  1553  000B66  90D8               	bcf	status,0,c
  1554  000B68  3210               	rrcf	___fladd@grs,f,c
  1555  000B6A                     l2338:
  1556  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  1557  000B6C  B001               	btfsc	___fladd@b,0,c
  1558  000B6E  8E10               	bsf	___fladd@grs,7,c
  1559  000B70  3404               	rlcf	___fladd@b+3,w,c
  1560  000B72  3204               	rrcf	___fladd@b+3,f,c
  1561  000B74  3203               	rrcf	___fladd@b+2,f,c
  1562  000B76  3202               	rrcf	___fladd@b+1,f,c
  1563  000B78  3201               	rrcf	___fladd@b,f,c
  1564  000B7A  2A0F               	incf	___fladd@bexp,f,c
  1565  000B7C  D067               	goto	u1220
  1566  000B7E                     l2346:
  1567  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  1568  000B80  5005               	movf	___fladd@a,w,c
  1569  000B82  5C01               	subwf	___fladd@b,w,c
  1570  000B84  5006               	movf	___fladd@a+1,w,c
  1571  000B86  5802               	subwfb	___fladd@b+1,w,c
  1572  000B88  5007               	movf	___fladd@a+2,w,c
  1573  000B8A  5803               	subwfb	___fladd@b+2,w,c
  1574  000B8C  5004               	movf	___fladd@b+3,w,c
  1575  000B8E  0A80               	xorlw	128
  1576  000B90  6E09               	movwf	??___fladd& (0+255),c
  1577  000B92  5008               	movf	___fladd@a+3,w,c
  1578  000B94  0A80               	xorlw	128
  1579  000B96  5809               	subwfb	??___fladd& (0+255),w,c
  1580  000B98  B0D8               	btfsc	status,0,c
  1581  000B9A  D025               	goto	l2356
  1582  000B9C  5001               	movf	___fladd@b,w,c
  1583  000B9E  5C05               	subwf	___fladd@a,w,c
  1584  000BA0  6E09               	movwf	??___fladd& (0+255),c
  1585  000BA2  5002               	movf	___fladd@b+1,w,c
  1586  000BA4  5806               	subwfb	___fladd@a+1,w,c
  1587  000BA6  6E0A               	movwf	(??___fladd+1)& (0+255),c
  1588  000BA8  5003               	movf	___fladd@b+2,w,c
  1589  000BAA  5807               	subwfb	___fladd@a+2,w,c
  1590  000BAC  6E0B               	movwf	(??___fladd+2)& (0+255),c
  1591  000BAE  5004               	movf	___fladd@b+3,w,c
  1592  000BB0  5808               	subwfb	___fladd@a+3,w,c
  1593  000BB2  6E0C               	movwf	(??___fladd+3)& (0+255),c
  1594  000BB4  0EFF               	movlw	255
  1595  000BB6  2409               	addwf	??___fladd,w,c
  1596  000BB8  6E01               	movwf	___fladd@b,c
  1597  000BBA  0EFF               	movlw	255
  1598  000BBC  200A               	addwfc	??___fladd+1,w,c
  1599  000BBE  6E02               	movwf	___fladd@b+1,c
  1600  000BC0  0EFF               	movlw	255
  1601  000BC2  200B               	addwfc	??___fladd+2,w,c
  1602  000BC4  6E03               	movwf	___fladd@b+2,c
  1603  000BC6  0EFF               	movlw	255
  1604  000BC8  200C               	addwfc	??___fladd+3,w,c
  1605  000BCA  6E04               	movwf	___fladd@b+3,c
  1606  000BCC  0E80               	movlw	128
  1607  000BCE  1A0D               	xorwf	___fladd@signs,f,c
  1608  000BD0  6C10               	negf	___fladd@grs,c
  1609  000BD2  5010               	movf	___fladd@grs,w,c
  1610  000BD4  A4D8               	btfss	status,2,c
  1611  000BD6  D010               	goto	l1107
  1612  000BD8  0E01               	movlw	1
  1613  000BDA  2601               	addwf	___fladd@b,f,c
  1614  000BDC  0E00               	movlw	0
  1615  000BDE  2202               	addwfc	___fladd@b+1,f,c
  1616  000BE0  2203               	addwfc	___fladd@b+2,f,c
  1617  000BE2  2204               	addwfc	___fladd@b+3,f,c
  1618  000BE4  D009               	goto	l1107
  1619  000BE6                     l2356:
  1620  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  1621  000BE8  5005               	movf	___fladd@a,w,c
  1622  000BEA  5E01               	subwf	___fladd@b,f,c
  1623  000BEC  5006               	movf	___fladd@a+1,w,c
  1624  000BEE  5A02               	subwfb	___fladd@b+1,f,c
  1625  000BF0  5007               	movf	___fladd@a+2,w,c
  1626  000BF2  5A03               	subwfb	___fladd@b+2,f,c
  1627  000BF4  5008               	movf	___fladd@a+3,w,c
  1628  000BF6  5A04               	subwfb	___fladd@b+3,f,c
  1629  000BF8                     l1107:
  1630  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  1631  000BFA  5001               	movf	___fladd@b,w,c
  1632  000BFC  1002               	iorwf	___fladd@b+1,w,c
  1633  000BFE  1003               	iorwf	___fladd@b+2,w,c
  1634  000C00  1004               	iorwf	___fladd@b+3,w,c
  1635  000C02  A4D8               	btfss	status,2,c
  1636  000C04  D020               	goto	l2380
  1637  000C06  5010               	movf	___fladd@grs,w,c
  1638  000C08  A4D8               	btfss	status,2,c
  1639  000C0A  D01D               	goto	l2380
  1640  000C0C                     u1180:
  1641  000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1642  000C0E  0E00               	movlw	0
  1643  000C10  6E01               	movwf	?___fladd,c
  1644  000C12  0E00               	movlw	0
  1645  000C14  6E02               	movwf	?___fladd+1,c
  1646  000C16  0E00               	movlw	0
  1647  000C18  6E03               	movwf	?___fladd+2,c
  1648  000C1A  0E00               	movlw	0
  1649  000C1C  6E04               	movwf	?___fladd+3,c
  1650  000C1E  D076               	goto	l1099
  1651  000C20                     l2364:
  1652  000C20  FFFF               	dw	65535	; assembler added errata NOP
  1653  000C22  90D8               	bcf	status,0,c
  1654  000C24  3601               	rlcf	___fladd@b,f,c
  1655  000C26  3602               	rlcf	___fladd@b+1,f,c
  1656  000C28  3603               	rlcf	___fladd@b+2,f,c
  1657  000C2A  3604               	rlcf	___fladd@b+3,f,c
  1658  000C2C  BE10               	btfsc	___fladd@grs,7,c
  1659  000C2E  8001               	bsf	___fladd@b,0,c
  1660  000C30  A010               	btfss	___fladd@grs,0,c
  1661  000C32  D002               	goto	l2374
  1662  000C34  80D8               	bsf	status,0,c
  1663  000C36  D002               	goto	L3
  1664  000C38                     l2374:
  1665  000C38  FFFF               	dw	65535	; assembler added errata NOP
  1666  000C3A  90D8               	bcf	status,0,c
  1667  000C3C                     L3:
  1668  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  1669  000C3E  3610               	rlcf	___fladd@grs,f,c
  1670  000C40  500F               	movf	___fladd@bexp,w,c
  1671  000C42  A4D8               	btfss	status,2,c
  1672  000C44  060F               	decf	___fladd@bexp,f,c
  1673  000C46                     l2380:
  1674  000C46  FFFF               	dw	65535	; assembler added errata NOP
  1675  000C48  AE03               	btfss	___fladd@b+2,7,c
  1676  000C4A  D7EA               	goto	l2364
  1677  000C4C                     u1220:
  1678  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1679  000C4E  0E00               	movlw	0
  1680  000C50  6E0E               	movwf	___fladd@aexp,c
  1681  000C52  AE10               	btfss	___fladd@grs,7,c
  1682  000C54  D00D               	goto	l1116
  1683  000C56  C010  F009         	movff	___fladd@grs,??___fladd
  1684  000C5A  0E7F               	movlw	127
  1685  000C5C  1609               	andwf	??___fladd,f,c
  1686  000C5E  B4D8               	btfsc	status,2,c
  1687  000C60  D004               	goto	l1117
  1688  000C62                     u1240:
  1689  000C62  FFFF               	dw	65535	; assembler added errata NOP
  1690  000C64  0E01               	movlw	1
  1691  000C66  6E0E               	movwf	___fladd@aexp,c
  1692  000C68  D003               	goto	l1116
  1693  000C6A                     l1117:
  1694  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  1695  000C6C  B001               	btfsc	___fladd@b,0,c
  1696  000C6E  D7F9               	goto	u1240
  1697  000C70                     l1116:
  1698  000C70  FFFF               	dw	65535	; assembler added errata NOP
  1699  000C72  500E               	movf	___fladd@aexp,w,c
  1700  000C74  B4D8               	btfsc	status,2,c
  1701  000C76  D020               	goto	l2400
  1702  000C78  0E01               	movlw	1
  1703  000C7A  2601               	addwf	___fladd@b,f,c
  1704  000C7C  0E00               	movlw	0
  1705  000C7E  2202               	addwfc	___fladd@b+1,f,c
  1706  000C80  2203               	addwfc	___fladd@b+2,f,c
  1707  000C82  2204               	addwfc	___fladd@b+3,f,c
  1708  000C84  A004               	btfss	___fladd@b+3,0,c
  1709  000C86  D018               	goto	l2400
  1710  000C88  C001  F009         	movff	___fladd@b,??___fladd
  1711  000C8C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  1712  000C90  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  1713  000C94  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  1714  000C98  340C               	rlcf	??___fladd+3,w,c
  1715  000C9A  320C               	rrcf	??___fladd+3,f,c
  1716  000C9C  320B               	rrcf	??___fladd+2,f,c
  1717  000C9E  320A               	rrcf	??___fladd+1,f,c
  1718  000CA0  3209               	rrcf	??___fladd,f,c
  1719  000CA2  C009  F001         	movff	??___fladd,___fladd@b
  1720  000CA6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  1721  000CAA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  1722  000CAE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  1723  000CB2  280F               	incf	___fladd@bexp,w,c
  1724  000CB4  A4D8               	btfss	status,2,c
  1725  000CB6  2A0F               	incf	___fladd@bexp,f,c
  1726  000CB8                     l2400:
  1727  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  1728  000CBA  280F               	incf	___fladd@bexp,w,c
  1729  000CBC  B4D8               	btfsc	status,2,c
  1730  000CBE  D003               	goto	u1300
  1731  000CC0  500F               	movf	___fladd@bexp,w,c
  1732  000CC2  A4D8               	btfss	status,2,c
  1733  000CC4  D00E               	goto	l2408
  1734  000CC6                     u1300:
  1735  000CC6  FFFF               	dw	65535	; assembler added errata NOP
  1736  000CC8  0E00               	movlw	0
  1737  000CCA  6E01               	movwf	___fladd@b,c
  1738  000CCC  0E00               	movlw	0
  1739  000CCE  6E02               	movwf	___fladd@b+1,c
  1740  000CD0  0E00               	movlw	0
  1741  000CD2  6E03               	movwf	___fladd@b+2,c
  1742  000CD4  0E00               	movlw	0
  1743  000CD6  6E04               	movwf	___fladd@b+3,c
  1744  000CD8  500F               	movf	___fladd@bexp,w,c
  1745  000CDA  A4D8               	btfss	status,2,c
  1746  000CDC  D002               	goto	l2408
  1747  000CDE  0E00               	movlw	0
  1748  000CE0  6E0D               	movwf	___fladd@signs,c
  1749  000CE2                     l2408:
  1750  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  1751  000CE4  A00F               	btfss	___fladd@bexp,0,c
  1752  000CE6  D002               	goto	l2412
  1753  000CE8  8E03               	bsf	___fladd@b+2,7,c
  1754  000CEA  D002               	goto	l2414
  1755  000CEC                     l2412:
  1756  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  1757  000CEE  9E03               	bcf	___fladd@b+2,7,c
  1758  000CF0                     l2414:
  1759  000CF0  FFFF               	dw	65535	; assembler added errata NOP
  1760  000CF2  90D8               	bcf	status,0,c
  1761  000CF4  300F               	rrcf	___fladd@bexp,w,c
  1762  000CF6  6E04               	movwf	___fladd@b+3,c
  1763  000CF8  BE0D               	btfsc	___fladd@signs,7,c
  1764  000CFA  8E04               	bsf	___fladd@b+3,7,c
  1765  000CFC  C001  F001         	movff	___fladd@b,?___fladd
  1766  000D00  C002  F002         	movff	___fladd@b+1,?___fladd+1
  1767  000D04  C003  F003         	movff	___fladd@b+2,?___fladd+2
  1768  000D08  C004  F004         	movff	___fladd@b+3,?___fladd+3
  1769  000D0C                     l1099:
  1770  000D0C  FFFF               	dw	65535	; assembler added errata NOP
  1771  000D0E  0012               	return		;funcret
  1772  000D10  FFFF               	dw	65535	; errata NOP
  1773  000D12                     __end_of___fladd:
  1774                           	opt callstack 0
  1775                           
  1776 ;; *************** function ___flmul *****************
  1777 ;; Defined at:
  1778 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  b               4   14[COMRAM] unsigned char 
  1781 ;;  a               4   18[COMRAM] unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  prod            4   33[COMRAM] struct .
  1784 ;;  grs             4   27[COMRAM] unsigned long 
  1785 ;;  temp            2   37[COMRAM] struct .
  1786 ;;  bexp            1   32[COMRAM] unsigned char 
  1787 ;;  aexp            1   31[COMRAM] unsigned char 
  1788 ;;  sign            1   26[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  4   14[COMRAM] unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0, prodl, prodh
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         8       0       0       0       0       0       0
  1799 ;;      Locals:        13       0       0       0       0       0       0
  1800 ;;      Temps:          4       0       0       0       0       0       0
  1801 ;;      Totals:        25       0       0       0       0       0       0
  1802 ;;Total ram usage:       25 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    2
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_get_temp
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text9
  1813  00064C                     __ptext9:
  1814                           	opt callstack 0
  1815  00064C                     ___flmul:
  1816                           	opt callstack 0
  1817  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1818                           
  1819                           ;incstack = 0
  1820  00064E  5012               	movf	___flmul@b+3,w,c
  1821  000650  0B80               	andlw	128
  1822  000652  6E1B               	movwf	___flmul@sign,c
  1823  000654  5012               	movf	___flmul@b+3,w,c
  1824  000656  2412               	addwf	___flmul@b+3,w,c
  1825  000658  6E21               	movwf	___flmul@bexp,c
  1826  00065A  BE11               	btfsc	___flmul@b+2,7,c
  1827  00065C  8021               	bsf	___flmul@bexp,0,c
  1828  00065E  5021               	movf	___flmul@bexp,w,c
  1829  000660  B4D8               	btfsc	status,2,c
  1830  000662  D00E               	goto	l2454
  1831  000664  2821               	incf	___flmul@bexp,w,c
  1832  000666  A4D8               	btfss	status,2,c
  1833  000668  D008               	goto	l2452
  1834  00066A  0E00               	movlw	0
  1835  00066C  6E0F               	movwf	___flmul@b,c
  1836  00066E  0E00               	movlw	0
  1837  000670  6E10               	movwf	___flmul@b+1,c
  1838  000672  0E00               	movlw	0
  1839  000674  6E11               	movwf	___flmul@b+2,c
  1840  000676  0E00               	movlw	0
  1841  000678  6E12               	movwf	___flmul@b+3,c
  1842  00067A                     l2452:
  1843  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1844  00067C  8E11               	bsf	___flmul@b+2,7,c
  1845  00067E  D009               	goto	l2456
  1846  000680                     l2454:
  1847  000680  FFFF               	dw	65535	; assembler added errata NOP
  1848  000682  0E00               	movlw	0
  1849  000684  6E0F               	movwf	___flmul@b,c
  1850  000686  0E00               	movlw	0
  1851  000688  6E10               	movwf	___flmul@b+1,c
  1852  00068A  0E00               	movlw	0
  1853  00068C  6E11               	movwf	___flmul@b+2,c
  1854  00068E  0E00               	movlw	0
  1855  000690  6E12               	movwf	___flmul@b+3,c
  1856  000692                     l2456:
  1857  000692  FFFF               	dw	65535	; assembler added errata NOP
  1858  000694  5016               	movf	___flmul@a+3,w,c
  1859  000696  0B80               	andlw	128
  1860  000698  1A1B               	xorwf	___flmul@sign,f,c
  1861  00069A  5016               	movf	___flmul@a+3,w,c
  1862  00069C  2416               	addwf	___flmul@a+3,w,c
  1863  00069E  6E20               	movwf	___flmul@aexp,c
  1864  0006A0  BE15               	btfsc	___flmul@a+2,7,c
  1865  0006A2  8020               	bsf	___flmul@aexp,0,c
  1866  0006A4  5020               	movf	___flmul@aexp,w,c
  1867  0006A6  B4D8               	btfsc	status,2,c
  1868  0006A8  D00E               	goto	l2472
  1869  0006AA  2820               	incf	___flmul@aexp,w,c
  1870  0006AC  A4D8               	btfss	status,2,c
  1871  0006AE  D008               	goto	l2470
  1872  0006B0  0E00               	movlw	0
  1873  0006B2  6E13               	movwf	___flmul@a,c
  1874  0006B4  0E00               	movlw	0
  1875  0006B6  6E14               	movwf	___flmul@a+1,c
  1876  0006B8  0E00               	movlw	0
  1877  0006BA  6E15               	movwf	___flmul@a+2,c
  1878  0006BC  0E00               	movlw	0
  1879  0006BE  6E16               	movwf	___flmul@a+3,c
  1880  0006C0                     l2470:
  1881  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1882  0006C2  8E15               	bsf	___flmul@a+2,7,c
  1883  0006C4  D009               	goto	l1176
  1884  0006C6                     l2472:
  1885  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1886  0006C8  0E00               	movlw	0
  1887  0006CA  6E13               	movwf	___flmul@a,c
  1888  0006CC  0E00               	movlw	0
  1889  0006CE  6E14               	movwf	___flmul@a+1,c
  1890  0006D0  0E00               	movlw	0
  1891  0006D2  6E15               	movwf	___flmul@a+2,c
  1892  0006D4  0E00               	movlw	0
  1893  0006D6  6E16               	movwf	___flmul@a+3,c
  1894  0006D8                     l1176:
  1895  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1896  0006DA  5020               	movf	___flmul@aexp,w,c
  1897  0006DC  B4D8               	btfsc	status,2,c
  1898  0006DE  D003               	goto	u1430
  1899  0006E0  5021               	movf	___flmul@bexp,w,c
  1900  0006E2  A4D8               	btfss	status,2,c
  1901  0006E4  D00A               	goto	l2480
  1902  0006E6                     u1430:
  1903  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  1904  0006E8  0E00               	movlw	0
  1905  0006EA  6E0F               	movwf	?___flmul,c
  1906  0006EC  0E00               	movlw	0
  1907  0006EE  6E10               	movwf	?___flmul+1,c
  1908  0006F0  0E00               	movlw	0
  1909  0006F2  6E11               	movwf	?___flmul+2,c
  1910  0006F4  0E00               	movlw	0
  1911  0006F6  6E12               	movwf	?___flmul+3,c
  1912  0006F8  D167               	goto	l1180
  1913  0006FA                     l2480:
  1914  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  1915  0006FC  5015               	movf	___flmul@a+2,w,c
  1916  0006FE  020F               	mulwf	___flmul@b,c
  1917  000700  CFF3 F026          	movff	prodl,___flmul@temp
  1918  000704  CFF4 F027          	movff	prodh,___flmul@temp+1
  1919  000708  5026               	movf	___flmul@temp,w,c
  1920  00070A  6E1C               	movwf	___flmul@grs,c
  1921  00070C  6A1D               	clrf	___flmul@grs+1,c
  1922  00070E  6A1E               	clrf	___flmul@grs+2,c
  1923  000710  6A1F               	clrf	___flmul@grs+3,c
  1924  000712  5027               	movf	___flmul@temp+1,w,c
  1925  000714  6E22               	movwf	___flmul@prod,c
  1926  000716  6A23               	clrf	___flmul@prod+1,c
  1927  000718  6A24               	clrf	___flmul@prod+2,c
  1928  00071A  6A25               	clrf	___flmul@prod+3,c
  1929  00071C  5014               	movf	___flmul@a+1,w,c
  1930  00071E  0210               	mulwf	___flmul@b+1,c
  1931  000720  CFF3 F026          	movff	prodl,___flmul@temp
  1932  000724  CFF4 F027          	movff	prodh,___flmul@temp+1
  1933  000728  5026               	movf	___flmul@temp,w,c
  1934  00072A  261C               	addwf	___flmul@grs,f,c
  1935  00072C  0E00               	movlw	0
  1936  00072E  221D               	addwfc	___flmul@grs+1,f,c
  1937  000730  221E               	addwfc	___flmul@grs+2,f,c
  1938  000732  221F               	addwfc	___flmul@grs+3,f,c
  1939  000734  5027               	movf	___flmul@temp+1,w,c
  1940  000736  2622               	addwf	___flmul@prod,f,c
  1941  000738  0E00               	movlw	0
  1942  00073A  2223               	addwfc	___flmul@prod+1,f,c
  1943  00073C  2224               	addwfc	___flmul@prod+2,f,c
  1944  00073E  2225               	addwfc	___flmul@prod+3,f,c
  1945  000740  5013               	movf	___flmul@a,w,c
  1946  000742  0211               	mulwf	___flmul@b+2,c
  1947  000744  CFF3 F026          	movff	prodl,___flmul@temp
  1948  000748  CFF4 F027          	movff	prodh,___flmul@temp+1
  1949  00074C  5026               	movf	___flmul@temp,w,c
  1950  00074E  261C               	addwf	___flmul@grs,f,c
  1951  000750  0E00               	movlw	0
  1952  000752  221D               	addwfc	___flmul@grs+1,f,c
  1953  000754  221E               	addwfc	___flmul@grs+2,f,c
  1954  000756  221F               	addwfc	___flmul@grs+3,f,c
  1955  000758  5027               	movf	___flmul@temp+1,w,c
  1956  00075A  2622               	addwf	___flmul@prod,f,c
  1957  00075C  0E00               	movlw	0
  1958  00075E  2223               	addwfc	___flmul@prod+1,f,c
  1959  000760  2224               	addwfc	___flmul@prod+2,f,c
  1960  000762  2225               	addwfc	___flmul@prod+3,f,c
  1961  000764  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1962  000768  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1963  00076C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1964  000770  6A1C               	clrf	___flmul@grs,c
  1965  000772  5013               	movf	___flmul@a,w,c
  1966  000774  0210               	mulwf	___flmul@b+1,c
  1967  000776  CFF3 F026          	movff	prodl,___flmul@temp
  1968  00077A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1969  00077E  5026               	movf	___flmul@temp,w,c
  1970  000780  261C               	addwf	___flmul@grs,f,c
  1971  000782  5027               	movf	___flmul@temp+1,w,c
  1972  000784  221D               	addwfc	___flmul@grs+1,f,c
  1973  000786  0E00               	movlw	0
  1974  000788  221E               	addwfc	___flmul@grs+2,f,c
  1975  00078A  0E00               	movlw	0
  1976  00078C  221F               	addwfc	___flmul@grs+3,f,c
  1977  00078E  5014               	movf	___flmul@a+1,w,c
  1978  000790  020F               	mulwf	___flmul@b,c
  1979  000792  CFF3 F026          	movff	prodl,___flmul@temp
  1980  000796  CFF4 F027          	movff	prodh,___flmul@temp+1
  1981  00079A  5026               	movf	___flmul@temp,w,c
  1982  00079C  261C               	addwf	___flmul@grs,f,c
  1983  00079E  5027               	movf	___flmul@temp+1,w,c
  1984  0007A0  221D               	addwfc	___flmul@grs+1,f,c
  1985  0007A2  0E00               	movlw	0
  1986  0007A4  221E               	addwfc	___flmul@grs+2,f,c
  1987  0007A6  0E00               	movlw	0
  1988  0007A8  221F               	addwfc	___flmul@grs+3,f,c
  1989  0007AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1990  0007AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1991  0007B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1992  0007B6  6A1C               	clrf	___flmul@grs,c
  1993  0007B8  5013               	movf	___flmul@a,w,c
  1994  0007BA  020F               	mulwf	___flmul@b,c
  1995  0007BC  CFF3 F026          	movff	prodl,___flmul@temp
  1996  0007C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  1997  0007C4  5026               	movf	___flmul@temp,w,c
  1998  0007C6  261C               	addwf	___flmul@grs,f,c
  1999  0007C8  5027               	movf	___flmul@temp+1,w,c
  2000  0007CA  221D               	addwfc	___flmul@grs+1,f,c
  2001  0007CC  0E00               	movlw	0
  2002  0007CE  221E               	addwfc	___flmul@grs+2,f,c
  2003  0007D0  0E00               	movlw	0
  2004  0007D2  221F               	addwfc	___flmul@grs+3,f,c
  2005  0007D4  5015               	movf	___flmul@a+2,w,c
  2006  0007D6  0210               	mulwf	___flmul@b+1,c
  2007  0007D8  CFF3 F026          	movff	prodl,___flmul@temp
  2008  0007DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2009  0007E0  5026               	movf	___flmul@temp,w,c
  2010  0007E2  2622               	addwf	___flmul@prod,f,c
  2011  0007E4  5027               	movf	___flmul@temp+1,w,c
  2012  0007E6  2223               	addwfc	___flmul@prod+1,f,c
  2013  0007E8  0E00               	movlw	0
  2014  0007EA  2224               	addwfc	___flmul@prod+2,f,c
  2015  0007EC  0E00               	movlw	0
  2016  0007EE  2225               	addwfc	___flmul@prod+3,f,c
  2017  0007F0  5014               	movf	___flmul@a+1,w,c
  2018  0007F2  0211               	mulwf	___flmul@b+2,c
  2019  0007F4  CFF3 F026          	movff	prodl,___flmul@temp
  2020  0007F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2021  0007FC  5026               	movf	___flmul@temp,w,c
  2022  0007FE  2622               	addwf	___flmul@prod,f,c
  2023  000800  5027               	movf	___flmul@temp+1,w,c
  2024  000802  2223               	addwfc	___flmul@prod+1,f,c
  2025  000804  0E00               	movlw	0
  2026  000806  2224               	addwfc	___flmul@prod+2,f,c
  2027  000808  0E00               	movlw	0
  2028  00080A  2225               	addwfc	___flmul@prod+3,f,c
  2029  00080C  5015               	movf	___flmul@a+2,w,c
  2030  00080E  0211               	mulwf	___flmul@b+2,c
  2031  000810  CFF3 F026          	movff	prodl,___flmul@temp
  2032  000814  CFF4 F027          	movff	prodh,___flmul@temp+1
  2033  000818  5026               	movf	___flmul@temp,w,c
  2034  00081A  6E17               	movwf	??___flmul& (0+255),c
  2035  00081C  5027               	movf	___flmul@temp+1,w,c
  2036  00081E  6E18               	movwf	(??___flmul+1)& (0+255),c
  2037  000820  6A19               	clrf	(??___flmul+2)& (0+255),c
  2038  000822  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2039  000824  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2040  000828  C018  F019         	movff	??___flmul+1,??___flmul+2
  2041  00082C  C017  F018         	movff	??___flmul,??___flmul+1
  2042  000830  6A17               	clrf	??___flmul,c
  2043  000832  5017               	movf	??___flmul,w,c
  2044  000834  2622               	addwf	___flmul@prod,f,c
  2045  000836  5018               	movf	??___flmul+1,w,c
  2046  000838  2223               	addwfc	___flmul@prod+1,f,c
  2047  00083A  5019               	movf	??___flmul+2,w,c
  2048  00083C  2224               	addwfc	___flmul@prod+2,f,c
  2049  00083E  501A               	movf	??___flmul+3,w,c
  2050  000840  2225               	addwfc	___flmul@prod+3,f,c
  2051  000842  C01C  F017         	movff	___flmul@grs,??___flmul
  2052  000846  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2053  00084A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2054  00084E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2055  000852  0E19               	movlw	25
  2056  000854  D006               	goto	u1440
  2057  000856                     u1445:
  2058  000856  FFFF               	dw	65535	; assembler added errata NOP
  2059  000858  90D8               	bcf	status,0,c
  2060  00085A  321A               	rrcf	??___flmul+3,f,c
  2061  00085C  3219               	rrcf	??___flmul+2,f,c
  2062  00085E  3218               	rrcf	??___flmul+1,f,c
  2063  000860  3217               	rrcf	??___flmul,f,c
  2064  000862                     u1440:
  2065  000862  FFFF               	dw	65535	; assembler added errata NOP
  2066  000864  2EE8               	decfsz	wreg,f,c
  2067  000866  D7F7               	goto	u1445
  2068  000868  5017               	movf	??___flmul,w,c
  2069  00086A  2622               	addwf	___flmul@prod,f,c
  2070  00086C  5018               	movf	??___flmul+1,w,c
  2071  00086E  2223               	addwfc	___flmul@prod+1,f,c
  2072  000870  5019               	movf	??___flmul+2,w,c
  2073  000872  2224               	addwfc	___flmul@prod+2,f,c
  2074  000874  501A               	movf	??___flmul+3,w,c
  2075  000876  2225               	addwfc	___flmul@prod+3,f,c
  2076  000878  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2077  00087C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2078  000880  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2079  000884  6A1C               	clrf	___flmul@grs,c
  2080  000886  5020               	movf	___flmul@aexp,w,c
  2081  000888  C021  F017         	movff	___flmul@bexp,??___flmul
  2082  00088C  6A18               	clrf	(??___flmul+1)& (0+255),c
  2083  00088E  2617               	addwf	??___flmul,f,c
  2084  000890  0E00               	movlw	0
  2085  000892  2218               	addwfc	??___flmul+1,f,c
  2086  000894  0E82               	movlw	130
  2087  000896  2417               	addwf	??___flmul,w,c
  2088  000898  6E26               	movwf	___flmul@temp,c
  2089  00089A  0EFF               	movlw	255
  2090  00089C  2018               	addwfc	??___flmul+1,w,c
  2091  00089E  6E27               	movwf	___flmul@temp+1,c
  2092  0008A0  D010               	goto	l2528
  2093  0008A2                     l2522:
  2094  0008A2  FFFF               	dw	65535	; assembler added errata NOP
  2095  0008A4  90D8               	bcf	status,0,c
  2096  0008A6  3622               	rlcf	___flmul@prod,f,c
  2097  0008A8  3623               	rlcf	___flmul@prod+1,f,c
  2098  0008AA  3624               	rlcf	___flmul@prod+2,f,c
  2099  0008AC  3625               	rlcf	___flmul@prod+3,f,c
  2100  0008AE  BE1F               	btfsc	___flmul@grs+3,7,c
  2101  0008B0  8022               	bsf	___flmul@prod,0,c
  2102  0008B2  90D8               	bcf	status,0,c
  2103  0008B4  361C               	rlcf	___flmul@grs,f,c
  2104  0008B6  361D               	rlcf	___flmul@grs+1,f,c
  2105  0008B8  361E               	rlcf	___flmul@grs+2,f,c
  2106  0008BA  361F               	rlcf	___flmul@grs+3,f,c
  2107  0008BC  0626               	decf	___flmul@temp,f,c
  2108  0008BE  A0D8               	btfss	status,0,c
  2109  0008C0  0627               	decf	___flmul@temp+1,f,c
  2110  0008C2                     l2528:
  2111  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  2112  0008C4  AE24               	btfss	___flmul@prod+2,7,c
  2113  0008C6  D7ED               	goto	l2522
  2114  0008C8  0E00               	movlw	0
  2115  0008CA  6E20               	movwf	___flmul@aexp,c
  2116  0008CC  AE1F               	btfss	___flmul@grs+3,7,c
  2117  0008CE  D019               	goto	l1185
  2118  0008D0  0EFF               	movlw	255
  2119  0008D2  141C               	andwf	___flmul@grs,w,c
  2120  0008D4  6E17               	movwf	??___flmul& (0+255),c
  2121  0008D6  0EFF               	movlw	255
  2122  0008D8  141D               	andwf	___flmul@grs+1,w,c
  2123  0008DA  6E18               	movwf	(??___flmul+1)& (0+255),c
  2124  0008DC  0EFF               	movlw	255
  2125  0008DE  141E               	andwf	___flmul@grs+2,w,c
  2126  0008E0  6E19               	movwf	(??___flmul+2)& (0+255),c
  2127  0008E2  0E7F               	movlw	127
  2128  0008E4  141F               	andwf	___flmul@grs+3,w,c
  2129  0008E6  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2130  0008E8  5017               	movf	??___flmul,w,c
  2131  0008EA  1018               	iorwf	??___flmul+1,w,c
  2132  0008EC  1019               	iorwf	??___flmul+2,w,c
  2133  0008EE  101A               	iorwf	??___flmul+3,w,c
  2134  0008F0  B4D8               	btfsc	status,2,c
  2135  0008F2  D004               	goto	l1186
  2136  0008F4                     u1480:
  2137  0008F4  FFFF               	dw	65535	; assembler added errata NOP
  2138  0008F6  0E01               	movlw	1
  2139  0008F8  6E20               	movwf	___flmul@aexp,c
  2140  0008FA  D003               	goto	l1185
  2141  0008FC                     l1186:
  2142  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  2143  0008FE  B022               	btfsc	___flmul@prod,0,c
  2144  000900  D7F9               	goto	u1480
  2145  000902                     l1185:
  2146  000902  FFFF               	dw	65535	; assembler added errata NOP
  2147  000904  5020               	movf	___flmul@aexp,w,c
  2148  000906  B4D8               	btfsc	status,2,c
  2149  000908  D01F               	goto	l2548
  2150  00090A  0E01               	movlw	1
  2151  00090C  2622               	addwf	___flmul@prod,f,c
  2152  00090E  0E00               	movlw	0
  2153  000910  2223               	addwfc	___flmul@prod+1,f,c
  2154  000912  2224               	addwfc	___flmul@prod+2,f,c
  2155  000914  2225               	addwfc	___flmul@prod+3,f,c
  2156  000916  A025               	btfss	___flmul@prod+3,0,c
  2157  000918  D017               	goto	l2548
  2158  00091A  C022  F017         	movff	___flmul@prod,??___flmul
  2159  00091E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2160  000922  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2161  000926  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2162  00092A  341A               	rlcf	??___flmul+3,w,c
  2163  00092C  321A               	rrcf	??___flmul+3,f,c
  2164  00092E  3219               	rrcf	??___flmul+2,f,c
  2165  000930  3218               	rrcf	??___flmul+1,f,c
  2166  000932  3217               	rrcf	??___flmul,f,c
  2167  000934  C017  F022         	movff	??___flmul,___flmul@prod
  2168  000938  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2169  00093C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2170  000940  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2171  000944  4A26               	infsnz	___flmul@temp,f,c
  2172  000946  2A27               	incf	___flmul@temp+1,f,c
  2173  000948                     l2548:
  2174  000948  FFFF               	dw	65535	; assembler added errata NOP
  2175  00094A  BE27               	btfsc	___flmul@temp+1,7,c
  2176  00094C  D00D               	goto	l2552
  2177  00094E  5027               	movf	___flmul@temp+1,w,c
  2178  000950  E103               	bnz	u1520
  2179  000952  2826               	incf	___flmul@temp,w,c
  2180  000954  A0D8               	btfss	status,0,c
  2181  000956  D008               	goto	l2552
  2182  000958                     u1520:
  2183  000958  0E00               	movlw	0
  2184  00095A  6E22               	movwf	___flmul@prod,c
  2185  00095C  0E00               	movlw	0
  2186  00095E  6E23               	movwf	___flmul@prod+1,c
  2187  000960  0E80               	movlw	128
  2188  000962  6E24               	movwf	___flmul@prod+2,c
  2189  000964  0E7F               	movlw	127
  2190  000966  D023               	goto	L4
  2191  000968                     l2552:
  2192  000968  FFFF               	dw	65535	; assembler added errata NOP
  2193  00096A  BE27               	btfsc	___flmul@temp+1,7,c
  2194  00096C  D005               	goto	u1530
  2195  00096E  5027               	movf	___flmul@temp+1,w,c
  2196  000970  E10F               	bnz	l1193
  2197  000972  0426               	decf	___flmul@temp,w,c
  2198  000974  B0D8               	btfsc	status,0,c
  2199  000976  D00C               	goto	l1193
  2200  000978                     u1530:
  2201  000978  FFFF               	dw	65535	; assembler added errata NOP
  2202  00097A  0E00               	movlw	0
  2203  00097C  6E22               	movwf	___flmul@prod,c
  2204  00097E  0E00               	movlw	0
  2205  000980  6E23               	movwf	___flmul@prod+1,c
  2206  000982  0E00               	movlw	0
  2207  000984  6E24               	movwf	___flmul@prod+2,c
  2208  000986  0E00               	movlw	0
  2209  000988  6E25               	movwf	___flmul@prod+3,c
  2210  00098A  0E00               	movlw	0
  2211  00098C  6E1B               	movwf	___flmul@sign,c
  2212  00098E  D011               	goto	l2564
  2213  000990                     l1193:
  2214  000990  FFFF               	dw	65535	; assembler added errata NOP
  2215  000992  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2216  000996  0EFF               	movlw	255
  2217  000998  1622               	andwf	___flmul@prod,f,c
  2218  00099A  0EFF               	movlw	255
  2219  00099C  1623               	andwf	___flmul@prod+1,f,c
  2220  00099E  0E7F               	movlw	127
  2221  0009A0  1624               	andwf	___flmul@prod+2,f,c
  2222  0009A2  0E00               	movlw	0
  2223  0009A4  1625               	andwf	___flmul@prod+3,f,c
  2224  0009A6  B021               	btfsc	___flmul@bexp,0,c
  2225  0009A8  8E24               	bsf	___flmul@prod+2,7,c
  2226  0009AA  90D8               	bcf	status,0,c
  2227  0009AC  3021               	rrcf	___flmul@bexp,w,c
  2228  0009AE                     L4:
  2229  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  2230  0009B0  6E25               	movwf	___flmul@prod+3,c
  2231  0009B2                     l2564:
  2232  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  2233  0009B4  501B               	movf	___flmul@sign,w,c
  2234  0009B6  1225               	iorwf	___flmul@prod+3,f,c
  2235  0009B8  C022  F00F         	movff	___flmul@prod,?___flmul
  2236  0009BC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2237  0009C0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2238  0009C4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2239  0009C8                     l1180:
  2240  0009C8  FFFF               	dw	65535	; assembler added errata NOP
  2241  0009CA  0012               	return		;funcret
  2242  0009CC  FFFF               	dw	65535	; errata NOP
  2243  0009CE                     __end_of___flmul:
  2244                           	opt callstack 0
  2245                           
  2246 ;; *************** function _ADC_Read *****************
  2247 ;; Defined at:
  2248 ;;		line 28 in file "adc.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  channel         1    wreg     unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  channel         1    4[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    0[COMRAM] unsigned int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2262 ;;      Params:         2       0       0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0       0       0
  2264 ;;      Temps:          2       0       0       0       0       0       0
  2265 ;;      Totals:         5       0       0       0       0       0       0
  2266 ;;Total ram usage:        5 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_get_temp
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text10
  2277  0010A6                     __ptext10:
  2278                           	opt callstack 0
  2279  0010A6                     _ADC_Read:
  2280                           	opt callstack 0
  2281  0010A6  FFFF               	dw	65535	; assembler added errata NOP
  2282                           
  2283                           ;incstack = 0
  2284                           ;ADC_Read@channel stored from wreg
  2285  0010A8  6E05               	movwf	ADC_Read@channel,c
  2286                           
  2287                           ;adc.c: 29:  if(channel > 7)
  2288  0010AA  0E07               	movlw	7
  2289  0010AC  6405               	cpfsgt	ADC_Read@channel,c
  2290  0010AE  D005               	goto	l2430
  2291                           
  2292                           ;adc.c: 30:  return 0;
  2293  0010B0  0E00               	movlw	0
  2294  0010B2  6E02               	movwf	?_ADC_Read+1,c
  2295  0010B4  0E00               	movlw	0
  2296  0010B6  6E01               	movwf	?_ADC_Read,c
  2297  0010B8  D01D               	goto	l285
  2298  0010BA                     l2430:
  2299  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  2300                           
  2301                           ;adc.c: 31:  ADCON0 &= 0xC5;
  2302  0010BC  0EC5               	movlw	197
  2303  0010BE  16C2               	andwf	4034,f,c	;volatile
  2304                           
  2305                           ;adc.c: 32:  ADCON0 |= channel<<3;
  2306  0010C0  3805               	swapf	ADC_Read@channel,w,c	;volatile
  2307  0010C2  42E8               	rrncf	wreg,f,c
  2308  0010C4  0BF8               	andlw	248
  2309  0010C6  12C2               	iorwf	4034,f,c	;volatile
  2310                           
  2311                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  2312  0010C8  0E08               	movlw	8
  2313  0010CA  6E03               	movwf	??_ADC_Read& (0+255),c
  2314  0010CC  0ECB               	movlw	203
  2315  0010CE                     u1747:
  2316  0010CE  FFFF               	dw	65535	; errata NOP
  2317  0010D0  2EE8               	decfsz	wreg,f,c
  2318  0010D2  D7FD               	bra	u1747
  2319  0010D4  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  2320  0010D6  D7FB               	bra	u1747
  2321  0010D8  D000               	nop2	
  2322                           
  2323                           ;adc.c: 34:  GO_nDONE = 1;
  2324  0010DA  84C2               	bsf	4034,2,c	;volatile
  2325  0010DC                     l286:
  2326  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  2327  0010DE  B4C2               	btfsc	4034,2,c	;volatile
  2328  0010E0  D7FD               	goto	l286
  2329                           
  2330                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  2331  0010E2  50C4               	movf	4036,w,c	;volatile
  2332  0010E4  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  2333  0010E6  6A03               	clrf	??_ADC_Read& (0+255),c
  2334  0010E8  50C3               	movf	4035,w,c	;volatile
  2335  0010EA  2403               	addwf	??_ADC_Read,w,c
  2336  0010EC  6E01               	movwf	?_ADC_Read,c
  2337  0010EE  0E00               	movlw	0
  2338  0010F0  2004               	addwfc	??_ADC_Read+1,w,c
  2339  0010F2  6E02               	movwf	?_ADC_Read+1,c
  2340  0010F4                     l285:
  2341  0010F4  FFFF               	dw	65535	; assembler added errata NOP
  2342  0010F6  0012               	return		;funcret
  2343  0010F8  FFFF               	dw	65535	; errata NOP
  2344  0010FA                     __end_of_ADC_Read:
  2345                           	opt callstack 0
  2346                           
  2347 ;; *************** function _ADC_Init *****************
  2348 ;; Defined at:
  2349 ;;		line 23 in file "adc.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2363 ;;      Params:         0       0       0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    2
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_get_temp
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text11
  2378  001212                     __ptext11:
  2379                           	opt callstack 0
  2380  001212                     _ADC_Init:
  2381                           	opt callstack 0
  2382  001212  FFFF               	dw	65535	; assembler added errata NOP
  2383                           
  2384                           ;adc.c: 24:  ADCON0 = 0x81;
  2385                           
  2386                           ;incstack = 0
  2387  001214  0E81               	movlw	129
  2388  001216  6EC2               	movwf	4034,c	;volatile
  2389                           
  2390                           ;adc.c: 25:  ADCON1 = 0x80;
  2391  001218  0E80               	movlw	128
  2392  00121A  6EC1               	movwf	4033,c	;volatile
  2393  00121C  0012               	return		;funcret
  2394  00121E  FFFF               	dw	65535	; errata NOP
  2395  001220                     __end_of_ADC_Init:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function ___fltol *****************
  2399 ;; Defined at:
  2400 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  f1              4   61[COMRAM] void 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  exp1            1   70[COMRAM] unsigned char 
  2405 ;;  sign1           1   69[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  4   61[COMRAM] long 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2415 ;;      Params:         4       0       0       0       0       0       0
  2416 ;;      Locals:         2       0       0       0       0       0       0
  2417 ;;      Temps:          4       0       0       0       0       0       0
  2418 ;;      Totals:        10       0       0       0       0       0       0
  2419 ;;Total ram usage:       10 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    2
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text12
  2430  000E6E                     __ptext12:
  2431                           	opt callstack 0
  2432  000E6E                     ___fltol:
  2433                           	opt callstack 0
  2434  000E6E  FFFF               	dw	65535	; assembler added errata NOP
  2435                           
  2436                           ;incstack = 0
  2437  000E70  3440               	rlcf	___fltol@f1+2,w,c
  2438  000E72  3441               	rlcf	___fltol@f1+3,w,c
  2439  000E74  6E47               	movwf	___fltol@exp1,c
  2440  000E76  5047               	movf	___fltol@exp1,w,c
  2441  000E78  A4D8               	btfss	status,2,c
  2442  000E7A  D00A               	goto	l2666
  2443  000E7C                     u1650:
  2444  000E7C  FFFF               	dw	65535	; assembler added errata NOP
  2445  000E7E  0E00               	movlw	0
  2446  000E80  6E3E               	movwf	?___fltol,c
  2447  000E82  0E00               	movlw	0
  2448  000E84  6E3F               	movwf	?___fltol+1,c
  2449  000E86  0E00               	movlw	0
  2450  000E88  6E40               	movwf	?___fltol+2,c
  2451  000E8A  0E00               	movlw	0
  2452  000E8C  6E41               	movwf	?___fltol+3,c
  2453  000E8E  D056               	goto	l859
  2454  000E90                     l2666:
  2455  000E90  FFFF               	dw	65535	; assembler added errata NOP
  2456  000E92  C03E  F042         	movff	___fltol@f1,??___fltol
  2457  000E96  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  2458  000E9A  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  2459  000E9E  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  2460  000EA2  0E20               	movlw	32
  2461  000EA4  D006               	goto	u1660
  2462  000EA6                     u1665:
  2463  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  2464  000EA8  90D8               	bcf	status,0,c
  2465  000EAA  3245               	rrcf	??___fltol+3,f,c
  2466  000EAC  3244               	rrcf	??___fltol+2,f,c
  2467  000EAE  3243               	rrcf	??___fltol+1,f,c
  2468  000EB0  3242               	rrcf	??___fltol,f,c
  2469  000EB2                     u1660:
  2470  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  2471  000EB4  2EE8               	decfsz	wreg,f,c
  2472  000EB6  D7F7               	goto	u1665
  2473  000EB8  5042               	movf	??___fltol,w,c
  2474  000EBA  6E46               	movwf	___fltol@sign1,c
  2475  000EBC  8E40               	bsf	___fltol@f1+2,7,c
  2476  000EBE  0EFF               	movlw	255
  2477  000EC0  163E               	andwf	___fltol@f1,f,c
  2478  000EC2  0EFF               	movlw	255
  2479  000EC4  163F               	andwf	___fltol@f1+1,f,c
  2480  000EC6  0EFF               	movlw	255
  2481  000EC8  1640               	andwf	___fltol@f1+2,f,c
  2482  000ECA  0E00               	movlw	0
  2483  000ECC  1641               	andwf	___fltol@f1+3,f,c
  2484  000ECE  0E96               	movlw	150
  2485  000ED0  5E47               	subwf	___fltol@exp1,f,c
  2486  000ED2  AE47               	btfss	___fltol@exp1,7,c
  2487  000ED4  D00E               	goto	l2686
  2488  000ED6  5047               	movf	___fltol@exp1,w,c
  2489  000ED8  0A80               	xorlw	128
  2490  000EDA  0F97               	addlw	151
  2491  000EDC  A0D8               	btfss	status,0,c
  2492  000EDE  D7CE               	goto	u1650
  2493  000EE0                     l2682:
  2494  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2495  000EE2  90D8               	bcf	status,0,c
  2496  000EE4  3241               	rrcf	___fltol@f1+3,f,c
  2497  000EE6  3240               	rrcf	___fltol@f1+2,f,c
  2498  000EE8  323F               	rrcf	___fltol@f1+1,f,c
  2499  000EEA  323E               	rrcf	___fltol@f1,f,c
  2500  000EEC  3E47               	incfsz	___fltol@exp1,f,c
  2501  000EEE  D7F8               	goto	l2682
  2502  000EF0  D010               	goto	u1700
  2503  000EF2                     l2686:
  2504  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  2505  000EF4  0E1F               	movlw	31
  2506  000EF6  6447               	cpfsgt	___fltol@exp1,c
  2507  000EF8  D008               	goto	l2694
  2508  000EFA  D7C0               	goto	u1650
  2509  000EFC                     l2692:
  2510  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  2511  000EFE  90D8               	bcf	status,0,c
  2512  000F00  363E               	rlcf	___fltol@f1,f,c
  2513  000F02  363F               	rlcf	___fltol@f1+1,f,c
  2514  000F04  3640               	rlcf	___fltol@f1+2,f,c
  2515  000F06  3641               	rlcf	___fltol@f1+3,f,c
  2516  000F08  0647               	decf	___fltol@exp1,f,c
  2517  000F0A                     l2694:
  2518  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2519  000F0C  5047               	movf	___fltol@exp1,w,c
  2520  000F0E  A4D8               	btfss	status,2,c
  2521  000F10  D7F5               	goto	l2692
  2522  000F12                     u1700:
  2523  000F12  FFFF               	dw	65535	; assembler added errata NOP
  2524  000F14  5046               	movf	___fltol@sign1,w,c
  2525  000F16  B4D8               	btfsc	status,2,c
  2526  000F18  D008               	goto	l2700
  2527  000F1A  1E41               	comf	___fltol@f1+3,f,c
  2528  000F1C  1E40               	comf	___fltol@f1+2,f,c
  2529  000F1E  1E3F               	comf	___fltol@f1+1,f,c
  2530  000F20  6C3E               	negf	___fltol@f1,c
  2531  000F22  0E00               	movlw	0
  2532  000F24  223F               	addwfc	___fltol@f1+1,f,c
  2533  000F26  2240               	addwfc	___fltol@f1+2,f,c
  2534  000F28  2241               	addwfc	___fltol@f1+3,f,c
  2535  000F2A                     l2700:
  2536  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  2537  000F2C  C03E  F03E         	movff	___fltol@f1,?___fltol
  2538  000F30  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  2539  000F34  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  2540  000F38  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  2541  000F3C                     l859:
  2542  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  2543  000F3E  0012               	return		;funcret
  2544  000F40  FFFF               	dw	65535	; errata NOP
  2545  000F42                     __end_of___fltol:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _Timer0_StartTimer *****************
  2549 ;; Defined at:
  2550 ;;		line 21 in file "timer.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2  117[None  ] int 
  2557 ;; Registers used:
  2558 ;;		None
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2564 ;;      Params:         0       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    2
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text13
  2579  001220                     __ptext13:
  2580                           	opt callstack 0
  2581  001220                     _Timer0_StartTimer:
  2582                           	opt callstack 0
  2583  001220  FFFF               	dw	65535	; assembler added errata NOP
  2584                           
  2585                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2586                           
  2587                           ;incstack = 0
  2588  001222  8ED5               	bsf	4053,7,c	;volatile
  2589                           
  2590                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  2591  001224  0012               	return		;funcret
  2592  001226  FFFF               	dw	65535	; errata NOP
  2593  001228                     __end_of_Timer0_StartTimer:
  2594                           	opt callstack 0
  2595                           
  2596 ;; *************** function _Timer0_Init *****************
  2597 ;; Defined at:
  2598 ;;		line 8 in file "timer.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2612 ;;      Params:         0       0       0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    2
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text14
  2627  00118E                     __ptext14:
  2628                           	opt callstack 0
  2629  00118E                     _Timer0_Init:
  2630                           	opt callstack 0
  2631  00118E  FFFF               	dw	65535	; assembler added errata NOP
  2632                           
  2633                           ;timer.c: 9:  time_ms = 0;
  2634                           
  2635                           ;incstack = 0
  2636  001190  0E00               	movlw	0
  2637  001192  6E57               	movwf	_time_ms,c	;volatile
  2638  001194  0E00               	movlw	0
  2639  001196  6E58               	movwf	_time_ms+1,c	;volatile
  2640  001198  0E00               	movlw	0
  2641  00119A  6E59               	movwf	_time_ms+2,c	;volatile
  2642  00119C  0E00               	movlw	0
  2643  00119E  6E5A               	movwf	_time_ms+3,c	;volatile
  2644                           
  2645                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  2646  0011A0  9CD5               	bcf	4053,6,c	;volatile
  2647                           
  2648                           ;timer.c: 11:  TMR0H = 0xFF;
  2649  0011A2  68D7               	setf	4055,c	;volatile
  2650                           
  2651                           ;timer.c: 12:  TMR0L = 0x34;
  2652  0011A4  0E34               	movlw	52
  2653  0011A6  6ED6               	movwf	4054,c	;volatile
  2654                           
  2655                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  2656  0011A8  94F2               	bcf	4082,2,c	;volatile
  2657                           
  2658                           ;timer.c: 14:  T0CON = 0x00;
  2659  0011AA  0E00               	movlw	0
  2660  0011AC  6ED5               	movwf	4053,c	;volatile
  2661  0011AE  0012               	return		;funcret
  2662  0011B0  FFFF               	dw	65535	; errata NOP
  2663  0011B2                     __end_of_Timer0_Init:
  2664                           	opt callstack 0
  2665                           
  2666 ;; *************** function _timingISR *****************
  2667 ;; Defined at:
  2668 ;;		line 31 in file "timer.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         0       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    1
  2689 ;; This function calls:
  2690 ;;		i2_Timer0_StartTimer
  2691 ;; This function is called by:
  2692 ;;		Interrupt level 2
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	intcode
  2697  000008                     __pintcode:
  2698                           	opt callstack 0
  2699  000008                     _timingISR:
  2700                           	opt callstack 0
  2701  000008  FFFF               	dw	65535	; assembler added errata NOP
  2702                           
  2703                           ;incstack = 0
  2704  00000A  8271               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2705                           
  2706                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  2707  00000C  B4F2               	btfsc	4082,2,c	;volatile
  2708  00000E  AAF2               	btfss	4082,5,c	;volatile
  2709  000010  D00C               	goto	i2l247
  2710                           
  2711                           ;timer.c: 33:   TMR0IF = 0;
  2712  000012  94F2               	bcf	4082,2,c	;volatile
  2713                           
  2714                           ;timer.c: 34:   time_ms++;
  2715  000014  0E01               	movlw	1
  2716  000016  2657               	addwf	_time_ms,f,c	;volatile
  2717  000018  0E00               	movlw	0
  2718  00001A  2258               	addwfc	_time_ms+1,f,c	;volatile
  2719  00001C  2259               	addwfc	_time_ms+2,f,c	;volatile
  2720  00001E  225A               	addwfc	_time_ms+3,f,c	;volatile
  2721                           
  2722                           ;timer.c: 35:   TMR0H = 0xFF;
  2723  000020  68D7               	setf	4055,c	;volatile
  2724                           
  2725                           ;timer.c: 36:   TMR0L = 0x34;
  2726  000022  0E34               	movlw	52
  2727  000024  6ED6               	movwf	4054,c	;volatile
  2728                           
  2729                           ;timer.c: 37:   Timer0_StartTimer();
  2730  000026  EC14  F009         	call	i2_Timer0_StartTimer	;wreg free
  2731  00002A                     i2l247:
  2732  00002A  FFFF               	dw	65535	; assembler added errata NOP
  2733  00002C  9271               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2734  00002E  0011               	retfie		f
  2735  000030  FFFF               	dw	65535	; errata NOP
  2736  000032                     __end_of_timingISR:
  2737                           	opt callstack 0
  2738                           
  2739 ;; *************** function i2_Timer0_StartTimer *****************
  2740 ;; Defined at:
  2741 ;;		line 21 in file "timer.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    0[None  ] int 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2755 ;;      Params:         0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_timingISR
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text16
  2769  001228                     __ptext16:
  2770                           	opt callstack 0
  2771  001228                     i2_Timer0_StartTimer:
  2772                           	opt callstack 0
  2773  001228  FFFF               	dw	65535	; assembler added errata NOP
  2774                           
  2775                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2776                           
  2777                           ;incstack = 0
  2778  00122A  8ED5               	bsf	4053,7,c	;volatile
  2779                           
  2780                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  2781  00122C  0012               	return		;funcret
  2782  00122E  FFFF               	dw	65535	; errata NOP
  2783  001230                     __end_ofi2_Timer0_StartTimer:
  2784                           	opt callstack 0
  2785                           
  2786                           	psect	rparam
  2787  0000                     
  2788                           	psect	temp
  2789  000071                     btemp:
  2790                           	opt callstack 0
  2791  000071                     	ds	1
  2792  0000                     int$flags	set	btemp
  2793  0000                     wtemp8	set	btemp+1
  2794  0000                     ttemp5	set	btemp+1
  2795  0000                     ttemp6	set	btemp+4
  2796  0000                     ttemp7	set	btemp+8
  2797                           tosu	equ	0xFFF
  2798                           tosh	equ	0xFFE
  2799                           tosl	equ	0xFFD
  2800                           stkptr	equ	0xFFC
  2801                           pclatu	equ	0xFFB
  2802                           pclath	equ	0xFFA
  2803                           pcl	equ	0xFF9
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodh	equ	0xFF4
  2809                           prodl	equ	0xFF3
  2810                           indf0	equ	0xFEF
  2811                           postinc0	equ	0xFEE
  2812                           postdec0	equ	0xFED
  2813                           preinc0	equ	0xFEC
  2814                           plusw0	equ	0xFEB
  2815                           fsr0h	equ	0xFEA
  2816                           fsr0l	equ	0xFE9
  2817                           wreg	equ	0xFE8
  2818                           indf1	equ	0xFE7
  2819                           postinc1	equ	0xFE6
  2820                           postdec1	equ	0xFE5
  2821                           preinc1	equ	0xFE4
  2822                           plusw1	equ	0xFE3
  2823                           fsr1h	equ	0xFE2
  2824                           fsr1l	equ	0xFE1
  2825                           bsr	equ	0xFE0
  2826                           indf2	equ	0xFDF
  2827                           postinc2	equ	0xFDE
  2828                           postdec2	equ	0xFDD
  2829                           preinc2	equ	0xFDC
  2830                           plusw2	equ	0xFDB
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     77     112
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    S1813_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5619
                                             71 COMRAM     6     6      0
                        _Timer0_Init
                  _Timer0_StartTimer
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                     _set_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     243
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timingISR                                            0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (5) i2_Timer0_StartTimer                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _set_duty_cycle

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      20       4       25.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4D      70       1       88.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      14        0.0%
DATA                 0      0      90      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 25 01:45:08 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                              __CFG_OSC$HS 000000  
                                                      l285 10F4  
                                                      l286 10DC  
                                                      l859 0F3C  
                                             __CFG_CPB$OFF 000000  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _lcd 004E  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                              main@address 004C  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             __CFG_LVP$OFF 000000  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     l1107 0BF8  
                                                     l1116 0C70  
                                                     l1220 0E68  
                                                     l1117 0C6A  
                                                     l1224 0DDC  
                                                     l1217 0D52  
                                                     l1091 0B2C  
                                                     l1180 09C8  
                                                     l1092 0B04  
                                                     l2300 0AB2  
                                                     l1176 06D8  
                                                     l2400 0CB8  
                                                     l2312 0B14  
                                                     l1193 0990  
                                                     l1185 0902  
                                                     l1186 08FC  
                                                     l2314 0B1A  
                                                     l2234 09FC  
                                                     l1099 0D0C  
                                                     l2412 0CEC  
                                                     l2430 10BA  
                                                     l2414 0CF0  
                                                     l2270 0A74  
                                                     l2262 0A50  
                                                     l2238 0A02  
                                                     l2408 0CE2  
                                                     l2336 0B64  
                                                     l2600 0E04  
                                                     l2522 08A2  
                                                     l2338 0B6A  
                                                     l2346 0B7E  
                                                     l2258 0A4A  
                                                     l2602 0E12  
                                                     l2700 0F2A  
                                                     l2452 067A  
                                                     l2364 0C20  
                                                     l2380 0C46  
                                                     l2356 0BE6  
                                                     l2470 06C0  
                                                     l2454 0680  
                                                     l2374 0C38  
                                                     l2552 0968  
                                                     l2528 08C2  
                                                     l2480 06FA  
                                                     l2472 06C6  
                                                     l2456 0692  
                                                     l2618 0E56  
                                                     l2564 09B2  
                                                     l2548 0948  
                                                     l2708 1020  
                                                     l2590 0D8C  
                                                     l2582 0D64  
                                                     l2592 0D9A  
                                                     l2682 0EE0  
                                                     l2666 0E90  
                                                     l2594 0DC2  
                                                     l2692 0EFC  
                                                     l2588 0D84  
                                                     l2694 0F0A  
                                                     l2686 0EF2  
                                                     STR_1 061D  
                                                     STR_2 0648  
                                                     STR_3 0605  
                                                     STR_7 0609  
                                                     u1040 0AD6  
                                                     u1050 0AE6  
                                                     u1300 0CC6  
                                                     u1220 0C4C  
                                                     u1060 0AEA  
                                                     u1240 0C62  
                                                     u1090 0B36  
                                                     u1180 0C0C  
                                                     u1430 06E6  
                                                     u1520 0958  
                                                     u1440 0862  
                                                     u1530 0978  
                                                     u1610 0E1E  
                                                     u1700 0F12  
                                                     u1445 0856  
                                                     u1480 08F4  
                                                     u1650 0E7C  
                                                     u1660 0EB2  
                                                     u1727 1070  
                                                     u1665 0EA6  
                                                     u1737 1094  
                                                     u1747 10CE  
                                                     _RCIF 007CF5  
                                         ??_initialize_PWM 0003  
                                             __CFG_STVR$ON 000000  
                                                     _dbuf 0080  
                                                     _flag 0069  
                                       initialize_PWM@freq 0001  
                                                     _main 100C  
                                                     _prec 0061  
                                                     _nout 005D  
                                                     fsr1l 000FE1  
                                                     btemp 0071  
                                         __end_of_ADC_Init 1220  
                                         __end_of_ADC_Read 10FA  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0032  
                                             ___param_bank 000000  
                                            __CFG_OSCS$OFF 000000  
                                            ___fltol@sign1 0046  
                                          __end_of___fladd 0D12  
                                                    ?_main 0001  
                                             get_temp@temp 0038  
                                                    STR_21 0627  
                                                    STR_30 062A  
                                                    STR_25 062D  
                                                    STR_34 0630  
                                                    STR_54 063C  
                                                    STR_39 0611  
                                                    STR_49 0639  
                                                    STR_74 0636  
                                                    STR_59 060D  
                                                    STR_69 0633  
                                                    STR_94 063F  
                                                    STR_79 0615  
                                          __end_of___flmul 09CE  
                                                    STR_99 0619  
                                          __end_of___flsub 118E  
                                          __end_of___fltol 0F42  
                                                    _T0CON 000FD5  
                                                    _T2CON 000FCA  
                                                    i2l247 002A  
                                                    _RCSTA 000FAB  
                                                    _TMR0H 000FD7  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _flags 0063  
                                                    _errno 005B  
                                                    _width 005F  
                                                    tablat 000FF5  
                                                    ttemp5 0072  
                                                    ttemp6 0075  
                                                    ttemp7 0079  
                                                    status 000FD8  
                                                    wtemp8 0072  
                                          __initialization 10FA  
                                             __end_of_main 10A6  
                                                   ??_main 0048  
                                            __activetblptr 000001  
                                          __CFG_CCP2MUX$ON 000000  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   STR_103 0601  
                                                   STR_121 0621  
                                                   STR_130 0624  
                                                   _ADRESH 000FC4  
                                                   STR_117 0642  
                                                   STR_126 0645  
                                                   _ADRESL 000FC3  
                                                   _CCPR1L 000FBE  
                                                   _RCREG1 000FAE  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _TMR2IE 007CE9  
                                           __CFG_WDTPS$128 000000  
                                                   _TMR2IP 007CF9  
                                                   _SSPBUF 000FC9  
                                         __end_of___xxtofl 0E6E  
                                            ??_Timer0_Init 0001  
                                      i2_Timer0_StartTimer 1228  
                                         __end_of_get_temp 100C  
                                                ??___fladd 0009  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                          ADC_Read@channel 0005  
                                                   clear_0 1120  
                                                   clear_1 112C  
                                             __pdataCOMRAM 006A  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                             __mediumconst 0000  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                             ___xxtofl@arg 000B  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 1132  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                           __pcstackCOMRAM 0001  
                                      __end_of_Timer0_Init 11B2  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                  __size_of_set_duty_cycle 0022  
                                               __pbssBANK0 0080  
                                            _initialize_RX 11FE  
                                            _initialize_TX 11EA  
                                                  _CCP1CON 000FBD  
                                       __size_of_timingISR 002A  
                                                ?___xxtofl 0001  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                                  __Hparam 0000  
                                              _Timer0_Init 118E  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___fladd 09CE  
                                                  ___flmul 064C  
                                                  ___flsub 1144  
                                                  ___fltol 0E6E  
                                             __psmallconst 0600  
                                                  __pcinit 10FA  
                                                  __ramtop 0600  
                                                  __ptext0 100C  
                                                  __ptext1 11B2  
                                                  __ptext2 11EA  
                                                  __ptext3 11FE  
                                                  __ptext4 11D4  
                                                  __ptext5 0F42  
                                                  __ptext6 0D12  
                                                  __ptext7 1144  
                                                  __ptext8 09CE  
                                                  __ptext9 064C  
                                                _T0CONbits 000FD5  
                                               ??___xxtofl 0005  
                                                  _time_ms 0057  
                                               ??_get_temp 0034  
                                     end_of_initialization 1132  
                                        __end_of_timingISR 0032  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                  __size_of_initialize_PWM 0016  
                                                  postinc0 000FEE  
                                                _PORTCbits 000F82  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                           _set_duty_cycle 11B2  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 1220  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                            __pidataCOMRAM 1230  
                                   __end_of_set_duty_cycle 11D4  
                                __end_of_Timer0_StartTimer 1228  
                                      start_initialization 10FA  
                                       set_duty_cycle@mask 0003  
                              __end_ofi2_Timer0_StartTimer 1230  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                          ?_set_duty_cycle 0001  
                                    set_duty_cycle@lower_2 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 004E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                    set_duty_cycle@upper_8 0002  
                                        __size_of___xxtofl 015C  
                                        __size_of_get_temp 00CA  
                                             ?_Timer0_Init 0001  
                                           _initialize_PWM 11D4  
                                                __pintcode 0008  
                                                 ?___fladd 0001  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                      get_temp@adc_voltage 003C  
                                              __smallconst 0600  
                               __size_of_Timer0_StartTimer 0008  
                                                 _ADC_Init 1212  
                                                 _ADC_Read 10A6  
                                   __end_of_initialize_PWM 11EA  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 0053  
                                                _timingISR 0008  
                                              _INTCON2bits 000FF1  
                                                copy_data0 110E  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                             __Lsmallconst 0600  
                                               ?_timingISR 0001  
                                         __size_of___fladd 0344  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                                 ___xxtofl 0D12  
                                                 __ptext10 10A6  
                                                 __ptext11 1212  
                                                 __ptext12 0E6E  
                                                 __ptext13 1220  
                                                 __ptext14 118E  
                                                 __ptext16 1228  
                                                 _get_temp 0F42  
                                          _interval_events 0065  
                                            __size_of_main 009A  
                                    __end_of_initialize_RX 1212  
                                    __end_of_initialize_TX 11FE  
                                                stoa@F1152 006A  
                                     __size_of_Timer0_Init 0024  
                                                 int$flags 0071  
                                         ??_set_duty_cycle 0002  
                                                 _ungetbuf 0068  
                                                 _ungetcnt 0067  
                                               _INTCONbits 000FF2  
                                                 intlevel2 1238  
                                              ??_timingISR 0001  
                                     get_temp@real_voltage 0034  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
