

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Feb 28 00:34:24 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F452 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  0031A0                     __pidataBANK0:
   102                           	opt callstack 0
   103                           
   104                           ;initializer for stoa@F1152
   105  0031A0  28                 	db	40
   106  0031A1  6E                 	db	110
   107  0031A2  75                 	db	117
   108  0031A3  6C                 	db	108
   109  0031A4  6C                 	db	108
   110  0031A5  29                 	db	41
   111  0031A6  00                 	db	0
   112  0000                     _TRISCbits	set	3988
   113  0000                     _TRISA	set	3986
   114  0000                     _PORTA	set	3968
   115  0000                     _PORTD	set	3971
   116  0000                     _PORTB	set	3969
   117  0000                     _TRISB	set	3987
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISC	set	3988
   120  0000                     _RC0	set	31760
   121  0000                     _RB5	set	31757
   122  0000                     _CCP1CON	set	4029
   123  0000                     _CCPR1L	set	4030
   124  0000                     _PR2	set	4043
   125  0000                     _T2CON	set	4042
   126  0000                     _ADRESL	set	4035
   127  0000                     _ADRESH	set	4036
   128  0000                     _ADCON0	set	4034
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON1	set	4038
   131  0000                     _SSPSTATbits	set	4039
   132  0000                     _ADCON1	set	4033
   133  0000                     _RCREG1	set	4014
   134  0000                     _TXREG	set	4013
   135  0000                     _RCSTAbits	set	4011
   136  0000                     _RCSTA	set	4011
   137  0000                     _SPBRG	set	4015
   138  0000                     _TXSTAbits	set	4012
   139  0000                     _RCONbits	set	4048
   140  0000                     _GO_nDONE	set	32274
   141  0000                     _RCIF	set	31989
   142  0000                     _T0CON	set	4053
   143  0000                     _TMR0L	set	4054
   144  0000                     _TMR0H	set	4055
   145  0000                     _T0CONbits	set	4053
   146  0000                     _INTCON2bits	set	4081
   147  0000                     _INTCONbits	set	4082
   148  0000                     _TMR0IE	set	32661
   149  0000                     _TMR0IF	set	32658
   150                           
   151                           	psect	smallconst
   152  000600                     __psmallconst:
   153                           	opt callstack 0
   154  000600  00                 	db	0
   155  000601  44                 	db	68	;'D'
   156  000602  6F                 	db	111	;'o'
   157  000603  6E                 	db	110	;'n'
   158  000604  65                 	db	101	;'e'
   159  000605  20                 	db	32
   160  000606  72                 	db	114	;'r'
   161  000607  65                 	db	101	;'e'
   162  000608  61                 	db	97	;'a'
   163  000609  64                 	db	100	;'d'
   164  00060A  69                 	db	105	;'i'
   165  00060B  6E                 	db	110	;'n'
   166  00060C  67                 	db	103	;'g'
   167  00060D  20                 	db	32
   168  00060E  66                 	db	102	;'f'
   169  00060F  72                 	db	114	;'r'
   170  000610  6F                 	db	111	;'o'
   171  000611  6D                 	db	109	;'m'
   172  000612  20                 	db	32
   173  000613  6D                 	db	109	;'m'
   174  000614  65                 	db	101	;'e'
   175  000615  6D                 	db	109	;'m'
   176  000616  6F                 	db	111	;'o'
   177  000617  72                 	db	114	;'r'
   178  000618  79                 	db	121	;'y'
   179  000619  2E                 	db	46
   180  00061A  00                 	db	0
   181  00061B  54                 	db	84	;'T'
   182  00061C  65                 	db	101	;'e'
   183  00061D  6D                 	db	109	;'m'
   184  00061E  70                 	db	112	;'p'
   185  00061F  65                 	db	101	;'e'
   186  000620  72                 	db	114	;'r'
   187  000621  61                 	db	97	;'a'
   188  000622  74                 	db	116	;'t'
   189  000623  75                 	db	117	;'u'
   190  000624  72                 	db	114	;'r'
   191  000625  65                 	db	101	;'e'
   192  000626  20                 	db	32
   193  000627  61                 	db	97	;'a'
   194  000628  74                 	db	116	;'t'
   195  000629  20                 	db	32
   196  00062A  61                 	db	97	;'a'
   197  00062B  64                 	db	100	;'d'
   198  00062C  64                 	db	100	;'d'
   199  00062D  72                 	db	114	;'r'
   200  00062E  65                 	db	101	;'e'
   201  00062F  73                 	db	115	;'s'
   202  000630  73                 	db	115	;'s'
   203  000631  20                 	db	32
   204  000632  00                 	db	0
   205  000633  54                 	db	84	;'T'
   206  000634  69                 	db	105	;'i'
   207  000635  6D                 	db	109	;'m'
   208  000636  65                 	db	101	;'e'
   209  000637  20                 	db	32
   210  000638  61                 	db	97	;'a'
   211  000639  74                 	db	116	;'t'
   212  00063A  20                 	db	32
   213  00063B  61                 	db	97	;'a'
   214  00063C  64                 	db	100	;'d'
   215  00063D  64                 	db	100	;'d'
   216  00063E  72                 	db	114	;'r'
   217  00063F  65                 	db	101	;'e'
   218  000640  73                 	db	115	;'s'
   219  000641  73                 	db	115	;'s'
   220  000642  20                 	db	32
   221  000643  00                 	db	0
   222  000644  20                 	db	32
   223  000645  64                 	db	100	;'d'
   224  000646  65                 	db	101	;'e'
   225  000647  67                 	db	103	;'g'
   226  000648  72                 	db	114	;'r'
   227  000649  65                 	db	101	;'e'
   228  00064A  65                 	db	101	;'e'
   229  00064B  73                 	db	115	;'s'
   230  00064C  20                 	db	32
   231  00064D  43                 	db	67	;'C'
   232  00064E  20                 	db	32
   233  00064F  00                 	db	0
   234  000650  20                 	db	32
   235  000651  6D                 	db	109	;'m'
   236  000652  69                 	db	105	;'i'
   237  000653  6E                 	db	110	;'n'
   238  000654  75                 	db	117	;'u'
   239  000655  74                 	db	116	;'t'
   240  000656  65                 	db	101	;'e'
   241  000657  73                 	db	115	;'s'
   242  000658  00                 	db	0
   243  000659                     STR_110:
   244  000659  68                 	db	104	;'h'
   245  00065A  68                 	db	104	;'h'
   246  00065B  58                 	db	88	;'X'
   247  00065C  00                 	db	0
   248  00065D                     STR_10:
   249  00065D  68                 	db	104	;'h'
   250  00065E  68                 	db	104	;'h'
   251  00065F  64                 	db	100	;'d'
   252  000660  00                 	db	0
   253  000661                     STR_14:
   254  000661  68                 	db	104	;'h'
   255  000662  68                 	db	104	;'h'
   256  000663  69                 	db	105	;'i'
   257  000664  00                 	db	0
   258  000665                     STR_66:
   259  000665  68                 	db	104	;'h'
   260  000666  68                 	db	104	;'h'
   261  000667  6E                 	db	110	;'n'
   262  000668  00                 	db	0
   263  000669                     STR_46:
   264  000669  68                 	db	104	;'h'
   265  00066A  68                 	db	104	;'h'
   266  00066B  6F                 	db	111	;'o'
   267  00066C  00                 	db	0
   268  00066D                     STR_86:
   269  00066D  68                 	db	104	;'h'
   270  00066E  68                 	db	104	;'h'
   271  00066F  75                 	db	117	;'u'
   272  000670  00                 	db	0
   273  000671                     STR_106:
   274  000671  68                 	db	104	;'h'
   275  000672  68                 	db	104	;'h'
   276  000673  78                 	db	120	;'x'
   277  000674  00                 	db	0
   278  000675                     STR_1:
   279  000675  25                 	db	37
   280  000676  6C                 	db	108	;'l'
   281  000677  75                 	db	117	;'u'
   282  000678  00                 	db	0
   283  000679                     STR_128:
   284  000679  6C                 	db	108	;'l'
   285  00067A  58                 	db	88	;'X'
   286  00067B  00                 	db	0
   287  00067C                     STR_137:
   288  00067C  7A                 	db	122	;'z'
   289  00067D  58                 	db	88	;'X'
   290  00067E  00                 	db	0
   291  00067F                     STR_28:
   292  00067F  6C                 	db	108	;'l'
   293  000680  64                 	db	100	;'d'
   294  000681  00                 	db	0
   295  000682                     STR_37:
   296  000682  7A                 	db	122	;'z'
   297  000683  64                 	db	100	;'d'
   298  000684  00                 	db	0
   299  000685                     STR_32:
   300  000685  6C                 	db	108	;'l'
   301  000686  69                 	db	105	;'i'
   302  000687  00                 	db	0
   303  000688                     STR_41:
   304  000688  7A                 	db	122	;'z'
   305  000689  69                 	db	105	;'i'
   306  00068A  00                 	db	0
   307  00068B                     STR_76:
   308  00068B  6C                 	db	108	;'l'
   309  00068C  6E                 	db	110	;'n'
   310  00068D  00                 	db	0
   311  00068E                     STR_81:
   312  00068E  7A                 	db	122	;'z'
   313  00068F  6E                 	db	110	;'n'
   314  000690  00                 	db	0
   315  000691                     STR_56:
   316  000691  6C                 	db	108	;'l'
   317  000692  6F                 	db	111	;'o'
   318  000693  00                 	db	0
   319  000694                     STR_61:
   320  000694  7A                 	db	122	;'z'
   321  000695  6F                 	db	111	;'o'
   322  000696  00                 	db	0
   323  000697                     STR_101:
   324  000697  7A                 	db	122	;'z'
   325  000698  75                 	db	117	;'u'
   326  000699  00                 	db	0
   327  00069A                     STR_124:
   328  00069A  6C                 	db	108	;'l'
   329  00069B  78                 	db	120	;'x'
   330  00069C  00                 	db	0
   331  00069D                     STR_133:
   332  00069D  7A                 	db	122	;'z'
   333  00069E  78                 	db	120	;'x'
   334  00069F  00                 	db	0
   335  0006A0                     STR_4:
   336  0006A0  3A                 	db	58	;':'
   337  0006A1  20                 	db	32
   338  0006A2  00                 	db	0
   339  0006A3  25                 	db	37
   340  0006A4  64                 	db	100	;'d'
   341  0006A5  00                 	db	0
   342  0000                     
   343                           ; #config settings
   344  0006A6  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           	psect	cinit
   347  002ED4                     __pcinit:
   348                           	opt callstack 0
   349  002ED4                     start_initialization:
   350                           	opt callstack 0
   351  002ED4                     __initialization:
   352                           	opt callstack 0
   353                           
   354                           ; Initialize objects allocated to BANK0 (7 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  002ED4  0EA0               	movlw	low __pidataBANK0
   357  002ED6  6EF6               	movwf	tblptrl,c
   358  002ED8  0E31               	movlw	high __pidataBANK0
   359  002EDA  6EF7               	movwf	tblptrh,c
   360  002EDC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  002EDE  6EF8               	movwf	tblptru,c
   362  002EE0  EE00  F0E2         	lfsr	0,__pdataBANK0
   363  002EE4  EE10 F007          	lfsr	1,7
   364  002EE8                     copy_data0:
   365  002EE8  0009               	tblrd		*+
   366  002EEA  CFF5 FFEE          	movff	tablat,postinc0
   367  002EEE  50E5               	movf	postdec1,w,c
   368  002EF0  50E1               	movf	fsr1l,w,c
   369  002EF2  E1FA               	bnz	copy_data0
   370                           
   371                           ; Clear objects allocated to BANK0 (58 bytes)
   372  002EF4  EE00  F080         	lfsr	0,__pbssBANK0
   373  002EF8  0E3A               	movlw	58
   374  002EFA                     clear_0:
   375  002EFA  6AEE               	clrf	postinc0,c
   376  002EFC  06E8               	decf	wreg,f,c
   377  002EFE  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to COMRAM (1 bytes)
   380  002F00  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   381  002F02                     end_of_initialization:
   382                           	opt callstack 0
   383  002F02                     __end_of__initialization:
   384                           	opt callstack 0
   385  002F02  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   386  002F04  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   387  002F06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   388  002F08  6EF8               	movwf	tblptru,c
   389  002F0A  0100               	movlb	0
   390  002F0C  EF66  F00F         	goto	_main	;jump to C main() function
   391                           
   392                           	psect	bssCOMRAM
   393  00007E                     __pbssCOMRAM:
   394                           	opt callstack 0
   395  00007E                     _ungetcnt:
   396                           	opt callstack 0
   397  00007E                     	ds	1
   398                           
   399                           	psect	bssBANK0
   400  000080                     __pbssBANK0:
   401                           	opt callstack 0
   402  000080                     _lcd:
   403                           	opt callstack 0
   404  000080                     	ds	5
   405  000085                     _time_ms_2:
   406                           	opt callstack 0
   407  000085                     	ds	4
   408  000089                     _time_ms:
   409                           	opt callstack 0
   410  000089                     	ds	4
   411  00008D                     _errno:
   412                           	opt callstack 0
   413  00008D                     	ds	2
   414  00008F                     _nout:
   415                           	opt callstack 0
   416  00008F                     	ds	2
   417  000091                     _width:
   418                           	opt callstack 0
   419  000091                     	ds	2
   420  000093                     _prec:
   421                           	opt callstack 0
   422  000093                     	ds	2
   423  000095                     _flags:
   424                           	opt callstack 0
   425  000095                     	ds	2
   426  000097                     _address:
   427                           	opt callstack 0
   428  000097                     	ds	2
   429  000099                     	ds	1
   430  00009A                     _dbuf:
   431                           	opt callstack 0
   432  00009A                     	ds	32
   433                           
   434                           	psect	dataBANK0
   435  0000E2                     __pdataBANK0:
   436                           	opt callstack 0
   437  0000E2                     stoa@F1152:
   438                           	opt callstack 0
   439  0000E2                     	ds	7
   440                           
   441                           	psect	cstackBANK0
   442  0000BA                     __pcstackBANK0:
   443                           	opt callstack 0
   444  0000BA                     ?_sprintf:
   445                           	opt callstack 0
   446  0000BA                     sprintf@s:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x0
   450  0000BA                     	ds	2
   451  0000BC                     sprintf@fmt:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x2
   455  0000BC                     	ds	8
   456  0000C4                     sprintf@f:
   457                           	opt callstack 0
   458                           
   459                           ; 6 bytes @ 0xA
   460  0000C4                     	ds	6
   461  0000CA                     sprintf@ap:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x10
   465  0000CA                     	ds	2
   466  0000CC                     int_to_char@result:
   467                           	opt callstack 0
   468                           
   469                           ; 10 bytes @ 0x12
   470  0000CC                     	ds	10
   471  0000D6                     int_to_char@the_num:
   472                           	opt callstack 0
   473                           
   474                           ; 4 bytes @ 0x1C
   475  0000D6                     	ds	4
   476  0000DA                     UARTSendString@c:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x20
   480  0000DA                     	ds	2
   481  0000DC                     ??_UARTSendString:
   482                           
   483                           ; 1 bytes @ 0x22
   484  0000DC                     	ds	2
   485  0000DE                     UARTSendString@i:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x24
   489  0000DE                     	ds	2
   490  0000E0                     ??_main:
   491                           
   492                           ; 1 bytes @ 0x26
   493  0000E0                     	ds	2
   494                           
   495                           	psect	cstackCOMRAM
   496  000001                     __pcstackCOMRAM:
   497                           	opt callstack 0
   498  000001                     ?_strlen:
   499                           	opt callstack 0
   500  000001                     ?_isupper:
   501                           	opt callstack 0
   502  000001                     ?_isalpha:
   503                           	opt callstack 0
   504  000001                     ?_isdigit:
   505                           	opt callstack 0
   506  000001                     ?_strncmp:
   507                           	opt callstack 0
   508  000001                     ?_isspace:
   509                           	opt callstack 0
   510  000001                     ?_getch:
   511                           	opt callstack 0
   512  000001                     ?_islower:
   513                           	opt callstack 0
   514  000001                     ?___wmul:
   515                           	opt callstack 0
   516  000001                     ?_ReadTime:
   517                           	opt callstack 0
   518  000001                     ?___aodiv:
   519                           	opt callstack 0
   520  000001                     ?___aomod:
   521                           	opt callstack 0
   522  000001                     ?___lodiv:
   523                           	opt callstack 0
   524  000001                     ?___lomod:
   525                           	opt callstack 0
   526  000001                     write_op@data:
   527                           	opt callstack 0
   528  000001                     read_op@address:
   529                           	opt callstack 0
   530  000001                     UARTSendChar@c:
   531                           	opt callstack 0
   532  000001                     ___wmul@multiplier:
   533                           	opt callstack 0
   534  000001                     isalpha@c:
   535                           	opt callstack 0
   536  000001                     isdigit@c:
   537                           	opt callstack 0
   538  000001                     isspace@c:
   539                           	opt callstack 0
   540  000001                     isupper@c:
   541                           	opt callstack 0
   542  000001                     fputc@c:
   543                           	opt callstack 0
   544  000001                     strlen@s:
   545                           	opt callstack 0
   546  000001                     strncmp@_l:
   547                           	opt callstack 0
   548  000001                     islower@c:
   549                           	opt callstack 0
   550  000001                     ___aodiv@dividend:
   551                           	opt callstack 0
   552  000001                     ___aomod@dividend:
   553                           	opt callstack 0
   554  000001                     ___lodiv@dividend:
   555                           	opt callstack 0
   556  000001                     ___lomod@dividend:
   557                           	opt callstack 0
   558                           
   559                           ; 8 bytes @ 0x0
   560  000001                     	ds	1
   561  000002                     write_op@address:
   562                           	opt callstack 0
   563  000002                     read_op@result:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0x1
   567  000002                     	ds	1
   568  000003                     ??_isupper:
   569  000003                     ??_isalpha:
   570  000003                     ??_isdigit:
   571  000003                     ??_isspace:
   572  000003                     ??_islower:
   573  000003                     ?_fgetc:
   574                           	opt callstack 0
   575  000003                     ___wmul@multiplicand:
   576                           	opt callstack 0
   577  000003                     fputc@fp:
   578                           	opt callstack 0
   579  000003                     fgetc@fp:
   580                           	opt callstack 0
   581  000003                     strlen@a:
   582                           	opt callstack 0
   583  000003                     strncmp@_r:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  000003                     	ds	2
   588  000005                     ??_fputc:
   589  000005                     ??_fgetc:
   590  000005                     ?___lldiv:
   591                           	opt callstack 0
   592  000005                     ___wmul@product:
   593                           	opt callstack 0
   594  000005                     strncmp@n:
   595                           	opt callstack 0
   596  000005                     ___lldiv@dividend:
   597                           	opt callstack 0
   598                           
   599                           ; 4 bytes @ 0x4
   600  000005                     	ds	2
   601  000007                     ??_strncmp:
   602  000007                     ?_toupper:
   603                           	opt callstack 0
   604  000007                     _isspace$1710:
   605                           	opt callstack 0
   606  000007                     toupper@c:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x6
   610  000007                     	ds	1
   611  000008                     ?_atoi:
   612                           	opt callstack 0
   613  000008                     atoi@s:
   614                           	opt callstack 0
   615  000008                     strncmp@l:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x7
   619  000008                     	ds	1
   620  000009                     ??_toupper:
   621  000009                     ___lldiv@divisor:
   622                           	opt callstack 0
   623  000009                     ___aodiv@divisor:
   624                           	opt callstack 0
   625  000009                     ___aomod@divisor:
   626                           	opt callstack 0
   627  000009                     ___lodiv@divisor:
   628                           	opt callstack 0
   629  000009                     ___lomod@divisor:
   630                           	opt callstack 0
   631                           
   632                           ; 8 bytes @ 0x8
   633  000009                     	ds	1
   634  00000A                     ??_atoi:
   635  00000A                     ?_stoa:
   636                           	opt callstack 0
   637  00000A                     stoa@fp:
   638                           	opt callstack 0
   639  00000A                     fputs@s:
   640                           	opt callstack 0
   641  00000A                     fgetc@c:
   642                           	opt callstack 0
   643  00000A                     strncmp@r:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x9
   647  00000A                     	ds	2
   648  00000C                     stoa@s:
   649                           	opt callstack 0
   650  00000C                     fputs@fp:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xB
   654  00000C                     	ds	1
   655  00000D                     _toupper$1830:
   656                           	opt callstack 0
   657  00000D                     ___lldiv@quotient:
   658                           	opt callstack 0
   659                           
   660                           ; 4 bytes @ 0xC
   661  00000D                     	ds	1
   662  00000E                     ??_stoa:
   663  00000E                     fputs@c:
   664                           	opt callstack 0
   665  00000E                     atoi@neg:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0xD
   669  00000E                     	ds	1
   670  00000F                     fputs@i:
   671                           	opt callstack 0
   672  00000F                     stoa@nuls:
   673                           	opt callstack 0
   674                           
   675                           ; 7 bytes @ 0xE
   676  00000F                     	ds	1
   677  000010                     _atoi$1673:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0xF
   681  000010                     	ds	1
   682  000011                     ?_pad:
   683                           	opt callstack 0
   684  000011                     ___lldiv@counter:
   685                           	opt callstack 0
   686  000011                     ___aodiv@counter:
   687                           	opt callstack 0
   688  000011                     ___aomod@counter:
   689                           	opt callstack 0
   690  000011                     ___lomod@counter:
   691                           	opt callstack 0
   692  000011                     pad@fp:
   693                           	opt callstack 0
   694  000011                     ___lodiv@quotient:
   695                           	opt callstack 0
   696                           
   697                           ; 8 bytes @ 0x10
   698  000011                     	ds	1
   699  000012                     ___aodiv@sign:
   700                           	opt callstack 0
   701  000012                     ___aomod@sign:
   702                           	opt callstack 0
   703  000012                     _atoi$1675:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x11
   707  000012                     	ds	1
   708  000013                     ?_abs:
   709                           	opt callstack 0
   710  000013                     pad@buf:
   711                           	opt callstack 0
   712  000013                     abs@a:
   713                           	opt callstack 0
   714  000013                     ___aodiv@quotient:
   715                           	opt callstack 0
   716                           
   717                           ; 8 bytes @ 0x12
   718  000013                     	ds	1
   719  000014                     _atoi$1674:
   720                           	opt callstack 0
   721                           
   722                           ; 1 bytes @ 0x13
   723  000014                     	ds	1
   724  000015                     ??_abs:
   725  000015                     pad@p:
   726                           	opt callstack 0
   727  000015                     atoi@n:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x14
   731  000015                     	ds	1
   732  000016                     stoa@i:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x15
   736  000016                     	ds	1
   737  000017                     ??_pad:
   738                           
   739                           ; 1 bytes @ 0x16
   740  000017                     	ds	1
   741  000018                     pad@i:
   742                           	opt callstack 0
   743  000018                     stoa@w:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x17
   747  000018                     	ds	1
   748  000019                     ___lodiv@counter:
   749                           	opt callstack 0
   750                           
   751                           ; 1 bytes @ 0x18
   752  000019                     	ds	1
   753  00001A                     pad@w:
   754                           	opt callstack 0
   755  00001A                     stoa@cp:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x19
   759  00001A                     	ds	2
   760  00001C                     ?_ctoa:
   761                           	opt callstack 0
   762  00001C                     ?_dtoa:
   763                           	opt callstack 0
   764  00001C                     ?_otoa:
   765                           	opt callstack 0
   766  00001C                     ?_utoa:
   767                           	opt callstack 0
   768  00001C                     ?_xtoa:
   769                           	opt callstack 0
   770  00001C                     ctoa@fp:
   771                           	opt callstack 0
   772  00001C                     dtoa@fp:
   773                           	opt callstack 0
   774  00001C                     otoa@fp:
   775                           	opt callstack 0
   776  00001C                     stoa@p:
   777                           	opt callstack 0
   778  00001C                     utoa@fp:
   779                           	opt callstack 0
   780  00001C                     xtoa@fp:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x1B
   784  00001C                     	ds	2
   785  00001E                     ctoa@c:
   786                           	opt callstack 0
   787  00001E                     stoa@l:
   788                           	opt callstack 0
   789  00001E                     dtoa@d:
   790                           	opt callstack 0
   791  00001E                     otoa@d:
   792                           	opt callstack 0
   793  00001E                     utoa@d:
   794                           	opt callstack 0
   795  00001E                     xtoa@d:
   796                           	opt callstack 0
   797                           
   798                           ; 8 bytes @ 0x1D
   799  00001E                     	ds	1
   800  00001F                     ctoa@w:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x1E
   804  00001F                     	ds	7
   805  000026                     ??_dtoa:
   806  000026                     ??_otoa:
   807  000026                     ??_utoa:
   808  000026                     xtoa@x:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0x25
   812  000026                     	ds	1
   813  000027                     ??_xtoa:
   814                           
   815                           ; 1 bytes @ 0x26
   816  000027                     	ds	7
   817  00002E                     _dtoa$1027:
   818                           	opt callstack 0
   819  00002E                     otoa@p:
   820                           	opt callstack 0
   821  00002E                     utoa@p:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x2D
   825  00002E                     	ds	1
   826  00002F                     _xtoa$1063:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x2E
   830  00002F                     	ds	1
   831  000030                     dtoa@p:
   832                           	opt callstack 0
   833  000030                     otoa@t:
   834                           	opt callstack 0
   835  000030                     utoa@w:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x2F
   839  000030                     	ds	1
   840  000031                     _xtoa$1064:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x30
   844  000031                     	ds	1
   845  000032                     dtoa@w:
   846                           	opt callstack 0
   847  000032                     otoa@w:
   848                           	opt callstack 0
   849  000032                     utoa@n:
   850                           	opt callstack 0
   851                           
   852                           ; 8 bytes @ 0x31
   853  000032                     	ds	1
   854  000033                     xtoa@p:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x32
   858  000033                     	ds	1
   859  000034                     dtoa@s:
   860                           	opt callstack 0
   861  000034                     otoa@n:
   862                           	opt callstack 0
   863                           
   864                           ; 8 bytes @ 0x33
   865  000034                     	ds	1
   866  000035                     xtoa@w:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x34
   870  000035                     	ds	1
   871  000036                     dtoa@n:
   872                           	opt callstack 0
   873                           
   874                           ; 8 bytes @ 0x35
   875  000036                     	ds	1
   876  000037                     xtoa@n:
   877                           	opt callstack 0
   878                           
   879                           ; 8 bytes @ 0x36
   880  000037                     	ds	3
   881  00003A                     utoa@i:
   882                           	opt callstack 0
   883                           
   884                           ; 2 bytes @ 0x39
   885  00003A                     	ds	2
   886  00003C                     otoa@i:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x3B
   890  00003C                     	ds	2
   891  00003E                     dtoa@i:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x3D
   895  00003E                     	ds	1
   896  00003F                     xtoa@i:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x3E
   900  00003F                     	ds	2
   901  000041                     xtoa@c:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x40
   905  000041                     	ds	2
   906  000043                     ?_vfpfcnvrt:
   907                           	opt callstack 0
   908  000043                     vfpfcnvrt@fp:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x42
   912  000043                     	ds	2
   913  000045                     vfpfcnvrt@fmt:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x44
   917  000045                     	ds	2
   918  000047                     vfpfcnvrt@ap:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x46
   922  000047                     	ds	2
   923  000049                     ??_vfpfcnvrt:
   924                           
   925                           ; 1 bytes @ 0x48
   926  000049                     	ds	14
   927  000057                     vfpfcnvrt@cp:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x56
   931  000057                     	ds	2
   932  000059                     vfpfcnvrt@done:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x58
   936  000059                     	ds	2
   937  00005B                     _vfpfcnvrt$1078:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x5A
   941  00005B                     	ds	2
   942  00005D                     _vfpfcnvrt$1079:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x5C
   946  00005D                     	ds	2
   947  00005F                     vfpfcnvrt@ll:
   948                           	opt callstack 0
   949                           
   950                           ; 8 bytes @ 0x5E
   951  00005F                     	ds	8
   952  000067                     vfpfcnvrt@vp:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x66
   956  000067                     	ds	2
   957  000069                     vfpfcnvrt@c:
   958                           	opt callstack 0
   959                           
   960                           ; 1 bytes @ 0x68
   961  000069                     	ds	1
   962  00006A                     vfpfcnvrt@llu:
   963                           	opt callstack 0
   964                           
   965                           ; 8 bytes @ 0x69
   966  00006A                     	ds	8
   967  000072                     ?_vfprintf:
   968                           	opt callstack 0
   969  000072                     vfprintf@fp:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x71
   973  000072                     	ds	2
   974  000074                     vfprintf@fmt:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x73
   978  000074                     	ds	2
   979  000076                     vfprintf@ap:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x75
   983  000076                     	ds	2
   984  000078                     vfprintf@cfmt:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x77
   988  000078                     	ds	2
   989  00007A                     ?_int_to_char:
   990                           	opt callstack 0
   991  00007A                     int_to_char@num:
   992                           	opt callstack 0
   993                           
   994                           ; 4 bytes @ 0x79
   995  00007A                     	ds	4
   996  00007E                     
   997                           ; 1 bytes @ 0x7D
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 117 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1017 ;;      Params:         0       0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0       0       0
  1020 ;;      Totals:         0       2       0       0       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels required when called:   11
  1023 ;; This function calls:
  1024 ;;		_ReadTime
  1025 ;;		_Timer0_Init
  1026 ;;		_Timer0_StartTimer
  1027 ;;		_Timer0_StopTimer
  1028 ;;		_UARTNewLine
  1029 ;;		_UARTSendString
  1030 ;;		___lldiv
  1031 ;;		_initialize_RX
  1032 ;;		_initialize_TX
  1033 ;;		_int_to_char
  1034 ;;		_interrupt_enable
  1035 ;;		_read_op
  1036 ;;		_write_op
  1037 ;; This function is called by:
  1038 ;;		Startup code after reset
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text0
  1043  001ECC                     __ptext0:
  1044                           	opt callstack 0
  1045  001ECC                     _main:
  1046                           	opt callstack 0
  1047  001ECC  FFFF               	dw	65535	; assembler added errata NOP
  1048                           
  1049                           ;main.c: 118:      interrupt_enable();
  1050                           
  1051                           ;incstack = 0
  1052  001ECE  ECB7  F018         	call	_interrupt_enable	;wreg free
  1053                           
  1054                           ;main.c: 119:   Timer0_Init();
  1055  001ED2  EC46  F018         	call	_Timer0_Init	;wreg free
  1056                           
  1057                           ;main.c: 120:   Timer0_StartTimer();
  1058  001ED6  ECC8  F018         	call	_Timer0_StartTimer	;wreg free
  1059                           
  1060                           ;main.c: 121:   initialize_TX();
  1061  001EDA  EC86  F018         	call	_initialize_TX	;wreg free
  1062                           
  1063                           ;main.c: 122:   initialize_RX();
  1064  001EDE  EC90  F018         	call	_initialize_RX	;wreg free
  1065                           
  1066                           ;main.c: 123:   TRISCbits.TRISC7 = 1;
  1067  001EE2  8E94               	bsf	3988,7,c	;volatile
  1068                           
  1069                           ;main.c: 124:   TRISCbits.TRISC6 = 0;
  1070  001EE4  9C94               	bcf	3988,6,c	;volatile
  1071                           
  1072                           ;main.c: 125:   TRISCbits.TRISC7 = 0;
  1073  001EE6  9E94               	bcf	3988,7,c	;volatile
  1074  001EE8                     l4069:
  1075  001EE8  FFFF               	dw	65535	; assembler added errata NOP
  1076                           
  1077                           ;main.c: 127:     write_op(3, 3);
  1078  001EEA  0E03               	movlw	3
  1079  001EEC  6E01               	movwf	write_op@data,c
  1080  001EEE  0E03               	movlw	3
  1081  001EF0  EC59  F018         	call	_write_op
  1082                           
  1083                           ;main.c: 128:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1084  001EF4  0E10               	movlw	16
  1085  001EF6  0100               	movlb	0	; () banked
  1086  001EF8  6FE1               	movwf	(??_main+1)& (0+255),b
  1087  001EFA  0E3B               	movlw	59
  1088  001EFC  6FE0               	movwf	??_main& (0+255),b
  1089  001EFE  0E99               	movlw	153
  1090  001F00                     u3837:
  1091  001F00  FFFF               	dw	65535	; errata NOP
  1092  001F02  2EE8               	decfsz	wreg,f,c
  1093  001F04  D7FD               	bra	u3837
  1094  001F06  2FE0               	decfsz	??_main& (0+255),f,b
  1095  001F08  D7FB               	bra	u3837
  1096  001F0A  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1097  001F0C  D7F9               	bra	u3837
  1098  001F0E  F000               	nop	
  1099                           
  1100                           ;main.c: 129:     write_op(2, 2);
  1101  001F10  0E02               	movlw	2
  1102  001F12  6E01               	movwf	write_op@data,c
  1103  001F14  0E02               	movlw	2
  1104  001F16  EC59  F018         	call	_write_op
  1105                           
  1106                           ;main.c: 130:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1107  001F1A  0E10               	movlw	16
  1108  001F1C  0100               	movlb	0	; () banked
  1109  001F1E  6FE1               	movwf	(??_main+1)& (0+255),b
  1110  001F20  0E3B               	movlw	59
  1111  001F22  6FE0               	movwf	??_main& (0+255),b
  1112  001F24  0E99               	movlw	153
  1113  001F26                     u3847:
  1114  001F26  FFFF               	dw	65535	; errata NOP
  1115  001F28  2EE8               	decfsz	wreg,f,c
  1116  001F2A  D7FD               	bra	u3847
  1117  001F2C  2FE0               	decfsz	??_main& (0+255),f,b
  1118  001F2E  D7FB               	bra	u3847
  1119  001F30  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1120  001F32  D7F9               	bra	u3847
  1121  001F34  F000               	nop	
  1122                           
  1123                           ;main.c: 131:     write_op(1, 1);
  1124  001F36  0E01               	movlw	1
  1125  001F38  6E01               	movwf	write_op@data,c
  1126  001F3A  0E01               	movlw	1
  1127  001F3C  EC59  F018         	call	_write_op
  1128                           
  1129                           ;main.c: 132:     UARTSendString(int_to_char(read_op(3)));
  1130  001F40  0E03               	movlw	3
  1131  001F42  EC6A  F018         	call	_read_op
  1132  001F46  0100               	movlb	0	; () banked
  1133  001F48  6FE0               	movwf	??_main& (0+255),b
  1134  001F4A  51E0               	movf	??_main& (0+255),w,b
  1135  001F4C  6E7A               	movwf	int_to_char@num,c
  1136  001F4E  6A7B               	clrf	int_to_char@num+1,c
  1137  001F50  6A7C               	clrf	int_to_char@num+2,c
  1138  001F52  6A7D               	clrf	int_to_char@num+3,c
  1139  001F54  EC03  F017         	call	_int_to_char	;wreg free
  1140  001F58  C07A  F0DA         	movff	?_int_to_char,UARTSendString@c
  1141  001F5C  C07B  F0DB         	movff	?_int_to_char+1,UARTSendString@c+1
  1142  001F60  EC0E  F016         	call	_UARTSendString	;wreg free
  1143                           
  1144                           ;main.c: 133:     UARTNewLine();
  1145  001F64  EC9A  F018         	call	_UARTNewLine	;wreg free
  1146                           
  1147                           ;main.c: 134:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1148  001F68  0E10               	movlw	16
  1149  001F6A  0100               	movlb	0	; () banked
  1150  001F6C  6FE1               	movwf	(??_main+1)& (0+255),b
  1151  001F6E  0E3B               	movlw	59
  1152  001F70  6FE0               	movwf	??_main& (0+255),b
  1153  001F72  0E99               	movlw	153
  1154  001F74                     u3857:
  1155  001F74  FFFF               	dw	65535	; errata NOP
  1156  001F76  2EE8               	decfsz	wreg,f,c
  1157  001F78  D7FD               	bra	u3857
  1158  001F7A  2FE0               	decfsz	??_main& (0+255),f,b
  1159  001F7C  D7FB               	bra	u3857
  1160  001F7E  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1161  001F80  D7F9               	bra	u3857
  1162  001F82  F000               	nop	
  1163                           
  1164                           ;main.c: 135:     UARTSendString(int_to_char(read_op(2)));
  1165  001F84  0E02               	movlw	2
  1166  001F86  EC6A  F018         	call	_read_op
  1167  001F8A  0100               	movlb	0	; () banked
  1168  001F8C  6FE0               	movwf	??_main& (0+255),b
  1169  001F8E  51E0               	movf	??_main& (0+255),w,b
  1170  001F90  6E7A               	movwf	int_to_char@num,c
  1171  001F92  6A7B               	clrf	int_to_char@num+1,c
  1172  001F94  6A7C               	clrf	int_to_char@num+2,c
  1173  001F96  6A7D               	clrf	int_to_char@num+3,c
  1174  001F98  EC03  F017         	call	_int_to_char	;wreg free
  1175  001F9C  C07A  F0DA         	movff	?_int_to_char,UARTSendString@c
  1176  001FA0  C07B  F0DB         	movff	?_int_to_char+1,UARTSendString@c+1
  1177  001FA4  EC0E  F016         	call	_UARTSendString	;wreg free
  1178                           
  1179                           ;main.c: 136:     UARTNewLine();
  1180  001FA8  EC9A  F018         	call	_UARTNewLine	;wreg free
  1181                           
  1182                           ;main.c: 137:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1183  001FAC  0E10               	movlw	16
  1184  001FAE  0100               	movlb	0	; () banked
  1185  001FB0  6FE1               	movwf	(??_main+1)& (0+255),b
  1186  001FB2  0E3B               	movlw	59
  1187  001FB4  6FE0               	movwf	??_main& (0+255),b
  1188  001FB6  0E99               	movlw	153
  1189  001FB8                     u3867:
  1190  001FB8  FFFF               	dw	65535	; errata NOP
  1191  001FBA  2EE8               	decfsz	wreg,f,c
  1192  001FBC  D7FD               	bra	u3867
  1193  001FBE  2FE0               	decfsz	??_main& (0+255),f,b
  1194  001FC0  D7FB               	bra	u3867
  1195  001FC2  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1196  001FC4  D7F9               	bra	u3867
  1197  001FC6  F000               	nop	
  1198                           
  1199                           ;main.c: 138:     UARTSendString(int_to_char(read_op(1)));
  1200  001FC8  0E01               	movlw	1
  1201  001FCA  EC6A  F018         	call	_read_op
  1202  001FCE  0100               	movlb	0	; () banked
  1203  001FD0  6FE0               	movwf	??_main& (0+255),b
  1204  001FD2  51E0               	movf	??_main& (0+255),w,b
  1205  001FD4  6E7A               	movwf	int_to_char@num,c
  1206  001FD6  6A7B               	clrf	int_to_char@num+1,c
  1207  001FD8  6A7C               	clrf	int_to_char@num+2,c
  1208  001FDA  6A7D               	clrf	int_to_char@num+3,c
  1209  001FDC  EC03  F017         	call	_int_to_char	;wreg free
  1210  001FE0  C07A  F0DA         	movff	?_int_to_char,UARTSendString@c
  1211  001FE4  C07B  F0DB         	movff	?_int_to_char+1,UARTSendString@c+1
  1212  001FE8  EC0E  F016         	call	_UARTSendString	;wreg free
  1213                           
  1214                           ;main.c: 139:     UARTNewLine();
  1215  001FEC  EC9A  F018         	call	_UARTNewLine	;wreg free
  1216                           
  1217                           ;main.c: 140:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1218  001FF0  0E10               	movlw	16
  1219  001FF2  0100               	movlb	0	; () banked
  1220  001FF4  6FE1               	movwf	(??_main+1)& (0+255),b
  1221  001FF6  0E3B               	movlw	59
  1222  001FF8  6FE0               	movwf	??_main& (0+255),b
  1223  001FFA  0E99               	movlw	153
  1224  001FFC                     u3877:
  1225  001FFC  FFFF               	dw	65535	; errata NOP
  1226  001FFE  2EE8               	decfsz	wreg,f,c
  1227  002000  D7FD               	bra	u3877
  1228  002002  2FE0               	decfsz	??_main& (0+255),f,b
  1229  002004  D7FB               	bra	u3877
  1230  002006  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1231  002008  D7F9               	bra	u3877
  1232  00200A  F000               	nop	
  1233                           
  1234                           ;main.c: 141:     Timer0_StopTimer();
  1235  00200C  ECC4  F018         	call	_Timer0_StopTimer	;wreg free
  1236                           
  1237                           ;main.c: 142:     UARTSendString(int_to_char(ReadTime()/1000));
  1238  002010  EC7B  F018         	call	_ReadTime	;wreg free
  1239  002014  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1240  002018  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1241  00201C  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1242  002020  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1243  002024  0EE8               	movlw	232
  1244  002026  6E09               	movwf	___lldiv@divisor,c
  1245  002028  0E03               	movlw	3
  1246  00202A  6E0A               	movwf	___lldiv@divisor+1,c
  1247  00202C  0E00               	movlw	0
  1248  00202E  6E0B               	movwf	___lldiv@divisor+2,c
  1249  002030  0E00               	movlw	0
  1250  002032  6E0C               	movwf	___lldiv@divisor+3,c
  1251  002034  EC81  F015         	call	___lldiv	;wreg free
  1252  002038  C005  F07A         	movff	?___lldiv,int_to_char@num
  1253  00203C  C006  F07B         	movff	?___lldiv+1,int_to_char@num+1
  1254  002040  C007  F07C         	movff	?___lldiv+2,int_to_char@num+2
  1255  002044  C008  F07D         	movff	?___lldiv+3,int_to_char@num+3
  1256  002048  EC03  F017         	call	_int_to_char	;wreg free
  1257  00204C  C07A  F0DA         	movff	?_int_to_char,UARTSendString@c
  1258  002050  C07B  F0DB         	movff	?_int_to_char+1,UARTSendString@c+1
  1259  002054  EC0E  F016         	call	_UARTSendString	;wreg free
  1260                           
  1261                           ;main.c: 143:     UARTNewLine();
  1262  002058  EC9A  F018         	call	_UARTNewLine	;wreg free
  1263                           
  1264                           ;main.c: 144:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1265  00205C  0E10               	movlw	16
  1266  00205E  0100               	movlb	0	; () banked
  1267  002060  6FE1               	movwf	(??_main+1)& (0+255),b
  1268  002062  0E3B               	movlw	59
  1269  002064  6FE0               	movwf	??_main& (0+255),b
  1270  002066  0E99               	movlw	153
  1271  002068                     u3887:
  1272  002068  FFFF               	dw	65535	; errata NOP
  1273  00206A  2EE8               	decfsz	wreg,f,c
  1274  00206C  D7FD               	bra	u3887
  1275  00206E  2FE0               	decfsz	??_main& (0+255),f,b
  1276  002070  D7FB               	bra	u3887
  1277  002072  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1278  002074  D7F9               	bra	u3887
  1279  002076  F000               	nop	
  1280  002078  D737               	goto	l4069
  1281  00207A                     __end_of_main:
  1282                           	opt callstack 0
  1283                           
  1284 ;; *************** function _write_op *****************
  1285 ;; Defined at:
  1286 ;;		line 9 in file "drive_memory.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  address         1    wreg     unsigned char 
  1289 ;;  data            1    0[COMRAM] unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  address         1    1[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         1       0       0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0
  1304 ;;      Totals:         2       0       0       0       0       0       0
  1305 ;;Total ram usage:        2 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    2
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text1
  1316  0030B2                     __ptext1:
  1317                           	opt callstack 0
  1318  0030B2                     _write_op:
  1319                           	opt callstack 0
  1320  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  1321                           
  1322                           ;incstack = 0
  1323                           ;write_op@address stored from wreg
  1324  0030B4  6E02               	movwf	write_op@address,c
  1325                           
  1326                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1327  0030B6  9094               	bcf	3988,0,c	;volatile
  1328                           
  1329                           ;drive_memory.c: 12:   TRISD = 0x00;
  1330  0030B8  0E00               	movlw	0
  1331  0030BA  6E95               	movwf	3989,c	;volatile
  1332                           
  1333                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1334  0030BC  0EC0               	movlw	192
  1335  0030BE  1693               	andwf	3987,f,c	;volatile
  1336                           
  1337                           ;drive_memory.c: 14:   PORTB = address;
  1338  0030C0  C002  FF81         	movff	write_op@address,3969	;volatile
  1339                           
  1340                           ;drive_memory.c: 15:   RB5 = 0;
  1341  0030C4  9A81               	bcf	3969,5,c	;volatile
  1342                           
  1343                           ;drive_memory.c: 17:   RC0 = 1;
  1344  0030C6  8082               	bsf	3970,0,c	;volatile
  1345                           
  1346                           ;drive_memory.c: 21:   RC0 = 0;
  1347  0030C8  9082               	bcf	3970,0,c	;volatile
  1348                           
  1349                           ;drive_memory.c: 23:   PORTD = data;
  1350                           
  1351                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1352  0030CA  C001  FF83         	movff	write_op@data,3971	;volatile
  1353                           
  1354                           ;drive_memory.c: 26:   RC0 = 1;
  1355                           
  1356                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1357  0030CE  8082               	bsf	3970,0,c	;volatile
  1358  0030D0  0012               	return		;funcret
  1359  0030D2  FFFF               	dw	65535	; errata NOP
  1360  0030D4                     __end_of_write_op:
  1361                           	opt callstack 0
  1362                           
  1363 ;; *************** function _read_op *****************
  1364 ;; Defined at:
  1365 ;;		line 30 in file "drive_memory.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  address         1    wreg     unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  address         1    0[COMRAM] unsigned char 
  1370 ;;  result          1    1[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         0       0       0       0       0       0       0
  1381 ;;      Locals:         2       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;;		_read_SRAM
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396  0030D4                     __ptext2:
  1397                           	opt callstack 0
  1398  0030D4                     _read_op:
  1399                           	opt callstack 0
  1400  0030D4  FFFF               	dw	65535	; assembler added errata NOP
  1401                           
  1402                           ;incstack = 0
  1403                           ;read_op@address stored from wreg
  1404  0030D6  6E01               	movwf	read_op@address,c
  1405                           
  1406                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  1407  0030D8  9094               	bcf	3988,0,c	;volatile
  1408                           
  1409                           ;drive_memory.c: 33:   TRISD = 0xFF;
  1410  0030DA  6895               	setf	3989,c	;volatile
  1411                           
  1412                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  1413  0030DC  0EC0               	movlw	192
  1414  0030DE  1693               	andwf	3987,f,c	;volatile
  1415                           
  1416                           ;drive_memory.c: 35:   PORTB = address;
  1417  0030E0  C001  FF81         	movff	read_op@address,3969	;volatile
  1418                           
  1419                           ;drive_memory.c: 36:   RB5 = 1;
  1420  0030E4  8A81               	bsf	3969,5,c	;volatile
  1421                           
  1422                           ;drive_memory.c: 38:   RC0 = 1;
  1423  0030E6  8082               	bsf	3970,0,c	;volatile
  1424                           
  1425                           ;drive_memory.c: 41:   RB5 = 0;
  1426  0030E8  9A81               	bcf	3969,5,c	;volatile
  1427                           
  1428                           ;drive_memory.c: 45:   RB5 = 1;
  1429                           
  1430                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  1431  0030EA  8A81               	bsf	3969,5,c	;volatile
  1432                           
  1433                           ;drive_memory.c: 46:   char result = PORTD;
  1434  0030EC  CF83 F002          	movff	3971,read_op@result	;volatile
  1435                           
  1436                           ;drive_memory.c: 47:   return result;
  1437  0030F0  5002               	movf	read_op@result,w,c
  1438  0030F2  0012               	return		;funcret
  1439  0030F4  FFFF               	dw	65535	; errata NOP
  1440  0030F6                     __end_of_read_op:
  1441                           	opt callstack 0
  1442                           
  1443 ;; *************** function _interrupt_enable *****************
  1444 ;; Defined at:
  1445 ;;		line 15 in file "serial.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         0       0       0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text3
  1474  00316E                     __ptext3:
  1475                           	opt callstack 0
  1476  00316E                     _interrupt_enable:
  1477                           	opt callstack 0
  1478  00316E  FFFF               	dw	65535	; assembler added errata NOP
  1479                           
  1480                           ;serial.c: 16:   INTCONbits.GIE = 1;
  1481                           
  1482                           ;incstack = 0
  1483  003170  8EF2               	bsf	4082,7,c	;volatile
  1484                           
  1485                           ;serial.c: 17:   INTCONbits.PEIE = 1;
  1486  003172  8CF2               	bsf	4082,6,c	;volatile
  1487                           
  1488                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
  1489  003174  8AF2               	bsf	4082,5,c	;volatile
  1490                           
  1491                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
  1492  003176  84F1               	bsf	4081,2,c	;volatile
  1493                           
  1494                           ;serial.c: 20:   RCONbits.IPEN = 1;
  1495  003178  8ED0               	bsf	4048,7,c	;volatile
  1496  00317A  0012               	return		;funcret
  1497  00317C  FFFF               	dw	65535	; errata NOP
  1498  00317E                     __end_of_interrupt_enable:
  1499                           	opt callstack 0
  1500                           
  1501 ;; *************** function _int_to_char *****************
  1502 ;; Defined at:
  1503 ;;		line 18 in file "lcd.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  num             4  121[COMRAM] unsigned long 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  result         10   18[BANK0 ] unsigned char [10]
  1508 ;;  the_num         4   28[BANK0 ] unsigned long 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  2  121[COMRAM] PTR unsigned char 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         4       0       0       0       0       0       0
  1519 ;;      Locals:         0      14       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         4      14       0       0       0       0       0
  1522 ;;Total ram usage:       18 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:   10
  1525 ;; This function calls:
  1526 ;;		_getchar
  1527 ;;		_sprintf
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;;		_read_SRAM
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text4
  1535  002E06                     __ptext4:
  1536                           	opt callstack 0
  1537  002E06                     _int_to_char:
  1538                           	opt callstack 0
  1539  002E06  FFFF               	dw	65535	; assembler added errata NOP
  1540                           
  1541                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1542                           
  1543                           ;incstack = 0
  1544  002E08  C07A  F0D6         	movff	int_to_char@num,int_to_char@the_num
  1545  002E0C  C07B  F0D7         	movff	int_to_char@num+1,int_to_char@the_num+1
  1546  002E10  C07C  F0D8         	movff	int_to_char@num+2,int_to_char@the_num+2
  1547  002E14  C07D  F0D9         	movff	int_to_char@num+3,int_to_char@the_num+3
  1548                           
  1549                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1550  002E18  0ECC               	movlw	low int_to_char@result
  1551  002E1A  0100               	movlb	0	; () banked
  1552  002E1C  6FBA               	movwf	sprintf@s& (0+255),b
  1553  002E1E  0E00               	movlw	high int_to_char@result
  1554  002E20  6FBB               	movwf	(sprintf@s+1)& (0+255),b
  1555  002E22  0E75               	movlw	low STR_1
  1556  002E24  6FBC               	movwf	sprintf@fmt& (0+255),b
  1557  002E26  0E06               	movlw	high STR_1
  1558  002E28  6FBD               	movwf	(sprintf@fmt+1)& (0+255),b
  1559  002E2A  C0D6  F0BE         	movff	int_to_char@the_num,?_sprintf+4
  1560  002E2E  C0D7  F0BF         	movff	int_to_char@the_num+1,?_sprintf+5
  1561  002E32  C0D8  F0C0         	movff	int_to_char@the_num+2,?_sprintf+6
  1562  002E36  C0D9  F0C1         	movff	int_to_char@the_num+3,?_sprintf+7
  1563  002E3A  EC82  F016         	call	_sprintf	;wreg free
  1564                           
  1565                           ;lcd.c: 22:   getchar();
  1566  002E3E  ECAE  F018         	call	_getchar	;wreg free
  1567                           
  1568                           ;lcd.c: 23:   return result;
  1569  002E42  0ECC               	movlw	low int_to_char@result
  1570  002E44  6E7A               	movwf	?_int_to_char,c
  1571  002E46  0E00               	movlw	high int_to_char@result
  1572  002E48  6E7B               	movwf	?_int_to_char+1,c
  1573  002E4A  0012               	return		;funcret
  1574  002E4C  FFFF               	dw	65535	; errata NOP
  1575  002E4E                     __end_of_int_to_char:
  1576                           	opt callstack 0
  1577                           
  1578 ;; *************** function _sprintf *****************
  1579 ;; Defined at:
  1580 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1583 ;;		 -> int_to_char@result(10), 
  1584 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1585 ;;		 -> STR_1(4), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1588 ;;  ap              2   16[BANK0 ] PTR void [1]
  1589 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1590 ;;  ret             2    0        int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  2    0[BANK0 ] int 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1600 ;;      Params:         0       8       0       0       0       0       0
  1601 ;;      Locals:         0      10       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0
  1603 ;;      Totals:         0      18       0       0       0       0       0
  1604 ;;Total ram usage:       18 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    9
  1607 ;; This function calls:
  1608 ;;		_vfprintf
  1609 ;; This function is called by:
  1610 ;;		_int_to_char
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text5
  1615  002D04                     __ptext5:
  1616                           	opt callstack 0
  1617  002D04                     _sprintf:
  1618                           	opt callstack 0
  1619  002D04  FFFF               	dw	65535	; assembler added errata NOP
  1620                           
  1621                           ;incstack = 0
  1622  002D06  0EBE               	movlw	low (?_sprintf+4)
  1623  002D08  0100               	movlb	0	; () banked
  1624  002D0A  6FCA               	movwf	sprintf@ap& (0+255),b
  1625  002D0C  0E00               	movlw	high (?_sprintf+4)
  1626  002D0E  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  1627  002D10  C0BA  F0C4         	movff	sprintf@s,sprintf@f
  1628  002D14  C0BB  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1629                           
  1630                           ; BSR set to: 0
  1631  002D18  0E00               	movlw	0
  1632  002D1A  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1633  002D1C  0E00               	movlw	0
  1634  002D1E  6FC6               	movwf	(sprintf@f+2)& (0+255),b
  1635                           
  1636                           ; BSR set to: 0
  1637  002D20  0E00               	movlw	0
  1638  002D22  6FC9               	movwf	(sprintf@f+5)& (0+255),b
  1639  002D24  0E00               	movlw	0
  1640  002D26  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1641                           
  1642                           ; BSR set to: 0
  1643  002D28  0EC4               	movlw	low sprintf@f
  1644  002D2A  6E72               	movwf	vfprintf@fp,c
  1645  002D2C  0E00               	movlw	high sprintf@f
  1646  002D2E  6E73               	movwf	vfprintf@fp+1,c
  1647  002D30  C0BC  F074         	movff	sprintf@fmt,vfprintf@fmt
  1648  002D34  C0BD  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1649  002D38  0ECA               	movlw	low sprintf@ap
  1650  002D3A  6E76               	movwf	vfprintf@ap,c
  1651  002D3C  0E00               	movlw	high sprintf@ap
  1652  002D3E  6E77               	movwf	vfprintf@ap+1,c
  1653  002D40  EC52  F016         	call	_vfprintf	;wreg free
  1654  002D44  0100               	movlb	0	; () banked
  1655  002D46  51C6               	movf	(sprintf@f+2)& (0+255),w,b
  1656  002D48  25BA               	addwf	sprintf@s& (0+255),w,b
  1657  002D4A  6ED9               	movwf	fsr2l,c
  1658  002D4C  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1659  002D4E  21BB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1660  002D50  6EDA               	movwf	fsr2h,c
  1661  002D52  0E00               	movlw	0
  1662  002D54  6EDF               	movwf	indf2,c
  1663                           
  1664                           ; BSR set to: 0
  1665  002D56  0012               	return		;funcret
  1666  002D58  FFFF               	dw	65535	; errata NOP
  1667  002D5A                     __end_of_sprintf:
  1668                           	opt callstack 0
  1669                           
  1670 ;; *************** function _vfprintf *****************
  1671 ;; Defined at:
  1672 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1675 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1676 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1677 ;;		 -> STR_2(3), STR_1(4), 
  1678 ;;  ap              2  117[COMRAM] PTR PTR void 
  1679 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1682 ;;		 -> STR_2(3), STR_1(4), 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2  113[COMRAM] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         6       0       0       0       0       0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0
  1695 ;;      Totals:         8       0       0       0       0       0       0
  1696 ;;Total ram usage:        8 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    8
  1699 ;; This function calls:
  1700 ;;		_vfpfcnvrt
  1701 ;; This function is called by:
  1702 ;;		_sprintf
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text6
  1707  002CA4                     __ptext6:
  1708                           	opt callstack 0
  1709  002CA4                     _vfprintf:
  1710                           	opt callstack 0
  1711  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  1712                           
  1713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;incstack = 0
  1717  002CA6  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1718  002CAA  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1719                           
  1720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1721  002CAE  0E00               	movlw	0
  1722  002CB0  0100               	movlb	0	; () banked
  1723  002CB2  6F90               	movwf	(_nout+1)& (0+255),b
  1724  002CB4  0E00               	movlw	0
  1725  002CB6  6F8F               	movwf	_nout& (0+255),b
  1726                           
  1727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1728  002CB8  D014               	goto	l3769
  1729  002CBA                     l3767:
  1730  002CBA  FFFF               	dw	65535	; assembler added errata NOP
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1734  002CBC  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1735  002CC0  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1736  002CC4  0E78               	movlw	low vfprintf@cfmt
  1737  002CC6  6E45               	movwf	vfpfcnvrt@fmt,c
  1738  002CC8  0E00               	movlw	high vfprintf@cfmt
  1739  002CCA  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1740  002CCC  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1741  002CD0  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1742  002CD4  EC54  F003         	call	_vfpfcnvrt	;wreg free
  1743  002CD8  5043               	movf	?_vfpfcnvrt,w,c
  1744  002CDA  0100               	movlb	0	; () banked
  1745  002CDC  278F               	addwf	_nout& (0+255),f,b
  1746  002CDE  5044               	movf	?_vfpfcnvrt+1,w,c
  1747  002CE0  2390               	addwfc	(_nout+1)& (0+255),f,b
  1748  002CE2                     l3769:
  1749  002CE2  FFFF               	dw	65535	; assembler added errata NOP
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1753  002CE4  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1754  002CE8  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1755  002CEC                     	if	0	;tblptru may be non-zero
  1756  002CEC                     	endif
  1757  002CEC                     	if	0	;tblptru may be non-zero
  1758  002CEC                     	endif
  1759  002CEC  0008               	tblrd		*
  1760  002CEE  FFFF               	dw	65535	; errata NOP
  1761  002CF0  50F5               	movf	tablat,w,c
  1762  002CF2  0900               	iorlw	0
  1763  002CF4  A4D8               	btfss	status,2,c
  1764  002CF6  D7E1               	goto	l3767
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1768  002CF8  C08F  F072         	movff	_nout,?_vfprintf
  1769  002CFC  C090  F073         	movff	_nout+1,?_vfprintf+1
  1770                           
  1771                           ; BSR set to: 0
  1772  002D00  0012               	return		;funcret
  1773  002D02  FFFF               	dw	65535	; errata NOP
  1774  002D04                     __end_of_vfprintf:
  1775                           	opt callstack 0
  1776                           
  1777 ;; *************** function _vfpfcnvrt *****************
  1778 ;; Defined at:
  1779 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1782 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1783 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1784 ;;		 -> vfprintf@cfmt(2), 
  1785 ;;  ap              2   70[COMRAM] PTR PTR void 
  1786 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  llu             8  105[COMRAM] unsigned long long 
  1789 ;;  ll              8   94[COMRAM] long long 
  1790 ;;  f               4    0        long long 
  1791 ;;  ct              3    0        unsigned char [3]
  1792 ;;  vp              2  102[COMRAM] PTR void 
  1793 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1794 ;;  done            2   88[COMRAM] int 
  1795 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1796 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1797 ;;  i               2    0        int 
  1798 ;;  c               1  104[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2   66[COMRAM] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1808 ;;      Params:         6       0       0       0       0       0       0
  1809 ;;      Locals:        27       0       0       0       0       0       0
  1810 ;;      Temps:         14       0       0       0       0       0       0
  1811 ;;      Totals:        47       0       0       0       0       0       0
  1812 ;;Total ram usage:       47 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    7
  1815 ;; This function calls:
  1816 ;;		_atoi
  1817 ;;		_ctoa
  1818 ;;		_dtoa
  1819 ;;		_fputc
  1820 ;;		_isdigit
  1821 ;;		_otoa
  1822 ;;		_stoa
  1823 ;;		_strncmp
  1824 ;;		_utoa
  1825 ;;		_xtoa
  1826 ;; This function is called by:
  1827 ;;		_vfprintf
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text7
  1832  0006A8                     __ptext7:
  1833                           	opt callstack 0
  1834  0006A8                     _vfpfcnvrt:
  1835                           	opt callstack 0
  1836  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  1837                           
  1838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;incstack = 0
  1842  0006AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1843  0006AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1844  0006B2  CFDE FFF6          	movff	postinc2,tblptrl
  1845  0006B6  CFDD FFF7          	movff	postdec2,tblptrh
  1846  0006BA                     	if	0	;tblptru may be non-zero
  1847  0006BA                     	endif
  1848  0006BA                     	if	0	;tblptru may be non-zero
  1849  0006BA                     	endif
  1850  0006BA  0008               	tblrd		*
  1851  0006BC  FFFF               	dw	65535	; errata NOP
  1852  0006BE  50F5               	movf	tablat,w,c
  1853  0006C0  0A25               	xorlw	37
  1854  0006C2  A4D8               	btfss	status,2,c
  1855  0006C4  EF05  F00C         	goto	l3747
  1856                           
  1857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1858  0006C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  0006CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  0006D0  2ADE               	incf	postinc2,f,c
  1861  0006D2  0E00               	movlw	0
  1862  0006D4  22DD               	addwfc	postdec2,f,c
  1863                           
  1864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1865  0006D6  0E00               	movlw	0
  1866  0006D8  0100               	movlb	0	; () banked
  1867  0006DA  6F92               	movwf	(_width+1)& (0+255),b
  1868  0006DC  0E00               	movlw	0
  1869  0006DE  6F91               	movwf	_width& (0+255),b
  1870  0006E0  C091  F095         	movff	_width,_flags
  1871  0006E4  C092  F096         	movff	_width+1,_flags+1
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1875  0006E8  6993               	setf	_prec& (0+255),b
  1876  0006EA  6994               	setf	(_prec+1)& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1880  0006EC  0E00               	movlw	0
  1881  0006EE  6E5A               	movwf	vfpfcnvrt@done+1,c
  1882  0006F0  0E00               	movlw	0
  1883  0006F2  D020               	goto	L1
  1884  0006F4                     l3389:
  1885  0006F4  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1888  0006F6  0100               	movlb	0	; () banked
  1889  0006F8  8195               	bsf	_flags& (0+255),0,b
  1890  0006FA                     l3391:
  1891  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1895  0006FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1896  000700  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1897  000704  2ADE               	incf	postinc2,f,c
  1898  000706  0E00               	movlw	0
  1899  000708  22DD               	addwfc	postdec2,f,c
  1900                           
  1901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1902  00070A  D03A               	goto	l3415
  1903  00070C                     l3393:
  1904  00070C  FFFF               	dw	65535	; assembler added errata NOP
  1905                           
  1906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1907  00070E  0100               	movlb	0	; () banked
  1908  000710  8395               	bsf	_flags& (0+255),1,b
  1909  000712  D7F3               	goto	l3391
  1910  000714                     l3397:
  1911  000714  FFFF               	dw	65535	; assembler added errata NOP
  1912                           
  1913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1914  000716  0100               	movlb	0	; () banked
  1915  000718  8595               	bsf	_flags& (0+255),2,b
  1916  00071A  D7EF               	goto	l3391
  1917  00071C                     l3401:
  1918  00071C  FFFF               	dw	65535	; assembler added errata NOP
  1919                           
  1920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1921  00071E  0100               	movlb	0	; () banked
  1922  000720  8795               	bsf	_flags& (0+255),3,b
  1923  000722  D7EB               	goto	l3391
  1924  000724                     l3405:
  1925  000724  FFFF               	dw	65535	; assembler added errata NOP
  1926                           
  1927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1928  000726  0100               	movlb	0	; () banked
  1929  000728  8995               	bsf	_flags& (0+255),4,b
  1930  00072A  D7E7               	goto	l3391
  1931  00072C                     l3409:
  1932  00072C  FFFF               	dw	65535	; assembler added errata NOP
  1933                           
  1934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1935  00072E  0E00               	movlw	0
  1936  000730  6E5A               	movwf	vfpfcnvrt@done+1,c
  1937  000732  0E01               	movlw	1
  1938  000734                     L1:
  1939  000734  FFFF               	dw	65535	; assembler added errata NOP
  1940  000736  6E59               	movwf	vfpfcnvrt@done,c
  1941                           
  1942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1943  000738  D023               	goto	l3415
  1944  00073A                     l3413:
  1945  00073A  FFFF               	dw	65535	; assembler added errata NOP
  1946  00073C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947  000740  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  000744  CFDE FFF6          	movff	postinc2,tblptrl
  1949  000748  CFDD FFF7          	movff	postdec2,tblptrh
  1950  00074C                     	if	0	;tblptru may be non-zero
  1951  00074C                     	endif
  1952  00074C                     	if	0	;tblptru may be non-zero
  1953  00074C                     	endif
  1954  00074C  0008               	tblrd		*
  1955  00074E  FFFF               	dw	65535	; errata NOP
  1956  000750  50F5               	movf	tablat,w,c
  1957  000752  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1958  000754  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1959                           
  1960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1961                           ; Switch size 1, requested type "simple"
  1962                           ; Number of cases is 1, Range of values is 0 to 0
  1963                           ; switch strategies available:
  1964                           ; Name         Instructions Cycles
  1965                           ; simple_byte            4     3 (average)
  1966                           ;	Chosen strategy is simple_byte
  1967  000756  504A               	movf	??_vfpfcnvrt+1,w,c
  1968  000758  0A00               	xorlw	0	; case 0
  1969  00075A  A4D8               	btfss	status,2,c
  1970  00075C  D7E7               	goto	l3409
  1971                           
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 5, Range of values is 32 to 48
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte           16     9 (average)
  1977                           ;	Chosen strategy is simple_byte
  1978  00075E  5049               	movf	??_vfpfcnvrt,w,c
  1979  000760  0A20               	xorlw	32	; case 32
  1980  000762  B4D8               	btfsc	status,2,c
  1981  000764  D7DB               	goto	l3401
  1982  000766  0A03               	xorlw	3	; case 35
  1983  000768  B4D8               	btfsc	status,2,c
  1984  00076A  D7DC               	goto	l3405
  1985  00076C  0A08               	xorlw	8	; case 43
  1986  00076E  B4D8               	btfsc	status,2,c
  1987  000770  D7D1               	goto	l3397
  1988  000772  0A06               	xorlw	6	; case 45
  1989  000774  B4D8               	btfsc	status,2,c
  1990  000776  D7BE               	goto	l3389
  1991  000778  0A1D               	xorlw	29	; case 48
  1992  00077A  B4D8               	btfsc	status,2,c
  1993  00077C  D7C7               	goto	l3393
  1994  00077E  D7D6               	goto	l3409
  1995  000780                     l3415:
  1996  000780  FFFF               	dw	65535	; assembler added errata NOP
  1997                           
  1998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1999  000782  5059               	movf	vfpfcnvrt@done,w,c
  2000  000784  105A               	iorwf	vfpfcnvrt@done+1,w,c
  2001  000786  B4D8               	btfsc	status,2,c
  2002  000788  D7D8               	goto	l3413
  2003                           
  2004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  2005  00078A  0100               	movlb	0	; () banked
  2006  00078C  B195               	btfsc	_flags& (0+255),0,b
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  2010  00078E  9395               	bcf	_flags& (0+255),1,b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2014  000790  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2015  000794  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2016  000798  CFDE FFF6          	movff	postinc2,tblptrl
  2017  00079C  CFDD FFF7          	movff	postdec2,tblptrh
  2018  0007A0                     	if	0	;tblptru may be non-zero
  2019  0007A0                     	endif
  2020  0007A0                     	if	0	;tblptru may be non-zero
  2021  0007A0                     	endif
  2022  0007A0  0008               	tblrd		*
  2023  0007A2  FFFF               	dw	65535	; errata NOP
  2024  0007A4  50F5               	movf	tablat,w,c
  2025  0007A6  0A2A               	xorlw	42
  2026  0007A8  A4D8               	btfss	status,2,c
  2027  0007AA  D023               	goto	l3427
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2031  0007AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2032  0007B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2033  0007B4  2ADE               	incf	postinc2,f,c
  2034  0007B6  0E00               	movlw	0
  2035  0007B8  22DD               	addwfc	postdec2,f,c
  2036                           
  2037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2038  0007BA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2039  0007BE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2040  0007C2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2041  0007C6  0E02               	movlw	2
  2042  0007C8  26DE               	addwf	postinc2,f,c
  2043  0007CA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2044  0007CE  0E00               	movlw	0
  2045  0007D0  22DD               	addwfc	postdec2,f,c
  2046  0007D2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2047  0007D6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2048  0007DA  CFDE F091          	movff	postinc2,_width
  2049  0007DE  CFDD F092          	movff	postdec2,_width+1
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2053  0007E2  AF92               	btfss	(_width+1)& (0+255),7,b
  2054  0007E4  D045               	goto	u3160
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2058  0007E6  8195               	bsf	_flags& (0+255),0,b
  2059                           
  2060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2061  0007E8  6D91               	negf	_width& (0+255),b
  2062  0007EA  1F92               	comf	(_width+1)& (0+255),f,b
  2063  0007EC  B0D8               	btfsc	status,0,c
  2064  0007EE  2B92               	incf	(_width+1)& (0+255),f,b
  2065  0007F0  D03F               	goto	u3160
  2066  0007F2                     l3427:
  2067  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2071  0007F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  0007F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  0007FC  CFDE F008          	movff	postinc2,atoi@s
  2074  000800  CFDD F009          	movff	postdec2,atoi@s+1
  2075  000804  EC0A  F011         	call	_atoi	;wreg free
  2076  000808  C008  F091         	movff	?_atoi,_width
  2077  00080C  C009  F092         	movff	?_atoi+1,_width+1
  2078                           
  2079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2080  000810  D008               	goto	l3431
  2081  000812                     l3429:
  2082  000812  FFFF               	dw	65535	; assembler added errata NOP
  2083                           
  2084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2085  000814  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086  000818  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087  00081C  2ADE               	incf	postinc2,f,c
  2088  00081E  0E00               	movlw	0
  2089  000820  22DD               	addwfc	postdec2,f,c
  2090  000822                     l3431:
  2091  000822  FFFF               	dw	65535	; assembler added errata NOP
  2092  000824  0ED0               	movlw	208
  2093  000826  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2094  000828  0EFF               	movlw	255
  2095  00082A  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2096  00082C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2097  000830  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2098  000834  CFDE FFF6          	movff	postinc2,tblptrl
  2099  000838  CFDD FFF7          	movff	postdec2,tblptrh
  2100  00083C                     	if	0	;tblptru may be non-zero
  2101  00083C                     	endif
  2102  00083C                     	if	0	;tblptru may be non-zero
  2103  00083C                     	endif
  2104  00083C  0008               	tblrd		*
  2105  00083E  FFFF               	dw	65535	; errata NOP
  2106  000840  50F5               	movf	tablat,w,c
  2107  000842  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2108  000844  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2109  000846  5049               	movf	??_vfpfcnvrt,w,c
  2110  000848  264B               	addwf	??_vfpfcnvrt+2,f,c
  2111  00084A  504A               	movf	??_vfpfcnvrt+1,w,c
  2112  00084C  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2113  00084E  504C               	movf	??_vfpfcnvrt+3,w,c
  2114  000850  E106               	bnz	u3140
  2115  000852  0E0A               	movlw	10
  2116  000854  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2117  000856  B0D8               	btfsc	status,0,c
  2118  000858  D002               	goto	u3140
  2119  00085A  0E01               	movlw	1
  2120  00085C  D002               	goto	u3150
  2121  00085E                     u3140:
  2122  00085E  FFFF               	dw	65535	; assembler added errata NOP
  2123  000860  0E00               	movlw	0
  2124  000862                     u3150:
  2125  000862  FFFF               	dw	65535	; assembler added errata NOP
  2126  000864  6E5B               	movwf	_vfpfcnvrt$1078,c
  2127  000866  6A5C               	clrf	_vfpfcnvrt$1078+1,c
  2128  000868  505B               	movf	_vfpfcnvrt$1078,w,c
  2129  00086A  105C               	iorwf	_vfpfcnvrt$1078+1,w,c
  2130  00086C  A4D8               	btfss	status,2,c
  2131  00086E  D7D1               	goto	l3429
  2132  000870                     u3160:
  2133  000870  FFFF               	dw	65535	; assembler added errata NOP
  2134                           
  2135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2136  000872  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2137  000876  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2138  00087A  CFDE FFF6          	movff	postinc2,tblptrl
  2139  00087E  CFDD FFF7          	movff	postdec2,tblptrh
  2140  000882                     	if	0	;tblptru may be non-zero
  2141  000882                     	endif
  2142  000882                     	if	0	;tblptru may be non-zero
  2143  000882                     	endif
  2144  000882  0008               	tblrd		*
  2145  000884  FFFF               	dw	65535	; errata NOP
  2146  000886  50F5               	movf	tablat,w,c
  2147  000888  0A2E               	xorlw	46
  2148  00088A  A4D8               	btfss	status,2,c
  2149  00088C  D075               	goto	u3210
  2150                           
  2151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2152  00088E  0E00               	movlw	0
  2153  000890  0100               	movlb	0	; () banked
  2154  000892  6F94               	movwf	(_prec+1)& (0+255),b
  2155  000894  0E00               	movlw	0
  2156  000896  6F93               	movwf	_prec& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2160  000898  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  00089C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  0008A0  2ADE               	incf	postinc2,f,c
  2163  0008A2  0E00               	movlw	0
  2164  0008A4  22DD               	addwfc	postdec2,f,c
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2168  0008A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  0008AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  0008AE  CFDE FFF6          	movff	postinc2,tblptrl
  2171  0008B2  CFDD FFF7          	movff	postdec2,tblptrh
  2172  0008B6                     	if	0	;tblptru may be non-zero
  2173  0008B6                     	endif
  2174  0008B6                     	if	0	;tblptru may be non-zero
  2175  0008B6                     	endif
  2176  0008B6  0008               	tblrd		*
  2177  0008B8  FFFF               	dw	65535	; errata NOP
  2178  0008BA  50F5               	movf	tablat,w,c
  2179  0008BC  0A2A               	xorlw	42
  2180  0008BE  A4D8               	btfss	status,2,c
  2181  0008C0  D01C               	goto	l3447
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2185  0008C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  0008C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  0008CA  2ADE               	incf	postinc2,f,c
  2188  0008CC  0E00               	movlw	0
  2189  0008CE  22DD               	addwfc	postdec2,f,c
  2190                           
  2191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2192  0008D0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2193  0008D4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2194  0008D8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2195  0008DC  0E02               	movlw	2
  2196  0008DE  26DE               	addwf	postinc2,f,c
  2197  0008E0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2198  0008E4  0E00               	movlw	0
  2199  0008E6  22DD               	addwfc	postdec2,f,c
  2200  0008E8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2201  0008EC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2202  0008F0  CFDE F093          	movff	postinc2,_prec
  2203  0008F4  CFDD F094          	movff	postdec2,_prec+1
  2204                           
  2205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2206  0008F8  D03F               	goto	u3210
  2207  0008FA                     l3447:
  2208  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2212  0008FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2213  000900  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2214  000904  CFDE F008          	movff	postinc2,atoi@s
  2215  000908  CFDD F009          	movff	postdec2,atoi@s+1
  2216  00090C  EC0A  F011         	call	_atoi	;wreg free
  2217  000910  C008  F093         	movff	?_atoi,_prec
  2218  000914  C009  F094         	movff	?_atoi+1,_prec+1
  2219                           
  2220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2221  000918  D008               	goto	l3451
  2222  00091A                     l3449:
  2223  00091A  FFFF               	dw	65535	; assembler added errata NOP
  2224                           
  2225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2226  00091C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2227  000920  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2228  000924  2ADE               	incf	postinc2,f,c
  2229  000926  0E00               	movlw	0
  2230  000928  22DD               	addwfc	postdec2,f,c
  2231  00092A                     l3451:
  2232  00092A  FFFF               	dw	65535	; assembler added errata NOP
  2233  00092C  0ED0               	movlw	208
  2234  00092E  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2235  000930  0EFF               	movlw	255
  2236  000932  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2237  000934  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  000938  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  00093C  CFDE FFF6          	movff	postinc2,tblptrl
  2240  000940  CFDD FFF7          	movff	postdec2,tblptrh
  2241  000944                     	if	0	;tblptru may be non-zero
  2242  000944                     	endif
  2243  000944                     	if	0	;tblptru may be non-zero
  2244  000944                     	endif
  2245  000944  0008               	tblrd		*
  2246  000946  FFFF               	dw	65535	; errata NOP
  2247  000948  50F5               	movf	tablat,w,c
  2248  00094A  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2249  00094C  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2250  00094E  5049               	movf	??_vfpfcnvrt,w,c
  2251  000950  264B               	addwf	??_vfpfcnvrt+2,f,c
  2252  000952  504A               	movf	??_vfpfcnvrt+1,w,c
  2253  000954  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2254  000956  504C               	movf	??_vfpfcnvrt+3,w,c
  2255  000958  E106               	bnz	u3190
  2256  00095A  0E0A               	movlw	10
  2257  00095C  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2258  00095E  B0D8               	btfsc	status,0,c
  2259  000960  D002               	goto	u3190
  2260  000962  0E01               	movlw	1
  2261  000964  D002               	goto	u3200
  2262  000966                     u3190:
  2263  000966  FFFF               	dw	65535	; assembler added errata NOP
  2264  000968  0E00               	movlw	0
  2265  00096A                     u3200:
  2266  00096A  FFFF               	dw	65535	; assembler added errata NOP
  2267  00096C  6E5D               	movwf	_vfpfcnvrt$1079,c
  2268  00096E  6A5E               	clrf	_vfpfcnvrt$1079+1,c
  2269  000970  505D               	movf	_vfpfcnvrt$1079,w,c
  2270  000972  105E               	iorwf	_vfpfcnvrt$1079+1,w,c
  2271  000974  A4D8               	btfss	status,2,c
  2272  000976  D7D1               	goto	l3449
  2273  000978                     u3210:
  2274  000978  FFFF               	dw	65535	; assembler added errata NOP
  2275                           
  2276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2277  00097A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2278  00097E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2279  000982  CFDE FFF6          	movff	postinc2,tblptrl
  2280  000986  CFDD FFF7          	movff	postdec2,tblptrh
  2281  00098A                     	if	0	;tblptru may be non-zero
  2282  00098A                     	endif
  2283  00098A                     	if	0	;tblptru may be non-zero
  2284  00098A                     	endif
  2285  00098A  0008               	tblrd		*
  2286  00098C  FFFF               	dw	65535	; errata NOP
  2287  00098E  50F5               	movf	tablat,w,c
  2288  000990  0A63               	xorlw	99
  2289  000992  A4D8               	btfss	status,2,c
  2290  000994  D027               	goto	l3465
  2291                           
  2292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2293  000996  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  00099A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  00099E  2ADE               	incf	postinc2,f,c
  2296  0009A0  0E00               	movlw	0
  2297  0009A2  22DD               	addwfc	postdec2,f,c
  2298                           
  2299                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2300  0009A4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2301  0009A8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2302  0009AC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2303  0009B0  0E02               	movlw	2
  2304  0009B2  26DE               	addwf	postinc2,f,c
  2305  0009B4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2306  0009B8  0E00               	movlw	0
  2307  0009BA  22DD               	addwfc	postdec2,f,c
  2308  0009BC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2309  0009C0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2310  0009C4  50DF               	movf	indf2,w,c
  2311  0009C6  6E69               	movwf	vfpfcnvrt@c,c
  2312                           
  2313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2314  0009C8  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2315  0009CC  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2316  0009D0  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2317  0009D4  ECD8  F016         	call	_ctoa	;wreg free
  2318  0009D8  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2319  0009DC  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2320  0009E0  EF21  F00C         	goto	l506
  2321  0009E4                     l3465:
  2322  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  2323                           
  2324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2325  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2326  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2327  0009EE  CFDE F001          	movff	postinc2,strncmp@_l
  2328  0009F2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2329  0009F6  0E5D               	movlw	low STR_10
  2330  0009F8  6E03               	movwf	strncmp@_r,c
  2331  0009FA  0E06               	movlw	high STR_10
  2332  0009FC  6E04               	movwf	strncmp@_r+1,c
  2333  0009FE  0E00               	movlw	0
  2334  000A00  6E06               	movwf	strncmp@n+1,c
  2335  000A02  0E03               	movlw	3
  2336  000A04  6E05               	movwf	strncmp@n,c
  2337  000A06  EC17  F014         	call	_strncmp	;wreg free
  2338  000A0A  5001               	movf	?_strncmp,w,c
  2339  000A0C  1002               	iorwf	?_strncmp+1,w,c
  2340  000A0E  B4D8               	btfsc	status,2,c
  2341  000A10  D016               	goto	u3240
  2342  000A12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2343  000A16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  000A1A  CFDE F001          	movff	postinc2,strncmp@_l
  2345  000A1E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2346  000A22  0E61               	movlw	low STR_14
  2347  000A24  6E03               	movwf	strncmp@_r,c
  2348  000A26  0E06               	movlw	high STR_14
  2349  000A28  6E04               	movwf	strncmp@_r+1,c
  2350  000A2A  0E00               	movlw	0
  2351  000A2C  6E06               	movwf	strncmp@n+1,c
  2352  000A2E  0E03               	movlw	3
  2353  000A30  6E05               	movwf	strncmp@n,c
  2354  000A32  EC17  F014         	call	_strncmp	;wreg free
  2355  000A36  5001               	movf	?_strncmp,w,c
  2356  000A38  1002               	iorwf	?_strncmp+1,w,c
  2357  000A3A  A4D8               	btfss	status,2,c
  2358  000A3C  D043               	goto	l3475
  2359  000A3E                     u3240:
  2360  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  2361                           
  2362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2363  000A40  0E03               	movlw	3
  2364  000A42  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  000A46  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  000A4A  26DE               	addwf	postinc2,f,c
  2367  000A4C  0E00               	movlw	0
  2368  000A4E  22DD               	addwfc	postdec2,f,c
  2369                           
  2370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2371  000A50  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2372  000A54  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2373  000A58  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2374  000A5C  0E02               	movlw	2
  2375  000A5E  26DE               	addwf	postinc2,f,c
  2376  000A60  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2377  000A64  0E00               	movlw	0
  2378  000A66  22DD               	addwfc	postdec2,f,c
  2379  000A68  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2380  000A6C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2381  000A70  50DF               	movf	indf2,w,c
  2382  000A72  6E5F               	movwf	vfpfcnvrt@ll,c
  2383  000A74  0E00               	movlw	0
  2384  000A76  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2385  000A78  0EFF               	movlw	-1
  2386  000A7A  6E60               	movwf	vfpfcnvrt@ll+1,c
  2387  000A7C                     L2:
  2388  000A7C  FFFF               	dw	65535	; assembler added errata NOP
  2389  000A7E  6E61               	movwf	vfpfcnvrt@ll+2,c
  2390  000A80  6E62               	movwf	vfpfcnvrt@ll+3,c
  2391  000A82  6E63               	movwf	vfpfcnvrt@ll+4,c
  2392  000A84  6E64               	movwf	vfpfcnvrt@ll+5,c
  2393  000A86  6E65               	movwf	vfpfcnvrt@ll+6,c
  2394  000A88  6E66               	movwf	vfpfcnvrt@ll+7,c
  2395  000A8A                     l3471:
  2396  000A8A  FFFF               	dw	65535	; assembler added errata NOP
  2397                           
  2398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2399  000A8C  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2400  000A90  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2401  000A94  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2402  000A98  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2403  000A9C  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2404  000AA0  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2405  000AA4  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2406  000AA8  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2407  000AAC  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2408  000AB0  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2409  000AB4  EC24  F00C         	call	_dtoa	;wreg free
  2410  000AB8  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2411  000ABC  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2412  000AC0  EF21  F00C         	goto	l506
  2413  000AC4                     l3475:
  2414  000AC4  FFFF               	dw	65535	; assembler added errata NOP
  2415                           
  2416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2417  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  000ACE  CFDE F001          	movff	postinc2,strncmp@_l
  2420  000AD2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2421  000AD6  0E5E               	movlw	low (STR_10+1)
  2422  000AD8  6E03               	movwf	strncmp@_r,c
  2423  000ADA  0E06               	movlw	high (STR_10+1)
  2424  000ADC  6E04               	movwf	strncmp@_r+1,c
  2425  000ADE  0E00               	movlw	0
  2426  000AE0  6E06               	movwf	strncmp@n+1,c
  2427  000AE2  0E02               	movlw	2
  2428  000AE4  6E05               	movwf	strncmp@n,c
  2429  000AE6  EC17  F014         	call	_strncmp	;wreg free
  2430  000AEA  5001               	movf	?_strncmp,w,c
  2431  000AEC  1002               	iorwf	?_strncmp+1,w,c
  2432  000AEE  B4D8               	btfsc	status,2,c
  2433  000AF0  D016               	goto	u3260
  2434  000AF2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  000AF6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  000AFA  CFDE F001          	movff	postinc2,strncmp@_l
  2437  000AFE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2438  000B02  0E62               	movlw	low (STR_14+1)
  2439  000B04  6E03               	movwf	strncmp@_r,c
  2440  000B06  0E06               	movlw	high (STR_14+1)
  2441  000B08  6E04               	movwf	strncmp@_r+1,c
  2442  000B0A  0E00               	movlw	0
  2443  000B0C  6E06               	movwf	strncmp@n+1,c
  2444  000B0E  0E02               	movlw	2
  2445  000B10  6E05               	movwf	strncmp@n,c
  2446  000B12  EC17  F014         	call	_strncmp	;wreg free
  2447  000B16  5001               	movf	?_strncmp,w,c
  2448  000B18  1002               	iorwf	?_strncmp+1,w,c
  2449  000B1A  A4D8               	btfss	status,2,c
  2450  000B1C  D008               	goto	l3485
  2451  000B1E                     u3260:
  2452  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  2453                           
  2454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2455  000B20  0E02               	movlw	2
  2456  000B22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2457  000B26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2458  000B2A  26DE               	addwf	postinc2,f,c
  2459  000B2C  D023               	goto	L12
  2460  000B2E                     l3485:
  2461  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  2462                           
  2463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2464  000B30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2465  000B34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2466  000B38  CFDE FFF6          	movff	postinc2,tblptrl
  2467  000B3C  CFDD FFF7          	movff	postdec2,tblptrh
  2468  000B40                     	if	0	;tblptru may be non-zero
  2469  000B40                     	endif
  2470  000B40                     	if	0	;tblptru may be non-zero
  2471  000B40                     	endif
  2472  000B40  0008               	tblrd		*
  2473  000B42  FFFF               	dw	65535	; errata NOP
  2474  000B44  50F5               	movf	tablat,w,c
  2475  000B46  0A64               	xorlw	100
  2476  000B48  B4D8               	btfsc	status,2,c
  2477  000B4A  D00E               	goto	u3280
  2478  000B4C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2479  000B50  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  000B54  CFDE FFF6          	movff	postinc2,tblptrl
  2481  000B58  CFDD FFF7          	movff	postdec2,tblptrh
  2482  000B5C                     	if	0	;tblptru may be non-zero
  2483  000B5C                     	endif
  2484  000B5C                     	if	0	;tblptru may be non-zero
  2485  000B5C                     	endif
  2486  000B5C  0008               	tblrd		*
  2487  000B5E  FFFF               	dw	65535	; errata NOP
  2488  000B60  50F5               	movf	tablat,w,c
  2489  000B62  0A69               	xorlw	105
  2490  000B64  A4D8               	btfss	status,2,c
  2491  000B66  D021               	goto	l3495
  2492  000B68                     u3280:
  2493  000B68  FFFF               	dw	65535	; assembler added errata NOP
  2494                           
  2495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2496  000B6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497  000B6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498  000B72  2ADE               	incf	postinc2,f,c
  2499  000B74                     L12:
  2500  000B74  FFFF               	dw	65535	; assembler added errata NOP
  2501  000B76  0E00               	movlw	0
  2502  000B78  22DD               	addwfc	postdec2,f,c
  2503                           
  2504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2505  000B7A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2506  000B7E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2507  000B82  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2508  000B86  0E02               	movlw	2
  2509  000B88  26DE               	addwf	postinc2,f,c
  2510  000B8A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2511  000B8E  0E00               	movlw	0
  2512  000B90  22DD               	addwfc	postdec2,f,c
  2513  000B92  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2514  000B96  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2515  000B9A  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2516  000B9E  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2517  000BA2  0E00               	movlw	0
  2518  000BA4  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2519  000BA6  0EFF               	movlw	-1
  2520  000BA8  D769               	goto	L2
  2521  000BAA                     l3495:
  2522  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  2523                           
  2524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2525  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527  000BB4  CFDE F001          	movff	postinc2,strncmp@_l
  2528  000BB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2529  000BBC  0E7F               	movlw	low STR_28
  2530  000BBE  6E03               	movwf	strncmp@_r,c
  2531  000BC0  0E06               	movlw	high STR_28
  2532  000BC2  6E04               	movwf	strncmp@_r+1,c
  2533  000BC4  0E00               	movlw	0
  2534  000BC6  6E06               	movwf	strncmp@n+1,c
  2535  000BC8  0E02               	movlw	2
  2536  000BCA  6E05               	movwf	strncmp@n,c
  2537  000BCC  EC17  F014         	call	_strncmp	;wreg free
  2538  000BD0  5001               	movf	?_strncmp,w,c
  2539  000BD2  1002               	iorwf	?_strncmp+1,w,c
  2540  000BD4  B4D8               	btfsc	status,2,c
  2541  000BD6  D016               	goto	u3300
  2542  000BD8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  000BDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  000BE0  CFDE F001          	movff	postinc2,strncmp@_l
  2545  000BE4  CFDD F002          	movff	postdec2,strncmp@_l+1
  2546  000BE8  0E85               	movlw	low STR_32
  2547  000BEA  6E03               	movwf	strncmp@_r,c
  2548  000BEC  0E06               	movlw	high STR_32
  2549  000BEE  6E04               	movwf	strncmp@_r+1,c
  2550  000BF0  0E00               	movlw	0
  2551  000BF2  6E06               	movwf	strncmp@n+1,c
  2552  000BF4  0E02               	movlw	2
  2553  000BF6  6E05               	movwf	strncmp@n,c
  2554  000BF8  EC17  F014         	call	_strncmp	;wreg free
  2555  000BFC  5001               	movf	?_strncmp,w,c
  2556  000BFE  1002               	iorwf	?_strncmp+1,w,c
  2557  000C00  A4D8               	btfss	status,2,c
  2558  000C02  D043               	goto	l3505
  2559  000C04                     u3300:
  2560  000C04  FFFF               	dw	65535	; assembler added errata NOP
  2561                           
  2562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2563  000C06  0E02               	movlw	2
  2564  000C08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565  000C0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566  000C10  26DE               	addwf	postinc2,f,c
  2567  000C12  0E00               	movlw	0
  2568  000C14  22DD               	addwfc	postdec2,f,c
  2569                           
  2570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2571  000C16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2572  000C1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2573  000C1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2574  000C22  0E04               	movlw	4
  2575  000C24  26DE               	addwf	postinc2,f,c
  2576  000C26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2577  000C2A  0E00               	movlw	0
  2578  000C2C  22DD               	addwfc	postdec2,f,c
  2579  000C2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2580  000C32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2581  000C36  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2582  000C3A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2583  000C3E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2584  000C42  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2585  000C46  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2586  000C4A  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2587  000C4E  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2588  000C52  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2589  000C56  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2590  000C58  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2591  000C5A  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2592  000C5C  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2593  000C60  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2594  000C64  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2595  000C68  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2596  000C6C  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2597  000C70  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2598  000C74  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2599  000C78  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2600  000C7C  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2601  000C80  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2602  000C84  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2603  000C88  D700               	goto	l3471
  2604  000C8A                     l3505:
  2605  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  2606                           
  2607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2608  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  000C94  CFDE F001          	movff	postinc2,strncmp@_l
  2611  000C98  CFDD F002          	movff	postdec2,strncmp@_l+1
  2612  000C9C  0E82               	movlw	low STR_37
  2613  000C9E  6E03               	movwf	strncmp@_r,c
  2614  000CA0  0E06               	movlw	high STR_37
  2615  000CA2  6E04               	movwf	strncmp@_r+1,c
  2616  000CA4  0E00               	movlw	0
  2617  000CA6  6E06               	movwf	strncmp@n+1,c
  2618  000CA8  0E02               	movlw	2
  2619  000CAA  6E05               	movwf	strncmp@n,c
  2620  000CAC  EC17  F014         	call	_strncmp	;wreg free
  2621  000CB0  5001               	movf	?_strncmp,w,c
  2622  000CB2  1002               	iorwf	?_strncmp+1,w,c
  2623  000CB4  B4D8               	btfsc	status,2,c
  2624  000CB6  D016               	goto	u3320
  2625  000CB8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2626  000CBC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2627  000CC0  CFDE F001          	movff	postinc2,strncmp@_l
  2628  000CC4  CFDD F002          	movff	postdec2,strncmp@_l+1
  2629  000CC8  0E88               	movlw	low STR_41
  2630  000CCA  6E03               	movwf	strncmp@_r,c
  2631  000CCC  0E06               	movlw	high STR_41
  2632  000CCE  6E04               	movwf	strncmp@_r+1,c
  2633  000CD0  0E00               	movlw	0
  2634  000CD2  6E06               	movwf	strncmp@n+1,c
  2635  000CD4  0E02               	movlw	2
  2636  000CD6  6E05               	movwf	strncmp@n,c
  2637  000CD8  EC17  F014         	call	_strncmp	;wreg free
  2638  000CDC  5001               	movf	?_strncmp,w,c
  2639  000CDE  1002               	iorwf	?_strncmp+1,w,c
  2640  000CE0  A4D8               	btfss	status,2,c
  2641  000CE2  D028               	goto	l3515
  2642  000CE4                     u3320:
  2643  000CE4  FFFF               	dw	65535	; assembler added errata NOP
  2644                           
  2645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2646  000CE6  0E02               	movlw	2
  2647  000CE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  000CEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  000CF0  26DE               	addwf	postinc2,f,c
  2650  000CF2  0E00               	movlw	0
  2651  000CF4  22DD               	addwfc	postdec2,f,c
  2652                           
  2653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2654  000CF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2655  000CFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2656  000CFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2657  000D02  0E02               	movlw	2
  2658  000D04  26DE               	addwf	postinc2,f,c
  2659  000D06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2660  000D0A  0E00               	movlw	0
  2661  000D0C  22DD               	addwfc	postdec2,f,c
  2662  000D0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2663  000D12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2664  000D16  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2665  000D1A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2666  000D1E  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2667  000D22  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2668  000D26  6A61               	clrf	vfpfcnvrt@ll+2,c
  2669  000D28  6A62               	clrf	vfpfcnvrt@ll+3,c
  2670  000D2A  6A63               	clrf	vfpfcnvrt@ll+4,c
  2671  000D2C  6A64               	clrf	vfpfcnvrt@ll+5,c
  2672  000D2E  6A65               	clrf	vfpfcnvrt@ll+6,c
  2673  000D30  6A66               	clrf	vfpfcnvrt@ll+7,c
  2674  000D32  D6AB               	goto	l3471
  2675  000D34                     l3515:
  2676  000D34  FFFF               	dw	65535	; assembler added errata NOP
  2677                           
  2678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2679  000D36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  000D3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  000D3E  CFDE F001          	movff	postinc2,strncmp@_l
  2682  000D42  CFDD F002          	movff	postdec2,strncmp@_l+1
  2683  000D46  0E69               	movlw	low STR_46
  2684  000D48  6E03               	movwf	strncmp@_r,c
  2685  000D4A  0E06               	movlw	high STR_46
  2686  000D4C  6E04               	movwf	strncmp@_r+1,c
  2687  000D4E  0E00               	movlw	0
  2688  000D50  6E06               	movwf	strncmp@n+1,c
  2689  000D52  0E03               	movlw	3
  2690  000D54  6E05               	movwf	strncmp@n,c
  2691  000D56  EC17  F014         	call	_strncmp	;wreg free
  2692  000D5A  5001               	movf	?_strncmp,w,c
  2693  000D5C  1002               	iorwf	?_strncmp+1,w,c
  2694  000D5E  A4D8               	btfss	status,2,c
  2695  000D60  D041               	goto	l3523
  2696                           
  2697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2698  000D62  0E03               	movlw	3
  2699  000D64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2700  000D68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2701  000D6C  26DE               	addwf	postinc2,f,c
  2702  000D6E  0E00               	movlw	0
  2703  000D70  22DD               	addwfc	postdec2,f,c
  2704                           
  2705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2706  000D72  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2707  000D76  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2708  000D7A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2709  000D7E  0E02               	movlw	2
  2710  000D80  26DE               	addwf	postinc2,f,c
  2711  000D82  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2712  000D86  0E00               	movlw	0
  2713  000D88  22DD               	addwfc	postdec2,f,c
  2714  000D8A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2715  000D8E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2716  000D92  50DF               	movf	indf2,w,c
  2717  000D94  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2718  000D96  504B               	movf	??_vfpfcnvrt+2,w,c
  2719  000D98  6E6A               	movwf	vfpfcnvrt@llu,c
  2720  000D9A  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2721  000D9C                     L3:
  2722  000D9C  FFFF               	dw	65535	; assembler added errata NOP
  2723  000D9E  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2724  000DA0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2725  000DA2                     L4:
  2726  000DA2  FFFF               	dw	65535	; assembler added errata NOP
  2727  000DA4  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2728  000DA6  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2729  000DA8  6A70               	clrf	vfpfcnvrt@llu+6,c
  2730  000DAA  6A71               	clrf	vfpfcnvrt@llu+7,c
  2731                           
  2732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2733  000DAC  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2734  000DB0  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2735  000DB4  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2736  000DB8  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2737  000DBC  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2738  000DC0  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2739  000DC4  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2740  000DC8  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2741  000DCC  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2742  000DD0  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2743  000DD4  EC3D  F010         	call	_otoa	;wreg free
  2744  000DD8  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2745  000DDC  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2746  000DE0  EF21  F00C         	goto	l506
  2747  000DE4                     l3523:
  2748  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2749                           
  2750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2751  000DE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2752  000DEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2753  000DEE  CFDE F001          	movff	postinc2,strncmp@_l
  2754  000DF2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2755  000DF6  0E6A               	movlw	low (STR_46+1)
  2756  000DF8  6E03               	movwf	strncmp@_r,c
  2757  000DFA  0E06               	movlw	high (STR_46+1)
  2758  000DFC  6E04               	movwf	strncmp@_r+1,c
  2759  000DFE  0E00               	movlw	0
  2760  000E00  6E06               	movwf	strncmp@n+1,c
  2761  000E02  0E02               	movlw	2
  2762  000E04  6E05               	movwf	strncmp@n,c
  2763  000E06  EC17  F014         	call	_strncmp	;wreg free
  2764  000E0A  5001               	movf	?_strncmp,w,c
  2765  000E0C  1002               	iorwf	?_strncmp+1,w,c
  2766  000E0E  B4D8               	btfsc	status,2,c
  2767  000E10  D06B               	goto	u3370
  2768                           
  2769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2770                           
  2771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2772                           
  2773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2774  000E12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  000E16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  000E1A  CFDE FFF6          	movff	postinc2,tblptrl
  2777  000E1E  CFDD FFF7          	movff	postdec2,tblptrh
  2778  000E22                     	if	0	;tblptru may be non-zero
  2779  000E22                     	endif
  2780  000E22                     	if	0	;tblptru may be non-zero
  2781  000E22                     	endif
  2782  000E22  0008               	tblrd		*
  2783  000E24  FFFF               	dw	65535	; errata NOP
  2784  000E26  50F5               	movf	tablat,w,c
  2785  000E28  0A6F               	xorlw	111
  2786  000E2A  A4D8               	btfss	status,2,c
  2787  000E2C  D006               	goto	l3539
  2788                           
  2789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2790  000E2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2791  000E32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  000E36  2ADE               	incf	postinc2,f,c
  2793  000E38  D05E               	goto	L17
  2794  000E3A                     l3539:
  2795  000E3A  FFFF               	dw	65535	; assembler added errata NOP
  2796                           
  2797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2798  000E3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2799  000E40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2800  000E44  CFDE F001          	movff	postinc2,strncmp@_l
  2801  000E48  CFDD F002          	movff	postdec2,strncmp@_l+1
  2802  000E4C  0E91               	movlw	low STR_56
  2803  000E4E  6E03               	movwf	strncmp@_r,c
  2804  000E50  0E06               	movlw	high STR_56
  2805  000E52  6E04               	movwf	strncmp@_r+1,c
  2806  000E54  0E00               	movlw	0
  2807  000E56  6E06               	movwf	strncmp@n+1,c
  2808  000E58  0E02               	movlw	2
  2809  000E5A  6E05               	movwf	strncmp@n,c
  2810  000E5C  EC17  F014         	call	_strncmp	;wreg free
  2811  000E60  5001               	movf	?_strncmp,w,c
  2812  000E62  1002               	iorwf	?_strncmp+1,w,c
  2813  000E64  A4D8               	btfss	status,2,c
  2814  000E66  D029               	goto	l3547
  2815                           
  2816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2817  000E68  0E02               	movlw	2
  2818  000E6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2819  000E6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2820  000E72  26DE               	addwf	postinc2,f,c
  2821  000E74  0E00               	movlw	0
  2822  000E76  22DD               	addwfc	postdec2,f,c
  2823                           
  2824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2825  000E78  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2826  000E7C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2827  000E80  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2828  000E84  0E04               	movlw	4
  2829  000E86  26DE               	addwf	postinc2,f,c
  2830  000E88  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2831  000E8C  0E00               	movlw	0
  2832  000E8E  22DD               	addwfc	postdec2,f,c
  2833  000E90  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2834  000E94  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2835  000E98  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2836  000E9C  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2837  000EA0  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2838  000EA4  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2839  000EA8  504B               	movf	??_vfpfcnvrt+2,w,c
  2840  000EAA  6E6A               	movwf	vfpfcnvrt@llu,c
  2841  000EAC  504C               	movf	??_vfpfcnvrt+3,w,c
  2842  000EAE  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2843  000EB0  504D               	movf	??_vfpfcnvrt+4,w,c
  2844  000EB2  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2845  000EB4  504E               	movf	??_vfpfcnvrt+5,w,c
  2846  000EB6  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2847  000EB8  D774               	goto	L4
  2848  000EBA                     l3547:
  2849  000EBA  FFFF               	dw	65535	; assembler added errata NOP
  2850                           
  2851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2852  000EBC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  000EC0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  000EC4  CFDE F001          	movff	postinc2,strncmp@_l
  2855  000EC8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2856  000ECC  0E94               	movlw	low STR_61
  2857  000ECE  6E03               	movwf	strncmp@_r,c
  2858  000ED0  0E06               	movlw	high STR_61
  2859  000ED2  6E04               	movwf	strncmp@_r+1,c
  2860  000ED4  0E00               	movlw	0
  2861  000ED6  6E06               	movwf	strncmp@n+1,c
  2862  000ED8  0E02               	movlw	2
  2863  000EDA  6E05               	movwf	strncmp@n,c
  2864  000EDC  EC17  F014         	call	_strncmp	;wreg free
  2865  000EE0  5001               	movf	?_strncmp,w,c
  2866  000EE2  1002               	iorwf	?_strncmp+1,w,c
  2867  000EE4  A4D8               	btfss	status,2,c
  2868  000EE6  D023               	goto	l3555
  2869  000EE8                     u3370:
  2870  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  2871                           
  2872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2873  000EEA  0E02               	movlw	2
  2874  000EEC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  000EF0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  000EF4  26DE               	addwf	postinc2,f,c
  2877  000EF6                     L17:
  2878  000EF6  FFFF               	dw	65535	; assembler added errata NOP
  2879  000EF8  0E00               	movlw	0
  2880  000EFA  22DD               	addwfc	postdec2,f,c
  2881                           
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2883  000EFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2884  000F00  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2885  000F04  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2886  000F08  0E02               	movlw	2
  2887  000F0A  26DE               	addwf	postinc2,f,c
  2888  000F0C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2889  000F10  0E00               	movlw	0
  2890  000F12  22DD               	addwfc	postdec2,f,c
  2891  000F14  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2892  000F18  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2893  000F1C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2894  000F20  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2895  000F24  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2896  000F28  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2897  000F2C  D737               	goto	L3
  2898  000F2E                     l3555:
  2899  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  2900                           
  2901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2902  000F30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2903  000F34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2904  000F38  CFDE F001          	movff	postinc2,strncmp@_l
  2905  000F3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2906  000F40  0E65               	movlw	low STR_66
  2907  000F42  6E03               	movwf	strncmp@_r,c
  2908  000F44  0E06               	movlw	high STR_66
  2909  000F46  6E04               	movwf	strncmp@_r+1,c
  2910  000F48  0E00               	movlw	0
  2911  000F4A  6E06               	movwf	strncmp@n+1,c
  2912  000F4C  0E03               	movlw	3
  2913  000F4E  6E05               	movwf	strncmp@n,c
  2914  000F50  EC17  F014         	call	_strncmp	;wreg free
  2915  000F54  5001               	movf	?_strncmp,w,c
  2916  000F56  1002               	iorwf	?_strncmp+1,w,c
  2917  000F58  A4D8               	btfss	status,2,c
  2918  000F5A  D028               	goto	l3565
  2919                           
  2920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2921  000F5C  0E03               	movlw	3
  2922  000F5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2923  000F62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2924  000F66  26DE               	addwf	postinc2,f,c
  2925  000F68  0E00               	movlw	0
  2926  000F6A  22DD               	addwfc	postdec2,f,c
  2927                           
  2928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2929  000F6C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2930  000F70  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2931  000F74  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2932  000F78  0E02               	movlw	2
  2933  000F7A  26DE               	addwf	postinc2,f,c
  2934  000F7C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2935  000F80  0E00               	movlw	0
  2936  000F82  22DD               	addwfc	postdec2,f,c
  2937  000F84  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2938  000F88  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2939  000F8C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2940  000F90  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2941                           
  2942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2943  000F94  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2944  000F98  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2945  000F9C  C08F  FFDF         	movff	_nout,indf2
  2946  000FA0                     l3561:
  2947  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  2948                           
  2949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2950  000FA2  0E00               	movlw	0
  2951  000FA4  6E44               	movwf	?_vfpfcnvrt+1,c
  2952  000FA6  0E00               	movlw	0
  2953  000FA8  EFF8  F00B         	goto	L5
  2954  000FAC                     l3565:
  2955  000FAC  FFFF               	dw	65535	; assembler added errata NOP
  2956                           
  2957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2958  000FAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  000FB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  000FB6  CFDE F001          	movff	postinc2,strncmp@_l
  2961  000FBA  CFDD F002          	movff	postdec2,strncmp@_l+1
  2962  000FBE  0E66               	movlw	low (STR_66+1)
  2963  000FC0  6E03               	movwf	strncmp@_r,c
  2964  000FC2  0E06               	movlw	high (STR_66+1)
  2965  000FC4  6E04               	movwf	strncmp@_r+1,c
  2966  000FC6  0E00               	movlw	0
  2967  000FC8  6E06               	movwf	strncmp@n+1,c
  2968  000FCA  0E02               	movlw	2
  2969  000FCC  6E05               	movwf	strncmp@n,c
  2970  000FCE  EC17  F014         	call	_strncmp	;wreg free
  2971  000FD2  5001               	movf	?_strncmp,w,c
  2972  000FD4  1002               	iorwf	?_strncmp+1,w,c
  2973  000FD6  A4D8               	btfss	status,2,c
  2974  000FD8  D00B               	goto	l3575
  2975  000FDA  D07F               	goto	u3420
  2976  000FDC                     l3569:
  2977  000FDC  FFFF               	dw	65535	; assembler added errata NOP
  2978                           
  2979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2980  000FDE  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2981  000FE2  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2982  000FE6  C08F  FFDE         	movff	_nout,postinc2
  2983  000FEA  C090  FFDD         	movff	_nout+1,postdec2
  2984  000FEE  D7D8               	goto	l3561
  2985  000FF0                     l3575:
  2986  000FF0  FFFF               	dw	65535	; assembler added errata NOP
  2987                           
  2988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2989  000FF2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2990  000FF6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2991  000FFA  CFDE FFF6          	movff	postinc2,tblptrl
  2992  000FFE  CFDD FFF7          	movff	postdec2,tblptrh
  2993  001002                     	if	0	;tblptru may be non-zero
  2994  001002                     	endif
  2995  001002                     	if	0	;tblptru may be non-zero
  2996  001002                     	endif
  2997  001002  0008               	tblrd		*
  2998  001004  FFFF               	dw	65535	; errata NOP
  2999  001006  50F5               	movf	tablat,w,c
  3000  001008  0A6E               	xorlw	110
  3001  00100A  A4D8               	btfss	status,2,c
  3002  00100C  D006               	goto	l3585
  3003                           
  3004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  3005  00100E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3006  001012  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3007  001016  2ADE               	incf	postinc2,f,c
  3008  001018  D067               	goto	L14
  3009  00101A                     l3585:
  3010  00101A  FFFF               	dw	65535	; assembler added errata NOP
  3011                           
  3012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  3013  00101C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3014  001020  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3015  001024  CFDE F001          	movff	postinc2,strncmp@_l
  3016  001028  CFDD F002          	movff	postdec2,strncmp@_l+1
  3017  00102C  0E8B               	movlw	low STR_76
  3018  00102E  6E03               	movwf	strncmp@_r,c
  3019  001030  0E06               	movlw	high STR_76
  3020  001032  6E04               	movwf	strncmp@_r+1,c
  3021  001034  0E00               	movlw	0
  3022  001036  6E06               	movwf	strncmp@n+1,c
  3023  001038  0E02               	movlw	2
  3024  00103A  6E05               	movwf	strncmp@n,c
  3025  00103C  EC17  F014         	call	_strncmp	;wreg free
  3026  001040  5001               	movf	?_strncmp,w,c
  3027  001042  1002               	iorwf	?_strncmp+1,w,c
  3028  001044  A4D8               	btfss	status,2,c
  3029  001046  D032               	goto	l3595
  3030                           
  3031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  3032  001048  0E02               	movlw	2
  3033  00104A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3034  00104E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3035  001052  26DE               	addwf	postinc2,f,c
  3036  001054  0E00               	movlw	0
  3037  001056  22DD               	addwfc	postdec2,f,c
  3038                           
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  3040  001058  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3041  00105C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3042  001060  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3043  001064  0E02               	movlw	2
  3044  001066  26DE               	addwf	postinc2,f,c
  3045  001068  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3046  00106C  0E00               	movlw	0
  3047  00106E  22DD               	addwfc	postdec2,f,c
  3048  001070  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3049  001074  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3050  001078  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3051  00107C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3052                           
  3053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  3054  001080  C08F  F049         	movff	_nout,??_vfpfcnvrt
  3055  001084  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  3056  001088  0E00               	movlw	0
  3057  00108A  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  3058  00108C  0EFF               	movlw	255
  3059  00108E  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3060  001090  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  3061  001092  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3062  001096  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3063  00109A  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3064  00109E  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3065  0010A2  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3066  0010A6  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3067  0010AA  D77A               	goto	l3561
  3068  0010AC                     l3595:
  3069  0010AC  FFFF               	dw	65535	; assembler added errata NOP
  3070                           
  3071                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3072  0010AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3073  0010B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3074  0010B6  CFDE F001          	movff	postinc2,strncmp@_l
  3075  0010BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3076  0010BE  0E8E               	movlw	low STR_81
  3077  0010C0  6E03               	movwf	strncmp@_r,c
  3078  0010C2  0E06               	movlw	high STR_81
  3079  0010C4  6E04               	movwf	strncmp@_r+1,c
  3080  0010C6  0E00               	movlw	0
  3081  0010C8  6E06               	movwf	strncmp@n+1,c
  3082  0010CA  0E02               	movlw	2
  3083  0010CC  6E05               	movwf	strncmp@n,c
  3084  0010CE  EC17  F014         	call	_strncmp	;wreg free
  3085  0010D2  5001               	movf	?_strncmp,w,c
  3086  0010D4  1002               	iorwf	?_strncmp+1,w,c
  3087  0010D6  A4D8               	btfss	status,2,c
  3088  0010D8  D01F               	goto	l3605
  3089  0010DA                     u3420:
  3090  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  3091                           
  3092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3093  0010DC  0E02               	movlw	2
  3094  0010DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3095  0010E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3096  0010E6  26DE               	addwf	postinc2,f,c
  3097  0010E8                     L14:
  3098  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  3099  0010EA  0E00               	movlw	0
  3100  0010EC  22DD               	addwfc	postdec2,f,c
  3101                           
  3102                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3103  0010EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3104  0010F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3105  0010F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3106  0010FA  0E02               	movlw	2
  3107  0010FC  26DE               	addwf	postinc2,f,c
  3108  0010FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3109  001102  0E00               	movlw	0
  3110  001104  22DD               	addwfc	postdec2,f,c
  3111  001106  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3112  00110A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3113  00110E  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3114  001112  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3115  001116  D762               	goto	l3569
  3116  001118                     l3605:
  3117  001118  FFFF               	dw	65535	; assembler added errata NOP
  3118                           
  3119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3120  00111A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  00111E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  001122  CFDE FFF6          	movff	postinc2,tblptrl
  3123  001126  CFDD FFF7          	movff	postdec2,tblptrh
  3124  00112A                     	if	0	;tblptru may be non-zero
  3125  00112A                     	endif
  3126  00112A                     	if	0	;tblptru may be non-zero
  3127  00112A                     	endif
  3128  00112A  0008               	tblrd		*
  3129  00112C  FFFF               	dw	65535	; errata NOP
  3130  00112E  50F5               	movf	tablat,w,c
  3131  001130  0A70               	xorlw	112
  3132  001132  A4D8               	btfss	status,2,c
  3133  001134  D03E               	goto	l3613
  3134                           
  3135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3136  001136  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3137  00113A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3138  00113E  2ADE               	incf	postinc2,f,c
  3139  001140  0E00               	movlw	0
  3140  001142  22DD               	addwfc	postdec2,f,c
  3141                           
  3142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3143  001144  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3144  001148  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3145  00114C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3146  001150  0E02               	movlw	2
  3147  001152  26DE               	addwf	postinc2,f,c
  3148  001154  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3149  001158  0E00               	movlw	0
  3150  00115A  22DD               	addwfc	postdec2,f,c
  3151  00115C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3152  001160  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3153  001164  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3154  001168  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3155  00116C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3156  001170  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3157  001174  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3158  001176  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3159  001178  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3160  00117A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3161  00117C  6A70               	clrf	vfpfcnvrt@llu+6,c
  3162  00117E  6A71               	clrf	vfpfcnvrt@llu+7,c
  3163                           
  3164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3165  001180  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3166  001184  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3167  001188  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3168  00118C  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3169  001190  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3170  001194  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3171  001198  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3172  00119C  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3173  0011A0  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3174  0011A4  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3175  0011A8  0E78               	movlw	120
  3176  0011AA  6E26               	movwf	xtoa@x,c
  3177  0011AC  EC59  F00D         	call	_xtoa	;wreg free
  3178  0011B0  D1B4               	goto	L7
  3179  0011B2                     l3613:
  3180  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  3181                           
  3182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3183  0011B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3184  0011B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3185  0011BC  CFDE FFF6          	movff	postinc2,tblptrl
  3186  0011C0  CFDD FFF7          	movff	postdec2,tblptrh
  3187  0011C4                     	if	0	;tblptru may be non-zero
  3188  0011C4                     	endif
  3189  0011C4                     	if	0	;tblptru may be non-zero
  3190  0011C4                     	endif
  3191  0011C4  0008               	tblrd		*
  3192  0011C6  FFFF               	dw	65535	; errata NOP
  3193  0011C8  50F5               	movf	tablat,w,c
  3194  0011CA  0A73               	xorlw	115
  3195  0011CC  A4D8               	btfss	status,2,c
  3196  0011CE  D02A               	goto	l3621
  3197                           
  3198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3199  0011D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3200  0011D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3201  0011D8  2ADE               	incf	postinc2,f,c
  3202  0011DA  0E00               	movlw	0
  3203  0011DC  22DD               	addwfc	postdec2,f,c
  3204                           
  3205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3206  0011DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3207  0011E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3208  0011E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3209  0011EA  0E02               	movlw	2
  3210  0011EC  26DE               	addwf	postinc2,f,c
  3211  0011EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3212  0011F2  0E00               	movlw	0
  3213  0011F4  22DD               	addwfc	postdec2,f,c
  3214  0011F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3215  0011FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3216  0011FE  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3217  001202  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3218                           
  3219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3220  001206  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3221  00120A  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3222  00120E  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3223  001212  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3224  001216  EC6B  F012         	call	_stoa	;wreg free
  3225  00121A  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3226  00121E  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3227  001222  D30F               	goto	l506
  3228  001224                     l3621:
  3229  001224  FFFF               	dw	65535	; assembler added errata NOP
  3230                           
  3231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3232  001226  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3233  00122A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3234  00122E  CFDE F001          	movff	postinc2,strncmp@_l
  3235  001232  CFDD F002          	movff	postdec2,strncmp@_l+1
  3236  001236  0E6D               	movlw	low STR_86
  3237  001238  6E03               	movwf	strncmp@_r,c
  3238  00123A  0E06               	movlw	high STR_86
  3239  00123C  6E04               	movwf	strncmp@_r+1,c
  3240  00123E  0E00               	movlw	0
  3241  001240  6E06               	movwf	strncmp@n+1,c
  3242  001242  0E03               	movlw	3
  3243  001244  6E05               	movwf	strncmp@n,c
  3244  001246  EC17  F014         	call	_strncmp	;wreg free
  3245  00124A  5001               	movf	?_strncmp,w,c
  3246  00124C  1002               	iorwf	?_strncmp+1,w,c
  3247  00124E  A4D8               	btfss	status,2,c
  3248  001250  D040               	goto	l3629
  3249                           
  3250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3251  001252  0E03               	movlw	3
  3252  001254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3253  001258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3254  00125C  26DE               	addwf	postinc2,f,c
  3255  00125E  0E00               	movlw	0
  3256  001260  22DD               	addwfc	postdec2,f,c
  3257                           
  3258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3259  001262  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3260  001266  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3261  00126A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3262  00126E  0E02               	movlw	2
  3263  001270  26DE               	addwf	postinc2,f,c
  3264  001272  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3265  001276  0E00               	movlw	0
  3266  001278  22DD               	addwfc	postdec2,f,c
  3267  00127A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3268  00127E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3269  001282  50DF               	movf	indf2,w,c
  3270  001284  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3271  001286  504B               	movf	??_vfpfcnvrt+2,w,c
  3272  001288  6E6A               	movwf	vfpfcnvrt@llu,c
  3273  00128A  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3274  00128C                     L8:
  3275  00128C  FFFF               	dw	65535	; assembler added errata NOP
  3276  00128E  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3277  001290  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3278  001292                     L9:
  3279  001292  FFFF               	dw	65535	; assembler added errata NOP
  3280  001294  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3281  001296  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3282  001298  6A70               	clrf	vfpfcnvrt@llu+6,c
  3283  00129A  6A71               	clrf	vfpfcnvrt@llu+7,c
  3284                           
  3285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3286  00129C  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3287  0012A0  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3288  0012A4  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3289  0012A8  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3290  0012AC  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3291  0012B0  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3292  0012B4  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3293  0012B8  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3294  0012BC  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3295  0012C0  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3296  0012C4  EC85  F00E         	call	_utoa	;wreg free
  3297  0012C8  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3298  0012CC  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3299  0012D0  D2B8               	goto	l506
  3300  0012D2                     l3629:
  3301  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  3302                           
  3303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3304  0012D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3305  0012D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3306  0012DC  CFDE F001          	movff	postinc2,strncmp@_l
  3307  0012E0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3308  0012E4  0E6E               	movlw	low (STR_86+1)
  3309  0012E6  6E03               	movwf	strncmp@_r,c
  3310  0012E8  0E06               	movlw	high (STR_86+1)
  3311  0012EA  6E04               	movwf	strncmp@_r+1,c
  3312  0012EC  0E00               	movlw	0
  3313  0012EE  6E06               	movwf	strncmp@n+1,c
  3314  0012F0  0E02               	movlw	2
  3315  0012F2  6E05               	movwf	strncmp@n,c
  3316  0012F4  EC17  F014         	call	_strncmp	;wreg free
  3317  0012F8  5001               	movf	?_strncmp,w,c
  3318  0012FA  1002               	iorwf	?_strncmp+1,w,c
  3319  0012FC  B4D8               	btfsc	status,2,c
  3320  0012FE  D06B               	goto	u3490
  3321                           
  3322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3323                           
  3324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3325                           
  3326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3327  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3328  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3329  001308  CFDE FFF6          	movff	postinc2,tblptrl
  3330  00130C  CFDD FFF7          	movff	postdec2,tblptrh
  3331  001310                     	if	0	;tblptru may be non-zero
  3332  001310                     	endif
  3333  001310                     	if	0	;tblptru may be non-zero
  3334  001310                     	endif
  3335  001310  0008               	tblrd		*
  3336  001312  FFFF               	dw	65535	; errata NOP
  3337  001314  50F5               	movf	tablat,w,c
  3338  001316  0A75               	xorlw	117
  3339  001318  A4D8               	btfss	status,2,c
  3340  00131A  D006               	goto	l3645
  3341                           
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3343  00131C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  001320  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  001324  2ADE               	incf	postinc2,f,c
  3346  001326  D05E               	goto	L18
  3347  001328                     l3645:
  3348  001328  FFFF               	dw	65535	; assembler added errata NOP
  3349                           
  3350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3351  00132A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  00132E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  001332  CFDE F001          	movff	postinc2,strncmp@_l
  3354  001336  CFDD F002          	movff	postdec2,strncmp@_l+1
  3355  00133A  0E76               	movlw	low (STR_1+1)
  3356  00133C  6E03               	movwf	strncmp@_r,c
  3357  00133E  0E06               	movlw	high (STR_1+1)
  3358  001340  6E04               	movwf	strncmp@_r+1,c
  3359  001342  0E00               	movlw	0
  3360  001344  6E06               	movwf	strncmp@n+1,c
  3361  001346  0E02               	movlw	2
  3362  001348  6E05               	movwf	strncmp@n,c
  3363  00134A  EC17  F014         	call	_strncmp	;wreg free
  3364  00134E  5001               	movf	?_strncmp,w,c
  3365  001350  1002               	iorwf	?_strncmp+1,w,c
  3366  001352  A4D8               	btfss	status,2,c
  3367  001354  D029               	goto	l3653
  3368                           
  3369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3370  001356  0E02               	movlw	2
  3371  001358  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3372  00135C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3373  001360  26DE               	addwf	postinc2,f,c
  3374  001362  0E00               	movlw	0
  3375  001364  22DD               	addwfc	postdec2,f,c
  3376                           
  3377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3378  001366  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3379  00136A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3380  00136E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3381  001372  0E04               	movlw	4
  3382  001374  26DE               	addwf	postinc2,f,c
  3383  001376  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3384  00137A  0E00               	movlw	0
  3385  00137C  22DD               	addwfc	postdec2,f,c
  3386  00137E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3387  001382  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3388  001386  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3389  00138A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3390  00138E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3391  001392  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3392  001396  504B               	movf	??_vfpfcnvrt+2,w,c
  3393  001398  6E6A               	movwf	vfpfcnvrt@llu,c
  3394  00139A  504C               	movf	??_vfpfcnvrt+3,w,c
  3395  00139C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3396  00139E  504D               	movf	??_vfpfcnvrt+4,w,c
  3397  0013A0  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3398  0013A2  504E               	movf	??_vfpfcnvrt+5,w,c
  3399  0013A4  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3400  0013A6  D775               	goto	L9
  3401  0013A8                     l3653:
  3402  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  3403                           
  3404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3405  0013AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3406  0013AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3407  0013B2  CFDE F001          	movff	postinc2,strncmp@_l
  3408  0013B6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3409  0013BA  0E97               	movlw	low STR_101
  3410  0013BC  6E03               	movwf	strncmp@_r,c
  3411  0013BE  0E06               	movlw	high STR_101
  3412  0013C0  6E04               	movwf	strncmp@_r+1,c
  3413  0013C2  0E00               	movlw	0
  3414  0013C4  6E06               	movwf	strncmp@n+1,c
  3415  0013C6  0E02               	movlw	2
  3416  0013C8  6E05               	movwf	strncmp@n,c
  3417  0013CA  EC17  F014         	call	_strncmp	;wreg free
  3418  0013CE  5001               	movf	?_strncmp,w,c
  3419  0013D0  1002               	iorwf	?_strncmp+1,w,c
  3420  0013D2  A4D8               	btfss	status,2,c
  3421  0013D4  D023               	goto	l3661
  3422  0013D6                     u3490:
  3423  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  3424                           
  3425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3426  0013D8  0E02               	movlw	2
  3427  0013DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3428  0013DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3429  0013E2  26DE               	addwf	postinc2,f,c
  3430  0013E4                     L18:
  3431  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  3432  0013E6  0E00               	movlw	0
  3433  0013E8  22DD               	addwfc	postdec2,f,c
  3434                           
  3435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3436  0013EA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3437  0013EE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3438  0013F2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3439  0013F6  0E02               	movlw	2
  3440  0013F8  26DE               	addwf	postinc2,f,c
  3441  0013FA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3442  0013FE  0E00               	movlw	0
  3443  001400  22DD               	addwfc	postdec2,f,c
  3444  001402  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3445  001406  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3446  00140A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3447  00140E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3448  001412  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3449  001416  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3450  00141A  D738               	goto	L8
  3451  00141C                     l3661:
  3452  00141C  FFFF               	dw	65535	; assembler added errata NOP
  3453                           
  3454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3455  00141E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3456  001422  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3457  001426  CFDE F001          	movff	postinc2,strncmp@_l
  3458  00142A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3459  00142E  0E71               	movlw	low STR_106
  3460  001430  6E03               	movwf	strncmp@_r,c
  3461  001432  0E06               	movlw	high STR_106
  3462  001434  6E04               	movwf	strncmp@_r+1,c
  3463  001436  0E00               	movlw	0
  3464  001438  6E06               	movwf	strncmp@n+1,c
  3465  00143A  0E03               	movlw	3
  3466  00143C  6E05               	movwf	strncmp@n,c
  3467  00143E  EC17  F014         	call	_strncmp	;wreg free
  3468  001442  5001               	movf	?_strncmp,w,c
  3469  001444  1002               	iorwf	?_strncmp+1,w,c
  3470  001446  B4D8               	btfsc	status,2,c
  3471  001448  D016               	goto	u3510
  3472  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3473  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3474  001452  CFDE F001          	movff	postinc2,strncmp@_l
  3475  001456  CFDD F002          	movff	postdec2,strncmp@_l+1
  3476  00145A  0E59               	movlw	low STR_110
  3477  00145C  6E03               	movwf	strncmp@_r,c
  3478  00145E  0E06               	movlw	high STR_110
  3479  001460  6E04               	movwf	strncmp@_r+1,c
  3480  001462  0E00               	movlw	0
  3481  001464  6E06               	movwf	strncmp@n+1,c
  3482  001466  0E03               	movlw	3
  3483  001468  6E05               	movwf	strncmp@n,c
  3484  00146A  EC17  F014         	call	_strncmp	;wreg free
  3485  00146E  5001               	movf	?_strncmp,w,c
  3486  001470  1002               	iorwf	?_strncmp+1,w,c
  3487  001472  A4D8               	btfss	status,2,c
  3488  001474  D058               	goto	l3675
  3489  001476                     u3510:
  3490  001476  FFFF               	dw	65535	; assembler added errata NOP
  3491                           
  3492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3493  001478  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3494  00147C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3495  001480  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3496  001484  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3497  001488  0E02               	movlw	2
  3498  00148A  2649               	addwf	??_vfpfcnvrt,f,c
  3499  00148C  0E00               	movlw	0
  3500  00148E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3501  001490  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3502  001494  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3503  001498                     	if	0	;tblptru may be non-zero
  3504  001498                     	endif
  3505  001498                     	if	0	;tblptru may be non-zero
  3506  001498                     	endif
  3507  001498  0008               	tblrd		*
  3508  00149A  FFFF               	dw	65535	; errata NOP
  3509  00149C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3510                           
  3511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3512  0014A0  0E03               	movlw	3
  3513  0014A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3514  0014A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3515  0014AA  26DE               	addwf	postinc2,f,c
  3516  0014AC  0E00               	movlw	0
  3517  0014AE  22DD               	addwfc	postdec2,f,c
  3518                           
  3519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3520  0014B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3521  0014B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3522  0014B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3523  0014BC  0E02               	movlw	2
  3524  0014BE  26DE               	addwf	postinc2,f,c
  3525  0014C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3526  0014C4  0E00               	movlw	0
  3527  0014C6  22DD               	addwfc	postdec2,f,c
  3528  0014C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3529  0014CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3530  0014D0  50DF               	movf	indf2,w,c
  3531  0014D2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3532  0014D4  504B               	movf	??_vfpfcnvrt+2,w,c
  3533  0014D6  6E6A               	movwf	vfpfcnvrt@llu,c
  3534  0014D8  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3535  0014DA                     L10:
  3536  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  3537  0014DC  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3538  0014DE  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3539  0014E0                     L11:
  3540  0014E0  FFFF               	dw	65535	; assembler added errata NOP
  3541  0014E2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3542  0014E4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3543  0014E6  6A70               	clrf	vfpfcnvrt@llu+6,c
  3544  0014E8  6A71               	clrf	vfpfcnvrt@llu+7,c
  3545                           
  3546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3547  0014EA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3548  0014EE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3549  0014F2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3550  0014F6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3551  0014FA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3552  0014FE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3553  001502  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3554  001506  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3555  00150A  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3556  00150E  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3557  001512  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3558  001516  EC59  F00D         	call	_xtoa	;wreg free
  3559  00151A                     L7:
  3560  00151A  FFFF               	dw	65535	; assembler added errata NOP
  3561  00151C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3562  001520  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3563  001524  D18E               	goto	l506
  3564  001526                     l3675:
  3565  001526  FFFF               	dw	65535	; assembler added errata NOP
  3566                           
  3567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3568  001528  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3569  00152C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3570  001530  CFDE F001          	movff	postinc2,strncmp@_l
  3571  001534  CFDD F002          	movff	postdec2,strncmp@_l+1
  3572  001538  0E72               	movlw	low (STR_106+1)
  3573  00153A  6E03               	movwf	strncmp@_r,c
  3574  00153C  0E06               	movlw	high (STR_106+1)
  3575  00153E  6E04               	movwf	strncmp@_r+1,c
  3576  001540  0E00               	movlw	0
  3577  001542  6E06               	movwf	strncmp@n+1,c
  3578  001544  0E02               	movlw	2
  3579  001546  6E05               	movwf	strncmp@n,c
  3580  001548  EC17  F014         	call	_strncmp	;wreg free
  3581  00154C  5001               	movf	?_strncmp,w,c
  3582  00154E  1002               	iorwf	?_strncmp+1,w,c
  3583  001550  B4D8               	btfsc	status,2,c
  3584  001552  D016               	goto	u3530
  3585  001554  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3586  001558  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3587  00155C  CFDE F001          	movff	postinc2,strncmp@_l
  3588  001560  CFDD F002          	movff	postdec2,strncmp@_l+1
  3589  001564  0E5A               	movlw	low (STR_110+1)
  3590  001566  6E03               	movwf	strncmp@_r,c
  3591  001568  0E06               	movlw	high (STR_110+1)
  3592  00156A  6E04               	movwf	strncmp@_r+1,c
  3593  00156C  0E00               	movlw	0
  3594  00156E  6E06               	movwf	strncmp@n+1,c
  3595  001570  0E02               	movlw	2
  3596  001572  6E05               	movwf	strncmp@n,c
  3597  001574  EC17  F014         	call	_strncmp	;wreg free
  3598  001578  5001               	movf	?_strncmp,w,c
  3599  00157A  1002               	iorwf	?_strncmp+1,w,c
  3600  00157C  A4D8               	btfss	status,2,c
  3601  00157E  D014               	goto	l3689
  3602  001580                     u3530:
  3603  001580  FFFF               	dw	65535	; assembler added errata NOP
  3604                           
  3605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3606  001582  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3607  001586  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3608  00158A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3609  00158E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3610  001592  0E01               	movlw	1
  3611  001594  2649               	addwf	??_vfpfcnvrt,f,c
  3612  001596  0E00               	movlw	0
  3613  001598  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3614  00159A  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3615  00159E  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3616  0015A2                     	if	0	;tblptru may be non-zero
  3617  0015A2                     	endif
  3618  0015A2                     	if	0	;tblptru may be non-zero
  3619  0015A2                     	endif
  3620  0015A2  0008               	tblrd		*
  3621  0015A4  FFFF               	dw	65535	; errata NOP
  3622  0015A6  D0DB               	goto	L22
  3623  0015A8                     l3689:
  3624  0015A8  FFFF               	dw	65535	; assembler added errata NOP
  3625                           
  3626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3627  0015AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3628  0015AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3629  0015B2  CFDE FFF6          	movff	postinc2,tblptrl
  3630  0015B6  CFDD FFF7          	movff	postdec2,tblptrh
  3631  0015BA                     	if	0	;tblptru may be non-zero
  3632  0015BA                     	endif
  3633  0015BA                     	if	0	;tblptru may be non-zero
  3634  0015BA                     	endif
  3635  0015BA  0008               	tblrd		*
  3636  0015BC  FFFF               	dw	65535	; errata NOP
  3637  0015BE  50F5               	movf	tablat,w,c
  3638  0015C0  0A78               	xorlw	120
  3639  0015C2  B4D8               	btfsc	status,2,c
  3640  0015C4  D00E               	goto	u3550
  3641  0015C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3642  0015CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  3644  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  3645  0015D6                     	if	0	;tblptru may be non-zero
  3646  0015D6                     	endif
  3647  0015D6                     	if	0	;tblptru may be non-zero
  3648  0015D6                     	endif
  3649  0015D6  0008               	tblrd		*
  3650  0015D8  FFFF               	dw	65535	; errata NOP
  3651  0015DA  50F5               	movf	tablat,w,c
  3652  0015DC  0A58               	xorlw	88
  3653  0015DE  A4D8               	btfss	status,2,c
  3654  0015E0  D013               	goto	l3703
  3655  0015E2                     u3550:
  3656  0015E2  FFFF               	dw	65535	; assembler added errata NOP
  3657                           
  3658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3659  0015E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3660  0015E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3661  0015EC  CFDE FFF6          	movff	postinc2,tblptrl
  3662  0015F0  CFDD FFF7          	movff	postdec2,tblptrh
  3663  0015F4                     	if	0	;tblptru may be non-zero
  3664  0015F4                     	endif
  3665  0015F4                     	if	0	;tblptru may be non-zero
  3666  0015F4                     	endif
  3667  0015F4  0008               	tblrd		*
  3668  0015F6  FFFF               	dw	65535	; errata NOP
  3669  0015F8  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3670                           
  3671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3672  0015FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3673  001600  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3674  001604  2ADE               	incf	postinc2,f,c
  3675  001606  D0B4               	goto	L21
  3676  001608                     l3703:
  3677  001608  FFFF               	dw	65535	; assembler added errata NOP
  3678                           
  3679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3680  00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3681  00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3682  001612  CFDE F001          	movff	postinc2,strncmp@_l
  3683  001616  CFDD F002          	movff	postdec2,strncmp@_l+1
  3684  00161A  0E9A               	movlw	low STR_124
  3685  00161C  6E03               	movwf	strncmp@_r,c
  3686  00161E  0E06               	movlw	high STR_124
  3687  001620  6E04               	movwf	strncmp@_r+1,c
  3688  001622  0E00               	movlw	0
  3689  001624  6E06               	movwf	strncmp@n+1,c
  3690  001626  0E02               	movlw	2
  3691  001628  6E05               	movwf	strncmp@n,c
  3692  00162A  EC17  F014         	call	_strncmp	;wreg free
  3693  00162E  5001               	movf	?_strncmp,w,c
  3694  001630  1002               	iorwf	?_strncmp+1,w,c
  3695  001632  B4D8               	btfsc	status,2,c
  3696  001634  D016               	goto	u3570
  3697  001636  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  00163A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  00163E  CFDE F001          	movff	postinc2,strncmp@_l
  3700  001642  CFDD F002          	movff	postdec2,strncmp@_l+1
  3701  001646  0E79               	movlw	low STR_128
  3702  001648  6E03               	movwf	strncmp@_r,c
  3703  00164A  0E06               	movlw	high STR_128
  3704  00164C  6E04               	movwf	strncmp@_r+1,c
  3705  00164E  0E00               	movlw	0
  3706  001650  6E06               	movwf	strncmp@n+1,c
  3707  001652  0E02               	movlw	2
  3708  001654  6E05               	movwf	strncmp@n,c
  3709  001656  EC17  F014         	call	_strncmp	;wreg free
  3710  00165A  5001               	movf	?_strncmp,w,c
  3711  00165C  1002               	iorwf	?_strncmp+1,w,c
  3712  00165E  A4D8               	btfss	status,2,c
  3713  001660  D03E               	goto	l3717
  3714  001662                     u3570:
  3715  001662  FFFF               	dw	65535	; assembler added errata NOP
  3716                           
  3717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3718  001664  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3719  001668  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  00166C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3721  001670  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3722  001674  0E01               	movlw	1
  3723  001676  2649               	addwf	??_vfpfcnvrt,f,c
  3724  001678  0E00               	movlw	0
  3725  00167A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3726  00167C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3727  001680  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3728  001684                     	if	0	;tblptru may be non-zero
  3729  001684                     	endif
  3730  001684                     	if	0	;tblptru may be non-zero
  3731  001684                     	endif
  3732  001684  0008               	tblrd		*
  3733  001686  FFFF               	dw	65535	; errata NOP
  3734  001688  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3735                           
  3736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3737  00168C  0E02               	movlw	2
  3738  00168E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3739  001692  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3740  001696  26DE               	addwf	postinc2,f,c
  3741  001698  0E00               	movlw	0
  3742  00169A  22DD               	addwfc	postdec2,f,c
  3743                           
  3744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3745  00169C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3746  0016A0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3747  0016A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3748  0016A8  0E04               	movlw	4
  3749  0016AA  26DE               	addwf	postinc2,f,c
  3750  0016AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3751  0016B0  0E00               	movlw	0
  3752  0016B2  22DD               	addwfc	postdec2,f,c
  3753  0016B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3754  0016B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3755  0016BC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3756  0016C0  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3757  0016C4  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3758  0016C8  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3759  0016CC  504B               	movf	??_vfpfcnvrt+2,w,c
  3760  0016CE  6E6A               	movwf	vfpfcnvrt@llu,c
  3761  0016D0  504C               	movf	??_vfpfcnvrt+3,w,c
  3762  0016D2  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3763  0016D4  504D               	movf	??_vfpfcnvrt+4,w,c
  3764  0016D6  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3765  0016D8  504E               	movf	??_vfpfcnvrt+5,w,c
  3766  0016DA  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3767  0016DC  D701               	goto	L11
  3768  0016DE                     l3717:
  3769  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  3770                           
  3771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3772  0016E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3773  0016E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3774  0016E8  CFDE F001          	movff	postinc2,strncmp@_l
  3775  0016EC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3776  0016F0  0E9D               	movlw	low STR_133
  3777  0016F2  6E03               	movwf	strncmp@_r,c
  3778  0016F4  0E06               	movlw	high STR_133
  3779  0016F6  6E04               	movwf	strncmp@_r+1,c
  3780  0016F8  0E00               	movlw	0
  3781  0016FA  6E06               	movwf	strncmp@n+1,c
  3782  0016FC  0E02               	movlw	2
  3783  0016FE  6E05               	movwf	strncmp@n,c
  3784  001700  EC17  F014         	call	_strncmp	;wreg free
  3785  001704  5001               	movf	?_strncmp,w,c
  3786  001706  1002               	iorwf	?_strncmp+1,w,c
  3787  001708  B4D8               	btfsc	status,2,c
  3788  00170A  D016               	goto	u3590
  3789  00170C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3790  001710  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  001714  CFDE F001          	movff	postinc2,strncmp@_l
  3792  001718  CFDD F002          	movff	postdec2,strncmp@_l+1
  3793  00171C  0E7C               	movlw	low STR_137
  3794  00171E  6E03               	movwf	strncmp@_r,c
  3795  001720  0E06               	movlw	high STR_137
  3796  001722  6E04               	movwf	strncmp@_r+1,c
  3797  001724  0E00               	movlw	0
  3798  001726  6E06               	movwf	strncmp@n+1,c
  3799  001728  0E02               	movlw	2
  3800  00172A  6E05               	movwf	strncmp@n,c
  3801  00172C  EC17  F014         	call	_strncmp	;wreg free
  3802  001730  5001               	movf	?_strncmp,w,c
  3803  001732  1002               	iorwf	?_strncmp+1,w,c
  3804  001734  A4D8               	btfss	status,2,c
  3805  001736  D038               	goto	l3731
  3806  001738                     u3590:
  3807  001738  FFFF               	dw	65535	; assembler added errata NOP
  3808                           
  3809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3810  00173A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3811  00173E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3812  001742  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3813  001746  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3814  00174A  0E01               	movlw	1
  3815  00174C  2649               	addwf	??_vfpfcnvrt,f,c
  3816  00174E  0E00               	movlw	0
  3817  001750  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3818  001752  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3819  001756  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3820  00175A                     	if	0	;tblptru may be non-zero
  3821  00175A                     	endif
  3822  00175A                     	if	0	;tblptru may be non-zero
  3823  00175A                     	endif
  3824  00175A  0008               	tblrd		*
  3825  00175C  FFFF               	dw	65535	; errata NOP
  3826  00175E                     L22:
  3827  00175E  FFFF               	dw	65535	; assembler added errata NOP
  3828  001760  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3829                           
  3830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3831  001764  0E02               	movlw	2
  3832  001766  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  00176A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  00176E  26DE               	addwf	postinc2,f,c
  3835  001770                     L21:
  3836  001770  FFFF               	dw	65535	; assembler added errata NOP
  3837  001772  0E00               	movlw	0
  3838  001774  22DD               	addwfc	postdec2,f,c
  3839                           
  3840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3841  001776  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3842  00177A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3843  00177E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3844  001782  0E02               	movlw	2
  3845  001784  26DE               	addwf	postinc2,f,c
  3846  001786  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3847  00178A  0E00               	movlw	0
  3848  00178C  22DD               	addwfc	postdec2,f,c
  3849  00178E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3850  001792  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3851  001796  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3852  00179A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3853  00179E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3854  0017A2  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3855  0017A6  D699               	goto	L10
  3856  0017A8                     l3731:
  3857  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  3858                           
  3859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3860  0017AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3861  0017AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3862  0017B2  CFDE FFF6          	movff	postinc2,tblptrl
  3863  0017B6  CFDD FFF7          	movff	postdec2,tblptrh
  3864  0017BA                     	if	0	;tblptru may be non-zero
  3865  0017BA                     	endif
  3866  0017BA                     	if	0	;tblptru may be non-zero
  3867  0017BA                     	endif
  3868  0017BA  0008               	tblrd		*
  3869  0017BC  FFFF               	dw	65535	; errata NOP
  3870  0017BE  50F5               	movf	tablat,w,c
  3871  0017C0  0A25               	xorlw	37
  3872  0017C2  A4D8               	btfss	status,2,c
  3873  0017C4  D018               	goto	l3741
  3874                           
  3875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3876  0017C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3877  0017CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3878  0017CE  2ADE               	incf	postinc2,f,c
  3879  0017D0  0E00               	movlw	0
  3880  0017D2  22DD               	addwfc	postdec2,f,c
  3881                           
  3882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3883  0017D4  0E00               	movlw	0
  3884  0017D6  6E02               	movwf	fputc@c+1,c
  3885  0017D8  0E25               	movlw	37
  3886  0017DA  6E01               	movwf	fputc@c,c
  3887  0017DC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3888  0017E0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3889  0017E4  ECD6  F014         	call	_fputc	;wreg free
  3890  0017E8                     l3737:
  3891  0017E8  FFFF               	dw	65535	; assembler added errata NOP
  3892                           
  3893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3894  0017EA  0E00               	movlw	0
  3895  0017EC  6E44               	movwf	?_vfpfcnvrt+1,c
  3896  0017EE  0E01               	movlw	1
  3897  0017F0                     L5:
  3898  0017F0  FFFF               	dw	65535	; assembler added errata NOP
  3899  0017F2  6E43               	movwf	?_vfpfcnvrt,c
  3900  0017F4  D026               	goto	l506
  3901  0017F6                     l3741:
  3902  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  3903                           
  3904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3905  0017F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3906  0017FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3907  001800  2ADE               	incf	postinc2,f,c
  3908  001802  0E00               	movlw	0
  3909  001804  22DD               	addwfc	postdec2,f,c
  3910  001806  EFD0  F007         	goto	l3561
  3911  00180A                     l3747:
  3912  00180A  FFFF               	dw	65535	; assembler added errata NOP
  3913                           
  3914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3915  00180C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3916  001810  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3917  001814  CFDE FFF6          	movff	postinc2,tblptrl
  3918  001818  CFDD FFF7          	movff	postdec2,tblptrh
  3919  00181C                     	if	0	;tblptru may be non-zero
  3920  00181C                     	endif
  3921  00181C                     	if	0	;tblptru may be non-zero
  3922  00181C                     	endif
  3923  00181C  0008               	tblrd		*
  3924  00181E  FFFF               	dw	65535	; errata NOP
  3925  001820  50F5               	movf	tablat,w,c
  3926  001822  6E01               	movwf	fputc@c,c
  3927  001824  6A02               	clrf	fputc@c+1,c
  3928  001826  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3929  00182A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3930  00182E  ECD6  F014         	call	_fputc	;wreg free
  3931                           
  3932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3933  001832  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3934  001836  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3935  00183A  2ADE               	incf	postinc2,f,c
  3936  00183C  0E00               	movlw	0
  3937  00183E  22DD               	addwfc	postdec2,f,c
  3938  001840  D7D3               	goto	l3737
  3939  001842                     l506:
  3940  001842  FFFF               	dw	65535	; assembler added errata NOP
  3941  001844  0012               	return		;funcret
  3942  001846  FFFF               	dw	65535	; errata NOP
  3943  001848                     __end_of_vfpfcnvrt:
  3944                           	opt callstack 0
  3945                           
  3946 ;; *************** function _xtoa *****************
  3947 ;; Defined at:
  3948 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3951 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3952 ;;  d               8   29[COMRAM] unsigned long long 
  3953 ;;  x               1   37[COMRAM] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  n               8   54[COMRAM] unsigned long long 
  3956 ;;  c               2   64[COMRAM] int 
  3957 ;;  i               2   62[COMRAM] int 
  3958 ;;  w               2   52[COMRAM] int 
  3959 ;;  p               2   50[COMRAM] int 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2   27[COMRAM] int 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3969 ;;      Params:        11       0       0       0       0       0       0
  3970 ;;      Locals:        20       0       0       0       0       0       0
  3971 ;;      Temps:          8       0       0       0       0       0       0
  3972 ;;      Totals:        39       0       0       0       0       0       0
  3973 ;;Total ram usage:       39 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    6
  3976 ;; This function calls:
  3977 ;;		_isalpha
  3978 ;;		_isupper
  3979 ;;		_pad
  3980 ;;		_toupper
  3981 ;; This function is called by:
  3982 ;;		_vfpfcnvrt
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text8
  3987  001AB2                     __ptext8:
  3988                           	opt callstack 0
  3989  001AB2                     _xtoa:
  3990                           	opt callstack 0
  3991  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  3992                           
  3993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3994                           
  3995                           ;incstack = 0
  3996  001AB4  0100               	movlb	0	; () banked
  3997  001AB6  AF94               	btfss	(_prec+1)& (0+255),7,b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  4001  001AB8  9395               	bcf	_flags& (0+255),1,b
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  4005  001ABA  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4006  001ABC  D005               	goto	u2810
  4007  001ABE  5194               	movf	(_prec+1)& (0+255),w,b
  4008  001AC0  E109               	bnz	l444
  4009  001AC2  0593               	decf	_prec& (0+255),w,b
  4010  001AC4  B0D8               	btfsc	status,0,c
  4011  001AC6  D006               	goto	l444
  4012  001AC8                     u2810:
  4013  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  4014                           
  4015                           ; BSR set to: 0
  4016  001ACA  0E00               	movlw	0
  4017  001ACC  6E34               	movwf	xtoa@p+1,c
  4018  001ACE  0E01               	movlw	1
  4019  001AD0  6E33               	movwf	xtoa@p,c
  4020  001AD2  D005               	goto	l446
  4021  001AD4                     l444:
  4022  001AD4  FFFF               	dw	65535	; assembler added errata NOP
  4023                           
  4024                           ; BSR set to: 0
  4025  001AD6  C093  F033         	movff	_prec,xtoa@p
  4026  001ADA  C094  F034         	movff	_prec+1,xtoa@p+1
  4027  001ADE                     l446:
  4028  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  4032  001AE0  C091  F035         	movff	_width,xtoa@w
  4033  001AE4  C092  F036         	movff	_width+1,xtoa@w+1
  4034                           
  4035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  4036  001AE8  A995               	btfss	_flags& (0+255),4,b
  4037  001AEA  D004               	goto	l3261
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  4041  001AEC  0EFE               	movlw	254
  4042  001AEE  2635               	addwf	xtoa@w,f,c
  4043  001AF0  0EFF               	movlw	255
  4044  001AF2  2236               	addwfc	xtoa@w+1,f,c
  4045  001AF4                     l3261:
  4046  001AF4  FFFF               	dw	65535	; assembler added errata NOP
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4050  001AF6  C01E  F037         	movff	xtoa@d,xtoa@n
  4051  001AFA  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4052  001AFE  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4053  001B02  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4054  001B06  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4055  001B0A  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4056  001B0E  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4057  001B12  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  4061  001B16  0E00               	movlw	0
  4062  001B18  6E40               	movwf	xtoa@i+1,c
  4063  001B1A  0E1F               	movlw	31
  4064  001B1C  6E3F               	movwf	xtoa@i,c
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  4068  001B1E  0E00               	movlw	0
  4069  001B20  6FB9               	movwf	(_dbuf+31)& (0+255),b
  4070                           
  4071                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4072  001B22  D09D               	goto	l3297
  4073  001B24                     l3267:
  4074  001B24  FFFF               	dw	65535	; assembler added errata NOP
  4075                           
  4076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4077  001B26  063F               	decf	xtoa@i,f,c
  4078  001B28  A0D8               	btfss	status,0,c
  4079  001B2A  0640               	decf	xtoa@i+1,f,c
  4080                           
  4081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  4082  001B2C  0E0F               	movlw	15
  4083  001B2E  1437               	andwf	xtoa@n,w,c
  4084  001B30  6E41               	movwf	xtoa@c,c
  4085  001B32  6A42               	clrf	xtoa@c+1,c
  4086                           
  4087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  4088  001B34  BE42               	btfsc	xtoa@c+1,7,c
  4089  001B36  D008               	goto	l3275
  4090  001B38  5042               	movf	xtoa@c+1,w,c
  4091  001B3A  E104               	bnz	u2830
  4092  001B3C  0E0A               	movlw	10
  4093  001B3E  5C41               	subwf	xtoa@c,w,c
  4094  001B40  A0D8               	btfss	status,0,c
  4095  001B42  D002               	goto	l3275
  4096  001B44                     u2830:
  4097  001B44  0E57               	movlw	87
  4098  001B46  D002               	goto	L19
  4099  001B48                     l3275:
  4100  001B48  FFFF               	dw	65535	; assembler added errata NOP
  4101  001B4A  0E30               	movlw	48
  4102  001B4C                     L19:
  4103  001B4C  FFFF               	dw	65535	; assembler added errata NOP
  4104  001B4E  2441               	addwf	xtoa@c,w,c
  4105  001B50  6E41               	movwf	xtoa@c,c
  4106  001B52  0E00               	movlw	0
  4107  001B54  2042               	addwfc	xtoa@c+1,w,c
  4108  001B56  6E42               	movwf	xtoa@c+1,c
  4109                           
  4110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  4111  001B58  0EBF               	movlw	191
  4112  001B5A  6E27               	movwf	??_xtoa& (0+255),c
  4113  001B5C  0EFF               	movlw	255
  4114  001B5E  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4115  001B60  5026               	movf	xtoa@x,w,c
  4116  001B62  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4117  001B64  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  4118  001B66  5027               	movf	??_xtoa,w,c
  4119  001B68  2629               	addwf	??_xtoa+2,f,c
  4120  001B6A  5028               	movf	??_xtoa+1,w,c
  4121  001B6C  222A               	addwfc	??_xtoa+3,f,c
  4122  001B6E  502A               	movf	??_xtoa+3,w,c
  4123  001B70  E106               	bnz	u2840
  4124  001B72  0E1A               	movlw	26
  4125  001B74  5C29               	subwf	??_xtoa+2,w,c
  4126  001B76  B0D8               	btfsc	status,0,c
  4127  001B78  D002               	goto	u2840
  4128  001B7A  0E01               	movlw	1
  4129  001B7C  D002               	goto	u2850
  4130  001B7E                     u2840:
  4131  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  4132  001B80  0E00               	movlw	0
  4133  001B82                     u2850:
  4134  001B82  FFFF               	dw	65535	; assembler added errata NOP
  4135  001B84  6E2F               	movwf	_xtoa$1063,c
  4136  001B86  6A30               	clrf	_xtoa$1063+1,c
  4137  001B88  502F               	movf	_xtoa$1063,w,c
  4138  001B8A  1030               	iorwf	_xtoa$1063+1,w,c
  4139  001B8C  B4D8               	btfsc	status,2,c
  4140  001B8E  D029               	goto	l3289
  4141  001B90  0E9F               	movlw	159
  4142  001B92  6E27               	movwf	??_xtoa& (0+255),c
  4143  001B94  0EFF               	movlw	255
  4144  001B96  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4145  001B98  0E20               	movlw	32
  4146  001B9A  1041               	iorwf	xtoa@c,w,c
  4147  001B9C  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4148  001B9E  0E00               	movlw	0
  4149  001BA0  1042               	iorwf	xtoa@c+1,w,c
  4150  001BA2  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  4151  001BA4  5027               	movf	??_xtoa,w,c
  4152  001BA6  2629               	addwf	??_xtoa+2,f,c
  4153  001BA8  5028               	movf	??_xtoa+1,w,c
  4154  001BAA  222A               	addwfc	??_xtoa+3,f,c
  4155  001BAC  502A               	movf	??_xtoa+3,w,c
  4156  001BAE  E106               	bnz	u2870
  4157  001BB0  0E1A               	movlw	26
  4158  001BB2  5C29               	subwf	??_xtoa+2,w,c
  4159  001BB4  B0D8               	btfsc	status,0,c
  4160  001BB6  D002               	goto	u2870
  4161  001BB8  0E01               	movlw	1
  4162  001BBA  D002               	goto	u2880
  4163  001BBC                     u2870:
  4164  001BBC  FFFF               	dw	65535	; assembler added errata NOP
  4165  001BBE  0E00               	movlw	0
  4166  001BC0                     u2880:
  4167  001BC0  FFFF               	dw	65535	; assembler added errata NOP
  4168  001BC2  6E31               	movwf	_xtoa$1064,c
  4169  001BC4  6A32               	clrf	_xtoa$1064+1,c
  4170  001BC6  5031               	movf	_xtoa$1064,w,c
  4171  001BC8  1032               	iorwf	_xtoa$1064+1,w,c
  4172  001BCA  B4D8               	btfsc	status,2,c
  4173  001BCC  D00A               	goto	l3289
  4174                           
  4175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4176  001BCE  C041  F007         	movff	xtoa@c,toupper@c
  4177  001BD2  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4178  001BD6  ECAD  F016         	call	_toupper	;wreg free
  4179  001BDA  C007  F041         	movff	?_toupper,xtoa@c
  4180  001BDE  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4181  001BE2                     l3289:
  4182  001BE2  FFFF               	dw	65535	; assembler added errata NOP
  4183                           
  4184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4185  001BE4  0E9A               	movlw	low _dbuf
  4186  001BE6  243F               	addwf	xtoa@i,w,c
  4187  001BE8  6ED9               	movwf	fsr2l,c
  4188  001BEA  0E00               	movlw	high _dbuf
  4189  001BEC  2040               	addwfc	xtoa@i+1,w,c
  4190  001BEE  6EDA               	movwf	fsr2h,c
  4191  001BF0  C041  FFDF         	movff	xtoa@c,indf2
  4192                           
  4193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4194  001BF4  0633               	decf	xtoa@p,f,c
  4195  001BF6  A0D8               	btfss	status,0,c
  4196  001BF8  0634               	decf	xtoa@p+1,f,c
  4197                           
  4198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4199  001BFA  0635               	decf	xtoa@w,f,c
  4200  001BFC  A0D8               	btfss	status,0,c
  4201  001BFE  0636               	decf	xtoa@w+1,f,c
  4202                           
  4203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4204  001C00  C037  F027         	movff	xtoa@n,??_xtoa
  4205  001C04  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4206  001C08  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4207  001C0C  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4208  001C10  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4209  001C14  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4210  001C18  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4211  001C1C  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4212  001C20  0E05               	movlw	5
  4213  001C22  D00A               	goto	u2900
  4214  001C24                     u2905:
  4215  001C24  FFFF               	dw	65535	; assembler added errata NOP
  4216  001C26  90D8               	bcf	status,0,c
  4217  001C28  322E               	rrcf	??_xtoa+7,f,c
  4218  001C2A  322D               	rrcf	??_xtoa+6,f,c
  4219  001C2C  322C               	rrcf	??_xtoa+5,f,c
  4220  001C2E  322B               	rrcf	??_xtoa+4,f,c
  4221  001C30  322A               	rrcf	??_xtoa+3,f,c
  4222  001C32  3229               	rrcf	??_xtoa+2,f,c
  4223  001C34  3228               	rrcf	??_xtoa+1,f,c
  4224  001C36  3227               	rrcf	??_xtoa,f,c
  4225  001C38                     u2900:
  4226  001C38  FFFF               	dw	65535	; assembler added errata NOP
  4227  001C3A  2EE8               	decfsz	wreg,f,c
  4228  001C3C  D7F3               	goto	u2905
  4229  001C3E  C027  F037         	movff	??_xtoa,xtoa@n
  4230  001C42  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4231  001C46  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4232  001C4A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4233  001C4E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4234  001C52  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4235  001C56  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4236  001C5A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4237  001C5E                     l3297:
  4238  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  4239                           
  4240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4241  001C60  BE40               	btfsc	xtoa@i+1,7,c
  4242  001C62  D022               	goto	u2950
  4243  001C64  5040               	movf	xtoa@i+1,w,c
  4244  001C66  E104               	bnz	u2910
  4245  001C68  0E02               	movlw	2
  4246  001C6A  5C3F               	subwf	xtoa@i,w,c
  4247  001C6C  A0D8               	btfss	status,0,c
  4248  001C6E  D01C               	goto	u2950
  4249  001C70                     u2910:
  4250  001C70  5037               	movf	xtoa@n,w,c
  4251  001C72  1038               	iorwf	xtoa@n+1,w,c
  4252  001C74  1039               	iorwf	xtoa@n+2,w,c
  4253  001C76  103A               	iorwf	xtoa@n+3,w,c
  4254  001C78  103B               	iorwf	xtoa@n+4,w,c
  4255  001C7A  103C               	iorwf	xtoa@n+5,w,c
  4256  001C7C  103D               	iorwf	xtoa@n+6,w,c
  4257  001C7E  103E               	iorwf	xtoa@n+7,w,c
  4258  001C80  A4D8               	btfss	status,2,c
  4259  001C82  D750               	goto	l3267
  4260  001C84  BE34               	btfsc	xtoa@p+1,7,c
  4261  001C86  D005               	goto	u2930
  4262  001C88  5034               	movf	xtoa@p+1,w,c
  4263  001C8A  E102               	bnz	u2931
  4264  001C8C  0433               	decf	xtoa@p,w,c
  4265  001C8E  B0D8               	btfsc	status,0,c
  4266  001C90                     u2931:
  4267  001C90  D749               	goto	l3267
  4268  001C92                     u2930:
  4269  001C92  FFFF               	dw	65535	; assembler added errata NOP
  4270  001C94  BE36               	btfsc	xtoa@w+1,7,c
  4271  001C96  D008               	goto	u2950
  4272  001C98  5036               	movf	xtoa@w+1,w,c
  4273  001C9A  E103               	bnz	u2940
  4274  001C9C  0435               	decf	xtoa@w,w,c
  4275  001C9E  A0D8               	btfss	status,0,c
  4276  001CA0  D003               	goto	u2950
  4277  001CA2                     u2940:
  4278  001CA2  0100               	movlb	0	; () banked
  4279  001CA4  B395               	btfsc	_flags& (0+255),1,b
  4280  001CA6  D73E               	goto	l3267
  4281  001CA8                     u2950:
  4282  001CA8  FFFF               	dw	65535	; assembler added errata NOP
  4283                           
  4284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4285  001CAA  0100               	movlb	0	; () banked
  4286  001CAC  A995               	btfss	_flags& (0+255),4,b
  4287  001CAE  D016               	goto	l3313
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4291  001CB0  063F               	decf	xtoa@i,f,c
  4292  001CB2  A0D8               	btfss	status,0,c
  4293  001CB4  0640               	decf	xtoa@i+1,f,c
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4297  001CB6  0E9A               	movlw	low _dbuf
  4298  001CB8  243F               	addwf	xtoa@i,w,c
  4299  001CBA  6ED9               	movwf	fsr2l,c
  4300  001CBC  0E00               	movlw	high _dbuf
  4301  001CBE  2040               	addwfc	xtoa@i+1,w,c
  4302  001CC0  6EDA               	movwf	fsr2h,c
  4303  001CC2  C026  FFDF         	movff	xtoa@x,indf2
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4307  001CC6  063F               	decf	xtoa@i,f,c
  4308  001CC8  A0D8               	btfss	status,0,c
  4309  001CCA  0640               	decf	xtoa@i+1,f,c
  4310                           
  4311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4312  001CCC  0E9A               	movlw	low _dbuf
  4313  001CCE  243F               	addwf	xtoa@i,w,c
  4314  001CD0  6ED9               	movwf	fsr2l,c
  4315  001CD2  0E00               	movlw	high _dbuf
  4316  001CD4  2040               	addwfc	xtoa@i+1,w,c
  4317  001CD6  6EDA               	movwf	fsr2h,c
  4318  001CD8  0E30               	movlw	48
  4319  001CDA  6EDF               	movwf	indf2,c
  4320  001CDC                     l3313:
  4321  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4325  001CDE  C01C  F011         	movff	xtoa@fp,pad@fp
  4326  001CE2  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4327  001CE6  0E9A               	movlw	low _dbuf
  4328  001CE8  243F               	addwf	xtoa@i,w,c
  4329  001CEA  6E13               	movwf	pad@buf,c
  4330  001CEC  0E00               	movlw	high _dbuf
  4331  001CEE  2040               	addwfc	xtoa@i+1,w,c
  4332  001CF0  6E14               	movwf	pad@buf+1,c
  4333  001CF2  C035  F015         	movff	xtoa@w,pad@p
  4334  001CF6  C036  F016         	movff	xtoa@w+1,pad@p+1
  4335  001CFA  EC2C  F015         	call	_pad	;wreg free
  4336  001CFE  C011  F01C         	movff	?_pad,?_xtoa
  4337  001D02  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4338  001D06  0012               	return		;funcret
  4339  001D08  FFFF               	dw	65535	; errata NOP
  4340  001D0A                     __end_of_xtoa:
  4341                           	opt callstack 0
  4342                           
  4343 ;; *************** function _toupper *****************
  4344 ;; Defined at:
  4345 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  c               2    6[COMRAM] int 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2    6[COMRAM] int 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4359 ;;      Params:         2       0       0       0       0       0       0
  4360 ;;      Locals:         2       0       0       0       0       0       0
  4361 ;;      Temps:          4       0       0       0       0       0       0
  4362 ;;      Totals:         8       0       0       0       0       0       0
  4363 ;;Total ram usage:        8 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    3
  4366 ;; This function calls:
  4367 ;;		_islower
  4368 ;; This function is called by:
  4369 ;;		_xtoa
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text9
  4374  002D5A                     __ptext9:
  4375                           	opt callstack 0
  4376  002D5A                     _toupper:
  4377                           	opt callstack 0
  4378  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  4379                           
  4380                           ;incstack = 0
  4381  002D5C  0E9F               	movlw	159
  4382  002D5E  6E09               	movwf	??_toupper& (0+255),c
  4383  002D60  0EFF               	movlw	255
  4384  002D62  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4385  002D64  C007  F00B         	movff	toupper@c,??_toupper+2
  4386  002D68  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4387  002D6C  5009               	movf	??_toupper,w,c
  4388  002D6E  260B               	addwf	??_toupper+2,f,c
  4389  002D70  500A               	movf	??_toupper+1,w,c
  4390  002D72  220C               	addwfc	??_toupper+3,f,c
  4391  002D74  500C               	movf	??_toupper+3,w,c
  4392  002D76  E106               	bnz	u2110
  4393  002D78  0E1A               	movlw	26
  4394  002D7A  5C0B               	subwf	??_toupper+2,w,c
  4395  002D7C  B0D8               	btfsc	status,0,c
  4396  002D7E  D002               	goto	u2110
  4397  002D80  0E01               	movlw	1
  4398  002D82  D002               	goto	u2120
  4399  002D84                     u2110:
  4400  002D84  FFFF               	dw	65535	; assembler added errata NOP
  4401  002D86  0E00               	movlw	0
  4402  002D88                     u2120:
  4403  002D88  FFFF               	dw	65535	; assembler added errata NOP
  4404  002D8A  6E0D               	movwf	_toupper$1830,c
  4405  002D8C  6A0E               	clrf	_toupper$1830+1,c
  4406  002D8E  500D               	movf	_toupper$1830,w,c
  4407  002D90  100E               	iorwf	_toupper$1830+1,w,c
  4408  002D92  B4D8               	btfsc	status,2,c
  4409  002D94  D005               	goto	l1379
  4410  002D96  0E5F               	movlw	95
  4411  002D98  1407               	andwf	toupper@c,w,c
  4412  002D9A  6E07               	movwf	?_toupper,c
  4413  002D9C  6A08               	clrf	?_toupper+1,c
  4414  002D9E  D005               	goto	l1384
  4415  002DA0                     l1379:
  4416  002DA0  FFFF               	dw	65535	; assembler added errata NOP
  4417  002DA2  C007  F007         	movff	toupper@c,?_toupper
  4418  002DA6  C008  F008         	movff	toupper@c+1,?_toupper+1
  4419  002DAA                     l1384:
  4420  002DAA  FFFF               	dw	65535	; assembler added errata NOP
  4421  002DAC  0012               	return		;funcret
  4422  002DAE  FFFF               	dw	65535	; errata NOP
  4423  002DB0                     __end_of_toupper:
  4424                           	opt callstack 0
  4425                           
  4426 ;; *************** function _islower *****************
  4427 ;; Defined at:
  4428 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  c               2    0[COMRAM] int 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  2    0[COMRAM] int 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4442 ;;      Params:         2       0       0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0
  4444 ;;      Temps:          4       0       0       0       0       0       0
  4445 ;;      Totals:         6       0       0       0       0       0       0
  4446 ;;Total ram usage:        6 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    2
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_toupper
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text10
  4457  002F88                     __ptext10:
  4458                           	opt callstack 0
  4459  002F88                     _islower:
  4460                           	opt callstack 0
  4461  002F88  FFFF               	dw	65535	; assembler added errata NOP
  4462                           
  4463                           ;incstack = 0
  4464  002F8A  0E9F               	movlw	159
  4465  002F8C  6E03               	movwf	??_islower& (0+255),c
  4466  002F8E  0EFF               	movlw	255
  4467  002F90  6E04               	movwf	(??_islower+1)& (0+255),c
  4468  002F92  C001  F005         	movff	islower@c,??_islower+2
  4469  002F96  C002  F006         	movff	islower@c+1,??_islower+3
  4470  002F9A  5003               	movf	??_islower,w,c
  4471  002F9C  2605               	addwf	??_islower+2,f,c
  4472  002F9E  5004               	movf	??_islower+1,w,c
  4473  002FA0  2206               	addwfc	??_islower+3,f,c
  4474  002FA2  5006               	movf	??_islower+3,w,c
  4475  002FA4  E106               	bnz	u2000
  4476  002FA6  0E1A               	movlw	26
  4477  002FA8  5C05               	subwf	??_islower+2,w,c
  4478  002FAA  B0D8               	btfsc	status,0,c
  4479  002FAC  D002               	goto	u2000
  4480  002FAE  0E01               	movlw	1
  4481  002FB0  D002               	goto	u2010
  4482  002FB2                     u2000:
  4483  002FB2  FFFF               	dw	65535	; assembler added errata NOP
  4484  002FB4  0E00               	movlw	0
  4485  002FB6                     u2010:
  4486  002FB6  FFFF               	dw	65535	; assembler added errata NOP
  4487  002FB8  6E01               	movwf	?_islower,c
  4488  002FBA  6A02               	clrf	?_islower+1,c
  4489  002FBC  0012               	return		;funcret
  4490  002FBE  FFFF               	dw	65535	; errata NOP
  4491  002FC0                     __end_of_islower:
  4492                           	opt callstack 0
  4493                           
  4494 ;; *************** function _isupper *****************
  4495 ;; Defined at:
  4496 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  c               2    0[COMRAM] int 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  2    0[COMRAM] int 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4510 ;;      Params:         2       0       0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0
  4512 ;;      Temps:          4       0       0       0       0       0       0
  4513 ;;      Totals:         6       0       0       0       0       0       0
  4514 ;;Total ram usage:        6 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    2
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_xtoa
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text11
  4525  002FC0                     __ptext11:
  4526                           	opt callstack 0
  4527  002FC0                     _isupper:
  4528                           	opt callstack 0
  4529  002FC0  FFFF               	dw	65535	; assembler added errata NOP
  4530                           
  4531                           ;incstack = 0
  4532  002FC2  0EBF               	movlw	191
  4533  002FC4  6E03               	movwf	??_isupper& (0+255),c
  4534  002FC6  0EFF               	movlw	255
  4535  002FC8  6E04               	movwf	(??_isupper+1)& (0+255),c
  4536  002FCA  C001  F005         	movff	isupper@c,??_isupper+2
  4537  002FCE  C002  F006         	movff	isupper@c+1,??_isupper+3
  4538  002FD2  5003               	movf	??_isupper,w,c
  4539  002FD4  2605               	addwf	??_isupper+2,f,c
  4540  002FD6  5004               	movf	??_isupper+1,w,c
  4541  002FD8  2206               	addwfc	??_isupper+3,f,c
  4542  002FDA  5006               	movf	??_isupper+3,w,c
  4543  002FDC  E106               	bnz	u2070
  4544  002FDE  0E1A               	movlw	26
  4545  002FE0  5C05               	subwf	??_isupper+2,w,c
  4546  002FE2  B0D8               	btfsc	status,0,c
  4547  002FE4  D002               	goto	u2070
  4548  002FE6  0E01               	movlw	1
  4549  002FE8  D002               	goto	u2080
  4550  002FEA                     u2070:
  4551  002FEA  FFFF               	dw	65535	; assembler added errata NOP
  4552  002FEC  0E00               	movlw	0
  4553  002FEE                     u2080:
  4554  002FEE  FFFF               	dw	65535	; assembler added errata NOP
  4555  002FF0  6E01               	movwf	?_isupper,c
  4556  002FF2  6A02               	clrf	?_isupper+1,c
  4557  002FF4  0012               	return		;funcret
  4558  002FF6  FFFF               	dw	65535	; errata NOP
  4559  002FF8                     __end_of_isupper:
  4560                           	opt callstack 0
  4561                           
  4562 ;; *************** function _isalpha *****************
  4563 ;; Defined at:
  4564 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  c               2    0[COMRAM] int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2    0[COMRAM] int 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4578 ;;      Params:         2       0       0       0       0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0
  4580 ;;      Temps:          4       0       0       0       0       0       0
  4581 ;;      Totals:         6       0       0       0       0       0       0
  4582 ;;Total ram usage:        6 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    2
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_xtoa
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text12
  4593  002F10                     __ptext12:
  4594                           	opt callstack 0
  4595  002F10                     _isalpha:
  4596                           	opt callstack 0
  4597  002F10  FFFF               	dw	65535	; assembler added errata NOP
  4598                           
  4599                           ;incstack = 0
  4600  002F12  0E9F               	movlw	159
  4601  002F14  6E03               	movwf	??_isalpha& (0+255),c
  4602  002F16  0EFF               	movlw	255
  4603  002F18  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4604  002F1A  0E20               	movlw	32
  4605  002F1C  1001               	iorwf	isalpha@c,w,c
  4606  002F1E  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4607  002F20  0E00               	movlw	0
  4608  002F22  1002               	iorwf	isalpha@c+1,w,c
  4609  002F24  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4610  002F26  5003               	movf	??_isalpha,w,c
  4611  002F28  2605               	addwf	??_isalpha+2,f,c
  4612  002F2A  5004               	movf	??_isalpha+1,w,c
  4613  002F2C  2206               	addwfc	??_isalpha+3,f,c
  4614  002F2E  5006               	movf	??_isalpha+3,w,c
  4615  002F30  E106               	bnz	u2090
  4616  002F32  0E1A               	movlw	26
  4617  002F34  5C05               	subwf	??_isalpha+2,w,c
  4618  002F36  B0D8               	btfsc	status,0,c
  4619  002F38  D002               	goto	u2090
  4620  002F3A  0E01               	movlw	1
  4621  002F3C  D002               	goto	u2100
  4622  002F3E                     u2090:
  4623  002F3E  FFFF               	dw	65535	; assembler added errata NOP
  4624  002F40  0E00               	movlw	0
  4625  002F42                     u2100:
  4626  002F42  FFFF               	dw	65535	; assembler added errata NOP
  4627  002F44  6E01               	movwf	?_isalpha,c
  4628  002F46  6A02               	clrf	?_isalpha+1,c
  4629  002F48  0012               	return		;funcret
  4630  002F4A  FFFF               	dw	65535	; errata NOP
  4631  002F4C                     __end_of_isalpha:
  4632                           	opt callstack 0
  4633                           
  4634 ;; *************** function _utoa *****************
  4635 ;; Defined at:
  4636 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4639 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4640 ;;  d               8   29[COMRAM] unsigned long long 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  n               8   49[COMRAM] unsigned long long 
  4643 ;;  i               2   57[COMRAM] int 
  4644 ;;  w               2   47[COMRAM] int 
  4645 ;;  p               2   45[COMRAM] int 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2   27[COMRAM] int 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4655 ;;      Params:        10       0       0       0       0       0       0
  4656 ;;      Locals:        14       0       0       0       0       0       0
  4657 ;;      Temps:          8       0       0       0       0       0       0
  4658 ;;      Totals:        32       0       0       0       0       0       0
  4659 ;;Total ram usage:       32 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    6
  4662 ;; This function calls:
  4663 ;;		___lodiv
  4664 ;;		___lomod
  4665 ;;		_pad
  4666 ;; This function is called by:
  4667 ;;		_vfpfcnvrt
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text13
  4672  001D0A                     __ptext13:
  4673                           	opt callstack 0
  4674  001D0A                     _utoa:
  4675                           	opt callstack 0
  4676  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  4677                           
  4678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4679                           
  4680                           ;incstack = 0
  4681  001D0C  0100               	movlb	0	; () banked
  4682  001D0E  AF94               	btfss	(_prec+1)& (0+255),7,b
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4686  001D10  9395               	bcf	_flags& (0+255),1,b
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4690  001D12  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4691  001D14  D005               	goto	u2740
  4692  001D16  5194               	movf	(_prec+1)& (0+255),w,b
  4693  001D18  E109               	bnz	l429
  4694  001D1A  0593               	decf	_prec& (0+255),w,b
  4695  001D1C  B0D8               	btfsc	status,0,c
  4696  001D1E  D006               	goto	l429
  4697  001D20                     u2740:
  4698  001D20  FFFF               	dw	65535	; assembler added errata NOP
  4699                           
  4700                           ; BSR set to: 0
  4701  001D22  0E00               	movlw	0
  4702  001D24  6E2F               	movwf	utoa@p+1,c
  4703  001D26  0E01               	movlw	1
  4704  001D28  6E2E               	movwf	utoa@p,c
  4705  001D2A  D005               	goto	l431
  4706  001D2C                     l429:
  4707  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  4708                           
  4709                           ; BSR set to: 0
  4710  001D2E  C093  F02E         	movff	_prec,utoa@p
  4711  001D32  C094  F02F         	movff	_prec+1,utoa@p+1
  4712  001D36                     l431:
  4713  001D36  FFFF               	dw	65535	; assembler added errata NOP
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4717  001D38  C091  F030         	movff	_width,utoa@w
  4718  001D3C  C092  F031         	movff	_width+1,utoa@w+1
  4719                           
  4720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4721  001D40  C01E  F032         	movff	utoa@d,utoa@n
  4722  001D44  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4723  001D48  C020  F034         	movff	utoa@d+2,utoa@n+2
  4724  001D4C  C021  F035         	movff	utoa@d+3,utoa@n+3
  4725  001D50  C022  F036         	movff	utoa@d+4,utoa@n+4
  4726  001D54  C023  F037         	movff	utoa@d+5,utoa@n+5
  4727  001D58  C024  F038         	movff	utoa@d+6,utoa@n+6
  4728  001D5C  C025  F039         	movff	utoa@d+7,utoa@n+7
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4732  001D60  0E00               	movlw	0
  4733  001D62  6E3B               	movwf	utoa@i+1,c
  4734  001D64  0E1F               	movlw	31
  4735  001D66  6E3A               	movwf	utoa@i,c
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4739  001D68  0E00               	movlw	0
  4740  001D6A  6FB9               	movwf	(_dbuf+31)& (0+255),b
  4741                           
  4742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4743  001D6C  D077               	goto	l3237
  4744  001D6E                     l3227:
  4745  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  4746                           
  4747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4748  001D70  063A               	decf	utoa@i,f,c
  4749  001D72  A0D8               	btfss	status,0,c
  4750  001D74  063B               	decf	utoa@i+1,f,c
  4751                           
  4752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4753  001D76  0E9A               	movlw	low _dbuf
  4754  001D78  243A               	addwf	utoa@i,w,c
  4755  001D7A  6ED9               	movwf	fsr2l,c
  4756  001D7C  0E00               	movlw	high _dbuf
  4757  001D7E  203B               	addwfc	utoa@i+1,w,c
  4758  001D80  6EDA               	movwf	fsr2h,c
  4759  001D82  C032  F001         	movff	utoa@n,___lomod@dividend
  4760  001D86  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4761  001D8A  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4762  001D8E  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4763  001D92  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4764  001D96  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4765  001D9A  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4766  001D9E  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4767  001DA2  0E0A               	movlw	10
  4768  001DA4  6E09               	movwf	___lomod@divisor,c
  4769  001DA6  0E00               	movlw	0
  4770  001DA8  6E0A               	movwf	___lomod@divisor+1,c
  4771  001DAA  0E00               	movlw	0
  4772  001DAC  6E0B               	movwf	___lomod@divisor+2,c
  4773  001DAE  0E00               	movlw	0
  4774  001DB0  6E0C               	movwf	___lomod@divisor+3,c
  4775  001DB2  0E00               	movlw	0
  4776  001DB4  6E0D               	movwf	___lomod@divisor+4,c
  4777  001DB6  0E00               	movlw	0
  4778  001DB8  6E0E               	movwf	___lomod@divisor+5,c
  4779  001DBA  0E00               	movlw	0
  4780  001DBC  6E0F               	movwf	___lomod@divisor+6,c
  4781  001DBE  0E00               	movlw	0
  4782  001DC0  6E10               	movwf	___lomod@divisor+7,c
  4783  001DC2  EC78  F014         	call	___lomod	;wreg free
  4784  001DC6  C001  F026         	movff	?___lomod,??_utoa
  4785  001DCA  C002  F027         	movff	?___lomod+1,??_utoa+1
  4786  001DCE  C003  F028         	movff	?___lomod+2,??_utoa+2
  4787  001DD2  C004  F029         	movff	?___lomod+3,??_utoa+3
  4788  001DD6  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4789  001DDA  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4790  001DDE  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4791  001DE2  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4792  001DE6  5026               	movf	??_utoa,w,c
  4793  001DE8  0F30               	addlw	48
  4794  001DEA  6EDF               	movwf	indf2,c
  4795                           
  4796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4797  001DEC  062E               	decf	utoa@p,f,c
  4798  001DEE  A0D8               	btfss	status,0,c
  4799  001DF0  062F               	decf	utoa@p+1,f,c
  4800                           
  4801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4802  001DF2  0630               	decf	utoa@w,f,c
  4803  001DF4  A0D8               	btfss	status,0,c
  4804  001DF6  0631               	decf	utoa@w+1,f,c
  4805                           
  4806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4807  001DF8  C032  F001         	movff	utoa@n,___lodiv@dividend
  4808  001DFC  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4809  001E00  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4810  001E04  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4811  001E08  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4812  001E0C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4813  001E10  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4814  001E14  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4815  001E18  0E0A               	movlw	10
  4816  001E1A  6E09               	movwf	___lodiv@divisor,c
  4817  001E1C  0E00               	movlw	0
  4818  001E1E  6E0A               	movwf	___lodiv@divisor+1,c
  4819  001E20  0E00               	movlw	0
  4820  001E22  6E0B               	movwf	___lodiv@divisor+2,c
  4821  001E24  0E00               	movlw	0
  4822  001E26  6E0C               	movwf	___lodiv@divisor+3,c
  4823  001E28  0E00               	movlw	0
  4824  001E2A  6E0D               	movwf	___lodiv@divisor+4,c
  4825  001E2C  0E00               	movlw	0
  4826  001E2E  6E0E               	movwf	___lodiv@divisor+5,c
  4827  001E30  0E00               	movlw	0
  4828  001E32  6E0F               	movwf	___lodiv@divisor+6,c
  4829  001E34  0E00               	movlw	0
  4830  001E36  6E10               	movwf	___lodiv@divisor+7,c
  4831  001E38  ECA9  F013         	call	___lodiv	;wreg free
  4832  001E3C  C001  F032         	movff	?___lodiv,utoa@n
  4833  001E40  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4834  001E44  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4835  001E48  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4836  001E4C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4837  001E50  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4838  001E54  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4839  001E58  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4840  001E5C                     l3237:
  4841  001E5C  FFFF               	dw	65535	; assembler added errata NOP
  4842                           
  4843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4844  001E5E  503A               	movf	utoa@i,w,c
  4845  001E60  103B               	iorwf	utoa@i+1,w,c
  4846  001E62  B4D8               	btfsc	status,2,c
  4847  001E64  D01C               	goto	u2790
  4848  001E66  5032               	movf	utoa@n,w,c
  4849  001E68  1033               	iorwf	utoa@n+1,w,c
  4850  001E6A  1034               	iorwf	utoa@n+2,w,c
  4851  001E6C  1035               	iorwf	utoa@n+3,w,c
  4852  001E6E  1036               	iorwf	utoa@n+4,w,c
  4853  001E70  1037               	iorwf	utoa@n+5,w,c
  4854  001E72  1038               	iorwf	utoa@n+6,w,c
  4855  001E74  1039               	iorwf	utoa@n+7,w,c
  4856  001E76  A4D8               	btfss	status,2,c
  4857  001E78  D77A               	goto	l3227
  4858  001E7A  BE2F               	btfsc	utoa@p+1,7,c
  4859  001E7C  D005               	goto	u2770
  4860  001E7E  502F               	movf	utoa@p+1,w,c
  4861  001E80  E102               	bnz	u2771
  4862  001E82  042E               	decf	utoa@p,w,c
  4863  001E84  B0D8               	btfsc	status,0,c
  4864  001E86                     u2771:
  4865  001E86  D773               	goto	l3227
  4866  001E88                     u2770:
  4867  001E88  FFFF               	dw	65535	; assembler added errata NOP
  4868  001E8A  BE31               	btfsc	utoa@w+1,7,c
  4869  001E8C  D008               	goto	u2790
  4870  001E8E  5031               	movf	utoa@w+1,w,c
  4871  001E90  E103               	bnz	u2780
  4872  001E92  0430               	decf	utoa@w,w,c
  4873  001E94  A0D8               	btfss	status,0,c
  4874  001E96  D003               	goto	u2790
  4875  001E98                     u2780:
  4876  001E98  0100               	movlb	0	; () banked
  4877  001E9A  B395               	btfsc	_flags& (0+255),1,b
  4878  001E9C  D768               	goto	l3227
  4879  001E9E                     u2790:
  4880  001E9E  FFFF               	dw	65535	; assembler added errata NOP
  4881                           
  4882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4883  001EA0  C01C  F011         	movff	utoa@fp,pad@fp
  4884  001EA4  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4885  001EA8  0E9A               	movlw	low _dbuf
  4886  001EAA  243A               	addwf	utoa@i,w,c
  4887  001EAC  6E13               	movwf	pad@buf,c
  4888  001EAE  0E00               	movlw	high _dbuf
  4889  001EB0  203B               	addwfc	utoa@i+1,w,c
  4890  001EB2  6E14               	movwf	pad@buf+1,c
  4891  001EB4  C030  F015         	movff	utoa@w,pad@p
  4892  001EB8  C031  F016         	movff	utoa@w+1,pad@p+1
  4893  001EBC  EC2C  F015         	call	_pad	;wreg free
  4894  001EC0  C011  F01C         	movff	?_pad,?_utoa
  4895  001EC4  C012  F01D         	movff	?_pad+1,?_utoa+1
  4896  001EC8  0012               	return		;funcret
  4897  001ECA  FFFF               	dw	65535	; errata NOP
  4898  001ECC                     __end_of_utoa:
  4899                           	opt callstack 0
  4900                           
  4901 ;; *************** function ___lomod *****************
  4902 ;; Defined at:
  4903 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  dividend        8    0[COMRAM] unsigned long long 
  4906 ;;  divisor         8    8[COMRAM] unsigned long long 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  counter         1   16[COMRAM] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  8    0[COMRAM] unsigned long long 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4918 ;;      Params:        16       0       0       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0
  4921 ;;      Totals:        17       0       0       0       0       0       0
  4922 ;;Total ram usage:       17 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    2
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_utoa
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text14
  4933  0028F0                     __ptext14:
  4934                           	opt callstack 0
  4935  0028F0                     ___lomod:
  4936                           	opt callstack 0
  4937  0028F0  FFFF               	dw	65535	; assembler added errata NOP
  4938                           
  4939                           ;incstack = 0
  4940  0028F2  5009               	movf	___lomod@divisor,w,c
  4941  0028F4  100A               	iorwf	___lomod@divisor+1,w,c
  4942  0028F6  100B               	iorwf	___lomod@divisor+2,w,c
  4943  0028F8  100C               	iorwf	___lomod@divisor+3,w,c
  4944  0028FA  100D               	iorwf	___lomod@divisor+4,w,c
  4945  0028FC  100E               	iorwf	___lomod@divisor+5,w,c
  4946  0028FE  100F               	iorwf	___lomod@divisor+6,w,c
  4947  002900  1010               	iorwf	___lomod@divisor+7,w,c
  4948  002902  B4D8               	btfsc	status,2,c
  4949  002904  D040               	goto	l1011
  4950  002906  0E01               	movlw	1
  4951  002908  6E11               	movwf	___lomod@counter,c
  4952  00290A  D00B               	goto	l3027
  4953  00290C                     l3025:
  4954  00290C  FFFF               	dw	65535	; assembler added errata NOP
  4955  00290E  90D8               	bcf	status,0,c
  4956  002910  3609               	rlcf	___lomod@divisor,f,c
  4957  002912  360A               	rlcf	___lomod@divisor+1,f,c
  4958  002914  360B               	rlcf	___lomod@divisor+2,f,c
  4959  002916  360C               	rlcf	___lomod@divisor+3,f,c
  4960  002918  360D               	rlcf	___lomod@divisor+4,f,c
  4961  00291A  360E               	rlcf	___lomod@divisor+5,f,c
  4962  00291C  360F               	rlcf	___lomod@divisor+6,f,c
  4963  00291E  3610               	rlcf	___lomod@divisor+7,f,c
  4964  002920  2A11               	incf	___lomod@counter,f,c
  4965  002922                     l3027:
  4966  002922  FFFF               	dw	65535	; assembler added errata NOP
  4967  002924  AE10               	btfss	___lomod@divisor+7,7,c
  4968  002926  D7F2               	goto	l3025
  4969  002928                     u2340:
  4970  002928  FFFF               	dw	65535	; assembler added errata NOP
  4971  00292A  5009               	movf	___lomod@divisor,w,c
  4972  00292C  5C01               	subwf	___lomod@dividend,w,c
  4973  00292E  500A               	movf	___lomod@divisor+1,w,c
  4974  002930  5802               	subwfb	___lomod@dividend+1,w,c
  4975  002932  500B               	movf	___lomod@divisor+2,w,c
  4976  002934  5803               	subwfb	___lomod@dividend+2,w,c
  4977  002936  500C               	movf	___lomod@divisor+3,w,c
  4978  002938  5804               	subwfb	___lomod@dividend+3,w,c
  4979  00293A  500D               	movf	___lomod@divisor+4,w,c
  4980  00293C  5805               	subwfb	___lomod@dividend+4,w,c
  4981  00293E  500E               	movf	___lomod@divisor+5,w,c
  4982  002940  5806               	subwfb	___lomod@dividend+5,w,c
  4983  002942  500F               	movf	___lomod@divisor+6,w,c
  4984  002944  5807               	subwfb	___lomod@dividend+6,w,c
  4985  002946  5010               	movf	___lomod@divisor+7,w,c
  4986  002948  5808               	subwfb	___lomod@dividend+7,w,c
  4987  00294A  A0D8               	btfss	status,0,c
  4988  00294C  D010               	goto	l3033
  4989  00294E  5009               	movf	___lomod@divisor,w,c
  4990  002950  5E01               	subwf	___lomod@dividend,f,c
  4991  002952  500A               	movf	___lomod@divisor+1,w,c
  4992  002954  5A02               	subwfb	___lomod@dividend+1,f,c
  4993  002956  500B               	movf	___lomod@divisor+2,w,c
  4994  002958  5A03               	subwfb	___lomod@dividend+2,f,c
  4995  00295A  500C               	movf	___lomod@divisor+3,w,c
  4996  00295C  5A04               	subwfb	___lomod@dividend+3,f,c
  4997  00295E  500D               	movf	___lomod@divisor+4,w,c
  4998  002960  5A05               	subwfb	___lomod@dividend+4,f,c
  4999  002962  500E               	movf	___lomod@divisor+5,w,c
  5000  002964  5A06               	subwfb	___lomod@dividend+5,f,c
  5001  002966  500F               	movf	___lomod@divisor+6,w,c
  5002  002968  5A07               	subwfb	___lomod@dividend+6,f,c
  5003  00296A  5010               	movf	___lomod@divisor+7,w,c
  5004  00296C  5A08               	subwfb	___lomod@dividend+7,f,c
  5005  00296E                     l3033:
  5006  00296E  FFFF               	dw	65535	; assembler added errata NOP
  5007  002970  90D8               	bcf	status,0,c
  5008  002972  3210               	rrcf	___lomod@divisor+7,f,c
  5009  002974  320F               	rrcf	___lomod@divisor+6,f,c
  5010  002976  320E               	rrcf	___lomod@divisor+5,f,c
  5011  002978  320D               	rrcf	___lomod@divisor+4,f,c
  5012  00297A  320C               	rrcf	___lomod@divisor+3,f,c
  5013  00297C  320B               	rrcf	___lomod@divisor+2,f,c
  5014  00297E  320A               	rrcf	___lomod@divisor+1,f,c
  5015  002980  3209               	rrcf	___lomod@divisor,f,c
  5016  002982  2E11               	decfsz	___lomod@counter,f,c
  5017  002984  D7D1               	goto	u2340
  5018  002986                     l1011:
  5019  002986  FFFF               	dw	65535	; assembler added errata NOP
  5020  002988  C001  F001         	movff	___lomod@dividend,?___lomod
  5021  00298C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5022  002990  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5023  002994  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5024  002998  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5025  00299C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5026  0029A0  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5027  0029A4  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5028  0029A8  0012               	return		;funcret
  5029  0029AA  FFFF               	dw	65535	; errata NOP
  5030  0029AC                     __end_of___lomod:
  5031                           	opt callstack 0
  5032                           
  5033 ;; *************** function ___lodiv *****************
  5034 ;; Defined at:
  5035 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  dividend        8    0[COMRAM] unsigned long long 
  5038 ;;  divisor         8    8[COMRAM] unsigned long long 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  quotient        8   16[COMRAM] unsigned long long 
  5041 ;;  counter         1   24[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  8    0[COMRAM] unsigned long long 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5051 ;;      Params:        16       0       0       0       0       0       0
  5052 ;;      Locals:         9       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0
  5054 ;;      Totals:        25       0       0       0       0       0       0
  5055 ;;Total ram usage:       25 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    2
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_utoa
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text15
  5066  002752                     __ptext15:
  5067                           	opt callstack 0
  5068  002752                     ___lodiv:
  5069                           	opt callstack 0
  5070  002752  FFFF               	dw	65535	; assembler added errata NOP
  5071                           
  5072                           ;incstack = 0
  5073  002754  EE20  F011         	lfsr	2,___lodiv@quotient
  5074  002758  0E07               	movlw	7
  5075  00275A                     u2291:
  5076  00275A  6ADE               	clrf	postinc2,c
  5077  00275C  06E8               	decf	wreg,f,c
  5078  00275E  E2FD               	bc	u2291
  5079  002760  5009               	movf	___lodiv@divisor,w,c
  5080  002762  100A               	iorwf	___lodiv@divisor+1,w,c
  5081  002764  100B               	iorwf	___lodiv@divisor+2,w,c
  5082  002766  100C               	iorwf	___lodiv@divisor+3,w,c
  5083  002768  100D               	iorwf	___lodiv@divisor+4,w,c
  5084  00276A  100E               	iorwf	___lodiv@divisor+5,w,c
  5085  00276C  100F               	iorwf	___lodiv@divisor+6,w,c
  5086  00276E  1010               	iorwf	___lodiv@divisor+7,w,c
  5087  002770  B4D8               	btfsc	status,2,c
  5088  002772  D04A               	goto	l1001
  5089  002774  0E01               	movlw	1
  5090  002776  6E19               	movwf	___lodiv@counter,c
  5091  002778  D00B               	goto	l3007
  5092  00277A                     l3005:
  5093  00277A  FFFF               	dw	65535	; assembler added errata NOP
  5094  00277C  90D8               	bcf	status,0,c
  5095  00277E  3609               	rlcf	___lodiv@divisor,f,c
  5096  002780  360A               	rlcf	___lodiv@divisor+1,f,c
  5097  002782  360B               	rlcf	___lodiv@divisor+2,f,c
  5098  002784  360C               	rlcf	___lodiv@divisor+3,f,c
  5099  002786  360D               	rlcf	___lodiv@divisor+4,f,c
  5100  002788  360E               	rlcf	___lodiv@divisor+5,f,c
  5101  00278A  360F               	rlcf	___lodiv@divisor+6,f,c
  5102  00278C  3610               	rlcf	___lodiv@divisor+7,f,c
  5103  00278E  2A19               	incf	___lodiv@counter,f,c
  5104  002790                     l3007:
  5105  002790  FFFF               	dw	65535	; assembler added errata NOP
  5106  002792  AE10               	btfss	___lodiv@divisor+7,7,c
  5107  002794  D7F2               	goto	l3005
  5108  002796                     u2310:
  5109  002796  FFFF               	dw	65535	; assembler added errata NOP
  5110  002798  90D8               	bcf	status,0,c
  5111  00279A  3611               	rlcf	___lodiv@quotient,f,c
  5112  00279C  3612               	rlcf	___lodiv@quotient+1,f,c
  5113  00279E  3613               	rlcf	___lodiv@quotient+2,f,c
  5114  0027A0  3614               	rlcf	___lodiv@quotient+3,f,c
  5115  0027A2  3615               	rlcf	___lodiv@quotient+4,f,c
  5116  0027A4  3616               	rlcf	___lodiv@quotient+5,f,c
  5117  0027A6  3617               	rlcf	___lodiv@quotient+6,f,c
  5118  0027A8  3618               	rlcf	___lodiv@quotient+7,f,c
  5119  0027AA  5009               	movf	___lodiv@divisor,w,c
  5120  0027AC  5C01               	subwf	___lodiv@dividend,w,c
  5121  0027AE  500A               	movf	___lodiv@divisor+1,w,c
  5122  0027B0  5802               	subwfb	___lodiv@dividend+1,w,c
  5123  0027B2  500B               	movf	___lodiv@divisor+2,w,c
  5124  0027B4  5803               	subwfb	___lodiv@dividend+2,w,c
  5125  0027B6  500C               	movf	___lodiv@divisor+3,w,c
  5126  0027B8  5804               	subwfb	___lodiv@dividend+3,w,c
  5127  0027BA  500D               	movf	___lodiv@divisor+4,w,c
  5128  0027BC  5805               	subwfb	___lodiv@dividend+4,w,c
  5129  0027BE  500E               	movf	___lodiv@divisor+5,w,c
  5130  0027C0  5806               	subwfb	___lodiv@dividend+5,w,c
  5131  0027C2  500F               	movf	___lodiv@divisor+6,w,c
  5132  0027C4  5807               	subwfb	___lodiv@dividend+6,w,c
  5133  0027C6  5010               	movf	___lodiv@divisor+7,w,c
  5134  0027C8  5808               	subwfb	___lodiv@dividend+7,w,c
  5135  0027CA  A0D8               	btfss	status,0,c
  5136  0027CC  D011               	goto	l3017
  5137  0027CE  5009               	movf	___lodiv@divisor,w,c
  5138  0027D0  5E01               	subwf	___lodiv@dividend,f,c
  5139  0027D2  500A               	movf	___lodiv@divisor+1,w,c
  5140  0027D4  5A02               	subwfb	___lodiv@dividend+1,f,c
  5141  0027D6  500B               	movf	___lodiv@divisor+2,w,c
  5142  0027D8  5A03               	subwfb	___lodiv@dividend+2,f,c
  5143  0027DA  500C               	movf	___lodiv@divisor+3,w,c
  5144  0027DC  5A04               	subwfb	___lodiv@dividend+3,f,c
  5145  0027DE  500D               	movf	___lodiv@divisor+4,w,c
  5146  0027E0  5A05               	subwfb	___lodiv@dividend+4,f,c
  5147  0027E2  500E               	movf	___lodiv@divisor+5,w,c
  5148  0027E4  5A06               	subwfb	___lodiv@dividend+5,f,c
  5149  0027E6  500F               	movf	___lodiv@divisor+6,w,c
  5150  0027E8  5A07               	subwfb	___lodiv@dividend+6,f,c
  5151  0027EA  5010               	movf	___lodiv@divisor+7,w,c
  5152  0027EC  5A08               	subwfb	___lodiv@dividend+7,f,c
  5153  0027EE  8011               	bsf	___lodiv@quotient,0,c
  5154  0027F0                     l3017:
  5155  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  5156  0027F2  90D8               	bcf	status,0,c
  5157  0027F4  3210               	rrcf	___lodiv@divisor+7,f,c
  5158  0027F6  320F               	rrcf	___lodiv@divisor+6,f,c
  5159  0027F8  320E               	rrcf	___lodiv@divisor+5,f,c
  5160  0027FA  320D               	rrcf	___lodiv@divisor+4,f,c
  5161  0027FC  320C               	rrcf	___lodiv@divisor+3,f,c
  5162  0027FE  320B               	rrcf	___lodiv@divisor+2,f,c
  5163  002800  320A               	rrcf	___lodiv@divisor+1,f,c
  5164  002802  3209               	rrcf	___lodiv@divisor,f,c
  5165  002804  2E19               	decfsz	___lodiv@counter,f,c
  5166  002806  D7C7               	goto	u2310
  5167  002808                     l1001:
  5168  002808  FFFF               	dw	65535	; assembler added errata NOP
  5169  00280A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5170  00280E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5171  002812  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5172  002816  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5173  00281A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5174  00281E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5175  002822  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5176  002826  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5177  00282A  0012               	return		;funcret
  5178  00282C  FFFF               	dw	65535	; errata NOP
  5179  00282E                     __end_of___lodiv:
  5180                           	opt callstack 0
  5181                           
  5182 ;; *************** function _strncmp *****************
  5183 ;; Defined at:
  5184 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5187 ;;		 -> STR_2(3), STR_1(4), 
  5188 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5189 ;;		 -> STR_139(3), STR_135(3), STR_130(3), STR_126(3), 
  5190 ;;		 -> STR_121(3), STR_117(3), STR_112(4), STR_108(4), 
  5191 ;;		 -> STR_103(3), STR_98(3), STR_93(3), STR_88(4), 
  5192 ;;		 -> STR_83(3), STR_78(3), STR_73(3), STR_68(4), 
  5193 ;;		 -> STR_63(3), STR_58(3), STR_53(3), STR_48(4), 
  5194 ;;		 -> STR_43(3), STR_39(3), STR_34(3), STR_30(3), 
  5195 ;;		 -> STR_25(3), STR_21(3), STR_16(4), STR_12(4), 
  5196 ;;  n               2    4[COMRAM] unsigned int 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5199 ;;		 -> STR_139(3), STR_135(3), STR_130(3), STR_126(3), 
  5200 ;;		 -> STR_121(3), STR_117(3), STR_112(4), STR_108(4), 
  5201 ;;		 -> STR_103(3), STR_98(3), STR_93(3), STR_88(4), 
  5202 ;;		 -> STR_83(3), STR_78(3), STR_73(3), STR_68(4), 
  5203 ;;		 -> STR_63(3), STR_58(3), STR_53(3), STR_48(4), 
  5204 ;;		 -> STR_43(3), STR_39(3), STR_34(3), STR_30(3), 
  5205 ;;		 -> STR_25(3), STR_21(3), STR_16(4), STR_12(4), 
  5206 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5207 ;;		 -> STR_2(3), STR_1(4), 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  2    0[COMRAM] int 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         6       0       0       0       0       0       0
  5218 ;;      Locals:         4       0       0       0       0       0       0
  5219 ;;      Temps:          1       0       0       0       0       0       0
  5220 ;;      Totals:        11       0       0       0       0       0       0
  5221 ;;Total ram usage:       11 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_vfpfcnvrt
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text16
  5232  00282E                     __ptext16:
  5233                           	opt callstack 0
  5234  00282E                     _strncmp:
  5235                           	opt callstack 0
  5236  00282E  FFFF               	dw	65535	; assembler added errata NOP
  5237                           
  5238                           ;incstack = 0
  5239  002830  C001  F008         	movff	strncmp@_l,strncmp@l
  5240  002834  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5241  002838  C003  F00A         	movff	strncmp@_r,strncmp@r
  5242  00283C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5243  002840  0605               	decf	strncmp@n,f,c
  5244  002842  A0D8               	btfss	status,0,c
  5245  002844  0606               	decf	strncmp@n+1,f,c
  5246  002846  2805               	incf	strncmp@n,w,c
  5247  002848  E110               	bnz	l3367
  5248  00284A  2806               	incf	strncmp@n+1,w,c
  5249  00284C  A4D8               	btfss	status,2,c
  5250  00284E  D00D               	goto	l3367
  5251  002850  0E00               	movlw	0
  5252  002852  6E02               	movwf	?_strncmp+1,c
  5253  002854  0E00               	movlw	0
  5254  002856  6E01               	movwf	?_strncmp,c
  5255  002858  D048               	goto	l1369
  5256  00285A                     l3365:
  5257  00285A  FFFF               	dw	65535	; assembler added errata NOP
  5258  00285C  4A08               	infsnz	strncmp@l,f,c
  5259  00285E  2A09               	incf	strncmp@l+1,f,c
  5260  002860  4A0A               	infsnz	strncmp@r,f,c
  5261  002862  2A0B               	incf	strncmp@r+1,f,c
  5262  002864  0605               	decf	strncmp@n,f,c
  5263  002866  A0D8               	btfss	status,0,c
  5264  002868  0606               	decf	strncmp@n+1,f,c
  5265  00286A                     l3367:
  5266  00286A  FFFF               	dw	65535	; assembler added errata NOP
  5267  00286C  C008  FFF6         	movff	strncmp@l,tblptrl
  5268  002870  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5269  002874                     	if	0	;tblptru may be non-zero
  5270  002874                     	endif
  5271  002874                     	if	0	;tblptru may be non-zero
  5272  002874                     	endif
  5273  002874  0008               	tblrd		*
  5274  002876  FFFF               	dw	65535	; errata NOP
  5275  002878  50F5               	movf	tablat,w,c
  5276  00287A  0900               	iorlw	0
  5277  00287C  B4D8               	btfsc	status,2,c
  5278  00287E  D020               	goto	u3080
  5279  002880  C00A  FFF6         	movff	strncmp@r,tblptrl
  5280  002884  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5281  002888                     	if	0	;tblptru may be non-zero
  5282  002888                     	endif
  5283  002888                     	if	0	;tblptru may be non-zero
  5284  002888                     	endif
  5285  002888  0008               	tblrd		*
  5286  00288A  FFFF               	dw	65535	; errata NOP
  5287  00288C  50F5               	movf	tablat,w,c
  5288  00288E  0900               	iorlw	0
  5289  002890  B4D8               	btfsc	status,2,c
  5290  002892  D016               	goto	u3080
  5291  002894  5005               	movf	strncmp@n,w,c
  5292  002896  1006               	iorwf	strncmp@n+1,w,c
  5293  002898  B4D8               	btfsc	status,2,c
  5294  00289A  D012               	goto	u3080
  5295  00289C  C008  FFF6         	movff	strncmp@l,tblptrl
  5296  0028A0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5297  0028A4                     	if	0	;tblptru may be non-zero
  5298  0028A4                     	endif
  5299  0028A4                     	if	0	;tblptru may be non-zero
  5300  0028A4                     	endif
  5301  0028A4  0008               	tblrd		*
  5302  0028A6  FFFF               	dw	65535	; errata NOP
  5303  0028A8  CFF5 F007          	movff	tablat,??_strncmp
  5304  0028AC  C00A  FFF6         	movff	strncmp@r,tblptrl
  5305  0028B0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5306  0028B4                     	if	0	;tblptru may be non-zero
  5307  0028B4                     	endif
  5308  0028B4                     	if	0	;tblptru may be non-zero
  5309  0028B4                     	endif
  5310  0028B4  0008               	tblrd		*
  5311  0028B6  FFFF               	dw	65535	; errata NOP
  5312  0028B8  50F5               	movf	tablat,w,c
  5313  0028BA  1807               	xorwf	??_strncmp,w,c
  5314  0028BC  B4D8               	btfsc	status,2,c
  5315  0028BE  D7CD               	goto	l3365
  5316  0028C0                     u3080:
  5317  0028C0  FFFF               	dw	65535	; assembler added errata NOP
  5318  0028C2  C008  FFF6         	movff	strncmp@l,tblptrl
  5319  0028C6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5320  0028CA                     	if	0	;tblptru may be non-zero
  5321  0028CA                     	endif
  5322  0028CA                     	if	0	;tblptru may be non-zero
  5323  0028CA                     	endif
  5324  0028CA  0008               	tblrd		*
  5325  0028CC  FFFF               	dw	65535	; errata NOP
  5326  0028CE  CFF5 F007          	movff	tablat,??_strncmp
  5327  0028D2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5328  0028D6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5329  0028DA                     	if	0	;tblptru may be non-zero
  5330  0028DA                     	endif
  5331  0028DA                     	if	0	;tblptru may be non-zero
  5332  0028DA                     	endif
  5333  0028DA  0008               	tblrd		*
  5334  0028DC  FFFF               	dw	65535	; errata NOP
  5335  0028DE  50F5               	movf	tablat,w,c
  5336  0028E0  5C07               	subwf	??_strncmp,w,c
  5337  0028E2  6E01               	movwf	?_strncmp,c
  5338  0028E4  6A02               	clrf	?_strncmp+1,c
  5339  0028E6  A0D8               	btfss	status,0,c
  5340  0028E8  0602               	decf	?_strncmp+1,f,c
  5341  0028EA                     l1369:
  5342  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  5343  0028EC  0012               	return		;funcret
  5344  0028EE  FFFF               	dw	65535	; errata NOP
  5345  0028F0                     __end_of_strncmp:
  5346                           	opt callstack 0
  5347                           
  5348 ;; *************** function _stoa *****************
  5349 ;; Defined at:
  5350 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5353 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5354 ;;  s               2   11[COMRAM] PTR unsigned char 
  5355 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5358 ;;  l               2   29[COMRAM] int 
  5359 ;;  p               2   27[COMRAM] int 
  5360 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5361 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5362 ;;  w               2   23[COMRAM] int 
  5363 ;;  i               2   21[COMRAM] int 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  2    9[COMRAM] int 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         4       0       0       0       0       0       0
  5374 ;;      Locals:        17       0       0       0       0       0       0
  5375 ;;      Temps:          1       0       0       0       0       0       0
  5376 ;;      Totals:        22       0       0       0       0       0       0
  5377 ;;Total ram usage:       22 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    4
  5380 ;; This function calls:
  5381 ;;		_fputc
  5382 ;;		_strlen
  5383 ;; This function is called by:
  5384 ;;		_vfpfcnvrt
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text17
  5389  0024D6                     __ptext17:
  5390                           	opt callstack 0
  5391  0024D6                     _stoa:
  5392                           	opt callstack 0
  5393  0024D6  FFFF               	dw	65535	; assembler added errata NOP
  5394                           
  5395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5396                           
  5397                           ;incstack = 0
  5398  0024D8  EE20  F0E2         	lfsr	2,stoa@F1152
  5399  0024DC  EE10  F00F         	lfsr	1,stoa@nuls
  5400  0024E0  0E06               	movlw	6
  5401  0024E2                     u2641:
  5402  0024E2  CFDB FFE3          	movff	plusw2,plusw1
  5403  0024E6  06E8               	decf	wreg,f,c
  5404  0024E8  E2FC               	bc	u2641
  5405                           
  5406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5407  0024EA  C00C  F01A         	movff	stoa@s,stoa@cp
  5408  0024EE  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5409                           
  5410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5411  0024F2  501A               	movf	stoa@cp,w,c
  5412  0024F4  101B               	iorwf	stoa@cp+1,w,c
  5413  0024F6  A4D8               	btfss	status,2,c
  5414  0024F8  D004               	goto	l3181
  5415                           
  5416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5417  0024FA  0E0F               	movlw	low stoa@nuls
  5418  0024FC  6E1A               	movwf	stoa@cp,c
  5419  0024FE  0E00               	movlw	high stoa@nuls
  5420  002500  6E1B               	movwf	stoa@cp+1,c
  5421  002502                     l3181:
  5422  002502  FFFF               	dw	65535	; assembler added errata NOP
  5423                           
  5424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5425  002504  C01A  F001         	movff	stoa@cp,strlen@s
  5426  002508  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5427  00250C  EC18  F018         	call	_strlen	;wreg free
  5428  002510  C001  F01E         	movff	?_strlen,stoa@l
  5429  002514  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5430                           
  5431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5432  002518  C093  F01C         	movff	_prec,stoa@p
  5433  00251C  C094  F01D         	movff	_prec+1,stoa@p+1
  5434                           
  5435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5436  002520  BE1D               	btfsc	stoa@p+1,7,c
  5437  002522  D00E               	goto	l410
  5438  002524  501E               	movf	stoa@l,w,c
  5439  002526  5C1C               	subwf	stoa@p,w,c
  5440  002528  501D               	movf	stoa@p+1,w,c
  5441  00252A  0A80               	xorlw	128
  5442  00252C  6E0E               	movwf	??_stoa& (0+255),c
  5443  00252E  501F               	movf	stoa@l+1,w,c
  5444  002530  0A80               	xorlw	128
  5445  002532  580E               	subwfb	??_stoa& (0+255),w,c
  5446  002534  B0D8               	btfsc	status,0,c
  5447  002536  D004               	goto	l410
  5448  002538  C01C  F01E         	movff	stoa@p,stoa@l
  5449  00253C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5450  002540                     l410:
  5451  002540  FFFF               	dw	65535	; assembler added errata NOP
  5452                           
  5453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5454  002542  C01E  F01C         	movff	stoa@l,stoa@p
  5455  002546  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5456                           
  5457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5458  00254A  C091  F018         	movff	_width,stoa@w
  5459  00254E  C092  F019         	movff	_width+1,stoa@w+1
  5460                           
  5461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5462  002552  0100               	movlb	0	; () banked
  5463  002554  A195               	btfss	_flags& (0+255),0,b
  5464  002556  D00E               	goto	l3195
  5465  002558  D018               	goto	u2690
  5466  00255A                     l3191:
  5467  00255A  FFFF               	dw	65535	; assembler added errata NOP
  5468                           
  5469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5470  00255C  0E00               	movlw	0
  5471  00255E  6E02               	movwf	fputc@c+1,c
  5472  002560  0E20               	movlw	32
  5473  002562  6E01               	movwf	fputc@c,c
  5474  002564  C00A  F003         	movff	stoa@fp,fputc@fp
  5475  002568  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5476  00256C  ECD6  F014         	call	_fputc	;wreg free
  5477                           
  5478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5479  002570  4A1E               	infsnz	stoa@l,f,c
  5480  002572  2A1F               	incf	stoa@l+1,f,c
  5481  002574                     l3195:
  5482  002574  FFFF               	dw	65535	; assembler added errata NOP
  5483                           
  5484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5485  002576  5018               	movf	stoa@w,w,c
  5486  002578  5C1E               	subwf	stoa@l,w,c
  5487  00257A  501F               	movf	stoa@l+1,w,c
  5488  00257C  0A80               	xorlw	128
  5489  00257E  6E0E               	movwf	??_stoa& (0+255),c
  5490  002580  5019               	movf	stoa@w+1,w,c
  5491  002582  0A80               	xorlw	128
  5492  002584  580E               	subwfb	??_stoa& (0+255),w,c
  5493  002586  A0D8               	btfss	status,0,c
  5494  002588  D7E8               	goto	l3191
  5495  00258A                     u2690:
  5496  00258A  FFFF               	dw	65535	; assembler added errata NOP
  5497                           
  5498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5499  00258C  0E00               	movlw	0
  5500  00258E  6E17               	movwf	stoa@i+1,c
  5501  002590  0E00               	movlw	0
  5502  002592  6E16               	movwf	stoa@i,c
  5503                           
  5504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5505  002594  D014               	goto	l3205
  5506  002596                     l3199:
  5507  002596  FFFF               	dw	65535	; assembler added errata NOP
  5508                           
  5509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5510  002598  C01A  FFD9         	movff	stoa@cp,fsr2l
  5511  00259C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5512  0025A0  50DF               	movf	indf2,w,c
  5513  0025A2  6E0E               	movwf	??_stoa& (0+255),c
  5514  0025A4  500E               	movf	??_stoa,w,c
  5515  0025A6  6E01               	movwf	fputc@c,c
  5516  0025A8  6A02               	clrf	fputc@c+1,c
  5517  0025AA  C00A  F003         	movff	stoa@fp,fputc@fp
  5518  0025AE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5519  0025B2  ECD6  F014         	call	_fputc	;wreg free
  5520                           
  5521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5522  0025B6  4A1A               	infsnz	stoa@cp,f,c
  5523  0025B8  2A1B               	incf	stoa@cp+1,f,c
  5524                           
  5525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5526  0025BA  4A16               	infsnz	stoa@i,f,c
  5527  0025BC  2A17               	incf	stoa@i+1,f,c
  5528  0025BE                     l3205:
  5529  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  5530                           
  5531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5532  0025C0  501C               	movf	stoa@p,w,c
  5533  0025C2  5C16               	subwf	stoa@i,w,c
  5534  0025C4  5017               	movf	stoa@i+1,w,c
  5535  0025C6  0A80               	xorlw	128
  5536  0025C8  6E0E               	movwf	??_stoa& (0+255),c
  5537  0025CA  501D               	movf	stoa@p+1,w,c
  5538  0025CC  0A80               	xorlw	128
  5539  0025CE  580E               	subwfb	??_stoa& (0+255),w,c
  5540  0025D0  A0D8               	btfss	status,0,c
  5541  0025D2  D7E1               	goto	l3199
  5542                           
  5543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5544  0025D4  0100               	movlb	0	; () banked
  5545  0025D6  B195               	btfsc	_flags& (0+255),0,b
  5546  0025D8  D00E               	goto	l3213
  5547  0025DA  D018               	goto	u2720
  5548  0025DC                     l3209:
  5549  0025DC  FFFF               	dw	65535	; assembler added errata NOP
  5550                           
  5551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5552  0025DE  0E00               	movlw	0
  5553  0025E0  6E02               	movwf	fputc@c+1,c
  5554  0025E2  0E20               	movlw	32
  5555  0025E4  6E01               	movwf	fputc@c,c
  5556  0025E6  C00A  F003         	movff	stoa@fp,fputc@fp
  5557  0025EA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5558  0025EE  ECD6  F014         	call	_fputc	;wreg free
  5559                           
  5560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5561  0025F2  4A1E               	infsnz	stoa@l,f,c
  5562  0025F4  2A1F               	incf	stoa@l+1,f,c
  5563  0025F6                     l3213:
  5564  0025F6  FFFF               	dw	65535	; assembler added errata NOP
  5565                           
  5566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5567  0025F8  5018               	movf	stoa@w,w,c
  5568  0025FA  5C1E               	subwf	stoa@l,w,c
  5569  0025FC  501F               	movf	stoa@l+1,w,c
  5570  0025FE  0A80               	xorlw	128
  5571  002600  6E0E               	movwf	??_stoa& (0+255),c
  5572  002602  5019               	movf	stoa@w+1,w,c
  5573  002604  0A80               	xorlw	128
  5574  002606  580E               	subwfb	??_stoa& (0+255),w,c
  5575  002608  A0D8               	btfss	status,0,c
  5576  00260A  D7E8               	goto	l3209
  5577  00260C                     u2720:
  5578  00260C  FFFF               	dw	65535	; assembler added errata NOP
  5579                           
  5580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5581                           
  5582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5583  00260E  C01E  F00A         	movff	stoa@l,?_stoa
  5584  002612  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5585  002616  0012               	return		;funcret
  5586  002618  FFFF               	dw	65535	; errata NOP
  5587  00261A                     __end_of_stoa:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function _otoa *****************
  5591 ;; Defined at:
  5592 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5595 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5596 ;;  d               8   29[COMRAM] unsigned long long 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  n               8   51[COMRAM] unsigned long long 
  5599 ;;  i               2   59[COMRAM] int 
  5600 ;;  w               2   49[COMRAM] int 
  5601 ;;  t               2   47[COMRAM] int 
  5602 ;;  p               2   45[COMRAM] int 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  2   27[COMRAM] int 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:        10       0       0       0       0       0       0
  5613 ;;      Locals:        16       0       0       0       0       0       0
  5614 ;;      Temps:          8       0       0       0       0       0       0
  5615 ;;      Totals:        34       0       0       0       0       0       0
  5616 ;;Total ram usage:       34 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    6
  5619 ;; This function calls:
  5620 ;;		_pad
  5621 ;; This function is called by:
  5622 ;;		_vfpfcnvrt
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text18
  5627  00207A                     __ptext18:
  5628                           	opt callstack 0
  5629  00207A                     _otoa:
  5630                           	opt callstack 0
  5631  00207A  FFFF               	dw	65535	; assembler added errata NOP
  5632                           
  5633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5634                           
  5635                           ;incstack = 0
  5636  00207C  0100               	movlb	0	; () banked
  5637  00207E  AF94               	btfss	(_prec+1)& (0+255),7,b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5641  002080  9395               	bcf	_flags& (0+255),1,b
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5645  002082  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5646  002084  D005               	goto	u2550
  5647  002086  5194               	movf	(_prec+1)& (0+255),w,b
  5648  002088  E109               	bnz	l390
  5649  00208A  0593               	decf	_prec& (0+255),w,b
  5650  00208C  B0D8               	btfsc	status,0,c
  5651  00208E  D006               	goto	l390
  5652  002090                     u2550:
  5653  002090  FFFF               	dw	65535	; assembler added errata NOP
  5654                           
  5655                           ; BSR set to: 0
  5656  002092  0E00               	movlw	0
  5657  002094  6E2F               	movwf	otoa@p+1,c
  5658  002096  0E01               	movlw	1
  5659  002098  6E2E               	movwf	otoa@p,c
  5660  00209A  D005               	goto	l392
  5661  00209C                     l390:
  5662  00209C  FFFF               	dw	65535	; assembler added errata NOP
  5663                           
  5664                           ; BSR set to: 0
  5665  00209E  C093  F02E         	movff	_prec,otoa@p
  5666  0020A2  C094  F02F         	movff	_prec+1,otoa@p+1
  5667  0020A6                     l392:
  5668  0020A6  FFFF               	dw	65535	; assembler added errata NOP
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5672  0020A8  C091  F032         	movff	_width,otoa@w
  5673  0020AC  C092  F033         	movff	_width+1,otoa@w+1
  5674                           
  5675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5676  0020B0  C01E  F034         	movff	otoa@d,otoa@n
  5677  0020B4  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5678  0020B8  C020  F036         	movff	otoa@d+2,otoa@n+2
  5679  0020BC  C021  F037         	movff	otoa@d+3,otoa@n+3
  5680  0020C0  C022  F038         	movff	otoa@d+4,otoa@n+4
  5681  0020C4  C023  F039         	movff	otoa@d+5,otoa@n+5
  5682  0020C8  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5683  0020CC  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5687  0020D0  0E00               	movlw	0
  5688  0020D2  6E3D               	movwf	otoa@i+1,c
  5689  0020D4  0E1F               	movlw	31
  5690  0020D6  6E3C               	movwf	otoa@i,c
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5694  0020D8  0E00               	movlw	0
  5695  0020DA  6FB9               	movwf	(_dbuf+31)& (0+255),b
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5699  0020DC  0E00               	movlw	0
  5700  0020DE  6E31               	movwf	otoa@t+1,c
  5701  0020E0  0E00               	movlw	0
  5702  0020E2  6E30               	movwf	otoa@t,c
  5703                           
  5704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5705  0020E4  D046               	goto	l3151
  5706  0020E6                     l3139:
  5707  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  5708                           
  5709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5710  0020E8  063C               	decf	otoa@i,f,c
  5711  0020EA  A0D8               	btfss	status,0,c
  5712  0020EC  063D               	decf	otoa@i+1,f,c
  5713                           
  5714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5715  0020EE  0E07               	movlw	7
  5716  0020F0  1434               	andwf	otoa@n,w,c
  5717  0020F2  6E30               	movwf	otoa@t,c
  5718  0020F4  6A31               	clrf	otoa@t+1,c
  5719                           
  5720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5721  0020F6  0E9A               	movlw	low _dbuf
  5722  0020F8  243C               	addwf	otoa@i,w,c
  5723  0020FA  6ED9               	movwf	fsr2l,c
  5724  0020FC  0E00               	movlw	high _dbuf
  5725  0020FE  203D               	addwfc	otoa@i+1,w,c
  5726  002100  6EDA               	movwf	fsr2h,c
  5727  002102  5030               	movf	otoa@t,w,c
  5728  002104  0F30               	addlw	48
  5729  002106  6EDF               	movwf	indf2,c
  5730                           
  5731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5732  002108  062E               	decf	otoa@p,f,c
  5733  00210A  A0D8               	btfss	status,0,c
  5734  00210C  062F               	decf	otoa@p+1,f,c
  5735                           
  5736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5737  00210E  0632               	decf	otoa@w,f,c
  5738  002110  A0D8               	btfss	status,0,c
  5739  002112  0633               	decf	otoa@w+1,f,c
  5740                           
  5741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5742  002114  C034  F026         	movff	otoa@n,??_otoa
  5743  002118  C035  F027         	movff	otoa@n+1,??_otoa+1
  5744  00211C  C036  F028         	movff	otoa@n+2,??_otoa+2
  5745  002120  C037  F029         	movff	otoa@n+3,??_otoa+3
  5746  002124  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5747  002128  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5748  00212C  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5749  002130  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5750  002134  0E04               	movlw	4
  5751  002136  D00A               	goto	u2560
  5752  002138                     u2565:
  5753  002138  FFFF               	dw	65535	; assembler added errata NOP
  5754  00213A  90D8               	bcf	status,0,c
  5755  00213C  322D               	rrcf	??_otoa+7,f,c
  5756  00213E  322C               	rrcf	??_otoa+6,f,c
  5757  002140  322B               	rrcf	??_otoa+5,f,c
  5758  002142  322A               	rrcf	??_otoa+4,f,c
  5759  002144  3229               	rrcf	??_otoa+3,f,c
  5760  002146  3228               	rrcf	??_otoa+2,f,c
  5761  002148  3227               	rrcf	??_otoa+1,f,c
  5762  00214A  3226               	rrcf	??_otoa,f,c
  5763  00214C                     u2560:
  5764  00214C  FFFF               	dw	65535	; assembler added errata NOP
  5765  00214E  2EE8               	decfsz	wreg,f,c
  5766  002150  D7F3               	goto	u2565
  5767  002152  C026  F034         	movff	??_otoa,otoa@n
  5768  002156  C027  F035         	movff	??_otoa+1,otoa@n+1
  5769  00215A  C028  F036         	movff	??_otoa+2,otoa@n+2
  5770  00215E  C029  F037         	movff	??_otoa+3,otoa@n+3
  5771  002162  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5772  002166  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5773  00216A  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5774  00216E  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5775  002172                     l3151:
  5776  002172  FFFF               	dw	65535	; assembler added errata NOP
  5777                           
  5778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5779  002174  BE3D               	btfsc	otoa@i+1,7,c
  5780  002176  D021               	goto	u2610
  5781  002178  503D               	movf	otoa@i+1,w,c
  5782  00217A  E103               	bnz	u2570
  5783  00217C  043C               	decf	otoa@i,w,c
  5784  00217E  A0D8               	btfss	status,0,c
  5785  002180  D01C               	goto	u2610
  5786  002182                     u2570:
  5787  002182  5034               	movf	otoa@n,w,c
  5788  002184  1035               	iorwf	otoa@n+1,w,c
  5789  002186  1036               	iorwf	otoa@n+2,w,c
  5790  002188  1037               	iorwf	otoa@n+3,w,c
  5791  00218A  1038               	iorwf	otoa@n+4,w,c
  5792  00218C  1039               	iorwf	otoa@n+5,w,c
  5793  00218E  103A               	iorwf	otoa@n+6,w,c
  5794  002190  103B               	iorwf	otoa@n+7,w,c
  5795  002192  A4D8               	btfss	status,2,c
  5796  002194  D7A8               	goto	l3139
  5797  002196  BE2F               	btfsc	otoa@p+1,7,c
  5798  002198  D005               	goto	u2590
  5799  00219A  502F               	movf	otoa@p+1,w,c
  5800  00219C  E1A4               	bnz	l3139
  5801  00219E  042E               	decf	otoa@p,w,c
  5802  0021A0  B0D8               	btfsc	status,0,c
  5803  0021A2  D7A1               	goto	l3139
  5804  0021A4                     u2590:
  5805  0021A4  FFFF               	dw	65535	; assembler added errata NOP
  5806  0021A6  BE33               	btfsc	otoa@w+1,7,c
  5807  0021A8  D008               	goto	u2610
  5808  0021AA  5033               	movf	otoa@w+1,w,c
  5809  0021AC  E103               	bnz	u2600
  5810  0021AE  0432               	decf	otoa@w,w,c
  5811  0021B0  A0D8               	btfss	status,0,c
  5812  0021B2  D003               	goto	u2610
  5813  0021B4                     u2600:
  5814  0021B4  0100               	movlb	0	; () banked
  5815  0021B6  B395               	btfsc	_flags& (0+255),1,b
  5816  0021B8  D796               	goto	l3139
  5817  0021BA                     u2610:
  5818  0021BA  FFFF               	dw	65535	; assembler added errata NOP
  5819                           
  5820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5821  0021BC  0100               	movlb	0	; () banked
  5822  0021BE  A995               	btfss	_flags& (0+255),4,b
  5823  0021C0  D012               	goto	l3169
  5824                           
  5825                           ; BSR set to: 0
  5826  0021C2  5030               	movf	otoa@t,w,c
  5827  0021C4  1031               	iorwf	otoa@t+1,w,c
  5828  0021C6  B4D8               	btfsc	status,2,c
  5829  0021C8  D00E               	goto	l3169
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5833  0021CA  063C               	decf	otoa@i,f,c
  5834  0021CC  A0D8               	btfss	status,0,c
  5835  0021CE  063D               	decf	otoa@i+1,f,c
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5839  0021D0  0E9A               	movlw	low _dbuf
  5840  0021D2  243C               	addwf	otoa@i,w,c
  5841  0021D4  6ED9               	movwf	fsr2l,c
  5842  0021D6  0E00               	movlw	high _dbuf
  5843  0021D8  203D               	addwfc	otoa@i+1,w,c
  5844  0021DA  6EDA               	movwf	fsr2h,c
  5845  0021DC  0E30               	movlw	48
  5846  0021DE  6EDF               	movwf	indf2,c
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5850  0021E0  0632               	decf	otoa@w,f,c
  5851  0021E2  A0D8               	btfss	status,0,c
  5852  0021E4  0633               	decf	otoa@w+1,f,c
  5853  0021E6                     l3169:
  5854  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5858  0021E8  C01C  F011         	movff	otoa@fp,pad@fp
  5859  0021EC  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5860  0021F0  0E9A               	movlw	low _dbuf
  5861  0021F2  243C               	addwf	otoa@i,w,c
  5862  0021F4  6E13               	movwf	pad@buf,c
  5863  0021F6  0E00               	movlw	high _dbuf
  5864  0021F8  203D               	addwfc	otoa@i+1,w,c
  5865  0021FA  6E14               	movwf	pad@buf+1,c
  5866  0021FC  C032  F015         	movff	otoa@w,pad@p
  5867  002200  C033  F016         	movff	otoa@w+1,pad@p+1
  5868  002204  EC2C  F015         	call	_pad	;wreg free
  5869  002208  C011  F01C         	movff	?_pad,?_otoa
  5870  00220C  C012  F01D         	movff	?_pad+1,?_otoa+1
  5871  002210  0012               	return		;funcret
  5872  002212  FFFF               	dw	65535	; errata NOP
  5873  002214                     __end_of_otoa:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function _dtoa *****************
  5877 ;; Defined at:
  5878 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5881 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5882 ;;  d               8   29[COMRAM] long long 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  n               8   53[COMRAM] long long 
  5885 ;;  i               2   61[COMRAM] int 
  5886 ;;  s               2   51[COMRAM] int 
  5887 ;;  w               2   49[COMRAM] int 
  5888 ;;  p               2   47[COMRAM] int 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2   27[COMRAM] int 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5898 ;;      Params:        10       0       0       0       0       0       0
  5899 ;;      Locals:        18       0       0       0       0       0       0
  5900 ;;      Temps:          8       0       0       0       0       0       0
  5901 ;;      Totals:        36       0       0       0       0       0       0
  5902 ;;Total ram usage:       36 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    6
  5905 ;; This function calls:
  5906 ;;		___aodiv
  5907 ;;		___aomod
  5908 ;;		_abs
  5909 ;;		_pad
  5910 ;; This function is called by:
  5911 ;;		_vfpfcnvrt
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text19
  5916  001848                     __ptext19:
  5917                           	opt callstack 0
  5918  001848                     _dtoa:
  5919                           	opt callstack 0
  5920  001848  FFFF               	dw	65535	; assembler added errata NOP
  5921                           
  5922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5923                           
  5924                           ;incstack = 0
  5925  00184A  C01E  F036         	movff	dtoa@d,dtoa@n
  5926  00184E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5927  001852  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5928  001856  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5929  00185A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5930  00185E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5931  001862  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5932  001866  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5933                           
  5934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5935  00186A  AE3D               	btfss	dtoa@n+7,7,c
  5936  00186C  D002               	goto	u2390
  5937  00186E  0E01               	movlw	1
  5938  001870  D002               	goto	u2400
  5939  001872                     u2390:
  5940  001872  FFFF               	dw	65535	; assembler added errata NOP
  5941  001874  0E00               	movlw	0
  5942  001876                     u2400:
  5943  001876  FFFF               	dw	65535	; assembler added errata NOP
  5944  001878  6E34               	movwf	dtoa@s,c
  5945  00187A  6A35               	clrf	dtoa@s+1,c
  5946                           
  5947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5948  00187C  5034               	movf	dtoa@s,w,c
  5949  00187E  1035               	iorwf	dtoa@s+1,w,c
  5950  001880  B4D8               	btfsc	status,2,c
  5951  001882  D010               	goto	l3069
  5952                           
  5953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5954  001884  1E3D               	comf	dtoa@n+7,f,c
  5955  001886  1E3C               	comf	dtoa@n+6,f,c
  5956  001888  1E3B               	comf	dtoa@n+5,f,c
  5957  00188A  1E3A               	comf	dtoa@n+4,f,c
  5958  00188C  1E39               	comf	dtoa@n+3,f,c
  5959  00188E  1E38               	comf	dtoa@n+2,f,c
  5960  001890  1E37               	comf	dtoa@n+1,f,c
  5961  001892  6C36               	negf	dtoa@n,c
  5962  001894  0E00               	movlw	0
  5963  001896  2237               	addwfc	dtoa@n+1,f,c
  5964  001898  2238               	addwfc	dtoa@n+2,f,c
  5965  00189A  2239               	addwfc	dtoa@n+3,f,c
  5966  00189C  223A               	addwfc	dtoa@n+4,f,c
  5967  00189E  223B               	addwfc	dtoa@n+5,f,c
  5968  0018A0  223C               	addwfc	dtoa@n+6,f,c
  5969  0018A2  223D               	addwfc	dtoa@n+7,f,c
  5970  0018A4                     l3069:
  5971  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  5972                           
  5973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5974  0018A6  0100               	movlb	0	; () banked
  5975  0018A8  AF94               	btfss	(_prec+1)& (0+255),7,b
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5979  0018AA  9395               	bcf	_flags& (0+255),1,b
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5983  0018AC  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5984  0018AE  D005               	goto	u2430
  5985  0018B0  5194               	movf	(_prec+1)& (0+255),w,b
  5986  0018B2  E109               	bnz	l365
  5987  0018B4  0593               	decf	_prec& (0+255),w,b
  5988  0018B6  B0D8               	btfsc	status,0,c
  5989  0018B8  D006               	goto	l365
  5990  0018BA                     u2430:
  5991  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  5992                           
  5993                           ; BSR set to: 0
  5994  0018BC  0E00               	movlw	0
  5995  0018BE  6E31               	movwf	dtoa@p+1,c
  5996  0018C0  0E01               	movlw	1
  5997  0018C2  6E30               	movwf	dtoa@p,c
  5998  0018C4  D005               	goto	l367
  5999  0018C6                     l365:
  6000  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  6001                           
  6002                           ; BSR set to: 0
  6003  0018C8  C093  F030         	movff	_prec,dtoa@p
  6004  0018CC  C094  F031         	movff	_prec+1,dtoa@p+1
  6005  0018D0                     l367:
  6006  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6010  0018D2  C091  F032         	movff	_width,dtoa@w
  6011  0018D6  C092  F033         	movff	_width+1,dtoa@w+1
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6015  0018DA  5034               	movf	dtoa@s,w,c
  6016  0018DC  1035               	iorwf	dtoa@s+1,w,c
  6017  0018DE  A4D8               	btfss	status,2,c
  6018  0018E0  D002               	goto	u2450
  6019                           
  6020                           ; BSR set to: 0
  6021  0018E2  A595               	btfss	_flags& (0+255),2,b
  6022  0018E4  D004               	goto	l3083
  6023  0018E6                     u2450:
  6024  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6028  0018E8  0632               	decf	dtoa@w,f,c
  6029  0018EA  A0D8               	btfss	status,0,c
  6030  0018EC  0633               	decf	dtoa@w+1,f,c
  6031  0018EE                     l3083:
  6032  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6036  0018F0  0E00               	movlw	0
  6037  0018F2  6E3F               	movwf	dtoa@i+1,c
  6038  0018F4  0E1F               	movlw	31
  6039  0018F6  6E3E               	movwf	dtoa@i,c
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6043  0018F8  0E00               	movlw	0
  6044  0018FA  6FB9               	movwf	(_dbuf+31)& (0+255),b
  6045                           
  6046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6047  0018FC  D07D               	goto	l3097
  6048  0018FE                     l3087:
  6049  0018FE  FFFF               	dw	65535	; assembler added errata NOP
  6050                           
  6051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6052  001900  063E               	decf	dtoa@i,f,c
  6053  001902  A0D8               	btfss	status,0,c
  6054  001904  063F               	decf	dtoa@i+1,f,c
  6055                           
  6056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6057  001906  0E9A               	movlw	low _dbuf
  6058  001908  243E               	addwf	dtoa@i,w,c
  6059  00190A  6ED9               	movwf	fsr2l,c
  6060  00190C  0E00               	movlw	high _dbuf
  6061  00190E  203F               	addwfc	dtoa@i+1,w,c
  6062  001910  6EDA               	movwf	fsr2h,c
  6063  001912  C036  F001         	movff	dtoa@n,___aomod@dividend
  6064  001916  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6065  00191A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6066  00191E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6067  001922  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6068  001926  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6069  00192A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6070  00192E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6071  001932  0E0A               	movlw	10
  6072  001934  6E09               	movwf	___aomod@divisor,c
  6073  001936  0E00               	movlw	0
  6074  001938  6E0A               	movwf	___aomod@divisor+1,c
  6075  00193A  0E00               	movlw	0
  6076  00193C  6E0B               	movwf	___aomod@divisor+2,c
  6077  00193E  0E00               	movlw	0
  6078  001940  6E0C               	movwf	___aomod@divisor+3,c
  6079  001942  0E00               	movlw	0
  6080  001944  6E0D               	movwf	___aomod@divisor+4,c
  6081  001946  0E00               	movlw	0
  6082  001948  6E0E               	movwf	___aomod@divisor+5,c
  6083  00194A  0E00               	movlw	0
  6084  00194C  6E0F               	movwf	___aomod@divisor+6,c
  6085  00194E  0E00               	movlw	0
  6086  001950  6E10               	movwf	___aomod@divisor+7,c
  6087  001952  EC0D  F013         	call	___aomod	;wreg free
  6088  001956  C001  F026         	movff	?___aomod,??_dtoa
  6089  00195A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6090  00195E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6091  001962  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6092  001966  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6093  00196A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6094  00196E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6095  001972  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6096  001976  C026  F013         	movff	??_dtoa,abs@a
  6097  00197A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6098  00197E  ECA6  F017         	call	_abs	;wreg free
  6099  001982  5013               	movf	?_abs,w,c
  6100  001984  0F30               	addlw	48
  6101  001986  6EDF               	movwf	indf2,c
  6102                           
  6103                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  6104  001988  0630               	decf	dtoa@p,f,c
  6105  00198A  A0D8               	btfss	status,0,c
  6106  00198C  0631               	decf	dtoa@p+1,f,c
  6107                           
  6108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  6109  00198E  0632               	decf	dtoa@w,f,c
  6110  001990  A0D8               	btfss	status,0,c
  6111  001992  0633               	decf	dtoa@w+1,f,c
  6112                           
  6113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6114  001994  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6115  001998  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6116  00199C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6117  0019A0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6118  0019A4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6119  0019A8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6120  0019AC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6121  0019B0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6122  0019B4  0E0A               	movlw	10
  6123  0019B6  6E09               	movwf	___aodiv@divisor,c
  6124  0019B8  0E00               	movlw	0
  6125  0019BA  6E0A               	movwf	___aodiv@divisor+1,c
  6126  0019BC  0E00               	movlw	0
  6127  0019BE  6E0B               	movwf	___aodiv@divisor+2,c
  6128  0019C0  0E00               	movlw	0
  6129  0019C2  6E0C               	movwf	___aodiv@divisor+3,c
  6130  0019C4  0E00               	movlw	0
  6131  0019C6  6E0D               	movwf	___aodiv@divisor+4,c
  6132  0019C8  0E00               	movlw	0
  6133  0019CA  6E0E               	movwf	___aodiv@divisor+5,c
  6134  0019CC  0E00               	movlw	0
  6135  0019CE  6E0F               	movwf	___aodiv@divisor+6,c
  6136  0019D0  0E00               	movlw	0
  6137  0019D2  6E10               	movwf	___aodiv@divisor+7,c
  6138  0019D4  ECBD  F011         	call	___aodiv	;wreg free
  6139  0019D8  C001  F036         	movff	?___aodiv,dtoa@n
  6140  0019DC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6141  0019E0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6142  0019E4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6143  0019E8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6144  0019EC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6145  0019F0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6146  0019F4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6147  0019F8                     l3097:
  6148  0019F8  FFFF               	dw	65535	; assembler added errata NOP
  6149                           
  6150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6151  0019FA  BE3F               	btfsc	dtoa@i+1,7,c
  6152  0019FC  D021               	goto	u2500
  6153  0019FE  503F               	movf	dtoa@i+1,w,c
  6154  001A00  E103               	bnz	u2460
  6155  001A02  043E               	decf	dtoa@i,w,c
  6156  001A04  A0D8               	btfss	status,0,c
  6157  001A06  D01C               	goto	u2500
  6158  001A08                     u2460:
  6159  001A08  5036               	movf	dtoa@n,w,c
  6160  001A0A  1037               	iorwf	dtoa@n+1,w,c
  6161  001A0C  1038               	iorwf	dtoa@n+2,w,c
  6162  001A0E  1039               	iorwf	dtoa@n+3,w,c
  6163  001A10  103A               	iorwf	dtoa@n+4,w,c
  6164  001A12  103B               	iorwf	dtoa@n+5,w,c
  6165  001A14  103C               	iorwf	dtoa@n+6,w,c
  6166  001A16  103D               	iorwf	dtoa@n+7,w,c
  6167  001A18  A4D8               	btfss	status,2,c
  6168  001A1A  D771               	goto	l3087
  6169  001A1C  BE31               	btfsc	dtoa@p+1,7,c
  6170  001A1E  D005               	goto	u2480
  6171  001A20  5031               	movf	dtoa@p+1,w,c
  6172  001A22  E102               	bnz	u2481
  6173  001A24  0430               	decf	dtoa@p,w,c
  6174  001A26  B0D8               	btfsc	status,0,c
  6175  001A28                     u2481:
  6176  001A28  D76A               	goto	l3087
  6177  001A2A                     u2480:
  6178  001A2A  FFFF               	dw	65535	; assembler added errata NOP
  6179  001A2C  BE33               	btfsc	dtoa@w+1,7,c
  6180  001A2E  D008               	goto	u2500
  6181  001A30  5033               	movf	dtoa@w+1,w,c
  6182  001A32  E103               	bnz	u2490
  6183  001A34  0432               	decf	dtoa@w,w,c
  6184  001A36  A0D8               	btfss	status,0,c
  6185  001A38  D003               	goto	u2500
  6186  001A3A                     u2490:
  6187  001A3A  0100               	movlb	0	; () banked
  6188  001A3C  B395               	btfsc	_flags& (0+255),1,b
  6189  001A3E  D75F               	goto	l3087
  6190  001A40                     u2500:
  6191  001A40  FFFF               	dw	65535	; assembler added errata NOP
  6192                           
  6193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6194  001A42  5034               	movf	dtoa@s,w,c
  6195  001A44  1035               	iorwf	dtoa@s+1,w,c
  6196  001A46  A4D8               	btfss	status,2,c
  6197  001A48  D003               	goto	u2520
  6198  001A4A  0100               	movlb	0	; () banked
  6199  001A4C  A595               	btfss	_flags& (0+255),2,b
  6200  001A4E  D01A               	goto	l3121
  6201  001A50                     u2520:
  6202  001A50  FFFF               	dw	65535	; assembler added errata NOP
  6203                           
  6204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  6205  001A52  063E               	decf	dtoa@i,f,c
  6206  001A54  A0D8               	btfss	status,0,c
  6207  001A56  063F               	decf	dtoa@i+1,f,c
  6208                           
  6209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6210  001A58  5034               	movf	dtoa@s,w,c
  6211  001A5A  1035               	iorwf	dtoa@s+1,w,c
  6212  001A5C  A4D8               	btfss	status,2,c
  6213  001A5E  D004               	goto	l3117
  6214  001A60  0E00               	movlw	0
  6215  001A62  6E2F               	movwf	_dtoa$1027+1,c
  6216  001A64  0E2B               	movlw	43
  6217  001A66  D004               	goto	L20
  6218  001A68                     l3117:
  6219  001A68  FFFF               	dw	65535	; assembler added errata NOP
  6220  001A6A  0E00               	movlw	0
  6221  001A6C  6E2F               	movwf	_dtoa$1027+1,c
  6222  001A6E  0E2D               	movlw	45
  6223  001A70                     L20:
  6224  001A70  FFFF               	dw	65535	; assembler added errata NOP
  6225  001A72  6E2E               	movwf	_dtoa$1027,c
  6226  001A74  0E9A               	movlw	low _dbuf
  6227  001A76  243E               	addwf	dtoa@i,w,c
  6228  001A78  6ED9               	movwf	fsr2l,c
  6229  001A7A  0E00               	movlw	high _dbuf
  6230  001A7C  203F               	addwfc	dtoa@i+1,w,c
  6231  001A7E  6EDA               	movwf	fsr2h,c
  6232  001A80  C02E  FFDF         	movff	_dtoa$1027,indf2
  6233  001A84                     l3121:
  6234  001A84  FFFF               	dw	65535	; assembler added errata NOP
  6235                           
  6236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6237  001A86  C01C  F011         	movff	dtoa@fp,pad@fp
  6238  001A8A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6239  001A8E  0E9A               	movlw	low _dbuf
  6240  001A90  243E               	addwf	dtoa@i,w,c
  6241  001A92  6E13               	movwf	pad@buf,c
  6242  001A94  0E00               	movlw	high _dbuf
  6243  001A96  203F               	addwfc	dtoa@i+1,w,c
  6244  001A98  6E14               	movwf	pad@buf+1,c
  6245  001A9A  C032  F015         	movff	dtoa@w,pad@p
  6246  001A9E  C033  F016         	movff	dtoa@w+1,pad@p+1
  6247  001AA2  EC2C  F015         	call	_pad	;wreg free
  6248  001AA6  C011  F01C         	movff	?_pad,?_dtoa
  6249  001AAA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6250  001AAE  0012               	return		;funcret
  6251  001AB0  FFFF               	dw	65535	; errata NOP
  6252  001AB2                     __end_of_dtoa:
  6253                           	opt callstack 0
  6254                           
  6255 ;; *************** function _abs *****************
  6256 ;; Defined at:
  6257 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  a               2   18[COMRAM] int 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2   18[COMRAM] int 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6271 ;;      Params:         2       0       0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0
  6273 ;;      Temps:          2       0       0       0       0       0       0
  6274 ;;      Totals:         4       0       0       0       0       0       0
  6275 ;;Total ram usage:        4 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    2
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_dtoa
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text20
  6286  002F4C                     __ptext20:
  6287                           	opt callstack 0
  6288  002F4C                     _abs:
  6289                           	opt callstack 0
  6290  002F4C  FFFF               	dw	65535	; assembler added errata NOP
  6291                           
  6292                           ;incstack = 0
  6293  002F4E  BE14               	btfsc	abs@a+1,7,c
  6294  002F50  D005               	goto	u2060
  6295  002F52  5014               	movf	abs@a+1,w,c
  6296  002F54  E111               	bnz	l1238
  6297  002F56  0413               	decf	abs@a,w,c
  6298  002F58  B0D8               	btfsc	status,0,c
  6299  002F5A  D00E               	goto	l1238
  6300  002F5C                     u2060:
  6301  002F5C  FFFF               	dw	65535	; assembler added errata NOP
  6302  002F5E  C013  F015         	movff	abs@a,??_abs
  6303  002F62  C014  F016         	movff	abs@a+1,??_abs+1
  6304  002F66  1E15               	comf	??_abs,f,c
  6305  002F68  1E16               	comf	??_abs+1,f,c
  6306  002F6A  4A15               	infsnz	??_abs,f,c
  6307  002F6C  2A16               	incf	??_abs+1,f,c
  6308  002F6E  C015  F013         	movff	??_abs,?_abs
  6309  002F72  C016  F014         	movff	??_abs+1,?_abs+1
  6310  002F76  D005               	goto	l1241
  6311  002F78                     l1238:
  6312  002F78  FFFF               	dw	65535	; assembler added errata NOP
  6313  002F7A  C013  F013         	movff	abs@a,?_abs
  6314  002F7E  C014  F014         	movff	abs@a+1,?_abs+1
  6315  002F82                     l1241:
  6316  002F82  FFFF               	dw	65535	; assembler added errata NOP
  6317  002F84  0012               	return		;funcret
  6318  002F86  FFFF               	dw	65535	; errata NOP
  6319  002F88                     __end_of_abs:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function ___aomod *****************
  6323 ;; Defined at:
  6324 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  dividend        8    0[COMRAM] long long 
  6327 ;;  divisor         8    8[COMRAM] long long 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  sign            1   17[COMRAM] unsigned char 
  6330 ;;  counter         1   16[COMRAM] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  8    0[COMRAM] long long 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6340 ;;      Params:        16       0       0       0       0       0       0
  6341 ;;      Locals:         2       0       0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0
  6343 ;;      Totals:        18       0       0       0       0       0       0
  6344 ;;Total ram usage:       18 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    2
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_dtoa
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text21
  6355  00261A                     __ptext21:
  6356                           	opt callstack 0
  6357  00261A                     ___aomod:
  6358                           	opt callstack 0
  6359  00261A  FFFF               	dw	65535	; assembler added errata NOP
  6360                           
  6361                           ;incstack = 0
  6362  00261C  0E00               	movlw	0
  6363  00261E  6E12               	movwf	___aomod@sign,c
  6364  002620  AE08               	btfss	___aomod@dividend+7,7,c
  6365  002622  D012               	goto	l2971
  6366  002624  1E08               	comf	___aomod@dividend+7,f,c
  6367  002626  1E07               	comf	___aomod@dividend+6,f,c
  6368  002628  1E06               	comf	___aomod@dividend+5,f,c
  6369  00262A  1E05               	comf	___aomod@dividend+4,f,c
  6370  00262C  1E04               	comf	___aomod@dividend+3,f,c
  6371  00262E  1E03               	comf	___aomod@dividend+2,f,c
  6372  002630  1E02               	comf	___aomod@dividend+1,f,c
  6373  002632  6C01               	negf	___aomod@dividend,c
  6374  002634  0E00               	movlw	0
  6375  002636  2202               	addwfc	___aomod@dividend+1,f,c
  6376  002638  2203               	addwfc	___aomod@dividend+2,f,c
  6377  00263A  2204               	addwfc	___aomod@dividend+3,f,c
  6378  00263C  2205               	addwfc	___aomod@dividend+4,f,c
  6379  00263E  2206               	addwfc	___aomod@dividend+5,f,c
  6380  002640  2207               	addwfc	___aomod@dividend+6,f,c
  6381  002642  2208               	addwfc	___aomod@dividend+7,f,c
  6382  002644  0E01               	movlw	1
  6383  002646  6E12               	movwf	___aomod@sign,c
  6384  002648                     l2971:
  6385  002648  FFFF               	dw	65535	; assembler added errata NOP
  6386  00264A  AE10               	btfss	___aomod@divisor+7,7,c
  6387  00264C  D010               	goto	l2975
  6388  00264E  1E10               	comf	___aomod@divisor+7,f,c
  6389  002650  1E0F               	comf	___aomod@divisor+6,f,c
  6390  002652  1E0E               	comf	___aomod@divisor+5,f,c
  6391  002654  1E0D               	comf	___aomod@divisor+4,f,c
  6392  002656  1E0C               	comf	___aomod@divisor+3,f,c
  6393  002658  1E0B               	comf	___aomod@divisor+2,f,c
  6394  00265A  1E0A               	comf	___aomod@divisor+1,f,c
  6395  00265C  6C09               	negf	___aomod@divisor,c
  6396  00265E  0E00               	movlw	0
  6397  002660  220A               	addwfc	___aomod@divisor+1,f,c
  6398  002662  220B               	addwfc	___aomod@divisor+2,f,c
  6399  002664  220C               	addwfc	___aomod@divisor+3,f,c
  6400  002666  220D               	addwfc	___aomod@divisor+4,f,c
  6401  002668  220E               	addwfc	___aomod@divisor+5,f,c
  6402  00266A  220F               	addwfc	___aomod@divisor+6,f,c
  6403  00266C  2210               	addwfc	___aomod@divisor+7,f,c
  6404  00266E                     l2975:
  6405  00266E  FFFF               	dw	65535	; assembler added errata NOP
  6406  002670  5009               	movf	___aomod@divisor,w,c
  6407  002672  100A               	iorwf	___aomod@divisor+1,w,c
  6408  002674  100B               	iorwf	___aomod@divisor+2,w,c
  6409  002676  100C               	iorwf	___aomod@divisor+3,w,c
  6410  002678  100D               	iorwf	___aomod@divisor+4,w,c
  6411  00267A  100E               	iorwf	___aomod@divisor+5,w,c
  6412  00267C  100F               	iorwf	___aomod@divisor+6,w,c
  6413  00267E  1010               	iorwf	___aomod@divisor+7,w,c
  6414  002680  B4D8               	btfsc	status,2,c
  6415  002682  D040               	goto	l2991
  6416  002684  0E01               	movlw	1
  6417  002686  6E11               	movwf	___aomod@counter,c
  6418  002688  D00B               	goto	l2981
  6419  00268A                     l2979:
  6420  00268A  FFFF               	dw	65535	; assembler added errata NOP
  6421  00268C  90D8               	bcf	status,0,c
  6422  00268E  3609               	rlcf	___aomod@divisor,f,c
  6423  002690  360A               	rlcf	___aomod@divisor+1,f,c
  6424  002692  360B               	rlcf	___aomod@divisor+2,f,c
  6425  002694  360C               	rlcf	___aomod@divisor+3,f,c
  6426  002696  360D               	rlcf	___aomod@divisor+4,f,c
  6427  002698  360E               	rlcf	___aomod@divisor+5,f,c
  6428  00269A  360F               	rlcf	___aomod@divisor+6,f,c
  6429  00269C  3610               	rlcf	___aomod@divisor+7,f,c
  6430  00269E  2A11               	incf	___aomod@counter,f,c
  6431  0026A0                     l2981:
  6432  0026A0  FFFF               	dw	65535	; assembler added errata NOP
  6433  0026A2  AE10               	btfss	___aomod@divisor+7,7,c
  6434  0026A4  D7F2               	goto	l2979
  6435  0026A6                     u2260:
  6436  0026A6  FFFF               	dw	65535	; assembler added errata NOP
  6437  0026A8  5009               	movf	___aomod@divisor,w,c
  6438  0026AA  5C01               	subwf	___aomod@dividend,w,c
  6439  0026AC  500A               	movf	___aomod@divisor+1,w,c
  6440  0026AE  5802               	subwfb	___aomod@dividend+1,w,c
  6441  0026B0  500B               	movf	___aomod@divisor+2,w,c
  6442  0026B2  5803               	subwfb	___aomod@dividend+2,w,c
  6443  0026B4  500C               	movf	___aomod@divisor+3,w,c
  6444  0026B6  5804               	subwfb	___aomod@dividend+3,w,c
  6445  0026B8  500D               	movf	___aomod@divisor+4,w,c
  6446  0026BA  5805               	subwfb	___aomod@dividend+4,w,c
  6447  0026BC  500E               	movf	___aomod@divisor+5,w,c
  6448  0026BE  5806               	subwfb	___aomod@dividend+5,w,c
  6449  0026C0  500F               	movf	___aomod@divisor+6,w,c
  6450  0026C2  5807               	subwfb	___aomod@dividend+6,w,c
  6451  0026C4  5010               	movf	___aomod@divisor+7,w,c
  6452  0026C6  5808               	subwfb	___aomod@dividend+7,w,c
  6453  0026C8  A0D8               	btfss	status,0,c
  6454  0026CA  D010               	goto	l2987
  6455  0026CC  5009               	movf	___aomod@divisor,w,c
  6456  0026CE  5E01               	subwf	___aomod@dividend,f,c
  6457  0026D0  500A               	movf	___aomod@divisor+1,w,c
  6458  0026D2  5A02               	subwfb	___aomod@dividend+1,f,c
  6459  0026D4  500B               	movf	___aomod@divisor+2,w,c
  6460  0026D6  5A03               	subwfb	___aomod@dividend+2,f,c
  6461  0026D8  500C               	movf	___aomod@divisor+3,w,c
  6462  0026DA  5A04               	subwfb	___aomod@dividend+3,f,c
  6463  0026DC  500D               	movf	___aomod@divisor+4,w,c
  6464  0026DE  5A05               	subwfb	___aomod@dividend+4,f,c
  6465  0026E0  500E               	movf	___aomod@divisor+5,w,c
  6466  0026E2  5A06               	subwfb	___aomod@dividend+5,f,c
  6467  0026E4  500F               	movf	___aomod@divisor+6,w,c
  6468  0026E6  5A07               	subwfb	___aomod@dividend+6,f,c
  6469  0026E8  5010               	movf	___aomod@divisor+7,w,c
  6470  0026EA  5A08               	subwfb	___aomod@dividend+7,f,c
  6471  0026EC                     l2987:
  6472  0026EC  FFFF               	dw	65535	; assembler added errata NOP
  6473  0026EE  90D8               	bcf	status,0,c
  6474  0026F0  3210               	rrcf	___aomod@divisor+7,f,c
  6475  0026F2  320F               	rrcf	___aomod@divisor+6,f,c
  6476  0026F4  320E               	rrcf	___aomod@divisor+5,f,c
  6477  0026F6  320D               	rrcf	___aomod@divisor+4,f,c
  6478  0026F8  320C               	rrcf	___aomod@divisor+3,f,c
  6479  0026FA  320B               	rrcf	___aomod@divisor+2,f,c
  6480  0026FC  320A               	rrcf	___aomod@divisor+1,f,c
  6481  0026FE  3209               	rrcf	___aomod@divisor,f,c
  6482  002700  2E11               	decfsz	___aomod@counter,f,c
  6483  002702  D7D1               	goto	u2260
  6484  002704                     l2991:
  6485  002704  FFFF               	dw	65535	; assembler added errata NOP
  6486  002706  5012               	movf	___aomod@sign,w,c
  6487  002708  B4D8               	btfsc	status,2,c
  6488  00270A  D010               	goto	l2995
  6489  00270C  1E08               	comf	___aomod@dividend+7,f,c
  6490  00270E  1E07               	comf	___aomod@dividend+6,f,c
  6491  002710  1E06               	comf	___aomod@dividend+5,f,c
  6492  002712  1E05               	comf	___aomod@dividend+4,f,c
  6493  002714  1E04               	comf	___aomod@dividend+3,f,c
  6494  002716  1E03               	comf	___aomod@dividend+2,f,c
  6495  002718  1E02               	comf	___aomod@dividend+1,f,c
  6496  00271A  6C01               	negf	___aomod@dividend,c
  6497  00271C  0E00               	movlw	0
  6498  00271E  2202               	addwfc	___aomod@dividend+1,f,c
  6499  002720  2203               	addwfc	___aomod@dividend+2,f,c
  6500  002722  2204               	addwfc	___aomod@dividend+3,f,c
  6501  002724  2205               	addwfc	___aomod@dividend+4,f,c
  6502  002726  2206               	addwfc	___aomod@dividend+5,f,c
  6503  002728  2207               	addwfc	___aomod@dividend+6,f,c
  6504  00272A  2208               	addwfc	___aomod@dividend+7,f,c
  6505  00272C                     l2995:
  6506  00272C  FFFF               	dw	65535	; assembler added errata NOP
  6507  00272E  C001  F001         	movff	___aomod@dividend,?___aomod
  6508  002732  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6509  002736  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6510  00273A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6511  00273E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6512  002742  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6513  002746  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6514  00274A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6515  00274E  0012               	return		;funcret
  6516  002750  FFFF               	dw	65535	; errata NOP
  6517  002752                     __end_of___aomod:
  6518                           	opt callstack 0
  6519                           
  6520 ;; *************** function ___aodiv *****************
  6521 ;; Defined at:
  6522 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  dividend        8    0[COMRAM] long long 
  6525 ;;  divisor         8    8[COMRAM] long long 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  quotient        8   18[COMRAM] long long 
  6528 ;;  sign            1   17[COMRAM] unsigned char 
  6529 ;;  counter         1   16[COMRAM] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  8    0[COMRAM] long long 
  6532 ;; Registers used:
  6533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6539 ;;      Params:        16       0       0       0       0       0       0
  6540 ;;      Locals:        10       0       0       0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0
  6542 ;;      Totals:        26       0       0       0       0       0       0
  6543 ;;Total ram usage:       26 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    2
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_dtoa
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text22
  6554  00237A                     __ptext22:
  6555                           	opt callstack 0
  6556  00237A                     ___aodiv:
  6557                           	opt callstack 0
  6558  00237A  FFFF               	dw	65535	; assembler added errata NOP
  6559                           
  6560                           ;incstack = 0
  6561  00237C  0E00               	movlw	0
  6562  00237E  6E12               	movwf	___aodiv@sign,c
  6563  002380  AE10               	btfss	___aodiv@divisor+7,7,c
  6564  002382  D012               	goto	l2927
  6565  002384  1E10               	comf	___aodiv@divisor+7,f,c
  6566  002386  1E0F               	comf	___aodiv@divisor+6,f,c
  6567  002388  1E0E               	comf	___aodiv@divisor+5,f,c
  6568  00238A  1E0D               	comf	___aodiv@divisor+4,f,c
  6569  00238C  1E0C               	comf	___aodiv@divisor+3,f,c
  6570  00238E  1E0B               	comf	___aodiv@divisor+2,f,c
  6571  002390  1E0A               	comf	___aodiv@divisor+1,f,c
  6572  002392  6C09               	negf	___aodiv@divisor,c
  6573  002394  0E00               	movlw	0
  6574  002396  220A               	addwfc	___aodiv@divisor+1,f,c
  6575  002398  220B               	addwfc	___aodiv@divisor+2,f,c
  6576  00239A  220C               	addwfc	___aodiv@divisor+3,f,c
  6577  00239C  220D               	addwfc	___aodiv@divisor+4,f,c
  6578  00239E  220E               	addwfc	___aodiv@divisor+5,f,c
  6579  0023A0  220F               	addwfc	___aodiv@divisor+6,f,c
  6580  0023A2  2210               	addwfc	___aodiv@divisor+7,f,c
  6581  0023A4  0E01               	movlw	1
  6582  0023A6  6E12               	movwf	___aodiv@sign,c
  6583  0023A8                     l2927:
  6584  0023A8  FFFF               	dw	65535	; assembler added errata NOP
  6585  0023AA  AE08               	btfss	___aodiv@dividend+7,7,c
  6586  0023AC  D012               	goto	l2933
  6587  0023AE  1E08               	comf	___aodiv@dividend+7,f,c
  6588  0023B0  1E07               	comf	___aodiv@dividend+6,f,c
  6589  0023B2  1E06               	comf	___aodiv@dividend+5,f,c
  6590  0023B4  1E05               	comf	___aodiv@dividend+4,f,c
  6591  0023B6  1E04               	comf	___aodiv@dividend+3,f,c
  6592  0023B8  1E03               	comf	___aodiv@dividend+2,f,c
  6593  0023BA  1E02               	comf	___aodiv@dividend+1,f,c
  6594  0023BC  6C01               	negf	___aodiv@dividend,c
  6595  0023BE  0E00               	movlw	0
  6596  0023C0  2202               	addwfc	___aodiv@dividend+1,f,c
  6597  0023C2  2203               	addwfc	___aodiv@dividend+2,f,c
  6598  0023C4  2204               	addwfc	___aodiv@dividend+3,f,c
  6599  0023C6  2205               	addwfc	___aodiv@dividend+4,f,c
  6600  0023C8  2206               	addwfc	___aodiv@dividend+5,f,c
  6601  0023CA  2207               	addwfc	___aodiv@dividend+6,f,c
  6602  0023CC  2208               	addwfc	___aodiv@dividend+7,f,c
  6603  0023CE  0E01               	movlw	1
  6604  0023D0  1A12               	xorwf	___aodiv@sign,f,c
  6605  0023D2                     l2933:
  6606  0023D2  FFFF               	dw	65535	; assembler added errata NOP
  6607  0023D4  EE20  F013         	lfsr	2,___aodiv@quotient
  6608  0023D8  0E07               	movlw	7
  6609  0023DA                     u2181:
  6610  0023DA  6ADE               	clrf	postinc2,c
  6611  0023DC  06E8               	decf	wreg,f,c
  6612  0023DE  E2FD               	bc	u2181
  6613  0023E0  5009               	movf	___aodiv@divisor,w,c
  6614  0023E2  100A               	iorwf	___aodiv@divisor+1,w,c
  6615  0023E4  100B               	iorwf	___aodiv@divisor+2,w,c
  6616  0023E6  100C               	iorwf	___aodiv@divisor+3,w,c
  6617  0023E8  100D               	iorwf	___aodiv@divisor+4,w,c
  6618  0023EA  100E               	iorwf	___aodiv@divisor+5,w,c
  6619  0023EC  100F               	iorwf	___aodiv@divisor+6,w,c
  6620  0023EE  1010               	iorwf	___aodiv@divisor+7,w,c
  6621  0023F0  B4D8               	btfsc	status,2,c
  6622  0023F2  D04A               	goto	l2955
  6623  0023F4  0E01               	movlw	1
  6624  0023F6  6E11               	movwf	___aodiv@counter,c
  6625  0023F8  D00B               	goto	l2941
  6626  0023FA                     l2939:
  6627  0023FA  FFFF               	dw	65535	; assembler added errata NOP
  6628  0023FC  90D8               	bcf	status,0,c
  6629  0023FE  3609               	rlcf	___aodiv@divisor,f,c
  6630  002400  360A               	rlcf	___aodiv@divisor+1,f,c
  6631  002402  360B               	rlcf	___aodiv@divisor+2,f,c
  6632  002404  360C               	rlcf	___aodiv@divisor+3,f,c
  6633  002406  360D               	rlcf	___aodiv@divisor+4,f,c
  6634  002408  360E               	rlcf	___aodiv@divisor+5,f,c
  6635  00240A  360F               	rlcf	___aodiv@divisor+6,f,c
  6636  00240C  3610               	rlcf	___aodiv@divisor+7,f,c
  6637  00240E  2A11               	incf	___aodiv@counter,f,c
  6638  002410                     l2941:
  6639  002410  FFFF               	dw	65535	; assembler added errata NOP
  6640  002412  AE10               	btfss	___aodiv@divisor+7,7,c
  6641  002414  D7F2               	goto	l2939
  6642  002416                     u2200:
  6643  002416  FFFF               	dw	65535	; assembler added errata NOP
  6644  002418  90D8               	bcf	status,0,c
  6645  00241A  3613               	rlcf	___aodiv@quotient,f,c
  6646  00241C  3614               	rlcf	___aodiv@quotient+1,f,c
  6647  00241E  3615               	rlcf	___aodiv@quotient+2,f,c
  6648  002420  3616               	rlcf	___aodiv@quotient+3,f,c
  6649  002422  3617               	rlcf	___aodiv@quotient+4,f,c
  6650  002424  3618               	rlcf	___aodiv@quotient+5,f,c
  6651  002426  3619               	rlcf	___aodiv@quotient+6,f,c
  6652  002428  361A               	rlcf	___aodiv@quotient+7,f,c
  6653  00242A  5009               	movf	___aodiv@divisor,w,c
  6654  00242C  5C01               	subwf	___aodiv@dividend,w,c
  6655  00242E  500A               	movf	___aodiv@divisor+1,w,c
  6656  002430  5802               	subwfb	___aodiv@dividend+1,w,c
  6657  002432  500B               	movf	___aodiv@divisor+2,w,c
  6658  002434  5803               	subwfb	___aodiv@dividend+2,w,c
  6659  002436  500C               	movf	___aodiv@divisor+3,w,c
  6660  002438  5804               	subwfb	___aodiv@dividend+3,w,c
  6661  00243A  500D               	movf	___aodiv@divisor+4,w,c
  6662  00243C  5805               	subwfb	___aodiv@dividend+4,w,c
  6663  00243E  500E               	movf	___aodiv@divisor+5,w,c
  6664  002440  5806               	subwfb	___aodiv@dividend+5,w,c
  6665  002442  500F               	movf	___aodiv@divisor+6,w,c
  6666  002444  5807               	subwfb	___aodiv@dividend+6,w,c
  6667  002446  5010               	movf	___aodiv@divisor+7,w,c
  6668  002448  5808               	subwfb	___aodiv@dividend+7,w,c
  6669  00244A  A0D8               	btfss	status,0,c
  6670  00244C  D011               	goto	l2951
  6671  00244E  5009               	movf	___aodiv@divisor,w,c
  6672  002450  5E01               	subwf	___aodiv@dividend,f,c
  6673  002452  500A               	movf	___aodiv@divisor+1,w,c
  6674  002454  5A02               	subwfb	___aodiv@dividend+1,f,c
  6675  002456  500B               	movf	___aodiv@divisor+2,w,c
  6676  002458  5A03               	subwfb	___aodiv@dividend+2,f,c
  6677  00245A  500C               	movf	___aodiv@divisor+3,w,c
  6678  00245C  5A04               	subwfb	___aodiv@dividend+3,f,c
  6679  00245E  500D               	movf	___aodiv@divisor+4,w,c
  6680  002460  5A05               	subwfb	___aodiv@dividend+4,f,c
  6681  002462  500E               	movf	___aodiv@divisor+5,w,c
  6682  002464  5A06               	subwfb	___aodiv@dividend+5,f,c
  6683  002466  500F               	movf	___aodiv@divisor+6,w,c
  6684  002468  5A07               	subwfb	___aodiv@dividend+6,f,c
  6685  00246A  5010               	movf	___aodiv@divisor+7,w,c
  6686  00246C  5A08               	subwfb	___aodiv@dividend+7,f,c
  6687  00246E  8013               	bsf	___aodiv@quotient,0,c
  6688  002470                     l2951:
  6689  002470  FFFF               	dw	65535	; assembler added errata NOP
  6690  002472  90D8               	bcf	status,0,c
  6691  002474  3210               	rrcf	___aodiv@divisor+7,f,c
  6692  002476  320F               	rrcf	___aodiv@divisor+6,f,c
  6693  002478  320E               	rrcf	___aodiv@divisor+5,f,c
  6694  00247A  320D               	rrcf	___aodiv@divisor+4,f,c
  6695  00247C  320C               	rrcf	___aodiv@divisor+3,f,c
  6696  00247E  320B               	rrcf	___aodiv@divisor+2,f,c
  6697  002480  320A               	rrcf	___aodiv@divisor+1,f,c
  6698  002482  3209               	rrcf	___aodiv@divisor,f,c
  6699  002484  2E11               	decfsz	___aodiv@counter,f,c
  6700  002486  D7C7               	goto	u2200
  6701  002488                     l2955:
  6702  002488  FFFF               	dw	65535	; assembler added errata NOP
  6703  00248A  5012               	movf	___aodiv@sign,w,c
  6704  00248C  B4D8               	btfsc	status,2,c
  6705  00248E  D010               	goto	l2959
  6706  002490  1E1A               	comf	___aodiv@quotient+7,f,c
  6707  002492  1E19               	comf	___aodiv@quotient+6,f,c
  6708  002494  1E18               	comf	___aodiv@quotient+5,f,c
  6709  002496  1E17               	comf	___aodiv@quotient+4,f,c
  6710  002498  1E16               	comf	___aodiv@quotient+3,f,c
  6711  00249A  1E15               	comf	___aodiv@quotient+2,f,c
  6712  00249C  1E14               	comf	___aodiv@quotient+1,f,c
  6713  00249E  6C13               	negf	___aodiv@quotient,c
  6714  0024A0  0E00               	movlw	0
  6715  0024A2  2214               	addwfc	___aodiv@quotient+1,f,c
  6716  0024A4  2215               	addwfc	___aodiv@quotient+2,f,c
  6717  0024A6  2216               	addwfc	___aodiv@quotient+3,f,c
  6718  0024A8  2217               	addwfc	___aodiv@quotient+4,f,c
  6719  0024AA  2218               	addwfc	___aodiv@quotient+5,f,c
  6720  0024AC  2219               	addwfc	___aodiv@quotient+6,f,c
  6721  0024AE  221A               	addwfc	___aodiv@quotient+7,f,c
  6722  0024B0                     l2959:
  6723  0024B0  FFFF               	dw	65535	; assembler added errata NOP
  6724  0024B2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6725  0024B6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6726  0024BA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6727  0024BE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6728  0024C2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6729  0024C6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6730  0024CA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6731  0024CE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6732  0024D2  0012               	return		;funcret
  6733  0024D4  FFFF               	dw	65535	; errata NOP
  6734  0024D6                     __end_of___aodiv:
  6735                           	opt callstack 0
  6736                           
  6737 ;; *************** function _ctoa *****************
  6738 ;; Defined at:
  6739 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6742 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6743 ;;  c               1   29[COMRAM] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  w               2   30[COMRAM] int 
  6746 ;;  l               2    0        int 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  2   27[COMRAM] int 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6756 ;;      Params:         3       0       0       0       0       0       0
  6757 ;;      Locals:         2       0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0
  6759 ;;      Totals:         5       0       0       0       0       0       0
  6760 ;;Total ram usage:        5 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    6
  6763 ;; This function calls:
  6764 ;;		_pad
  6765 ;; This function is called by:
  6766 ;;		_vfpfcnvrt
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text23
  6771  002DB0                     __ptext23:
  6772                           	opt callstack 0
  6773  002DB0                     _ctoa:
  6774                           	opt callstack 0
  6775  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  6776                           
  6777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6778                           
  6779                           ;incstack = 0
  6780  002DB2  0100               	movlb	0	; () banked
  6781  002DB4  5191               	movf	_width& (0+255),w,b
  6782  002DB6  1192               	iorwf	(_width+1)& (0+255),w,b
  6783  002DB8  A4D8               	btfss	status,2,c
  6784  002DBA  D005               	goto	l3053
  6785                           
  6786                           ; BSR set to: 0
  6787  002DBC  C091  F01F         	movff	_width,ctoa@w
  6788  002DC0  C092  F020         	movff	_width+1,ctoa@w+1
  6789  002DC4  D007               	goto	l3055
  6790  002DC6                     l3053:
  6791  002DC6  FFFF               	dw	65535	; assembler added errata NOP
  6792                           
  6793                           ; BSR set to: 0
  6794  002DC8  0EFF               	movlw	255
  6795  002DCA  2591               	addwf	_width& (0+255),w,b
  6796  002DCC  6E1F               	movwf	ctoa@w,c
  6797  002DCE  0EFF               	movlw	255
  6798  002DD0  2192               	addwfc	(_width+1)& (0+255),w,b
  6799  002DD2  6E20               	movwf	ctoa@w+1,c
  6800  002DD4                     l3055:
  6801  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6805  002DD6  C01E  F09A         	movff	ctoa@c,_dbuf
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6809  002DDA  0E00               	movlw	0
  6810  002DDC  6F9B               	movwf	(_dbuf+1)& (0+255),b
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6814  002DDE  C01C  F011         	movff	ctoa@fp,pad@fp
  6815  002DE2  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6816  002DE6  0E9A               	movlw	low _dbuf
  6817  002DE8  6E13               	movwf	pad@buf,c
  6818  002DEA  0E00               	movlw	high _dbuf
  6819  002DEC  6E14               	movwf	pad@buf+1,c
  6820  002DEE  C01F  F015         	movff	ctoa@w,pad@p
  6821  002DF2  C020  F016         	movff	ctoa@w+1,pad@p+1
  6822  002DF6  EC2C  F015         	call	_pad	;wreg free
  6823  002DFA  C011  F01C         	movff	?_pad,?_ctoa
  6824  002DFE  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6825  002E02  0012               	return		;funcret
  6826  002E04  FFFF               	dw	65535	; errata NOP
  6827  002E06                     __end_of_ctoa:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function _pad *****************
  6831 ;; Defined at:
  6832 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6835 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6836 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6837 ;;		 -> dbuf(32), 
  6838 ;;  p               2   20[COMRAM] int 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  w               2   25[COMRAM] int 
  6841 ;;  i               2   23[COMRAM] int 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  2   16[COMRAM] int 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6851 ;;      Params:         6       0       0       0       0       0       0
  6852 ;;      Locals:         4       0       0       0       0       0       0
  6853 ;;      Temps:          1       0       0       0       0       0       0
  6854 ;;      Totals:        11       0       0       0       0       0       0
  6855 ;;Total ram usage:       11 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    5
  6858 ;; This function calls:
  6859 ;;		_fputc
  6860 ;;		_fputs
  6861 ;;		_strlen
  6862 ;; This function is called by:
  6863 ;;		_ctoa
  6864 ;;		_dtoa
  6865 ;;		_otoa
  6866 ;;		_utoa
  6867 ;;		_xtoa
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text24
  6872  002A58                     __ptext24:
  6873                           	opt callstack 0
  6874  002A58                     _pad:
  6875                           	opt callstack 0
  6876  002A58  FFFF               	dw	65535	; assembler added errata NOP
  6877                           
  6878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6879                           
  6880                           ;incstack = 0
  6881  002A5A  0100               	movlb	0	; () banked
  6882  002A5C  A195               	btfss	_flags& (0+255),0,b
  6883  002A5E  D00A               	goto	l2869
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6887  002A60  C013  F00A         	movff	pad@buf,fputs@s
  6888  002A64  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6889  002A68  C011  F00C         	movff	pad@fp,fputs@fp
  6890  002A6C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6891  002A70  EC49  F017         	call	_fputs	;wreg free
  6892  002A74                     l2869:
  6893  002A74  FFFF               	dw	65535	; assembler added errata NOP
  6894                           
  6895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6896  002A76  BE16               	btfsc	pad@p+1,7,c
  6897  002A78  D005               	goto	l2873
  6898  002A7A  C015  F01A         	movff	pad@p,pad@w
  6899  002A7E  C016  F01B         	movff	pad@p+1,pad@w+1
  6900  002A82  D005               	goto	l347
  6901  002A84                     l2873:
  6902  002A84  FFFF               	dw	65535	; assembler added errata NOP
  6903  002A86  0E00               	movlw	0
  6904  002A88  6E1B               	movwf	pad@w+1,c
  6905  002A8A  0E00               	movlw	0
  6906  002A8C  6E1A               	movwf	pad@w,c
  6907  002A8E                     l347:
  6908  002A8E  FFFF               	dw	65535	; assembler added errata NOP
  6909                           
  6910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6911  002A90  0E00               	movlw	0
  6912  002A92  6E19               	movwf	pad@i+1,c
  6913  002A94  0E00               	movlw	0
  6914  002A96  6E18               	movwf	pad@i,c
  6915                           
  6916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6917  002A98  D00D               	goto	l2879
  6918  002A9A                     l2875:
  6919  002A9A  FFFF               	dw	65535	; assembler added errata NOP
  6920                           
  6921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6922  002A9C  0E00               	movlw	0
  6923  002A9E  6E02               	movwf	fputc@c+1,c
  6924  002AA0  0E20               	movlw	32
  6925  002AA2  6E01               	movwf	fputc@c,c
  6926  002AA4  C011  F003         	movff	pad@fp,fputc@fp
  6927  002AA8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6928  002AAC  ECD6  F014         	call	_fputc	;wreg free
  6929                           
  6930                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6931  002AB0  4A18               	infsnz	pad@i,f,c
  6932  002AB2  2A19               	incf	pad@i+1,f,c
  6933  002AB4                     l2879:
  6934  002AB4  FFFF               	dw	65535	; assembler added errata NOP
  6935                           
  6936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6937  002AB6  501A               	movf	pad@w,w,c
  6938  002AB8  5C18               	subwf	pad@i,w,c
  6939  002ABA  5019               	movf	pad@i+1,w,c
  6940  002ABC  0A80               	xorlw	128
  6941  002ABE  6E17               	movwf	??_pad& (0+255),c
  6942  002AC0  501B               	movf	pad@w+1,w,c
  6943  002AC2  0A80               	xorlw	128
  6944  002AC4  5817               	subwfb	??_pad& (0+255),w,c
  6945  002AC6  A0D8               	btfss	status,0,c
  6946  002AC8  D7E8               	goto	l2875
  6947                           
  6948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6949  002ACA  0100               	movlb	0	; () banked
  6950  002ACC  B195               	btfsc	_flags& (0+255),0,b
  6951  002ACE  D00A               	goto	l2883
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6955  002AD0  C013  F00A         	movff	pad@buf,fputs@s
  6956  002AD4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6957  002AD8  C011  F00C         	movff	pad@fp,fputs@fp
  6958  002ADC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6959  002AE0  EC49  F017         	call	_fputs	;wreg free
  6960  002AE4                     l2883:
  6961  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  6962                           
  6963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6964  002AE6  C013  F001         	movff	pad@buf,strlen@s
  6965  002AEA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6966  002AEE  EC18  F018         	call	_strlen	;wreg free
  6967  002AF2  501A               	movf	pad@w,w,c
  6968  002AF4  2401               	addwf	?_strlen,w,c
  6969  002AF6  6E11               	movwf	?_pad,c
  6970  002AF8  501B               	movf	pad@w+1,w,c
  6971  002AFA  2002               	addwfc	?_strlen+1,w,c
  6972  002AFC  6E12               	movwf	?_pad+1,c
  6973  002AFE  0012               	return		;funcret
  6974  002B00  FFFF               	dw	65535	; errata NOP
  6975  002B02                     __end_of_pad:
  6976                           	opt callstack 0
  6977                           
  6978 ;; *************** function _strlen *****************
  6979 ;; Defined at:
  6980 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6983 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6986 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2    0[COMRAM] unsigned int 
  6989 ;; Registers used:
  6990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6996 ;;      Params:         2       0       0       0       0       0       0
  6997 ;;      Locals:         2       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0
  6999 ;;      Totals:         4       0       0       0       0       0       0
  7000 ;;Total ram usage:        4 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    2
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_pad
  7007 ;;		_stoa
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text25
  7012  003030                     __ptext25:
  7013                           	opt callstack 0
  7014  003030                     _strlen:
  7015                           	opt callstack 0
  7016  003030  FFFF               	dw	65535	; assembler added errata NOP
  7017                           
  7018                           ;incstack = 0
  7019  003032  C001  F003         	movff	strlen@s,strlen@a
  7020  003036  C002  F004         	movff	strlen@s+1,strlen@a+1
  7021  00303A  D003               	goto	l2855
  7022  00303C                     l2853:
  7023  00303C  FFFF               	dw	65535	; assembler added errata NOP
  7024  00303E  4A01               	infsnz	strlen@s,f,c
  7025  003040  2A02               	incf	strlen@s+1,f,c
  7026  003042                     l2855:
  7027  003042  FFFF               	dw	65535	; assembler added errata NOP
  7028  003044  C001  FFD9         	movff	strlen@s,fsr2l
  7029  003048  C002  FFDA         	movff	strlen@s+1,fsr2h
  7030  00304C  50DF               	movf	indf2,w,c
  7031  00304E  A4D8               	btfss	status,2,c
  7032  003050  D7F5               	goto	l2853
  7033  003052  5003               	movf	strlen@a,w,c
  7034  003054  5C01               	subwf	strlen@s,w,c
  7035  003056  6E01               	movwf	?_strlen,c
  7036  003058  5004               	movf	strlen@a+1,w,c
  7037  00305A  5802               	subwfb	strlen@s+1,w,c
  7038  00305C  6E02               	movwf	?_strlen+1,c
  7039  00305E  0012               	return		;funcret
  7040  003060  FFFF               	dw	65535	; errata NOP
  7041  003062                     __end_of_strlen:
  7042                           	opt callstack 0
  7043                           
  7044 ;; *************** function _fputs *****************
  7045 ;; Defined at:
  7046 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7049 ;;		 -> dbuf(32), 
  7050 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7051 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  i               2   14[COMRAM] int 
  7054 ;;  c               1   13[COMRAM] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  2    9[COMRAM] int 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7064 ;;      Params:         4       0       0       0       0       0       0
  7065 ;;      Locals:         3       0       0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0
  7067 ;;      Totals:         7       0       0       0       0       0       0
  7068 ;;Total ram usage:        7 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    4
  7071 ;; This function calls:
  7072 ;;		_fputc
  7073 ;; This function is called by:
  7074 ;;		_pad
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text26
  7079  002E92                     __ptext26:
  7080                           	opt callstack 0
  7081  002E92                     _fputs:
  7082                           	opt callstack 0
  7083  002E92  FFFF               	dw	65535	; assembler added errata NOP
  7084                           
  7085                           ;incstack = 0
  7086  002E94  0E00               	movlw	0
  7087  002E96  6E10               	movwf	fputs@i+1,c
  7088  002E98  0E00               	movlw	0
  7089  002E9A  6E0F               	movwf	fputs@i,c
  7090  002E9C  D00C               	goto	l2849
  7091  002E9E                     l2845:
  7092  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  7093  002EA0  C00E  F001         	movff	fputs@c,fputc@c
  7094  002EA4  6A02               	clrf	fputc@c+1,c
  7095  002EA6  C00C  F003         	movff	fputs@fp,fputc@fp
  7096  002EAA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7097  002EAE  ECD6  F014         	call	_fputc	;wreg free
  7098  002EB2  4A0F               	infsnz	fputs@i,f,c
  7099  002EB4  2A10               	incf	fputs@i+1,f,c
  7100  002EB6                     l2849:
  7101  002EB6  FFFF               	dw	65535	; assembler added errata NOP
  7102  002EB8  500F               	movf	fputs@i,w,c
  7103  002EBA  240A               	addwf	fputs@s,w,c
  7104  002EBC  6ED9               	movwf	fsr2l,c
  7105  002EBE  5010               	movf	fputs@i+1,w,c
  7106  002EC0  200B               	addwfc	fputs@s+1,w,c
  7107  002EC2  6EDA               	movwf	fsr2h,c
  7108  002EC4  50DF               	movf	indf2,w,c
  7109  002EC6  6E0E               	movwf	fputs@c,c
  7110  002EC8  500E               	movf	fputs@c,w,c
  7111  002ECA  B4D8               	btfsc	status,2,c
  7112  002ECC  0012               	return		;funcret
  7113  002ECE  FFFF               	dw	65535	; assembler added errata NOP
  7114  002ED0  D7E6               	goto	l2845
  7115  002ED2  FFFF               	dw	65535	; errata NOP
  7116  002ED4                     __end_of_fputs:
  7117                           	opt callstack 0
  7118                           
  7119 ;; *************** function _fputc *****************
  7120 ;; Defined at:
  7121 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  c               2    0[COMRAM] int 
  7124 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7125 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  2    0[COMRAM] int 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7137 ;;      Params:         4       0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0
  7139 ;;      Temps:          5       0       0       0       0       0       0
  7140 ;;      Totals:         9       0       0       0       0       0       0
  7141 ;;Total ram usage:        9 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    3
  7144 ;; This function calls:
  7145 ;;		_putch
  7146 ;; This function is called by:
  7147 ;;		_pad
  7148 ;;		_stoa
  7149 ;;		_vfpfcnvrt
  7150 ;;		_fputs
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text27
  7155  0029AC                     __ptext27:
  7156                           	opt callstack 0
  7157  0029AC                     _fputc:
  7158                           	opt callstack 0
  7159  0029AC  FFFF               	dw	65535	; assembler added errata NOP
  7160                           
  7161                           ;incstack = 0
  7162  0029AE  5003               	movf	fputc@fp,w,c
  7163  0029B0  1004               	iorwf	fputc@fp+1,w,c
  7164  0029B2  B4D8               	btfsc	status,2,c
  7165  0029B4  D004               	goto	u1950
  7166  0029B6  5003               	movf	fputc@fp,w,c
  7167  0029B8  1004               	iorwf	fputc@fp+1,w,c
  7168  0029BA  A4D8               	btfss	status,2,c
  7169  0029BC  D005               	goto	l2835
  7170  0029BE                     u1950:
  7171  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  7172  0029C0  5001               	movf	fputc@c,w,c
  7173  0029C2  ECD4  F018         	call	_putch
  7174  0029C6  D045               	goto	l1315
  7175  0029C8                     l2835:
  7176  0029C8  FFFF               	dw	65535	; assembler added errata NOP
  7177  0029CA  EE20 F004          	lfsr	2,4
  7178  0029CE  5003               	movf	fputc@fp,w,c
  7179  0029D0  26D9               	addwf	fsr2l,f,c
  7180  0029D2  5004               	movf	fputc@fp+1,w,c
  7181  0029D4  22DA               	addwfc	fsr2h,f,c
  7182  0029D6  50DE               	movf	postinc2,w,c
  7183  0029D8  10DE               	iorwf	postinc2,w,c
  7184  0029DA  B4D8               	btfsc	status,2,c
  7185  0029DC  D016               	goto	u1970
  7186  0029DE  EE20 F004          	lfsr	2,4
  7187  0029E2  5003               	movf	fputc@fp,w,c
  7188  0029E4  26D9               	addwf	fsr2l,f,c
  7189  0029E6  5004               	movf	fputc@fp+1,w,c
  7190  0029E8  22DA               	addwfc	fsr2h,f,c
  7191  0029EA  EE10 F002          	lfsr	1,2
  7192  0029EE  5003               	movf	fputc@fp,w,c
  7193  0029F0  26E1               	addwf	fsr1l,f,c
  7194  0029F2  5004               	movf	fputc@fp+1,w,c
  7195  0029F4  22E2               	addwfc	fsr1h,f,c
  7196  0029F6  50DE               	movf	postinc2,w,c
  7197  0029F8  5CE6               	subwf	postinc1,w,c
  7198  0029FA  50E6               	movf	postinc1,w,c
  7199  0029FC  0A80               	xorlw	128
  7200  0029FE  6E09               	movwf	(??_fputc+4)& (0+255),c
  7201  002A00  50DE               	movf	postinc2,w,c
  7202  002A02  0A80               	xorlw	128
  7203  002A04  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7204  002A06  B0D8               	btfsc	status,0,c
  7205  002A08  D024               	goto	l1315
  7206  002A0A                     u1970:
  7207  002A0A  FFFF               	dw	65535	; assembler added errata NOP
  7208  002A0C  EE20 F002          	lfsr	2,2
  7209  002A10  5003               	movf	fputc@fp,w,c
  7210  002A12  26D9               	addwf	fsr2l,f,c
  7211  002A14  5004               	movf	fputc@fp+1,w,c
  7212  002A16  22DA               	addwfc	fsr2h,f,c
  7213  002A18  CFDE F005          	movff	postinc2,??_fputc
  7214  002A1C  CFDD F006          	movff	postdec2,??_fputc+1
  7215  002A20  C003  FFD9         	movff	fputc@fp,fsr2l
  7216  002A24  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7217  002A28  CFDE F007          	movff	postinc2,??_fputc+2
  7218  002A2C  CFDD F008          	movff	postdec2,??_fputc+3
  7219  002A30  5005               	movf	??_fputc,w,c
  7220  002A32  2407               	addwf	??_fputc+2,w,c
  7221  002A34  6ED9               	movwf	fsr2l,c
  7222  002A36  5006               	movf	??_fputc+1,w,c
  7223  002A38  2008               	addwfc	??_fputc+3,w,c
  7224  002A3A  6EDA               	movwf	fsr2h,c
  7225  002A3C  C001  FFDF         	movff	fputc@c,indf2
  7226  002A40  EE20 F002          	lfsr	2,2
  7227  002A44  5003               	movf	fputc@fp,w,c
  7228  002A46  26D9               	addwf	fsr2l,f,c
  7229  002A48  5004               	movf	fputc@fp+1,w,c
  7230  002A4A  22DA               	addwfc	fsr2h,f,c
  7231  002A4C  2ADE               	incf	postinc2,f,c
  7232  002A4E  0E00               	movlw	0
  7233  002A50  22DD               	addwfc	postdec2,f,c
  7234  002A52                     l1315:
  7235  002A52  FFFF               	dw	65535	; assembler added errata NOP
  7236  002A54  0012               	return		;funcret
  7237  002A56  FFFF               	dw	65535	; errata NOP
  7238  002A58                     __end_of_fputc:
  7239                           	opt callstack 0
  7240                           
  7241 ;; *************** function _putch *****************
  7242 ;; Defined at:
  7243 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  c               1    wreg     unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  c               1    0[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7257 ;;      Params:         0       0       0       0       0       0       0
  7258 ;;      Locals:         0       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0
  7260 ;;      Totals:         0       0       0       0       0       0       0
  7261 ;;Total ram usage:        0 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    2
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		_fputc
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text28
  7272  0031A8                     __ptext28:
  7273                           	opt callstack 0
  7274  0031A8                     _putch:
  7275                           	opt callstack 0
  7276  0031A8  FFFF               	dw	65535	; assembler added errata NOP
  7277                           
  7278                           ;incstack = 0
  7279  0031AA  0012               	return		;funcret
  7280  0031AC  FFFF               	dw	65535	; errata NOP
  7281  0031AE                     __end_of_putch:
  7282                           	opt callstack 0
  7283                           
  7284 ;; *************** function _atoi *****************
  7285 ;; Defined at:
  7286 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7289 ;;		 -> STR_2(3), STR_1(4), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  n               2   20[COMRAM] int 
  7292 ;;  neg             2   13[COMRAM] int 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  2    7[COMRAM] int 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7302 ;;      Params:         2       0       0       0       0       0       0
  7303 ;;      Locals:         9       0       0       0       0       0       0
  7304 ;;      Temps:          4       0       0       0       0       0       0
  7305 ;;      Totals:        15       0       0       0       0       0       0
  7306 ;;Total ram usage:       15 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    3
  7309 ;; This function calls:
  7310 ;;		___wmul
  7311 ;;		_isdigit
  7312 ;;		_isspace
  7313 ;; This function is called by:
  7314 ;;		_vfpfcnvrt
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text29
  7319  002214                     __ptext29:
  7320                           	opt callstack 0
  7321  002214                     _atoi:
  7322                           	opt callstack 0
  7323  002214  FFFF               	dw	65535	; assembler added errata NOP
  7324                           
  7325                           ;incstack = 0
  7326  002216  0E00               	movlw	0
  7327  002218  6E16               	movwf	atoi@n+1,c
  7328  00221A  0E00               	movlw	0
  7329  00221C  6E15               	movwf	atoi@n,c
  7330  00221E  0E00               	movlw	0
  7331  002220  6E0F               	movwf	atoi@neg+1,c
  7332  002222  0E00               	movlw	0
  7333  002224  6E0E               	movwf	atoi@neg,c
  7334  002226  D003               	goto	l3321
  7335  002228                     l3319:
  7336  002228  FFFF               	dw	65535	; assembler added errata NOP
  7337  00222A  4A08               	infsnz	atoi@s,f,c
  7338  00222C  2A09               	incf	atoi@s+1,f,c
  7339  00222E                     l3321:
  7340  00222E  FFFF               	dw	65535	; assembler added errata NOP
  7341  002230  0E01               	movlw	1
  7342  002232  6E14               	movwf	_atoi$1674,c
  7343  002234  C008  FFF6         	movff	atoi@s,tblptrl
  7344  002238  C009  FFF7         	movff	atoi@s+1,tblptrh
  7345  00223C                     	if	0	;tblptru may be non-zero
  7346  00223C                     	endif
  7347  00223C                     	if	0	;tblptru may be non-zero
  7348  00223C                     	endif
  7349  00223C  0008               	tblrd		*
  7350  00223E  FFFF               	dw	65535	; errata NOP
  7351  002240  50F5               	movf	tablat,w,c
  7352  002242  0A20               	xorlw	32
  7353  002244  B4D8               	btfsc	status,2,c
  7354  002246  D019               	goto	l3329
  7355  002248  0EF7               	movlw	247
  7356  00224A  6E0A               	movwf	??_atoi& (0+255),c
  7357  00224C  0EFF               	movlw	255
  7358  00224E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7359  002250  C008  FFF6         	movff	atoi@s,tblptrl
  7360  002254  C009  FFF7         	movff	atoi@s+1,tblptrh
  7361  002258                     	if	0	;tblptru may be non-zero
  7362  002258                     	endif
  7363  002258                     	if	0	;tblptru may be non-zero
  7364  002258                     	endif
  7365  002258  0008               	tblrd		*
  7366  00225A  FFFF               	dw	65535	; errata NOP
  7367  00225C  50F5               	movf	tablat,w,c
  7368  00225E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7369  002260  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7370  002262  500A               	movf	??_atoi,w,c
  7371  002264  260C               	addwf	??_atoi+2,f,c
  7372  002266  500B               	movf	??_atoi+1,w,c
  7373  002268  220D               	addwfc	??_atoi+3,f,c
  7374  00226A  500D               	movf	??_atoi+3,w,c
  7375  00226C  E104               	bnz	u2980
  7376  00226E  0E05               	movlw	5
  7377  002270  5C0C               	subwf	??_atoi+2,w,c
  7378  002272  A0D8               	btfss	status,0,c
  7379  002274  D002               	goto	l3329
  7380  002276                     u2980:
  7381  002276  0E00               	movlw	0
  7382  002278  6E14               	movwf	_atoi$1674,c
  7383  00227A                     l3329:
  7384  00227A  FFFF               	dw	65535	; assembler added errata NOP
  7385  00227C  C014  F010         	movff	_atoi$1674,_atoi$1673
  7386  002280  6A11               	clrf	_atoi$1673+1,c
  7387  002282  5010               	movf	_atoi$1673,w,c
  7388  002284  1011               	iorwf	_atoi$1673+1,w,c
  7389  002286  B4D8               	btfsc	status,2,c
  7390  002288  D00A               	goto	l3339
  7391  00228A  D7CE               	goto	l3319
  7392  00228C                     l3335:
  7393  00228C  FFFF               	dw	65535	; assembler added errata NOP
  7394  00228E  0E00               	movlw	0
  7395  002290  6E0F               	movwf	atoi@neg+1,c
  7396  002292  0E01               	movlw	1
  7397  002294  6E0E               	movwf	atoi@neg,c
  7398  002296                     l3337:
  7399  002296  FFFF               	dw	65535	; assembler added errata NOP
  7400  002298  4A08               	infsnz	atoi@s,f,c
  7401  00229A  2A09               	incf	atoi@s+1,f,c
  7402  00229C  D032               	goto	l3345
  7403  00229E                     l3339:
  7404  00229E  FFFF               	dw	65535	; assembler added errata NOP
  7405  0022A0  C008  FFF6         	movff	atoi@s,tblptrl
  7406  0022A4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7407  0022A8                     	if	0	;tblptru may be non-zero
  7408  0022A8                     	endif
  7409  0022A8                     	if	0	;tblptru may be non-zero
  7410  0022A8                     	endif
  7411  0022A8  0008               	tblrd		*
  7412  0022AA  FFFF               	dw	65535	; errata NOP
  7413  0022AC  50F5               	movf	tablat,w,c
  7414  0022AE  6E0A               	movwf	??_atoi& (0+255),c
  7415  0022B0  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7416                           
  7417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7418                           ; Switch size 1, requested type "simple"
  7419                           ; Number of cases is 1, Range of values is 0 to 0
  7420                           ; switch strategies available:
  7421                           ; Name         Instructions Cycles
  7422                           ; simple_byte            4     3 (average)
  7423                           ;	Chosen strategy is simple_byte
  7424  0022B2  500B               	movf	??_atoi+1,w,c
  7425  0022B4  0A00               	xorlw	0	; case 0
  7426  0022B6  A4D8               	btfss	status,2,c
  7427  0022B8  D024               	goto	l3345
  7428                           
  7429                           ; Switch size 1, requested type "simple"
  7430                           ; Number of cases is 2, Range of values is 43 to 45
  7431                           ; switch strategies available:
  7432                           ; Name         Instructions Cycles
  7433                           ; simple_byte            7     4 (average)
  7434                           ;	Chosen strategy is simple_byte
  7435  0022BA  500A               	movf	??_atoi,w,c
  7436  0022BC  0A2B               	xorlw	43	; case 43
  7437  0022BE  B4D8               	btfsc	status,2,c
  7438  0022C0  D7EA               	goto	l3337
  7439  0022C2  0A06               	xorlw	6	; case 45
  7440  0022C4  B4D8               	btfsc	status,2,c
  7441  0022C6  D7E2               	goto	l3335
  7442  0022C8  D01C               	goto	l3345
  7443  0022CA                     l3341:
  7444  0022CA  FFFF               	dw	65535	; assembler added errata NOP
  7445  0022CC  C015  F001         	movff	atoi@n,___wmul@multiplier
  7446  0022D0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7447  0022D4  0E00               	movlw	0
  7448  0022D6  6E04               	movwf	___wmul@multiplicand+1,c
  7449  0022D8  0E0A               	movlw	10
  7450  0022DA  6E03               	movwf	___wmul@multiplicand,c
  7451  0022DC  EC31  F018         	call	___wmul	;wreg free
  7452  0022E0  C008  FFF6         	movff	atoi@s,tblptrl
  7453  0022E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7454  0022E8                     	if	0	;tblptru may be non-zero
  7455  0022E8                     	endif
  7456  0022E8                     	if	0	;tblptru may be non-zero
  7457  0022E8                     	endif
  7458  0022E8  0008               	tblrd		*
  7459  0022EA  FFFF               	dw	65535	; errata NOP
  7460  0022EC  50F5               	movf	tablat,w,c
  7461  0022EE  5E01               	subwf	?___wmul,f,c
  7462  0022F0  0E00               	movlw	0
  7463  0022F2  5A02               	subwfb	?___wmul+1,f,c
  7464  0022F4  0E30               	movlw	48
  7465  0022F6  2401               	addwf	?___wmul,w,c
  7466  0022F8  6E15               	movwf	atoi@n,c
  7467  0022FA  0E00               	movlw	0
  7468  0022FC  2002               	addwfc	?___wmul+1,w,c
  7469  0022FE  6E16               	movwf	atoi@n+1,c
  7470  002300  D7CA               	goto	l3337
  7471  002302                     l3345:
  7472  002302  FFFF               	dw	65535	; assembler added errata NOP
  7473  002304  0ED0               	movlw	208
  7474  002306  6E0A               	movwf	??_atoi& (0+255),c
  7475  002308  0EFF               	movlw	255
  7476  00230A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7477  00230C  C008  FFF6         	movff	atoi@s,tblptrl
  7478  002310  C009  FFF7         	movff	atoi@s+1,tblptrh
  7479  002314                     	if	0	;tblptru may be non-zero
  7480  002314                     	endif
  7481  002314                     	if	0	;tblptru may be non-zero
  7482  002314                     	endif
  7483  002314  0008               	tblrd		*
  7484  002316  FFFF               	dw	65535	; errata NOP
  7485  002318  50F5               	movf	tablat,w,c
  7486  00231A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7487  00231C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7488  00231E  500A               	movf	??_atoi,w,c
  7489  002320  260C               	addwf	??_atoi+2,f,c
  7490  002322  500B               	movf	??_atoi+1,w,c
  7491  002324  220D               	addwfc	??_atoi+3,f,c
  7492  002326  500D               	movf	??_atoi+3,w,c
  7493  002328  E106               	bnz	u3000
  7494  00232A  0E0A               	movlw	10
  7495  00232C  5C0C               	subwf	??_atoi+2,w,c
  7496  00232E  B0D8               	btfsc	status,0,c
  7497  002330  D002               	goto	u3000
  7498  002332  0E01               	movlw	1
  7499  002334  D002               	goto	u3010
  7500  002336                     u3000:
  7501  002336  FFFF               	dw	65535	; assembler added errata NOP
  7502  002338  0E00               	movlw	0
  7503  00233A                     u3010:
  7504  00233A  FFFF               	dw	65535	; assembler added errata NOP
  7505  00233C  6E12               	movwf	_atoi$1675,c
  7506  00233E  6A13               	clrf	_atoi$1675+1,c
  7507  002340  5012               	movf	_atoi$1675,w,c
  7508  002342  1013               	iorwf	_atoi$1675+1,w,c
  7509  002344  A4D8               	btfss	status,2,c
  7510  002346  D7C1               	goto	l3341
  7511  002348  500E               	movf	atoi@neg,w,c
  7512  00234A  100F               	iorwf	atoi@neg+1,w,c
  7513  00234C  A4D8               	btfss	status,2,c
  7514  00234E  D00D               	goto	l1269
  7515  002350  C015  F00A         	movff	atoi@n,??_atoi
  7516  002354  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7517  002358  1E0A               	comf	??_atoi,f,c
  7518  00235A  1E0B               	comf	??_atoi+1,f,c
  7519  00235C  4A0A               	infsnz	??_atoi,f,c
  7520  00235E  2A0B               	incf	??_atoi+1,f,c
  7521  002360  C00A  F008         	movff	??_atoi,?_atoi
  7522  002364  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7523  002368  D005               	goto	l1272
  7524  00236A                     l1269:
  7525  00236A  FFFF               	dw	65535	; assembler added errata NOP
  7526  00236C  C015  F008         	movff	atoi@n,?_atoi
  7527  002370  C016  F009         	movff	atoi@n+1,?_atoi+1
  7528  002374                     l1272:
  7529  002374  FFFF               	dw	65535	; assembler added errata NOP
  7530  002376  0012               	return		;funcret
  7531  002378  FFFF               	dw	65535	; errata NOP
  7532  00237A                     __end_of_atoi:
  7533                           	opt callstack 0
  7534                           
  7535 ;; *************** function _isspace *****************
  7536 ;; Defined at:
  7537 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  c               2    0[COMRAM] int 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  2    0[COMRAM] int 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7551 ;;      Params:         2       0       0       0       0       0       0
  7552 ;;      Locals:         1       0       0       0       0       0       0
  7553 ;;      Temps:          4       0       0       0       0       0       0
  7554 ;;      Totals:         7       0       0       0       0       0       0
  7555 ;;Total ram usage:        7 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    2
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_atoi
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text30
  7566  002E4E                     __ptext30:
  7567                           	opt callstack 0
  7568  002E4E                     _isspace:
  7569                           	opt callstack 0
  7570  002E4E  FFFF               	dw	65535	; assembler added errata NOP
  7571                           
  7572                           ;incstack = 0
  7573  002E50  0E01               	movlw	1
  7574  002E52  6E07               	movwf	_isspace$1710,c
  7575  002E54  0E20               	movlw	32
  7576  002E56  1801               	xorwf	isspace@c,w,c
  7577  002E58  1002               	iorwf	isspace@c+1,w,c
  7578  002E5A  B4D8               	btfsc	status,2,c
  7579  002E5C  D014               	goto	l3045
  7580  002E5E  0EF7               	movlw	247
  7581  002E60  6E03               	movwf	??_isspace& (0+255),c
  7582  002E62  0EFF               	movlw	255
  7583  002E64  6E04               	movwf	(??_isspace+1)& (0+255),c
  7584  002E66  C001  F005         	movff	isspace@c,??_isspace+2
  7585  002E6A  C002  F006         	movff	isspace@c+1,??_isspace+3
  7586  002E6E  5003               	movf	??_isspace,w,c
  7587  002E70  2605               	addwf	??_isspace+2,f,c
  7588  002E72  5004               	movf	??_isspace+1,w,c
  7589  002E74  2206               	addwfc	??_isspace+3,f,c
  7590  002E76  5006               	movf	??_isspace+3,w,c
  7591  002E78  E104               	bnz	u2370
  7592  002E7A  0E05               	movlw	5
  7593  002E7C  5C05               	subwf	??_isspace+2,w,c
  7594  002E7E  A0D8               	btfss	status,0,c
  7595  002E80  D002               	goto	l3045
  7596  002E82                     u2370:
  7597  002E82  0E00               	movlw	0
  7598  002E84  6E07               	movwf	_isspace$1710,c
  7599  002E86                     l3045:
  7600  002E86  FFFF               	dw	65535	; assembler added errata NOP
  7601  002E88  C007  F001         	movff	_isspace$1710,?_isspace
  7602  002E8C  6A02               	clrf	?_isspace+1,c
  7603  002E8E  0012               	return		;funcret
  7604  002E90  FFFF               	dw	65535	; errata NOP
  7605  002E92                     __end_of_isspace:
  7606                           	opt callstack 0
  7607                           
  7608 ;; *************** function _isdigit *****************
  7609 ;; Defined at:
  7610 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  c               2    0[COMRAM] int 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2    0[COMRAM] int 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7624 ;;      Params:         2       0       0       0       0       0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0
  7626 ;;      Temps:          4       0       0       0       0       0       0
  7627 ;;      Totals:         6       0       0       0       0       0       0
  7628 ;;Total ram usage:        6 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    2
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_vfpfcnvrt
  7635 ;;		_atoi
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text31
  7640  002FF8                     __ptext31:
  7641                           	opt callstack 0
  7642  002FF8                     _isdigit:
  7643                           	opt callstack 0
  7644  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  7645                           
  7646                           ;incstack = 0
  7647  002FFA  0ED0               	movlw	208
  7648  002FFC  6E03               	movwf	??_isdigit& (0+255),c
  7649  002FFE  0EFF               	movlw	255
  7650  003000  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7651  003002  C001  F005         	movff	isdigit@c,??_isdigit+2
  7652  003006  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7653  00300A  5003               	movf	??_isdigit,w,c
  7654  00300C  2605               	addwf	??_isdigit+2,f,c
  7655  00300E  5004               	movf	??_isdigit+1,w,c
  7656  003010  2206               	addwfc	??_isdigit+3,f,c
  7657  003012  5006               	movf	??_isdigit+3,w,c
  7658  003014  E106               	bnz	u2140
  7659  003016  0E0A               	movlw	10
  7660  003018  5C05               	subwf	??_isdigit+2,w,c
  7661  00301A  B0D8               	btfsc	status,0,c
  7662  00301C  D002               	goto	u2140
  7663  00301E  0E01               	movlw	1
  7664  003020  D002               	goto	u2150
  7665  003022                     u2140:
  7666  003022  FFFF               	dw	65535	; assembler added errata NOP
  7667  003024  0E00               	movlw	0
  7668  003026                     u2150:
  7669  003026  FFFF               	dw	65535	; assembler added errata NOP
  7670  003028  6E01               	movwf	?_isdigit,c
  7671  00302A  6A02               	clrf	?_isdigit+1,c
  7672  00302C  0012               	return		;funcret
  7673  00302E  FFFF               	dw	65535	; errata NOP
  7674  003030                     __end_of_isdigit:
  7675                           	opt callstack 0
  7676                           
  7677 ;; *************** function ___wmul *****************
  7678 ;; Defined at:
  7679 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  multiplier      2    0[COMRAM] unsigned int 
  7682 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  product         2    4[COMRAM] unsigned int 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  2    0[COMRAM] unsigned int 
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0, prodl, prodh
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7694 ;;      Params:         4       0       0       0       0       0       0
  7695 ;;      Locals:         2       0       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0
  7697 ;;      Totals:         6       0       0       0       0       0       0
  7698 ;;Total ram usage:        6 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    2
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_atoi
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text32
  7709  003062                     __ptext32:
  7710                           	opt callstack 0
  7711  003062                     ___wmul:
  7712                           	opt callstack 0
  7713  003062  FFFF               	dw	65535	; assembler added errata NOP
  7714                           
  7715                           ;incstack = 0
  7716  003064  5001               	movf	___wmul@multiplier,w,c
  7717  003066  0203               	mulwf	___wmul@multiplicand,c
  7718  003068  CFF3 F005          	movff	prodl,___wmul@product
  7719  00306C  CFF4 F006          	movff	prodh,___wmul@product+1
  7720  003070  5001               	movf	___wmul@multiplier,w,c
  7721  003072  0204               	mulwf	___wmul@multiplicand+1,c
  7722  003074  50F3               	movf	prodl,w,c
  7723  003076  2606               	addwf	___wmul@product+1,f,c
  7724  003078  5002               	movf	___wmul@multiplier+1,w,c
  7725  00307A  0203               	mulwf	___wmul@multiplicand,c
  7726  00307C  50F3               	movf	prodl,w,c
  7727  00307E  2606               	addwf	___wmul@product+1,f,c
  7728  003080  C005  F001         	movff	___wmul@product,?___wmul
  7729  003084  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7730  003088  0012               	return		;funcret
  7731  00308A  FFFF               	dw	65535	; errata NOP
  7732  00308C                     __end_of___wmul:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _getchar *****************
  7736 ;; Defined at:
  7737 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  2   26[None  ] int 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7751 ;;      Params:         0       0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    4
  7758 ;; This function calls:
  7759 ;;		_fgetc
  7760 ;; This function is called by:
  7761 ;;		_int_to_char
  7762 ;;		_float_to_char
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text33
  7767  00315C                     __ptext33:
  7768                           	opt callstack 0
  7769  00315C                     _getchar:
  7770                           	opt callstack 0
  7771  00315C  FFFF               	dw	65535	; assembler added errata NOP
  7772                           
  7773                           ;	Return value of _getchar is never used
  7774                           
  7775                           ;incstack = 0
  7776  00315E  0E00               	movlw	0
  7777  003160  6E03               	movwf	fgetc@fp,c
  7778  003162  0E00               	movlw	0
  7779  003164  6E04               	movwf	fgetc@fp+1,c
  7780  003166  ECC9  F015         	call	_fgetc	;wreg free
  7781  00316A  0012               	return		;funcret
  7782  00316C  FFFF               	dw	65535	; errata NOP
  7783  00316E                     __end_of_getchar:
  7784                           	opt callstack 0
  7785                           
  7786 ;; *************** function _fgetc *****************
  7787 ;; Defined at:
  7788 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7791 ;;		 -> NULL(0), 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  c               2    9[COMRAM] int 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  2    2[COMRAM] int 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7803 ;;      Params:         2       0       0       0       0       0       0
  7804 ;;      Locals:         2       0       0       0       0       0       0
  7805 ;;      Temps:          5       0       0       0       0       0       0
  7806 ;;      Totals:         9       0       0       0       0       0       0
  7807 ;;Total ram usage:        9 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    3
  7810 ;; This function calls:
  7811 ;;		_getch
  7812 ;; This function is called by:
  7813 ;;		_getchar
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text34
  7818  002B92                     __ptext34:
  7819                           	opt callstack 0
  7820  002B92                     _fgetc:
  7821                           	opt callstack 0
  7822  002B92  FFFF               	dw	65535	; assembler added errata NOP
  7823                           
  7824                           ;incstack = 0
  7825  002B94  5003               	movf	fgetc@fp,w,c
  7826  002B96  1004               	iorwf	fgetc@fp+1,w,c
  7827  002B98  A4D8               	btfss	status,2,c
  7828  002B9A  D012               	goto	l3779
  7829  002B9C  507E               	movf	_ungetcnt,w,c
  7830  002B9E  B4D8               	btfsc	status,2,c
  7831  002BA0  D007               	goto	l3777
  7832  002BA2  0E00               	movlw	0
  7833  002BA4  6E0B               	movwf	fgetc@c+1,c
  7834  002BA6  0E00               	movlw	0
  7835  002BA8  6E0A               	movwf	fgetc@c,c
  7836  002BAA  0E00               	movlw	0
  7837  002BAC  6E7E               	movwf	_ungetcnt,c
  7838  002BAE  D02F               	goto	l3781
  7839  002BB0                     l3777:
  7840  002BB0  FFFF               	dw	65535	; assembler added errata NOP
  7841  002BB2  ECBF  F018         	call	_getch	;wreg free
  7842  002BB6  C001  F00A         	movff	?_getch,fgetc@c
  7843  002BBA  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7844  002BBE  D027               	goto	l3781
  7845  002BC0                     l3779:
  7846  002BC0  FFFF               	dw	65535	; assembler added errata NOP
  7847  002BC2  EE20 F002          	lfsr	2,2
  7848  002BC6  5003               	movf	fgetc@fp,w,c
  7849  002BC8  26D9               	addwf	fsr2l,f,c
  7850  002BCA  5004               	movf	fgetc@fp+1,w,c
  7851  002BCC  22DA               	addwfc	fsr2h,f,c
  7852  002BCE  CFDE F005          	movff	postinc2,??_fgetc
  7853  002BD2  CFDD F006          	movff	postdec2,??_fgetc+1
  7854  002BD6  C003  FFD9         	movff	fgetc@fp,fsr2l
  7855  002BDA  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7856  002BDE  CFDE F007          	movff	postinc2,??_fgetc+2
  7857  002BE2  CFDD F008          	movff	postdec2,??_fgetc+3
  7858  002BE6  5005               	movf	??_fgetc,w,c
  7859  002BE8  2407               	addwf	??_fgetc+2,w,c
  7860  002BEA  6ED9               	movwf	fsr2l,c
  7861  002BEC  5006               	movf	??_fgetc+1,w,c
  7862  002BEE  2008               	addwfc	??_fgetc+3,w,c
  7863  002BF0  6EDA               	movwf	fsr2h,c
  7864  002BF2  50DF               	movf	indf2,w,c
  7865  002BF4  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7866  002BF6  5009               	movf	??_fgetc+4,w,c
  7867  002BF8  6E0A               	movwf	fgetc@c,c
  7868  002BFA  6A0B               	clrf	fgetc@c+1,c
  7869  002BFC  EE20 F002          	lfsr	2,2
  7870  002C00  5003               	movf	fgetc@fp,w,c
  7871  002C02  26D9               	addwf	fsr2l,f,c
  7872  002C04  5004               	movf	fgetc@fp+1,w,c
  7873  002C06  22DA               	addwfc	fsr2h,f,c
  7874  002C08  2ADE               	incf	postinc2,f,c
  7875  002C0A  0E00               	movlw	0
  7876  002C0C  22DD               	addwfc	postdec2,f,c
  7877  002C0E                     l3781:
  7878  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  7879  002C10  C00A  F003         	movff	fgetc@c,?_fgetc
  7880  002C14  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7881  002C18  0012               	return		;funcret
  7882  002C1A  FFFF               	dw	65535	; errata NOP
  7883  002C1C                     __end_of_fgetc:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function _getch *****************
  7887 ;; Defined at:
  7888 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;		None
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  2    0[COMRAM] int 
  7895 ;; Registers used:
  7896 ;;		None
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7902 ;;      Params:         2       0       0       0       0       0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0
  7905 ;;      Totals:         2       0       0       0       0       0       0
  7906 ;;Total ram usage:        2 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    2
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_fgetc
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text35
  7917  00317E                     __ptext35:
  7918                           	opt callstack 0
  7919  00317E                     _getch:
  7920                           	opt callstack 0
  7921  00317E  FFFF               	dw	65535	; assembler added errata NOP
  7922                           
  7923                           ;incstack = 0
  7924  003180  6801               	setf	?_getch,c
  7925  003182  6802               	setf	?_getch+1,c
  7926  003184  0012               	return		;funcret
  7927  003186  FFFF               	dw	65535	; errata NOP
  7928  003188                     __end_of_getch:
  7929                           	opt callstack 0
  7930                           
  7931 ;; *************** function _initialize_TX *****************
  7932 ;; Defined at:
  7933 ;;		line 23 in file "serial.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7947 ;;      Params:         0       0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    2
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_main
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text36
  7962  00310C                     __ptext36:
  7963                           	opt callstack 0
  7964  00310C                     _initialize_TX:
  7965                           	opt callstack 0
  7966  00310C  FFFF               	dw	65535	; assembler added errata NOP
  7967                           
  7968                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7969                           
  7970                           ;incstack = 0
  7971  00310E  8CAC               	bsf	4012,6,c	;volatile
  7972                           
  7973                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7974  003110  8AAC               	bsf	4012,5,c	;volatile
  7975                           
  7976                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7977  003112  98AC               	bcf	4012,4,c	;volatile
  7978                           
  7979                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7980  003114  94AC               	bcf	4012,2,c	;volatile
  7981                           
  7982                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7983  003116  80AC               	bsf	4012,0,c	;volatile
  7984                           
  7985                           ;serial.c: 29:   SPBRG = 25;
  7986  003118  0E19               	movlw	25
  7987  00311A  6EAF               	movwf	4015,c	;volatile
  7988  00311C  0012               	return		;funcret
  7989  00311E  FFFF               	dw	65535	; errata NOP
  7990  003120                     __end_of_initialize_TX:
  7991                           	opt callstack 0
  7992                           
  7993 ;; *************** function _initialize_RX *****************
  7994 ;; Defined at:
  7995 ;;		line 32 in file "serial.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;		None
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1    wreg      void 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8009 ;;      Params:         0       0       0       0       0       0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0
  8012 ;;      Totals:         0       0       0       0       0       0       0
  8013 ;;Total ram usage:        0 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    2
  8016 ;; This function calls:
  8017 ;;		Nothing
  8018 ;; This function is called by:
  8019 ;;		_main
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text37
  8024  003120                     __ptext37:
  8025                           	opt callstack 0
  8026  003120                     _initialize_RX:
  8027                           	opt callstack 0
  8028  003120  FFFF               	dw	65535	; assembler added errata NOP
  8029                           
  8030                           ;serial.c: 33:   RCSTA = 0x00;
  8031                           
  8032                           ;incstack = 0
  8033  003122  0E00               	movlw	0
  8034  003124  6EAB               	movwf	4011,c	;volatile
  8035                           
  8036                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  8037  003126  8EAB               	bsf	4011,7,c	;volatile
  8038                           
  8039                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  8040  003128  8CAB               	bsf	4011,6,c	;volatile
  8041                           
  8042                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  8043  00312A  88AB               	bsf	4011,4,c	;volatile
  8044                           
  8045                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  8046  00312C  96AB               	bcf	4011,3,c	;volatile
  8047                           
  8048                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  8049  00312E  80AB               	bsf	4011,0,c	;volatile
  8050  003130  0012               	return		;funcret
  8051  003132  FFFF               	dw	65535	; errata NOP
  8052  003134                     __end_of_initialize_RX:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function ___lldiv *****************
  8056 ;; Defined at:
  8057 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  dividend        4    4[COMRAM] unsigned long 
  8060 ;;  divisor         4    8[COMRAM] unsigned long 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  quotient        4   12[COMRAM] unsigned long 
  8063 ;;  counter         1   16[COMRAM] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  4    4[COMRAM] unsigned long 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8073 ;;      Params:         8       0       0       0       0       0       0
  8074 ;;      Locals:         5       0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0
  8076 ;;      Totals:        13       0       0       0       0       0       0
  8077 ;;Total ram usage:       13 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    2
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_main
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text38
  8088  002B02                     __ptext38:
  8089                           	opt callstack 0
  8090  002B02                     ___lldiv:
  8091                           	opt callstack 0
  8092  002B02  FFFF               	dw	65535	; assembler added errata NOP
  8093                           
  8094                           ;incstack = 0
  8095  002B04  0E00               	movlw	0
  8096  002B06  6E0D               	movwf	___lldiv@quotient,c
  8097  002B08  0E00               	movlw	0
  8098  002B0A  6E0E               	movwf	___lldiv@quotient+1,c
  8099  002B0C  0E00               	movlw	0
  8100  002B0E  6E0F               	movwf	___lldiv@quotient+2,c
  8101  002B10  0E00               	movlw	0
  8102  002B12  6E10               	movwf	___lldiv@quotient+3,c
  8103  002B14  5009               	movf	___lldiv@divisor,w,c
  8104  002B16  100A               	iorwf	___lldiv@divisor+1,w,c
  8105  002B18  100B               	iorwf	___lldiv@divisor+2,w,c
  8106  002B1A  100C               	iorwf	___lldiv@divisor+3,w,c
  8107  002B1C  B4D8               	btfsc	status,2,c
  8108  002B1E  D02E               	goto	l590
  8109  002B20  0E01               	movlw	1
  8110  002B22  6E11               	movwf	___lldiv@counter,c
  8111  002B24  D007               	goto	l3923
  8112  002B26                     l3921:
  8113  002B26  FFFF               	dw	65535	; assembler added errata NOP
  8114  002B28  90D8               	bcf	status,0,c
  8115  002B2A  3609               	rlcf	___lldiv@divisor,f,c
  8116  002B2C  360A               	rlcf	___lldiv@divisor+1,f,c
  8117  002B2E  360B               	rlcf	___lldiv@divisor+2,f,c
  8118  002B30  360C               	rlcf	___lldiv@divisor+3,f,c
  8119  002B32  2A11               	incf	___lldiv@counter,f,c
  8120  002B34                     l3923:
  8121  002B34  FFFF               	dw	65535	; assembler added errata NOP
  8122  002B36  AE0C               	btfss	___lldiv@divisor+3,7,c
  8123  002B38  D7F6               	goto	l3921
  8124  002B3A                     u3730:
  8125  002B3A  FFFF               	dw	65535	; assembler added errata NOP
  8126  002B3C  90D8               	bcf	status,0,c
  8127  002B3E  360D               	rlcf	___lldiv@quotient,f,c
  8128  002B40  360E               	rlcf	___lldiv@quotient+1,f,c
  8129  002B42  360F               	rlcf	___lldiv@quotient+2,f,c
  8130  002B44  3610               	rlcf	___lldiv@quotient+3,f,c
  8131  002B46  5009               	movf	___lldiv@divisor,w,c
  8132  002B48  5C05               	subwf	___lldiv@dividend,w,c
  8133  002B4A  500A               	movf	___lldiv@divisor+1,w,c
  8134  002B4C  5806               	subwfb	___lldiv@dividend+1,w,c
  8135  002B4E  500B               	movf	___lldiv@divisor+2,w,c
  8136  002B50  5807               	subwfb	___lldiv@dividend+2,w,c
  8137  002B52  500C               	movf	___lldiv@divisor+3,w,c
  8138  002B54  5808               	subwfb	___lldiv@dividend+3,w,c
  8139  002B56  A0D8               	btfss	status,0,c
  8140  002B58  D009               	goto	l3933
  8141  002B5A  5009               	movf	___lldiv@divisor,w,c
  8142  002B5C  5E05               	subwf	___lldiv@dividend,f,c
  8143  002B5E  500A               	movf	___lldiv@divisor+1,w,c
  8144  002B60  5A06               	subwfb	___lldiv@dividend+1,f,c
  8145  002B62  500B               	movf	___lldiv@divisor+2,w,c
  8146  002B64  5A07               	subwfb	___lldiv@dividend+2,f,c
  8147  002B66  500C               	movf	___lldiv@divisor+3,w,c
  8148  002B68  5A08               	subwfb	___lldiv@dividend+3,f,c
  8149  002B6A  800D               	bsf	___lldiv@quotient,0,c
  8150  002B6C                     l3933:
  8151  002B6C  FFFF               	dw	65535	; assembler added errata NOP
  8152  002B6E  90D8               	bcf	status,0,c
  8153  002B70  320C               	rrcf	___lldiv@divisor+3,f,c
  8154  002B72  320B               	rrcf	___lldiv@divisor+2,f,c
  8155  002B74  320A               	rrcf	___lldiv@divisor+1,f,c
  8156  002B76  3209               	rrcf	___lldiv@divisor,f,c
  8157  002B78  2E11               	decfsz	___lldiv@counter,f,c
  8158  002B7A  D7DF               	goto	u3730
  8159  002B7C                     l590:
  8160  002B7C  FFFF               	dw	65535	; assembler added errata NOP
  8161  002B7E  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  8162  002B82  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  8163  002B86  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  8164  002B8A  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  8165  002B8E  0012               	return		;funcret
  8166  002B90  FFFF               	dw	65535	; errata NOP
  8167  002B92                     __end_of___lldiv:
  8168                           	opt callstack 0
  8169                           
  8170 ;; *************** function _UARTSendString *****************
  8171 ;; Defined at:
  8172 ;;		line 65 in file "serial.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  c               2   32[BANK0 ] PTR unsigned char 
  8175 ;;		 -> STR_9(26), STR_8(9), STR_7(3), STR_6(17), 
  8176 ;;		 -> STR_5(12), STR_4(3), STR_3(24), int_to_char@result(10), 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  i               2   36[BANK0 ] int 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8188 ;;      Params:         0       2       0       0       0       0       0
  8189 ;;      Locals:         0       2       0       0       0       0       0
  8190 ;;      Temps:          0       2       0       0       0       0       0
  8191 ;;      Totals:         0       6       0       0       0       0       0
  8192 ;;Total ram usage:        6 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    3
  8195 ;; This function calls:
  8196 ;;		_UARTSendChar
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;;		_read_SRAM
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text39
  8204  002C1C                     __ptext39:
  8205                           	opt callstack 0
  8206  002C1C                     _UARTSendString:
  8207                           	opt callstack 0
  8208  002C1C  FFFF               	dw	65535	; assembler added errata NOP
  8209                           
  8210                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  8211                           
  8212                           ;incstack = 0
  8213  002C1E  9E94               	bcf	3988,7,c	;volatile
  8214                           
  8215                           ;serial.c: 67:   int i = 0;
  8216  002C20  0E00               	movlw	0
  8217  002C22  0100               	movlb	0	; () banked
  8218  002C24  6FDF               	movwf	(UARTSendString@i+1)& (0+255),b
  8219  002C26  0E00               	movlw	0
  8220  002C28  6FDE               	movwf	UARTSendString@i& (0+255),b
  8221                           
  8222                           ;serial.c: 68:   while (c[i] != '\0') {
  8223  002C2A  D01E               	goto	l3899
  8224  002C2C                     l3895:
  8225  002C2C  FFFF               	dw	65535	; assembler added errata NOP
  8226                           
  8227                           ;serial.c: 69:     UARTSendChar(c[i]);
  8228  002C2E  0100               	movlb	0	; () banked
  8229  002C30  51DE               	movf	UARTSendString@i& (0+255),w,b
  8230  002C32  25DA               	addwf	UARTSendString@c& (0+255),w,b
  8231  002C34  6FDC               	movwf	??_UARTSendString& (0+255),b
  8232  002C36  51DF               	movf	(UARTSendString@i+1)& (0+255),w,b
  8233  002C38  21DB               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  8234  002C3A  6FDD               	movwf	(??_UARTSendString+1)& (0+255),b
  8235  002C3C  C0DC  FFF6         	movff	??_UARTSendString,tblptrl
  8236  002C40  C0DD  FFF7         	movff	??_UARTSendString+1,tblptrh
  8237  002C44  6AF8               	clrf	tblptru,c
  8238  002C46  0E05               	movlw	(high __ramtop+-1)
  8239  002C48  64F7               	cpfsgt	tblptrh,c
  8240  002C4A  D004               	bra	u3697
  8241  002C4C  0008               	tblrd		*
  8242  002C4E  FFFF               	dw	65535	; errata NOP
  8243  002C50  50F5               	movf	tablat,w,c
  8244  002C52  D005               	bra	u3690
  8245  002C54                     u3697:
  8246  002C54  CFF6 FFE9          	movff	tblptrl,fsr0l
  8247  002C58  CFF7 FFEA          	movff	tblptrh,fsr0h
  8248  002C5C  50EF               	movf	indf0,w,c
  8249  002C5E                     u3690:
  8250  002C5E  ECA4  F018         	call	_UARTSendChar
  8251                           
  8252                           ;serial.c: 70:     i++;
  8253  002C62  0100               	movlb	0	; () banked
  8254  002C64  4BDE               	infsnz	UARTSendString@i& (0+255),f,b
  8255  002C66  2BDF               	incf	(UARTSendString@i+1)& (0+255),f,b
  8256  002C68                     l3899:
  8257  002C68  FFFF               	dw	65535	; assembler added errata NOP
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;serial.c: 68:   while (c[i] != '\0') {
  8261  002C6A  51DE               	movf	UARTSendString@i& (0+255),w,b
  8262  002C6C  25DA               	addwf	UARTSendString@c& (0+255),w,b
  8263  002C6E  6FDC               	movwf	??_UARTSendString& (0+255),b
  8264  002C70  51DF               	movf	(UARTSendString@i+1)& (0+255),w,b
  8265  002C72  21DB               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  8266  002C74  6FDD               	movwf	(??_UARTSendString+1)& (0+255),b
  8267  002C76  C0DC  FFF6         	movff	??_UARTSendString,tblptrl
  8268  002C7A  C0DD  FFF7         	movff	??_UARTSendString+1,tblptrh
  8269  002C7E  6AF8               	clrf	tblptru,c
  8270  002C80  0E05               	movlw	(high __ramtop+-1)
  8271  002C82  64F7               	cpfsgt	tblptrh,c
  8272  002C84  D004               	bra	u3707
  8273  002C86  0008               	tblrd		*
  8274  002C88  FFFF               	dw	65535	; errata NOP
  8275  002C8A  50F5               	movf	tablat,w,c
  8276  002C8C  D005               	bra	u3700
  8277  002C8E                     u3707:
  8278  002C8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8279  002C92  CFF7 FFEA          	movff	tblptrh,fsr0h
  8280  002C96  50EF               	movf	indf0,w,c
  8281  002C98                     u3700:
  8282  002C98  0900               	iorlw	0
  8283  002C9A  B4D8               	btfsc	status,2,c
  8284  002C9C  0012               	return		;funcret
  8285  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  8286  002CA0  D7C5               	goto	l3895
  8287  002CA2  FFFF               	dw	65535	; errata NOP
  8288  002CA4                     __end_of_UARTSendString:
  8289                           	opt callstack 0
  8290                           
  8291 ;; *************** function _UARTNewLine *****************
  8292 ;; Defined at:
  8293 ;;		line 41 in file "serial.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;		None
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8307 ;;      Params:         0       0       0       0       0       0       0
  8308 ;;      Locals:         0       0       0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0       0       0
  8310 ;;      Totals:         0       0       0       0       0       0       0
  8311 ;;Total ram usage:        0 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    3
  8314 ;; This function calls:
  8315 ;;		_UARTSendChar
  8316 ;; This function is called by:
  8317 ;;		_main
  8318 ;;		_read_SRAM
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text40
  8323  003134                     __ptext40:
  8324                           	opt callstack 0
  8325  003134                     _UARTNewLine:
  8326                           	opt callstack 0
  8327  003134  FFFF               	dw	65535	; assembler added errata NOP
  8328                           
  8329                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  8330                           
  8331                           ;incstack = 0
  8332  003136  9E94               	bcf	3988,7,c	;volatile
  8333                           
  8334                           ;serial.c: 43:   UARTSendChar(0x0a);
  8335  003138  0E0A               	movlw	10
  8336  00313A  ECA4  F018         	call	_UARTSendChar
  8337                           
  8338                           ;serial.c: 44:   UARTSendChar(0x0d);
  8339  00313E  0E0D               	movlw	13
  8340  003140  ECA4  F018         	call	_UARTSendChar
  8341  003144  0012               	return		;funcret
  8342  003146  FFFF               	dw	65535	; errata NOP
  8343  003148                     __end_of_UARTNewLine:
  8344                           	opt callstack 0
  8345                           
  8346 ;; *************** function _UARTSendChar *****************
  8347 ;; Defined at:
  8348 ;;		line 47 in file "serial.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  c               1    wreg     unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  c               1    0[COMRAM] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8362 ;;      Params:         0       0       0       0       0       0       0
  8363 ;;      Locals:         1       0       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0
  8365 ;;      Totals:         1       0       0       0       0       0       0
  8366 ;;Total ram usage:        1 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    2
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_UARTNewLine
  8373 ;;		_UARTSendString
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text41
  8378  003148                     __ptext41:
  8379                           	opt callstack 0
  8380  003148                     _UARTSendChar:
  8381                           	opt callstack 0
  8382  003148  FFFF               	dw	65535	; assembler added errata NOP
  8383                           
  8384                           ;incstack = 0
  8385                           ;UARTSendChar@c stored from wreg
  8386  00314A  6E01               	movwf	UARTSendChar@c,c
  8387                           
  8388                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  8389  00314C  9E94               	bcf	3988,7,c	;volatile
  8390  00314E                     l185:
  8391  00314E  FFFF               	dw	65535	; assembler added errata NOP
  8392  003150  A2AC               	btfss	4012,1,c	;volatile
  8393  003152  D7FD               	goto	l185
  8394                           
  8395                           ;serial.c: 50:   TXREG = c;
  8396  003154  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  8397  003158  0012               	return		;funcret
  8398  00315A  FFFF               	dw	65535	; errata NOP
  8399  00315C                     __end_of_UARTSendChar:
  8400                           	opt callstack 0
  8401                           
  8402 ;; *************** function _Timer0_StopTimer *****************
  8403 ;; Defined at:
  8404 ;;		line 26 in file "timer.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  2  123[None  ] int 
  8411 ;; Registers used:
  8412 ;;		None
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8418 ;;      Params:         0       0       0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:    2
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_main
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text42
  8433  003188                     __ptext42:
  8434                           	opt callstack 0
  8435  003188                     _Timer0_StopTimer:
  8436                           	opt callstack 0
  8437  003188  FFFF               	dw	65535	; assembler added errata NOP
  8438                           
  8439                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  8440                           
  8441                           ;incstack = 0
  8442  00318A  9ED5               	bcf	4053,7,c	;volatile
  8443                           
  8444                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  8445  00318C  0012               	return		;funcret
  8446  00318E  FFFF               	dw	65535	; errata NOP
  8447  003190                     __end_of_Timer0_StopTimer:
  8448                           	opt callstack 0
  8449                           
  8450 ;; *************** function _Timer0_StartTimer *****************
  8451 ;; Defined at:
  8452 ;;		line 21 in file "timer.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  2  115[None  ] int 
  8459 ;; Registers used:
  8460 ;;		None
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8466 ;;      Params:         0       0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    2
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text43
  8481  003190                     __ptext43:
  8482                           	opt callstack 0
  8483  003190                     _Timer0_StartTimer:
  8484                           	opt callstack 0
  8485  003190  FFFF               	dw	65535	; assembler added errata NOP
  8486                           
  8487                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  8488                           
  8489                           ;incstack = 0
  8490  003192  8ED5               	bsf	4053,7,c	;volatile
  8491                           
  8492                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  8493  003194  0012               	return		;funcret
  8494  003196  FFFF               	dw	65535	; errata NOP
  8495  003198                     __end_of_Timer0_StartTimer:
  8496                           	opt callstack 0
  8497                           
  8498 ;; *************** function _Timer0_Init *****************
  8499 ;; Defined at:
  8500 ;;		line 8 in file "timer.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8514 ;;      Params:         0       0       0       0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0
  8517 ;;      Totals:         0       0       0       0       0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    2
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_main
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text44
  8529  00308C                     __ptext44:
  8530                           	opt callstack 0
  8531  00308C                     _Timer0_Init:
  8532                           	opt callstack 0
  8533  00308C  FFFF               	dw	65535	; assembler added errata NOP
  8534                           
  8535                           ;timer.c: 9:  time_ms = 0;
  8536                           
  8537                           ;incstack = 0
  8538  00308E  0E00               	movlw	0
  8539  003090  0100               	movlb	0	; () banked
  8540  003092  6F89               	movwf	_time_ms& (0+255),b	;volatile
  8541  003094  0E00               	movlw	0
  8542  003096  6F8A               	movwf	(_time_ms+1)& (0+255),b	;volatile
  8543  003098  0E00               	movlw	0
  8544  00309A  6F8B               	movwf	(_time_ms+2)& (0+255),b	;volatile
  8545  00309C  0E00               	movlw	0
  8546  00309E  6F8C               	movwf	(_time_ms+3)& (0+255),b	;volatile
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  8550  0030A0  9CD5               	bcf	4053,6,c	;volatile
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;timer.c: 11:  TMR0H = 0xFF;
  8554  0030A2  68D7               	setf	4055,c	;volatile
  8555                           
  8556                           ;timer.c: 12:  TMR0L = 0x34;
  8557  0030A4  0E34               	movlw	52
  8558  0030A6  6ED6               	movwf	4054,c	;volatile
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  8562  0030A8  94F2               	bcf	4082,2,c	;volatile
  8563                           
  8564                           ;timer.c: 14:  T0CON = 0x00;
  8565  0030AA  0E00               	movlw	0
  8566  0030AC  6ED5               	movwf	4053,c	;volatile
  8567                           
  8568                           ; BSR set to: 0
  8569  0030AE  0012               	return		;funcret
  8570  0030B0  FFFF               	dw	65535	; errata NOP
  8571  0030B2                     __end_of_Timer0_Init:
  8572                           	opt callstack 0
  8573                           
  8574 ;; *************** function _ReadTime *****************
  8575 ;; Defined at:
  8576 ;;		line 17 in file "timer.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  4    0[COMRAM] unsigned long 
  8583 ;; Registers used:
  8584 ;;		None
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8590 ;;      Params:         4       0       0       0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0
  8593 ;;      Totals:         4       0       0       0       0       0       0
  8594 ;;Total ram usage:        4 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    2
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_main
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text45
  8605  0030F6                     __ptext45:
  8606                           	opt callstack 0
  8607  0030F6                     _ReadTime:
  8608                           	opt callstack 0
  8609  0030F6  FFFF               	dw	65535	; assembler added errata NOP
  8610                           
  8611                           ;timer.c: 18:  return time_ms;
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;incstack = 0
  8615  0030F8  C089  F001         	movff	_time_ms,?_ReadTime	;volatile
  8616  0030FC  C08A  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  8617  003100  C08B  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  8618  003104  C08C  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  8619  003108  0012               	return		;funcret
  8620  00310A  FFFF               	dw	65535	; errata NOP
  8621  00310C                     __end_of_ReadTime:
  8622                           	opt callstack 0
  8623                           
  8624 ;; *************** function _timingISR *****************
  8625 ;; Defined at:
  8626 ;;		line 31 in file "timer.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;		None
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8640 ;;      Params:         0       0       0       0       0       0       0
  8641 ;;      Locals:         0       0       0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0
  8643 ;;      Totals:         0       0       0       0       0       0       0
  8644 ;;Total ram usage:        0 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:    1
  8647 ;; This function calls:
  8648 ;;		i2_Timer0_StartTimer
  8649 ;; This function is called by:
  8650 ;;		Interrupt level 2
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	intcode
  8655  000008                     __pintcode:
  8656                           	opt callstack 0
  8657  000008                     _timingISR:
  8658                           	opt callstack 0
  8659  000008  FFFF               	dw	65535	; assembler added errata NOP
  8660                           
  8661                           ;incstack = 0
  8662  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8663                           
  8664                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  8665  00000C  B4F2               	btfsc	4082,2,c	;volatile
  8666  00000E  AAF2               	btfss	4082,5,c	;volatile
  8667  000010  D00D               	goto	i2l248
  8668                           
  8669                           ;timer.c: 33:   TMR0IF = 0;
  8670  000012  94F2               	bcf	4082,2,c	;volatile
  8671                           
  8672                           ;timer.c: 34:   time_ms++;
  8673  000014  0E01               	movlw	1
  8674  000016  0100               	movlb	0	; () banked
  8675  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
  8676  00001A  0E00               	movlw	0
  8677  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  8678  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  8679  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;timer.c: 35:   TMR0H = 0xFF;
  8683  000022  68D7               	setf	4055,c	;volatile
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;timer.c: 36:   TMR0L = 0x34;
  8687  000024  0E34               	movlw	52
  8688  000026  6ED6               	movwf	4054,c	;volatile
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;timer.c: 37:   Timer0_StartTimer();
  8692  000028  ECCC  F018         	call	i2_Timer0_StartTimer	;wreg free
  8693  00002C                     i2l248:
  8694  00002C  FFFF               	dw	65535	; assembler added errata NOP
  8695  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8696  000030  0011               	retfie		f
  8697  000032  FFFF               	dw	65535	; errata NOP
  8698  000034                     __end_of_timingISR:
  8699                           	opt callstack 0
  8700                           
  8701 ;; *************** function i2_Timer0_StartTimer *****************
  8702 ;; Defined at:
  8703 ;;		line 21 in file "timer.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  2    0[None  ] int 
  8710 ;; Registers used:
  8711 ;;		None
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8717 ;;      Params:         0       0       0       0       0       0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0
  8720 ;;      Totals:         0       0       0       0       0       0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_timingISR
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text47
  8731  003198                     __ptext47:
  8732                           	opt callstack 0
  8733  003198                     i2_Timer0_StartTimer:
  8734                           	opt callstack 0
  8735  003198  FFFF               	dw	65535	; assembler added errata NOP
  8736                           
  8737                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  8738                           
  8739                           ;incstack = 0
  8740  00319A  8ED5               	bsf	4053,7,c	;volatile
  8741                           
  8742                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  8743  00319C  0012               	return		;funcret
  8744  00319E  FFFF               	dw	65535	; errata NOP
  8745  0031A0                     __end_ofi2_Timer0_StartTimer:
  8746                           	opt callstack 0
  8747                           
  8748                           	psect	rparam
  8749  0000                     
  8750                           	psect	temp
  8751  00007F                     btemp:
  8752                           	opt callstack 0
  8753  00007F                     	ds	1
  8754  0000                     int$flags	set	btemp
  8755  0000                     wtemp8	set	btemp+1
  8756  0000                     ttemp5	set	btemp+1
  8757  0000                     ttemp6	set	btemp+4
  8758  0000                     ttemp7	set	btemp+8
  8759                           tosu	equ	0xFFF
  8760                           tosh	equ	0xFFE
  8761                           tosl	equ	0xFFD
  8762                           stkptr	equ	0xFFC
  8763                           pclatu	equ	0xFFB
  8764                           pclath	equ	0xFFA
  8765                           pcl	equ	0xFF9
  8766                           tblptru	equ	0xFF8
  8767                           tblptrh	equ	0xFF7
  8768                           tblptrl	equ	0xFF6
  8769                           tablat	equ	0xFF5
  8770                           prodh	equ	0xFF4
  8771                           prodl	equ	0xFF3
  8772                           indf0	equ	0xFEF
  8773                           postinc0	equ	0xFEE
  8774                           postdec0	equ	0xFED
  8775                           preinc0	equ	0xFEC
  8776                           plusw0	equ	0xFEB
  8777                           fsr0h	equ	0xFEA
  8778                           fsr0l	equ	0xFE9
  8779                           wreg	equ	0xFE8
  8780                           indf1	equ	0xFE7
  8781                           postinc1	equ	0xFE6
  8782                           postdec1	equ	0xFE5
  8783                           preinc1	equ	0xFE4
  8784                           plusw1	equ	0xFE3
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           bsr	equ	0xFE0
  8788                           indf2	equ	0xFDF
  8789                           postinc2	equ	0xFDE
  8790                           postdec2	equ	0xFDD
  8791                           preinc2	equ	0xFDC
  8792                           plusw2	equ	0xFDB
  8793                           fsr2h	equ	0xFDA
  8794                           fsr2l	equ	0xFD9
  8795                           status	equ	0xFD8


Data Sizes:
    Strings     165
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     40     105
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_139(CODE[3]), STR_135(CODE[3]), STR_130(CODE[3]), STR_126(CODE[3]), 
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[4]), STR_108(CODE[4]), 
		 -> STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_88(CODE[4]), 
		 -> STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), 
		 -> STR_25(CODE[3]), STR_21(CODE[3]), STR_16(CODE[4]), STR_12(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_139(CODE[3]), STR_135(CODE[3]), STR_130(CODE[3]), STR_126(CODE[3]), 
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[4]), STR_108(CODE[4]), 
		 -> STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[3]), STR_88(CODE[4]), 
		 -> STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), 
		 -> STR_25(CODE[3]), STR_21(CODE[3]), STR_16(CODE[4]), STR_12(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1676_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 26
		 -> STR_9(CODE[26]), STR_8(CODE[9]), STR_7(CODE[3]), STR_6(CODE[17]), 
		 -> STR_5(CODE[12]), STR_4(CODE[3]), STR_3(CODE[24]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    ___lldiv->_ReadTime
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   51376
                                             38 BANK0      2     2      0
                           _ReadTime
                        _Timer0_Init
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                     _UARTSendString
                            ___lldiv
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                   _interrupt_enable
                            _read_op
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     272
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_op                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49486
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                           _ReadTime (ARG)
                            ___lldiv (ARG)
                            _getchar
                            _read_op (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       6     4      2    1252
                                             32 BANK0      6     4      2
                           _ReadTime (ARG)
                       _UARTSendChar
                            ___lldiv (ARG)
                        _int_to_char (ARG)
                            _read_op (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadTime
   _Timer0_Init
   _Timer0_StartTimer
   _Timer0_StopTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _ReadTime (ARG)
     _UARTSendChar (ARG)
     ___lldiv (ARG)
       _ReadTime (ARG)
     _int_to_char (ARG)
       _ReadTime (ARG)
       ___lldiv (ARG)
         _ReadTime (ARG)
       _getchar (ARG)
         _fgetc
           _getch
       _read_op (ARG)
       _sprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op (ARG)
   ___lldiv
     _ReadTime (ARG)
   _initialize_RX
   _initialize_TX
   _int_to_char
     _ReadTime (ARG)
     ___lldiv (ARG)
       _ReadTime (ARG)
     _getchar (ARG)
       _fgetc
         _getch
     _read_op (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_enable
   _read_op
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     28      69       4       82.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7      14        0.0%
DATA                 0      0      E7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Feb 28 00:34:24 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                                      l410 2540  
                                                      l431 1D36  
                                                      l185 314E  
                                                      l506 1842  
                                                      l347 2A8E  
                                                      l444 1AD4  
                                                      l365 18C6  
                                                      l429 1D2C  
                                                      l390 209C  
                                                      l446 1ADE  
                                                      l367 18D0  
                                                      l392 20A6  
                                                      l590 2B7C  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 2F4C  
                                                      _lcd 0080  
                                                      _pad 2A58  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             __CFG_LVP$OFF 000000  
                                             __CFG_WDT$OFF 000000  
                                                     l1001 2808  
                                                     l1011 2986  
                                                     ?_abs 0013  
                                                     l1241 2F82  
                                                     l1315 2A52  
                                                     l3005 277A  
                                                     l1238 2F78  
                                                     l3007 2790  
                                                     l1272 2374  
                                                     l3121 1A84  
                                                     l3017 27F0  
                                                     l3033 296E  
                                                     l3025 290C  
                                                     l3027 2922  
                                                     l3045 2E86  
                                                     l1269 236A  
                                                     l3053 2DC6  
                                                     l3117 1A68  
                                                     l3213 25F6  
                                                     l3205 25BE  
                                                     l3055 2DD4  
                                                     l3151 2172  
                                                     l1384 2DAA  
                                                     l3321 222E  
                                                     l3209 25DC  
                                                     l1369 28EA  
                                                     l3313 1CDC  
                                                     l3401 071C  
                                                     l3083 18EE  
                                                     l3139 20E6  
                                                     l3227 1D6E  
                                                     l1379 2DA0  
                                                     l3341 22CA  
                                                     l3069 18A4  
                                                     l3181 2502  
                                                     l3237 1E5C  
                                                     l3261 1AF4  
                                                     l3413 073A  
                                                     l3405 0724  
                                                     l3335 228C  
                                                     l3319 2228  
                                                     l3087 18FE  
                                                     l3191 255A  
                                                     l3431 0822  
                                                     l3415 0780  
                                                     l3345 2302  
                                                     l3337 2296  
                                                     l3329 227A  
                                                     l3097 19F8  
                                                     l3169 21E6  
                                                     l3505 0C8A  
                                                     l3409 072C  
                                                     l3339 229E  
                                                     l3195 2574  
                                                     l3275 1B48  
                                                     l3267 1B24  
                                                     l3523 0DE4  
                                                     l3515 0D34  
                                                     l3451 092A  
                                                     l3427 07F2  
                                                     l3365 285A  
                                                     l3621 1224  
                                                     l3613 11B2  
                                                     l3605 1118  
                                                     l3429 0812  
                                                     l4069 1EE8  
                                                     l3199 2596  
                                                     l3367 286A  
                                                     l3703 1608  
                                                     l3471 0A8A  
                                                     l3447 08FA  
                                                     l3391 06FA  
                                                     l3289 1BE2  
                                                     l3297 1C5E  
                                                     l3561 0FA0  
                                                     l3465 09E4  
                                                     l3449 091A  
                                                     l3393 070C  
                                                     l2835 29C8  
                                                     l3731 17A8  
                                                     l3555 0F2E  
                                                     l3547 0EBA  
                                                     l3539 0E3A  
                                                     l3475 0AC4  
                                                     l2845 2E9E  
                                                     l2853 303C  
                                                     l2941 2410  
                                                     l2933 23D2  
                                                     l3741 17F6  
                                                     l3717 16DE  
                                                     l3661 141C  
                                                     l3653 13A8  
                                                     l3645 1328  
                                                     l3629 12D2  
                                                     l3565 0FAC  
                                                     l3485 0B2E  
                                                     l3397 0714  
                                                     l3389 06F4  
                                                     ?_pad 0011  
                                                     l2855 3042  
                                                     l2951 2470  
                                                     l2927 23A8  
                                                     l3575 0FF0  
                                                     l3495 0BAA  
                                                     l3921 2B26  
                                                     l2849 2EB6  
                                                     l2873 2A84  
                                                     l3737 17E8  
                                                     l3585 101A  
                                                     l3569 0FDC  
                                                     l3923 2B34  
                                                     l2883 2AE4  
                                                     l2875 2A9A  
                                                     l2939 23FA  
                                                     l2955 2488  
                                                     l2971 2648  
                                                     l3675 1526  
                                                     l3595 10AC  
                                                     l3747 180A  
                                                     l3933 2B6C  
                                                     l3781 2C0E  
                                                     l2869 2A74  
                                                     l2981 26A0  
                                                     l2879 2AB4  
                                                     l2959 24B0  
                                                     l2991 2704  
                                                     l2975 266E  
                                                     l3767 2CBA  
                                                     l3777 2BB0  
                                                     l3689 15A8  
                                                     l3769 2CE2  
                                                     l3779 2BC0  
                                                     l2995 272C  
                                                     l2987 26EC  
                                                     l2979 268A  
                                                     l3895 2C2C  
                                                     l3899 2C68  
                                                     STR_1 0675  
                                                     STR_2 06A3  
                                                     STR_3 061B  
                                                     STR_4 06A0  
                                                     STR_5 0644  
                                                     STR_6 0633  
                                                     STR_8 0650  
                                                     STR_9 0601  
                                                     u2000 2FB2  
                                                     u2010 2FB6  
                                                     u2100 2F42  
                                                     u2110 2D84  
                                                     u3000 2336  
                                                     u2200 2416  
                                                     u2120 2D88  
                                                     u3010 233A  
                                                     u2140 3022  
                                                     u2060 2F5C  
                                                     u2150 3026  
                                                     u2310 2796  
                                                     u2070 2FEA  
                                                     u2400 1876  
                                                     u2080 2FEE  
                                                     u3200 096A  
                                                     u2090 2F3E  
                                                     u3210 0978  
                                                     u2260 26A6  
                                                     u2500 1A40  
                                                     u2340 2928  
                                                     u3300 0C04  
                                                     u3140 085E  
                                                     u2181 23DA  
                                                     u2430 18BA  
                                                     u3150 0862  
                                                     u2520 1A50  
                                                     u2600 21B4  
                                                     u3080 28C0  
                                                     u3320 0CE4  
                                                     u3240 0A3E  
                                                     u3160 0870  
                                                     u2370 2E82  
                                                     u2450 18E6  
                                                     u2610 21BA  
                                                     u2291 275A  
                                                     u2460 1A08  
                                                     u3420 10DA  
                                                     u3260 0B1E  
                                                     u2390 1872  
                                                     u2550 2090  
                                                     u3510 1476  
                                                     u3190 0966  
                                                     u2480 1A2A  
                                                     u2560 214C  
                                                     u2720 260C  
                                                     u3280 0B68  
                                                     u2481 1A28  
                                                     u2641 24E2  
                                                     u2490 1A3A  
                                                     u2570 2182  
                                                     u2810 1AC8  
                                                     u3530 1580  
                                                     u3370 0EE8  
                                                     u3700 2C98  
                                                     u2740 1D20  
                                                     u2900 1C38  
                                                     u2565 2138  
                                                     u1950 29BE  
                                                     u2590 21A4  
                                                     u2910 1C70  
                                                     u2830 1B44  
                                                     u3550 15E2  
                                                     u2840 1B7E  
                                                     u2905 1C24  
                                                     u3730 2B3A  
                                                     u1970 2A0A  
                                                     u2690 258A  
                                                     u2770 1E88  
                                                     u2930 1C92  
                                                     u2850 1B82  
                                                     u3570 1662  
                                                     u3490 13D6  
                                                     u3707 2C8E  
                                                     u2771 1E86  
                                                     u2931 1C90  
                                                     u2780 1E98  
                                                     u2940 1CA2  
                                                     u2790 1E9E  
                                                     u2950 1CA8  
                                                     u2870 1BBC  
                                                     u3590 1738  
                                                     u2880 1BC0  
                                                     u3690 2C5E  
                                                     u2980 2276  
                                                     _RCIF 007CF5  
                                                     u3837 1F00  
                                                     u3847 1F26  
                                                     u3697 2C54  
                                                     u3857 1F74  
                                                     u3867 1FB8  
                                                     u3877 1FFC  
                                                     u3887 2068  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 009A  
                                                     _atoi 2214  
                                                     _ctoa 2DB0  
                                                     _main 1ECC  
                                                     _dtoa 1848  
                                                     _prec 0093  
                                                     _otoa 207A  
                                                     _nout 008F  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr0h 000FEA  
                                                     fsr1h 000FE2  
                                                     indf0 000FEF  
                                                     fsr2h 000FDA  
                                                     fsr0l 000FE9  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 24D6  
                                                     btemp 007F  
                                                     _utoa 1D0A  
                                                     _xtoa 1AB2  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                            __CFG_OSC$RCIO 000000  
                                        int_to_char@result 00CC  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                 __end_of_interrupt_enable 317E  
                                            __CFG_OSCS$OFF 000000  
                                          __end_of___aodiv 24D6  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 2752  
                                                    STR_10 065D  
                                                    STR_12 065D  
                                                    STR_21 065E  
                                                    STR_30 067F  
                                                    STR_14 0661  
                                                    STR_16 0661  
                                                    STR_32 0685  
                                                    STR_25 0662  
                                                    STR_41 0688  
                                                    STR_34 0685  
                                                    STR_43 0688  
                                                    STR_28 067F  
                                                    STR_53 066A  
                                                    STR_61 0694  
                                                    STR_37 0682  
                                                    STR_46 0669  
                                                    STR_39 0682  
                                                    STR_63 0694  
                                                    STR_48 0669  
                                                    STR_56 0691  
                                                    STR_73 0666  
                                                    STR_81 068E  
                                                    STR_58 0691  
                                                    STR_66 0665  
                                                    STR_83 068E  
                                                    STR_68 0665  
                                                    STR_76 068B  
                                                    STR_93 066E  
                                                    STR_78 068B  
                                                    STR_86 066D  
                                                    STR_88 066D  
                                                    STR_98 0676  
                                                    ?_otoa 001C  
                                                    ?_stoa 000A  
                                          __end_of___lldiv 2B92  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 282E  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 29AC  
                                                    i2l248 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 316E  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 2B92  
                                                    _flags 0095  
                                                    _getch 317E  
                                                    _errno 008D  
                                                    _fputc 29AC  
                                          __end_of_isalpha 2F4C  
                                                    _fputs 2E92  
                                          __end_of_isdigit 3030  
                                          __end_of_read_op 30F6  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0091  
                                                    ctoa@c 001E  
                                                    _putch 31A8  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 2FC0  
                                          __end_of_isspace 2E92  
                                          __end_of_isupper 2FF8  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 2D5A  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 28F0  
                                          __end_of_toupper 2DB0  
                                         ___lodiv@dividend 0001  
                                             _toupper$1830 000D  
                                          __initialization 2ED4  
                                           int_to_char@num 007A  
                                             __end_of_atoi 237A  
                                             __end_of_ctoa 2E06  
                                             __end_of_main 207A  
                                             __end_of_dtoa 1AB2  
                                             __end_of_otoa 2214  
                                             __end_of_stoa 261A  
                                             __end_of_utoa 1ECC  
                                             __end_of_xtoa 1D0A  
                                         __end_of_ReadTime 310C  
                                       int_to_char@the_num 00D6  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00E0  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   STR_101 0697  
                                                   STR_110 0659  
                                                   ?_fputs 000A  
                                                   STR_103 0697  
                                                   STR_112 0659  
                                                   STR_121 065A  
                                                   STR_130 0679  
                                                   STR_106 0671  
                                                   _ADRESH 000FC4  
                                                   STR_108 0671  
                                                   STR_124 069A  
                                                   STR_117 0672  
                                                   STR_133 069D  
                                                   STR_126 069A  
                                                   _ADRESL 000FC3  
                                                   STR_135 069D  
                                                   STR_128 0679  
                                                   STR_137 067C  
                                                   STR_139 067C  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                           __CFG_WDTPS$128 000000  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0002  
                                      i2_Timer0_StartTimer 3198  
                                             vfprintf@cfmt 0078  
                                                ??___aodiv 0011  
                                                ??___aomod 0011  
                                                   ___wmul 3062  
                                                ??___lldiv 000D  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   clear_0 2EFA  
                                  __size_of_UARTSendString 0088  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 3030  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 2D04  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                         __end_of_write_op 30D4  
                                               __accesstop 0080  
                                  __end_of__initialization 2F02  
                                            ___rparam_used 000001  
                                        ?_Timer0_StopTimer 0001  
                                           __pcstackCOMRAM 0001  
                                       ??_Timer0_StopTimer 0001  
                                             __pidataBANK0 31A0  
                                            __end_of_fgetc 2C1C  
                                            __end_of_getch 3188  
                                            __end_of_fputc 2A58  
                                            __end_of_fputs 2ED4  
                                      __end_of_Timer0_Init 30B2  
                                            __end_of_putch 31AE  
                                    ??i2_Timer0_StartTimer 0001  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 0080  
                                                ?_ReadTime 0001  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3120  
                                            _initialize_TX 310C  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                        ?_interrupt_enable 0001  
                                                  ?_strlen 0001  
                                       ??_interrupt_enable 0001  
                                       __size_of_timingISR 002C  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                               ??_ReadTime 0005  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 308C  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 237A  
                                                  ___aomod 261A  
                                                  ___lldiv 2B02  
                                          __size_of___wmul 002A  
                                                  ___lodiv 2752  
                                                  ___lomod 28F0  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 2C1C  
                                                  _address 0097  
                                                  __pcinit 2ED4  
                                                  __ramtop 0600  
                                                  __ptext0 1ECC  
                                                  __ptext1 30B2  
                                                  __ptext2 30D4  
                                                  __ptext3 316E  
                                                  __ptext4 2E06  
                                                  __ptext5 2D04  
                                                  __ptext6 2CA4  
                                                  __ptext7 06A8  
                                                  __ptext8 1AB2  
                                                  __ptext9 2D5A  
                                                ?_write_op 0001  
                                                  _getchar 315C  
                                                _T0CONbits 000FD5  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 2F10  
                                                  _isdigit 2FF8  
                                                  _read_op 30D4  
                                                  _islower 2F88  
                                                  _isspace 2E4E  
                                                  _isupper 2FC0  
                                                  fgetc@fp 0003  
                                                  _time_ms 0089  
                                                  atoi@neg 000E  
                                                  _sprintf 2D04  
                                                  _strncmp 282E  
                                                  _toupper 2D5A  
                                     end_of_initialization 2F02  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                          ___lldiv@divisor 0009  
                                        __end_of_timingISR 0034  
                                          ___lldiv@counter 0011  
                                        __end_of_vfpfcnvrt 1848  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 2CA4  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 3190  
                                       ?_Timer0_StartTimer 0001  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00DA  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 308C  
                                              vfpfcnvrt@vp 0067  
                                __size_of_Timer0_StopTimer 0008  
                                __end_of_Timer0_StartTimer 3198  
                                           __end_of_strlen 3062  
                                      start_initialization 2ED4  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 2F88  
                                              __end_of_pad 2B02  
                                        __size_of_ReadTime 0016  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00E2  
                                     __end_of_UARTSendChar 315C  
                              __end_ofi2_Timer0_StartTimer 31A0  
                                                 ??_strlen 0003  
                                              __pbssCOMRAM 007E  
                                            __pcstackBANK0 00BA  
                                         ___aodiv@dividend 0001  
                                __size_of_interrupt_enable 0010  
                                            ??_int_to_char 007E  
                                                _atoi$1673 0010  
                                                _atoi$1674 0014  
                                                _atoi$1675 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1027 002E  
                                            UARTSendChar@c 0001  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___lldiv 0005  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 00BA  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00DA  
                                          UARTSendString@i 00DE  
                                      __end_of_int_to_char 2E4E  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 0085  
                                                _timingISR 0008  
                                                _vfpfcnvrt 06A8  
                                                _xtoa$1063 002F  
                                                _xtoa$1064 0031  
                                        ___wmul@multiplier 0001  
                                         _Timer0_StopTimer 3188  
                                             _isspace$1710 0007  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 2EE8  
                                                 _ReadTime 30F6  
                                         ??_UARTSendString 00DC  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3148  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___aomod 0138  
                                         __size_of___lldiv 0090  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 00BC  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 2F88  
                                                 __ptext11 2FC0  
                                                 __ptext20 2F4C  
                                                 __ptext12 2F10  
                                                 __ptext21 261A  
                                                 __ptext13 1D0A  
                                                 __ptext30 2E4E  
                                                 __ptext22 237A  
                                                 __ptext14 28F0  
                                                 __ptext31 2FF8  
                                                 __ptext23 2DB0  
                                                 __ptext15 2752  
                                                 __ptext40 3134  
                                                 __ptext32 3062  
                                                 __ptext24 2A58  
                                                 __ptext16 282E  
                                                 __ptext41 3148  
                                                 __ptext33 315C  
                                                 __ptext25 3030  
                                                 __ptext17 24D6  
                                                 __ptext42 3188  
                                                 __ptext34 2B92  
                                                 __ptext26 2E92  
                                                 __ptext18 207A  
                                                 __ptext43 3190  
                                                 __ptext35 317E  
                                                 __ptext27 29AC  
                                                 __ptext19 1848  
                                                 __ptext44 308C  
                                                 __ptext36 310C  
                                                 __ptext28 31A8  
                                                 __ptext45 30F6  
                                                 __ptext37 3120  
                                                 __ptext29 2214  
                                                 __ptext38 2B02  
                                                 __ptext47 3198  
                                                 __ptext39 2C1C  
                                         __size_of_isupper 0038  
                                         _interrupt_enable 316E  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                             _UARTSendChar 3148  
                                              _int_to_char 2E06  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 01AE  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3134  
                                    __end_of_initialize_TX 3120  
                                                stoa@F1152 00E2  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                           read_op@address 0001  
                                                 _ungetbuf 0099  
                                                 _ungetcnt 007E  
                                                 _vfprintf 2CA4  
                                         ___aomod@dividend 0001  
                                                 _write_op 30B2  
                                           _vfpfcnvrt$1078 005B  
                                           _vfpfcnvrt$1079 005D  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 31AE  
                                                sprintf@ap 00CA  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                         ___lldiv@dividend 0005  
                                              _UARTNewLine 3134  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 00C4  
                                                 sprintf@s 00BA  
                                         ___lldiv@quotient 000D  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                             ___aodiv@sign 0012  
                                 __end_of_Timer0_StopTimer 3190  
                                             ___aomod@sign 0012  
