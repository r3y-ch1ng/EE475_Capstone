

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 10 21:45:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F452 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataBANK0
   117  000074                     __pidataBANK0:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for stoa@F1152
   121  000074  28                 	db	40
   122  000075  6E                 	db	110
   123  000076  75                 	db	117
   124  000077  6C                 	db	108
   125  000078  6C                 	db	108
   126  000079  29                 	db	41
   127  00007A  00                 	db	0
   128  0000                     _TRISCbits	set	3988
   129  0000                     _TRISA	set	3986
   130  0000                     _PORTA	set	3968
   131  0000                     _PORTD	set	3971
   132  0000                     _PORTB	set	3969
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _RC0	set	31760
   137  0000                     _RB5	set	31757
   138  0000                     _CCP1CON	set	4029
   139  0000                     _CCPR1L	set	4030
   140  0000                     _PR2	set	4043
   141  0000                     _T2CON	set	4042
   142  0000                     _ADRESL	set	4035
   143  0000                     _ADRESH	set	4036
   144  0000                     _ADCON0	set	4034
   145  0000                     _SSPBUF	set	4041
   146  0000                     _SSPSTATbits	set	4039
   147  0000                     _SSPCON1	set	4038
   148  0000                     _SSPSTAT	set	4039
   149  0000                     _ADCON1	set	4033
   150  0000                     _RCREG1	set	4014
   151  0000                     _TXREG	set	4013
   152  0000                     _RCSTAbits	set	4011
   153  0000                     _RCSTA	set	4011
   154  0000                     _SPBRG	set	4015
   155  0000                     _TXSTAbits	set	4012
   156  0000                     _RCONbits	set	4048
   157  0000                     _GO_nDONE	set	32274
   158  0000                     _RCIF	set	31989
   159  0000                     _TMR2IP	set	31993
   160  0000                     _TMR2IE	set	31977
   161  0000                     _T0CON	set	4053
   162  0000                     _TMR0L	set	4054
   163  0000                     _TMR0H	set	4055
   164  0000                     _T0CONbits	set	4053
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _INTCONbits	set	4082
   167  0000                     _TMR0IE	set	32661
   168  0000                     _TMR0IF	set	32658
   169                           
   170                           	psect	smallconst
   171  000600                     __psmallconst:
   172                           	opt callstack 0
   173  000600  00                 	db	0
   174  000601                     STR_9:
   175  000601  44                 	db	68	;'D'
   176  000602  6F                 	db	111	;'o'
   177  000603  6E                 	db	110	;'n'
   178  000604  65                 	db	101	;'e'
   179  000605  20                 	db	32
   180  000606  72                 	db	114	;'r'
   181  000607  65                 	db	101	;'e'
   182  000608  61                 	db	97	;'a'
   183  000609  64                 	db	100	;'d'
   184  00060A  69                 	db	105	;'i'
   185  00060B  6E                 	db	110	;'n'
   186  00060C  67                 	db	103	;'g'
   187  00060D  20                 	db	32
   188  00060E  66                 	db	102	;'f'
   189  00060F  72                 	db	114	;'r'
   190  000610  6F                 	db	111	;'o'
   191  000611  6D                 	db	109	;'m'
   192  000612  20                 	db	32
   193  000613  6D                 	db	109	;'m'
   194  000614  65                 	db	101	;'e'
   195  000615  6D                 	db	109	;'m'
   196  000616  6F                 	db	111	;'o'
   197  000617  72                 	db	114	;'r'
   198  000618  79                 	db	121	;'y'
   199  000619  2E                 	db	46
   200  00061A  00                 	db	0
   201  00061B                     STR_3:
   202  00061B  54                 	db	84	;'T'
   203  00061C  65                 	db	101	;'e'
   204  00061D  6D                 	db	109	;'m'
   205  00061E  70                 	db	112	;'p'
   206  00061F  65                 	db	101	;'e'
   207  000620  72                 	db	114	;'r'
   208  000621  61                 	db	97	;'a'
   209  000622  74                 	db	116	;'t'
   210  000623  75                 	db	117	;'u'
   211  000624  72                 	db	114	;'r'
   212  000625  65                 	db	101	;'e'
   213  000626  20                 	db	32
   214  000627  61                 	db	97	;'a'
   215  000628  74                 	db	116	;'t'
   216  000629  20                 	db	32
   217  00062A  61                 	db	97	;'a'
   218  00062B  64                 	db	100	;'d'
   219  00062C  64                 	db	100	;'d'
   220  00062D  72                 	db	114	;'r'
   221  00062E  65                 	db	101	;'e'
   222  00062F  73                 	db	115	;'s'
   223  000630  73                 	db	115	;'s'
   224  000631  20                 	db	32
   225  000632  00                 	db	0
   226  000633                     STR_14:
   227  000633  44                 	db	68	;'D'
   228  000634  6F                 	db	111	;'o'
   229  000635  6E                 	db	110	;'n'
   230  000636  65                 	db	101	;'e'
   231  000637  20                 	db	32
   232  000638  77                 	db	119	;'w'
   233  000639  72                 	db	114	;'r'
   234  00063A  69                 	db	105	;'i'
   235  00063B  74                 	db	116	;'t'
   236  00063C  69                 	db	105	;'i'
   237  00063D  6E                 	db	110	;'n'
   238  00063E  67                 	db	103	;'g'
   239  00063F  20                 	db	32
   240  000640  74                 	db	116	;'t'
   241  000641  6F                 	db	111	;'o'
   242  000642  20                 	db	32
   243  000643  6D                 	db	109	;'m'
   244  000644  65                 	db	101	;'e'
   245  000645  6D                 	db	109	;'m'
   246  000646  6F                 	db	111	;'o'
   247  000647  72                 	db	114	;'r'
   248  000648  79                 	db	121	;'y'
   249  000649  2E                 	db	46
   250  00064A  00                 	db	0
   251  00064B                     STR_6:
   252  00064B  54                 	db	84	;'T'
   253  00064C  69                 	db	105	;'i'
   254  00064D  6D                 	db	109	;'m'
   255  00064E  65                 	db	101	;'e'
   256  00064F  20                 	db	32
   257  000650  61                 	db	97	;'a'
   258  000651  74                 	db	116	;'t'
   259  000652  20                 	db	32
   260  000653  61                 	db	97	;'a'
   261  000654  64                 	db	100	;'d'
   262  000655  64                 	db	100	;'d'
   263  000656  72                 	db	114	;'r'
   264  000657  65                 	db	101	;'e'
   265  000658  73                 	db	115	;'s'
   266  000659  73                 	db	115	;'s'
   267  00065A  20                 	db	32
   268  00065B  00                 	db	0
   269  00065C                     STR_11:
   270  00065C  20                 	db	32
   271  00065D  74                 	db	116	;'t'
   272  00065E  6F                 	db	111	;'o'
   273  00065F  20                 	db	32
   274  000660  61                 	db	97	;'a'
   275  000661  64                 	db	100	;'d'
   276  000662  64                 	db	100	;'d'
   277  000663  72                 	db	114	;'r'
   278  000664  65                 	db	101	;'e'
   279  000665  73                 	db	115	;'s'
   280  000666  73                 	db	115	;'s'
   281  000667  20                 	db	32
   282  000668  00                 	db	0
   283  000669                     STR_5:
   284  000669  20                 	db	32
   285  00066A  64                 	db	100	;'d'
   286  00066B  65                 	db	101	;'e'
   287  00066C  67                 	db	103	;'g'
   288  00066D  72                 	db	114	;'r'
   289  00066E  65                 	db	101	;'e'
   290  00066F  65                 	db	101	;'e'
   291  000670  73                 	db	115	;'s'
   292  000671  20                 	db	32
   293  000672  43                 	db	67	;'C'
   294  000673  20                 	db	32
   295  000674  00                 	db	0
   296  000675                     STR_10:
   297  000675  57                 	db	87	;'W'
   298  000676  72                 	db	114	;'r'
   299  000677  69                 	db	105	;'i'
   300  000678  74                 	db	116	;'t'
   301  000679  69                 	db	105	;'i'
   302  00067A  6E                 	db	110	;'n'
   303  00067B  67                 	db	103	;'g'
   304  00067C  20                 	db	32
   305  00067D  00                 	db	0
   306  00067E                     STR_8:
   307  00067E  20                 	db	32
   308  00067F  6D                 	db	109	;'m'
   309  000680  69                 	db	105	;'i'
   310  000681  6E                 	db	110	;'n'
   311  000682  75                 	db	117	;'u'
   312  000683  74                 	db	116	;'t'
   313  000684  65                 	db	101	;'e'
   314  000685  73                 	db	115	;'s'
   315  000686  00                 	db	0
   316  000687                     STR_115:
   317  000687  68                 	db	104	;'h'
   318  000688  68                 	db	104	;'h'
   319  000689  58                 	db	88	;'X'
   320  00068A  00                 	db	0
   321  00068B                     STR_15:
   322  00068B  68                 	db	104	;'h'
   323  00068C  68                 	db	104	;'h'
   324  00068D  64                 	db	100	;'d'
   325  00068E  00                 	db	0
   326  00068F                     STR_19:
   327  00068F  68                 	db	104	;'h'
   328  000690  68                 	db	104	;'h'
   329  000691  69                 	db	105	;'i'
   330  000692  00                 	db	0
   331  000693                     STR_71:
   332  000693  68                 	db	104	;'h'
   333  000694  68                 	db	104	;'h'
   334  000695  6E                 	db	110	;'n'
   335  000696  00                 	db	0
   336  000697                     STR_51:
   337  000697  68                 	db	104	;'h'
   338  000698  68                 	db	104	;'h'
   339  000699  6F                 	db	111	;'o'
   340  00069A  00                 	db	0
   341  00069B                     STR_91:
   342  00069B  68                 	db	104	;'h'
   343  00069C  68                 	db	104	;'h'
   344  00069D  75                 	db	117	;'u'
   345  00069E  00                 	db	0
   346  00069F                     STR_111:
   347  00069F  68                 	db	104	;'h'
   348  0006A0  68                 	db	104	;'h'
   349  0006A1  78                 	db	120	;'x'
   350  0006A2  00                 	db	0
   351  0006A3                     STR_1:
   352  0006A3  25                 	db	37
   353  0006A4  6C                 	db	108	;'l'
   354  0006A5  75                 	db	117	;'u'
   355  0006A6  00                 	db	0
   356  0006A7                     STR_133:
   357  0006A7  6C                 	db	108	;'l'
   358  0006A8  58                 	db	88	;'X'
   359  0006A9  00                 	db	0
   360  0006AA                     STR_142:
   361  0006AA  7A                 	db	122	;'z'
   362  0006AB  58                 	db	88	;'X'
   363  0006AC  00                 	db	0
   364  0006AD                     STR_33:
   365  0006AD  6C                 	db	108	;'l'
   366  0006AE  64                 	db	100	;'d'
   367  0006AF  00                 	db	0
   368  0006B0                     STR_42:
   369  0006B0  7A                 	db	122	;'z'
   370  0006B1  64                 	db	100	;'d'
   371  0006B2  00                 	db	0
   372  0006B3                     STR_37:
   373  0006B3  6C                 	db	108	;'l'
   374  0006B4  69                 	db	105	;'i'
   375  0006B5  00                 	db	0
   376  0006B6                     STR_46:
   377  0006B6  7A                 	db	122	;'z'
   378  0006B7  69                 	db	105	;'i'
   379  0006B8  00                 	db	0
   380  0006B9                     STR_81:
   381  0006B9  6C                 	db	108	;'l'
   382  0006BA  6E                 	db	110	;'n'
   383  0006BB  00                 	db	0
   384  0006BC                     STR_86:
   385  0006BC  7A                 	db	122	;'z'
   386  0006BD  6E                 	db	110	;'n'
   387  0006BE  00                 	db	0
   388  0006BF                     STR_61:
   389  0006BF  6C                 	db	108	;'l'
   390  0006C0  6F                 	db	111	;'o'
   391  0006C1  00                 	db	0
   392  0006C2                     STR_66:
   393  0006C2  7A                 	db	122	;'z'
   394  0006C3  6F                 	db	111	;'o'
   395  0006C4  00                 	db	0
   396  0006C5                     STR_106:
   397  0006C5  7A                 	db	122	;'z'
   398  0006C6  75                 	db	117	;'u'
   399  0006C7  00                 	db	0
   400  0006C8                     STR_129:
   401  0006C8  6C                 	db	108	;'l'
   402  0006C9  78                 	db	120	;'x'
   403  0006CA  00                 	db	0
   404  0006CB                     STR_138:
   405  0006CB  7A                 	db	122	;'z'
   406  0006CC  78                 	db	120	;'x'
   407  0006CD  00                 	db	0
   408  0006CE                     STR_4:
   409  0006CE  3A                 	db	58	;':'
   410  0006CF  20                 	db	32
   411  0006D0  00                 	db	0
   412  0006D1  25                 	db	37
   413  0006D2  64                 	db	100	;'d'
   414  0006D3  00                 	db	0
   415  0000                     
   416                           ; #config settings
   417  0006D4  00                 	db	0	; dummy byte at the end
   418  0000                     
   419                           	psect	cinit
   420  003CC8                     __pcinit:
   421                           	opt callstack 0
   422  003CC8                     start_initialization:
   423                           	opt callstack 0
   424  003CC8                     __initialization:
   425                           	opt callstack 0
   426                           
   427                           ; Initialize objects allocated to BANK0 (7 bytes)
   428                           ; load TBLPTR registers with __pidataBANK0
   429  003CC8  0E74               	movlw	low __pidataBANK0
   430  003CCA  6EF6               	movwf	tblptrl,c
   431  003CCC  0E00               	movlw	high __pidataBANK0
   432  003CCE  6EF7               	movwf	tblptrh,c
   433  003CD0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   434  003CD2  6EF8               	movwf	tblptru,c
   435  003CD4  EE00  F0F6         	lfsr	0,__pdataBANK0
   436  003CD8  EE10 F007          	lfsr	1,7
   437  003CDC                     copy_data0:
   438  003CDC  0009               	tblrd		*+
   439  003CDE  CFF5 FFEE          	movff	tablat,postinc0
   440  003CE2  50E5               	movf	postdec1,w,c
   441  003CE4  50E1               	movf	fsr1l,w,c
   442  003CE6  E1FA               	bnz	copy_data0
   443                           
   444                           ; Clear objects allocated to BANK0 (58 bytes)
   445  003CE8  EE00  F0BC         	lfsr	0,__pbssBANK0
   446  003CEC  0E3A               	movlw	58
   447  003CEE                     clear_0:
   448  003CEE  6AEE               	clrf	postinc0,c
   449  003CF0  06E8               	decf	wreg,f,c
   450  003CF2  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to COMRAM (1 bytes)
   453  003CF4  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   454  003CF6                     end_of_initialization:
   455                           	opt callstack 0
   456  003CF6                     __end_of__initialization:
   457                           	opt callstack 0
   458  003CF6  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   459  003CF8  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   460  003CFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   461  003CFC  6EF8               	movwf	tblptru,c
   462  003CFE  0100               	movlb	0
   463  003D00  EFFF  F011         	goto	_main	;jump to C main() function
   464                           
   465                           	psect	bssCOMRAM
   466  00007E                     __pbssCOMRAM:
   467                           	opt callstack 0
   468  00007E                     _ungetcnt:
   469                           	opt callstack 0
   470  00007E                     	ds	1
   471                           
   472                           	psect	bssBANK0
   473  0000BC                     __pbssBANK0:
   474                           	opt callstack 0
   475  0000BC                     _lcd:
   476                           	opt callstack 0
   477  0000BC                     	ds	5
   478  0000C1                     _time_ms_2:
   479                           	opt callstack 0
   480  0000C1                     	ds	4
   481  0000C5                     _time_ms:
   482                           	opt callstack 0
   483  0000C5                     	ds	4
   484  0000C9                     _errno:
   485                           	opt callstack 0
   486  0000C9                     	ds	2
   487  0000CB                     _nout:
   488                           	opt callstack 0
   489  0000CB                     	ds	2
   490  0000CD                     _width:
   491                           	opt callstack 0
   492  0000CD                     	ds	2
   493  0000CF                     _prec:
   494                           	opt callstack 0
   495  0000CF                     	ds	2
   496  0000D1                     _flags:
   497                           	opt callstack 0
   498  0000D1                     	ds	2
   499  0000D3                     _address:
   500                           	opt callstack 0
   501  0000D3                     	ds	2
   502  0000D5                     	ds	1
   503  0000D6                     _dbuf:
   504                           	opt callstack 0
   505  0000D6                     	ds	32
   506                           
   507                           	psect	dataBANK0
   508  0000F6                     __pdataBANK0:
   509                           	opt callstack 0
   510  0000F6                     stoa@F1152:
   511                           	opt callstack 0
   512  0000F6                     	ds	7
   513                           
   514                           	psect	cstackBANK0
   515  000080                     __pcstackBANK0:
   516                           	opt callstack 0
   517  000080                     ?_sprintf:
   518                           	opt callstack 0
   519  000080                     sprintf@s:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x0
   523  000080                     	ds	2
   524  000082                     sprintf@fmt:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x2
   528  000082                     	ds	8
   529  00008A                     sprintf@f:
   530                           	opt callstack 0
   531                           
   532                           ; 6 bytes @ 0xA
   533  00008A                     	ds	6
   534  000090                     sprintf@ap:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x10
   538  000090                     	ds	2
   539  000092                     int_to_char@result:
   540                           	opt callstack 0
   541                           
   542                           ; 10 bytes @ 0x12
   543  000092                     	ds	10
   544  00009C                     int_to_char@the_num:
   545                           	opt callstack 0
   546                           
   547                           ; 4 bytes @ 0x1C
   548  00009C                     	ds	4
   549  0000A0                     UARTSendString@c:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x20
   553  0000A0                     	ds	2
   554  0000A2                     ??_UARTSendString:
   555                           
   556                           ; 1 bytes @ 0x22
   557  0000A2                     	ds	2
   558  0000A4                     UARTSendString@i:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x24
   562  0000A4                     	ds	2
   563  0000A6                     ??_write_SRAM:
   564  0000A6                     read_SRAM@address:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x26
   568  0000A6                     	ds	2
   569  0000A8                     ??_read_SRAM:
   570  0000A8                     _write_SRAM$2202:
   571                           	opt callstack 0
   572                           
   573                           ; 4 bytes @ 0x28
   574  0000A8                     	ds	2
   575  0000AA                     read_SRAM@stored_temp:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x2A
   579  0000AA                     	ds	2
   580  0000AC                     read_SRAM@time_elapsed:
   581                           	opt callstack 0
   582  0000AC                     _write_SRAM$2203:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x2C
   586  0000AC                     	ds	4
   587  0000B0                     write_SRAM@temperature:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x30
   591  0000B0                     	ds	2
   592  0000B2                     write_SRAM@curr_time:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x32
   596  0000B2                     	ds	2
   597  0000B4                     ??_main:
   598                           
   599                           ; 1 bytes @ 0x34
   600  0000B4                     	ds	2
   601  0000B6                     main@input_address:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x36
   605  0000B6                     	ds	2
   606  0000B8                     main@masterTemp:
   607                           	opt callstack 0
   608                           
   609                           ; 1 bytes @ 0x38
   610  0000B8                     	ds	1
   611  0000B9                     main@temp:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x39
   615  0000B9                     	ds	2
   616  0000BB                     main@input:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x3B
   620  0000BB                     	ds	1
   621                           
   622                           	psect	cstackCOMRAM
   623  000001                     __pcstackCOMRAM:
   624                           	opt callstack 0
   625  000001                     ??_UARTRecieveChar:
   626  000001                     ?_ADC_Read:
   627                           	opt callstack 0
   628  000001                     ?_strlen:
   629                           	opt callstack 0
   630  000001                     ?_isupper:
   631                           	opt callstack 0
   632  000001                     ?_isalpha:
   633                           	opt callstack 0
   634  000001                     ?_isdigit:
   635                           	opt callstack 0
   636  000001                     ?_strncmp:
   637                           	opt callstack 0
   638  000001                     ?_isspace:
   639                           	opt callstack 0
   640  000001                     ?_getch:
   641                           	opt callstack 0
   642  000001                     ?_islower:
   643                           	opt callstack 0
   644  000001                     ?___wmul:
   645                           	opt callstack 0
   646  000001                     ?_ReadTime:
   647                           	opt callstack 0
   648  000001                     ?___fladd:
   649                           	opt callstack 0
   650  000001                     ?___xxtofl:
   651                           	opt callstack 0
   652  000001                     ?___aodiv:
   653                           	opt callstack 0
   654  000001                     ?___aomod:
   655                           	opt callstack 0
   656  000001                     ?___lodiv:
   657                           	opt callstack 0
   658  000001                     ?___lomod:
   659                           	opt callstack 0
   660  000001                     write_op@data:
   661                           	opt callstack 0
   662  000001                     read_op@address:
   663                           	opt callstack 0
   664  000001                     UARTSendChar@c:
   665                           	opt callstack 0
   666  000001                     spiInit@sDataSample:
   667                           	opt callstack 0
   668  000001                     spiWrite@dat:
   669                           	opt callstack 0
   670  000001                     set_duty_cycle@lower_2:
   671                           	opt callstack 0
   672  000001                     initialize_PWM@freq:
   673                           	opt callstack 0
   674  000001                     ___wmul@multiplier:
   675                           	opt callstack 0
   676  000001                     isalpha@c:
   677                           	opt callstack 0
   678  000001                     isdigit@c:
   679                           	opt callstack 0
   680  000001                     isspace@c:
   681                           	opt callstack 0
   682  000001                     isupper@c:
   683                           	opt callstack 0
   684  000001                     fputc@c:
   685                           	opt callstack 0
   686  000001                     strlen@s:
   687                           	opt callstack 0
   688  000001                     strncmp@_l:
   689                           	opt callstack 0
   690  000001                     islower@c:
   691                           	opt callstack 0
   692  000001                     ___fladd@b:
   693                           	opt callstack 0
   694  000001                     ___xxtofl@val:
   695                           	opt callstack 0
   696  000001                     ___aodiv@dividend:
   697                           	opt callstack 0
   698  000001                     ___aomod@dividend:
   699                           	opt callstack 0
   700  000001                     ___lodiv@dividend:
   701                           	opt callstack 0
   702  000001                     ___lomod@dividend:
   703                           	opt callstack 0
   704                           
   705                           ; 8 bytes @ 0x0
   706  000001                     	ds	1
   707  000002                     write_op@address:
   708                           	opt callstack 0
   709  000002                     read_op@result:
   710                           	opt callstack 0
   711  000002                     spiInit@sClockIdle:
   712                           	opt callstack 0
   713  000002                     set_duty_cycle@upper_8:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x1
   717  000002                     	ds	1
   718  000003                     ??_ADC_Read:
   719  000003                     ??_isupper:
   720  000003                     ??_isalpha:
   721  000003                     ??_isdigit:
   722  000003                     ??_isspace:
   723  000003                     ??_islower:
   724  000003                     ?_fgetc:
   725                           	opt callstack 0
   726  000003                     spiInit@sTransmitEdge:
   727                           	opt callstack 0
   728  000003                     set_duty_cycle@mask:
   729                           	opt callstack 0
   730  000003                     ___wmul@multiplicand:
   731                           	opt callstack 0
   732  000003                     fputc@fp:
   733                           	opt callstack 0
   734  000003                     fgetc@fp:
   735                           	opt callstack 0
   736  000003                     strlen@a:
   737                           	opt callstack 0
   738  000003                     strncmp@_r:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x2
   742  000003                     	ds	1
   743  000004                     spiInit@sType:
   744                           	opt callstack 0
   745                           
   746                           ; 1 bytes @ 0x3
   747  000004                     	ds	1
   748  000005                     ??_fputc:
   749  000005                     ??_fgetc:
   750  000005                     ??___xxtofl:
   751  000005                     ?___lldiv:
   752                           	opt callstack 0
   753  000005                     ADC_Read@channel:
   754                           	opt callstack 0
   755  000005                     ___wmul@product:
   756                           	opt callstack 0
   757  000005                     strncmp@n:
   758                           	opt callstack 0
   759  000005                     ___lldiv@dividend:
   760                           	opt callstack 0
   761  000005                     ___fladd@a:
   762                           	opt callstack 0
   763                           
   764                           ; 4 bytes @ 0x4
   765  000005                     	ds	2
   766  000007                     ??_strncmp:
   767  000007                     ?_toupper:
   768                           	opt callstack 0
   769  000007                     _isspace$1804:
   770                           	opt callstack 0
   771  000007                     toupper@c:
   772                           	opt callstack 0
   773                           
   774                           ; 2 bytes @ 0x6
   775  000007                     	ds	1
   776  000008                     ?_atoi:
   777                           	opt callstack 0
   778  000008                     atoi@s:
   779                           	opt callstack 0
   780  000008                     strncmp@l:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x7
   784  000008                     	ds	1
   785  000009                     ??_toupper:
   786  000009                     ??___fladd:
   787  000009                     ___xxtofl@sign:
   788                           	opt callstack 0
   789  000009                     ___lldiv@divisor:
   790                           	opt callstack 0
   791  000009                     ___aodiv@divisor:
   792                           	opt callstack 0
   793  000009                     ___aomod@divisor:
   794                           	opt callstack 0
   795  000009                     ___lodiv@divisor:
   796                           	opt callstack 0
   797  000009                     ___lomod@divisor:
   798                           	opt callstack 0
   799                           
   800                           ; 8 bytes @ 0x8
   801  000009                     	ds	1
   802  00000A                     ??_atoi:
   803  00000A                     ?_stoa:
   804                           	opt callstack 0
   805  00000A                     ___xxtofl@exp:
   806                           	opt callstack 0
   807  00000A                     stoa@fp:
   808                           	opt callstack 0
   809  00000A                     fputs@s:
   810                           	opt callstack 0
   811  00000A                     fgetc@c:
   812                           	opt callstack 0
   813  00000A                     strncmp@r:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x9
   817  00000A                     	ds	1
   818  00000B                     ___xxtofl@arg:
   819                           	opt callstack 0
   820                           
   821                           ; 4 bytes @ 0xA
   822  00000B                     	ds	1
   823  00000C                     stoa@s:
   824                           	opt callstack 0
   825  00000C                     fputs@fp:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0xB
   829  00000C                     	ds	1
   830  00000D                     ___fladd@signs:
   831                           	opt callstack 0
   832  00000D                     _toupper$1924:
   833                           	opt callstack 0
   834  00000D                     ___lldiv@quotient:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0xC
   838  00000D                     	ds	1
   839  00000E                     ??_stoa:
   840  00000E                     ___fladd@aexp:
   841                           	opt callstack 0
   842  00000E                     fputs@c:
   843                           	opt callstack 0
   844  00000E                     atoi@neg:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0xD
   848  00000E                     	ds	1
   849  00000F                     ?___flmul:
   850                           	opt callstack 0
   851  00000F                     ___fladd@bexp:
   852                           	opt callstack 0
   853  00000F                     fputs@i:
   854                           	opt callstack 0
   855  00000F                     ___flmul@b:
   856                           	opt callstack 0
   857  00000F                     stoa@nuls:
   858                           	opt callstack 0
   859                           
   860                           ; 7 bytes @ 0xE
   861  00000F                     	ds	1
   862  000010                     ___fladd@grs:
   863                           	opt callstack 0
   864  000010                     _atoi$1767:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0xF
   868  000010                     	ds	1
   869  000011                     ?_pad:
   870                           	opt callstack 0
   871  000011                     ___lldiv@counter:
   872                           	opt callstack 0
   873  000011                     ___aodiv@counter:
   874                           	opt callstack 0
   875  000011                     ___aomod@counter:
   876                           	opt callstack 0
   877  000011                     ___lomod@counter:
   878                           	opt callstack 0
   879  000011                     pad@fp:
   880                           	opt callstack 0
   881  000011                     ___lodiv@quotient:
   882                           	opt callstack 0
   883                           
   884                           ; 8 bytes @ 0x10
   885  000011                     	ds	1
   886  000012                     ___aodiv@sign:
   887                           	opt callstack 0
   888  000012                     ___aomod@sign:
   889                           	opt callstack 0
   890  000012                     _atoi$1769:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x11
   894  000012                     	ds	1
   895  000013                     ?_abs:
   896                           	opt callstack 0
   897  000013                     pad@buf:
   898                           	opt callstack 0
   899  000013                     abs@a:
   900                           	opt callstack 0
   901  000013                     ___flmul@a:
   902                           	opt callstack 0
   903  000013                     ___aodiv@quotient:
   904                           	opt callstack 0
   905                           
   906                           ; 8 bytes @ 0x12
   907  000013                     	ds	1
   908  000014                     _atoi$1768:
   909                           	opt callstack 0
   910                           
   911                           ; 1 bytes @ 0x13
   912  000014                     	ds	1
   913  000015                     ??_abs:
   914  000015                     pad@p:
   915                           	opt callstack 0
   916  000015                     atoi@n:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x14
   920  000015                     	ds	1
   921  000016                     stoa@i:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0x15
   925  000016                     	ds	1
   926  000017                     ??___flmul:
   927  000017                     ??_pad:
   928                           
   929                           ; 1 bytes @ 0x16
   930  000017                     	ds	1
   931  000018                     pad@i:
   932                           	opt callstack 0
   933  000018                     stoa@w:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x17
   937  000018                     	ds	1
   938  000019                     ___lodiv@counter:
   939                           	opt callstack 0
   940                           
   941                           ; 1 bytes @ 0x18
   942  000019                     	ds	1
   943  00001A                     pad@w:
   944                           	opt callstack 0
   945  00001A                     stoa@cp:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0x19
   949  00001A                     	ds	1
   950  00001B                     ___flmul@sign:
   951                           	opt callstack 0
   952                           
   953                           ; 1 bytes @ 0x1A
   954  00001B                     	ds	1
   955  00001C                     ?_ctoa:
   956                           	opt callstack 0
   957  00001C                     ?_dtoa:
   958                           	opt callstack 0
   959  00001C                     ?_otoa:
   960                           	opt callstack 0
   961  00001C                     ?_utoa:
   962                           	opt callstack 0
   963  00001C                     ?_xtoa:
   964                           	opt callstack 0
   965  00001C                     ctoa@fp:
   966                           	opt callstack 0
   967  00001C                     dtoa@fp:
   968                           	opt callstack 0
   969  00001C                     otoa@fp:
   970                           	opt callstack 0
   971  00001C                     stoa@p:
   972                           	opt callstack 0
   973  00001C                     utoa@fp:
   974                           	opt callstack 0
   975  00001C                     xtoa@fp:
   976                           	opt callstack 0
   977  00001C                     ___flmul@grs:
   978                           	opt callstack 0
   979                           
   980                           ; 4 bytes @ 0x1B
   981  00001C                     	ds	2
   982  00001E                     ctoa@c:
   983                           	opt callstack 0
   984  00001E                     stoa@l:
   985                           	opt callstack 0
   986  00001E                     dtoa@d:
   987                           	opt callstack 0
   988  00001E                     otoa@d:
   989                           	opt callstack 0
   990  00001E                     utoa@d:
   991                           	opt callstack 0
   992  00001E                     xtoa@d:
   993                           	opt callstack 0
   994                           
   995                           ; 8 bytes @ 0x1D
   996  00001E                     	ds	1
   997  00001F                     ctoa@w:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x1E
  1001  00001F                     	ds	1
  1002  000020                     ___flmul@aexp:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x1F
  1006  000020                     	ds	1
  1007  000021                     ___flmul@bexp:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x20
  1011  000021                     	ds	1
  1012  000022                     ___flmul@prod:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x21
  1016  000022                     	ds	4
  1017  000026                     ??_dtoa:
  1018  000026                     ??_otoa:
  1019  000026                     ??_utoa:
  1020  000026                     xtoa@x:
  1021                           	opt callstack 0
  1022  000026                     ___flmul@temp:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x25
  1026  000026                     	ds	1
  1027  000027                     ??_xtoa:
  1028                           
  1029                           ; 1 bytes @ 0x26
  1030  000027                     	ds	1
  1031  000028                     ?___flsub:
  1032                           	opt callstack 0
  1033  000028                     ___flsub@b:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x27
  1037  000028                     	ds	4
  1038  00002C                     ___flsub@a:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x2B
  1042  00002C                     	ds	2
  1043  00002E                     _dtoa$1121:
  1044                           	opt callstack 0
  1045  00002E                     otoa@p:
  1046                           	opt callstack 0
  1047  00002E                     utoa@p:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x2D
  1051  00002E                     	ds	1
  1052  00002F                     _xtoa$1157:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x2E
  1056  00002F                     	ds	1
  1057  000030                     ?_get_temp:
  1058                           	opt callstack 0
  1059  000030                     dtoa@p:
  1060                           	opt callstack 0
  1061  000030                     otoa@t:
  1062                           	opt callstack 0
  1063  000030                     utoa@w:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x2F
  1067  000030                     	ds	1
  1068  000031                     _xtoa$1158:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x30
  1072  000031                     	ds	1
  1073  000032                     dtoa@w:
  1074                           	opt callstack 0
  1075  000032                     otoa@w:
  1076                           	opt callstack 0
  1077  000032                     utoa@n:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 8 bytes @ 0x31
  1081  000032                     	ds	1
  1082  000033                     xtoa@p:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x32
  1086  000033                     	ds	1
  1087  000034                     dtoa@s:
  1088                           	opt callstack 0
  1089  000034                     get_temp@real_voltage:
  1090                           	opt callstack 0
  1091  000034                     otoa@n:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 8 bytes @ 0x33
  1095  000034                     	ds	1
  1096  000035                     xtoa@w:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x34
  1100  000035                     	ds	1
  1101  000036                     dtoa@n:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 8 bytes @ 0x35
  1105  000036                     	ds	1
  1106  000037                     xtoa@n:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 8 bytes @ 0x36
  1110  000037                     	ds	1
  1111  000038                     get_temp@temp:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x37
  1115  000038                     	ds	2
  1116  00003A                     utoa@i:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x39
  1120  00003A                     	ds	2
  1121  00003C                     get_temp@adc_voltage:
  1122                           	opt callstack 0
  1123  00003C                     otoa@i:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x3B
  1127  00003C                     	ds	2
  1128  00003E                     ?___fltol:
  1129                           	opt callstack 0
  1130  00003E                     dtoa@i:
  1131                           	opt callstack 0
  1132  00003E                     ___fltol@f1:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x3D
  1136  00003E                     	ds	1
  1137  00003F                     xtoa@i:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x3E
  1141  00003F                     	ds	2
  1142  000041                     xtoa@c:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x40
  1146  000041                     	ds	1
  1147  000042                     ??___fltol:
  1148                           
  1149                           ; 1 bytes @ 0x41
  1150  000042                     	ds	1
  1151  000043                     ?_vfpfcnvrt:
  1152                           	opt callstack 0
  1153  000043                     vfpfcnvrt@fp:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x42
  1157  000043                     	ds	2
  1158  000045                     vfpfcnvrt@fmt:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x44
  1162  000045                     	ds	1
  1163  000046                     ___fltol@sign1:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x45
  1167  000046                     	ds	1
  1168  000047                     ___fltol@exp1:
  1169                           	opt callstack 0
  1170  000047                     vfpfcnvrt@ap:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x46
  1174  000047                     	ds	2
  1175  000049                     ??_vfpfcnvrt:
  1176                           
  1177                           ; 1 bytes @ 0x48
  1178  000049                     	ds	14
  1179  000057                     vfpfcnvrt@cp:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x56
  1183  000057                     	ds	2
  1184  000059                     vfpfcnvrt@done:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x58
  1188  000059                     	ds	2
  1189  00005B                     _vfpfcnvrt$1172:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x5A
  1193  00005B                     	ds	2
  1194  00005D                     _vfpfcnvrt$1173:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x5C
  1198  00005D                     	ds	2
  1199  00005F                     vfpfcnvrt@ll:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x5E
  1203  00005F                     	ds	8
  1204  000067                     vfpfcnvrt@vp:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x66
  1208  000067                     	ds	2
  1209  000069                     vfpfcnvrt@c:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x68
  1213  000069                     	ds	1
  1214  00006A                     vfpfcnvrt@llu:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x69
  1218  00006A                     	ds	8
  1219  000072                     ?_vfprintf:
  1220                           	opt callstack 0
  1221  000072                     vfprintf@fp:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x71
  1225  000072                     	ds	2
  1226  000074                     vfprintf@fmt:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x73
  1230  000074                     	ds	2
  1231  000076                     vfprintf@ap:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x75
  1235  000076                     	ds	2
  1236  000078                     vfprintf@cfmt:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x77
  1240  000078                     	ds	2
  1241  00007A                     ?_int_to_char:
  1242                           	opt callstack 0
  1243  00007A                     int_to_char@num:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x79
  1247  00007A                     	ds	4
  1248  00007E                     
  1249                           ; 1 bytes @ 0x7D
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 27 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  temp            2   57[BANK0 ] int 
  1260 ;;  input_addres    2   54[BANK0 ] int 
  1261 ;;  input           1   59[BANK0 ] unsigned char 
  1262 ;;  masterTemp      1   56[BANK0 ] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         0       0       0       0       0       0       0
  1273 ;;      Locals:         0       6       0       0       0       0       0
  1274 ;;      Temps:          0       2       0       0       0       0       0
  1275 ;;      Totals:         0       8       0       0       0       0       0
  1276 ;;Total ram usage:        8 bytes
  1277 ;; Hardware stack levels required when called:   12
  1278 ;; This function calls:
  1279 ;;		_Timer0_Init
  1280 ;;		_Timer0_StartTimer
  1281 ;;		_UARTNewLine
  1282 ;;		_UARTRecieveChar
  1283 ;;		_UARTSendString
  1284 ;;		___fltol
  1285 ;;		_get_temp
  1286 ;;		_initialize_PWM
  1287 ;;		_initialize_RX
  1288 ;;		_initialize_TX
  1289 ;;		_int_to_char
  1290 ;;		_interrupt_disable
  1291 ;;		_interrupt_enable
  1292 ;;		_read_SRAM
  1293 ;;		_set_duty_cycle
  1294 ;;		_spiInit
  1295 ;;		_spiWrite
  1296 ;;		_write_SRAM
  1297 ;; This function is called by:
  1298 ;;		Startup code after reset
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text0
  1303  0023FE                     __ptext0:
  1304                           	opt callstack 0
  1305  0023FE                     _main:
  1306                           	opt callstack 0
  1307  0023FE  FFFF               	dw	65535	; assembler added errata NOP
  1308                           
  1309                           ;main.c: 28:   spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
  1310                           
  1311                           ;incstack = 0
  1312  002400  0E00               	movlw	0
  1313  002402  6E01               	movwf	spiInit@sDataSample,c
  1314  002404  0E00               	movlw	0
  1315  002406  6E02               	movwf	spiInit@sClockIdle,c
  1316  002408  0E00               	movlw	0
  1317  00240A  6E03               	movwf	spiInit@sTransmitEdge,c
  1318  00240C  0E20               	movlw	32
  1319  00240E  EC9C  F01F         	call	_spiInit
  1320                           
  1321                           ;main.c: 29:   interrupt_enable();
  1322  002412  ECF0  F01F         	call	_interrupt_enable	;wreg free
  1323                           
  1324                           ;main.c: 30:   TRISCbits.TRISC2 = 0;
  1325  002416  9494               	bcf	3988,2,c	;volatile
  1326                           
  1327                           ;main.c: 31:   TMR2IE = 1;
  1328  002418  829D               	bsf	3997,1,c	;volatile
  1329                           
  1330                           ;main.c: 32:   TMR2IP = 1;
  1331  00241A  829F               	bsf	3999,1,c	;volatile
  1332                           
  1333                           ;main.c: 33:   Timer0_Init();
  1334  00241C  EC56  F01F         	call	_Timer0_Init	;wreg free
  1335                           
  1336                           ;main.c: 34:   Timer0_StartTimer();
  1337  002420  EC32  F000         	call	_Timer0_StartTimer	;wreg free
  1338                           
  1339                           ;main.c: 35:   initialize_TX();
  1340  002424  ECD3  F01F         	call	_initialize_TX	;wreg free
  1341                           
  1342                           ;main.c: 36:   initialize_RX();
  1343  002428  ECDD  F01F         	call	_initialize_RX	;wreg free
  1344                           
  1345                           ;main.c: 37:   TRISCbits.TRISC7 = 1;
  1346  00242C  8E94               	bsf	3988,7,c	;volatile
  1347                           
  1348                           ;main.c: 38:   TRISCbits.TRISC6 = 0;
  1349  00242E  9C94               	bcf	3988,6,c	;volatile
  1350  002430                     l5379:
  1351  002430  FFFF               	dw	65535	; assembler added errata NOP
  1352                           
  1353                           ;main.c: 40:     TRISCbits.TRISC7 = 1;
  1354  002432  8E94               	bsf	3988,7,c	;volatile
  1355                           
  1356                           ;main.c: 41:     char input = '`';
  1357  002434  0E60               	movlw	96
  1358  002436  0100               	movlb	0	; () banked
  1359  002438  6FBB               	movwf	main@input& (0+255),b
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 42:     char masterTemp = get_temp();
  1363  00243A  EC5D  F01A         	call	_get_temp	;wreg free
  1364  00243E  C030  F03E         	movff	?_get_temp,___fltol@f1
  1365  002442  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1366  002446  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1367  00244A  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1368  00244E  ECF3  F019         	call	___fltol	;wreg free
  1369  002452  503E               	movf	?___fltol,w,c
  1370  002454  0100               	movlb	0	; () banked
  1371  002456  6FB8               	movwf	main@masterTemp& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 43:     if ((int) masterTemp > 100) {
  1375  002458  0E64               	movlw	100
  1376  00245A  65B8               	cpfsgt	main@masterTemp& (0+255),b
  1377  00245C  D009               	goto	l5391
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;main.c: 44:       spiWrite(masterTemp);
  1381  00245E  51B8               	movf	main@masterTemp& (0+255),w,b
  1382  002460  EC23  F000         	call	_spiWrite
  1383  002464  D005               	goto	l5391
  1384  002466                     l5389:
  1385  002466  FFFF               	dw	65535	; assembler added errata NOP
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;main.c: 47:      input = UARTRecieveChar();
  1389  002468  EC2B  F01F         	call	_UARTRecieveChar	;wreg free
  1390  00246C  0100               	movlb	0	; () banked
  1391  00246E  6FBB               	movwf	main@input& (0+255),b
  1392  002470                     l5391:
  1393  002470  FFFF               	dw	65535	; assembler added errata NOP
  1394                           
  1395                           ;main.c: 46:     while (input < 'a' || input > 'z') {
  1396  002472  0E60               	movlw	96
  1397  002474  0100               	movlb	0	; () banked
  1398  002476  65BB               	cpfsgt	main@input& (0+255),b
  1399  002478  D7F6               	goto	l5389
  1400                           
  1401                           ; BSR set to: 0
  1402  00247A  0E7B               	movlw	123
  1403  00247C  61BB               	cpfslt	main@input& (0+255),b
  1404  00247E  D7F3               	goto	l5389
  1405  002480  D0AE               	goto	l5449
  1406  002482                     l5395:
  1407  002482  FFFF               	dw	65535	; assembler added errata NOP
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;main.c: 51:       write_SRAM();
  1411  002484  EC02  F013         	call	_write_SRAM	;wreg free
  1412                           
  1413                           ;main.c: 52:       break;
  1414  002488  D7D3               	goto	l5379
  1415  00248A                     l168:
  1416  00248A  FFFF               	dw	65535	; assembler added errata NOP
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 54:       TRISCbits.TRISC7 = 0;
  1420  00248C  9E94               	bcf	3988,7,c	;volatile
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 55:       input = ' ';
  1424  00248E  0E20               	movlw	32
  1425  002490  D004               	goto	L1
  1426  002492                     l5399:
  1427  002492  FFFF               	dw	65535	; assembler added errata NOP
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main.c: 57:         input = UARTRecieveChar();
  1431  002494  EC2B  F01F         	call	_UARTRecieveChar	;wreg free
  1432  002498  0100               	movlb	0	; () banked
  1433  00249A                     L1:
  1434  00249A  FFFF               	dw	65535	; assembler added errata NOP
  1435  00249C  6FBB               	movwf	main@input& (0+255),b
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 56:       while (input < '0' || input > '9') {
  1439  00249E  0E2F               	movlw	47
  1440  0024A0  65BB               	cpfsgt	main@input& (0+255),b
  1441  0024A2  D7F7               	goto	l5399
  1442                           
  1443                           ; BSR set to: 0
  1444  0024A4  0E3A               	movlw	58
  1445  0024A6  61BB               	cpfslt	main@input& (0+255),b
  1446  0024A8  D7F4               	goto	l5399
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 59:       int input_address = input & 0xF;
  1450  0024AA  C0BB  F0B4         	movff	main@input,??_main
  1451  0024AE  0E0F               	movlw	15
  1452  0024B0  17B4               	andwf	??_main& (0+255),f,b
  1453  0024B2  51B4               	movf	??_main& (0+255),w,b
  1454  0024B4  6FB6               	movwf	main@input_address& (0+255),b
  1455  0024B6  6BB7               	clrf	(main@input_address+1)& (0+255),b
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;main.c: 60:       read_SRAM(input_address);
  1459  0024B8  C0B6  F0A6         	movff	main@input_address,read_SRAM@address
  1460  0024BC  C0B7  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1461  0024C0  ECED  F018         	call	_read_SRAM	;wreg free
  1462                           
  1463                           ;main.c: 61:       break;
  1464  0024C4  D7B5               	goto	l5379
  1465  0024C6                     l5409:
  1466  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 63:       interrupt_enable();
  1470  0024C8  ECF0  F01F         	call	_interrupt_enable	;wreg free
  1471                           
  1472                           ;main.c: 64:       interrupt_disable();
  1473  0024CC  EC1C  F000         	call	_interrupt_disable	;wreg free
  1474                           
  1475                           ;main.c: 65:       TMR2IE = 1;
  1476  0024D0  829D               	bsf	3997,1,c	;volatile
  1477                           
  1478                           ;main.c: 66:       TMR2IP = 1;
  1479  0024D2  829F               	bsf	3999,1,c	;volatile
  1480                           
  1481                           ;main.c: 67:       initialize_PWM(0xFF);
  1482  0024D4  0E00               	movlw	0
  1483  0024D6  6E02               	movwf	initialize_PWM@freq+1,c
  1484  0024D8  6801               	setf	initialize_PWM@freq,c
  1485  0024DA  ECA8  F01F         	call	_initialize_PWM	;wreg free
  1486                           
  1487                           ;main.c: 68:       set_duty_cycle(0x00, 0x00);
  1488  0024DE  0E00               	movlw	0
  1489  0024E0  6E01               	movwf	set_duty_cycle@lower_2,c
  1490  0024E2  0E00               	movlw	0
  1491  0024E4  EC7A  F01F         	call	_set_duty_cycle
  1492  0024E8                     l5419:
  1493  0024E8  FFFF               	dw	65535	; assembler added errata NOP
  1494                           
  1495                           ;main.c: 76:         int temp = (int) get_temp();
  1496  0024EA  EC5D  F01A         	call	_get_temp	;wreg free
  1497  0024EE  C030  F03E         	movff	?_get_temp,___fltol@f1
  1498  0024F2  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1499  0024F6  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1500  0024FA  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1501  0024FE  ECF3  F019         	call	___fltol	;wreg free
  1502  002502  C03E  F0B9         	movff	?___fltol,main@temp
  1503  002506  C03F  F0BA         	movff	?___fltol+1,main@temp+1
  1504                           
  1505                           ;main.c: 77:         TRISCbits.TRISC7 = 0;
  1506  00250A  9E94               	bcf	3988,7,c	;volatile
  1507                           
  1508                           ;main.c: 78:         UARTSendString(int_to_char(temp));
  1509  00250C  C0B9  F07A         	movff	main@temp,int_to_char@num
  1510  002510  C0BA  F07B         	movff	main@temp+1,int_to_char@num+1
  1511  002514  0E00               	movlw	0
  1512  002516  BE7B               	btfsc	int_to_char@num+1,7,c
  1513  002518  0EFF               	movlw	-1
  1514  00251A  6E7C               	movwf	int_to_char@num+2,c
  1515  00251C  6E7D               	movwf	int_to_char@num+3,c
  1516  00251E  ECFD  F01D         	call	_int_to_char	;wreg free
  1517  002522  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1518  002526  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1519  00252A  ECB9  F01C         	call	_UARTSendString	;wreg free
  1520                           
  1521                           ;main.c: 79:         UARTNewLine();
  1522  00252E  ECBF  F01F         	call	_UARTNewLine	;wreg free
  1523                           
  1524                           ;main.c: 80:         if (temp < 30) set_duty_cycle(0x00, 0x00);
  1525  002532  0100               	movlb	0	; () banked
  1526  002534  BFBA               	btfsc	(main@temp+1)& (0+255),7,b
  1527  002536  D006               	goto	u5540
  1528  002538  51BA               	movf	(main@temp+1)& (0+255),w,b
  1529  00253A  E10B               	bnz	l5431
  1530  00253C  0E1E               	movlw	30
  1531  00253E  5DB9               	subwf	main@temp& (0+255),w,b
  1532  002540  B0D8               	btfsc	status,0,c
  1533  002542  D007               	goto	l5431
  1534  002544                     u5540:
  1535  002544  FFFF               	dw	65535	; assembler added errata NOP
  1536                           
  1537                           ; BSR set to: 0
  1538  002546  0E00               	movlw	0
  1539  002548  6E01               	movwf	set_duty_cycle@lower_2,c
  1540  00254A  0E00               	movlw	0
  1541  00254C  EC7A  F01F         	call	_set_duty_cycle
  1542  002550  D036               	goto	l5445
  1543  002552                     l5431:
  1544  002552  FFFF               	dw	65535	; assembler added errata NOP
  1545                           
  1546                           ; BSR set to: 0
  1547  002554  BFBA               	btfsc	(main@temp+1)& (0+255),7,b
  1548  002556  D006               	goto	u5550
  1549  002558  51BA               	movf	(main@temp+1)& (0+255),w,b
  1550  00255A  E10B               	bnz	l5435
  1551  00255C  0E32               	movlw	50
  1552  00255E  5DB9               	subwf	main@temp& (0+255),w,b
  1553  002560  B0D8               	btfsc	status,0,c
  1554  002562  D007               	goto	l5435
  1555  002564                     u5550:
  1556  002564  FFFF               	dw	65535	; assembler added errata NOP
  1557                           
  1558                           ; BSR set to: 0
  1559  002566  0E03               	movlw	3
  1560  002568  6E01               	movwf	set_duty_cycle@lower_2,c
  1561  00256A  0E0F               	movlw	15
  1562  00256C  EC7A  F01F         	call	_set_duty_cycle
  1563  002570  D026               	goto	l5445
  1564  002572                     l5435:
  1565  002572  FFFF               	dw	65535	; assembler added errata NOP
  1566                           
  1567                           ; BSR set to: 0
  1568  002574  BFBA               	btfsc	(main@temp+1)& (0+255),7,b
  1569  002576  D006               	goto	u5560
  1570  002578  51BA               	movf	(main@temp+1)& (0+255),w,b
  1571  00257A  E10B               	bnz	l5439
  1572  00257C  0E46               	movlw	70
  1573  00257E  5DB9               	subwf	main@temp& (0+255),w,b
  1574  002580  B0D8               	btfsc	status,0,c
  1575  002582  D007               	goto	l5439
  1576  002584                     u5560:
  1577  002584  FFFF               	dw	65535	; assembler added errata NOP
  1578                           
  1579                           ; BSR set to: 0
  1580  002586  0E03               	movlw	3
  1581  002588  6E01               	movwf	set_duty_cycle@lower_2,c
  1582  00258A  0E13               	movlw	19
  1583  00258C  EC7A  F01F         	call	_set_duty_cycle
  1584  002590  D016               	goto	l5445
  1585  002592                     l5439:
  1586  002592  FFFF               	dw	65535	; assembler added errata NOP
  1587                           
  1588                           ; BSR set to: 0
  1589  002594  BFBA               	btfsc	(main@temp+1)& (0+255),7,b
  1590  002596  D006               	goto	u5570
  1591  002598  51BA               	movf	(main@temp+1)& (0+255),w,b
  1592  00259A  E10B               	bnz	l5443
  1593  00259C  0E64               	movlw	100
  1594  00259E  5DB9               	subwf	main@temp& (0+255),w,b
  1595  0025A0  B0D8               	btfsc	status,0,c
  1596  0025A2  D007               	goto	l5443
  1597  0025A4                     u5570:
  1598  0025A4  FFFF               	dw	65535	; assembler added errata NOP
  1599                           
  1600                           ; BSR set to: 0
  1601  0025A6  0E03               	movlw	3
  1602  0025A8  6E01               	movwf	set_duty_cycle@lower_2,c
  1603  0025AA  0E60               	movlw	96
  1604  0025AC  EC7A  F01F         	call	_set_duty_cycle
  1605  0025B0  D006               	goto	l5445
  1606  0025B2                     l5443:
  1607  0025B2  FFFF               	dw	65535	; assembler added errata NOP
  1608                           
  1609                           ; BSR set to: 0
  1610  0025B4  0E03               	movlw	3
  1611  0025B6  6E01               	movwf	set_duty_cycle@lower_2,c
  1612  0025B8  0E8F               	movlw	143
  1613  0025BA  EC7A  F01F         	call	_set_duty_cycle
  1614  0025BE                     l5445:
  1615  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  1616                           
  1617                           ;main.c: 85:         _delay((unsigned long)((250)*(16000000/4000.0)));
  1618  0025C0  0E04               	movlw	4
  1619  0025C2  0100               	movlb	0	; () banked
  1620  0025C4  6FB5               	movwf	(??_main+1)& (0+255),b
  1621  0025C6  0ECF               	movlw	207
  1622  0025C8  6FB4               	movwf	??_main& (0+255),b
  1623  0025CA  0EA5               	movlw	165
  1624  0025CC                     u5647:
  1625  0025CC  FFFF               	dw	65535	; errata NOP
  1626  0025CE  2EE8               	decfsz	wreg,f,c
  1627  0025D0  D7FD               	bra	u5647
  1628  0025D2  2FB4               	decfsz	??_main& (0+255),f,b
  1629  0025D4  D7FB               	bra	u5647
  1630  0025D6  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1631  0025D8  D7F9               	bra	u5647
  1632  0025DA  F000               	nop	
  1633  0025DC  D785               	goto	l5419
  1634  0025DE                     l5449:
  1635  0025DE  FFFF               	dw	65535	; assembler added errata NOP
  1636                           
  1637                           ; BSR set to: 0
  1638  0025E0  51BB               	movf	main@input& (0+255),w,b
  1639  0025E2  6FB4               	movwf	??_main& (0+255),b
  1640  0025E4  6BB5               	clrf	(??_main+1)& (0+255),b
  1641                           
  1642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 1, Range of values is 0 to 0
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte            4     3 (average)
  1648                           ;	Chosen strategy is simple_byte
  1649  0025E6  51B5               	movf	(??_main+1)& (0+255),w,b
  1650  0025E8  0A00               	xorlw	0	; case 0
  1651  0025EA  A4D8               	btfss	status,2,c
  1652  0025EC  D721               	goto	l5379
  1653                           
  1654                           ; BSR set to: 0
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 3, Range of values is 114 to 120
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte           10     6 (average)
  1660                           ;	Chosen strategy is simple_byte
  1661  0025EE  51B4               	movf	??_main& (0+255),w,b
  1662  0025F0  0A72               	xorlw	114	; case 114
  1663  0025F2  B4D8               	btfsc	status,2,c
  1664  0025F4  D74A               	goto	l168
  1665  0025F6  0A01               	xorlw	1	; case 115
  1666  0025F8  B4D8               	btfsc	status,2,c
  1667  0025FA  D743               	goto	l5395
  1668  0025FC  0A0B               	xorlw	11	; case 120
  1669  0025FE  B4D8               	btfsc	status,2,c
  1670  002600  D762               	goto	l5409
  1671  002602  D716               	goto	l5379
  1672  002604                     __end_of_main:
  1673                           	opt callstack 0
  1674                           
  1675 ;; *************** function _write_SRAM *****************
  1676 ;; Defined at:
  1677 ;;		line 115 in file "main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  curr_time       2   50[BANK0 ] int 
  1682 ;;  temperature     2   48[BANK0 ] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         0       0       0       0       0       0       0
  1693 ;;      Locals:         0      12       0       0       0       0       0
  1694 ;;      Temps:          0       2       0       0       0       0       0
  1695 ;;      Totals:         0      14       0       0       0       0       0
  1696 ;;Total ram usage:       14 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:   11
  1699 ;; This function calls:
  1700 ;;		_ReadTime
  1701 ;;		_Timer0_StartTimer
  1702 ;;		_Timer0_StopTimer
  1703 ;;		_UARTNewLine
  1704 ;;		_UARTSendString
  1705 ;;		___fltol
  1706 ;;		___lldiv
  1707 ;;		_get_temp
  1708 ;;		_int_to_char
  1709 ;;		_write_op
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text1
  1716  002604                     __ptext1:
  1717                           	opt callstack 0
  1718  002604                     _write_SRAM:
  1719                           	opt callstack 0
  1720  002604  FFFF               	dw	65535	; assembler added errata NOP
  1721                           
  1722                           ;main.c: 116:   TRISCbits.TRISC7 = 0;
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;incstack = 0
  1726  002606  9E94               	bcf	3988,7,c	;volatile
  1727                           
  1728                           ;main.c: 117:   int temperature = (int) get_temp();
  1729  002608  EC5D  F01A         	call	_get_temp	;wreg free
  1730  00260C  C030  F03E         	movff	?_get_temp,___fltol@f1
  1731  002610  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1732  002614  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1733  002618  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1734  00261C  ECF3  F019         	call	___fltol	;wreg free
  1735  002620  C03E  F0B0         	movff	?___fltol,write_SRAM@temperature
  1736  002624  C03F  F0B1         	movff	?___fltol+1,write_SRAM@temperature+1
  1737                           
  1738                           ;main.c: 118:   Timer0_StopTimer();
  1739  002628  EC2E  F000         	call	_Timer0_StopTimer	;wreg free
  1740                           
  1741                           ;main.c: 119:   int curr_time = (int) (ReadTime()/60/100/60);
  1742  00262C  0E3C               	movlw	60
  1743  00262E  6E09               	movwf	___lldiv@divisor,c
  1744  002630  0E00               	movlw	0
  1745  002632  6E0A               	movwf	___lldiv@divisor+1,c
  1746  002634  0E00               	movlw	0
  1747  002636  6E0B               	movwf	___lldiv@divisor+2,c
  1748  002638  0E00               	movlw	0
  1749  00263A  6E0C               	movwf	___lldiv@divisor+3,c
  1750  00263C  ECB4  F01F         	call	_ReadTime	;wreg free
  1751  002640  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1752  002644  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1753  002648  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1754  00264C  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1755  002650  EC2C  F01C         	call	___lldiv	;wreg free
  1756  002654  C005  F0A8         	movff	?___lldiv,_write_SRAM$2202
  1757  002658  C006  F0A9         	movff	?___lldiv+1,_write_SRAM$2202+1
  1758  00265C  C007  F0AA         	movff	?___lldiv+2,_write_SRAM$2202+2
  1759  002660  C008  F0AB         	movff	?___lldiv+3,_write_SRAM$2202+3
  1760                           
  1761                           ;main.c: 119:   int curr_time = (int) (ReadTime()/60/100/60);
  1762  002664  0E64               	movlw	100
  1763  002666  6E09               	movwf	___lldiv@divisor,c
  1764  002668  0E00               	movlw	0
  1765  00266A  6E0A               	movwf	___lldiv@divisor+1,c
  1766  00266C  0E00               	movlw	0
  1767  00266E  6E0B               	movwf	___lldiv@divisor+2,c
  1768  002670  0E00               	movlw	0
  1769  002672  6E0C               	movwf	___lldiv@divisor+3,c
  1770  002674  C0A8  F005         	movff	_write_SRAM$2202,___lldiv@dividend
  1771  002678  C0A9  F006         	movff	_write_SRAM$2202+1,___lldiv@dividend+1
  1772  00267C  C0AA  F007         	movff	_write_SRAM$2202+2,___lldiv@dividend+2
  1773  002680  C0AB  F008         	movff	_write_SRAM$2202+3,___lldiv@dividend+3
  1774  002684  EC2C  F01C         	call	___lldiv	;wreg free
  1775  002688  C005  F0AC         	movff	?___lldiv,_write_SRAM$2203
  1776  00268C  C006  F0AD         	movff	?___lldiv+1,_write_SRAM$2203+1
  1777  002690  C007  F0AE         	movff	?___lldiv+2,_write_SRAM$2203+2
  1778  002694  C008  F0AF         	movff	?___lldiv+3,_write_SRAM$2203+3
  1779                           
  1780                           ;main.c: 119:   int curr_time = (int) (ReadTime()/60/100/60);
  1781  002698  C0AC  F005         	movff	_write_SRAM$2203,___lldiv@dividend
  1782  00269C  C0AD  F006         	movff	_write_SRAM$2203+1,___lldiv@dividend+1
  1783  0026A0  C0AE  F007         	movff	_write_SRAM$2203+2,___lldiv@dividend+2
  1784  0026A4  C0AF  F008         	movff	_write_SRAM$2203+3,___lldiv@dividend+3
  1785  0026A8  0E3C               	movlw	60
  1786  0026AA  6E09               	movwf	___lldiv@divisor,c
  1787  0026AC  0E00               	movlw	0
  1788  0026AE  6E0A               	movwf	___lldiv@divisor+1,c
  1789  0026B0  0E00               	movlw	0
  1790  0026B2  6E0B               	movwf	___lldiv@divisor+2,c
  1791  0026B4  0E00               	movlw	0
  1792  0026B6  6E0C               	movwf	___lldiv@divisor+3,c
  1793  0026B8  EC2C  F01C         	call	___lldiv	;wreg free
  1794  0026BC  C005  F0B2         	movff	?___lldiv,write_SRAM@curr_time
  1795  0026C0  C006  F0B3         	movff	?___lldiv+1,write_SRAM@curr_time+1
  1796                           
  1797                           ;main.c: 120:   Timer0_StartTimer();
  1798  0026C4  EC32  F000         	call	_Timer0_StartTimer	;wreg free
  1799                           
  1800                           ;main.c: 121:   UARTSendString("Writing ");
  1801  0026C8  0E75               	movlw	low STR_10
  1802  0026CA  0100               	movlb	0	; () banked
  1803  0026CC  6FA0               	movwf	UARTSendString@c& (0+255),b
  1804  0026CE  0E06               	movlw	high STR_10
  1805  0026D0  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1806  0026D2  ECB9  F01C         	call	_UARTSendString	;wreg free
  1807                           
  1808                           ;main.c: 122:   UARTSendString(int_to_char(temperature));
  1809  0026D6  C0B0  F07A         	movff	write_SRAM@temperature,int_to_char@num
  1810  0026DA  C0B1  F07B         	movff	write_SRAM@temperature+1,int_to_char@num+1
  1811  0026DE  0E00               	movlw	0
  1812  0026E0  BE7B               	btfsc	int_to_char@num+1,7,c
  1813  0026E2  0EFF               	movlw	-1
  1814  0026E4  6E7C               	movwf	int_to_char@num+2,c
  1815  0026E6  6E7D               	movwf	int_to_char@num+3,c
  1816  0026E8  ECFD  F01D         	call	_int_to_char	;wreg free
  1817  0026EC  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1818  0026F0  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1819  0026F4  ECB9  F01C         	call	_UARTSendString	;wreg free
  1820                           
  1821                           ;main.c: 123:   UARTSendString(" to address ");
  1822  0026F8  0E5C               	movlw	low STR_11
  1823  0026FA  0100               	movlb	0	; () banked
  1824  0026FC  6FA0               	movwf	UARTSendString@c& (0+255),b
  1825  0026FE  0E06               	movlw	high STR_11
  1826  002700  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1827  002702  ECB9  F01C         	call	_UARTSendString	;wreg free
  1828                           
  1829                           ;main.c: 124:   UARTSendString(int_to_char(address));
  1830  002706  C0D3  F07A         	movff	_address,int_to_char@num
  1831  00270A  C0D4  F07B         	movff	_address+1,int_to_char@num+1
  1832  00270E  0E00               	movlw	0
  1833  002710  BE7B               	btfsc	int_to_char@num+1,7,c
  1834  002712  0EFF               	movlw	-1
  1835  002714  6E7C               	movwf	int_to_char@num+2,c
  1836  002716  6E7D               	movwf	int_to_char@num+3,c
  1837  002718  ECFD  F01D         	call	_int_to_char	;wreg free
  1838  00271C  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1839  002720  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1840  002724  ECB9  F01C         	call	_UARTSendString	;wreg free
  1841                           
  1842                           ;main.c: 125:   UARTNewLine();
  1843  002728  ECBF  F01F         	call	_UARTNewLine	;wreg free
  1844                           
  1845                           ;main.c: 126:   write_op(address, temperature);
  1846  00272C  C0B0  F001         	movff	write_SRAM@temperature,write_op@data
  1847  002730  0100               	movlb	0	; () banked
  1848  002732  51D3               	movf	_address& (0+255),w,b
  1849  002734  EC69  F01F         	call	_write_op
  1850                           
  1851                           ;main.c: 127:   UARTSendString("Writing ");
  1852  002738  0E75               	movlw	low STR_10
  1853  00273A  0100               	movlb	0	; () banked
  1854  00273C  6FA0               	movwf	UARTSendString@c& (0+255),b
  1855  00273E  0E06               	movlw	high STR_10
  1856  002740  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1857  002742  ECB9  F01C         	call	_UARTSendString	;wreg free
  1858                           
  1859                           ;main.c: 128:   UARTSendString(int_to_char(curr_time));
  1860  002746  C0B2  F07A         	movff	write_SRAM@curr_time,int_to_char@num
  1861  00274A  C0B3  F07B         	movff	write_SRAM@curr_time+1,int_to_char@num+1
  1862  00274E  0E00               	movlw	0
  1863  002750  BE7B               	btfsc	int_to_char@num+1,7,c
  1864  002752  0EFF               	movlw	-1
  1865  002754  6E7C               	movwf	int_to_char@num+2,c
  1866  002756  6E7D               	movwf	int_to_char@num+3,c
  1867  002758  ECFD  F01D         	call	_int_to_char	;wreg free
  1868  00275C  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1869  002760  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1870  002764  ECB9  F01C         	call	_UARTSendString	;wreg free
  1871                           
  1872                           ;main.c: 129:   UARTSendString(" to address ");
  1873  002768  0E5C               	movlw	low STR_11
  1874  00276A  0100               	movlb	0	; () banked
  1875  00276C  6FA0               	movwf	UARTSendString@c& (0+255),b
  1876  00276E  0E06               	movlw	high STR_11
  1877  002770  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1878  002772  ECB9  F01C         	call	_UARTSendString	;wreg free
  1879                           
  1880                           ;main.c: 130:   UARTSendString(int_to_char(address + 1));
  1881  002776  0E01               	movlw	1
  1882  002778  0100               	movlb	0	; () banked
  1883  00277A  25D3               	addwf	_address& (0+255),w,b
  1884  00277C  6FA6               	movwf	??_write_SRAM& (0+255),b
  1885  00277E  0E00               	movlw	0
  1886  002780  21D4               	addwfc	(_address+1)& (0+255),w,b
  1887  002782  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1888  002784  C0A6  F07A         	movff	??_write_SRAM,int_to_char@num
  1889  002788  C0A7  F07B         	movff	??_write_SRAM+1,int_to_char@num+1
  1890  00278C  0E00               	movlw	0
  1891  00278E  BE7B               	btfsc	int_to_char@num+1,7,c
  1892  002790  0EFF               	movlw	-1
  1893  002792  6E7C               	movwf	int_to_char@num+2,c
  1894  002794  6E7D               	movwf	int_to_char@num+3,c
  1895  002796  ECFD  F01D         	call	_int_to_char	;wreg free
  1896  00279A  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1897  00279E  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1898  0027A2  ECB9  F01C         	call	_UARTSendString	;wreg free
  1899                           
  1900                           ;main.c: 131:   UARTNewLine();
  1901  0027A6  ECBF  F01F         	call	_UARTNewLine	;wreg free
  1902                           
  1903                           ;main.c: 132:   write_op(address + 1, curr_time);
  1904  0027AA  C0B2  F001         	movff	write_SRAM@curr_time,write_op@data
  1905  0027AE  0100               	movlb	0	; () banked
  1906  0027B0  29D3               	incf	_address& (0+255),w,b
  1907  0027B2  EC69  F01F         	call	_write_op
  1908                           
  1909                           ;main.c: 133:   address = (address + 2) % 16;
  1910  0027B6  0E02               	movlw	2
  1911  0027B8  0100               	movlb	0	; () banked
  1912  0027BA  25D3               	addwf	_address& (0+255),w,b
  1913  0027BC  6FA6               	movwf	??_write_SRAM& (0+255),b
  1914  0027BE  0E00               	movlw	0
  1915  0027C0  21D4               	addwfc	(_address+1)& (0+255),w,b
  1916  0027C2  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1917  0027C4  0E0F               	movlw	15
  1918  0027C6  15A6               	andwf	??_write_SRAM& (0+255),w,b
  1919  0027C8  6FD3               	movwf	_address& (0+255),b
  1920  0027CA  6BD4               	clrf	(_address+1)& (0+255),b
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 134:   UARTSendString("Done writing to memory.");
  1924  0027CC  0E33               	movlw	low STR_14
  1925  0027CE  6FA0               	movwf	UARTSendString@c& (0+255),b
  1926  0027D0  0E06               	movlw	high STR_14
  1927  0027D2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1928  0027D4  ECB9  F01C         	call	_UARTSendString	;wreg free
  1929                           
  1930                           ;main.c: 135:   UARTNewLine();
  1931  0027D8  ECBF  F01F         	call	_UARTNewLine	;wreg free
  1932                           
  1933                           ;main.c: 136:   UARTNewLine();
  1934  0027DC  ECBF  F01F         	call	_UARTNewLine	;wreg free
  1935  0027E0  0012               	return		;funcret
  1936  0027E2  FFFF               	dw	65535	; errata NOP
  1937  0027E4                     __end_of_write_SRAM:
  1938                           	opt callstack 0
  1939                           
  1940 ;; *************** function _write_op *****************
  1941 ;; Defined at:
  1942 ;;		line 9 in file "drive_memory.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  address         1    wreg     unsigned char 
  1945 ;;  data            1    0[COMRAM] unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  address         1    1[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1957 ;;      Params:         1       0       0       0       0       0       0
  1958 ;;      Locals:         1       0       0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    2
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_write_SRAM
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text2
  1972  003ED2                     __ptext2:
  1973                           	opt callstack 0
  1974  003ED2                     _write_op:
  1975                           	opt callstack 0
  1976  003ED2  FFFF               	dw	65535	; assembler added errata NOP
  1977                           
  1978                           ;incstack = 0
  1979                           ;write_op@address stored from wreg
  1980  003ED4  6E02               	movwf	write_op@address,c
  1981                           
  1982                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1983  003ED6  9094               	bcf	3988,0,c	;volatile
  1984                           
  1985                           ;drive_memory.c: 12:   TRISD = 0x00;
  1986  003ED8  0E00               	movlw	0
  1987  003EDA  6E95               	movwf	3989,c	;volatile
  1988                           
  1989                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1990  003EDC  0EC0               	movlw	192
  1991  003EDE  1693               	andwf	3987,f,c	;volatile
  1992                           
  1993                           ;drive_memory.c: 14:   PORTB = address;
  1994  003EE0  C002  FF81         	movff	write_op@address,3969	;volatile
  1995                           
  1996                           ;drive_memory.c: 15:   RB5 = 0;
  1997  003EE4  9A81               	bcf	3969,5,c	;volatile
  1998                           
  1999                           ;drive_memory.c: 17:   RC0 = 1;
  2000  003EE6  8082               	bsf	3970,0,c	;volatile
  2001                           
  2002                           ;drive_memory.c: 21:   RC0 = 0;
  2003  003EE8  9082               	bcf	3970,0,c	;volatile
  2004                           
  2005                           ;drive_memory.c: 23:   PORTD = data;
  2006                           
  2007                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  2008  003EEA  C001  FF83         	movff	write_op@data,3971	;volatile
  2009                           
  2010                           ;drive_memory.c: 26:   RC0 = 1;
  2011                           
  2012                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  2013  003EEE  8082               	bsf	3970,0,c	;volatile
  2014  003EF0  0012               	return		;funcret
  2015  003EF2  FFFF               	dw	65535	; errata NOP
  2016  003EF4                     __end_of_write_op:
  2017                           	opt callstack 0
  2018                           
  2019 ;; *************** function _get_temp *****************
  2020 ;; Defined at:
  2021 ;;		line 10 in file "temp_adc.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  temp            4   55[COMRAM] float 
  2026 ;;  real_voltage    4   51[COMRAM] float 
  2027 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  4   47[COMRAM] float 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2037 ;;      Params:         4       0       0       0       0       0       0
  2038 ;;      Locals:        10       0       0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0
  2040 ;;      Totals:        14       0       0       0       0       0       0
  2041 ;;Total ram usage:       14 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    4
  2044 ;; This function calls:
  2045 ;;		_ADC_Init
  2046 ;;		_ADC_Read
  2047 ;;		___flmul
  2048 ;;		___flsub
  2049 ;;		___xxtofl
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;;		_write_SRAM
  2053 ;;		_measureTemp
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text3
  2058  0034BA                     __ptext3:
  2059                           	opt callstack 0
  2060  0034BA                     _get_temp:
  2061                           	opt callstack 0
  2062  0034BA  FFFF               	dw	65535	; assembler added errata NOP
  2063                           
  2064                           ;temp_adc.c: 11:   ADC_Init();
  2065                           
  2066                           ;incstack = 0
  2067  0034BC  ECF8  F01F         	call	_ADC_Init	;wreg free
  2068                           
  2069                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  2070  0034C0  90C1               	bcf	4033,0,c	;volatile
  2071                           
  2072                           ;temp_adc.c: 13:   TRISA |= 0x01;
  2073  0034C2  8092               	bsf	3986,0,c	;volatile
  2074                           
  2075                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  2076  0034C4  0E00               	movlw	0
  2077  0034C6  ECAE  F01D         	call	_ADC_Read
  2078  0034CA  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  2079  0034CE  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  2080                           
  2081                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  2082  0034D2  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  2083  0034D6  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  2084  0034DA  6A03               	clrf	___xxtofl@val+2,c
  2085  0034DC  6A04               	clrf	___xxtofl@val+3,c
  2086  0034DE  0E00               	movlw	0
  2087  0034E0  EC53  F016         	call	___xxtofl
  2088  0034E4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2089  0034E8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2090  0034EC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2091  0034F0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2092  0034F4  0E9F               	movlw	159
  2093  0034F6  6E13               	movwf	___flmul@a,c
  2094  0034F8  0EAB               	movlw	171
  2095  0034FA  6E14               	movwf	___flmul@a+1,c
  2096  0034FC  0EAD               	movlw	173
  2097  0034FE  6E15               	movwf	___flmul@a+2,c
  2098  003500  0E3B               	movlw	59
  2099  003502  6E16               	movwf	___flmul@a+3,c
  2100  003504  EC3B  F00C         	call	___flmul	;wreg free
  2101  003508  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  2102  00350C  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  2103  003510  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  2104  003514  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  2105                           
  2106                           ;temp_adc.c: 17:   float temp = 200 - 170.0 / 5.0 * real_voltage;
  2107  003518  0E00               	movlw	0
  2108  00351A  6E28               	movwf	___flsub@b,c
  2109  00351C  0E00               	movlw	0
  2110  00351E  6E29               	movwf	___flsub@b+1,c
  2111  003520  0E48               	movlw	72
  2112  003522  6E2A               	movwf	___flsub@b+2,c
  2113  003524  0E43               	movlw	67
  2114  003526  6E2B               	movwf	___flsub@b+3,c
  2115  003528  0E00               	movlw	0
  2116  00352A  6E13               	movwf	___flmul@a,c
  2117  00352C  0E00               	movlw	0
  2118  00352E  6E14               	movwf	___flmul@a+1,c
  2119  003530  0E08               	movlw	8
  2120  003532  6E15               	movwf	___flmul@a+2,c
  2121  003534  0E42               	movlw	66
  2122  003536  6E16               	movwf	___flmul@a+3,c
  2123  003538  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  2124  00353C  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  2125  003540  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  2126  003544  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  2127  003548  EC3B  F00C         	call	___flmul	;wreg free
  2128  00354C  C00F  F02C         	movff	?___flmul,___flsub@a
  2129  003550  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2130  003554  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2131  003558  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2132  00355C  ECD8  F01D         	call	___flsub	;wreg free
  2133  003560  C028  F038         	movff	?___flsub,get_temp@temp
  2134  003564  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  2135  003568  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  2136  00356C  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  2137                           
  2138                           ;temp_adc.c: 18:   return temp;
  2139  003570  C038  F030         	movff	get_temp@temp,?_get_temp
  2140  003574  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  2141  003578  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  2142  00357C  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  2143  003580  0012               	return		;funcret
  2144  003582  FFFF               	dw	65535	; errata NOP
  2145  003584                     __end_of_get_temp:
  2146                           	opt callstack 0
  2147                           
  2148 ;; *************** function ___xxtofl *****************
  2149 ;; Defined at:
  2150 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  sign            1    wreg     unsigned char 
  2153 ;;  val             4    0[COMRAM] long 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  sign            1    8[COMRAM] unsigned char 
  2156 ;;  arg             4   10[COMRAM] unsigned long 
  2157 ;;  exp             1    9[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  4    0[COMRAM] unsigned char 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2167 ;;      Params:         4       0       0       0       0       0       0
  2168 ;;      Locals:         6       0       0       0       0       0       0
  2169 ;;      Temps:          4       0       0       0       0       0       0
  2170 ;;      Totals:        14       0       0       0       0       0       0
  2171 ;;Total ram usage:       14 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    2
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_get_temp
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text4
  2182  002CA6                     __ptext4:
  2183                           	opt callstack 0
  2184  002CA6                     ___xxtofl:
  2185                           	opt callstack 0
  2186  002CA6  FFFF               	dw	65535	; assembler added errata NOP
  2187                           
  2188                           ;incstack = 0
  2189                           ;___xxtofl@sign stored from wreg
  2190  002CA8  6E09               	movwf	___xxtofl@sign,c
  2191  002CAA  5009               	movf	___xxtofl@sign,w,c
  2192  002CAC  A4D8               	btfss	status,2,c
  2193  002CAE  AE04               	btfss	___xxtofl@val+3,7,c
  2194  002CB0  D01A               	goto	l1294
  2195  002CB2  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2196  002CB6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2197  002CBA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2198  002CBE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2199  002CC2  1E05               	comf	??___xxtofl,f,c
  2200  002CC4  1E06               	comf	??___xxtofl+1,f,c
  2201  002CC6  1E07               	comf	??___xxtofl+2,f,c
  2202  002CC8  1E08               	comf	??___xxtofl+3,f,c
  2203  002CCA  2A05               	incf	??___xxtofl,f,c
  2204  002CCC  0E00               	movlw	0
  2205  002CCE  2206               	addwfc	??___xxtofl+1,f,c
  2206  002CD0  2207               	addwfc	??___xxtofl+2,f,c
  2207  002CD2  2208               	addwfc	??___xxtofl+3,f,c
  2208  002CD4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2209  002CD8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2210  002CDC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2211  002CE0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2212  002CE4  D009               	goto	l4873
  2213  002CE6                     l1294:
  2214  002CE6  FFFF               	dw	65535	; assembler added errata NOP
  2215  002CE8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2216  002CEC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2217  002CF0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2218  002CF4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2219  002CF8                     l4873:
  2220  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  2221  002CFA  5001               	movf	___xxtofl@val,w,c
  2222  002CFC  1002               	iorwf	___xxtofl@val+1,w,c
  2223  002CFE  1003               	iorwf	___xxtofl@val+2,w,c
  2224  002D00  1004               	iorwf	___xxtofl@val+3,w,c
  2225  002D02  A4D8               	btfss	status,2,c
  2226  002D04  D009               	goto	l4879
  2227  002D06  0E00               	movlw	0
  2228  002D08  6E01               	movwf	?___xxtofl,c
  2229  002D0A  0E00               	movlw	0
  2230  002D0C  6E02               	movwf	?___xxtofl+1,c
  2231  002D0E  0E00               	movlw	0
  2232  002D10  6E03               	movwf	?___xxtofl+2,c
  2233  002D12  0E00               	movlw	0
  2234  002D14  6E04               	movwf	?___xxtofl+3,c
  2235  002D16  D072               	goto	l1297
  2236  002D18                     l4879:
  2237  002D18  FFFF               	dw	65535	; assembler added errata NOP
  2238  002D1A  0E96               	movlw	150
  2239  002D1C  6E0A               	movwf	___xxtofl@exp,c
  2240  002D1E  D007               	goto	l4883
  2241  002D20                     l4881:
  2242  002D20  FFFF               	dw	65535	; assembler added errata NOP
  2243  002D22  2A0A               	incf	___xxtofl@exp,f,c
  2244  002D24  90D8               	bcf	status,0,c
  2245  002D26  320E               	rrcf	___xxtofl@arg+3,f,c
  2246  002D28  320D               	rrcf	___xxtofl@arg+2,f,c
  2247  002D2A  320C               	rrcf	___xxtofl@arg+1,f,c
  2248  002D2C  320B               	rrcf	___xxtofl@arg,f,c
  2249  002D2E                     l4883:
  2250  002D2E  FFFF               	dw	65535	; assembler added errata NOP
  2251  002D30  0E00               	movlw	0
  2252  002D32  140B               	andwf	___xxtofl@arg,w,c
  2253  002D34  6E05               	movwf	??___xxtofl& (0+255),c
  2254  002D36  0E00               	movlw	0
  2255  002D38  140C               	andwf	___xxtofl@arg+1,w,c
  2256  002D3A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2257  002D3C  0E00               	movlw	0
  2258  002D3E  140D               	andwf	___xxtofl@arg+2,w,c
  2259  002D40  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2260  002D42  0EFE               	movlw	254
  2261  002D44  140E               	andwf	___xxtofl@arg+3,w,c
  2262  002D46  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2263  002D48  5005               	movf	??___xxtofl,w,c
  2264  002D4A  1006               	iorwf	??___xxtofl+1,w,c
  2265  002D4C  1007               	iorwf	??___xxtofl+2,w,c
  2266  002D4E  1008               	iorwf	??___xxtofl+3,w,c
  2267  002D50  B4D8               	btfsc	status,2,c
  2268  002D52  D00E               	goto	l1301
  2269  002D54  D7E5               	goto	l4881
  2270  002D56                     l4885:
  2271  002D56  FFFF               	dw	65535	; assembler added errata NOP
  2272  002D58  2A0A               	incf	___xxtofl@exp,f,c
  2273  002D5A  0E01               	movlw	1
  2274  002D5C  260B               	addwf	___xxtofl@arg,f,c
  2275  002D5E  0E00               	movlw	0
  2276  002D60  220C               	addwfc	___xxtofl@arg+1,f,c
  2277  002D62  220D               	addwfc	___xxtofl@arg+2,f,c
  2278  002D64  220E               	addwfc	___xxtofl@arg+3,f,c
  2279  002D66  90D8               	bcf	status,0,c
  2280  002D68  320E               	rrcf	___xxtofl@arg+3,f,c
  2281  002D6A  320D               	rrcf	___xxtofl@arg+2,f,c
  2282  002D6C  320C               	rrcf	___xxtofl@arg+1,f,c
  2283  002D6E  320B               	rrcf	___xxtofl@arg,f,c
  2284  002D70                     l1301:
  2285  002D70  FFFF               	dw	65535	; assembler added errata NOP
  2286  002D72  0E00               	movlw	0
  2287  002D74  140B               	andwf	___xxtofl@arg,w,c
  2288  002D76  6E05               	movwf	??___xxtofl& (0+255),c
  2289  002D78  0E00               	movlw	0
  2290  002D7A  140C               	andwf	___xxtofl@arg+1,w,c
  2291  002D7C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2292  002D7E  0E00               	movlw	0
  2293  002D80  140D               	andwf	___xxtofl@arg+2,w,c
  2294  002D82  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2295  002D84  0EFF               	movlw	255
  2296  002D86  140E               	andwf	___xxtofl@arg+3,w,c
  2297  002D88  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2298  002D8A  5005               	movf	??___xxtofl,w,c
  2299  002D8C  1006               	iorwf	??___xxtofl+1,w,c
  2300  002D8E  1007               	iorwf	??___xxtofl+2,w,c
  2301  002D90  1008               	iorwf	??___xxtofl+3,w,c
  2302  002D92  B4D8               	btfsc	status,2,c
  2303  002D94  D008               	goto	l4893
  2304  002D96  D7DF               	goto	l4885
  2305  002D98                     l4891:
  2306  002D98  FFFF               	dw	65535	; assembler added errata NOP
  2307  002D9A  060A               	decf	___xxtofl@exp,f,c
  2308  002D9C  90D8               	bcf	status,0,c
  2309  002D9E  360B               	rlcf	___xxtofl@arg,f,c
  2310  002DA0  360C               	rlcf	___xxtofl@arg+1,f,c
  2311  002DA2  360D               	rlcf	___xxtofl@arg+2,f,c
  2312  002DA4  360E               	rlcf	___xxtofl@arg+3,f,c
  2313  002DA6                     l4893:
  2314  002DA6  FFFF               	dw	65535	; assembler added errata NOP
  2315  002DA8  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2316  002DAA  D003               	goto	u5200
  2317  002DAC  0E02               	movlw	2
  2318  002DAE  600A               	cpfslt	___xxtofl@exp,c
  2319  002DB0  D7F3               	goto	l4891
  2320  002DB2                     u5200:
  2321  002DB2  FFFF               	dw	65535	; assembler added errata NOP
  2322  002DB4  A00A               	btfss	___xxtofl@exp,0,c
  2323  002DB6  9E0D               	bcf	___xxtofl@arg+2,7,c
  2324  002DB8  90D8               	bcf	status,0,c
  2325  002DBA  320A               	rrcf	___xxtofl@exp,f,c
  2326  002DBC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2327  002DC0  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2328  002DC2  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2329  002DC4  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2330  002DC6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2331  002DCA  6A07               	clrf	??___xxtofl+2,c
  2332  002DCC  6A06               	clrf	??___xxtofl+1,c
  2333  002DCE  6A05               	clrf	??___xxtofl,c
  2334  002DD0  5005               	movf	??___xxtofl,w,c
  2335  002DD2  120B               	iorwf	___xxtofl@arg,f,c
  2336  002DD4  5006               	movf	??___xxtofl+1,w,c
  2337  002DD6  120C               	iorwf	___xxtofl@arg+1,f,c
  2338  002DD8  5007               	movf	??___xxtofl+2,w,c
  2339  002DDA  120D               	iorwf	___xxtofl@arg+2,f,c
  2340  002DDC  5008               	movf	??___xxtofl+3,w,c
  2341  002DDE  120E               	iorwf	___xxtofl@arg+3,f,c
  2342  002DE0  5009               	movf	___xxtofl@sign,w,c
  2343  002DE2  A4D8               	btfss	status,2,c
  2344  002DE4  AE04               	btfss	___xxtofl@val+3,7,c
  2345  002DE6  D001               	goto	l4909
  2346  002DE8  8E0E               	bsf	___xxtofl@arg+3,7,c
  2347  002DEA                     l4909:
  2348  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  2349  002DEC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2350  002DF0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2351  002DF4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2352  002DF8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2353  002DFC                     l1297:
  2354  002DFC  FFFF               	dw	65535	; assembler added errata NOP
  2355  002DFE  0012               	return		;funcret
  2356  002E00  FFFF               	dw	65535	; errata NOP
  2357  002E02                     __end_of___xxtofl:
  2358                           	opt callstack 0
  2359                           
  2360 ;; *************** function ___flsub *****************
  2361 ;; Defined at:
  2362 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  b               4   39[COMRAM] unsigned char 
  2365 ;;  a               4   43[COMRAM] unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  4   39[COMRAM] unsigned char 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2377 ;;      Params:         8       0       0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0
  2380 ;;      Totals:         8       0       0       0       0       0       0
  2381 ;;Total ram usage:        8 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    3
  2384 ;; This function calls:
  2385 ;;		___fladd
  2386 ;; This function is called by:
  2387 ;;		_get_temp
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text5
  2392  003BB0                     __ptext5:
  2393                           	opt callstack 0
  2394  003BB0                     ___flsub:
  2395                           	opt callstack 0
  2396  003BB0  FFFF               	dw	65535	; assembler added errata NOP
  2397                           
  2398                           ;incstack = 0
  2399  003BB2  0E00               	movlw	0
  2400  003BB4  1A2C               	xorwf	___flsub@a,f,c
  2401  003BB6  0E00               	movlw	0
  2402  003BB8  1A2D               	xorwf	___flsub@a+1,f,c
  2403  003BBA  0E00               	movlw	0
  2404  003BBC  1A2E               	xorwf	___flsub@a+2,f,c
  2405  003BBE  0E80               	movlw	128
  2406  003BC0  1A2F               	xorwf	___flsub@a+3,f,c
  2407  003BC2  C028  F001         	movff	___flsub@b,___fladd@b
  2408  003BC6  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  2409  003BCA  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  2410  003BCE  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  2411  003BD2  C02C  F005         	movff	___flsub@a,___fladd@a
  2412  003BD6  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  2413  003BDA  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  2414  003BDE  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  2415  003BE2  ECFC  F00D         	call	___fladd	;wreg free
  2416  003BE6  C001  F028         	movff	?___fladd,?___flsub
  2417  003BEA  C002  F029         	movff	?___fladd+1,?___flsub+1
  2418  003BEE  C003  F02A         	movff	?___fladd+2,?___flsub+2
  2419  003BF2  C004  F02B         	movff	?___fladd+3,?___flsub+3
  2420  003BF6  0012               	return		;funcret
  2421  003BF8  FFFF               	dw	65535	; errata NOP
  2422  003BFA                     __end_of___flsub:
  2423                           	opt callstack 0
  2424                           
  2425 ;; *************** function ___fladd *****************
  2426 ;; Defined at:
  2427 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  b               4    0[COMRAM] unsigned char 
  2430 ;;  a               4    4[COMRAM] unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  grs             1   15[COMRAM] unsigned char 
  2433 ;;  bexp            1   14[COMRAM] unsigned char 
  2434 ;;  aexp            1   13[COMRAM] unsigned char 
  2435 ;;  signs           1   12[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  4    0[COMRAM] unsigned char 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2445 ;;      Params:         8       0       0       0       0       0       0
  2446 ;;      Locals:         4       0       0       0       0       0       0
  2447 ;;      Temps:          4       0       0       0       0       0       0
  2448 ;;      Totals:        16       0       0       0       0       0       0
  2449 ;;Total ram usage:       16 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    2
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		___flsub
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text6
  2460  001BF8                     __ptext6:
  2461                           	opt callstack 0
  2462  001BF8                     ___fladd:
  2463                           	opt callstack 0
  2464  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  2465                           
  2466                           ;incstack = 0
  2467  001BFA  5004               	movf	___fladd@b+3,w,c
  2468  001BFC  0B80               	andlw	128
  2469  001BFE  6E0D               	movwf	___fladd@signs,c
  2470  001C00  5004               	movf	___fladd@b+3,w,c
  2471  001C02  2404               	addwf	___fladd@b+3,w,c
  2472  001C04  6E0F               	movwf	___fladd@bexp,c
  2473  001C06  BE03               	btfsc	___fladd@b+2,7,c
  2474  001C08  800F               	bsf	___fladd@bexp,0,c
  2475  001C0A  500F               	movf	___fladd@bexp,w,c
  2476  001C0C  B4D8               	btfsc	status,2,c
  2477  001C0E  D00E               	goto	l4493
  2478  001C10  280F               	incf	___fladd@bexp,w,c
  2479  001C12  A4D8               	btfss	status,2,c
  2480  001C14  D008               	goto	l4489
  2481  001C16  0E00               	movlw	0
  2482  001C18  6E01               	movwf	___fladd@b,c
  2483  001C1A  0E00               	movlw	0
  2484  001C1C  6E02               	movwf	___fladd@b+1,c
  2485  001C1E  0E00               	movlw	0
  2486  001C20  6E03               	movwf	___fladd@b+2,c
  2487  001C22  0E00               	movlw	0
  2488  001C24  6E04               	movwf	___fladd@b+3,c
  2489  001C26                     l4489:
  2490  001C26  FFFF               	dw	65535	; assembler added errata NOP
  2491  001C28  8E03               	bsf	___fladd@b+2,7,c
  2492  001C2A  D007               	goto	L2
  2493  001C2C                     l4493:
  2494  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  2495  001C2E  0E00               	movlw	0
  2496  001C30  6E01               	movwf	___fladd@b,c
  2497  001C32  0E00               	movlw	0
  2498  001C34  6E02               	movwf	___fladd@b+1,c
  2499  001C36  0E00               	movlw	0
  2500  001C38  6E03               	movwf	___fladd@b+2,c
  2501  001C3A                     L2:
  2502  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  2503  001C3C  0E00               	movlw	0
  2504  001C3E  6E04               	movwf	___fladd@b+3,c
  2505  001C40  5008               	movf	___fladd@a+3,w,c
  2506  001C42  0B80               	andlw	128
  2507  001C44  6E0E               	movwf	___fladd@aexp,c
  2508  001C46  500D               	movf	___fladd@signs,w,c
  2509  001C48  180E               	xorwf	___fladd@aexp,w,c
  2510  001C4A  A4D8               	btfss	status,2,c
  2511  001C4C  8C0D               	bsf	___fladd@signs,6,c
  2512  001C4E  5008               	movf	___fladd@a+3,w,c
  2513  001C50  2408               	addwf	___fladd@a+3,w,c
  2514  001C52  6E0E               	movwf	___fladd@aexp,c
  2515  001C54  BE07               	btfsc	___fladd@a+2,7,c
  2516  001C56  800E               	bsf	___fladd@aexp,0,c
  2517  001C58  500E               	movf	___fladd@aexp,w,c
  2518  001C5A  B4D8               	btfsc	status,2,c
  2519  001C5C  D00E               	goto	l4517
  2520  001C5E  280E               	incf	___fladd@aexp,w,c
  2521  001C60  A4D8               	btfss	status,2,c
  2522  001C62  D008               	goto	l4513
  2523  001C64  0E00               	movlw	0
  2524  001C66  6E05               	movwf	___fladd@a,c
  2525  001C68  0E00               	movlw	0
  2526  001C6A  6E06               	movwf	___fladd@a+1,c
  2527  001C6C  0E00               	movlw	0
  2528  001C6E  6E07               	movwf	___fladd@a+2,c
  2529  001C70  0E00               	movlw	0
  2530  001C72  6E08               	movwf	___fladd@a+3,c
  2531  001C74                     l4513:
  2532  001C74  FFFF               	dw	65535	; assembler added errata NOP
  2533  001C76  8E07               	bsf	___fladd@a+2,7,c
  2534  001C78  D007               	goto	L3
  2535  001C7A                     l4517:
  2536  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  2537  001C7C  0E00               	movlw	0
  2538  001C7E  6E05               	movwf	___fladd@a,c
  2539  001C80  0E00               	movlw	0
  2540  001C82  6E06               	movwf	___fladd@a+1,c
  2541  001C84  0E00               	movlw	0
  2542  001C86  6E07               	movwf	___fladd@a+2,c
  2543  001C88                     L3:
  2544  001C88  FFFF               	dw	65535	; assembler added errata NOP
  2545  001C8A  0E00               	movlw	0
  2546  001C8C  6E08               	movwf	___fladd@a+3,c
  2547  001C8E  500F               	movf	___fladd@bexp,w,c
  2548  001C90  5C0E               	subwf	___fladd@aexp,w,c
  2549  001C92  B0D8               	btfsc	status,0,c
  2550  001C94  D023               	goto	l4555
  2551  001C96  AC0D               	btfss	___fladd@signs,6,c
  2552  001C98  D002               	goto	l4525
  2553  001C9A  0E80               	movlw	128
  2554  001C9C  1A0D               	xorwf	___fladd@signs,f,c
  2555  001C9E                     l4525:
  2556  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  2557  001CA0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2558  001CA4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2559  001CA8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2560  001CAC  C001  F010         	movff	___fladd@b,___fladd@grs
  2561  001CB0  C005  F001         	movff	___fladd@a,___fladd@b
  2562  001CB4  C010  F005         	movff	___fladd@grs,___fladd@a
  2563  001CB8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2564  001CBC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2565  001CC0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2566  001CC4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2567  001CC8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2568  001CCC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2569  001CD0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2570  001CD4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2571  001CD8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2572  001CDC                     l4555:
  2573  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  2574  001CDE  0E00               	movlw	0
  2575  001CE0  6E10               	movwf	___fladd@grs,c
  2576  001CE2  500F               	movf	___fladd@bexp,w,c
  2577  001CE4  C00E  F009         	movff	___fladd@aexp,??___fladd
  2578  001CE8  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2579  001CEA  5E09               	subwf	??___fladd,f,c
  2580  001CEC  0E00               	movlw	0
  2581  001CEE  5A0A               	subwfb	??___fladd+1,f,c
  2582  001CF0  BE0A               	btfsc	??___fladd+1,7,c
  2583  001CF2  D031               	goto	l1168
  2584  001CF4  500A               	movf	??___fladd+1,w,c
  2585  001CF6  E104               	bnz	u4600
  2586  001CF8  0E1A               	movlw	26
  2587  001CFA  5C09               	subwf	??___fladd,w,c
  2588  001CFC  A0D8               	btfss	status,0,c
  2589  001CFE  D02B               	goto	l1168
  2590  001D00                     u4600:
  2591  001D00  5001               	movf	___fladd@b,w,c
  2592  001D02  1002               	iorwf	___fladd@b+1,w,c
  2593  001D04  1003               	iorwf	___fladd@b+2,w,c
  2594  001D06  1004               	iorwf	___fladd@b+3,w,c
  2595  001D08  B4D8               	btfsc	status,2,c
  2596  001D0A  D002               	goto	u4610
  2597  001D0C  0E01               	movlw	1
  2598  001D0E  D002               	goto	u4620
  2599  001D10                     u4610:
  2600  001D10  FFFF               	dw	65535	; assembler added errata NOP
  2601  001D12  0E00               	movlw	0
  2602  001D14                     u4620:
  2603  001D14  FFFF               	dw	65535	; assembler added errata NOP
  2604  001D16  6E10               	movwf	___fladd@grs,c
  2605  001D18  0E00               	movlw	0
  2606  001D1A  6E01               	movwf	___fladd@b,c
  2607  001D1C  0E00               	movlw	0
  2608  001D1E  6E02               	movwf	___fladd@b+1,c
  2609  001D20  0E00               	movlw	0
  2610  001D22  6E03               	movwf	___fladd@b+2,c
  2611  001D24  0E00               	movlw	0
  2612  001D26  6E04               	movwf	___fladd@b+3,c
  2613  001D28  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2614  001D2C  D019               	goto	u4650
  2615  001D2E                     l1169:
  2616  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  2617  001D30  A010               	btfss	___fladd@grs,0,c
  2618  001D32  D005               	goto	l4567
  2619  001D34  90D8               	bcf	status,0,c
  2620  001D36  3010               	rrcf	___fladd@grs,w,c
  2621  001D38  0901               	iorlw	1
  2622  001D3A  6E10               	movwf	___fladd@grs,c
  2623  001D3C  D003               	goto	l4569
  2624  001D3E                     l4567:
  2625  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  2626  001D40  90D8               	bcf	status,0,c
  2627  001D42  3210               	rrcf	___fladd@grs,f,c
  2628  001D44                     l4569:
  2629  001D44  FFFF               	dw	65535	; assembler added errata NOP
  2630  001D46  B001               	btfsc	___fladd@b,0,c
  2631  001D48  8E10               	bsf	___fladd@grs,7,c
  2632  001D4A  3404               	rlcf	___fladd@b+3,w,c
  2633  001D4C  3204               	rrcf	___fladd@b+3,f,c
  2634  001D4E  3203               	rrcf	___fladd@b+2,f,c
  2635  001D50  3202               	rrcf	___fladd@b+1,f,c
  2636  001D52  3201               	rrcf	___fladd@b,f,c
  2637  001D54  2A0F               	incf	___fladd@bexp,f,c
  2638  001D56                     l1168:
  2639  001D56  FFFF               	dw	65535	; assembler added errata NOP
  2640  001D58  500E               	movf	___fladd@aexp,w,c
  2641  001D5A  5C0F               	subwf	___fladd@bexp,w,c
  2642  001D5C  A0D8               	btfss	status,0,c
  2643  001D5E  D7E7               	goto	l1169
  2644  001D60                     u4650:
  2645  001D60  FFFF               	dw	65535	; assembler added errata NOP
  2646  001D62  BC0D               	btfsc	___fladd@signs,6,c
  2647  001D64  D021               	goto	l4601
  2648  001D66  500F               	movf	___fladd@bexp,w,c
  2649  001D68  B4D8               	btfsc	status,2,c
  2650  001D6A  D065               	goto	u4740
  2651  001D6C  5005               	movf	___fladd@a,w,c
  2652  001D6E  2601               	addwf	___fladd@b,f,c
  2653  001D70  5006               	movf	___fladd@a+1,w,c
  2654  001D72  2202               	addwfc	___fladd@b+1,f,c
  2655  001D74  5007               	movf	___fladd@a+2,w,c
  2656  001D76  2203               	addwfc	___fladd@b+2,f,c
  2657  001D78  5008               	movf	___fladd@a+3,w,c
  2658  001D7A  2204               	addwfc	___fladd@b+3,f,c
  2659  001D7C  A004               	btfss	___fladd@b+3,0,c
  2660  001D7E  D07B               	goto	u4780
  2661  001D80  A010               	btfss	___fladd@grs,0,c
  2662  001D82  D005               	goto	l4591
  2663  001D84  90D8               	bcf	status,0,c
  2664  001D86  3010               	rrcf	___fladd@grs,w,c
  2665  001D88  0901               	iorlw	1
  2666  001D8A  6E10               	movwf	___fladd@grs,c
  2667  001D8C  D003               	goto	l4593
  2668  001D8E                     l4591:
  2669  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  2670  001D90  90D8               	bcf	status,0,c
  2671  001D92  3210               	rrcf	___fladd@grs,f,c
  2672  001D94                     l4593:
  2673  001D94  FFFF               	dw	65535	; assembler added errata NOP
  2674  001D96  B001               	btfsc	___fladd@b,0,c
  2675  001D98  8E10               	bsf	___fladd@grs,7,c
  2676  001D9A  3404               	rlcf	___fladd@b+3,w,c
  2677  001D9C  3204               	rrcf	___fladd@b+3,f,c
  2678  001D9E  3203               	rrcf	___fladd@b+2,f,c
  2679  001DA0  3202               	rrcf	___fladd@b+1,f,c
  2680  001DA2  3201               	rrcf	___fladd@b,f,c
  2681  001DA4  2A0F               	incf	___fladd@bexp,f,c
  2682  001DA6  D067               	goto	u4780
  2683  001DA8                     l4601:
  2684  001DA8  FFFF               	dw	65535	; assembler added errata NOP
  2685  001DAA  5005               	movf	___fladd@a,w,c
  2686  001DAC  5C01               	subwf	___fladd@b,w,c
  2687  001DAE  5006               	movf	___fladd@a+1,w,c
  2688  001DB0  5802               	subwfb	___fladd@b+1,w,c
  2689  001DB2  5007               	movf	___fladd@a+2,w,c
  2690  001DB4  5803               	subwfb	___fladd@b+2,w,c
  2691  001DB6  5004               	movf	___fladd@b+3,w,c
  2692  001DB8  0A80               	xorlw	128
  2693  001DBA  6E09               	movwf	??___fladd& (0+255),c
  2694  001DBC  5008               	movf	___fladd@a+3,w,c
  2695  001DBE  0A80               	xorlw	128
  2696  001DC0  5809               	subwfb	??___fladd& (0+255),w,c
  2697  001DC2  B0D8               	btfsc	status,0,c
  2698  001DC4  D025               	goto	l4611
  2699  001DC6  5001               	movf	___fladd@b,w,c
  2700  001DC8  5C05               	subwf	___fladd@a,w,c
  2701  001DCA  6E09               	movwf	??___fladd& (0+255),c
  2702  001DCC  5002               	movf	___fladd@b+1,w,c
  2703  001DCE  5806               	subwfb	___fladd@a+1,w,c
  2704  001DD0  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2705  001DD2  5003               	movf	___fladd@b+2,w,c
  2706  001DD4  5807               	subwfb	___fladd@a+2,w,c
  2707  001DD6  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2708  001DD8  5004               	movf	___fladd@b+3,w,c
  2709  001DDA  5808               	subwfb	___fladd@a+3,w,c
  2710  001DDC  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2711  001DDE  0EFF               	movlw	255
  2712  001DE0  2409               	addwf	??___fladd,w,c
  2713  001DE2  6E01               	movwf	___fladd@b,c
  2714  001DE4  0EFF               	movlw	255
  2715  001DE6  200A               	addwfc	??___fladd+1,w,c
  2716  001DE8  6E02               	movwf	___fladd@b+1,c
  2717  001DEA  0EFF               	movlw	255
  2718  001DEC  200B               	addwfc	??___fladd+2,w,c
  2719  001DEE  6E03               	movwf	___fladd@b+2,c
  2720  001DF0  0EFF               	movlw	255
  2721  001DF2  200C               	addwfc	??___fladd+3,w,c
  2722  001DF4  6E04               	movwf	___fladd@b+3,c
  2723  001DF6  0E80               	movlw	128
  2724  001DF8  1A0D               	xorwf	___fladd@signs,f,c
  2725  001DFA  6C10               	negf	___fladd@grs,c
  2726  001DFC  5010               	movf	___fladd@grs,w,c
  2727  001DFE  A4D8               	btfss	status,2,c
  2728  001E00  D010               	goto	l1184
  2729  001E02  0E01               	movlw	1
  2730  001E04  2601               	addwf	___fladd@b,f,c
  2731  001E06  0E00               	movlw	0
  2732  001E08  2202               	addwfc	___fladd@b+1,f,c
  2733  001E0A  2203               	addwfc	___fladd@b+2,f,c
  2734  001E0C  2204               	addwfc	___fladd@b+3,f,c
  2735  001E0E  D009               	goto	l1184
  2736  001E10                     l4611:
  2737  001E10  FFFF               	dw	65535	; assembler added errata NOP
  2738  001E12  5005               	movf	___fladd@a,w,c
  2739  001E14  5E01               	subwf	___fladd@b,f,c
  2740  001E16  5006               	movf	___fladd@a+1,w,c
  2741  001E18  5A02               	subwfb	___fladd@b+1,f,c
  2742  001E1A  5007               	movf	___fladd@a+2,w,c
  2743  001E1C  5A03               	subwfb	___fladd@b+2,f,c
  2744  001E1E  5008               	movf	___fladd@a+3,w,c
  2745  001E20  5A04               	subwfb	___fladd@b+3,f,c
  2746  001E22                     l1184:
  2747  001E22  FFFF               	dw	65535	; assembler added errata NOP
  2748  001E24  5001               	movf	___fladd@b,w,c
  2749  001E26  1002               	iorwf	___fladd@b+1,w,c
  2750  001E28  1003               	iorwf	___fladd@b+2,w,c
  2751  001E2A  1004               	iorwf	___fladd@b+3,w,c
  2752  001E2C  A4D8               	btfss	status,2,c
  2753  001E2E  D020               	goto	l4635
  2754  001E30  5010               	movf	___fladd@grs,w,c
  2755  001E32  A4D8               	btfss	status,2,c
  2756  001E34  D01D               	goto	l4635
  2757  001E36                     u4740:
  2758  001E36  FFFF               	dw	65535	; assembler added errata NOP
  2759  001E38  0E00               	movlw	0
  2760  001E3A  6E01               	movwf	?___fladd,c
  2761  001E3C  0E00               	movlw	0
  2762  001E3E  6E02               	movwf	?___fladd+1,c
  2763  001E40  0E00               	movlw	0
  2764  001E42  6E03               	movwf	?___fladd+2,c
  2765  001E44  0E00               	movlw	0
  2766  001E46  6E04               	movwf	?___fladd+3,c
  2767  001E48  D076               	goto	l1176
  2768  001E4A                     l4619:
  2769  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  2770  001E4C  90D8               	bcf	status,0,c
  2771  001E4E  3601               	rlcf	___fladd@b,f,c
  2772  001E50  3602               	rlcf	___fladd@b+1,f,c
  2773  001E52  3603               	rlcf	___fladd@b+2,f,c
  2774  001E54  3604               	rlcf	___fladd@b+3,f,c
  2775  001E56  BE10               	btfsc	___fladd@grs,7,c
  2776  001E58  8001               	bsf	___fladd@b,0,c
  2777  001E5A  A010               	btfss	___fladd@grs,0,c
  2778  001E5C  D002               	goto	l4629
  2779  001E5E  80D8               	bsf	status,0,c
  2780  001E60  D002               	goto	L4
  2781  001E62                     l4629:
  2782  001E62  FFFF               	dw	65535	; assembler added errata NOP
  2783  001E64  90D8               	bcf	status,0,c
  2784  001E66                     L4:
  2785  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2786  001E68  3610               	rlcf	___fladd@grs,f,c
  2787  001E6A  500F               	movf	___fladd@bexp,w,c
  2788  001E6C  A4D8               	btfss	status,2,c
  2789  001E6E  060F               	decf	___fladd@bexp,f,c
  2790  001E70                     l4635:
  2791  001E70  FFFF               	dw	65535	; assembler added errata NOP
  2792  001E72  AE03               	btfss	___fladd@b+2,7,c
  2793  001E74  D7EA               	goto	l4619
  2794  001E76                     u4780:
  2795  001E76  FFFF               	dw	65535	; assembler added errata NOP
  2796  001E78  0E00               	movlw	0
  2797  001E7A  6E0E               	movwf	___fladd@aexp,c
  2798  001E7C  AE10               	btfss	___fladd@grs,7,c
  2799  001E7E  D00D               	goto	l1193
  2800  001E80  C010  F009         	movff	___fladd@grs,??___fladd
  2801  001E84  0E7F               	movlw	127
  2802  001E86  1609               	andwf	??___fladd,f,c
  2803  001E88  B4D8               	btfsc	status,2,c
  2804  001E8A  D004               	goto	l1194
  2805  001E8C                     u4800:
  2806  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2807  001E8E  0E01               	movlw	1
  2808  001E90  6E0E               	movwf	___fladd@aexp,c
  2809  001E92  D003               	goto	l1193
  2810  001E94                     l1194:
  2811  001E94  FFFF               	dw	65535	; assembler added errata NOP
  2812  001E96  B001               	btfsc	___fladd@b,0,c
  2813  001E98  D7F9               	goto	u4800
  2814  001E9A                     l1193:
  2815  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  2816  001E9C  500E               	movf	___fladd@aexp,w,c
  2817  001E9E  B4D8               	btfsc	status,2,c
  2818  001EA0  D020               	goto	l4655
  2819  001EA2  0E01               	movlw	1
  2820  001EA4  2601               	addwf	___fladd@b,f,c
  2821  001EA6  0E00               	movlw	0
  2822  001EA8  2202               	addwfc	___fladd@b+1,f,c
  2823  001EAA  2203               	addwfc	___fladd@b+2,f,c
  2824  001EAC  2204               	addwfc	___fladd@b+3,f,c
  2825  001EAE  A004               	btfss	___fladd@b+3,0,c
  2826  001EB0  D018               	goto	l4655
  2827  001EB2  C001  F009         	movff	___fladd@b,??___fladd
  2828  001EB6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2829  001EBA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2830  001EBE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2831  001EC2  340C               	rlcf	??___fladd+3,w,c
  2832  001EC4  320C               	rrcf	??___fladd+3,f,c
  2833  001EC6  320B               	rrcf	??___fladd+2,f,c
  2834  001EC8  320A               	rrcf	??___fladd+1,f,c
  2835  001ECA  3209               	rrcf	??___fladd,f,c
  2836  001ECC  C009  F001         	movff	??___fladd,___fladd@b
  2837  001ED0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2838  001ED4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2839  001ED8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2840  001EDC  280F               	incf	___fladd@bexp,w,c
  2841  001EDE  A4D8               	btfss	status,2,c
  2842  001EE0  2A0F               	incf	___fladd@bexp,f,c
  2843  001EE2                     l4655:
  2844  001EE2  FFFF               	dw	65535	; assembler added errata NOP
  2845  001EE4  280F               	incf	___fladd@bexp,w,c
  2846  001EE6  B4D8               	btfsc	status,2,c
  2847  001EE8  D003               	goto	u4860
  2848  001EEA  500F               	movf	___fladd@bexp,w,c
  2849  001EEC  A4D8               	btfss	status,2,c
  2850  001EEE  D00E               	goto	l4663
  2851  001EF0                     u4860:
  2852  001EF0  FFFF               	dw	65535	; assembler added errata NOP
  2853  001EF2  0E00               	movlw	0
  2854  001EF4  6E01               	movwf	___fladd@b,c
  2855  001EF6  0E00               	movlw	0
  2856  001EF8  6E02               	movwf	___fladd@b+1,c
  2857  001EFA  0E00               	movlw	0
  2858  001EFC  6E03               	movwf	___fladd@b+2,c
  2859  001EFE  0E00               	movlw	0
  2860  001F00  6E04               	movwf	___fladd@b+3,c
  2861  001F02  500F               	movf	___fladd@bexp,w,c
  2862  001F04  A4D8               	btfss	status,2,c
  2863  001F06  D002               	goto	l4663
  2864  001F08  0E00               	movlw	0
  2865  001F0A  6E0D               	movwf	___fladd@signs,c
  2866  001F0C                     l4663:
  2867  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2868  001F0E  A00F               	btfss	___fladd@bexp,0,c
  2869  001F10  D002               	goto	l4667
  2870  001F12  8E03               	bsf	___fladd@b+2,7,c
  2871  001F14  D002               	goto	l4669
  2872  001F16                     l4667:
  2873  001F16  FFFF               	dw	65535	; assembler added errata NOP
  2874  001F18  9E03               	bcf	___fladd@b+2,7,c
  2875  001F1A                     l4669:
  2876  001F1A  FFFF               	dw	65535	; assembler added errata NOP
  2877  001F1C  90D8               	bcf	status,0,c
  2878  001F1E  300F               	rrcf	___fladd@bexp,w,c
  2879  001F20  6E04               	movwf	___fladd@b+3,c
  2880  001F22  BE0D               	btfsc	___fladd@signs,7,c
  2881  001F24  8E04               	bsf	___fladd@b+3,7,c
  2882  001F26  C001  F001         	movff	___fladd@b,?___fladd
  2883  001F2A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2884  001F2E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2885  001F32  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2886  001F36                     l1176:
  2887  001F36  FFFF               	dw	65535	; assembler added errata NOP
  2888  001F38  0012               	return		;funcret
  2889  001F3A  FFFF               	dw	65535	; errata NOP
  2890  001F3C                     __end_of___fladd:
  2891                           	opt callstack 0
  2892                           
  2893 ;; *************** function ___flmul *****************
  2894 ;; Defined at:
  2895 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  b               4   14[COMRAM] unsigned char 
  2898 ;;  a               4   18[COMRAM] unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  prod            4   33[COMRAM] struct .
  2901 ;;  grs             4   27[COMRAM] unsigned long 
  2902 ;;  temp            2   37[COMRAM] struct .
  2903 ;;  bexp            1   32[COMRAM] unsigned char 
  2904 ;;  aexp            1   31[COMRAM] unsigned char 
  2905 ;;  sign            1   26[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  4   14[COMRAM] unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, prodl, prodh
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2915 ;;      Params:         8       0       0       0       0       0       0
  2916 ;;      Locals:        13       0       0       0       0       0       0
  2917 ;;      Temps:          4       0       0       0       0       0       0
  2918 ;;      Totals:        25       0       0       0       0       0       0
  2919 ;;Total ram usage:       25 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    2
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_get_temp
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text7
  2930  001876                     __ptext7:
  2931                           	opt callstack 0
  2932  001876                     ___flmul:
  2933                           	opt callstack 0
  2934  001876  FFFF               	dw	65535	; assembler added errata NOP
  2935                           
  2936                           ;incstack = 0
  2937  001878  5012               	movf	___flmul@b+3,w,c
  2938  00187A  0B80               	andlw	128
  2939  00187C  6E1B               	movwf	___flmul@sign,c
  2940  00187E  5012               	movf	___flmul@b+3,w,c
  2941  001880  2412               	addwf	___flmul@b+3,w,c
  2942  001882  6E21               	movwf	___flmul@bexp,c
  2943  001884  BE11               	btfsc	___flmul@b+2,7,c
  2944  001886  8021               	bsf	___flmul@bexp,0,c
  2945  001888  5021               	movf	___flmul@bexp,w,c
  2946  00188A  B4D8               	btfsc	status,2,c
  2947  00188C  D00E               	goto	l4745
  2948  00188E  2821               	incf	___flmul@bexp,w,c
  2949  001890  A4D8               	btfss	status,2,c
  2950  001892  D008               	goto	l4743
  2951  001894  0E00               	movlw	0
  2952  001896  6E0F               	movwf	___flmul@b,c
  2953  001898  0E00               	movlw	0
  2954  00189A  6E10               	movwf	___flmul@b+1,c
  2955  00189C  0E00               	movlw	0
  2956  00189E  6E11               	movwf	___flmul@b+2,c
  2957  0018A0  0E00               	movlw	0
  2958  0018A2  6E12               	movwf	___flmul@b+3,c
  2959  0018A4                     l4743:
  2960  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  2961  0018A6  8E11               	bsf	___flmul@b+2,7,c
  2962  0018A8  D009               	goto	l4747
  2963  0018AA                     l4745:
  2964  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  2965  0018AC  0E00               	movlw	0
  2966  0018AE  6E0F               	movwf	___flmul@b,c
  2967  0018B0  0E00               	movlw	0
  2968  0018B2  6E10               	movwf	___flmul@b+1,c
  2969  0018B4  0E00               	movlw	0
  2970  0018B6  6E11               	movwf	___flmul@b+2,c
  2971  0018B8  0E00               	movlw	0
  2972  0018BA  6E12               	movwf	___flmul@b+3,c
  2973  0018BC                     l4747:
  2974  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  2975  0018BE  5016               	movf	___flmul@a+3,w,c
  2976  0018C0  0B80               	andlw	128
  2977  0018C2  1A1B               	xorwf	___flmul@sign,f,c
  2978  0018C4  5016               	movf	___flmul@a+3,w,c
  2979  0018C6  2416               	addwf	___flmul@a+3,w,c
  2980  0018C8  6E20               	movwf	___flmul@aexp,c
  2981  0018CA  BE15               	btfsc	___flmul@a+2,7,c
  2982  0018CC  8020               	bsf	___flmul@aexp,0,c
  2983  0018CE  5020               	movf	___flmul@aexp,w,c
  2984  0018D0  B4D8               	btfsc	status,2,c
  2985  0018D2  D00E               	goto	l4763
  2986  0018D4  2820               	incf	___flmul@aexp,w,c
  2987  0018D6  A4D8               	btfss	status,2,c
  2988  0018D8  D008               	goto	l4761
  2989  0018DA  0E00               	movlw	0
  2990  0018DC  6E13               	movwf	___flmul@a,c
  2991  0018DE  0E00               	movlw	0
  2992  0018E0  6E14               	movwf	___flmul@a+1,c
  2993  0018E2  0E00               	movlw	0
  2994  0018E4  6E15               	movwf	___flmul@a+2,c
  2995  0018E6  0E00               	movlw	0
  2996  0018E8  6E16               	movwf	___flmul@a+3,c
  2997  0018EA                     l4761:
  2998  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  2999  0018EC  8E15               	bsf	___flmul@a+2,7,c
  3000  0018EE  D009               	goto	l1253
  3001  0018F0                     l4763:
  3002  0018F0  FFFF               	dw	65535	; assembler added errata NOP
  3003  0018F2  0E00               	movlw	0
  3004  0018F4  6E13               	movwf	___flmul@a,c
  3005  0018F6  0E00               	movlw	0
  3006  0018F8  6E14               	movwf	___flmul@a+1,c
  3007  0018FA  0E00               	movlw	0
  3008  0018FC  6E15               	movwf	___flmul@a+2,c
  3009  0018FE  0E00               	movlw	0
  3010  001900  6E16               	movwf	___flmul@a+3,c
  3011  001902                     l1253:
  3012  001902  FFFF               	dw	65535	; assembler added errata NOP
  3013  001904  5020               	movf	___flmul@aexp,w,c
  3014  001906  B4D8               	btfsc	status,2,c
  3015  001908  D003               	goto	u5020
  3016  00190A  5021               	movf	___flmul@bexp,w,c
  3017  00190C  A4D8               	btfss	status,2,c
  3018  00190E  D00A               	goto	l4771
  3019  001910                     u5020:
  3020  001910  FFFF               	dw	65535	; assembler added errata NOP
  3021  001912  0E00               	movlw	0
  3022  001914  6E0F               	movwf	?___flmul,c
  3023  001916  0E00               	movlw	0
  3024  001918  6E10               	movwf	?___flmul+1,c
  3025  00191A  0E00               	movlw	0
  3026  00191C  6E11               	movwf	?___flmul+2,c
  3027  00191E  0E00               	movlw	0
  3028  001920  6E12               	movwf	?___flmul+3,c
  3029  001922  D167               	goto	l1257
  3030  001924                     l4771:
  3031  001924  FFFF               	dw	65535	; assembler added errata NOP
  3032  001926  5015               	movf	___flmul@a+2,w,c
  3033  001928  020F               	mulwf	___flmul@b,c
  3034  00192A  CFF3 F026          	movff	prodl,___flmul@temp
  3035  00192E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3036  001932  5026               	movf	___flmul@temp,w,c
  3037  001934  6E1C               	movwf	___flmul@grs,c
  3038  001936  6A1D               	clrf	___flmul@grs+1,c
  3039  001938  6A1E               	clrf	___flmul@grs+2,c
  3040  00193A  6A1F               	clrf	___flmul@grs+3,c
  3041  00193C  5027               	movf	___flmul@temp+1,w,c
  3042  00193E  6E22               	movwf	___flmul@prod,c
  3043  001940  6A23               	clrf	___flmul@prod+1,c
  3044  001942  6A24               	clrf	___flmul@prod+2,c
  3045  001944  6A25               	clrf	___flmul@prod+3,c
  3046  001946  5014               	movf	___flmul@a+1,w,c
  3047  001948  0210               	mulwf	___flmul@b+1,c
  3048  00194A  CFF3 F026          	movff	prodl,___flmul@temp
  3049  00194E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3050  001952  5026               	movf	___flmul@temp,w,c
  3051  001954  261C               	addwf	___flmul@grs,f,c
  3052  001956  0E00               	movlw	0
  3053  001958  221D               	addwfc	___flmul@grs+1,f,c
  3054  00195A  221E               	addwfc	___flmul@grs+2,f,c
  3055  00195C  221F               	addwfc	___flmul@grs+3,f,c
  3056  00195E  5027               	movf	___flmul@temp+1,w,c
  3057  001960  2622               	addwf	___flmul@prod,f,c
  3058  001962  0E00               	movlw	0
  3059  001964  2223               	addwfc	___flmul@prod+1,f,c
  3060  001966  2224               	addwfc	___flmul@prod+2,f,c
  3061  001968  2225               	addwfc	___flmul@prod+3,f,c
  3062  00196A  5013               	movf	___flmul@a,w,c
  3063  00196C  0211               	mulwf	___flmul@b+2,c
  3064  00196E  CFF3 F026          	movff	prodl,___flmul@temp
  3065  001972  CFF4 F027          	movff	prodh,___flmul@temp+1
  3066  001976  5026               	movf	___flmul@temp,w,c
  3067  001978  261C               	addwf	___flmul@grs,f,c
  3068  00197A  0E00               	movlw	0
  3069  00197C  221D               	addwfc	___flmul@grs+1,f,c
  3070  00197E  221E               	addwfc	___flmul@grs+2,f,c
  3071  001980  221F               	addwfc	___flmul@grs+3,f,c
  3072  001982  5027               	movf	___flmul@temp+1,w,c
  3073  001984  2622               	addwf	___flmul@prod,f,c
  3074  001986  0E00               	movlw	0
  3075  001988  2223               	addwfc	___flmul@prod+1,f,c
  3076  00198A  2224               	addwfc	___flmul@prod+2,f,c
  3077  00198C  2225               	addwfc	___flmul@prod+3,f,c
  3078  00198E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3079  001992  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3080  001996  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3081  00199A  6A1C               	clrf	___flmul@grs,c
  3082  00199C  5013               	movf	___flmul@a,w,c
  3083  00199E  0210               	mulwf	___flmul@b+1,c
  3084  0019A0  CFF3 F026          	movff	prodl,___flmul@temp
  3085  0019A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  3086  0019A8  5026               	movf	___flmul@temp,w,c
  3087  0019AA  261C               	addwf	___flmul@grs,f,c
  3088  0019AC  5027               	movf	___flmul@temp+1,w,c
  3089  0019AE  221D               	addwfc	___flmul@grs+1,f,c
  3090  0019B0  0E00               	movlw	0
  3091  0019B2  221E               	addwfc	___flmul@grs+2,f,c
  3092  0019B4  0E00               	movlw	0
  3093  0019B6  221F               	addwfc	___flmul@grs+3,f,c
  3094  0019B8  5014               	movf	___flmul@a+1,w,c
  3095  0019BA  020F               	mulwf	___flmul@b,c
  3096  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  3097  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3098  0019C4  5026               	movf	___flmul@temp,w,c
  3099  0019C6  261C               	addwf	___flmul@grs,f,c
  3100  0019C8  5027               	movf	___flmul@temp+1,w,c
  3101  0019CA  221D               	addwfc	___flmul@grs+1,f,c
  3102  0019CC  0E00               	movlw	0
  3103  0019CE  221E               	addwfc	___flmul@grs+2,f,c
  3104  0019D0  0E00               	movlw	0
  3105  0019D2  221F               	addwfc	___flmul@grs+3,f,c
  3106  0019D4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3107  0019D8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3108  0019DC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3109  0019E0  6A1C               	clrf	___flmul@grs,c
  3110  0019E2  5013               	movf	___flmul@a,w,c
  3111  0019E4  020F               	mulwf	___flmul@b,c
  3112  0019E6  CFF3 F026          	movff	prodl,___flmul@temp
  3113  0019EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3114  0019EE  5026               	movf	___flmul@temp,w,c
  3115  0019F0  261C               	addwf	___flmul@grs,f,c
  3116  0019F2  5027               	movf	___flmul@temp+1,w,c
  3117  0019F4  221D               	addwfc	___flmul@grs+1,f,c
  3118  0019F6  0E00               	movlw	0
  3119  0019F8  221E               	addwfc	___flmul@grs+2,f,c
  3120  0019FA  0E00               	movlw	0
  3121  0019FC  221F               	addwfc	___flmul@grs+3,f,c
  3122  0019FE  5015               	movf	___flmul@a+2,w,c
  3123  001A00  0210               	mulwf	___flmul@b+1,c
  3124  001A02  CFF3 F026          	movff	prodl,___flmul@temp
  3125  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3126  001A0A  5026               	movf	___flmul@temp,w,c
  3127  001A0C  2622               	addwf	___flmul@prod,f,c
  3128  001A0E  5027               	movf	___flmul@temp+1,w,c
  3129  001A10  2223               	addwfc	___flmul@prod+1,f,c
  3130  001A12  0E00               	movlw	0
  3131  001A14  2224               	addwfc	___flmul@prod+2,f,c
  3132  001A16  0E00               	movlw	0
  3133  001A18  2225               	addwfc	___flmul@prod+3,f,c
  3134  001A1A  5014               	movf	___flmul@a+1,w,c
  3135  001A1C  0211               	mulwf	___flmul@b+2,c
  3136  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
  3137  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3138  001A26  5026               	movf	___flmul@temp,w,c
  3139  001A28  2622               	addwf	___flmul@prod,f,c
  3140  001A2A  5027               	movf	___flmul@temp+1,w,c
  3141  001A2C  2223               	addwfc	___flmul@prod+1,f,c
  3142  001A2E  0E00               	movlw	0
  3143  001A30  2224               	addwfc	___flmul@prod+2,f,c
  3144  001A32  0E00               	movlw	0
  3145  001A34  2225               	addwfc	___flmul@prod+3,f,c
  3146  001A36  5015               	movf	___flmul@a+2,w,c
  3147  001A38  0211               	mulwf	___flmul@b+2,c
  3148  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
  3149  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3150  001A42  5026               	movf	___flmul@temp,w,c
  3151  001A44  6E17               	movwf	??___flmul& (0+255),c
  3152  001A46  5027               	movf	___flmul@temp+1,w,c
  3153  001A48  6E18               	movwf	(??___flmul+1)& (0+255),c
  3154  001A4A  6A19               	clrf	(??___flmul+2)& (0+255),c
  3155  001A4C  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3156  001A4E  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3157  001A52  C018  F019         	movff	??___flmul+1,??___flmul+2
  3158  001A56  C017  F018         	movff	??___flmul,??___flmul+1
  3159  001A5A  6A17               	clrf	??___flmul,c
  3160  001A5C  5017               	movf	??___flmul,w,c
  3161  001A5E  2622               	addwf	___flmul@prod,f,c
  3162  001A60  5018               	movf	??___flmul+1,w,c
  3163  001A62  2223               	addwfc	___flmul@prod+1,f,c
  3164  001A64  5019               	movf	??___flmul+2,w,c
  3165  001A66  2224               	addwfc	___flmul@prod+2,f,c
  3166  001A68  501A               	movf	??___flmul+3,w,c
  3167  001A6A  2225               	addwfc	___flmul@prod+3,f,c
  3168  001A6C  C01C  F017         	movff	___flmul@grs,??___flmul
  3169  001A70  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3170  001A74  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3171  001A78  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3172  001A7C  0E19               	movlw	25
  3173  001A7E  D006               	goto	u5030
  3174  001A80                     u5035:
  3175  001A80  FFFF               	dw	65535	; assembler added errata NOP
  3176  001A82  90D8               	bcf	status,0,c
  3177  001A84  321A               	rrcf	??___flmul+3,f,c
  3178  001A86  3219               	rrcf	??___flmul+2,f,c
  3179  001A88  3218               	rrcf	??___flmul+1,f,c
  3180  001A8A  3217               	rrcf	??___flmul,f,c
  3181  001A8C                     u5030:
  3182  001A8C  FFFF               	dw	65535	; assembler added errata NOP
  3183  001A8E  2EE8               	decfsz	wreg,f,c
  3184  001A90  D7F7               	goto	u5035
  3185  001A92  5017               	movf	??___flmul,w,c
  3186  001A94  2622               	addwf	___flmul@prod,f,c
  3187  001A96  5018               	movf	??___flmul+1,w,c
  3188  001A98  2223               	addwfc	___flmul@prod+1,f,c
  3189  001A9A  5019               	movf	??___flmul+2,w,c
  3190  001A9C  2224               	addwfc	___flmul@prod+2,f,c
  3191  001A9E  501A               	movf	??___flmul+3,w,c
  3192  001AA0  2225               	addwfc	___flmul@prod+3,f,c
  3193  001AA2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3194  001AA6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3195  001AAA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3196  001AAE  6A1C               	clrf	___flmul@grs,c
  3197  001AB0  5020               	movf	___flmul@aexp,w,c
  3198  001AB2  C021  F017         	movff	___flmul@bexp,??___flmul
  3199  001AB6  6A18               	clrf	(??___flmul+1)& (0+255),c
  3200  001AB8  2617               	addwf	??___flmul,f,c
  3201  001ABA  0E00               	movlw	0
  3202  001ABC  2218               	addwfc	??___flmul+1,f,c
  3203  001ABE  0E82               	movlw	130
  3204  001AC0  2417               	addwf	??___flmul,w,c
  3205  001AC2  6E26               	movwf	___flmul@temp,c
  3206  001AC4  0EFF               	movlw	255
  3207  001AC6  2018               	addwfc	??___flmul+1,w,c
  3208  001AC8  6E27               	movwf	___flmul@temp+1,c
  3209  001ACA  D010               	goto	l4819
  3210  001ACC                     l4813:
  3211  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  3212  001ACE  90D8               	bcf	status,0,c
  3213  001AD0  3622               	rlcf	___flmul@prod,f,c
  3214  001AD2  3623               	rlcf	___flmul@prod+1,f,c
  3215  001AD4  3624               	rlcf	___flmul@prod+2,f,c
  3216  001AD6  3625               	rlcf	___flmul@prod+3,f,c
  3217  001AD8  BE1F               	btfsc	___flmul@grs+3,7,c
  3218  001ADA  8022               	bsf	___flmul@prod,0,c
  3219  001ADC  90D8               	bcf	status,0,c
  3220  001ADE  361C               	rlcf	___flmul@grs,f,c
  3221  001AE0  361D               	rlcf	___flmul@grs+1,f,c
  3222  001AE2  361E               	rlcf	___flmul@grs+2,f,c
  3223  001AE4  361F               	rlcf	___flmul@grs+3,f,c
  3224  001AE6  0626               	decf	___flmul@temp,f,c
  3225  001AE8  A0D8               	btfss	status,0,c
  3226  001AEA  0627               	decf	___flmul@temp+1,f,c
  3227  001AEC                     l4819:
  3228  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  3229  001AEE  AE24               	btfss	___flmul@prod+2,7,c
  3230  001AF0  D7ED               	goto	l4813
  3231  001AF2  0E00               	movlw	0
  3232  001AF4  6E20               	movwf	___flmul@aexp,c
  3233  001AF6  AE1F               	btfss	___flmul@grs+3,7,c
  3234  001AF8  D019               	goto	l1262
  3235  001AFA  0EFF               	movlw	255
  3236  001AFC  141C               	andwf	___flmul@grs,w,c
  3237  001AFE  6E17               	movwf	??___flmul& (0+255),c
  3238  001B00  0EFF               	movlw	255
  3239  001B02  141D               	andwf	___flmul@grs+1,w,c
  3240  001B04  6E18               	movwf	(??___flmul+1)& (0+255),c
  3241  001B06  0EFF               	movlw	255
  3242  001B08  141E               	andwf	___flmul@grs+2,w,c
  3243  001B0A  6E19               	movwf	(??___flmul+2)& (0+255),c
  3244  001B0C  0E7F               	movlw	127
  3245  001B0E  141F               	andwf	___flmul@grs+3,w,c
  3246  001B10  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3247  001B12  5017               	movf	??___flmul,w,c
  3248  001B14  1018               	iorwf	??___flmul+1,w,c
  3249  001B16  1019               	iorwf	??___flmul+2,w,c
  3250  001B18  101A               	iorwf	??___flmul+3,w,c
  3251  001B1A  B4D8               	btfsc	status,2,c
  3252  001B1C  D004               	goto	l1263
  3253  001B1E                     u5070:
  3254  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  3255  001B20  0E01               	movlw	1
  3256  001B22  6E20               	movwf	___flmul@aexp,c
  3257  001B24  D003               	goto	l1262
  3258  001B26                     l1263:
  3259  001B26  FFFF               	dw	65535	; assembler added errata NOP
  3260  001B28  B022               	btfsc	___flmul@prod,0,c
  3261  001B2A  D7F9               	goto	u5070
  3262  001B2C                     l1262:
  3263  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  3264  001B2E  5020               	movf	___flmul@aexp,w,c
  3265  001B30  B4D8               	btfsc	status,2,c
  3266  001B32  D01F               	goto	l4839
  3267  001B34  0E01               	movlw	1
  3268  001B36  2622               	addwf	___flmul@prod,f,c
  3269  001B38  0E00               	movlw	0
  3270  001B3A  2223               	addwfc	___flmul@prod+1,f,c
  3271  001B3C  2224               	addwfc	___flmul@prod+2,f,c
  3272  001B3E  2225               	addwfc	___flmul@prod+3,f,c
  3273  001B40  A025               	btfss	___flmul@prod+3,0,c
  3274  001B42  D017               	goto	l4839
  3275  001B44  C022  F017         	movff	___flmul@prod,??___flmul
  3276  001B48  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3277  001B4C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3278  001B50  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3279  001B54  341A               	rlcf	??___flmul+3,w,c
  3280  001B56  321A               	rrcf	??___flmul+3,f,c
  3281  001B58  3219               	rrcf	??___flmul+2,f,c
  3282  001B5A  3218               	rrcf	??___flmul+1,f,c
  3283  001B5C  3217               	rrcf	??___flmul,f,c
  3284  001B5E  C017  F022         	movff	??___flmul,___flmul@prod
  3285  001B62  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3286  001B66  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3287  001B6A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3288  001B6E  4A26               	infsnz	___flmul@temp,f,c
  3289  001B70  2A27               	incf	___flmul@temp+1,f,c
  3290  001B72                     l4839:
  3291  001B72  FFFF               	dw	65535	; assembler added errata NOP
  3292  001B74  BE27               	btfsc	___flmul@temp+1,7,c
  3293  001B76  D00D               	goto	l4843
  3294  001B78  5027               	movf	___flmul@temp+1,w,c
  3295  001B7A  E103               	bnz	u5110
  3296  001B7C  2826               	incf	___flmul@temp,w,c
  3297  001B7E  A0D8               	btfss	status,0,c
  3298  001B80  D008               	goto	l4843
  3299  001B82                     u5110:
  3300  001B82  0E00               	movlw	0
  3301  001B84  6E22               	movwf	___flmul@prod,c
  3302  001B86  0E00               	movlw	0
  3303  001B88  6E23               	movwf	___flmul@prod+1,c
  3304  001B8A  0E80               	movlw	128
  3305  001B8C  6E24               	movwf	___flmul@prod+2,c
  3306  001B8E  0E7F               	movlw	127
  3307  001B90  D023               	goto	L5
  3308  001B92                     l4843:
  3309  001B92  FFFF               	dw	65535	; assembler added errata NOP
  3310  001B94  BE27               	btfsc	___flmul@temp+1,7,c
  3311  001B96  D005               	goto	u5120
  3312  001B98  5027               	movf	___flmul@temp+1,w,c
  3313  001B9A  E10F               	bnz	l1270
  3314  001B9C  0426               	decf	___flmul@temp,w,c
  3315  001B9E  B0D8               	btfsc	status,0,c
  3316  001BA0  D00C               	goto	l1270
  3317  001BA2                     u5120:
  3318  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  3319  001BA4  0E00               	movlw	0
  3320  001BA6  6E22               	movwf	___flmul@prod,c
  3321  001BA8  0E00               	movlw	0
  3322  001BAA  6E23               	movwf	___flmul@prod+1,c
  3323  001BAC  0E00               	movlw	0
  3324  001BAE  6E24               	movwf	___flmul@prod+2,c
  3325  001BB0  0E00               	movlw	0
  3326  001BB2  6E25               	movwf	___flmul@prod+3,c
  3327  001BB4  0E00               	movlw	0
  3328  001BB6  6E1B               	movwf	___flmul@sign,c
  3329  001BB8  D011               	goto	l4855
  3330  001BBA                     l1270:
  3331  001BBA  FFFF               	dw	65535	; assembler added errata NOP
  3332  001BBC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3333  001BC0  0EFF               	movlw	255
  3334  001BC2  1622               	andwf	___flmul@prod,f,c
  3335  001BC4  0EFF               	movlw	255
  3336  001BC6  1623               	andwf	___flmul@prod+1,f,c
  3337  001BC8  0E7F               	movlw	127
  3338  001BCA  1624               	andwf	___flmul@prod+2,f,c
  3339  001BCC  0E00               	movlw	0
  3340  001BCE  1625               	andwf	___flmul@prod+3,f,c
  3341  001BD0  B021               	btfsc	___flmul@bexp,0,c
  3342  001BD2  8E24               	bsf	___flmul@prod+2,7,c
  3343  001BD4  90D8               	bcf	status,0,c
  3344  001BD6  3021               	rrcf	___flmul@bexp,w,c
  3345  001BD8                     L5:
  3346  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  3347  001BDA  6E25               	movwf	___flmul@prod+3,c
  3348  001BDC                     l4855:
  3349  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  3350  001BDE  501B               	movf	___flmul@sign,w,c
  3351  001BE0  1225               	iorwf	___flmul@prod+3,f,c
  3352  001BE2  C022  F00F         	movff	___flmul@prod,?___flmul
  3353  001BE6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3354  001BEA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3355  001BEE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3356  001BF2                     l1257:
  3357  001BF2  FFFF               	dw	65535	; assembler added errata NOP
  3358  001BF4  0012               	return		;funcret
  3359  001BF6  FFFF               	dw	65535	; errata NOP
  3360  001BF8                     __end_of___flmul:
  3361                           	opt callstack 0
  3362                           
  3363 ;; *************** function _ADC_Read *****************
  3364 ;; Defined at:
  3365 ;;		line 28 in file "adc.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  channel         1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  channel         1    4[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  2    0[COMRAM] unsigned int 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3379 ;;      Params:         2       0       0       0       0       0       0
  3380 ;;      Locals:         1       0       0       0       0       0       0
  3381 ;;      Temps:          2       0       0       0       0       0       0
  3382 ;;      Totals:         5       0       0       0       0       0       0
  3383 ;;Total ram usage:        5 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    2
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_get_temp
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text8
  3394  003B5C                     __ptext8:
  3395                           	opt callstack 0
  3396  003B5C                     _ADC_Read:
  3397                           	opt callstack 0
  3398  003B5C  FFFF               	dw	65535	; assembler added errata NOP
  3399                           
  3400                           ;incstack = 0
  3401                           ;ADC_Read@channel stored from wreg
  3402  003B5E  6E05               	movwf	ADC_Read@channel,c
  3403                           
  3404                           ;adc.c: 29:  if(channel > 7)
  3405  003B60  0E07               	movlw	7
  3406  003B62  6405               	cpfsgt	ADC_Read@channel,c
  3407  003B64  D005               	goto	l4721
  3408                           
  3409                           ;adc.c: 30:  return 0;
  3410  003B66  0E00               	movlw	0
  3411  003B68  6E02               	movwf	?_ADC_Read+1,c
  3412  003B6A  0E00               	movlw	0
  3413  003B6C  6E01               	movwf	?_ADC_Read,c
  3414  003B6E  D01D               	goto	l362
  3415  003B70                     l4721:
  3416  003B70  FFFF               	dw	65535	; assembler added errata NOP
  3417                           
  3418                           ;adc.c: 31:  ADCON0 &= 0xC5;
  3419  003B72  0EC5               	movlw	197
  3420  003B74  16C2               	andwf	4034,f,c	;volatile
  3421                           
  3422                           ;adc.c: 32:  ADCON0 |= channel<<3;
  3423  003B76  3805               	swapf	ADC_Read@channel,w,c	;volatile
  3424  003B78  42E8               	rrncf	wreg,f,c
  3425  003B7A  0BF8               	andlw	248
  3426  003B7C  12C2               	iorwf	4034,f,c	;volatile
  3427                           
  3428                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  3429  003B7E  0E08               	movlw	8
  3430  003B80  6E03               	movwf	??_ADC_Read& (0+255),c
  3431  003B82  0ECB               	movlw	203
  3432  003B84                     u5657:
  3433  003B84  FFFF               	dw	65535	; errata NOP
  3434  003B86  2EE8               	decfsz	wreg,f,c
  3435  003B88  D7FD               	bra	u5657
  3436  003B8A  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  3437  003B8C  D7FB               	bra	u5657
  3438  003B8E  D000               	nop2	
  3439                           
  3440                           ;adc.c: 34:  GO_nDONE = 1;
  3441  003B90  84C2               	bsf	4034,2,c	;volatile
  3442  003B92                     l363:
  3443  003B92  FFFF               	dw	65535	; assembler added errata NOP
  3444  003B94  B4C2               	btfsc	4034,2,c	;volatile
  3445  003B96  D7FD               	goto	l363
  3446                           
  3447                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  3448  003B98  50C4               	movf	4036,w,c	;volatile
  3449  003B9A  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  3450  003B9C  6A03               	clrf	??_ADC_Read& (0+255),c
  3451  003B9E  50C3               	movf	4035,w,c	;volatile
  3452  003BA0  2403               	addwf	??_ADC_Read,w,c
  3453  003BA2  6E01               	movwf	?_ADC_Read,c
  3454  003BA4  0E00               	movlw	0
  3455  003BA6  2004               	addwfc	??_ADC_Read+1,w,c
  3456  003BA8  6E02               	movwf	?_ADC_Read+1,c
  3457  003BAA                     l362:
  3458  003BAA  FFFF               	dw	65535	; assembler added errata NOP
  3459  003BAC  0012               	return		;funcret
  3460  003BAE  FFFF               	dw	65535	; errata NOP
  3461  003BB0                     __end_of_ADC_Read:
  3462                           	opt callstack 0
  3463                           
  3464 ;; *************** function _ADC_Init *****************
  3465 ;; Defined at:
  3466 ;;		line 23 in file "adc.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3480 ;;      Params:         0       0       0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0
  3483 ;;      Totals:         0       0       0       0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    2
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_get_temp
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text9
  3495  003FF0                     __ptext9:
  3496                           	opt callstack 0
  3497  003FF0                     _ADC_Init:
  3498                           	opt callstack 0
  3499  003FF0  FFFF               	dw	65535	; assembler added errata NOP
  3500                           
  3501                           ;adc.c: 24:  ADCON0 = 0x81;
  3502                           
  3503                           ;incstack = 0
  3504  003FF2  0E81               	movlw	129
  3505  003FF4  6EC2               	movwf	4034,c	;volatile
  3506                           
  3507                           ;adc.c: 25:  ADCON1 = 0x80;
  3508  003FF6  0E80               	movlw	128
  3509  003FF8  6EC1               	movwf	4033,c	;volatile
  3510  003FFA  0012               	return		;funcret
  3511  003FFC  FFFF               	dw	65535	; errata NOP
  3512  003FFE                     __end_of_ADC_Init:
  3513                           	opt callstack 0
  3514                           
  3515 ;; *************** function ___lldiv *****************
  3516 ;; Defined at:
  3517 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  dividend        4    4[COMRAM] unsigned long 
  3520 ;;  divisor         4    8[COMRAM] unsigned long 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  quotient        4   12[COMRAM] unsigned long 
  3523 ;;  counter         1   16[COMRAM] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  4    4[COMRAM] unsigned long 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         8       0       0       0       0       0       0
  3534 ;;      Locals:         5       0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0
  3536 ;;      Totals:        13       0       0       0       0       0       0
  3537 ;;Total ram usage:       13 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_write_SRAM
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text10
  3548  003858                     __ptext10:
  3549                           	opt callstack 0
  3550  003858                     ___lldiv:
  3551                           	opt callstack 0
  3552  003858  FFFF               	dw	65535	; assembler added errata NOP
  3553                           
  3554                           ;incstack = 0
  3555  00385A  0E00               	movlw	0
  3556  00385C  6E0D               	movwf	___lldiv@quotient,c
  3557  00385E  0E00               	movlw	0
  3558  003860  6E0E               	movwf	___lldiv@quotient+1,c
  3559  003862  0E00               	movlw	0
  3560  003864  6E0F               	movwf	___lldiv@quotient+2,c
  3561  003866  0E00               	movlw	0
  3562  003868  6E10               	movwf	___lldiv@quotient+3,c
  3563  00386A  5009               	movf	___lldiv@divisor,w,c
  3564  00386C  100A               	iorwf	___lldiv@divisor+1,w,c
  3565  00386E  100B               	iorwf	___lldiv@divisor+2,w,c
  3566  003870  100C               	iorwf	___lldiv@divisor+3,w,c
  3567  003872  B4D8               	btfsc	status,2,c
  3568  003874  D02E               	goto	l666
  3569  003876  0E01               	movlw	1
  3570  003878  6E11               	movwf	___lldiv@counter,c
  3571  00387A  D007               	goto	l5037
  3572  00387C                     l5035:
  3573  00387C  FFFF               	dw	65535	; assembler added errata NOP
  3574  00387E  90D8               	bcf	status,0,c
  3575  003880  3609               	rlcf	___lldiv@divisor,f,c
  3576  003882  360A               	rlcf	___lldiv@divisor+1,f,c
  3577  003884  360B               	rlcf	___lldiv@divisor+2,f,c
  3578  003886  360C               	rlcf	___lldiv@divisor+3,f,c
  3579  003888  2A11               	incf	___lldiv@counter,f,c
  3580  00388A                     l5037:
  3581  00388A  FFFF               	dw	65535	; assembler added errata NOP
  3582  00388C  AE0C               	btfss	___lldiv@divisor+3,7,c
  3583  00388E  D7F6               	goto	l5035
  3584  003890                     u5320:
  3585  003890  FFFF               	dw	65535	; assembler added errata NOP
  3586  003892  90D8               	bcf	status,0,c
  3587  003894  360D               	rlcf	___lldiv@quotient,f,c
  3588  003896  360E               	rlcf	___lldiv@quotient+1,f,c
  3589  003898  360F               	rlcf	___lldiv@quotient+2,f,c
  3590  00389A  3610               	rlcf	___lldiv@quotient+3,f,c
  3591  00389C  5009               	movf	___lldiv@divisor,w,c
  3592  00389E  5C05               	subwf	___lldiv@dividend,w,c
  3593  0038A0  500A               	movf	___lldiv@divisor+1,w,c
  3594  0038A2  5806               	subwfb	___lldiv@dividend+1,w,c
  3595  0038A4  500B               	movf	___lldiv@divisor+2,w,c
  3596  0038A6  5807               	subwfb	___lldiv@dividend+2,w,c
  3597  0038A8  500C               	movf	___lldiv@divisor+3,w,c
  3598  0038AA  5808               	subwfb	___lldiv@dividend+3,w,c
  3599  0038AC  A0D8               	btfss	status,0,c
  3600  0038AE  D009               	goto	l5047
  3601  0038B0  5009               	movf	___lldiv@divisor,w,c
  3602  0038B2  5E05               	subwf	___lldiv@dividend,f,c
  3603  0038B4  500A               	movf	___lldiv@divisor+1,w,c
  3604  0038B6  5A06               	subwfb	___lldiv@dividend+1,f,c
  3605  0038B8  500B               	movf	___lldiv@divisor+2,w,c
  3606  0038BA  5A07               	subwfb	___lldiv@dividend+2,f,c
  3607  0038BC  500C               	movf	___lldiv@divisor+3,w,c
  3608  0038BE  5A08               	subwfb	___lldiv@dividend+3,f,c
  3609  0038C0  800D               	bsf	___lldiv@quotient,0,c
  3610  0038C2                     l5047:
  3611  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  3612  0038C4  90D8               	bcf	status,0,c
  3613  0038C6  320C               	rrcf	___lldiv@divisor+3,f,c
  3614  0038C8  320B               	rrcf	___lldiv@divisor+2,f,c
  3615  0038CA  320A               	rrcf	___lldiv@divisor+1,f,c
  3616  0038CC  3209               	rrcf	___lldiv@divisor,f,c
  3617  0038CE  2E11               	decfsz	___lldiv@counter,f,c
  3618  0038D0  D7DF               	goto	u5320
  3619  0038D2                     l666:
  3620  0038D2  FFFF               	dw	65535	; assembler added errata NOP
  3621  0038D4  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3622  0038D8  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3623  0038DC  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3624  0038E0  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3625  0038E4  0012               	return		;funcret
  3626  0038E6  FFFF               	dw	65535	; errata NOP
  3627  0038E8                     __end_of___lldiv:
  3628                           	opt callstack 0
  3629                           
  3630 ;; *************** function ___fltol *****************
  3631 ;; Defined at:
  3632 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  f1              4   61[COMRAM] unsigned long 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  exp1            1   70[COMRAM] unsigned char 
  3637 ;;  sign1           1   69[COMRAM] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  4   61[COMRAM] long 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3647 ;;      Params:         4       0       0       0       0       0       0
  3648 ;;      Locals:         2       0       0       0       0       0       0
  3649 ;;      Temps:          4       0       0       0       0       0       0
  3650 ;;      Totals:        10       0       0       0       0       0       0
  3651 ;;Total ram usage:       10 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;;		_write_SRAM
  3659 ;;		_measureTemp
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text11
  3664  0033E6                     __ptext11:
  3665                           	opt callstack 0
  3666  0033E6                     ___fltol:
  3667                           	opt callstack 0
  3668  0033E6  FFFF               	dw	65535	; assembler added errata NOP
  3669                           
  3670                           ;incstack = 0
  3671  0033E8  3440               	rlcf	___fltol@f1+2,w,c
  3672  0033EA  3441               	rlcf	___fltol@f1+3,w,c
  3673  0033EC  6E47               	movwf	___fltol@exp1,c
  3674  0033EE  5047               	movf	___fltol@exp1,w,c
  3675  0033F0  A4D8               	btfss	status,2,c
  3676  0033F2  D00A               	goto	l5057
  3677  0033F4                     u5340:
  3678  0033F4  FFFF               	dw	65535	; assembler added errata NOP
  3679  0033F6  0E00               	movlw	0
  3680  0033F8  6E3E               	movwf	?___fltol,c
  3681  0033FA  0E00               	movlw	0
  3682  0033FC  6E3F               	movwf	?___fltol+1,c
  3683  0033FE  0E00               	movlw	0
  3684  003400  6E40               	movwf	?___fltol+2,c
  3685  003402  0E00               	movlw	0
  3686  003404  6E41               	movwf	?___fltol+3,c
  3687  003406  D056               	goto	l936
  3688  003408                     l5057:
  3689  003408  FFFF               	dw	65535	; assembler added errata NOP
  3690  00340A  C03E  F042         	movff	___fltol@f1,??___fltol
  3691  00340E  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  3692  003412  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  3693  003416  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  3694  00341A  0E20               	movlw	32
  3695  00341C  D006               	goto	u5350
  3696  00341E                     u5355:
  3697  00341E  FFFF               	dw	65535	; assembler added errata NOP
  3698  003420  90D8               	bcf	status,0,c
  3699  003422  3245               	rrcf	??___fltol+3,f,c
  3700  003424  3244               	rrcf	??___fltol+2,f,c
  3701  003426  3243               	rrcf	??___fltol+1,f,c
  3702  003428  3242               	rrcf	??___fltol,f,c
  3703  00342A                     u5350:
  3704  00342A  FFFF               	dw	65535	; assembler added errata NOP
  3705  00342C  2EE8               	decfsz	wreg,f,c
  3706  00342E  D7F7               	goto	u5355
  3707  003430  5042               	movf	??___fltol,w,c
  3708  003432  6E46               	movwf	___fltol@sign1,c
  3709  003434  8E40               	bsf	___fltol@f1+2,7,c
  3710  003436  0EFF               	movlw	255
  3711  003438  163E               	andwf	___fltol@f1,f,c
  3712  00343A  0EFF               	movlw	255
  3713  00343C  163F               	andwf	___fltol@f1+1,f,c
  3714  00343E  0EFF               	movlw	255
  3715  003440  1640               	andwf	___fltol@f1+2,f,c
  3716  003442  0E00               	movlw	0
  3717  003444  1641               	andwf	___fltol@f1+3,f,c
  3718  003446  0E96               	movlw	150
  3719  003448  5E47               	subwf	___fltol@exp1,f,c
  3720  00344A  AE47               	btfss	___fltol@exp1,7,c
  3721  00344C  D00E               	goto	l5077
  3722  00344E  5047               	movf	___fltol@exp1,w,c
  3723  003450  0A80               	xorlw	128
  3724  003452  0F97               	addlw	151
  3725  003454  A0D8               	btfss	status,0,c
  3726  003456  D7CE               	goto	u5340
  3727  003458                     l5073:
  3728  003458  FFFF               	dw	65535	; assembler added errata NOP
  3729  00345A  90D8               	bcf	status,0,c
  3730  00345C  3241               	rrcf	___fltol@f1+3,f,c
  3731  00345E  3240               	rrcf	___fltol@f1+2,f,c
  3732  003460  323F               	rrcf	___fltol@f1+1,f,c
  3733  003462  323E               	rrcf	___fltol@f1,f,c
  3734  003464  3E47               	incfsz	___fltol@exp1,f,c
  3735  003466  D7F8               	goto	l5073
  3736  003468  D010               	goto	u5390
  3737  00346A                     l5077:
  3738  00346A  FFFF               	dw	65535	; assembler added errata NOP
  3739  00346C  0E1F               	movlw	31
  3740  00346E  6447               	cpfsgt	___fltol@exp1,c
  3741  003470  D008               	goto	l5085
  3742  003472  D7C0               	goto	u5340
  3743  003474                     l5083:
  3744  003474  FFFF               	dw	65535	; assembler added errata NOP
  3745  003476  90D8               	bcf	status,0,c
  3746  003478  363E               	rlcf	___fltol@f1,f,c
  3747  00347A  363F               	rlcf	___fltol@f1+1,f,c
  3748  00347C  3640               	rlcf	___fltol@f1+2,f,c
  3749  00347E  3641               	rlcf	___fltol@f1+3,f,c
  3750  003480  0647               	decf	___fltol@exp1,f,c
  3751  003482                     l5085:
  3752  003482  FFFF               	dw	65535	; assembler added errata NOP
  3753  003484  5047               	movf	___fltol@exp1,w,c
  3754  003486  A4D8               	btfss	status,2,c
  3755  003488  D7F5               	goto	l5083
  3756  00348A                     u5390:
  3757  00348A  FFFF               	dw	65535	; assembler added errata NOP
  3758  00348C  5046               	movf	___fltol@sign1,w,c
  3759  00348E  B4D8               	btfsc	status,2,c
  3760  003490  D008               	goto	l5091
  3761  003492  1E41               	comf	___fltol@f1+3,f,c
  3762  003494  1E40               	comf	___fltol@f1+2,f,c
  3763  003496  1E3F               	comf	___fltol@f1+1,f,c
  3764  003498  6C3E               	negf	___fltol@f1,c
  3765  00349A  0E00               	movlw	0
  3766  00349C  223F               	addwfc	___fltol@f1+1,f,c
  3767  00349E  2240               	addwfc	___fltol@f1+2,f,c
  3768  0034A0  2241               	addwfc	___fltol@f1+3,f,c
  3769  0034A2                     l5091:
  3770  0034A2  FFFF               	dw	65535	; assembler added errata NOP
  3771  0034A4  C03E  F03E         	movff	___fltol@f1,?___fltol
  3772  0034A8  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  3773  0034AC  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  3774  0034B0  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  3775  0034B4                     l936:
  3776  0034B4  FFFF               	dw	65535	; assembler added errata NOP
  3777  0034B6  0012               	return		;funcret
  3778  0034B8  FFFF               	dw	65535	; errata NOP
  3779  0034BA                     __end_of___fltol:
  3780                           	opt callstack 0
  3781                           
  3782 ;; *************** function _Timer0_StopTimer *****************
  3783 ;; Defined at:
  3784 ;;		line 26 in file "timer.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2  143[None  ] int 
  3791 ;; Registers used:
  3792 ;;		None
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3798 ;;      Params:         0       0       0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    2
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_write_SRAM
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text12
  3813  00005C                     __ptext12:
  3814                           	opt callstack 0
  3815  00005C                     _Timer0_StopTimer:
  3816                           	opt callstack 0
  3817  00005C  FFFF               	dw	65535	; assembler added errata NOP
  3818                           
  3819                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  3820                           
  3821                           ;incstack = 0
  3822  00005E  9ED5               	bcf	4053,7,c	;volatile
  3823                           
  3824                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  3825  000060  0012               	return		;funcret
  3826  000062  FFFF               	dw	65535	; errata NOP
  3827  000064                     __end_of_Timer0_StopTimer:
  3828                           	opt callstack 0
  3829                           
  3830 ;; *************** function _Timer0_StartTimer *****************
  3831 ;; Defined at:
  3832 ;;		line 21 in file "timer.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2  111[None  ] int 
  3839 ;; Registers used:
  3840 ;;		None
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3846 ;;      Params:         0       0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    2
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;;		_write_SRAM
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text13
  3862  000064                     __ptext13:
  3863                           	opt callstack 0
  3864  000064                     _Timer0_StartTimer:
  3865                           	opt callstack 0
  3866  000064  FFFF               	dw	65535	; assembler added errata NOP
  3867                           
  3868                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  3869                           
  3870                           ;incstack = 0
  3871  000066  8ED5               	bsf	4053,7,c	;volatile
  3872                           
  3873                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  3874  000068  0012               	return		;funcret
  3875  00006A  FFFF               	dw	65535	; errata NOP
  3876  00006C                     __end_of_Timer0_StartTimer:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _ReadTime *****************
  3880 ;; Defined at:
  3881 ;;		line 17 in file "timer.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  4    0[COMRAM] unsigned long 
  3888 ;; Registers used:
  3889 ;;		None
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3895 ;;      Params:         4       0       0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0
  3898 ;;      Totals:         4       0       0       0       0       0       0
  3899 ;;Total ram usage:        4 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    2
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_write_SRAM
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text14
  3910  003F68                     __ptext14:
  3911                           	opt callstack 0
  3912  003F68                     _ReadTime:
  3913                           	opt callstack 0
  3914  003F68  FFFF               	dw	65535	; assembler added errata NOP
  3915                           
  3916                           ;timer.c: 18:  return time_ms;
  3917                           
  3918                           ;incstack = 0
  3919  003F6A  C0C5  F001         	movff	_time_ms,?_ReadTime	;volatile
  3920  003F6E  C0C6  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  3921  003F72  C0C7  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  3922  003F76  C0C8  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  3923  003F7A  0012               	return		;funcret
  3924  003F7C  FFFF               	dw	65535	; errata NOP
  3925  003F7E                     __end_of_ReadTime:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function _spiWrite *****************
  3929 ;; Defined at:
  3930 ;;		line 32 in file "usart.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  dat             1    wreg     unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  dat             1    0[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3944 ;;      Params:         0       0       0       0       0       0       0
  3945 ;;      Locals:         1       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0
  3947 ;;      Totals:         1       0       0       0       0       0       0
  3948 ;;Total ram usage:        1 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text15
  3959  000046                     __ptext15:
  3960                           	opt callstack 0
  3961  000046                     _spiWrite:
  3962                           	opt callstack 0
  3963  000046  FFFF               	dw	65535	; assembler added errata NOP
  3964                           
  3965                           ;incstack = 0
  3966                           ;spiWrite@dat stored from wreg
  3967  000048  6E01               	movwf	spiWrite@dat,c
  3968                           
  3969                           ;usart.c: 33:    SSPBUF = dat;
  3970  00004A  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
  3971  00004E  0012               	return		;funcret
  3972  000050  FFFF               	dw	65535	; errata NOP
  3973  000052                     __end_of_spiWrite:
  3974                           	opt callstack 0
  3975                           
  3976 ;; *************** function _spiInit *****************
  3977 ;; Defined at:
  3978 ;;		line 16 in file "usart.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  sType           1    wreg     enum E2115
  3981 ;;  sDataSample     1    0[COMRAM] enum E2123
  3982 ;;  sClockIdle      1    1[COMRAM] enum E2127
  3983 ;;  sTransmitEdg    1    2[COMRAM] enum E2131
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  sType           1    3[COMRAM] enum E2115
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3995 ;;      Params:         3       0       0       0       0       0       0
  3996 ;;      Locals:         1       0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0
  3998 ;;      Totals:         4       0       0       0       0       0       0
  3999 ;;Total ram usage:        4 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    2
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text16
  4010  003F38                     __ptext16:
  4011                           	opt callstack 0
  4012  003F38                     _spiInit:
  4013                           	opt callstack 0
  4014  003F38  FFFF               	dw	65535	; assembler added errata NOP
  4015                           
  4016                           ;incstack = 0
  4017                           ;spiInit@sType stored from wreg
  4018  003F3A  6E04               	movwf	spiInit@sType,c
  4019                           
  4020                           ;usart.c: 16: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);usart.c: 17: {;usart.c: 18:    TRISCbits.TRI
      +                          SC5 = 0;
  4021  003F3C  9A94               	bcf	3988,5,c	;volatile
  4022                           
  4023                           ;usart.c: 20:    SSPSTAT = sDataSample | sTransmitEdge;
  4024  003F3E  5001               	movf	spiInit@sDataSample,w,c
  4025  003F40  1003               	iorwf	spiInit@sTransmitEdge,w,c
  4026  003F42  6EC7               	movwf	4039,c	;volatile
  4027                           
  4028                           ;usart.c: 21:    TRISCbits.TRISC3 = 0;
  4029  003F44  9694               	bcf	3988,3,c	;volatile
  4030                           
  4031                           ;usart.c: 22:    SSPCON1 = sType | sClockIdle;
  4032  003F46  5004               	movf	spiInit@sType,w,c
  4033  003F48  1002               	iorwf	spiInit@sClockIdle,w,c
  4034  003F4A  6EC6               	movwf	4038,c	;volatile
  4035  003F4C  0012               	return		;funcret
  4036  003F4E  FFFF               	dw	65535	; errata NOP
  4037  003F50                     __end_of_spiInit:
  4038                           	opt callstack 0
  4039                           
  4040 ;; *************** function _set_duty_cycle *****************
  4041 ;; Defined at:
  4042 ;;		line 18 in file "pwm.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  upper_8         1    wreg     unsigned char 
  4045 ;;  lower_2         1    0[COMRAM] unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  upper_8         1    1[COMRAM] unsigned char 
  4048 ;;  mask            1    2[COMRAM] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4058 ;;      Params:         1       0       0       0       0       0       0
  4059 ;;      Locals:         2       0       0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0
  4061 ;;      Totals:         3       0       0       0       0       0       0
  4062 ;;Total ram usage:        3 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    2
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_main
  4069 ;;		_measureTemp
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text17
  4074  003EF4                     __ptext17:
  4075                           	opt callstack 0
  4076  003EF4                     _set_duty_cycle:
  4077                           	opt callstack 0
  4078  003EF4  FFFF               	dw	65535	; assembler added errata NOP
  4079                           
  4080                           ;incstack = 0
  4081                           ;set_duty_cycle@upper_8 stored from wreg
  4082  003EF6  6E02               	movwf	set_duty_cycle@upper_8,c
  4083                           
  4084                           ;pwm.c: 19:   CCPR1L = upper_8;
  4085  003EF8  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  4086                           
  4087                           ;pwm.c: 20:   char mask = 0;
  4088  003EFC  0E00               	movlw	0
  4089  003EFE  6E03               	movwf	set_duty_cycle@mask,c
  4090                           
  4091                           ;pwm.c: 21:   mask |= lower_2;
  4092  003F00  5001               	movf	set_duty_cycle@lower_2,w,c
  4093  003F02  1203               	iorwf	set_duty_cycle@mask,f,c
  4094                           
  4095                           ;pwm.c: 22:   mask = mask << 4;
  4096  003F04  3803               	swapf	set_duty_cycle@mask,w,c
  4097  003F06  0BF0               	andlw	240
  4098  003F08  6E03               	movwf	set_duty_cycle@mask,c
  4099                           
  4100                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  4101  003F0A  50BD               	movf	4029,w,c	;volatile
  4102  003F0C  0BCF               	andlw	207
  4103  003F0E  1003               	iorwf	set_duty_cycle@mask,w,c
  4104  003F10  6EBD               	movwf	4029,c	;volatile
  4105  003F12  0012               	return		;funcret
  4106  003F14  FFFF               	dw	65535	; errata NOP
  4107  003F16                     __end_of_set_duty_cycle:
  4108                           	opt callstack 0
  4109                           
  4110 ;; *************** function _read_SRAM *****************
  4111 ;; Defined at:
  4112 ;;		line 94 in file "main.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  address         2   38[BANK0 ] int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  time_elapsed    2   44[BANK0 ] int 
  4117 ;;  stored_temp     2   42[BANK0 ] int 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4127 ;;      Params:         0       2       0       0       0       0       0
  4128 ;;      Locals:         0       4       0       0       0       0       0
  4129 ;;      Temps:          0       2       0       0       0       0       0
  4130 ;;      Totals:         0       8       0       0       0       0       0
  4131 ;;Total ram usage:        8 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:   11
  4134 ;; This function calls:
  4135 ;;		_UARTNewLine
  4136 ;;		_UARTSendString
  4137 ;;		_int_to_char
  4138 ;;		_read_op
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text18
  4145  0031DA                     __ptext18:
  4146                           	opt callstack 0
  4147  0031DA                     _read_SRAM:
  4148                           	opt callstack 0
  4149  0031DA  FFFF               	dw	65535	; assembler added errata NOP
  4150                           
  4151                           ;main.c: 95:   int stored_temp = read_op(address);
  4152                           
  4153                           ;incstack = 0
  4154  0031DC  0100               	movlb	0	; () banked
  4155  0031DE  51A6               	movf	read_SRAM@address& (0+255),w,b
  4156  0031E0  EC8B  F01F         	call	_read_op
  4157  0031E4  0100               	movlb	0	; () banked
  4158  0031E6  6FA8               	movwf	??_read_SRAM& (0+255),b
  4159  0031E8  51A8               	movf	??_read_SRAM& (0+255),w,b
  4160  0031EA  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  4161  0031EC  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  4162                           
  4163                           ;main.c: 96:   int time_elapsed = read_op(address + 1);
  4164  0031EE  29A6               	incf	read_SRAM@address& (0+255),w,b
  4165  0031F0  EC8B  F01F         	call	_read_op
  4166  0031F4  0100               	movlb	0	; () banked
  4167  0031F6  6FA8               	movwf	??_read_SRAM& (0+255),b
  4168  0031F8  51A8               	movf	??_read_SRAM& (0+255),w,b
  4169  0031FA  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  4170  0031FC  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;main.c: 97:   TRISCbits.TRISC7 = 0;
  4174  0031FE  9E94               	bcf	3988,7,c	;volatile
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 98:   UARTSendString("Temperature at address ");
  4178  003200  0E1B               	movlw	low STR_3
  4179  003202  6FA0               	movwf	UARTSendString@c& (0+255),b
  4180  003204  0E06               	movlw	high STR_3
  4181  003206  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4182  003208  ECB9  F01C         	call	_UARTSendString	;wreg free
  4183                           
  4184                           ;main.c: 99:   UARTSendString(int_to_char(address));
  4185  00320C  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  4186  003210  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  4187  003214  0E00               	movlw	0
  4188  003216  BE7B               	btfsc	int_to_char@num+1,7,c
  4189  003218  0EFF               	movlw	-1
  4190  00321A  6E7C               	movwf	int_to_char@num+2,c
  4191  00321C  6E7D               	movwf	int_to_char@num+3,c
  4192  00321E  ECFD  F01D         	call	_int_to_char	;wreg free
  4193  003222  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4194  003226  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4195  00322A  ECB9  F01C         	call	_UARTSendString	;wreg free
  4196                           
  4197                           ;main.c: 100:   UARTSendString(": ");
  4198  00322E  0ECE               	movlw	low STR_4
  4199  003230  0100               	movlb	0	; () banked
  4200  003232  6FA0               	movwf	UARTSendString@c& (0+255),b
  4201  003234  0E06               	movlw	high STR_4
  4202  003236  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4203  003238  ECB9  F01C         	call	_UARTSendString	;wreg free
  4204                           
  4205                           ;main.c: 101:   UARTSendString(int_to_char(stored_temp));
  4206  00323C  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  4207  003240  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  4208  003244  0E00               	movlw	0
  4209  003246  BE7B               	btfsc	int_to_char@num+1,7,c
  4210  003248  0EFF               	movlw	-1
  4211  00324A  6E7C               	movwf	int_to_char@num+2,c
  4212  00324C  6E7D               	movwf	int_to_char@num+3,c
  4213  00324E  ECFD  F01D         	call	_int_to_char	;wreg free
  4214  003252  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4215  003256  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4216  00325A  ECB9  F01C         	call	_UARTSendString	;wreg free
  4217                           
  4218                           ;main.c: 102:   UARTSendString(" degrees C ");
  4219  00325E  0E69               	movlw	low STR_5
  4220  003260  0100               	movlb	0	; () banked
  4221  003262  6FA0               	movwf	UARTSendString@c& (0+255),b
  4222  003264  0E06               	movlw	high STR_5
  4223  003266  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4224  003268  ECB9  F01C         	call	_UARTSendString	;wreg free
  4225                           
  4226                           ;main.c: 103:   UARTNewLine();
  4227  00326C  ECBF  F01F         	call	_UARTNewLine	;wreg free
  4228                           
  4229                           ;main.c: 104:   UARTSendString("Time at address ");
  4230  003270  0E4B               	movlw	low STR_6
  4231  003272  0100               	movlb	0	; () banked
  4232  003274  6FA0               	movwf	UARTSendString@c& (0+255),b
  4233  003276  0E06               	movlw	high STR_6
  4234  003278  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4235  00327A  ECB9  F01C         	call	_UARTSendString	;wreg free
  4236                           
  4237                           ;main.c: 105:   UARTSendString(int_to_char(address + 1));
  4238  00327E  0E01               	movlw	1
  4239  003280  0100               	movlb	0	; () banked
  4240  003282  25A6               	addwf	read_SRAM@address& (0+255),w,b
  4241  003284  6FA8               	movwf	??_read_SRAM& (0+255),b
  4242  003286  0E00               	movlw	0
  4243  003288  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  4244  00328A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4245  00328C  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  4246  003290  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  4247  003294  0E00               	movlw	0
  4248  003296  BE7B               	btfsc	int_to_char@num+1,7,c
  4249  003298  0EFF               	movlw	-1
  4250  00329A  6E7C               	movwf	int_to_char@num+2,c
  4251  00329C  6E7D               	movwf	int_to_char@num+3,c
  4252  00329E  ECFD  F01D         	call	_int_to_char	;wreg free
  4253  0032A2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4254  0032A6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4255  0032AA  ECB9  F01C         	call	_UARTSendString	;wreg free
  4256                           
  4257                           ;main.c: 106:   UARTSendString(": ");
  4258  0032AE  0ECE               	movlw	low STR_4
  4259  0032B0  0100               	movlb	0	; () banked
  4260  0032B2  6FA0               	movwf	UARTSendString@c& (0+255),b
  4261  0032B4  0E06               	movlw	high STR_4
  4262  0032B6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4263  0032B8  ECB9  F01C         	call	_UARTSendString	;wreg free
  4264                           
  4265                           ;main.c: 107:   UARTSendString(int_to_char(time_elapsed));
  4266  0032BC  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  4267  0032C0  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  4268  0032C4  0E00               	movlw	0
  4269  0032C6  BE7B               	btfsc	int_to_char@num+1,7,c
  4270  0032C8  0EFF               	movlw	-1
  4271  0032CA  6E7C               	movwf	int_to_char@num+2,c
  4272  0032CC  6E7D               	movwf	int_to_char@num+3,c
  4273  0032CE  ECFD  F01D         	call	_int_to_char	;wreg free
  4274  0032D2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4275  0032D6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4276  0032DA  ECB9  F01C         	call	_UARTSendString	;wreg free
  4277                           
  4278                           ;main.c: 108:   UARTSendString(" minutes");
  4279  0032DE  0E7E               	movlw	low STR_8
  4280  0032E0  0100               	movlb	0	; () banked
  4281  0032E2  6FA0               	movwf	UARTSendString@c& (0+255),b
  4282  0032E4  0E06               	movlw	high STR_8
  4283  0032E6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4284  0032E8  ECB9  F01C         	call	_UARTSendString	;wreg free
  4285                           
  4286                           ;main.c: 109:   UARTNewLine();
  4287  0032EC  ECBF  F01F         	call	_UARTNewLine	;wreg free
  4288                           
  4289                           ;main.c: 110:   UARTSendString("Done reading from memory.");
  4290  0032F0  0E01               	movlw	low STR_9
  4291  0032F2  0100               	movlb	0	; () banked
  4292  0032F4  6FA0               	movwf	UARTSendString@c& (0+255),b
  4293  0032F6  0E06               	movlw	high STR_9
  4294  0032F8  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4295  0032FA  ECB9  F01C         	call	_UARTSendString	;wreg free
  4296                           
  4297                           ;main.c: 111:   UARTNewLine();
  4298  0032FE  ECBF  F01F         	call	_UARTNewLine	;wreg free
  4299                           
  4300                           ;main.c: 112:   UARTNewLine();
  4301  003302  ECBF  F01F         	call	_UARTNewLine	;wreg free
  4302  003306  0012               	return		;funcret
  4303  003308  FFFF               	dw	65535	; errata NOP
  4304  00330A                     __end_of_read_SRAM:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _read_op *****************
  4308 ;; Defined at:
  4309 ;;		line 30 in file "drive_memory.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  address         1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  address         1    0[COMRAM] unsigned char 
  4314 ;;  result          1    1[COMRAM] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      unsigned char 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4324 ;;      Params:         0       0       0       0       0       0       0
  4325 ;;      Locals:         2       0       0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0
  4327 ;;      Totals:         2       0       0       0       0       0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    2
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_read_SRAM
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text19
  4339  003F16                     __ptext19:
  4340                           	opt callstack 0
  4341  003F16                     _read_op:
  4342                           	opt callstack 0
  4343  003F16  FFFF               	dw	65535	; assembler added errata NOP
  4344                           
  4345                           ;incstack = 0
  4346                           ;read_op@address stored from wreg
  4347  003F18  6E01               	movwf	read_op@address,c
  4348                           
  4349                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  4350  003F1A  9094               	bcf	3988,0,c	;volatile
  4351                           
  4352                           ;drive_memory.c: 33:   TRISD = 0xFF;
  4353  003F1C  6895               	setf	3989,c	;volatile
  4354                           
  4355                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  4356  003F1E  0EC0               	movlw	192
  4357  003F20  1693               	andwf	3987,f,c	;volatile
  4358                           
  4359                           ;drive_memory.c: 35:   PORTB = address;
  4360  003F22  C001  FF81         	movff	read_op@address,3969	;volatile
  4361                           
  4362                           ;drive_memory.c: 36:   RB5 = 1;
  4363  003F26  8A81               	bsf	3969,5,c	;volatile
  4364                           
  4365                           ;drive_memory.c: 38:   RC0 = 1;
  4366  003F28  8082               	bsf	3970,0,c	;volatile
  4367                           
  4368                           ;drive_memory.c: 41:   RB5 = 0;
  4369  003F2A  9A81               	bcf	3969,5,c	;volatile
  4370                           
  4371                           ;drive_memory.c: 45:   RB5 = 1;
  4372                           
  4373                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  4374  003F2C  8A81               	bsf	3969,5,c	;volatile
  4375                           
  4376                           ;drive_memory.c: 46:   char result = PORTD;
  4377  003F2E  CF83 F002          	movff	3971,read_op@result	;volatile
  4378                           
  4379                           ;drive_memory.c: 47:   return result;
  4380  003F32  5002               	movf	read_op@result,w,c
  4381  003F34  0012               	return		;funcret
  4382  003F36  FFFF               	dw	65535	; errata NOP
  4383  003F38                     __end_of_read_op:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function _int_to_char *****************
  4387 ;; Defined at:
  4388 ;;		line 18 in file "lcd.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  num             4  121[COMRAM] unsigned long 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  result         10   18[BANK0 ] unsigned char [10]
  4393 ;;  the_num         4   28[BANK0 ] unsigned long 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2  121[COMRAM] PTR unsigned char 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4403 ;;      Params:         4       0       0       0       0       0       0
  4404 ;;      Locals:         0      14       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0
  4406 ;;      Totals:         4      14       0       0       0       0       0
  4407 ;;Total ram usage:       18 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:   10
  4410 ;; This function calls:
  4411 ;;		_getchar
  4412 ;;		_sprintf
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;;		_read_SRAM
  4416 ;;		_write_SRAM
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text20
  4421  003BFA                     __ptext20:
  4422                           	opt callstack 0
  4423  003BFA                     _int_to_char:
  4424                           	opt callstack 0
  4425  003BFA  FFFF               	dw	65535	; assembler added errata NOP
  4426                           
  4427                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  4428                           
  4429                           ;incstack = 0
  4430  003BFC  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  4431  003C00  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  4432  003C04  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  4433  003C08  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  4434                           
  4435                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  4436  003C0C  0E92               	movlw	low int_to_char@result
  4437  003C0E  0100               	movlb	0	; () banked
  4438  003C10  6F80               	movwf	sprintf@s& (0+255),b
  4439  003C12  0E00               	movlw	high int_to_char@result
  4440  003C14  6F81               	movwf	(sprintf@s+1)& (0+255),b
  4441  003C16  0EA3               	movlw	low STR_1
  4442  003C18  6F82               	movwf	sprintf@fmt& (0+255),b
  4443  003C1A  0E06               	movlw	high STR_1
  4444  003C1C  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  4445  003C1E  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  4446  003C22  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  4447  003C26  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  4448  003C2A  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  4449  003C2E  EC2D  F01D         	call	_sprintf	;wreg free
  4450                           
  4451                           ;lcd.c: 22:   getchar();
  4452  003C32  ECE7  F01F         	call	_getchar	;wreg free
  4453                           
  4454                           ;lcd.c: 23:   return result;
  4455  003C36  0E92               	movlw	low int_to_char@result
  4456  003C38  6E7A               	movwf	?_int_to_char,c
  4457  003C3A  0E00               	movlw	high int_to_char@result
  4458  003C3C  6E7B               	movwf	?_int_to_char+1,c
  4459  003C3E  0012               	return		;funcret
  4460  003C40  FFFF               	dw	65535	; errata NOP
  4461  003C42                     __end_of_int_to_char:
  4462                           	opt callstack 0
  4463                           
  4464 ;; *************** function _sprintf *****************
  4465 ;; Defined at:
  4466 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4469 ;;		 -> int_to_char@result(10), 
  4470 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4471 ;;		 -> STR_1(4), 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  f               6   10[BANK0 ] struct _IO_FILE
  4474 ;;  ap              2   16[BANK0 ] PTR void [1]
  4475 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4476 ;;  ret             2    0        int 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2    0[BANK0 ] int 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4486 ;;      Params:         0       8       0       0       0       0       0
  4487 ;;      Locals:         0      10       0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0
  4489 ;;      Totals:         0      18       0       0       0       0       0
  4490 ;;Total ram usage:       18 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    9
  4493 ;; This function calls:
  4494 ;;		_vfprintf
  4495 ;; This function is called by:
  4496 ;;		_int_to_char
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text21
  4501  003A5A                     __ptext21:
  4502                           	opt callstack 0
  4503  003A5A                     _sprintf:
  4504                           	opt callstack 0
  4505  003A5A  FFFF               	dw	65535	; assembler added errata NOP
  4506                           
  4507                           ;incstack = 0
  4508  003A5C  0E84               	movlw	low (?_sprintf+4)
  4509  003A5E  0100               	movlb	0	; () banked
  4510  003A60  6F90               	movwf	sprintf@ap& (0+255),b
  4511  003A62  0E00               	movlw	high (?_sprintf+4)
  4512  003A64  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  4513  003A66  C080  F08A         	movff	sprintf@s,sprintf@f
  4514  003A6A  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  4515                           
  4516                           ; BSR set to: 0
  4517  003A6E  0E00               	movlw	0
  4518  003A70  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  4519  003A72  0E00               	movlw	0
  4520  003A74  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  4521                           
  4522                           ; BSR set to: 0
  4523  003A76  0E00               	movlw	0
  4524  003A78  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  4525  003A7A  0E00               	movlw	0
  4526  003A7C  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529  003A7E  0E8A               	movlw	low sprintf@f
  4530  003A80  6E72               	movwf	vfprintf@fp,c
  4531  003A82  0E00               	movlw	high sprintf@f
  4532  003A84  6E73               	movwf	vfprintf@fp+1,c
  4533  003A86  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  4534  003A8A  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4535  003A8E  0E90               	movlw	low sprintf@ap
  4536  003A90  6E76               	movwf	vfprintf@ap,c
  4537  003A92  0E00               	movlw	high sprintf@ap
  4538  003A94  6E77               	movwf	vfprintf@ap+1,c
  4539  003A96  ECFD  F01C         	call	_vfprintf	;wreg free
  4540  003A9A  0100               	movlb	0	; () banked
  4541  003A9C  518C               	movf	(sprintf@f+2)& (0+255),w,b
  4542  003A9E  2580               	addwf	sprintf@s& (0+255),w,b
  4543  003AA0  6ED9               	movwf	fsr2l,c
  4544  003AA2  518D               	movf	(sprintf@f+3)& (0+255),w,b
  4545  003AA4  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  4546  003AA6  6EDA               	movwf	fsr2h,c
  4547  003AA8  0E00               	movlw	0
  4548  003AAA  6EDF               	movwf	indf2,c
  4549                           
  4550                           ; BSR set to: 0
  4551  003AAC  0012               	return		;funcret
  4552  003AAE  FFFF               	dw	65535	; errata NOP
  4553  003AB0                     __end_of_sprintf:
  4554                           	opt callstack 0
  4555                           
  4556 ;; *************** function _vfprintf *****************
  4557 ;; Defined at:
  4558 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  4561 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4562 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  4563 ;;		 -> STR_2(3), STR_1(4), 
  4564 ;;  ap              2  117[COMRAM] PTR PTR void 
  4565 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  4568 ;;		 -> STR_2(3), STR_1(4), 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2  113[COMRAM] int 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4578 ;;      Params:         6       0       0       0       0       0       0
  4579 ;;      Locals:         2       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0
  4581 ;;      Totals:         8       0       0       0       0       0       0
  4582 ;;Total ram usage:        8 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    8
  4585 ;; This function calls:
  4586 ;;		_vfpfcnvrt
  4587 ;; This function is called by:
  4588 ;;		_sprintf
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text22
  4593  0039FA                     __ptext22:
  4594                           	opt callstack 0
  4595  0039FA                     _vfprintf:
  4596                           	opt callstack 0
  4597  0039FA  FFFF               	dw	65535	; assembler added errata NOP
  4598                           
  4599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;incstack = 0
  4603  0039FC  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  4604  003A00  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4605                           
  4606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4607  003A04  0E00               	movlw	0
  4608  003A06  0100               	movlb	0	; () banked
  4609  003A08  6FCC               	movwf	(_nout+1)& (0+255),b
  4610  003A0A  0E00               	movlw	0
  4611  003A0C  6FCB               	movwf	_nout& (0+255),b
  4612                           
  4613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4614  003A0E  D014               	goto	l4475
  4615  003A10                     l4473:
  4616  003A10  FFFF               	dw	65535	; assembler added errata NOP
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4620  003A12  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4621  003A16  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4622  003A1A  0E78               	movlw	low vfprintf@cfmt
  4623  003A1C  6E45               	movwf	vfpfcnvrt@fmt,c
  4624  003A1E  0E00               	movlw	high vfprintf@cfmt
  4625  003A20  6E46               	movwf	vfpfcnvrt@fmt+1,c
  4626  003A22  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4627  003A26  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4628  003A2A  EC6B  F003         	call	_vfpfcnvrt	;wreg free
  4629  003A2E  5043               	movf	?_vfpfcnvrt,w,c
  4630  003A30  0100               	movlb	0	; () banked
  4631  003A32  27CB               	addwf	_nout& (0+255),f,b
  4632  003A34  5044               	movf	?_vfpfcnvrt+1,w,c
  4633  003A36  23CC               	addwfc	(_nout+1)& (0+255),f,b
  4634  003A38                     l4475:
  4635  003A38  FFFF               	dw	65535	; assembler added errata NOP
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4639  003A3A  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  4640  003A3E  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4641  003A42                     	if	0	;tblptru may be non-zero
  4642  003A42                     	endif
  4643  003A42                     	if	0	;tblptru may be non-zero
  4644  003A42                     	endif
  4645  003A42  0008               	tblrd		*
  4646  003A44  FFFF               	dw	65535	; errata NOP
  4647  003A46  50F5               	movf	tablat,w,c
  4648  003A48  0900               	iorlw	0
  4649  003A4A  A4D8               	btfss	status,2,c
  4650  003A4C  D7E1               	goto	l4473
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4654  003A4E  C0CB  F072         	movff	_nout,?_vfprintf
  4655  003A52  C0CC  F073         	movff	_nout+1,?_vfprintf+1
  4656                           
  4657                           ; BSR set to: 0
  4658  003A56  0012               	return		;funcret
  4659  003A58  FFFF               	dw	65535	; errata NOP
  4660  003A5A                     __end_of_vfprintf:
  4661                           	opt callstack 0
  4662                           
  4663 ;; *************** function _vfpfcnvrt *****************
  4664 ;; Defined at:
  4665 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4668 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4669 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4670 ;;		 -> vfprintf@cfmt(2), 
  4671 ;;  ap              2   70[COMRAM] PTR PTR void 
  4672 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  llu             8  105[COMRAM] unsigned long long 
  4675 ;;  ll              8   94[COMRAM] long long 
  4676 ;;  f               4    0        long long 
  4677 ;;  ct              3    0        unsigned char [3]
  4678 ;;  vp              2  102[COMRAM] PTR void 
  4679 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4680 ;;  done            2   88[COMRAM] int 
  4681 ;;  cp              2   86[COMRAM] PTR unsigned char 
  4682 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4683 ;;  i               2    0        int 
  4684 ;;  c               1  104[COMRAM] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2   66[COMRAM] int 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4694 ;;      Params:         6       0       0       0       0       0       0
  4695 ;;      Locals:        27       0       0       0       0       0       0
  4696 ;;      Temps:         14       0       0       0       0       0       0
  4697 ;;      Totals:        47       0       0       0       0       0       0
  4698 ;;Total ram usage:       47 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    7
  4701 ;; This function calls:
  4702 ;;		_atoi
  4703 ;;		_ctoa
  4704 ;;		_dtoa
  4705 ;;		_fputc
  4706 ;;		_isdigit
  4707 ;;		_otoa
  4708 ;;		_stoa
  4709 ;;		_strncmp
  4710 ;;		_utoa
  4711 ;;		_xtoa
  4712 ;; This function is called by:
  4713 ;;		_vfprintf
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text23
  4718  0006D6                     __ptext23:
  4719                           	opt callstack 0
  4720  0006D6                     _vfpfcnvrt:
  4721                           	opt callstack 0
  4722  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  4723                           
  4724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;incstack = 0
  4728  0006D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  0006DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  0006E0  CFDE FFF6          	movff	postinc2,tblptrl
  4731  0006E4  CFDD FFF7          	movff	postdec2,tblptrh
  4732  0006E8                     	if	0	;tblptru may be non-zero
  4733  0006E8                     	endif
  4734  0006E8                     	if	0	;tblptru may be non-zero
  4735  0006E8                     	endif
  4736  0006E8  0008               	tblrd		*
  4737  0006EA  FFFF               	dw	65535	; errata NOP
  4738  0006EC  50F5               	movf	tablat,w,c
  4739  0006EE  0A25               	xorlw	37
  4740  0006F0  A4D8               	btfss	status,2,c
  4741  0006F2  EF1C  F00C         	goto	l4453
  4742                           
  4743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  4744  0006F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4745  0006FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4746  0006FE  2ADE               	incf	postinc2,f,c
  4747  000700  0E00               	movlw	0
  4748  000702  22DD               	addwfc	postdec2,f,c
  4749                           
  4750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  4751  000704  0E00               	movlw	0
  4752  000706  0100               	movlb	0	; () banked
  4753  000708  6FCE               	movwf	(_width+1)& (0+255),b
  4754  00070A  0E00               	movlw	0
  4755  00070C  6FCD               	movwf	_width& (0+255),b
  4756  00070E  C0CD  F0D1         	movff	_width,_flags
  4757  000712  C0CE  F0D2         	movff	_width+1,_flags+1
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  4761  000716  69CF               	setf	_prec& (0+255),b
  4762  000718  69D0               	setf	(_prec+1)& (0+255),b
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  4766  00071A  0E00               	movlw	0
  4767  00071C  6E5A               	movwf	vfpfcnvrt@done+1,c
  4768  00071E  0E00               	movlw	0
  4769  000720  D020               	goto	L6
  4770  000722                     l4095:
  4771  000722  FFFF               	dw	65535	; assembler added errata NOP
  4772                           
  4773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  4774  000724  0100               	movlb	0	; () banked
  4775  000726  81D1               	bsf	_flags& (0+255),0,b
  4776  000728                     l4097:
  4777  000728  FFFF               	dw	65535	; assembler added errata NOP
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  4781  00072A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4782  00072E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4783  000732  2ADE               	incf	postinc2,f,c
  4784  000734  0E00               	movlw	0
  4785  000736  22DD               	addwfc	postdec2,f,c
  4786                           
  4787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  4788  000738  D03A               	goto	l4121
  4789  00073A                     l4099:
  4790  00073A  FFFF               	dw	65535	; assembler added errata NOP
  4791                           
  4792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  4793  00073C  0100               	movlb	0	; () banked
  4794  00073E  83D1               	bsf	_flags& (0+255),1,b
  4795  000740  D7F3               	goto	l4097
  4796  000742                     l4103:
  4797  000742  FFFF               	dw	65535	; assembler added errata NOP
  4798                           
  4799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  4800  000744  0100               	movlb	0	; () banked
  4801  000746  85D1               	bsf	_flags& (0+255),2,b
  4802  000748  D7EF               	goto	l4097
  4803  00074A                     l4107:
  4804  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4805                           
  4806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  4807  00074C  0100               	movlb	0	; () banked
  4808  00074E  87D1               	bsf	_flags& (0+255),3,b
  4809  000750  D7EB               	goto	l4097
  4810  000752                     l4111:
  4811  000752  FFFF               	dw	65535	; assembler added errata NOP
  4812                           
  4813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  4814  000754  0100               	movlb	0	; () banked
  4815  000756  89D1               	bsf	_flags& (0+255),4,b
  4816  000758  D7E7               	goto	l4097
  4817  00075A                     l4115:
  4818  00075A  FFFF               	dw	65535	; assembler added errata NOP
  4819                           
  4820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  4821  00075C  0E00               	movlw	0
  4822  00075E  6E5A               	movwf	vfpfcnvrt@done+1,c
  4823  000760  0E01               	movlw	1
  4824  000762                     L6:
  4825  000762  FFFF               	dw	65535	; assembler added errata NOP
  4826  000764  6E59               	movwf	vfpfcnvrt@done,c
  4827                           
  4828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  4829  000766  D023               	goto	l4121
  4830  000768                     l4119:
  4831  000768  FFFF               	dw	65535	; assembler added errata NOP
  4832  00076A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4833  00076E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4834  000772  CFDE FFF6          	movff	postinc2,tblptrl
  4835  000776  CFDD FFF7          	movff	postdec2,tblptrh
  4836  00077A                     	if	0	;tblptru may be non-zero
  4837  00077A                     	endif
  4838  00077A                     	if	0	;tblptru may be non-zero
  4839  00077A                     	endif
  4840  00077A  0008               	tblrd		*
  4841  00077C  FFFF               	dw	65535	; errata NOP
  4842  00077E  50F5               	movf	tablat,w,c
  4843  000780  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4844  000782  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  4845                           
  4846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 1, Range of values is 0 to 0
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte            4     3 (average)
  4852                           ;	Chosen strategy is simple_byte
  4853  000784  504A               	movf	??_vfpfcnvrt+1,w,c
  4854  000786  0A00               	xorlw	0	; case 0
  4855  000788  A4D8               	btfss	status,2,c
  4856  00078A  D7E7               	goto	l4115
  4857                           
  4858                           ; Switch size 1, requested type "simple"
  4859                           ; Number of cases is 5, Range of values is 32 to 48
  4860                           ; switch strategies available:
  4861                           ; Name         Instructions Cycles
  4862                           ; simple_byte           16     9 (average)
  4863                           ;	Chosen strategy is simple_byte
  4864  00078C  5049               	movf	??_vfpfcnvrt,w,c
  4865  00078E  0A20               	xorlw	32	; case 32
  4866  000790  B4D8               	btfsc	status,2,c
  4867  000792  D7DB               	goto	l4107
  4868  000794  0A03               	xorlw	3	; case 35
  4869  000796  B4D8               	btfsc	status,2,c
  4870  000798  D7DC               	goto	l4111
  4871  00079A  0A08               	xorlw	8	; case 43
  4872  00079C  B4D8               	btfsc	status,2,c
  4873  00079E  D7D1               	goto	l4103
  4874  0007A0  0A06               	xorlw	6	; case 45
  4875  0007A2  B4D8               	btfsc	status,2,c
  4876  0007A4  D7BE               	goto	l4095
  4877  0007A6  0A1D               	xorlw	29	; case 48
  4878  0007A8  B4D8               	btfsc	status,2,c
  4879  0007AA  D7C7               	goto	l4099
  4880  0007AC  D7D6               	goto	l4115
  4881  0007AE                     l4121:
  4882  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  4883                           
  4884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  4885  0007B0  5059               	movf	vfpfcnvrt@done,w,c
  4886  0007B2  105A               	iorwf	vfpfcnvrt@done+1,w,c
  4887  0007B4  B4D8               	btfsc	status,2,c
  4888  0007B6  D7D8               	goto	l4119
  4889                           
  4890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  4891  0007B8  0100               	movlb	0	; () banked
  4892  0007BA  B1D1               	btfsc	_flags& (0+255),0,b
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  4896  0007BC  93D1               	bcf	_flags& (0+255),1,b
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  4900  0007BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4901  0007C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4902  0007C6  CFDE FFF6          	movff	postinc2,tblptrl
  4903  0007CA  CFDD FFF7          	movff	postdec2,tblptrh
  4904  0007CE                     	if	0	;tblptru may be non-zero
  4905  0007CE                     	endif
  4906  0007CE                     	if	0	;tblptru may be non-zero
  4907  0007CE                     	endif
  4908  0007CE  0008               	tblrd		*
  4909  0007D0  FFFF               	dw	65535	; errata NOP
  4910  0007D2  50F5               	movf	tablat,w,c
  4911  0007D4  0A2A               	xorlw	42
  4912  0007D6  A4D8               	btfss	status,2,c
  4913  0007D8  D023               	goto	l4133
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  4917  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  0007E2  2ADE               	incf	postinc2,f,c
  4920  0007E4  0E00               	movlw	0
  4921  0007E6  22DD               	addwfc	postdec2,f,c
  4922                           
  4923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  4924  0007E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4925  0007EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4926  0007F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4927  0007F4  0E02               	movlw	2
  4928  0007F6  26DE               	addwf	postinc2,f,c
  4929  0007F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4930  0007FC  0E00               	movlw	0
  4931  0007FE  22DD               	addwfc	postdec2,f,c
  4932  000800  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4933  000804  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4934  000808  CFDE F0CD          	movff	postinc2,_width
  4935  00080C  CFDD F0CE          	movff	postdec2,_width+1
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  4939  000810  AFCE               	btfss	(_width+1)& (0+255),7,b
  4940  000812  D045               	goto	u4050
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  4944  000814  81D1               	bsf	_flags& (0+255),0,b
  4945                           
  4946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  4947  000816  6DCD               	negf	_width& (0+255),b
  4948  000818  1FCE               	comf	(_width+1)& (0+255),f,b
  4949  00081A  B0D8               	btfsc	status,0,c
  4950  00081C  2BCE               	incf	(_width+1)& (0+255),f,b
  4951  00081E  D03F               	goto	u4050
  4952  000820                     l4133:
  4953  000820  FFFF               	dw	65535	; assembler added errata NOP
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  4957  000822  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4958  000826  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4959  00082A  CFDE F008          	movff	postinc2,atoi@s
  4960  00082E  CFDD F009          	movff	postdec2,atoi@s+1
  4961  000832  ECA0  F015         	call	_atoi	;wreg free
  4962  000836  C008  F0CD         	movff	?_atoi,_width
  4963  00083A  C009  F0CE         	movff	?_atoi+1,_width+1
  4964                           
  4965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4966  00083E  D008               	goto	l4137
  4967  000840                     l4135:
  4968  000840  FFFF               	dw	65535	; assembler added errata NOP
  4969                           
  4970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  4971  000842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4972  000846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4973  00084A  2ADE               	incf	postinc2,f,c
  4974  00084C  0E00               	movlw	0
  4975  00084E  22DD               	addwfc	postdec2,f,c
  4976  000850                     l4137:
  4977  000850  FFFF               	dw	65535	; assembler added errata NOP
  4978  000852  0ED0               	movlw	208
  4979  000854  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4980  000856  0EFF               	movlw	255
  4981  000858  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4982  00085A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  00085E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  000862  CFDE FFF6          	movff	postinc2,tblptrl
  4985  000866  CFDD FFF7          	movff	postdec2,tblptrh
  4986  00086A                     	if	0	;tblptru may be non-zero
  4987  00086A                     	endif
  4988  00086A                     	if	0	;tblptru may be non-zero
  4989  00086A                     	endif
  4990  00086A  0008               	tblrd		*
  4991  00086C  FFFF               	dw	65535	; errata NOP
  4992  00086E  50F5               	movf	tablat,w,c
  4993  000870  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4994  000872  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  4995  000874  5049               	movf	??_vfpfcnvrt,w,c
  4996  000876  264B               	addwf	??_vfpfcnvrt+2,f,c
  4997  000878  504A               	movf	??_vfpfcnvrt+1,w,c
  4998  00087A  224C               	addwfc	??_vfpfcnvrt+3,f,c
  4999  00087C  504C               	movf	??_vfpfcnvrt+3,w,c
  5000  00087E  E106               	bnz	u4030
  5001  000880  0E0A               	movlw	10
  5002  000882  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5003  000884  B0D8               	btfsc	status,0,c
  5004  000886  D002               	goto	u4030
  5005  000888  0E01               	movlw	1
  5006  00088A  D002               	goto	u4040
  5007  00088C                     u4030:
  5008  00088C  FFFF               	dw	65535	; assembler added errata NOP
  5009  00088E  0E00               	movlw	0
  5010  000890                     u4040:
  5011  000890  FFFF               	dw	65535	; assembler added errata NOP
  5012  000892  6E5B               	movwf	_vfpfcnvrt$1172,c
  5013  000894  6A5C               	clrf	_vfpfcnvrt$1172+1,c
  5014  000896  505B               	movf	_vfpfcnvrt$1172,w,c
  5015  000898  105C               	iorwf	_vfpfcnvrt$1172+1,w,c
  5016  00089A  A4D8               	btfss	status,2,c
  5017  00089C  D7D1               	goto	l4135
  5018  00089E                     u4050:
  5019  00089E  FFFF               	dw	65535	; assembler added errata NOP
  5020                           
  5021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  5022  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5023  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5024  0008A8  CFDE FFF6          	movff	postinc2,tblptrl
  5025  0008AC  CFDD FFF7          	movff	postdec2,tblptrh
  5026  0008B0                     	if	0	;tblptru may be non-zero
  5027  0008B0                     	endif
  5028  0008B0                     	if	0	;tblptru may be non-zero
  5029  0008B0                     	endif
  5030  0008B0  0008               	tblrd		*
  5031  0008B2  FFFF               	dw	65535	; errata NOP
  5032  0008B4  50F5               	movf	tablat,w,c
  5033  0008B6  0A2E               	xorlw	46
  5034  0008B8  A4D8               	btfss	status,2,c
  5035  0008BA  D075               	goto	u4100
  5036                           
  5037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  5038  0008BC  0E00               	movlw	0
  5039  0008BE  0100               	movlb	0	; () banked
  5040  0008C0  6FD0               	movwf	(_prec+1)& (0+255),b
  5041  0008C2  0E00               	movlw	0
  5042  0008C4  6FCF               	movwf	_prec& (0+255),b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  5046  0008C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5047  0008CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  0008CE  2ADE               	incf	postinc2,f,c
  5049  0008D0  0E00               	movlw	0
  5050  0008D2  22DD               	addwfc	postdec2,f,c
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  5054  0008D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5055  0008D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5056  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  5057  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  5058  0008E4                     	if	0	;tblptru may be non-zero
  5059  0008E4                     	endif
  5060  0008E4                     	if	0	;tblptru may be non-zero
  5061  0008E4                     	endif
  5062  0008E4  0008               	tblrd		*
  5063  0008E6  FFFF               	dw	65535	; errata NOP
  5064  0008E8  50F5               	movf	tablat,w,c
  5065  0008EA  0A2A               	xorlw	42
  5066  0008EC  A4D8               	btfss	status,2,c
  5067  0008EE  D01C               	goto	l4153
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  5071  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5072  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5073  0008F8  2ADE               	incf	postinc2,f,c
  5074  0008FA  0E00               	movlw	0
  5075  0008FC  22DD               	addwfc	postdec2,f,c
  5076                           
  5077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  5078  0008FE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5079  000902  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5080  000906  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5081  00090A  0E02               	movlw	2
  5082  00090C  26DE               	addwf	postinc2,f,c
  5083  00090E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5084  000912  0E00               	movlw	0
  5085  000914  22DD               	addwfc	postdec2,f,c
  5086  000916  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5087  00091A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5088  00091E  CFDE F0CF          	movff	postinc2,_prec
  5089  000922  CFDD F0D0          	movff	postdec2,_prec+1
  5090                           
  5091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  5092  000926  D03F               	goto	u4100
  5093  000928                     l4153:
  5094  000928  FFFF               	dw	65535	; assembler added errata NOP
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  5098  00092A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5099  00092E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5100  000932  CFDE F008          	movff	postinc2,atoi@s
  5101  000936  CFDD F009          	movff	postdec2,atoi@s+1
  5102  00093A  ECA0  F015         	call	_atoi	;wreg free
  5103  00093E  C008  F0CF         	movff	?_atoi,_prec
  5104  000942  C009  F0D0         	movff	?_atoi+1,_prec+1
  5105                           
  5106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5107  000946  D008               	goto	l4157
  5108  000948                     l4155:
  5109  000948  FFFF               	dw	65535	; assembler added errata NOP
  5110                           
  5111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  5112  00094A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5113  00094E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5114  000952  2ADE               	incf	postinc2,f,c
  5115  000954  0E00               	movlw	0
  5116  000956  22DD               	addwfc	postdec2,f,c
  5117  000958                     l4157:
  5118  000958  FFFF               	dw	65535	; assembler added errata NOP
  5119  00095A  0ED0               	movlw	208
  5120  00095C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  5121  00095E  0EFF               	movlw	255
  5122  000960  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  5123  000962  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5124  000966  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5125  00096A  CFDE FFF6          	movff	postinc2,tblptrl
  5126  00096E  CFDD FFF7          	movff	postdec2,tblptrh
  5127  000972                     	if	0	;tblptru may be non-zero
  5128  000972                     	endif
  5129  000972                     	if	0	;tblptru may be non-zero
  5130  000972                     	endif
  5131  000972  0008               	tblrd		*
  5132  000974  FFFF               	dw	65535	; errata NOP
  5133  000976  50F5               	movf	tablat,w,c
  5134  000978  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5135  00097A  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5136  00097C  5049               	movf	??_vfpfcnvrt,w,c
  5137  00097E  264B               	addwf	??_vfpfcnvrt+2,f,c
  5138  000980  504A               	movf	??_vfpfcnvrt+1,w,c
  5139  000982  224C               	addwfc	??_vfpfcnvrt+3,f,c
  5140  000984  504C               	movf	??_vfpfcnvrt+3,w,c
  5141  000986  E106               	bnz	u4080
  5142  000988  0E0A               	movlw	10
  5143  00098A  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5144  00098C  B0D8               	btfsc	status,0,c
  5145  00098E  D002               	goto	u4080
  5146  000990  0E01               	movlw	1
  5147  000992  D002               	goto	u4090
  5148  000994                     u4080:
  5149  000994  FFFF               	dw	65535	; assembler added errata NOP
  5150  000996  0E00               	movlw	0
  5151  000998                     u4090:
  5152  000998  FFFF               	dw	65535	; assembler added errata NOP
  5153  00099A  6E5D               	movwf	_vfpfcnvrt$1173,c
  5154  00099C  6A5E               	clrf	_vfpfcnvrt$1173+1,c
  5155  00099E  505D               	movf	_vfpfcnvrt$1173,w,c
  5156  0009A0  105E               	iorwf	_vfpfcnvrt$1173+1,w,c
  5157  0009A2  A4D8               	btfss	status,2,c
  5158  0009A4  D7D1               	goto	l4155
  5159  0009A6                     u4100:
  5160  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  5161                           
  5162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5163  0009A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5164  0009AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5165  0009B0  CFDE FFF6          	movff	postinc2,tblptrl
  5166  0009B4  CFDD FFF7          	movff	postdec2,tblptrh
  5167  0009B8                     	if	0	;tblptru may be non-zero
  5168  0009B8                     	endif
  5169  0009B8                     	if	0	;tblptru may be non-zero
  5170  0009B8                     	endif
  5171  0009B8  0008               	tblrd		*
  5172  0009BA  FFFF               	dw	65535	; errata NOP
  5173  0009BC  50F5               	movf	tablat,w,c
  5174  0009BE  0A63               	xorlw	99
  5175  0009C0  A4D8               	btfss	status,2,c
  5176  0009C2  D027               	goto	l4171
  5177                           
  5178                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5179  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5180  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5181  0009CC  2ADE               	incf	postinc2,f,c
  5182  0009CE  0E00               	movlw	0
  5183  0009D0  22DD               	addwfc	postdec2,f,c
  5184                           
  5185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5186  0009D2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5187  0009D6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5188  0009DA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5189  0009DE  0E02               	movlw	2
  5190  0009E0  26DE               	addwf	postinc2,f,c
  5191  0009E2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5192  0009E6  0E00               	movlw	0
  5193  0009E8  22DD               	addwfc	postdec2,f,c
  5194  0009EA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5195  0009EE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5196  0009F2  50DF               	movf	indf2,w,c
  5197  0009F4  6E69               	movwf	vfpfcnvrt@c,c
  5198                           
  5199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5200  0009F6  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5201  0009FA  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5202  0009FE  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5203  000A02  EC83  F01D         	call	_ctoa	;wreg free
  5204  000A06  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  5205  000A0A  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5206  000A0E  EF38  F00C         	goto	l582
  5207  000A12                     l4171:
  5208  000A12  FFFF               	dw	65535	; assembler added errata NOP
  5209                           
  5210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  5211  000A14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5212  000A18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5213  000A1C  CFDE F001          	movff	postinc2,strncmp@_l
  5214  000A20  CFDD F002          	movff	postdec2,strncmp@_l+1
  5215  000A24  0E8B               	movlw	low STR_15
  5216  000A26  6E03               	movwf	strncmp@_r,c
  5217  000A28  0E06               	movlw	high STR_15
  5218  000A2A  6E04               	movwf	strncmp@_r+1,c
  5219  000A2C  0E00               	movlw	0
  5220  000A2E  6E06               	movwf	strncmp@n+1,c
  5221  000A30  0E03               	movlw	3
  5222  000A32  6E05               	movwf	strncmp@n,c
  5223  000A34  ECC2  F01A         	call	_strncmp	;wreg free
  5224  000A38  5001               	movf	?_strncmp,w,c
  5225  000A3A  1002               	iorwf	?_strncmp+1,w,c
  5226  000A3C  B4D8               	btfsc	status,2,c
  5227  000A3E  D016               	goto	u4130
  5228  000A40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5229  000A44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5230  000A48  CFDE F001          	movff	postinc2,strncmp@_l
  5231  000A4C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5232  000A50  0E8F               	movlw	low STR_19
  5233  000A52  6E03               	movwf	strncmp@_r,c
  5234  000A54  0E06               	movlw	high STR_19
  5235  000A56  6E04               	movwf	strncmp@_r+1,c
  5236  000A58  0E00               	movlw	0
  5237  000A5A  6E06               	movwf	strncmp@n+1,c
  5238  000A5C  0E03               	movlw	3
  5239  000A5E  6E05               	movwf	strncmp@n,c
  5240  000A60  ECC2  F01A         	call	_strncmp	;wreg free
  5241  000A64  5001               	movf	?_strncmp,w,c
  5242  000A66  1002               	iorwf	?_strncmp+1,w,c
  5243  000A68  A4D8               	btfss	status,2,c
  5244  000A6A  D043               	goto	l4181
  5245  000A6C                     u4130:
  5246  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  5247                           
  5248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  5249  000A6E  0E03               	movlw	3
  5250  000A70  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5251  000A74  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5252  000A78  26DE               	addwf	postinc2,f,c
  5253  000A7A  0E00               	movlw	0
  5254  000A7C  22DD               	addwfc	postdec2,f,c
  5255                           
  5256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5257  000A7E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5258  000A82  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5259  000A86  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5260  000A8A  0E02               	movlw	2
  5261  000A8C  26DE               	addwf	postinc2,f,c
  5262  000A8E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5263  000A92  0E00               	movlw	0
  5264  000A94  22DD               	addwfc	postdec2,f,c
  5265  000A96  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5266  000A9A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5267  000A9E  50DF               	movf	indf2,w,c
  5268  000AA0  6E5F               	movwf	vfpfcnvrt@ll,c
  5269  000AA2  0E00               	movlw	0
  5270  000AA4  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  5271  000AA6  0EFF               	movlw	-1
  5272  000AA8  6E60               	movwf	vfpfcnvrt@ll+1,c
  5273  000AAA                     L7:
  5274  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  5275  000AAC  6E61               	movwf	vfpfcnvrt@ll+2,c
  5276  000AAE  6E62               	movwf	vfpfcnvrt@ll+3,c
  5277  000AB0  6E63               	movwf	vfpfcnvrt@ll+4,c
  5278  000AB2  6E64               	movwf	vfpfcnvrt@ll+5,c
  5279  000AB4  6E65               	movwf	vfpfcnvrt@ll+6,c
  5280  000AB6  6E66               	movwf	vfpfcnvrt@ll+7,c
  5281  000AB8                     l4177:
  5282  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  5283                           
  5284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  5285  000ABA  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5286  000ABE  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5287  000AC2  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5288  000AC6  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5289  000ACA  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5290  000ACE  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5291  000AD2  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5292  000AD6  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5293  000ADA  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5294  000ADE  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5295  000AE2  EC9E  F00F         	call	_dtoa	;wreg free
  5296  000AE6  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5297  000AEA  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5298  000AEE  EF38  F00C         	goto	l582
  5299  000AF2                     l4181:
  5300  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  5301                           
  5302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  5303  000AF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5304  000AF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5305  000AFC  CFDE F001          	movff	postinc2,strncmp@_l
  5306  000B00  CFDD F002          	movff	postdec2,strncmp@_l+1
  5307  000B04  0E8C               	movlw	low (STR_15+1)
  5308  000B06  6E03               	movwf	strncmp@_r,c
  5309  000B08  0E06               	movlw	high (STR_15+1)
  5310  000B0A  6E04               	movwf	strncmp@_r+1,c
  5311  000B0C  0E00               	movlw	0
  5312  000B0E  6E06               	movwf	strncmp@n+1,c
  5313  000B10  0E02               	movlw	2
  5314  000B12  6E05               	movwf	strncmp@n,c
  5315  000B14  ECC2  F01A         	call	_strncmp	;wreg free
  5316  000B18  5001               	movf	?_strncmp,w,c
  5317  000B1A  1002               	iorwf	?_strncmp+1,w,c
  5318  000B1C  B4D8               	btfsc	status,2,c
  5319  000B1E  D016               	goto	u4150
  5320  000B20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5321  000B24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5322  000B28  CFDE F001          	movff	postinc2,strncmp@_l
  5323  000B2C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5324  000B30  0E90               	movlw	low (STR_19+1)
  5325  000B32  6E03               	movwf	strncmp@_r,c
  5326  000B34  0E06               	movlw	high (STR_19+1)
  5327  000B36  6E04               	movwf	strncmp@_r+1,c
  5328  000B38  0E00               	movlw	0
  5329  000B3A  6E06               	movwf	strncmp@n+1,c
  5330  000B3C  0E02               	movlw	2
  5331  000B3E  6E05               	movwf	strncmp@n,c
  5332  000B40  ECC2  F01A         	call	_strncmp	;wreg free
  5333  000B44  5001               	movf	?_strncmp,w,c
  5334  000B46  1002               	iorwf	?_strncmp+1,w,c
  5335  000B48  A4D8               	btfss	status,2,c
  5336  000B4A  D008               	goto	l4191
  5337  000B4C                     u4150:
  5338  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  5339                           
  5340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  5341  000B4E  0E02               	movlw	2
  5342  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5343  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5344  000B58  26DE               	addwf	postinc2,f,c
  5345  000B5A  D023               	goto	L17
  5346  000B5C                     l4191:
  5347  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  5348                           
  5349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5350  000B5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5351  000B62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5352  000B66  CFDE FFF6          	movff	postinc2,tblptrl
  5353  000B6A  CFDD FFF7          	movff	postdec2,tblptrh
  5354  000B6E                     	if	0	;tblptru may be non-zero
  5355  000B6E                     	endif
  5356  000B6E                     	if	0	;tblptru may be non-zero
  5357  000B6E                     	endif
  5358  000B6E  0008               	tblrd		*
  5359  000B70  FFFF               	dw	65535	; errata NOP
  5360  000B72  50F5               	movf	tablat,w,c
  5361  000B74  0A64               	xorlw	100
  5362  000B76  B4D8               	btfsc	status,2,c
  5363  000B78  D00E               	goto	u4170
  5364  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5365  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5366  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  5367  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  5368  000B8A                     	if	0	;tblptru may be non-zero
  5369  000B8A                     	endif
  5370  000B8A                     	if	0	;tblptru may be non-zero
  5371  000B8A                     	endif
  5372  000B8A  0008               	tblrd		*
  5373  000B8C  FFFF               	dw	65535	; errata NOP
  5374  000B8E  50F5               	movf	tablat,w,c
  5375  000B90  0A69               	xorlw	105
  5376  000B92  A4D8               	btfss	status,2,c
  5377  000B94  D021               	goto	l4201
  5378  000B96                     u4170:
  5379  000B96  FFFF               	dw	65535	; assembler added errata NOP
  5380                           
  5381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5382  000B98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5383  000B9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5384  000BA0  2ADE               	incf	postinc2,f,c
  5385  000BA2                     L17:
  5386  000BA2  FFFF               	dw	65535	; assembler added errata NOP
  5387  000BA4  0E00               	movlw	0
  5388  000BA6  22DD               	addwfc	postdec2,f,c
  5389                           
  5390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5391  000BA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5392  000BAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5393  000BB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5394  000BB4  0E02               	movlw	2
  5395  000BB6  26DE               	addwf	postinc2,f,c
  5396  000BB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5397  000BBC  0E00               	movlw	0
  5398  000BBE  22DD               	addwfc	postdec2,f,c
  5399  000BC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5400  000BC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5401  000BC8  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  5402  000BCC  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  5403  000BD0  0E00               	movlw	0
  5404  000BD2  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  5405  000BD4  0EFF               	movlw	-1
  5406  000BD6  D769               	goto	L7
  5407  000BD8                     l4201:
  5408  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  5409                           
  5410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5411  000BDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5412  000BDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5413  000BE2  CFDE F001          	movff	postinc2,strncmp@_l
  5414  000BE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5415  000BEA  0EAD               	movlw	low STR_33
  5416  000BEC  6E03               	movwf	strncmp@_r,c
  5417  000BEE  0E06               	movlw	high STR_33
  5418  000BF0  6E04               	movwf	strncmp@_r+1,c
  5419  000BF2  0E00               	movlw	0
  5420  000BF4  6E06               	movwf	strncmp@n+1,c
  5421  000BF6  0E02               	movlw	2
  5422  000BF8  6E05               	movwf	strncmp@n,c
  5423  000BFA  ECC2  F01A         	call	_strncmp	;wreg free
  5424  000BFE  5001               	movf	?_strncmp,w,c
  5425  000C00  1002               	iorwf	?_strncmp+1,w,c
  5426  000C02  B4D8               	btfsc	status,2,c
  5427  000C04  D016               	goto	u4190
  5428  000C06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5429  000C0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5430  000C0E  CFDE F001          	movff	postinc2,strncmp@_l
  5431  000C12  CFDD F002          	movff	postdec2,strncmp@_l+1
  5432  000C16  0EB3               	movlw	low STR_37
  5433  000C18  6E03               	movwf	strncmp@_r,c
  5434  000C1A  0E06               	movlw	high STR_37
  5435  000C1C  6E04               	movwf	strncmp@_r+1,c
  5436  000C1E  0E00               	movlw	0
  5437  000C20  6E06               	movwf	strncmp@n+1,c
  5438  000C22  0E02               	movlw	2
  5439  000C24  6E05               	movwf	strncmp@n,c
  5440  000C26  ECC2  F01A         	call	_strncmp	;wreg free
  5441  000C2A  5001               	movf	?_strncmp,w,c
  5442  000C2C  1002               	iorwf	?_strncmp+1,w,c
  5443  000C2E  A4D8               	btfss	status,2,c
  5444  000C30  D043               	goto	l4211
  5445  000C32                     u4190:
  5446  000C32  FFFF               	dw	65535	; assembler added errata NOP
  5447                           
  5448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5449  000C34  0E02               	movlw	2
  5450  000C36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5451  000C3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5452  000C3E  26DE               	addwf	postinc2,f,c
  5453  000C40  0E00               	movlw	0
  5454  000C42  22DD               	addwfc	postdec2,f,c
  5455                           
  5456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5457  000C44  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5458  000C48  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5459  000C4C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5460  000C50  0E04               	movlw	4
  5461  000C52  26DE               	addwf	postinc2,f,c
  5462  000C54  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5463  000C58  0E00               	movlw	0
  5464  000C5A  22DD               	addwfc	postdec2,f,c
  5465  000C5C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5466  000C60  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5467  000C64  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5468  000C68  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5469  000C6C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5470  000C70  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5471  000C74  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5472  000C78  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5473  000C7C  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5474  000C80  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5475  000C84  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  5476  000C86  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  5477  000C88  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  5478  000C8A  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5479  000C8E  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5480  000C92  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5481  000C96  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5482  000C9A  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5483  000C9E  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5484  000CA2  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5485  000CA6  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5486  000CAA  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5487  000CAE  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5488  000CB2  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5489  000CB6  D700               	goto	l4177
  5490  000CB8                     l4211:
  5491  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  5492                           
  5493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  5494  000CBA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5495  000CBE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5496  000CC2  CFDE F001          	movff	postinc2,strncmp@_l
  5497  000CC6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5498  000CCA  0EB0               	movlw	low STR_42
  5499  000CCC  6E03               	movwf	strncmp@_r,c
  5500  000CCE  0E06               	movlw	high STR_42
  5501  000CD0  6E04               	movwf	strncmp@_r+1,c
  5502  000CD2  0E00               	movlw	0
  5503  000CD4  6E06               	movwf	strncmp@n+1,c
  5504  000CD6  0E02               	movlw	2
  5505  000CD8  6E05               	movwf	strncmp@n,c
  5506  000CDA  ECC2  F01A         	call	_strncmp	;wreg free
  5507  000CDE  5001               	movf	?_strncmp,w,c
  5508  000CE0  1002               	iorwf	?_strncmp+1,w,c
  5509  000CE2  B4D8               	btfsc	status,2,c
  5510  000CE4  D016               	goto	u4210
  5511  000CE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5512  000CEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5513  000CEE  CFDE F001          	movff	postinc2,strncmp@_l
  5514  000CF2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5515  000CF6  0EB6               	movlw	low STR_46
  5516  000CF8  6E03               	movwf	strncmp@_r,c
  5517  000CFA  0E06               	movlw	high STR_46
  5518  000CFC  6E04               	movwf	strncmp@_r+1,c
  5519  000CFE  0E00               	movlw	0
  5520  000D00  6E06               	movwf	strncmp@n+1,c
  5521  000D02  0E02               	movlw	2
  5522  000D04  6E05               	movwf	strncmp@n,c
  5523  000D06  ECC2  F01A         	call	_strncmp	;wreg free
  5524  000D0A  5001               	movf	?_strncmp,w,c
  5525  000D0C  1002               	iorwf	?_strncmp+1,w,c
  5526  000D0E  A4D8               	btfss	status,2,c
  5527  000D10  D028               	goto	l4221
  5528  000D12                     u4210:
  5529  000D12  FFFF               	dw	65535	; assembler added errata NOP
  5530                           
  5531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  5532  000D14  0E02               	movlw	2
  5533  000D16  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5534  000D1A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5535  000D1E  26DE               	addwf	postinc2,f,c
  5536  000D20  0E00               	movlw	0
  5537  000D22  22DD               	addwfc	postdec2,f,c
  5538                           
  5539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5540  000D24  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5541  000D28  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5542  000D2C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5543  000D30  0E02               	movlw	2
  5544  000D32  26DE               	addwf	postinc2,f,c
  5545  000D34  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5546  000D38  0E00               	movlw	0
  5547  000D3A  22DD               	addwfc	postdec2,f,c
  5548  000D3C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5549  000D40  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5550  000D44  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5551  000D48  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5552  000D4C  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5553  000D50  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5554  000D54  6A61               	clrf	vfpfcnvrt@ll+2,c
  5555  000D56  6A62               	clrf	vfpfcnvrt@ll+3,c
  5556  000D58  6A63               	clrf	vfpfcnvrt@ll+4,c
  5557  000D5A  6A64               	clrf	vfpfcnvrt@ll+5,c
  5558  000D5C  6A65               	clrf	vfpfcnvrt@ll+6,c
  5559  000D5E  6A66               	clrf	vfpfcnvrt@ll+7,c
  5560  000D60  D6AB               	goto	l4177
  5561  000D62                     l4221:
  5562  000D62  FFFF               	dw	65535	; assembler added errata NOP
  5563                           
  5564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5565  000D64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5566  000D68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5567  000D6C  CFDE F001          	movff	postinc2,strncmp@_l
  5568  000D70  CFDD F002          	movff	postdec2,strncmp@_l+1
  5569  000D74  0E97               	movlw	low STR_51
  5570  000D76  6E03               	movwf	strncmp@_r,c
  5571  000D78  0E06               	movlw	high STR_51
  5572  000D7A  6E04               	movwf	strncmp@_r+1,c
  5573  000D7C  0E00               	movlw	0
  5574  000D7E  6E06               	movwf	strncmp@n+1,c
  5575  000D80  0E03               	movlw	3
  5576  000D82  6E05               	movwf	strncmp@n,c
  5577  000D84  ECC2  F01A         	call	_strncmp	;wreg free
  5578  000D88  5001               	movf	?_strncmp,w,c
  5579  000D8A  1002               	iorwf	?_strncmp+1,w,c
  5580  000D8C  A4D8               	btfss	status,2,c
  5581  000D8E  D041               	goto	l4229
  5582                           
  5583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  5584  000D90  0E03               	movlw	3
  5585  000D92  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5586  000D96  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5587  000D9A  26DE               	addwf	postinc2,f,c
  5588  000D9C  0E00               	movlw	0
  5589  000D9E  22DD               	addwfc	postdec2,f,c
  5590                           
  5591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5592  000DA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5593  000DA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5594  000DA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5595  000DAC  0E02               	movlw	2
  5596  000DAE  26DE               	addwf	postinc2,f,c
  5597  000DB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5598  000DB4  0E00               	movlw	0
  5599  000DB6  22DD               	addwfc	postdec2,f,c
  5600  000DB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5601  000DBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5602  000DC0  50DF               	movf	indf2,w,c
  5603  000DC2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5604  000DC4  504B               	movf	??_vfpfcnvrt+2,w,c
  5605  000DC6  6E6A               	movwf	vfpfcnvrt@llu,c
  5606  000DC8  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5607  000DCA                     L8:
  5608  000DCA  FFFF               	dw	65535	; assembler added errata NOP
  5609  000DCC  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5610  000DCE  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5611  000DD0                     L9:
  5612  000DD0  FFFF               	dw	65535	; assembler added errata NOP
  5613  000DD2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5614  000DD4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5615  000DD6  6A70               	clrf	vfpfcnvrt@llu+6,c
  5616  000DD8  6A71               	clrf	vfpfcnvrt@llu+7,c
  5617                           
  5618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  5619  000DDA  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5620  000DDE  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5621  000DE2  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5622  000DE6  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5623  000DEA  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5624  000DEE  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5625  000DF2  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5626  000DF6  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5627  000DFA  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5628  000DFE  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5629  000E02  ECD3  F014         	call	_otoa	;wreg free
  5630  000E06  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5631  000E0A  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5632  000E0E  EF38  F00C         	goto	l582
  5633  000E12                     l4229:
  5634  000E12  FFFF               	dw	65535	; assembler added errata NOP
  5635                           
  5636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5637  000E14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5638  000E18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5639  000E1C  CFDE F001          	movff	postinc2,strncmp@_l
  5640  000E20  CFDD F002          	movff	postdec2,strncmp@_l+1
  5641  000E24  0E98               	movlw	low (STR_51+1)
  5642  000E26  6E03               	movwf	strncmp@_r,c
  5643  000E28  0E06               	movlw	high (STR_51+1)
  5644  000E2A  6E04               	movwf	strncmp@_r+1,c
  5645  000E2C  0E00               	movlw	0
  5646  000E2E  6E06               	movwf	strncmp@n+1,c
  5647  000E30  0E02               	movlw	2
  5648  000E32  6E05               	movwf	strncmp@n,c
  5649  000E34  ECC2  F01A         	call	_strncmp	;wreg free
  5650  000E38  5001               	movf	?_strncmp,w,c
  5651  000E3A  1002               	iorwf	?_strncmp+1,w,c
  5652  000E3C  B4D8               	btfsc	status,2,c
  5653  000E3E  D06B               	goto	u4260
  5654                           
  5655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  5656                           
  5657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5658                           
  5659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  5660  000E40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  000E44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  5663  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  5664  000E50                     	if	0	;tblptru may be non-zero
  5665  000E50                     	endif
  5666  000E50                     	if	0	;tblptru may be non-zero
  5667  000E50                     	endif
  5668  000E50  0008               	tblrd		*
  5669  000E52  FFFF               	dw	65535	; errata NOP
  5670  000E54  50F5               	movf	tablat,w,c
  5671  000E56  0A6F               	xorlw	111
  5672  000E58  A4D8               	btfss	status,2,c
  5673  000E5A  D006               	goto	l4245
  5674                           
  5675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  5676  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5677  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5678  000E64  2ADE               	incf	postinc2,f,c
  5679  000E66  D05E               	goto	L22
  5680  000E68                     l4245:
  5681  000E68  FFFF               	dw	65535	; assembler added errata NOP
  5682                           
  5683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  5684  000E6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5685  000E6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5686  000E72  CFDE F001          	movff	postinc2,strncmp@_l
  5687  000E76  CFDD F002          	movff	postdec2,strncmp@_l+1
  5688  000E7A  0EBF               	movlw	low STR_61
  5689  000E7C  6E03               	movwf	strncmp@_r,c
  5690  000E7E  0E06               	movlw	high STR_61
  5691  000E80  6E04               	movwf	strncmp@_r+1,c
  5692  000E82  0E00               	movlw	0
  5693  000E84  6E06               	movwf	strncmp@n+1,c
  5694  000E86  0E02               	movlw	2
  5695  000E88  6E05               	movwf	strncmp@n,c
  5696  000E8A  ECC2  F01A         	call	_strncmp	;wreg free
  5697  000E8E  5001               	movf	?_strncmp,w,c
  5698  000E90  1002               	iorwf	?_strncmp+1,w,c
  5699  000E92  A4D8               	btfss	status,2,c
  5700  000E94  D029               	goto	l4253
  5701                           
  5702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  5703  000E96  0E02               	movlw	2
  5704  000E98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5705  000E9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5706  000EA0  26DE               	addwf	postinc2,f,c
  5707  000EA2  0E00               	movlw	0
  5708  000EA4  22DD               	addwfc	postdec2,f,c
  5709                           
  5710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  5711  000EA6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5712  000EAA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5713  000EAE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5714  000EB2  0E04               	movlw	4
  5715  000EB4  26DE               	addwf	postinc2,f,c
  5716  000EB6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5717  000EBA  0E00               	movlw	0
  5718  000EBC  22DD               	addwfc	postdec2,f,c
  5719  000EBE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5720  000EC2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5721  000EC6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5722  000ECA  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5723  000ECE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5724  000ED2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5725  000ED6  504B               	movf	??_vfpfcnvrt+2,w,c
  5726  000ED8  6E6A               	movwf	vfpfcnvrt@llu,c
  5727  000EDA  504C               	movf	??_vfpfcnvrt+3,w,c
  5728  000EDC  6E6B               	movwf	vfpfcnvrt@llu+1,c
  5729  000EDE  504D               	movf	??_vfpfcnvrt+4,w,c
  5730  000EE0  6E6C               	movwf	vfpfcnvrt@llu+2,c
  5731  000EE2  504E               	movf	??_vfpfcnvrt+5,w,c
  5732  000EE4  6E6D               	movwf	vfpfcnvrt@llu+3,c
  5733  000EE6  D774               	goto	L9
  5734  000EE8                     l4253:
  5735  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  5736                           
  5737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5738  000EEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5739  000EEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5740  000EF2  CFDE F001          	movff	postinc2,strncmp@_l
  5741  000EF6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5742  000EFA  0EC2               	movlw	low STR_66
  5743  000EFC  6E03               	movwf	strncmp@_r,c
  5744  000EFE  0E06               	movlw	high STR_66
  5745  000F00  6E04               	movwf	strncmp@_r+1,c
  5746  000F02  0E00               	movlw	0
  5747  000F04  6E06               	movwf	strncmp@n+1,c
  5748  000F06  0E02               	movlw	2
  5749  000F08  6E05               	movwf	strncmp@n,c
  5750  000F0A  ECC2  F01A         	call	_strncmp	;wreg free
  5751  000F0E  5001               	movf	?_strncmp,w,c
  5752  000F10  1002               	iorwf	?_strncmp+1,w,c
  5753  000F12  A4D8               	btfss	status,2,c
  5754  000F14  D023               	goto	l4261
  5755  000F16                     u4260:
  5756  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5757                           
  5758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  5759  000F18  0E02               	movlw	2
  5760  000F1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5761  000F1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5762  000F22  26DE               	addwf	postinc2,f,c
  5763  000F24                     L22:
  5764  000F24  FFFF               	dw	65535	; assembler added errata NOP
  5765  000F26  0E00               	movlw	0
  5766  000F28  22DD               	addwfc	postdec2,f,c
  5767                           
  5768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5769  000F2A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5770  000F2E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5771  000F32  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5772  000F36  0E02               	movlw	2
  5773  000F38  26DE               	addwf	postinc2,f,c
  5774  000F3A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5775  000F3E  0E00               	movlw	0
  5776  000F40  22DD               	addwfc	postdec2,f,c
  5777  000F42  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5778  000F46  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5779  000F4A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5780  000F4E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5781  000F52  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5782  000F56  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5783  000F5A  D737               	goto	L8
  5784  000F5C                     l4261:
  5785  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  5786                           
  5787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5788  000F5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5789  000F62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5790  000F66  CFDE F001          	movff	postinc2,strncmp@_l
  5791  000F6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5792  000F6E  0E93               	movlw	low STR_71
  5793  000F70  6E03               	movwf	strncmp@_r,c
  5794  000F72  0E06               	movlw	high STR_71
  5795  000F74  6E04               	movwf	strncmp@_r+1,c
  5796  000F76  0E00               	movlw	0
  5797  000F78  6E06               	movwf	strncmp@n+1,c
  5798  000F7A  0E03               	movlw	3
  5799  000F7C  6E05               	movwf	strncmp@n,c
  5800  000F7E  ECC2  F01A         	call	_strncmp	;wreg free
  5801  000F82  5001               	movf	?_strncmp,w,c
  5802  000F84  1002               	iorwf	?_strncmp+1,w,c
  5803  000F86  A4D8               	btfss	status,2,c
  5804  000F88  D028               	goto	l4271
  5805                           
  5806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  5807  000F8A  0E03               	movlw	3
  5808  000F8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5809  000F90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5810  000F94  26DE               	addwf	postinc2,f,c
  5811  000F96  0E00               	movlw	0
  5812  000F98  22DD               	addwfc	postdec2,f,c
  5813                           
  5814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5815  000F9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5816  000F9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5817  000FA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5818  000FA6  0E02               	movlw	2
  5819  000FA8  26DE               	addwf	postinc2,f,c
  5820  000FAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5821  000FAE  0E00               	movlw	0
  5822  000FB0  22DD               	addwfc	postdec2,f,c
  5823  000FB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5824  000FB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5825  000FBA  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5826  000FBE  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5827                           
  5828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  5829  000FC2  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5830  000FC6  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5831  000FCA  C0CB  FFDF         	movff	_nout,indf2
  5832  000FCE                     l4267:
  5833  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  5834                           
  5835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  5836  000FD0  0E00               	movlw	0
  5837  000FD2  6E44               	movwf	?_vfpfcnvrt+1,c
  5838  000FD4  0E00               	movlw	0
  5839  000FD6  EF0F  F00C         	goto	L10
  5840  000FDA                     l4271:
  5841  000FDA  FFFF               	dw	65535	; assembler added errata NOP
  5842                           
  5843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5844  000FDC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5845  000FE0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5846  000FE4  CFDE F001          	movff	postinc2,strncmp@_l
  5847  000FE8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5848  000FEC  0E94               	movlw	low (STR_71+1)
  5849  000FEE  6E03               	movwf	strncmp@_r,c
  5850  000FF0  0E06               	movlw	high (STR_71+1)
  5851  000FF2  6E04               	movwf	strncmp@_r+1,c
  5852  000FF4  0E00               	movlw	0
  5853  000FF6  6E06               	movwf	strncmp@n+1,c
  5854  000FF8  0E02               	movlw	2
  5855  000FFA  6E05               	movwf	strncmp@n,c
  5856  000FFC  ECC2  F01A         	call	_strncmp	;wreg free
  5857  001000  5001               	movf	?_strncmp,w,c
  5858  001002  1002               	iorwf	?_strncmp+1,w,c
  5859  001004  A4D8               	btfss	status,2,c
  5860  001006  D00B               	goto	l4281
  5861  001008  D07F               	goto	u4310
  5862  00100A                     l4275:
  5863  00100A  FFFF               	dw	65535	; assembler added errata NOP
  5864                           
  5865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  5866  00100C  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5867  001010  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5868  001014  C0CB  FFDE         	movff	_nout,postinc2
  5869  001018  C0CC  FFDD         	movff	_nout+1,postdec2
  5870  00101C  D7D8               	goto	l4267
  5871  00101E                     l4281:
  5872  00101E  FFFF               	dw	65535	; assembler added errata NOP
  5873                           
  5874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  5875  001020  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5876  001024  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5877  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5878  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5879  001030                     	if	0	;tblptru may be non-zero
  5880  001030                     	endif
  5881  001030                     	if	0	;tblptru may be non-zero
  5882  001030                     	endif
  5883  001030  0008               	tblrd		*
  5884  001032  FFFF               	dw	65535	; errata NOP
  5885  001034  50F5               	movf	tablat,w,c
  5886  001036  0A6E               	xorlw	110
  5887  001038  A4D8               	btfss	status,2,c
  5888  00103A  D006               	goto	l4291
  5889                           
  5890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  5891  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5892  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5893  001044  2ADE               	incf	postinc2,f,c
  5894  001046  D067               	goto	L19
  5895  001048                     l4291:
  5896  001048  FFFF               	dw	65535	; assembler added errata NOP
  5897                           
  5898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  5899  00104A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5900  00104E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5901  001052  CFDE F001          	movff	postinc2,strncmp@_l
  5902  001056  CFDD F002          	movff	postdec2,strncmp@_l+1
  5903  00105A  0EB9               	movlw	low STR_81
  5904  00105C  6E03               	movwf	strncmp@_r,c
  5905  00105E  0E06               	movlw	high STR_81
  5906  001060  6E04               	movwf	strncmp@_r+1,c
  5907  001062  0E00               	movlw	0
  5908  001064  6E06               	movwf	strncmp@n+1,c
  5909  001066  0E02               	movlw	2
  5910  001068  6E05               	movwf	strncmp@n,c
  5911  00106A  ECC2  F01A         	call	_strncmp	;wreg free
  5912  00106E  5001               	movf	?_strncmp,w,c
  5913  001070  1002               	iorwf	?_strncmp+1,w,c
  5914  001072  A4D8               	btfss	status,2,c
  5915  001074  D032               	goto	l4301
  5916                           
  5917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  5918  001076  0E02               	movlw	2
  5919  001078  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5920  00107C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5921  001080  26DE               	addwf	postinc2,f,c
  5922  001082  0E00               	movlw	0
  5923  001084  22DD               	addwfc	postdec2,f,c
  5924                           
  5925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  5926  001086  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5927  00108A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5928  00108E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5929  001092  0E02               	movlw	2
  5930  001094  26DE               	addwf	postinc2,f,c
  5931  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5932  00109A  0E00               	movlw	0
  5933  00109C  22DD               	addwfc	postdec2,f,c
  5934  00109E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5935  0010A2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5936  0010A6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5937  0010AA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5938                           
  5939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  5940  0010AE  C0CB  F049         	movff	_nout,??_vfpfcnvrt
  5941  0010B2  C0CC  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  5942  0010B6  0E00               	movlw	0
  5943  0010B8  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  5944  0010BA  0EFF               	movlw	255
  5945  0010BC  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5946  0010BE  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  5947  0010C0  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5948  0010C4  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5949  0010C8  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  5950  0010CC  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  5951  0010D0  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  5952  0010D4  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  5953  0010D8  D77A               	goto	l4267
  5954  0010DA                     l4301:
  5955  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  5956                           
  5957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5958  0010DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5959  0010E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5960  0010E4  CFDE F001          	movff	postinc2,strncmp@_l
  5961  0010E8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5962  0010EC  0EBC               	movlw	low STR_86
  5963  0010EE  6E03               	movwf	strncmp@_r,c
  5964  0010F0  0E06               	movlw	high STR_86
  5965  0010F2  6E04               	movwf	strncmp@_r+1,c
  5966  0010F4  0E00               	movlw	0
  5967  0010F6  6E06               	movwf	strncmp@n+1,c
  5968  0010F8  0E02               	movlw	2
  5969  0010FA  6E05               	movwf	strncmp@n,c
  5970  0010FC  ECC2  F01A         	call	_strncmp	;wreg free
  5971  001100  5001               	movf	?_strncmp,w,c
  5972  001102  1002               	iorwf	?_strncmp+1,w,c
  5973  001104  A4D8               	btfss	status,2,c
  5974  001106  D01F               	goto	l4311
  5975  001108                     u4310:
  5976  001108  FFFF               	dw	65535	; assembler added errata NOP
  5977                           
  5978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  5979  00110A  0E02               	movlw	2
  5980  00110C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5981  001110  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5982  001114  26DE               	addwf	postinc2,f,c
  5983  001116                     L19:
  5984  001116  FFFF               	dw	65535	; assembler added errata NOP
  5985  001118  0E00               	movlw	0
  5986  00111A  22DD               	addwfc	postdec2,f,c
  5987                           
  5988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5989  00111C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5990  001120  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5991  001124  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5992  001128  0E02               	movlw	2
  5993  00112A  26DE               	addwf	postinc2,f,c
  5994  00112C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5995  001130  0E00               	movlw	0
  5996  001132  22DD               	addwfc	postdec2,f,c
  5997  001134  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5998  001138  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5999  00113C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  6000  001140  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  6001  001144  D762               	goto	l4275
  6002  001146                     l4311:
  6003  001146  FFFF               	dw	65535	; assembler added errata NOP
  6004                           
  6005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  6006  001148  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6007  00114C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6008  001150  CFDE FFF6          	movff	postinc2,tblptrl
  6009  001154  CFDD FFF7          	movff	postdec2,tblptrh
  6010  001158                     	if	0	;tblptru may be non-zero
  6011  001158                     	endif
  6012  001158                     	if	0	;tblptru may be non-zero
  6013  001158                     	endif
  6014  001158  0008               	tblrd		*
  6015  00115A  FFFF               	dw	65535	; errata NOP
  6016  00115C  50F5               	movf	tablat,w,c
  6017  00115E  0A70               	xorlw	112
  6018  001160  A4D8               	btfss	status,2,c
  6019  001162  D03E               	goto	l4319
  6020                           
  6021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  6022  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6023  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6024  00116C  2ADE               	incf	postinc2,f,c
  6025  00116E  0E00               	movlw	0
  6026  001170  22DD               	addwfc	postdec2,f,c
  6027                           
  6028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  6029  001172  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6030  001176  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6031  00117A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6032  00117E  0E02               	movlw	2
  6033  001180  26DE               	addwf	postinc2,f,c
  6034  001182  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6035  001186  0E00               	movlw	0
  6036  001188  22DD               	addwfc	postdec2,f,c
  6037  00118A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6038  00118E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6039  001192  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6040  001196  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6041  00119A  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6042  00119E  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6043  0011A2  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6044  0011A4  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6045  0011A6  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6046  0011A8  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6047  0011AA  6A70               	clrf	vfpfcnvrt@llu+6,c
  6048  0011AC  6A71               	clrf	vfpfcnvrt@llu+7,c
  6049                           
  6050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  6051  0011AE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6052  0011B2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6053  0011B6  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6054  0011BA  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6055  0011BE  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6056  0011C2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6057  0011C6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6058  0011CA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6059  0011CE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6060  0011D2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6061  0011D6  0E78               	movlw	120
  6062  0011D8  6E26               	movwf	xtoa@x,c
  6063  0011DA  ECD3  F010         	call	_xtoa	;wreg free
  6064  0011DE  D1B4               	goto	L12
  6065  0011E0                     l4319:
  6066  0011E0  FFFF               	dw	65535	; assembler added errata NOP
  6067                           
  6068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6069  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6070  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6071  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  6072  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  6073  0011F2                     	if	0	;tblptru may be non-zero
  6074  0011F2                     	endif
  6075  0011F2                     	if	0	;tblptru may be non-zero
  6076  0011F2                     	endif
  6077  0011F2  0008               	tblrd		*
  6078  0011F4  FFFF               	dw	65535	; errata NOP
  6079  0011F6  50F5               	movf	tablat,w,c
  6080  0011F8  0A73               	xorlw	115
  6081  0011FA  A4D8               	btfss	status,2,c
  6082  0011FC  D02A               	goto	l4327
  6083                           
  6084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6085  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6086  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6087  001206  2ADE               	incf	postinc2,f,c
  6088  001208  0E00               	movlw	0
  6089  00120A  22DD               	addwfc	postdec2,f,c
  6090                           
  6091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6092  00120C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6093  001210  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6094  001214  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6095  001218  0E02               	movlw	2
  6096  00121A  26DE               	addwf	postinc2,f,c
  6097  00121C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6098  001220  0E00               	movlw	0
  6099  001222  22DD               	addwfc	postdec2,f,c
  6100  001224  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6101  001228  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6102  00122C  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  6103  001230  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  6104                           
  6105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6106  001234  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  6107  001238  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6108  00123C  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  6109  001240  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6110  001244  ECAF  F017         	call	_stoa	;wreg free
  6111  001248  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  6112  00124C  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  6113  001250  D30F               	goto	l582
  6114  001252                     l4327:
  6115  001252  FFFF               	dw	65535	; assembler added errata NOP
  6116                           
  6117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6118  001254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6119  001258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6120  00125C  CFDE F001          	movff	postinc2,strncmp@_l
  6121  001260  CFDD F002          	movff	postdec2,strncmp@_l+1
  6122  001264  0E9B               	movlw	low STR_91
  6123  001266  6E03               	movwf	strncmp@_r,c
  6124  001268  0E06               	movlw	high STR_91
  6125  00126A  6E04               	movwf	strncmp@_r+1,c
  6126  00126C  0E00               	movlw	0
  6127  00126E  6E06               	movwf	strncmp@n+1,c
  6128  001270  0E03               	movlw	3
  6129  001272  6E05               	movwf	strncmp@n,c
  6130  001274  ECC2  F01A         	call	_strncmp	;wreg free
  6131  001278  5001               	movf	?_strncmp,w,c
  6132  00127A  1002               	iorwf	?_strncmp+1,w,c
  6133  00127C  A4D8               	btfss	status,2,c
  6134  00127E  D040               	goto	l4335
  6135                           
  6136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  6137  001280  0E03               	movlw	3
  6138  001282  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6139  001286  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6140  00128A  26DE               	addwf	postinc2,f,c
  6141  00128C  0E00               	movlw	0
  6142  00128E  22DD               	addwfc	postdec2,f,c
  6143                           
  6144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6145  001290  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6146  001294  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6147  001298  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6148  00129C  0E02               	movlw	2
  6149  00129E  26DE               	addwf	postinc2,f,c
  6150  0012A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6151  0012A4  0E00               	movlw	0
  6152  0012A6  22DD               	addwfc	postdec2,f,c
  6153  0012A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6154  0012AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6155  0012B0  50DF               	movf	indf2,w,c
  6156  0012B2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6157  0012B4  504B               	movf	??_vfpfcnvrt+2,w,c
  6158  0012B6  6E6A               	movwf	vfpfcnvrt@llu,c
  6159  0012B8  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6160  0012BA                     L13:
  6161  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  6162  0012BC  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6163  0012BE  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6164  0012C0                     L14:
  6165  0012C0  FFFF               	dw	65535	; assembler added errata NOP
  6166  0012C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6167  0012C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6168  0012C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  6169  0012C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  6170                           
  6171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  6172  0012CA  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  6173  0012CE  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6174  0012D2  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  6175  0012D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6176  0012DA  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6177  0012DE  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6178  0012E2  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6179  0012E6  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6180  0012EA  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6181  0012EE  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6182  0012F2  ECF2  F013         	call	_utoa	;wreg free
  6183  0012F6  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  6184  0012FA  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  6185  0012FE  D2B8               	goto	l582
  6186  001300                     l4335:
  6187  001300  FFFF               	dw	65535	; assembler added errata NOP
  6188                           
  6189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6190  001302  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6191  001306  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6192  00130A  CFDE F001          	movff	postinc2,strncmp@_l
  6193  00130E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6194  001312  0E9C               	movlw	low (STR_91+1)
  6195  001314  6E03               	movwf	strncmp@_r,c
  6196  001316  0E06               	movlw	high (STR_91+1)
  6197  001318  6E04               	movwf	strncmp@_r+1,c
  6198  00131A  0E00               	movlw	0
  6199  00131C  6E06               	movwf	strncmp@n+1,c
  6200  00131E  0E02               	movlw	2
  6201  001320  6E05               	movwf	strncmp@n,c
  6202  001322  ECC2  F01A         	call	_strncmp	;wreg free
  6203  001326  5001               	movf	?_strncmp,w,c
  6204  001328  1002               	iorwf	?_strncmp+1,w,c
  6205  00132A  B4D8               	btfsc	status,2,c
  6206  00132C  D06B               	goto	u4380
  6207                           
  6208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  6209                           
  6210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6211                           
  6212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  6213  00132E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6214  001332  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6215  001336  CFDE FFF6          	movff	postinc2,tblptrl
  6216  00133A  CFDD FFF7          	movff	postdec2,tblptrh
  6217  00133E                     	if	0	;tblptru may be non-zero
  6218  00133E                     	endif
  6219  00133E                     	if	0	;tblptru may be non-zero
  6220  00133E                     	endif
  6221  00133E  0008               	tblrd		*
  6222  001340  FFFF               	dw	65535	; errata NOP
  6223  001342  50F5               	movf	tablat,w,c
  6224  001344  0A75               	xorlw	117
  6225  001346  A4D8               	btfss	status,2,c
  6226  001348  D006               	goto	l4351
  6227                           
  6228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  6229  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6230  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6231  001352  2ADE               	incf	postinc2,f,c
  6232  001354  D05E               	goto	L23
  6233  001356                     l4351:
  6234  001356  FFFF               	dw	65535	; assembler added errata NOP
  6235                           
  6236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6237  001358  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6238  00135C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6239  001360  CFDE F001          	movff	postinc2,strncmp@_l
  6240  001364  CFDD F002          	movff	postdec2,strncmp@_l+1
  6241  001368  0EA4               	movlw	low (STR_1+1)
  6242  00136A  6E03               	movwf	strncmp@_r,c
  6243  00136C  0E06               	movlw	high (STR_1+1)
  6244  00136E  6E04               	movwf	strncmp@_r+1,c
  6245  001370  0E00               	movlw	0
  6246  001372  6E06               	movwf	strncmp@n+1,c
  6247  001374  0E02               	movlw	2
  6248  001376  6E05               	movwf	strncmp@n,c
  6249  001378  ECC2  F01A         	call	_strncmp	;wreg free
  6250  00137C  5001               	movf	?_strncmp,w,c
  6251  00137E  1002               	iorwf	?_strncmp+1,w,c
  6252  001380  A4D8               	btfss	status,2,c
  6253  001382  D029               	goto	l4359
  6254                           
  6255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  6256  001384  0E02               	movlw	2
  6257  001386  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6258  00138A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6259  00138E  26DE               	addwf	postinc2,f,c
  6260  001390  0E00               	movlw	0
  6261  001392  22DD               	addwfc	postdec2,f,c
  6262                           
  6263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6264  001394  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6265  001398  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6266  00139C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6267  0013A0  0E04               	movlw	4
  6268  0013A2  26DE               	addwf	postinc2,f,c
  6269  0013A4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6270  0013A8  0E00               	movlw	0
  6271  0013AA  22DD               	addwfc	postdec2,f,c
  6272  0013AC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6273  0013B0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6274  0013B4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6275  0013B8  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6276  0013BC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6277  0013C0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6278  0013C4  504B               	movf	??_vfpfcnvrt+2,w,c
  6279  0013C6  6E6A               	movwf	vfpfcnvrt@llu,c
  6280  0013C8  504C               	movf	??_vfpfcnvrt+3,w,c
  6281  0013CA  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6282  0013CC  504D               	movf	??_vfpfcnvrt+4,w,c
  6283  0013CE  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6284  0013D0  504E               	movf	??_vfpfcnvrt+5,w,c
  6285  0013D2  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6286  0013D4  D775               	goto	L14
  6287  0013D6                     l4359:
  6288  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  6289                           
  6290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6291  0013D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6292  0013DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6293  0013E0  CFDE F001          	movff	postinc2,strncmp@_l
  6294  0013E4  CFDD F002          	movff	postdec2,strncmp@_l+1
  6295  0013E8  0EC5               	movlw	low STR_106
  6296  0013EA  6E03               	movwf	strncmp@_r,c
  6297  0013EC  0E06               	movlw	high STR_106
  6298  0013EE  6E04               	movwf	strncmp@_r+1,c
  6299  0013F0  0E00               	movlw	0
  6300  0013F2  6E06               	movwf	strncmp@n+1,c
  6301  0013F4  0E02               	movlw	2
  6302  0013F6  6E05               	movwf	strncmp@n,c
  6303  0013F8  ECC2  F01A         	call	_strncmp	;wreg free
  6304  0013FC  5001               	movf	?_strncmp,w,c
  6305  0013FE  1002               	iorwf	?_strncmp+1,w,c
  6306  001400  A4D8               	btfss	status,2,c
  6307  001402  D023               	goto	l4367
  6308  001404                     u4380:
  6309  001404  FFFF               	dw	65535	; assembler added errata NOP
  6310                           
  6311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  6312  001406  0E02               	movlw	2
  6313  001408  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6314  00140C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6315  001410  26DE               	addwf	postinc2,f,c
  6316  001412                     L23:
  6317  001412  FFFF               	dw	65535	; assembler added errata NOP
  6318  001414  0E00               	movlw	0
  6319  001416  22DD               	addwfc	postdec2,f,c
  6320                           
  6321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6322  001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6323  00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6324  001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6325  001424  0E02               	movlw	2
  6326  001426  26DE               	addwf	postinc2,f,c
  6327  001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6328  00142C  0E00               	movlw	0
  6329  00142E  22DD               	addwfc	postdec2,f,c
  6330  001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6331  001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6332  001438  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6333  00143C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6334  001440  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6335  001444  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6336  001448  D738               	goto	L13
  6337  00144A                     l4367:
  6338  00144A  FFFF               	dw	65535	; assembler added errata NOP
  6339                           
  6340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  6341  00144C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6342  001450  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6343  001454  CFDE F001          	movff	postinc2,strncmp@_l
  6344  001458  CFDD F002          	movff	postdec2,strncmp@_l+1
  6345  00145C  0E9F               	movlw	low STR_111
  6346  00145E  6E03               	movwf	strncmp@_r,c
  6347  001460  0E06               	movlw	high STR_111
  6348  001462  6E04               	movwf	strncmp@_r+1,c
  6349  001464  0E00               	movlw	0
  6350  001466  6E06               	movwf	strncmp@n+1,c
  6351  001468  0E03               	movlw	3
  6352  00146A  6E05               	movwf	strncmp@n,c
  6353  00146C  ECC2  F01A         	call	_strncmp	;wreg free
  6354  001470  5001               	movf	?_strncmp,w,c
  6355  001472  1002               	iorwf	?_strncmp+1,w,c
  6356  001474  B4D8               	btfsc	status,2,c
  6357  001476  D016               	goto	u4400
  6358  001478  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6359  00147C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6360  001480  CFDE F001          	movff	postinc2,strncmp@_l
  6361  001484  CFDD F002          	movff	postdec2,strncmp@_l+1
  6362  001488  0E87               	movlw	low STR_115
  6363  00148A  6E03               	movwf	strncmp@_r,c
  6364  00148C  0E06               	movlw	high STR_115
  6365  00148E  6E04               	movwf	strncmp@_r+1,c
  6366  001490  0E00               	movlw	0
  6367  001492  6E06               	movwf	strncmp@n+1,c
  6368  001494  0E03               	movlw	3
  6369  001496  6E05               	movwf	strncmp@n,c
  6370  001498  ECC2  F01A         	call	_strncmp	;wreg free
  6371  00149C  5001               	movf	?_strncmp,w,c
  6372  00149E  1002               	iorwf	?_strncmp+1,w,c
  6373  0014A0  A4D8               	btfss	status,2,c
  6374  0014A2  D058               	goto	l4381
  6375  0014A4                     u4400:
  6376  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  6377                           
  6378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  6379  0014A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6380  0014AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6381  0014AE  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6382  0014B2  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6383  0014B6  0E02               	movlw	2
  6384  0014B8  2649               	addwf	??_vfpfcnvrt,f,c
  6385  0014BA  0E00               	movlw	0
  6386  0014BC  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6387  0014BE  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6388  0014C2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6389  0014C6                     	if	0	;tblptru may be non-zero
  6390  0014C6                     	endif
  6391  0014C6                     	if	0	;tblptru may be non-zero
  6392  0014C6                     	endif
  6393  0014C6  0008               	tblrd		*
  6394  0014C8  FFFF               	dw	65535	; errata NOP
  6395  0014CA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6396                           
  6397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  6398  0014CE  0E03               	movlw	3
  6399  0014D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6400  0014D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6401  0014D8  26DE               	addwf	postinc2,f,c
  6402  0014DA  0E00               	movlw	0
  6403  0014DC  22DD               	addwfc	postdec2,f,c
  6404                           
  6405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6406  0014DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6407  0014E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6408  0014E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6409  0014EA  0E02               	movlw	2
  6410  0014EC  26DE               	addwf	postinc2,f,c
  6411  0014EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6412  0014F2  0E00               	movlw	0
  6413  0014F4  22DD               	addwfc	postdec2,f,c
  6414  0014F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6415  0014FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6416  0014FE  50DF               	movf	indf2,w,c
  6417  001500  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6418  001502  504B               	movf	??_vfpfcnvrt+2,w,c
  6419  001504  6E6A               	movwf	vfpfcnvrt@llu,c
  6420  001506  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6421  001508                     L15:
  6422  001508  FFFF               	dw	65535	; assembler added errata NOP
  6423  00150A  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6424  00150C  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6425  00150E                     L16:
  6426  00150E  FFFF               	dw	65535	; assembler added errata NOP
  6427  001510  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6428  001512  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6429  001514  6A70               	clrf	vfpfcnvrt@llu+6,c
  6430  001516  6A71               	clrf	vfpfcnvrt@llu+7,c
  6431                           
  6432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  6433  001518  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6434  00151C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6435  001520  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6436  001524  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6437  001528  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6438  00152C  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6439  001530  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6440  001534  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6441  001538  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6442  00153C  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6443  001540  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  6444  001544  ECD3  F010         	call	_xtoa	;wreg free
  6445  001548                     L12:
  6446  001548  FFFF               	dw	65535	; assembler added errata NOP
  6447  00154A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6448  00154E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6449  001552  D18E               	goto	l582
  6450  001554                     l4381:
  6451  001554  FFFF               	dw	65535	; assembler added errata NOP
  6452                           
  6453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  6454  001556  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6455  00155A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6456  00155E  CFDE F001          	movff	postinc2,strncmp@_l
  6457  001562  CFDD F002          	movff	postdec2,strncmp@_l+1
  6458  001566  0EA0               	movlw	low (STR_111+1)
  6459  001568  6E03               	movwf	strncmp@_r,c
  6460  00156A  0E06               	movlw	high (STR_111+1)
  6461  00156C  6E04               	movwf	strncmp@_r+1,c
  6462  00156E  0E00               	movlw	0
  6463  001570  6E06               	movwf	strncmp@n+1,c
  6464  001572  0E02               	movlw	2
  6465  001574  6E05               	movwf	strncmp@n,c
  6466  001576  ECC2  F01A         	call	_strncmp	;wreg free
  6467  00157A  5001               	movf	?_strncmp,w,c
  6468  00157C  1002               	iorwf	?_strncmp+1,w,c
  6469  00157E  B4D8               	btfsc	status,2,c
  6470  001580  D016               	goto	u4420
  6471  001582  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6472  001586  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6473  00158A  CFDE F001          	movff	postinc2,strncmp@_l
  6474  00158E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6475  001592  0E88               	movlw	low (STR_115+1)
  6476  001594  6E03               	movwf	strncmp@_r,c
  6477  001596  0E06               	movlw	high (STR_115+1)
  6478  001598  6E04               	movwf	strncmp@_r+1,c
  6479  00159A  0E00               	movlw	0
  6480  00159C  6E06               	movwf	strncmp@n+1,c
  6481  00159E  0E02               	movlw	2
  6482  0015A0  6E05               	movwf	strncmp@n,c
  6483  0015A2  ECC2  F01A         	call	_strncmp	;wreg free
  6484  0015A6  5001               	movf	?_strncmp,w,c
  6485  0015A8  1002               	iorwf	?_strncmp+1,w,c
  6486  0015AA  A4D8               	btfss	status,2,c
  6487  0015AC  D014               	goto	l4395
  6488  0015AE                     u4420:
  6489  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  6490                           
  6491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  6492  0015B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6493  0015B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6494  0015B8  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6495  0015BC  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6496  0015C0  0E01               	movlw	1
  6497  0015C2  2649               	addwf	??_vfpfcnvrt,f,c
  6498  0015C4  0E00               	movlw	0
  6499  0015C6  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6500  0015C8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6501  0015CC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6502  0015D0                     	if	0	;tblptru may be non-zero
  6503  0015D0                     	endif
  6504  0015D0                     	if	0	;tblptru may be non-zero
  6505  0015D0                     	endif
  6506  0015D0  0008               	tblrd		*
  6507  0015D2  FFFF               	dw	65535	; errata NOP
  6508  0015D4  D0DB               	goto	L27
  6509  0015D6                     l4395:
  6510  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  6511                           
  6512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6513  0015D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6514  0015DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6515  0015E0  CFDE FFF6          	movff	postinc2,tblptrl
  6516  0015E4  CFDD FFF7          	movff	postdec2,tblptrh
  6517  0015E8                     	if	0	;tblptru may be non-zero
  6518  0015E8                     	endif
  6519  0015E8                     	if	0	;tblptru may be non-zero
  6520  0015E8                     	endif
  6521  0015E8  0008               	tblrd		*
  6522  0015EA  FFFF               	dw	65535	; errata NOP
  6523  0015EC  50F5               	movf	tablat,w,c
  6524  0015EE  0A78               	xorlw	120
  6525  0015F0  B4D8               	btfsc	status,2,c
  6526  0015F2  D00E               	goto	u4440
  6527  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6528  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6529  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  6530  001600  CFDD FFF7          	movff	postdec2,tblptrh
  6531  001604                     	if	0	;tblptru may be non-zero
  6532  001604                     	endif
  6533  001604                     	if	0	;tblptru may be non-zero
  6534  001604                     	endif
  6535  001604  0008               	tblrd		*
  6536  001606  FFFF               	dw	65535	; errata NOP
  6537  001608  50F5               	movf	tablat,w,c
  6538  00160A  0A58               	xorlw	88
  6539  00160C  A4D8               	btfss	status,2,c
  6540  00160E  D013               	goto	l4409
  6541  001610                     u4440:
  6542  001610  FFFF               	dw	65535	; assembler added errata NOP
  6543                           
  6544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6545  001612  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6546  001616  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6547  00161A  CFDE FFF6          	movff	postinc2,tblptrl
  6548  00161E  CFDD FFF7          	movff	postdec2,tblptrh
  6549  001622                     	if	0	;tblptru may be non-zero
  6550  001622                     	endif
  6551  001622                     	if	0	;tblptru may be non-zero
  6552  001622                     	endif
  6553  001622  0008               	tblrd		*
  6554  001624  FFFF               	dw	65535	; errata NOP
  6555  001626  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6556                           
  6557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6558  00162A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6559  00162E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6560  001632  2ADE               	incf	postinc2,f,c
  6561  001634  D0B4               	goto	L26
  6562  001636                     l4409:
  6563  001636  FFFF               	dw	65535	; assembler added errata NOP
  6564                           
  6565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  6566  001638  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6567  00163C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6568  001640  CFDE F001          	movff	postinc2,strncmp@_l
  6569  001644  CFDD F002          	movff	postdec2,strncmp@_l+1
  6570  001648  0EC8               	movlw	low STR_129
  6571  00164A  6E03               	movwf	strncmp@_r,c
  6572  00164C  0E06               	movlw	high STR_129
  6573  00164E  6E04               	movwf	strncmp@_r+1,c
  6574  001650  0E00               	movlw	0
  6575  001652  6E06               	movwf	strncmp@n+1,c
  6576  001654  0E02               	movlw	2
  6577  001656  6E05               	movwf	strncmp@n,c
  6578  001658  ECC2  F01A         	call	_strncmp	;wreg free
  6579  00165C  5001               	movf	?_strncmp,w,c
  6580  00165E  1002               	iorwf	?_strncmp+1,w,c
  6581  001660  B4D8               	btfsc	status,2,c
  6582  001662  D016               	goto	u4460
  6583  001664  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6584  001668  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6585  00166C  CFDE F001          	movff	postinc2,strncmp@_l
  6586  001670  CFDD F002          	movff	postdec2,strncmp@_l+1
  6587  001674  0EA7               	movlw	low STR_133
  6588  001676  6E03               	movwf	strncmp@_r,c
  6589  001678  0E06               	movlw	high STR_133
  6590  00167A  6E04               	movwf	strncmp@_r+1,c
  6591  00167C  0E00               	movlw	0
  6592  00167E  6E06               	movwf	strncmp@n+1,c
  6593  001680  0E02               	movlw	2
  6594  001682  6E05               	movwf	strncmp@n,c
  6595  001684  ECC2  F01A         	call	_strncmp	;wreg free
  6596  001688  5001               	movf	?_strncmp,w,c
  6597  00168A  1002               	iorwf	?_strncmp+1,w,c
  6598  00168C  A4D8               	btfss	status,2,c
  6599  00168E  D03E               	goto	l4423
  6600  001690                     u4460:
  6601  001690  FFFF               	dw	65535	; assembler added errata NOP
  6602                           
  6603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  6604  001692  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6605  001696  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6606  00169A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6607  00169E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6608  0016A2  0E01               	movlw	1
  6609  0016A4  2649               	addwf	??_vfpfcnvrt,f,c
  6610  0016A6  0E00               	movlw	0
  6611  0016A8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6612  0016AA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6613  0016AE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6614  0016B2                     	if	0	;tblptru may be non-zero
  6615  0016B2                     	endif
  6616  0016B2                     	if	0	;tblptru may be non-zero
  6617  0016B2                     	endif
  6618  0016B2  0008               	tblrd		*
  6619  0016B4  FFFF               	dw	65535	; errata NOP
  6620  0016B6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6621                           
  6622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  6623  0016BA  0E02               	movlw	2
  6624  0016BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6625  0016C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6626  0016C4  26DE               	addwf	postinc2,f,c
  6627  0016C6  0E00               	movlw	0
  6628  0016C8  22DD               	addwfc	postdec2,f,c
  6629                           
  6630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6631  0016CA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6632  0016CE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6633  0016D2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6634  0016D6  0E04               	movlw	4
  6635  0016D8  26DE               	addwf	postinc2,f,c
  6636  0016DA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6637  0016DE  0E00               	movlw	0
  6638  0016E0  22DD               	addwfc	postdec2,f,c
  6639  0016E2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6640  0016E6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6641  0016EA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6642  0016EE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6643  0016F2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6644  0016F6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6645  0016FA  504B               	movf	??_vfpfcnvrt+2,w,c
  6646  0016FC  6E6A               	movwf	vfpfcnvrt@llu,c
  6647  0016FE  504C               	movf	??_vfpfcnvrt+3,w,c
  6648  001700  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6649  001702  504D               	movf	??_vfpfcnvrt+4,w,c
  6650  001704  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6651  001706  504E               	movf	??_vfpfcnvrt+5,w,c
  6652  001708  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6653  00170A  D701               	goto	L16
  6654  00170C                     l4423:
  6655  00170C  FFFF               	dw	65535	; assembler added errata NOP
  6656                           
  6657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  6658  00170E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6659  001712  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6660  001716  CFDE F001          	movff	postinc2,strncmp@_l
  6661  00171A  CFDD F002          	movff	postdec2,strncmp@_l+1
  6662  00171E  0ECB               	movlw	low STR_138
  6663  001720  6E03               	movwf	strncmp@_r,c
  6664  001722  0E06               	movlw	high STR_138
  6665  001724  6E04               	movwf	strncmp@_r+1,c
  6666  001726  0E00               	movlw	0
  6667  001728  6E06               	movwf	strncmp@n+1,c
  6668  00172A  0E02               	movlw	2
  6669  00172C  6E05               	movwf	strncmp@n,c
  6670  00172E  ECC2  F01A         	call	_strncmp	;wreg free
  6671  001732  5001               	movf	?_strncmp,w,c
  6672  001734  1002               	iorwf	?_strncmp+1,w,c
  6673  001736  B4D8               	btfsc	status,2,c
  6674  001738  D016               	goto	u4480
  6675  00173A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6676  00173E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6677  001742  CFDE F001          	movff	postinc2,strncmp@_l
  6678  001746  CFDD F002          	movff	postdec2,strncmp@_l+1
  6679  00174A  0EAA               	movlw	low STR_142
  6680  00174C  6E03               	movwf	strncmp@_r,c
  6681  00174E  0E06               	movlw	high STR_142
  6682  001750  6E04               	movwf	strncmp@_r+1,c
  6683  001752  0E00               	movlw	0
  6684  001754  6E06               	movwf	strncmp@n+1,c
  6685  001756  0E02               	movlw	2
  6686  001758  6E05               	movwf	strncmp@n,c
  6687  00175A  ECC2  F01A         	call	_strncmp	;wreg free
  6688  00175E  5001               	movf	?_strncmp,w,c
  6689  001760  1002               	iorwf	?_strncmp+1,w,c
  6690  001762  A4D8               	btfss	status,2,c
  6691  001764  D038               	goto	l4437
  6692  001766                     u4480:
  6693  001766  FFFF               	dw	65535	; assembler added errata NOP
  6694                           
  6695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  6696  001768  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6697  00176C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6698  001770  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6699  001774  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6700  001778  0E01               	movlw	1
  6701  00177A  2649               	addwf	??_vfpfcnvrt,f,c
  6702  00177C  0E00               	movlw	0
  6703  00177E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6704  001780  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6705  001784  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6706  001788                     	if	0	;tblptru may be non-zero
  6707  001788                     	endif
  6708  001788                     	if	0	;tblptru may be non-zero
  6709  001788                     	endif
  6710  001788  0008               	tblrd		*
  6711  00178A  FFFF               	dw	65535	; errata NOP
  6712  00178C                     L27:
  6713  00178C  FFFF               	dw	65535	; assembler added errata NOP
  6714  00178E  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6715                           
  6716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  6717  001792  0E02               	movlw	2
  6718  001794  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6719  001798  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6720  00179C  26DE               	addwf	postinc2,f,c
  6721  00179E                     L26:
  6722  00179E  FFFF               	dw	65535	; assembler added errata NOP
  6723  0017A0  0E00               	movlw	0
  6724  0017A2  22DD               	addwfc	postdec2,f,c
  6725                           
  6726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6727  0017A4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6728  0017A8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6729  0017AC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6730  0017B0  0E02               	movlw	2
  6731  0017B2  26DE               	addwf	postinc2,f,c
  6732  0017B4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6733  0017B8  0E00               	movlw	0
  6734  0017BA  22DD               	addwfc	postdec2,f,c
  6735  0017BC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6736  0017C0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6737  0017C4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6738  0017C8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6739  0017CC  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6740  0017D0  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6741  0017D4  D699               	goto	L15
  6742  0017D6                     l4437:
  6743  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  6744                           
  6745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6746  0017D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6747  0017DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6748  0017E0  CFDE FFF6          	movff	postinc2,tblptrl
  6749  0017E4  CFDD FFF7          	movff	postdec2,tblptrh
  6750  0017E8                     	if	0	;tblptru may be non-zero
  6751  0017E8                     	endif
  6752  0017E8                     	if	0	;tblptru may be non-zero
  6753  0017E8                     	endif
  6754  0017E8  0008               	tblrd		*
  6755  0017EA  FFFF               	dw	65535	; errata NOP
  6756  0017EC  50F5               	movf	tablat,w,c
  6757  0017EE  0A25               	xorlw	37
  6758  0017F0  A4D8               	btfss	status,2,c
  6759  0017F2  D018               	goto	l4447
  6760                           
  6761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6762  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6763  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6764  0017FC  2ADE               	incf	postinc2,f,c
  6765  0017FE  0E00               	movlw	0
  6766  001800  22DD               	addwfc	postdec2,f,c
  6767                           
  6768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6769  001802  0E00               	movlw	0
  6770  001804  6E02               	movwf	fputc@c+1,c
  6771  001806  0E25               	movlw	37
  6772  001808  6E01               	movwf	fputc@c,c
  6773  00180A  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6774  00180E  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6775  001812  EC81  F01B         	call	_fputc	;wreg free
  6776  001816                     l4443:
  6777  001816  FFFF               	dw	65535	; assembler added errata NOP
  6778                           
  6779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6780  001818  0E00               	movlw	0
  6781  00181A  6E44               	movwf	?_vfpfcnvrt+1,c
  6782  00181C  0E01               	movlw	1
  6783  00181E                     L10:
  6784  00181E  FFFF               	dw	65535	; assembler added errata NOP
  6785  001820  6E43               	movwf	?_vfpfcnvrt,c
  6786  001822  D026               	goto	l582
  6787  001824                     l4447:
  6788  001824  FFFF               	dw	65535	; assembler added errata NOP
  6789                           
  6790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6791  001826  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6792  00182A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6793  00182E  2ADE               	incf	postinc2,f,c
  6794  001830  0E00               	movlw	0
  6795  001832  22DD               	addwfc	postdec2,f,c
  6796  001834  EFE7  F007         	goto	l4267
  6797  001838                     l4453:
  6798  001838  FFFF               	dw	65535	; assembler added errata NOP
  6799                           
  6800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6801  00183A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6802  00183E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6803  001842  CFDE FFF6          	movff	postinc2,tblptrl
  6804  001846  CFDD FFF7          	movff	postdec2,tblptrh
  6805  00184A                     	if	0	;tblptru may be non-zero
  6806  00184A                     	endif
  6807  00184A                     	if	0	;tblptru may be non-zero
  6808  00184A                     	endif
  6809  00184A  0008               	tblrd		*
  6810  00184C  FFFF               	dw	65535	; errata NOP
  6811  00184E  50F5               	movf	tablat,w,c
  6812  001850  6E01               	movwf	fputc@c,c
  6813  001852  6A02               	clrf	fputc@c+1,c
  6814  001854  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6815  001858  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6816  00185C  EC81  F01B         	call	_fputc	;wreg free
  6817                           
  6818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6819  001860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6820  001864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6821  001868  2ADE               	incf	postinc2,f,c
  6822  00186A  0E00               	movlw	0
  6823  00186C  22DD               	addwfc	postdec2,f,c
  6824  00186E  D7D3               	goto	l4443
  6825  001870                     l582:
  6826  001870  FFFF               	dw	65535	; assembler added errata NOP
  6827  001872  0012               	return		;funcret
  6828  001874  FFFF               	dw	65535	; errata NOP
  6829  001876                     __end_of_vfpfcnvrt:
  6830                           	opt callstack 0
  6831                           
  6832 ;; *************** function _xtoa *****************
  6833 ;; Defined at:
  6834 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6837 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6838 ;;  d               8   29[COMRAM] unsigned long long 
  6839 ;;  x               1   37[COMRAM] unsigned char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  n               8   54[COMRAM] unsigned long long 
  6842 ;;  c               2   64[COMRAM] int 
  6843 ;;  i               2   62[COMRAM] int 
  6844 ;;  w               2   52[COMRAM] int 
  6845 ;;  p               2   50[COMRAM] int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  2   27[COMRAM] int 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6855 ;;      Params:        11       0       0       0       0       0       0
  6856 ;;      Locals:        20       0       0       0       0       0       0
  6857 ;;      Temps:          8       0       0       0       0       0       0
  6858 ;;      Totals:        39       0       0       0       0       0       0
  6859 ;;Total ram usage:       39 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    6
  6862 ;; This function calls:
  6863 ;;		_isalpha
  6864 ;;		_isupper
  6865 ;;		_pad
  6866 ;;		_toupper
  6867 ;; This function is called by:
  6868 ;;		_vfpfcnvrt
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text24
  6873  0021A6                     __ptext24:
  6874                           	opt callstack 0
  6875  0021A6                     _xtoa:
  6876                           	opt callstack 0
  6877  0021A6  FFFF               	dw	65535	; assembler added errata NOP
  6878                           
  6879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6880                           
  6881                           ;incstack = 0
  6882  0021A8  0100               	movlb	0	; () banked
  6883  0021AA  AFD0               	btfss	(_prec+1)& (0+255),7,b
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6887  0021AC  93D1               	bcf	_flags& (0+255),1,b
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6891  0021AE  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  6892  0021B0  D005               	goto	u3700
  6893  0021B2  51D0               	movf	(_prec+1)& (0+255),w,b
  6894  0021B4  E109               	bnz	l520
  6895  0021B6  05CF               	decf	_prec& (0+255),w,b
  6896  0021B8  B0D8               	btfsc	status,0,c
  6897  0021BA  D006               	goto	l520
  6898  0021BC                     u3700:
  6899  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  6900                           
  6901                           ; BSR set to: 0
  6902  0021BE  0E00               	movlw	0
  6903  0021C0  6E34               	movwf	xtoa@p+1,c
  6904  0021C2  0E01               	movlw	1
  6905  0021C4  6E33               	movwf	xtoa@p,c
  6906  0021C6  D005               	goto	l522
  6907  0021C8                     l520:
  6908  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  6909                           
  6910                           ; BSR set to: 0
  6911  0021CA  C0CF  F033         	movff	_prec,xtoa@p
  6912  0021CE  C0D0  F034         	movff	_prec+1,xtoa@p+1
  6913  0021D2                     l522:
  6914  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6918  0021D4  C0CD  F035         	movff	_width,xtoa@w
  6919  0021D8  C0CE  F036         	movff	_width+1,xtoa@w+1
  6920                           
  6921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6922  0021DC  A9D1               	btfss	_flags& (0+255),4,b
  6923  0021DE  D004               	goto	l3967
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6927  0021E0  0EFE               	movlw	254
  6928  0021E2  2635               	addwf	xtoa@w,f,c
  6929  0021E4  0EFF               	movlw	255
  6930  0021E6  2236               	addwfc	xtoa@w+1,f,c
  6931  0021E8                     l3967:
  6932  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6936  0021EA  C01E  F037         	movff	xtoa@d,xtoa@n
  6937  0021EE  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6938  0021F2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6939  0021F6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6940  0021FA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6941  0021FE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6942  002202  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6943  002206  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6947  00220A  0E00               	movlw	0
  6948  00220C  6E40               	movwf	xtoa@i+1,c
  6949  00220E  0E1F               	movlw	31
  6950  002210  6E3F               	movwf	xtoa@i,c
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6954  002212  0E00               	movlw	0
  6955  002214  6FF5               	movwf	(_dbuf+31)& (0+255),b
  6956                           
  6957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6958  002216  D09D               	goto	l4003
  6959  002218                     l3973:
  6960  002218  FFFF               	dw	65535	; assembler added errata NOP
  6961                           
  6962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6963  00221A  063F               	decf	xtoa@i,f,c
  6964  00221C  A0D8               	btfss	status,0,c
  6965  00221E  0640               	decf	xtoa@i+1,f,c
  6966                           
  6967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6968  002220  0E0F               	movlw	15
  6969  002222  1437               	andwf	xtoa@n,w,c
  6970  002224  6E41               	movwf	xtoa@c,c
  6971  002226  6A42               	clrf	xtoa@c+1,c
  6972                           
  6973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6974  002228  BE42               	btfsc	xtoa@c+1,7,c
  6975  00222A  D008               	goto	l3981
  6976  00222C  5042               	movf	xtoa@c+1,w,c
  6977  00222E  E104               	bnz	u3720
  6978  002230  0E0A               	movlw	10
  6979  002232  5C41               	subwf	xtoa@c,w,c
  6980  002234  A0D8               	btfss	status,0,c
  6981  002236  D002               	goto	l3981
  6982  002238                     u3720:
  6983  002238  0E57               	movlw	87
  6984  00223A  D002               	goto	L24
  6985  00223C                     l3981:
  6986  00223C  FFFF               	dw	65535	; assembler added errata NOP
  6987  00223E  0E30               	movlw	48
  6988  002240                     L24:
  6989  002240  FFFF               	dw	65535	; assembler added errata NOP
  6990  002242  2441               	addwf	xtoa@c,w,c
  6991  002244  6E41               	movwf	xtoa@c,c
  6992  002246  0E00               	movlw	0
  6993  002248  2042               	addwfc	xtoa@c+1,w,c
  6994  00224A  6E42               	movwf	xtoa@c+1,c
  6995                           
  6996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  6997  00224C  0EBF               	movlw	191
  6998  00224E  6E27               	movwf	??_xtoa& (0+255),c
  6999  002250  0EFF               	movlw	255
  7000  002252  6E28               	movwf	(??_xtoa+1)& (0+255),c
  7001  002254  5026               	movf	xtoa@x,w,c
  7002  002256  6E29               	movwf	(??_xtoa+2)& (0+255),c
  7003  002258  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  7004  00225A  5027               	movf	??_xtoa,w,c
  7005  00225C  2629               	addwf	??_xtoa+2,f,c
  7006  00225E  5028               	movf	??_xtoa+1,w,c
  7007  002260  222A               	addwfc	??_xtoa+3,f,c
  7008  002262  502A               	movf	??_xtoa+3,w,c
  7009  002264  E106               	bnz	u3730
  7010  002266  0E1A               	movlw	26
  7011  002268  5C29               	subwf	??_xtoa+2,w,c
  7012  00226A  B0D8               	btfsc	status,0,c
  7013  00226C  D002               	goto	u3730
  7014  00226E  0E01               	movlw	1
  7015  002270  D002               	goto	u3740
  7016  002272                     u3730:
  7017  002272  FFFF               	dw	65535	; assembler added errata NOP
  7018  002274  0E00               	movlw	0
  7019  002276                     u3740:
  7020  002276  FFFF               	dw	65535	; assembler added errata NOP
  7021  002278  6E2F               	movwf	_xtoa$1157,c
  7022  00227A  6A30               	clrf	_xtoa$1157+1,c
  7023  00227C  502F               	movf	_xtoa$1157,w,c
  7024  00227E  1030               	iorwf	_xtoa$1157+1,w,c
  7025  002280  B4D8               	btfsc	status,2,c
  7026  002282  D029               	goto	l3995
  7027  002284  0E9F               	movlw	159
  7028  002286  6E27               	movwf	??_xtoa& (0+255),c
  7029  002288  0EFF               	movlw	255
  7030  00228A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  7031  00228C  0E20               	movlw	32
  7032  00228E  1041               	iorwf	xtoa@c,w,c
  7033  002290  6E29               	movwf	(??_xtoa+2)& (0+255),c
  7034  002292  0E00               	movlw	0
  7035  002294  1042               	iorwf	xtoa@c+1,w,c
  7036  002296  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  7037  002298  5027               	movf	??_xtoa,w,c
  7038  00229A  2629               	addwf	??_xtoa+2,f,c
  7039  00229C  5028               	movf	??_xtoa+1,w,c
  7040  00229E  222A               	addwfc	??_xtoa+3,f,c
  7041  0022A0  502A               	movf	??_xtoa+3,w,c
  7042  0022A2  E106               	bnz	u3760
  7043  0022A4  0E1A               	movlw	26
  7044  0022A6  5C29               	subwf	??_xtoa+2,w,c
  7045  0022A8  B0D8               	btfsc	status,0,c
  7046  0022AA  D002               	goto	u3760
  7047  0022AC  0E01               	movlw	1
  7048  0022AE  D002               	goto	u3770
  7049  0022B0                     u3760:
  7050  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  7051  0022B2  0E00               	movlw	0
  7052  0022B4                     u3770:
  7053  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  7054  0022B6  6E31               	movwf	_xtoa$1158,c
  7055  0022B8  6A32               	clrf	_xtoa$1158+1,c
  7056  0022BA  5031               	movf	_xtoa$1158,w,c
  7057  0022BC  1032               	iorwf	_xtoa$1158+1,w,c
  7058  0022BE  B4D8               	btfsc	status,2,c
  7059  0022C0  D00A               	goto	l3995
  7060                           
  7061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7062  0022C2  C041  F007         	movff	xtoa@c,toupper@c
  7063  0022C6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  7064  0022CA  EC58  F01D         	call	_toupper	;wreg free
  7065  0022CE  C007  F041         	movff	?_toupper,xtoa@c
  7066  0022D2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  7067  0022D6                     l3995:
  7068  0022D6  FFFF               	dw	65535	; assembler added errata NOP
  7069                           
  7070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7071  0022D8  0ED6               	movlw	low _dbuf
  7072  0022DA  243F               	addwf	xtoa@i,w,c
  7073  0022DC  6ED9               	movwf	fsr2l,c
  7074  0022DE  0E00               	movlw	high _dbuf
  7075  0022E0  2040               	addwfc	xtoa@i+1,w,c
  7076  0022E2  6EDA               	movwf	fsr2h,c
  7077  0022E4  C041  FFDF         	movff	xtoa@c,indf2
  7078                           
  7079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7080  0022E8  0633               	decf	xtoa@p,f,c
  7081  0022EA  A0D8               	btfss	status,0,c
  7082  0022EC  0634               	decf	xtoa@p+1,f,c
  7083                           
  7084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7085  0022EE  0635               	decf	xtoa@w,f,c
  7086  0022F0  A0D8               	btfss	status,0,c
  7087  0022F2  0636               	decf	xtoa@w+1,f,c
  7088                           
  7089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7090  0022F4  C037  F027         	movff	xtoa@n,??_xtoa
  7091  0022F8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  7092  0022FC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  7093  002300  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  7094  002304  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  7095  002308  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  7096  00230C  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  7097  002310  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  7098  002314  0E05               	movlw	5
  7099  002316  D00A               	goto	u3790
  7100  002318                     u3795:
  7101  002318  FFFF               	dw	65535	; assembler added errata NOP
  7102  00231A  90D8               	bcf	status,0,c
  7103  00231C  322E               	rrcf	??_xtoa+7,f,c
  7104  00231E  322D               	rrcf	??_xtoa+6,f,c
  7105  002320  322C               	rrcf	??_xtoa+5,f,c
  7106  002322  322B               	rrcf	??_xtoa+4,f,c
  7107  002324  322A               	rrcf	??_xtoa+3,f,c
  7108  002326  3229               	rrcf	??_xtoa+2,f,c
  7109  002328  3228               	rrcf	??_xtoa+1,f,c
  7110  00232A  3227               	rrcf	??_xtoa,f,c
  7111  00232C                     u3790:
  7112  00232C  FFFF               	dw	65535	; assembler added errata NOP
  7113  00232E  2EE8               	decfsz	wreg,f,c
  7114  002330  D7F3               	goto	u3795
  7115  002332  C027  F037         	movff	??_xtoa,xtoa@n
  7116  002336  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  7117  00233A  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  7118  00233E  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  7119  002342  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  7120  002346  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  7121  00234A  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  7122  00234E  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  7123  002352                     l4003:
  7124  002352  FFFF               	dw	65535	; assembler added errata NOP
  7125                           
  7126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7127  002354  BE40               	btfsc	xtoa@i+1,7,c
  7128  002356  D022               	goto	u3840
  7129  002358  5040               	movf	xtoa@i+1,w,c
  7130  00235A  E104               	bnz	u3800
  7131  00235C  0E02               	movlw	2
  7132  00235E  5C3F               	subwf	xtoa@i,w,c
  7133  002360  A0D8               	btfss	status,0,c
  7134  002362  D01C               	goto	u3840
  7135  002364                     u3800:
  7136  002364  5037               	movf	xtoa@n,w,c
  7137  002366  1038               	iorwf	xtoa@n+1,w,c
  7138  002368  1039               	iorwf	xtoa@n+2,w,c
  7139  00236A  103A               	iorwf	xtoa@n+3,w,c
  7140  00236C  103B               	iorwf	xtoa@n+4,w,c
  7141  00236E  103C               	iorwf	xtoa@n+5,w,c
  7142  002370  103D               	iorwf	xtoa@n+6,w,c
  7143  002372  103E               	iorwf	xtoa@n+7,w,c
  7144  002374  A4D8               	btfss	status,2,c
  7145  002376  D750               	goto	l3973
  7146  002378  BE34               	btfsc	xtoa@p+1,7,c
  7147  00237A  D005               	goto	u3820
  7148  00237C  5034               	movf	xtoa@p+1,w,c
  7149  00237E  E102               	bnz	u3821
  7150  002380  0433               	decf	xtoa@p,w,c
  7151  002382  B0D8               	btfsc	status,0,c
  7152  002384                     u3821:
  7153  002384  D749               	goto	l3973
  7154  002386                     u3820:
  7155  002386  FFFF               	dw	65535	; assembler added errata NOP
  7156  002388  BE36               	btfsc	xtoa@w+1,7,c
  7157  00238A  D008               	goto	u3840
  7158  00238C  5036               	movf	xtoa@w+1,w,c
  7159  00238E  E103               	bnz	u3830
  7160  002390  0435               	decf	xtoa@w,w,c
  7161  002392  A0D8               	btfss	status,0,c
  7162  002394  D003               	goto	u3840
  7163  002396                     u3830:
  7164  002396  0100               	movlb	0	; () banked
  7165  002398  B3D1               	btfsc	_flags& (0+255),1,b
  7166  00239A  D73E               	goto	l3973
  7167  00239C                     u3840:
  7168  00239C  FFFF               	dw	65535	; assembler added errata NOP
  7169                           
  7170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7171  00239E  0100               	movlb	0	; () banked
  7172  0023A0  A9D1               	btfss	_flags& (0+255),4,b
  7173  0023A2  D016               	goto	l4019
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7177  0023A4  063F               	decf	xtoa@i,f,c
  7178  0023A6  A0D8               	btfss	status,0,c
  7179  0023A8  0640               	decf	xtoa@i+1,f,c
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7183  0023AA  0ED6               	movlw	low _dbuf
  7184  0023AC  243F               	addwf	xtoa@i,w,c
  7185  0023AE  6ED9               	movwf	fsr2l,c
  7186  0023B0  0E00               	movlw	high _dbuf
  7187  0023B2  2040               	addwfc	xtoa@i+1,w,c
  7188  0023B4  6EDA               	movwf	fsr2h,c
  7189  0023B6  C026  FFDF         	movff	xtoa@x,indf2
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7193  0023BA  063F               	decf	xtoa@i,f,c
  7194  0023BC  A0D8               	btfss	status,0,c
  7195  0023BE  0640               	decf	xtoa@i+1,f,c
  7196                           
  7197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7198  0023C0  0ED6               	movlw	low _dbuf
  7199  0023C2  243F               	addwf	xtoa@i,w,c
  7200  0023C4  6ED9               	movwf	fsr2l,c
  7201  0023C6  0E00               	movlw	high _dbuf
  7202  0023C8  2040               	addwfc	xtoa@i+1,w,c
  7203  0023CA  6EDA               	movwf	fsr2h,c
  7204  0023CC  0E30               	movlw	48
  7205  0023CE  6EDF               	movwf	indf2,c
  7206  0023D0                     l4019:
  7207  0023D0  FFFF               	dw	65535	; assembler added errata NOP
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7211  0023D2  C01C  F011         	movff	xtoa@fp,pad@fp
  7212  0023D6  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7213  0023DA  0ED6               	movlw	low _dbuf
  7214  0023DC  243F               	addwf	xtoa@i,w,c
  7215  0023DE  6E13               	movwf	pad@buf,c
  7216  0023E0  0E00               	movlw	high _dbuf
  7217  0023E2  2040               	addwfc	xtoa@i+1,w,c
  7218  0023E4  6E14               	movwf	pad@buf+1,c
  7219  0023E6  C035  F015         	movff	xtoa@w,pad@p
  7220  0023EA  C036  F016         	movff	xtoa@w+1,pad@p+1
  7221  0023EE  ECD7  F01B         	call	_pad	;wreg free
  7222  0023F2  C011  F01C         	movff	?_pad,?_xtoa
  7223  0023F6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7224  0023FA  0012               	return		;funcret
  7225  0023FC  FFFF               	dw	65535	; errata NOP
  7226  0023FE                     __end_of_xtoa:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _toupper *****************
  7230 ;; Defined at:
  7231 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  c               2    6[COMRAM] int 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  2    6[COMRAM] int 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2, status,0
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7245 ;;      Params:         2       0       0       0       0       0       0
  7246 ;;      Locals:         2       0       0       0       0       0       0
  7247 ;;      Temps:          4       0       0       0       0       0       0
  7248 ;;      Totals:         8       0       0       0       0       0       0
  7249 ;;Total ram usage:        8 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    3
  7252 ;; This function calls:
  7253 ;;		_islower
  7254 ;; This function is called by:
  7255 ;;		_xtoa
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text25
  7260  003AB0                     __ptext25:
  7261                           	opt callstack 0
  7262  003AB0                     _toupper:
  7263                           	opt callstack 0
  7264  003AB0  FFFF               	dw	65535	; assembler added errata NOP
  7265                           
  7266                           ;incstack = 0
  7267  003AB2  0E9F               	movlw	159
  7268  003AB4  6E09               	movwf	??_toupper& (0+255),c
  7269  003AB6  0EFF               	movlw	255
  7270  003AB8  6E0A               	movwf	(??_toupper+1)& (0+255),c
  7271  003ABA  C007  F00B         	movff	toupper@c,??_toupper+2
  7272  003ABE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7273  003AC2  5009               	movf	??_toupper,w,c
  7274  003AC4  260B               	addwf	??_toupper+2,f,c
  7275  003AC6  500A               	movf	??_toupper+1,w,c
  7276  003AC8  220C               	addwfc	??_toupper+3,f,c
  7277  003ACA  500C               	movf	??_toupper+3,w,c
  7278  003ACC  E106               	bnz	u3000
  7279  003ACE  0E1A               	movlw	26
  7280  003AD0  5C0B               	subwf	??_toupper+2,w,c
  7281  003AD2  B0D8               	btfsc	status,0,c
  7282  003AD4  D002               	goto	u3000
  7283  003AD6  0E01               	movlw	1
  7284  003AD8  D002               	goto	u3010
  7285  003ADA                     u3000:
  7286  003ADA  FFFF               	dw	65535	; assembler added errata NOP
  7287  003ADC  0E00               	movlw	0
  7288  003ADE                     u3010:
  7289  003ADE  FFFF               	dw	65535	; assembler added errata NOP
  7290  003AE0  6E0D               	movwf	_toupper$1924,c
  7291  003AE2  6A0E               	clrf	_toupper$1924+1,c
  7292  003AE4  500D               	movf	_toupper$1924,w,c
  7293  003AE6  100E               	iorwf	_toupper$1924+1,w,c
  7294  003AE8  B4D8               	btfsc	status,2,c
  7295  003AEA  D005               	goto	l1455
  7296  003AEC  0E5F               	movlw	95
  7297  003AEE  1407               	andwf	toupper@c,w,c
  7298  003AF0  6E07               	movwf	?_toupper,c
  7299  003AF2  6A08               	clrf	?_toupper+1,c
  7300  003AF4  D005               	goto	l1460
  7301  003AF6                     l1455:
  7302  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  7303  003AF8  C007  F007         	movff	toupper@c,?_toupper
  7304  003AFC  C008  F008         	movff	toupper@c+1,?_toupper+1
  7305  003B00                     l1460:
  7306  003B00  FFFF               	dw	65535	; assembler added errata NOP
  7307  003B02  0012               	return		;funcret
  7308  003B04  FFFF               	dw	65535	; errata NOP
  7309  003B06                     __end_of_toupper:
  7310                           	opt callstack 0
  7311                           
  7312 ;; *************** function _islower *****************
  7313 ;; Defined at:
  7314 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  c               2    0[COMRAM] int 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2    0[COMRAM] int 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7328 ;;      Params:         2       0       0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0       0       0
  7330 ;;      Temps:          4       0       0       0       0       0       0
  7331 ;;      Totals:         6       0       0       0       0       0       0
  7332 ;;Total ram usage:        6 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    2
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_toupper
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text26
  7343  003D7C                     __ptext26:
  7344                           	opt callstack 0
  7345  003D7C                     _islower:
  7346                           	opt callstack 0
  7347  003D7C  FFFF               	dw	65535	; assembler added errata NOP
  7348                           
  7349                           ;incstack = 0
  7350  003D7E  0E9F               	movlw	159
  7351  003D80  6E03               	movwf	??_islower& (0+255),c
  7352  003D82  0EFF               	movlw	255
  7353  003D84  6E04               	movwf	(??_islower+1)& (0+255),c
  7354  003D86  C001  F005         	movff	islower@c,??_islower+2
  7355  003D8A  C002  F006         	movff	islower@c+1,??_islower+3
  7356  003D8E  5003               	movf	??_islower,w,c
  7357  003D90  2605               	addwf	??_islower+2,f,c
  7358  003D92  5004               	movf	??_islower+1,w,c
  7359  003D94  2206               	addwfc	??_islower+3,f,c
  7360  003D96  5006               	movf	??_islower+3,w,c
  7361  003D98  E106               	bnz	u2890
  7362  003D9A  0E1A               	movlw	26
  7363  003D9C  5C05               	subwf	??_islower+2,w,c
  7364  003D9E  B0D8               	btfsc	status,0,c
  7365  003DA0  D002               	goto	u2890
  7366  003DA2  0E01               	movlw	1
  7367  003DA4  D002               	goto	u2900
  7368  003DA6                     u2890:
  7369  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  7370  003DA8  0E00               	movlw	0
  7371  003DAA                     u2900:
  7372  003DAA  FFFF               	dw	65535	; assembler added errata NOP
  7373  003DAC  6E01               	movwf	?_islower,c
  7374  003DAE  6A02               	clrf	?_islower+1,c
  7375  003DB0  0012               	return		;funcret
  7376  003DB2  FFFF               	dw	65535	; errata NOP
  7377  003DB4                     __end_of_islower:
  7378                           	opt callstack 0
  7379                           
  7380 ;; *************** function _isupper *****************
  7381 ;; Defined at:
  7382 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  c               2    0[COMRAM] int 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;		None
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  2    0[COMRAM] int 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7396 ;;      Params:         2       0       0       0       0       0       0
  7397 ;;      Locals:         0       0       0       0       0       0       0
  7398 ;;      Temps:          4       0       0       0       0       0       0
  7399 ;;      Totals:         6       0       0       0       0       0       0
  7400 ;;Total ram usage:        6 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    2
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_xtoa
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text27
  7411  003DB4                     __ptext27:
  7412                           	opt callstack 0
  7413  003DB4                     _isupper:
  7414                           	opt callstack 0
  7415  003DB4  FFFF               	dw	65535	; assembler added errata NOP
  7416                           
  7417                           ;incstack = 0
  7418  003DB6  0EBF               	movlw	191
  7419  003DB8  6E03               	movwf	??_isupper& (0+255),c
  7420  003DBA  0EFF               	movlw	255
  7421  003DBC  6E04               	movwf	(??_isupper+1)& (0+255),c
  7422  003DBE  C001  F005         	movff	isupper@c,??_isupper+2
  7423  003DC2  C002  F006         	movff	isupper@c+1,??_isupper+3
  7424  003DC6  5003               	movf	??_isupper,w,c
  7425  003DC8  2605               	addwf	??_isupper+2,f,c
  7426  003DCA  5004               	movf	??_isupper+1,w,c
  7427  003DCC  2206               	addwfc	??_isupper+3,f,c
  7428  003DCE  5006               	movf	??_isupper+3,w,c
  7429  003DD0  E106               	bnz	u2960
  7430  003DD2  0E1A               	movlw	26
  7431  003DD4  5C05               	subwf	??_isupper+2,w,c
  7432  003DD6  B0D8               	btfsc	status,0,c
  7433  003DD8  D002               	goto	u2960
  7434  003DDA  0E01               	movlw	1
  7435  003DDC  D002               	goto	u2970
  7436  003DDE                     u2960:
  7437  003DDE  FFFF               	dw	65535	; assembler added errata NOP
  7438  003DE0  0E00               	movlw	0
  7439  003DE2                     u2970:
  7440  003DE2  FFFF               	dw	65535	; assembler added errata NOP
  7441  003DE4  6E01               	movwf	?_isupper,c
  7442  003DE6  6A02               	clrf	?_isupper+1,c
  7443  003DE8  0012               	return		;funcret
  7444  003DEA  FFFF               	dw	65535	; errata NOP
  7445  003DEC                     __end_of_isupper:
  7446                           	opt callstack 0
  7447                           
  7448 ;; *************** function _isalpha *****************
  7449 ;; Defined at:
  7450 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  c               2    0[COMRAM] int 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2    0[COMRAM] int 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7464 ;;      Params:         2       0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0
  7466 ;;      Temps:          4       0       0       0       0       0       0
  7467 ;;      Totals:         6       0       0       0       0       0       0
  7468 ;;Total ram usage:        6 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    2
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_xtoa
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text28
  7479  003D04                     __ptext28:
  7480                           	opt callstack 0
  7481  003D04                     _isalpha:
  7482                           	opt callstack 0
  7483  003D04  FFFF               	dw	65535	; assembler added errata NOP
  7484                           
  7485                           ;incstack = 0
  7486  003D06  0E9F               	movlw	159
  7487  003D08  6E03               	movwf	??_isalpha& (0+255),c
  7488  003D0A  0EFF               	movlw	255
  7489  003D0C  6E04               	movwf	(??_isalpha+1)& (0+255),c
  7490  003D0E  0E20               	movlw	32
  7491  003D10  1001               	iorwf	isalpha@c,w,c
  7492  003D12  6E05               	movwf	(??_isalpha+2)& (0+255),c
  7493  003D14  0E00               	movlw	0
  7494  003D16  1002               	iorwf	isalpha@c+1,w,c
  7495  003D18  6E06               	movwf	(??_isalpha+3)& (0+255),c
  7496  003D1A  5003               	movf	??_isalpha,w,c
  7497  003D1C  2605               	addwf	??_isalpha+2,f,c
  7498  003D1E  5004               	movf	??_isalpha+1,w,c
  7499  003D20  2206               	addwfc	??_isalpha+3,f,c
  7500  003D22  5006               	movf	??_isalpha+3,w,c
  7501  003D24  E106               	bnz	u2980
  7502  003D26  0E1A               	movlw	26
  7503  003D28  5C05               	subwf	??_isalpha+2,w,c
  7504  003D2A  B0D8               	btfsc	status,0,c
  7505  003D2C  D002               	goto	u2980
  7506  003D2E  0E01               	movlw	1
  7507  003D30  D002               	goto	u2990
  7508  003D32                     u2980:
  7509  003D32  FFFF               	dw	65535	; assembler added errata NOP
  7510  003D34  0E00               	movlw	0
  7511  003D36                     u2990:
  7512  003D36  FFFF               	dw	65535	; assembler added errata NOP
  7513  003D38  6E01               	movwf	?_isalpha,c
  7514  003D3A  6A02               	clrf	?_isalpha+1,c
  7515  003D3C  0012               	return		;funcret
  7516  003D3E  FFFF               	dw	65535	; errata NOP
  7517  003D40                     __end_of_isalpha:
  7518                           	opt callstack 0
  7519                           
  7520 ;; *************** function _utoa *****************
  7521 ;; Defined at:
  7522 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7525 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7526 ;;  d               8   29[COMRAM] unsigned long long 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  n               8   49[COMRAM] unsigned long long 
  7529 ;;  i               2   57[COMRAM] int 
  7530 ;;  w               2   47[COMRAM] int 
  7531 ;;  p               2   45[COMRAM] int 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  2   27[COMRAM] int 
  7534 ;; Registers used:
  7535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7541 ;;      Params:        10       0       0       0       0       0       0
  7542 ;;      Locals:        14       0       0       0       0       0       0
  7543 ;;      Temps:          8       0       0       0       0       0       0
  7544 ;;      Totals:        32       0       0       0       0       0       0
  7545 ;;Total ram usage:       32 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; Hardware stack levels required when called:    6
  7548 ;; This function calls:
  7549 ;;		___lodiv
  7550 ;;		___lomod
  7551 ;;		_pad
  7552 ;; This function is called by:
  7553 ;;		_vfpfcnvrt
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text29
  7558  0027E4                     __ptext29:
  7559                           	opt callstack 0
  7560  0027E4                     _utoa:
  7561                           	opt callstack 0
  7562  0027E4  FFFF               	dw	65535	; assembler added errata NOP
  7563                           
  7564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  7565                           
  7566                           ;incstack = 0
  7567  0027E6  0100               	movlb	0	; () banked
  7568  0027E8  AFD0               	btfss	(_prec+1)& (0+255),7,b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  7572  0027EA  93D1               	bcf	_flags& (0+255),1,b
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  7576  0027EC  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  7577  0027EE  D005               	goto	u3630
  7578  0027F0  51D0               	movf	(_prec+1)& (0+255),w,b
  7579  0027F2  E109               	bnz	l505
  7580  0027F4  05CF               	decf	_prec& (0+255),w,b
  7581  0027F6  B0D8               	btfsc	status,0,c
  7582  0027F8  D006               	goto	l505
  7583  0027FA                     u3630:
  7584  0027FA  FFFF               	dw	65535	; assembler added errata NOP
  7585                           
  7586                           ; BSR set to: 0
  7587  0027FC  0E00               	movlw	0
  7588  0027FE  6E2F               	movwf	utoa@p+1,c
  7589  002800  0E01               	movlw	1
  7590  002802  6E2E               	movwf	utoa@p,c
  7591  002804  D005               	goto	l507
  7592  002806                     l505:
  7593  002806  FFFF               	dw	65535	; assembler added errata NOP
  7594                           
  7595                           ; BSR set to: 0
  7596  002808  C0CF  F02E         	movff	_prec,utoa@p
  7597  00280C  C0D0  F02F         	movff	_prec+1,utoa@p+1
  7598  002810                     l507:
  7599  002810  FFFF               	dw	65535	; assembler added errata NOP
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  7603  002812  C0CD  F030         	movff	_width,utoa@w
  7604  002816  C0CE  F031         	movff	_width+1,utoa@w+1
  7605                           
  7606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  7607  00281A  C01E  F032         	movff	utoa@d,utoa@n
  7608  00281E  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7609  002822  C020  F034         	movff	utoa@d+2,utoa@n+2
  7610  002826  C021  F035         	movff	utoa@d+3,utoa@n+3
  7611  00282A  C022  F036         	movff	utoa@d+4,utoa@n+4
  7612  00282E  C023  F037         	movff	utoa@d+5,utoa@n+5
  7613  002832  C024  F038         	movff	utoa@d+6,utoa@n+6
  7614  002836  C025  F039         	movff	utoa@d+7,utoa@n+7
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  7618  00283A  0E00               	movlw	0
  7619  00283C  6E3B               	movwf	utoa@i+1,c
  7620  00283E  0E1F               	movlw	31
  7621  002840  6E3A               	movwf	utoa@i,c
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  7625  002842  0E00               	movlw	0
  7626  002844  6FF5               	movwf	(_dbuf+31)& (0+255),b
  7627                           
  7628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7629  002846  D077               	goto	l3943
  7630  002848                     l3933:
  7631  002848  FFFF               	dw	65535	; assembler added errata NOP
  7632                           
  7633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  7634  00284A  063A               	decf	utoa@i,f,c
  7635  00284C  A0D8               	btfss	status,0,c
  7636  00284E  063B               	decf	utoa@i+1,f,c
  7637                           
  7638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  7639  002850  0ED6               	movlw	low _dbuf
  7640  002852  243A               	addwf	utoa@i,w,c
  7641  002854  6ED9               	movwf	fsr2l,c
  7642  002856  0E00               	movlw	high _dbuf
  7643  002858  203B               	addwfc	utoa@i+1,w,c
  7644  00285A  6EDA               	movwf	fsr2h,c
  7645  00285C  C032  F001         	movff	utoa@n,___lomod@dividend
  7646  002860  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7647  002864  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7648  002868  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7649  00286C  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7650  002870  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7651  002874  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7652  002878  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7653  00287C  0E0A               	movlw	10
  7654  00287E  6E09               	movwf	___lomod@divisor,c
  7655  002880  0E00               	movlw	0
  7656  002882  6E0A               	movwf	___lomod@divisor+1,c
  7657  002884  0E00               	movlw	0
  7658  002886  6E0B               	movwf	___lomod@divisor+2,c
  7659  002888  0E00               	movlw	0
  7660  00288A  6E0C               	movwf	___lomod@divisor+3,c
  7661  00288C  0E00               	movlw	0
  7662  00288E  6E0D               	movwf	___lomod@divisor+4,c
  7663  002890  0E00               	movlw	0
  7664  002892  6E0E               	movwf	___lomod@divisor+5,c
  7665  002894  0E00               	movlw	0
  7666  002896  6E0F               	movwf	___lomod@divisor+6,c
  7667  002898  0E00               	movlw	0
  7668  00289A  6E10               	movwf	___lomod@divisor+7,c
  7669  00289C  EC23  F01B         	call	___lomod	;wreg free
  7670  0028A0  C001  F026         	movff	?___lomod,??_utoa
  7671  0028A4  C002  F027         	movff	?___lomod+1,??_utoa+1
  7672  0028A8  C003  F028         	movff	?___lomod+2,??_utoa+2
  7673  0028AC  C004  F029         	movff	?___lomod+3,??_utoa+3
  7674  0028B0  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7675  0028B4  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7676  0028B8  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7677  0028BC  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7678  0028C0  5026               	movf	??_utoa,w,c
  7679  0028C2  0F30               	addlw	48
  7680  0028C4  6EDF               	movwf	indf2,c
  7681                           
  7682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  7683  0028C6  062E               	decf	utoa@p,f,c
  7684  0028C8  A0D8               	btfss	status,0,c
  7685  0028CA  062F               	decf	utoa@p+1,f,c
  7686                           
  7687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  7688  0028CC  0630               	decf	utoa@w,f,c
  7689  0028CE  A0D8               	btfss	status,0,c
  7690  0028D0  0631               	decf	utoa@w+1,f,c
  7691                           
  7692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  7693  0028D2  C032  F001         	movff	utoa@n,___lodiv@dividend
  7694  0028D6  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7695  0028DA  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7696  0028DE  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7697  0028E2  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7698  0028E6  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7699  0028EA  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7700  0028EE  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7701  0028F2  0E0A               	movlw	10
  7702  0028F4  6E09               	movwf	___lodiv@divisor,c
  7703  0028F6  0E00               	movlw	0
  7704  0028F8  6E0A               	movwf	___lodiv@divisor+1,c
  7705  0028FA  0E00               	movlw	0
  7706  0028FC  6E0B               	movwf	___lodiv@divisor+2,c
  7707  0028FE  0E00               	movlw	0
  7708  002900  6E0C               	movwf	___lodiv@divisor+3,c
  7709  002902  0E00               	movlw	0
  7710  002904  6E0D               	movwf	___lodiv@divisor+4,c
  7711  002906  0E00               	movlw	0
  7712  002908  6E0E               	movwf	___lodiv@divisor+5,c
  7713  00290A  0E00               	movlw	0
  7714  00290C  6E0F               	movwf	___lodiv@divisor+6,c
  7715  00290E  0E00               	movlw	0
  7716  002910  6E10               	movwf	___lodiv@divisor+7,c
  7717  002912  EC85  F019         	call	___lodiv	;wreg free
  7718  002916  C001  F032         	movff	?___lodiv,utoa@n
  7719  00291A  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7720  00291E  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7721  002922  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7722  002926  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7723  00292A  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7724  00292E  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7725  002932  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7726  002936                     l3943:
  7727  002936  FFFF               	dw	65535	; assembler added errata NOP
  7728                           
  7729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7730  002938  503A               	movf	utoa@i,w,c
  7731  00293A  103B               	iorwf	utoa@i+1,w,c
  7732  00293C  B4D8               	btfsc	status,2,c
  7733  00293E  D01C               	goto	u3680
  7734  002940  5032               	movf	utoa@n,w,c
  7735  002942  1033               	iorwf	utoa@n+1,w,c
  7736  002944  1034               	iorwf	utoa@n+2,w,c
  7737  002946  1035               	iorwf	utoa@n+3,w,c
  7738  002948  1036               	iorwf	utoa@n+4,w,c
  7739  00294A  1037               	iorwf	utoa@n+5,w,c
  7740  00294C  1038               	iorwf	utoa@n+6,w,c
  7741  00294E  1039               	iorwf	utoa@n+7,w,c
  7742  002950  A4D8               	btfss	status,2,c
  7743  002952  D77A               	goto	l3933
  7744  002954  BE2F               	btfsc	utoa@p+1,7,c
  7745  002956  D005               	goto	u3660
  7746  002958  502F               	movf	utoa@p+1,w,c
  7747  00295A  E102               	bnz	u3661
  7748  00295C  042E               	decf	utoa@p,w,c
  7749  00295E  B0D8               	btfsc	status,0,c
  7750  002960                     u3661:
  7751  002960  D773               	goto	l3933
  7752  002962                     u3660:
  7753  002962  FFFF               	dw	65535	; assembler added errata NOP
  7754  002964  BE31               	btfsc	utoa@w+1,7,c
  7755  002966  D008               	goto	u3680
  7756  002968  5031               	movf	utoa@w+1,w,c
  7757  00296A  E103               	bnz	u3670
  7758  00296C  0430               	decf	utoa@w,w,c
  7759  00296E  A0D8               	btfss	status,0,c
  7760  002970  D003               	goto	u3680
  7761  002972                     u3670:
  7762  002972  0100               	movlb	0	; () banked
  7763  002974  B3D1               	btfsc	_flags& (0+255),1,b
  7764  002976  D768               	goto	l3933
  7765  002978                     u3680:
  7766  002978  FFFF               	dw	65535	; assembler added errata NOP
  7767                           
  7768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  7769  00297A  C01C  F011         	movff	utoa@fp,pad@fp
  7770  00297E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7771  002982  0ED6               	movlw	low _dbuf
  7772  002984  243A               	addwf	utoa@i,w,c
  7773  002986  6E13               	movwf	pad@buf,c
  7774  002988  0E00               	movlw	high _dbuf
  7775  00298A  203B               	addwfc	utoa@i+1,w,c
  7776  00298C  6E14               	movwf	pad@buf+1,c
  7777  00298E  C030  F015         	movff	utoa@w,pad@p
  7778  002992  C031  F016         	movff	utoa@w+1,pad@p+1
  7779  002996  ECD7  F01B         	call	_pad	;wreg free
  7780  00299A  C011  F01C         	movff	?_pad,?_utoa
  7781  00299E  C012  F01D         	movff	?_pad+1,?_utoa+1
  7782  0029A2  0012               	return		;funcret
  7783  0029A4  FFFF               	dw	65535	; errata NOP
  7784  0029A6                     __end_of_utoa:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function ___lomod *****************
  7788 ;; Defined at:
  7789 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  dividend        8    0[COMRAM] unsigned long long 
  7792 ;;  divisor         8    8[COMRAM] unsigned long long 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  counter         1   16[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  8    0[COMRAM] unsigned long long 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7804 ;;      Params:        16       0       0       0       0       0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0
  7807 ;;      Totals:        17       0       0       0       0       0       0
  7808 ;;Total ram usage:       17 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    2
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_utoa
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text30
  7819  003646                     __ptext30:
  7820                           	opt callstack 0
  7821  003646                     ___lomod:
  7822                           	opt callstack 0
  7823  003646  FFFF               	dw	65535	; assembler added errata NOP
  7824                           
  7825                           ;incstack = 0
  7826  003648  5009               	movf	___lomod@divisor,w,c
  7827  00364A  100A               	iorwf	___lomod@divisor+1,w,c
  7828  00364C  100B               	iorwf	___lomod@divisor+2,w,c
  7829  00364E  100C               	iorwf	___lomod@divisor+3,w,c
  7830  003650  100D               	iorwf	___lomod@divisor+4,w,c
  7831  003652  100E               	iorwf	___lomod@divisor+5,w,c
  7832  003654  100F               	iorwf	___lomod@divisor+6,w,c
  7833  003656  1010               	iorwf	___lomod@divisor+7,w,c
  7834  003658  B4D8               	btfsc	status,2,c
  7835  00365A  D040               	goto	l1087
  7836  00365C  0E01               	movlw	1
  7837  00365E  6E11               	movwf	___lomod@counter,c
  7838  003660  D00B               	goto	l3733
  7839  003662                     l3731:
  7840  003662  FFFF               	dw	65535	; assembler added errata NOP
  7841  003664  90D8               	bcf	status,0,c
  7842  003666  3609               	rlcf	___lomod@divisor,f,c
  7843  003668  360A               	rlcf	___lomod@divisor+1,f,c
  7844  00366A  360B               	rlcf	___lomod@divisor+2,f,c
  7845  00366C  360C               	rlcf	___lomod@divisor+3,f,c
  7846  00366E  360D               	rlcf	___lomod@divisor+4,f,c
  7847  003670  360E               	rlcf	___lomod@divisor+5,f,c
  7848  003672  360F               	rlcf	___lomod@divisor+6,f,c
  7849  003674  3610               	rlcf	___lomod@divisor+7,f,c
  7850  003676  2A11               	incf	___lomod@counter,f,c
  7851  003678                     l3733:
  7852  003678  FFFF               	dw	65535	; assembler added errata NOP
  7853  00367A  AE10               	btfss	___lomod@divisor+7,7,c
  7854  00367C  D7F2               	goto	l3731
  7855  00367E                     u3230:
  7856  00367E  FFFF               	dw	65535	; assembler added errata NOP
  7857  003680  5009               	movf	___lomod@divisor,w,c
  7858  003682  5C01               	subwf	___lomod@dividend,w,c
  7859  003684  500A               	movf	___lomod@divisor+1,w,c
  7860  003686  5802               	subwfb	___lomod@dividend+1,w,c
  7861  003688  500B               	movf	___lomod@divisor+2,w,c
  7862  00368A  5803               	subwfb	___lomod@dividend+2,w,c
  7863  00368C  500C               	movf	___lomod@divisor+3,w,c
  7864  00368E  5804               	subwfb	___lomod@dividend+3,w,c
  7865  003690  500D               	movf	___lomod@divisor+4,w,c
  7866  003692  5805               	subwfb	___lomod@dividend+4,w,c
  7867  003694  500E               	movf	___lomod@divisor+5,w,c
  7868  003696  5806               	subwfb	___lomod@dividend+5,w,c
  7869  003698  500F               	movf	___lomod@divisor+6,w,c
  7870  00369A  5807               	subwfb	___lomod@dividend+6,w,c
  7871  00369C  5010               	movf	___lomod@divisor+7,w,c
  7872  00369E  5808               	subwfb	___lomod@dividend+7,w,c
  7873  0036A0  A0D8               	btfss	status,0,c
  7874  0036A2  D010               	goto	l3739
  7875  0036A4  5009               	movf	___lomod@divisor,w,c
  7876  0036A6  5E01               	subwf	___lomod@dividend,f,c
  7877  0036A8  500A               	movf	___lomod@divisor+1,w,c
  7878  0036AA  5A02               	subwfb	___lomod@dividend+1,f,c
  7879  0036AC  500B               	movf	___lomod@divisor+2,w,c
  7880  0036AE  5A03               	subwfb	___lomod@dividend+2,f,c
  7881  0036B0  500C               	movf	___lomod@divisor+3,w,c
  7882  0036B2  5A04               	subwfb	___lomod@dividend+3,f,c
  7883  0036B4  500D               	movf	___lomod@divisor+4,w,c
  7884  0036B6  5A05               	subwfb	___lomod@dividend+4,f,c
  7885  0036B8  500E               	movf	___lomod@divisor+5,w,c
  7886  0036BA  5A06               	subwfb	___lomod@dividend+5,f,c
  7887  0036BC  500F               	movf	___lomod@divisor+6,w,c
  7888  0036BE  5A07               	subwfb	___lomod@dividend+6,f,c
  7889  0036C0  5010               	movf	___lomod@divisor+7,w,c
  7890  0036C2  5A08               	subwfb	___lomod@dividend+7,f,c
  7891  0036C4                     l3739:
  7892  0036C4  FFFF               	dw	65535	; assembler added errata NOP
  7893  0036C6  90D8               	bcf	status,0,c
  7894  0036C8  3210               	rrcf	___lomod@divisor+7,f,c
  7895  0036CA  320F               	rrcf	___lomod@divisor+6,f,c
  7896  0036CC  320E               	rrcf	___lomod@divisor+5,f,c
  7897  0036CE  320D               	rrcf	___lomod@divisor+4,f,c
  7898  0036D0  320C               	rrcf	___lomod@divisor+3,f,c
  7899  0036D2  320B               	rrcf	___lomod@divisor+2,f,c
  7900  0036D4  320A               	rrcf	___lomod@divisor+1,f,c
  7901  0036D6  3209               	rrcf	___lomod@divisor,f,c
  7902  0036D8  2E11               	decfsz	___lomod@counter,f,c
  7903  0036DA  D7D1               	goto	u3230
  7904  0036DC                     l1087:
  7905  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  7906  0036DE  C001  F001         	movff	___lomod@dividend,?___lomod
  7907  0036E2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7908  0036E6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7909  0036EA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7910  0036EE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7911  0036F2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7912  0036F6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7913  0036FA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7914  0036FE  0012               	return		;funcret
  7915  003700  FFFF               	dw	65535	; errata NOP
  7916  003702                     __end_of___lomod:
  7917                           	opt callstack 0
  7918                           
  7919 ;; *************** function ___lodiv *****************
  7920 ;; Defined at:
  7921 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  dividend        8    0[COMRAM] unsigned long long 
  7924 ;;  divisor         8    8[COMRAM] unsigned long long 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  quotient        8   16[COMRAM] unsigned long long 
  7927 ;;  counter         1   24[COMRAM] unsigned char 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  8    0[COMRAM] unsigned long long 
  7930 ;; Registers used:
  7931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7937 ;;      Params:        16       0       0       0       0       0       0
  7938 ;;      Locals:         9       0       0       0       0       0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0
  7940 ;;      Totals:        25       0       0       0       0       0       0
  7941 ;;Total ram usage:       25 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; Hardware stack levels required when called:    2
  7944 ;; This function calls:
  7945 ;;		Nothing
  7946 ;; This function is called by:
  7947 ;;		_utoa
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text31
  7952  00330A                     __ptext31:
  7953                           	opt callstack 0
  7954  00330A                     ___lodiv:
  7955                           	opt callstack 0
  7956  00330A  FFFF               	dw	65535	; assembler added errata NOP
  7957                           
  7958                           ;incstack = 0
  7959  00330C  EE20  F011         	lfsr	2,___lodiv@quotient
  7960  003310  0E07               	movlw	7
  7961  003312                     u3181:
  7962  003312  6ADE               	clrf	postinc2,c
  7963  003314  06E8               	decf	wreg,f,c
  7964  003316  E2FD               	bc	u3181
  7965  003318  5009               	movf	___lodiv@divisor,w,c
  7966  00331A  100A               	iorwf	___lodiv@divisor+1,w,c
  7967  00331C  100B               	iorwf	___lodiv@divisor+2,w,c
  7968  00331E  100C               	iorwf	___lodiv@divisor+3,w,c
  7969  003320  100D               	iorwf	___lodiv@divisor+4,w,c
  7970  003322  100E               	iorwf	___lodiv@divisor+5,w,c
  7971  003324  100F               	iorwf	___lodiv@divisor+6,w,c
  7972  003326  1010               	iorwf	___lodiv@divisor+7,w,c
  7973  003328  B4D8               	btfsc	status,2,c
  7974  00332A  D04A               	goto	l1077
  7975  00332C  0E01               	movlw	1
  7976  00332E  6E19               	movwf	___lodiv@counter,c
  7977  003330  D00B               	goto	l3713
  7978  003332                     l3711:
  7979  003332  FFFF               	dw	65535	; assembler added errata NOP
  7980  003334  90D8               	bcf	status,0,c
  7981  003336  3609               	rlcf	___lodiv@divisor,f,c
  7982  003338  360A               	rlcf	___lodiv@divisor+1,f,c
  7983  00333A  360B               	rlcf	___lodiv@divisor+2,f,c
  7984  00333C  360C               	rlcf	___lodiv@divisor+3,f,c
  7985  00333E  360D               	rlcf	___lodiv@divisor+4,f,c
  7986  003340  360E               	rlcf	___lodiv@divisor+5,f,c
  7987  003342  360F               	rlcf	___lodiv@divisor+6,f,c
  7988  003344  3610               	rlcf	___lodiv@divisor+7,f,c
  7989  003346  2A19               	incf	___lodiv@counter,f,c
  7990  003348                     l3713:
  7991  003348  FFFF               	dw	65535	; assembler added errata NOP
  7992  00334A  AE10               	btfss	___lodiv@divisor+7,7,c
  7993  00334C  D7F2               	goto	l3711
  7994  00334E                     u3200:
  7995  00334E  FFFF               	dw	65535	; assembler added errata NOP
  7996  003350  90D8               	bcf	status,0,c
  7997  003352  3611               	rlcf	___lodiv@quotient,f,c
  7998  003354  3612               	rlcf	___lodiv@quotient+1,f,c
  7999  003356  3613               	rlcf	___lodiv@quotient+2,f,c
  8000  003358  3614               	rlcf	___lodiv@quotient+3,f,c
  8001  00335A  3615               	rlcf	___lodiv@quotient+4,f,c
  8002  00335C  3616               	rlcf	___lodiv@quotient+5,f,c
  8003  00335E  3617               	rlcf	___lodiv@quotient+6,f,c
  8004  003360  3618               	rlcf	___lodiv@quotient+7,f,c
  8005  003362  5009               	movf	___lodiv@divisor,w,c
  8006  003364  5C01               	subwf	___lodiv@dividend,w,c
  8007  003366  500A               	movf	___lodiv@divisor+1,w,c
  8008  003368  5802               	subwfb	___lodiv@dividend+1,w,c
  8009  00336A  500B               	movf	___lodiv@divisor+2,w,c
  8010  00336C  5803               	subwfb	___lodiv@dividend+2,w,c
  8011  00336E  500C               	movf	___lodiv@divisor+3,w,c
  8012  003370  5804               	subwfb	___lodiv@dividend+3,w,c
  8013  003372  500D               	movf	___lodiv@divisor+4,w,c
  8014  003374  5805               	subwfb	___lodiv@dividend+4,w,c
  8015  003376  500E               	movf	___lodiv@divisor+5,w,c
  8016  003378  5806               	subwfb	___lodiv@dividend+5,w,c
  8017  00337A  500F               	movf	___lodiv@divisor+6,w,c
  8018  00337C  5807               	subwfb	___lodiv@dividend+6,w,c
  8019  00337E  5010               	movf	___lodiv@divisor+7,w,c
  8020  003380  5808               	subwfb	___lodiv@dividend+7,w,c
  8021  003382  A0D8               	btfss	status,0,c
  8022  003384  D011               	goto	l3723
  8023  003386  5009               	movf	___lodiv@divisor,w,c
  8024  003388  5E01               	subwf	___lodiv@dividend,f,c
  8025  00338A  500A               	movf	___lodiv@divisor+1,w,c
  8026  00338C  5A02               	subwfb	___lodiv@dividend+1,f,c
  8027  00338E  500B               	movf	___lodiv@divisor+2,w,c
  8028  003390  5A03               	subwfb	___lodiv@dividend+2,f,c
  8029  003392  500C               	movf	___lodiv@divisor+3,w,c
  8030  003394  5A04               	subwfb	___lodiv@dividend+3,f,c
  8031  003396  500D               	movf	___lodiv@divisor+4,w,c
  8032  003398  5A05               	subwfb	___lodiv@dividend+4,f,c
  8033  00339A  500E               	movf	___lodiv@divisor+5,w,c
  8034  00339C  5A06               	subwfb	___lodiv@dividend+5,f,c
  8035  00339E  500F               	movf	___lodiv@divisor+6,w,c
  8036  0033A0  5A07               	subwfb	___lodiv@dividend+6,f,c
  8037  0033A2  5010               	movf	___lodiv@divisor+7,w,c
  8038  0033A4  5A08               	subwfb	___lodiv@dividend+7,f,c
  8039  0033A6  8011               	bsf	___lodiv@quotient,0,c
  8040  0033A8                     l3723:
  8041  0033A8  FFFF               	dw	65535	; assembler added errata NOP
  8042  0033AA  90D8               	bcf	status,0,c
  8043  0033AC  3210               	rrcf	___lodiv@divisor+7,f,c
  8044  0033AE  320F               	rrcf	___lodiv@divisor+6,f,c
  8045  0033B0  320E               	rrcf	___lodiv@divisor+5,f,c
  8046  0033B2  320D               	rrcf	___lodiv@divisor+4,f,c
  8047  0033B4  320C               	rrcf	___lodiv@divisor+3,f,c
  8048  0033B6  320B               	rrcf	___lodiv@divisor+2,f,c
  8049  0033B8  320A               	rrcf	___lodiv@divisor+1,f,c
  8050  0033BA  3209               	rrcf	___lodiv@divisor,f,c
  8051  0033BC  2E19               	decfsz	___lodiv@counter,f,c
  8052  0033BE  D7C7               	goto	u3200
  8053  0033C0                     l1077:
  8054  0033C0  FFFF               	dw	65535	; assembler added errata NOP
  8055  0033C2  C011  F001         	movff	___lodiv@quotient,?___lodiv
  8056  0033C6  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  8057  0033CA  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  8058  0033CE  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  8059  0033D2  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  8060  0033D6  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  8061  0033DA  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  8062  0033DE  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  8063  0033E2  0012               	return		;funcret
  8064  0033E4  FFFF               	dw	65535	; errata NOP
  8065  0033E6                     __end_of___lodiv:
  8066                           	opt callstack 0
  8067                           
  8068 ;; *************** function _strncmp *****************
  8069 ;; Defined at:
  8070 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8073 ;;		 -> STR_2(3), STR_1(4), 
  8074 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8075 ;;		 -> STR_144(3), STR_140(3), STR_135(3), STR_131(3), 
  8076 ;;		 -> STR_126(3), STR_122(3), STR_117(4), STR_113(4), 
  8077 ;;		 -> STR_108(3), STR_103(3), STR_98(3), STR_93(4), 
  8078 ;;		 -> STR_88(3), STR_83(3), STR_78(3), STR_73(4), 
  8079 ;;		 -> STR_68(3), STR_63(3), STR_58(3), STR_53(4), 
  8080 ;;		 -> STR_48(3), STR_44(3), STR_39(3), STR_35(3), 
  8081 ;;		 -> STR_30(3), STR_26(3), STR_21(4), STR_17(4), 
  8082 ;;  n               2    4[COMRAM] unsigned int 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8085 ;;		 -> STR_144(3), STR_140(3), STR_135(3), STR_131(3), 
  8086 ;;		 -> STR_126(3), STR_122(3), STR_117(4), STR_113(4), 
  8087 ;;		 -> STR_108(3), STR_103(3), STR_98(3), STR_93(4), 
  8088 ;;		 -> STR_88(3), STR_83(3), STR_78(3), STR_73(4), 
  8089 ;;		 -> STR_68(3), STR_63(3), STR_58(3), STR_53(4), 
  8090 ;;		 -> STR_48(3), STR_44(3), STR_39(3), STR_35(3), 
  8091 ;;		 -> STR_30(3), STR_26(3), STR_21(4), STR_17(4), 
  8092 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8093 ;;		 -> STR_2(3), STR_1(4), 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2    0[COMRAM] int 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8103 ;;      Params:         6       0       0       0       0       0       0
  8104 ;;      Locals:         4       0       0       0       0       0       0
  8105 ;;      Temps:          1       0       0       0       0       0       0
  8106 ;;      Totals:        11       0       0       0       0       0       0
  8107 ;;Total ram usage:       11 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    2
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_vfpfcnvrt
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text32
  8118  003584                     __ptext32:
  8119                           	opt callstack 0
  8120  003584                     _strncmp:
  8121                           	opt callstack 0
  8122  003584  FFFF               	dw	65535	; assembler added errata NOP
  8123                           
  8124                           ;incstack = 0
  8125  003586  C001  F008         	movff	strncmp@_l,strncmp@l
  8126  00358A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8127  00358E  C003  F00A         	movff	strncmp@_r,strncmp@r
  8128  003592  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8129  003596  0605               	decf	strncmp@n,f,c
  8130  003598  A0D8               	btfss	status,0,c
  8131  00359A  0606               	decf	strncmp@n+1,f,c
  8132  00359C  2805               	incf	strncmp@n,w,c
  8133  00359E  E110               	bnz	l4073
  8134  0035A0  2806               	incf	strncmp@n+1,w,c
  8135  0035A2  A4D8               	btfss	status,2,c
  8136  0035A4  D00D               	goto	l4073
  8137  0035A6  0E00               	movlw	0
  8138  0035A8  6E02               	movwf	?_strncmp+1,c
  8139  0035AA  0E00               	movlw	0
  8140  0035AC  6E01               	movwf	?_strncmp,c
  8141  0035AE  D048               	goto	l1445
  8142  0035B0                     l4071:
  8143  0035B0  FFFF               	dw	65535	; assembler added errata NOP
  8144  0035B2  4A08               	infsnz	strncmp@l,f,c
  8145  0035B4  2A09               	incf	strncmp@l+1,f,c
  8146  0035B6  4A0A               	infsnz	strncmp@r,f,c
  8147  0035B8  2A0B               	incf	strncmp@r+1,f,c
  8148  0035BA  0605               	decf	strncmp@n,f,c
  8149  0035BC  A0D8               	btfss	status,0,c
  8150  0035BE  0606               	decf	strncmp@n+1,f,c
  8151  0035C0                     l4073:
  8152  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  8153  0035C2  C008  FFF6         	movff	strncmp@l,tblptrl
  8154  0035C6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8155  0035CA                     	if	0	;tblptru may be non-zero
  8156  0035CA                     	endif
  8157  0035CA                     	if	0	;tblptru may be non-zero
  8158  0035CA                     	endif
  8159  0035CA  0008               	tblrd		*
  8160  0035CC  FFFF               	dw	65535	; errata NOP
  8161  0035CE  50F5               	movf	tablat,w,c
  8162  0035D0  0900               	iorlw	0
  8163  0035D2  B4D8               	btfsc	status,2,c
  8164  0035D4  D020               	goto	u3970
  8165  0035D6  C00A  FFF6         	movff	strncmp@r,tblptrl
  8166  0035DA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8167  0035DE                     	if	0	;tblptru may be non-zero
  8168  0035DE                     	endif
  8169  0035DE                     	if	0	;tblptru may be non-zero
  8170  0035DE                     	endif
  8171  0035DE  0008               	tblrd		*
  8172  0035E0  FFFF               	dw	65535	; errata NOP
  8173  0035E2  50F5               	movf	tablat,w,c
  8174  0035E4  0900               	iorlw	0
  8175  0035E6  B4D8               	btfsc	status,2,c
  8176  0035E8  D016               	goto	u3970
  8177  0035EA  5005               	movf	strncmp@n,w,c
  8178  0035EC  1006               	iorwf	strncmp@n+1,w,c
  8179  0035EE  B4D8               	btfsc	status,2,c
  8180  0035F0  D012               	goto	u3970
  8181  0035F2  C008  FFF6         	movff	strncmp@l,tblptrl
  8182  0035F6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8183  0035FA                     	if	0	;tblptru may be non-zero
  8184  0035FA                     	endif
  8185  0035FA                     	if	0	;tblptru may be non-zero
  8186  0035FA                     	endif
  8187  0035FA  0008               	tblrd		*
  8188  0035FC  FFFF               	dw	65535	; errata NOP
  8189  0035FE  CFF5 F007          	movff	tablat,??_strncmp
  8190  003602  C00A  FFF6         	movff	strncmp@r,tblptrl
  8191  003606  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8192  00360A                     	if	0	;tblptru may be non-zero
  8193  00360A                     	endif
  8194  00360A                     	if	0	;tblptru may be non-zero
  8195  00360A                     	endif
  8196  00360A  0008               	tblrd		*
  8197  00360C  FFFF               	dw	65535	; errata NOP
  8198  00360E  50F5               	movf	tablat,w,c
  8199  003610  1807               	xorwf	??_strncmp,w,c
  8200  003612  B4D8               	btfsc	status,2,c
  8201  003614  D7CD               	goto	l4071
  8202  003616                     u3970:
  8203  003616  FFFF               	dw	65535	; assembler added errata NOP
  8204  003618  C008  FFF6         	movff	strncmp@l,tblptrl
  8205  00361C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8206  003620                     	if	0	;tblptru may be non-zero
  8207  003620                     	endif
  8208  003620                     	if	0	;tblptru may be non-zero
  8209  003620                     	endif
  8210  003620  0008               	tblrd		*
  8211  003622  FFFF               	dw	65535	; errata NOP
  8212  003624  CFF5 F007          	movff	tablat,??_strncmp
  8213  003628  C00A  FFF6         	movff	strncmp@r,tblptrl
  8214  00362C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8215  003630                     	if	0	;tblptru may be non-zero
  8216  003630                     	endif
  8217  003630                     	if	0	;tblptru may be non-zero
  8218  003630                     	endif
  8219  003630  0008               	tblrd		*
  8220  003632  FFFF               	dw	65535	; errata NOP
  8221  003634  50F5               	movf	tablat,w,c
  8222  003636  5C07               	subwf	??_strncmp,w,c
  8223  003638  6E01               	movwf	?_strncmp,c
  8224  00363A  6A02               	clrf	?_strncmp+1,c
  8225  00363C  A0D8               	btfss	status,0,c
  8226  00363E  0602               	decf	?_strncmp+1,f,c
  8227  003640                     l1445:
  8228  003640  FFFF               	dw	65535	; assembler added errata NOP
  8229  003642  0012               	return		;funcret
  8230  003644  FFFF               	dw	65535	; errata NOP
  8231  003646                     __end_of_strncmp:
  8232                           	opt callstack 0
  8233                           
  8234 ;; *************** function _stoa *****************
  8235 ;; Defined at:
  8236 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8239 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8240 ;;  s               2   11[COMRAM] PTR unsigned char 
  8241 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8244 ;;  l               2   29[COMRAM] int 
  8245 ;;  p               2   27[COMRAM] int 
  8246 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8247 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  8248 ;;  w               2   23[COMRAM] int 
  8249 ;;  i               2   21[COMRAM] int 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  2    9[COMRAM] int 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8259 ;;      Params:         4       0       0       0       0       0       0
  8260 ;;      Locals:        17       0       0       0       0       0       0
  8261 ;;      Temps:          1       0       0       0       0       0       0
  8262 ;;      Totals:        22       0       0       0       0       0       0
  8263 ;;Total ram usage:       22 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    4
  8266 ;; This function calls:
  8267 ;;		_fputc
  8268 ;;		_strlen
  8269 ;; This function is called by:
  8270 ;;		_vfpfcnvrt
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text33
  8275  002F5E                     __ptext33:
  8276                           	opt callstack 0
  8277  002F5E                     _stoa:
  8278                           	opt callstack 0
  8279  002F5E  FFFF               	dw	65535	; assembler added errata NOP
  8280                           
  8281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8282                           
  8283                           ;incstack = 0
  8284  002F60  EE20  F0F6         	lfsr	2,stoa@F1152
  8285  002F64  EE10  F00F         	lfsr	1,stoa@nuls
  8286  002F68  0E06               	movlw	6
  8287  002F6A                     u3531:
  8288  002F6A  CFDB FFE3          	movff	plusw2,plusw1
  8289  002F6E  06E8               	decf	wreg,f,c
  8290  002F70  E2FC               	bc	u3531
  8291                           
  8292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8293  002F72  C00C  F01A         	movff	stoa@s,stoa@cp
  8294  002F76  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8295                           
  8296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8297  002F7A  501A               	movf	stoa@cp,w,c
  8298  002F7C  101B               	iorwf	stoa@cp+1,w,c
  8299  002F7E  A4D8               	btfss	status,2,c
  8300  002F80  D004               	goto	l3887
  8301                           
  8302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8303  002F82  0E0F               	movlw	low stoa@nuls
  8304  002F84  6E1A               	movwf	stoa@cp,c
  8305  002F86  0E00               	movlw	high stoa@nuls
  8306  002F88  6E1B               	movwf	stoa@cp+1,c
  8307  002F8A                     l3887:
  8308  002F8A  FFFF               	dw	65535	; assembler added errata NOP
  8309                           
  8310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8311  002F8C  C01A  F001         	movff	stoa@cp,strlen@s
  8312  002F90  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8313  002F94  EC12  F01F         	call	_strlen	;wreg free
  8314  002F98  C001  F01E         	movff	?_strlen,stoa@l
  8315  002F9C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8316                           
  8317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8318  002FA0  C0CF  F01C         	movff	_prec,stoa@p
  8319  002FA4  C0D0  F01D         	movff	_prec+1,stoa@p+1
  8320                           
  8321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8322  002FA8  BE1D               	btfsc	stoa@p+1,7,c
  8323  002FAA  D00E               	goto	l486
  8324  002FAC  501E               	movf	stoa@l,w,c
  8325  002FAE  5C1C               	subwf	stoa@p,w,c
  8326  002FB0  501D               	movf	stoa@p+1,w,c
  8327  002FB2  0A80               	xorlw	128
  8328  002FB4  6E0E               	movwf	??_stoa& (0+255),c
  8329  002FB6  501F               	movf	stoa@l+1,w,c
  8330  002FB8  0A80               	xorlw	128
  8331  002FBA  580E               	subwfb	??_stoa& (0+255),w,c
  8332  002FBC  B0D8               	btfsc	status,0,c
  8333  002FBE  D004               	goto	l486
  8334  002FC0  C01C  F01E         	movff	stoa@p,stoa@l
  8335  002FC4  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8336  002FC8                     l486:
  8337  002FC8  FFFF               	dw	65535	; assembler added errata NOP
  8338                           
  8339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8340  002FCA  C01E  F01C         	movff	stoa@l,stoa@p
  8341  002FCE  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8342                           
  8343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8344  002FD2  C0CD  F018         	movff	_width,stoa@w
  8345  002FD6  C0CE  F019         	movff	_width+1,stoa@w+1
  8346                           
  8347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8348  002FDA  0100               	movlb	0	; () banked
  8349  002FDC  A1D1               	btfss	_flags& (0+255),0,b
  8350  002FDE  D00E               	goto	l3901
  8351  002FE0  D018               	goto	u3580
  8352  002FE2                     l3897:
  8353  002FE2  FFFF               	dw	65535	; assembler added errata NOP
  8354                           
  8355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8356  002FE4  0E00               	movlw	0
  8357  002FE6  6E02               	movwf	fputc@c+1,c
  8358  002FE8  0E20               	movlw	32
  8359  002FEA  6E01               	movwf	fputc@c,c
  8360  002FEC  C00A  F003         	movff	stoa@fp,fputc@fp
  8361  002FF0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8362  002FF4  EC81  F01B         	call	_fputc	;wreg free
  8363                           
  8364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8365  002FF8  4A1E               	infsnz	stoa@l,f,c
  8366  002FFA  2A1F               	incf	stoa@l+1,f,c
  8367  002FFC                     l3901:
  8368  002FFC  FFFF               	dw	65535	; assembler added errata NOP
  8369                           
  8370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8371  002FFE  5018               	movf	stoa@w,w,c
  8372  003000  5C1E               	subwf	stoa@l,w,c
  8373  003002  501F               	movf	stoa@l+1,w,c
  8374  003004  0A80               	xorlw	128
  8375  003006  6E0E               	movwf	??_stoa& (0+255),c
  8376  003008  5019               	movf	stoa@w+1,w,c
  8377  00300A  0A80               	xorlw	128
  8378  00300C  580E               	subwfb	??_stoa& (0+255),w,c
  8379  00300E  A0D8               	btfss	status,0,c
  8380  003010  D7E8               	goto	l3897
  8381  003012                     u3580:
  8382  003012  FFFF               	dw	65535	; assembler added errata NOP
  8383                           
  8384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8385  003014  0E00               	movlw	0
  8386  003016  6E17               	movwf	stoa@i+1,c
  8387  003018  0E00               	movlw	0
  8388  00301A  6E16               	movwf	stoa@i,c
  8389                           
  8390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8391  00301C  D014               	goto	l3911
  8392  00301E                     l3905:
  8393  00301E  FFFF               	dw	65535	; assembler added errata NOP
  8394                           
  8395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8396  003020  C01A  FFD9         	movff	stoa@cp,fsr2l
  8397  003024  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8398  003028  50DF               	movf	indf2,w,c
  8399  00302A  6E0E               	movwf	??_stoa& (0+255),c
  8400  00302C  500E               	movf	??_stoa,w,c
  8401  00302E  6E01               	movwf	fputc@c,c
  8402  003030  6A02               	clrf	fputc@c+1,c
  8403  003032  C00A  F003         	movff	stoa@fp,fputc@fp
  8404  003036  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8405  00303A  EC81  F01B         	call	_fputc	;wreg free
  8406                           
  8407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8408  00303E  4A1A               	infsnz	stoa@cp,f,c
  8409  003040  2A1B               	incf	stoa@cp+1,f,c
  8410                           
  8411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8412  003042  4A16               	infsnz	stoa@i,f,c
  8413  003044  2A17               	incf	stoa@i+1,f,c
  8414  003046                     l3911:
  8415  003046  FFFF               	dw	65535	; assembler added errata NOP
  8416                           
  8417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8418  003048  501C               	movf	stoa@p,w,c
  8419  00304A  5C16               	subwf	stoa@i,w,c
  8420  00304C  5017               	movf	stoa@i+1,w,c
  8421  00304E  0A80               	xorlw	128
  8422  003050  6E0E               	movwf	??_stoa& (0+255),c
  8423  003052  501D               	movf	stoa@p+1,w,c
  8424  003054  0A80               	xorlw	128
  8425  003056  580E               	subwfb	??_stoa& (0+255),w,c
  8426  003058  A0D8               	btfss	status,0,c
  8427  00305A  D7E1               	goto	l3905
  8428                           
  8429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8430  00305C  0100               	movlb	0	; () banked
  8431  00305E  B1D1               	btfsc	_flags& (0+255),0,b
  8432  003060  D00E               	goto	l3919
  8433  003062  D018               	goto	u3610
  8434  003064                     l3915:
  8435  003064  FFFF               	dw	65535	; assembler added errata NOP
  8436                           
  8437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8438  003066  0E00               	movlw	0
  8439  003068  6E02               	movwf	fputc@c+1,c
  8440  00306A  0E20               	movlw	32
  8441  00306C  6E01               	movwf	fputc@c,c
  8442  00306E  C00A  F003         	movff	stoa@fp,fputc@fp
  8443  003072  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8444  003076  EC81  F01B         	call	_fputc	;wreg free
  8445                           
  8446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8447  00307A  4A1E               	infsnz	stoa@l,f,c
  8448  00307C  2A1F               	incf	stoa@l+1,f,c
  8449  00307E                     l3919:
  8450  00307E  FFFF               	dw	65535	; assembler added errata NOP
  8451                           
  8452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8453  003080  5018               	movf	stoa@w,w,c
  8454  003082  5C1E               	subwf	stoa@l,w,c
  8455  003084  501F               	movf	stoa@l+1,w,c
  8456  003086  0A80               	xorlw	128
  8457  003088  6E0E               	movwf	??_stoa& (0+255),c
  8458  00308A  5019               	movf	stoa@w+1,w,c
  8459  00308C  0A80               	xorlw	128
  8460  00308E  580E               	subwfb	??_stoa& (0+255),w,c
  8461  003090  A0D8               	btfss	status,0,c
  8462  003092  D7E8               	goto	l3915
  8463  003094                     u3610:
  8464  003094  FFFF               	dw	65535	; assembler added errata NOP
  8465                           
  8466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8467                           
  8468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  8469  003096  C01E  F00A         	movff	stoa@l,?_stoa
  8470  00309A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8471  00309E  0012               	return		;funcret
  8472  0030A0  FFFF               	dw	65535	; errata NOP
  8473  0030A2                     __end_of_stoa:
  8474                           	opt callstack 0
  8475                           
  8476 ;; *************** function _otoa *****************
  8477 ;; Defined at:
  8478 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8481 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8482 ;;  d               8   29[COMRAM] unsigned long long 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  n               8   51[COMRAM] unsigned long long 
  8485 ;;  i               2   59[COMRAM] int 
  8486 ;;  w               2   49[COMRAM] int 
  8487 ;;  t               2   47[COMRAM] int 
  8488 ;;  p               2   45[COMRAM] int 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2   27[COMRAM] int 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8498 ;;      Params:        10       0       0       0       0       0       0
  8499 ;;      Locals:        16       0       0       0       0       0       0
  8500 ;;      Temps:          8       0       0       0       0       0       0
  8501 ;;      Totals:        34       0       0       0       0       0       0
  8502 ;;Total ram usage:       34 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    6
  8505 ;; This function calls:
  8506 ;;		_pad
  8507 ;; This function is called by:
  8508 ;;		_vfpfcnvrt
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text34
  8513  0029A6                     __ptext34:
  8514                           	opt callstack 0
  8515  0029A6                     _otoa:
  8516                           	opt callstack 0
  8517  0029A6  FFFF               	dw	65535	; assembler added errata NOP
  8518                           
  8519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  8520                           
  8521                           ;incstack = 0
  8522  0029A8  0100               	movlb	0	; () banked
  8523  0029AA  AFD0               	btfss	(_prec+1)& (0+255),7,b
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  8527  0029AC  93D1               	bcf	_flags& (0+255),1,b
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  8531  0029AE  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  8532  0029B0  D005               	goto	u3440
  8533  0029B2  51D0               	movf	(_prec+1)& (0+255),w,b
  8534  0029B4  E109               	bnz	l466
  8535  0029B6  05CF               	decf	_prec& (0+255),w,b
  8536  0029B8  B0D8               	btfsc	status,0,c
  8537  0029BA  D006               	goto	l466
  8538  0029BC                     u3440:
  8539  0029BC  FFFF               	dw	65535	; assembler added errata NOP
  8540                           
  8541                           ; BSR set to: 0
  8542  0029BE  0E00               	movlw	0
  8543  0029C0  6E2F               	movwf	otoa@p+1,c
  8544  0029C2  0E01               	movlw	1
  8545  0029C4  6E2E               	movwf	otoa@p,c
  8546  0029C6  D005               	goto	l468
  8547  0029C8                     l466:
  8548  0029C8  FFFF               	dw	65535	; assembler added errata NOP
  8549                           
  8550                           ; BSR set to: 0
  8551  0029CA  C0CF  F02E         	movff	_prec,otoa@p
  8552  0029CE  C0D0  F02F         	movff	_prec+1,otoa@p+1
  8553  0029D2                     l468:
  8554  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  8558  0029D4  C0CD  F032         	movff	_width,otoa@w
  8559  0029D8  C0CE  F033         	movff	_width+1,otoa@w+1
  8560                           
  8561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  8562  0029DC  C01E  F034         	movff	otoa@d,otoa@n
  8563  0029E0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8564  0029E4  C020  F036         	movff	otoa@d+2,otoa@n+2
  8565  0029E8  C021  F037         	movff	otoa@d+3,otoa@n+3
  8566  0029EC  C022  F038         	movff	otoa@d+4,otoa@n+4
  8567  0029F0  C023  F039         	movff	otoa@d+5,otoa@n+5
  8568  0029F4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8569  0029F8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  8573  0029FC  0E00               	movlw	0
  8574  0029FE  6E3D               	movwf	otoa@i+1,c
  8575  002A00  0E1F               	movlw	31
  8576  002A02  6E3C               	movwf	otoa@i,c
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  8580  002A04  0E00               	movlw	0
  8581  002A06  6FF5               	movwf	(_dbuf+31)& (0+255),b
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  8585  002A08  0E00               	movlw	0
  8586  002A0A  6E31               	movwf	otoa@t+1,c
  8587  002A0C  0E00               	movlw	0
  8588  002A0E  6E30               	movwf	otoa@t,c
  8589                           
  8590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8591  002A10  D046               	goto	l3857
  8592  002A12                     l3845:
  8593  002A12  FFFF               	dw	65535	; assembler added errata NOP
  8594                           
  8595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  8596  002A14  063C               	decf	otoa@i,f,c
  8597  002A16  A0D8               	btfss	status,0,c
  8598  002A18  063D               	decf	otoa@i+1,f,c
  8599                           
  8600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  8601  002A1A  0E07               	movlw	7
  8602  002A1C  1434               	andwf	otoa@n,w,c
  8603  002A1E  6E30               	movwf	otoa@t,c
  8604  002A20  6A31               	clrf	otoa@t+1,c
  8605                           
  8606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  8607  002A22  0ED6               	movlw	low _dbuf
  8608  002A24  243C               	addwf	otoa@i,w,c
  8609  002A26  6ED9               	movwf	fsr2l,c
  8610  002A28  0E00               	movlw	high _dbuf
  8611  002A2A  203D               	addwfc	otoa@i+1,w,c
  8612  002A2C  6EDA               	movwf	fsr2h,c
  8613  002A2E  5030               	movf	otoa@t,w,c
  8614  002A30  0F30               	addlw	48
  8615  002A32  6EDF               	movwf	indf2,c
  8616                           
  8617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  8618  002A34  062E               	decf	otoa@p,f,c
  8619  002A36  A0D8               	btfss	status,0,c
  8620  002A38  062F               	decf	otoa@p+1,f,c
  8621                           
  8622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  8623  002A3A  0632               	decf	otoa@w,f,c
  8624  002A3C  A0D8               	btfss	status,0,c
  8625  002A3E  0633               	decf	otoa@w+1,f,c
  8626                           
  8627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  8628  002A40  C034  F026         	movff	otoa@n,??_otoa
  8629  002A44  C035  F027         	movff	otoa@n+1,??_otoa+1
  8630  002A48  C036  F028         	movff	otoa@n+2,??_otoa+2
  8631  002A4C  C037  F029         	movff	otoa@n+3,??_otoa+3
  8632  002A50  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8633  002A54  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8634  002A58  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8635  002A5C  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8636  002A60  0E04               	movlw	4
  8637  002A62  D00A               	goto	u3450
  8638  002A64                     u3455:
  8639  002A64  FFFF               	dw	65535	; assembler added errata NOP
  8640  002A66  90D8               	bcf	status,0,c
  8641  002A68  322D               	rrcf	??_otoa+7,f,c
  8642  002A6A  322C               	rrcf	??_otoa+6,f,c
  8643  002A6C  322B               	rrcf	??_otoa+5,f,c
  8644  002A6E  322A               	rrcf	??_otoa+4,f,c
  8645  002A70  3229               	rrcf	??_otoa+3,f,c
  8646  002A72  3228               	rrcf	??_otoa+2,f,c
  8647  002A74  3227               	rrcf	??_otoa+1,f,c
  8648  002A76  3226               	rrcf	??_otoa,f,c
  8649  002A78                     u3450:
  8650  002A78  FFFF               	dw	65535	; assembler added errata NOP
  8651  002A7A  2EE8               	decfsz	wreg,f,c
  8652  002A7C  D7F3               	goto	u3455
  8653  002A7E  C026  F034         	movff	??_otoa,otoa@n
  8654  002A82  C027  F035         	movff	??_otoa+1,otoa@n+1
  8655  002A86  C028  F036         	movff	??_otoa+2,otoa@n+2
  8656  002A8A  C029  F037         	movff	??_otoa+3,otoa@n+3
  8657  002A8E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8658  002A92  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8659  002A96  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8660  002A9A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8661  002A9E                     l3857:
  8662  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  8663                           
  8664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8665  002AA0  BE3D               	btfsc	otoa@i+1,7,c
  8666  002AA2  D021               	goto	u3500
  8667  002AA4  503D               	movf	otoa@i+1,w,c
  8668  002AA6  E103               	bnz	u3460
  8669  002AA8  043C               	decf	otoa@i,w,c
  8670  002AAA  A0D8               	btfss	status,0,c
  8671  002AAC  D01C               	goto	u3500
  8672  002AAE                     u3460:
  8673  002AAE  5034               	movf	otoa@n,w,c
  8674  002AB0  1035               	iorwf	otoa@n+1,w,c
  8675  002AB2  1036               	iorwf	otoa@n+2,w,c
  8676  002AB4  1037               	iorwf	otoa@n+3,w,c
  8677  002AB6  1038               	iorwf	otoa@n+4,w,c
  8678  002AB8  1039               	iorwf	otoa@n+5,w,c
  8679  002ABA  103A               	iorwf	otoa@n+6,w,c
  8680  002ABC  103B               	iorwf	otoa@n+7,w,c
  8681  002ABE  A4D8               	btfss	status,2,c
  8682  002AC0  D7A8               	goto	l3845
  8683  002AC2  BE2F               	btfsc	otoa@p+1,7,c
  8684  002AC4  D005               	goto	u3480
  8685  002AC6  502F               	movf	otoa@p+1,w,c
  8686  002AC8  E1A4               	bnz	l3845
  8687  002ACA  042E               	decf	otoa@p,w,c
  8688  002ACC  B0D8               	btfsc	status,0,c
  8689  002ACE  D7A1               	goto	l3845
  8690  002AD0                     u3480:
  8691  002AD0  FFFF               	dw	65535	; assembler added errata NOP
  8692  002AD2  BE33               	btfsc	otoa@w+1,7,c
  8693  002AD4  D008               	goto	u3500
  8694  002AD6  5033               	movf	otoa@w+1,w,c
  8695  002AD8  E103               	bnz	u3490
  8696  002ADA  0432               	decf	otoa@w,w,c
  8697  002ADC  A0D8               	btfss	status,0,c
  8698  002ADE  D003               	goto	u3500
  8699  002AE0                     u3490:
  8700  002AE0  0100               	movlb	0	; () banked
  8701  002AE2  B3D1               	btfsc	_flags& (0+255),1,b
  8702  002AE4  D796               	goto	l3845
  8703  002AE6                     u3500:
  8704  002AE6  FFFF               	dw	65535	; assembler added errata NOP
  8705                           
  8706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  8707  002AE8  0100               	movlb	0	; () banked
  8708  002AEA  A9D1               	btfss	_flags& (0+255),4,b
  8709  002AEC  D012               	goto	l3875
  8710                           
  8711                           ; BSR set to: 0
  8712  002AEE  5030               	movf	otoa@t,w,c
  8713  002AF0  1031               	iorwf	otoa@t+1,w,c
  8714  002AF2  B4D8               	btfsc	status,2,c
  8715  002AF4  D00E               	goto	l3875
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  8719  002AF6  063C               	decf	otoa@i,f,c
  8720  002AF8  A0D8               	btfss	status,0,c
  8721  002AFA  063D               	decf	otoa@i+1,f,c
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  8725  002AFC  0ED6               	movlw	low _dbuf
  8726  002AFE  243C               	addwf	otoa@i,w,c
  8727  002B00  6ED9               	movwf	fsr2l,c
  8728  002B02  0E00               	movlw	high _dbuf
  8729  002B04  203D               	addwfc	otoa@i+1,w,c
  8730  002B06  6EDA               	movwf	fsr2h,c
  8731  002B08  0E30               	movlw	48
  8732  002B0A  6EDF               	movwf	indf2,c
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  8736  002B0C  0632               	decf	otoa@w,f,c
  8737  002B0E  A0D8               	btfss	status,0,c
  8738  002B10  0633               	decf	otoa@w+1,f,c
  8739  002B12                     l3875:
  8740  002B12  FFFF               	dw	65535	; assembler added errata NOP
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  8744  002B14  C01C  F011         	movff	otoa@fp,pad@fp
  8745  002B18  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8746  002B1C  0ED6               	movlw	low _dbuf
  8747  002B1E  243C               	addwf	otoa@i,w,c
  8748  002B20  6E13               	movwf	pad@buf,c
  8749  002B22  0E00               	movlw	high _dbuf
  8750  002B24  203D               	addwfc	otoa@i+1,w,c
  8751  002B26  6E14               	movwf	pad@buf+1,c
  8752  002B28  C032  F015         	movff	otoa@w,pad@p
  8753  002B2C  C033  F016         	movff	otoa@w+1,pad@p+1
  8754  002B30  ECD7  F01B         	call	_pad	;wreg free
  8755  002B34  C011  F01C         	movff	?_pad,?_otoa
  8756  002B38  C012  F01D         	movff	?_pad+1,?_otoa+1
  8757  002B3C  0012               	return		;funcret
  8758  002B3E  FFFF               	dw	65535	; errata NOP
  8759  002B40                     __end_of_otoa:
  8760                           	opt callstack 0
  8761                           
  8762 ;; *************** function _dtoa *****************
  8763 ;; Defined at:
  8764 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8767 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8768 ;;  d               8   29[COMRAM] long long 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  n               8   53[COMRAM] long long 
  8771 ;;  i               2   61[COMRAM] int 
  8772 ;;  s               2   51[COMRAM] int 
  8773 ;;  w               2   49[COMRAM] int 
  8774 ;;  p               2   47[COMRAM] int 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   27[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8784 ;;      Params:        10       0       0       0       0       0       0
  8785 ;;      Locals:        18       0       0       0       0       0       0
  8786 ;;      Temps:          8       0       0       0       0       0       0
  8787 ;;      Totals:        36       0       0       0       0       0       0
  8788 ;;Total ram usage:       36 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    6
  8791 ;; This function calls:
  8792 ;;		___aodiv
  8793 ;;		___aomod
  8794 ;;		_abs
  8795 ;;		_pad
  8796 ;; This function is called by:
  8797 ;;		_vfpfcnvrt
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text35
  8802  001F3C                     __ptext35:
  8803                           	opt callstack 0
  8804  001F3C                     _dtoa:
  8805                           	opt callstack 0
  8806  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  8807                           
  8808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8809                           
  8810                           ;incstack = 0
  8811  001F3E  C01E  F036         	movff	dtoa@d,dtoa@n
  8812  001F42  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8813  001F46  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8814  001F4A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8815  001F4E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8816  001F52  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8817  001F56  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8818  001F5A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8819                           
  8820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8821  001F5E  AE3D               	btfss	dtoa@n+7,7,c
  8822  001F60  D002               	goto	u3280
  8823  001F62  0E01               	movlw	1
  8824  001F64  D002               	goto	u3290
  8825  001F66                     u3280:
  8826  001F66  FFFF               	dw	65535	; assembler added errata NOP
  8827  001F68  0E00               	movlw	0
  8828  001F6A                     u3290:
  8829  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  8830  001F6C  6E34               	movwf	dtoa@s,c
  8831  001F6E  6A35               	clrf	dtoa@s+1,c
  8832                           
  8833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8834  001F70  5034               	movf	dtoa@s,w,c
  8835  001F72  1035               	iorwf	dtoa@s+1,w,c
  8836  001F74  B4D8               	btfsc	status,2,c
  8837  001F76  D010               	goto	l3775
  8838                           
  8839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8840  001F78  1E3D               	comf	dtoa@n+7,f,c
  8841  001F7A  1E3C               	comf	dtoa@n+6,f,c
  8842  001F7C  1E3B               	comf	dtoa@n+5,f,c
  8843  001F7E  1E3A               	comf	dtoa@n+4,f,c
  8844  001F80  1E39               	comf	dtoa@n+3,f,c
  8845  001F82  1E38               	comf	dtoa@n+2,f,c
  8846  001F84  1E37               	comf	dtoa@n+1,f,c
  8847  001F86  6C36               	negf	dtoa@n,c
  8848  001F88  0E00               	movlw	0
  8849  001F8A  2237               	addwfc	dtoa@n+1,f,c
  8850  001F8C  2238               	addwfc	dtoa@n+2,f,c
  8851  001F8E  2239               	addwfc	dtoa@n+3,f,c
  8852  001F90  223A               	addwfc	dtoa@n+4,f,c
  8853  001F92  223B               	addwfc	dtoa@n+5,f,c
  8854  001F94  223C               	addwfc	dtoa@n+6,f,c
  8855  001F96  223D               	addwfc	dtoa@n+7,f,c
  8856  001F98                     l3775:
  8857  001F98  FFFF               	dw	65535	; assembler added errata NOP
  8858                           
  8859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8860  001F9A  0100               	movlb	0	; () banked
  8861  001F9C  AFD0               	btfss	(_prec+1)& (0+255),7,b
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8865  001F9E  93D1               	bcf	_flags& (0+255),1,b
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8869  001FA0  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  8870  001FA2  D005               	goto	u3320
  8871  001FA4  51D0               	movf	(_prec+1)& (0+255),w,b
  8872  001FA6  E109               	bnz	l441
  8873  001FA8  05CF               	decf	_prec& (0+255),w,b
  8874  001FAA  B0D8               	btfsc	status,0,c
  8875  001FAC  D006               	goto	l441
  8876  001FAE                     u3320:
  8877  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  8878                           
  8879                           ; BSR set to: 0
  8880  001FB0  0E00               	movlw	0
  8881  001FB2  6E31               	movwf	dtoa@p+1,c
  8882  001FB4  0E01               	movlw	1
  8883  001FB6  6E30               	movwf	dtoa@p,c
  8884  001FB8  D005               	goto	l443
  8885  001FBA                     l441:
  8886  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  8887                           
  8888                           ; BSR set to: 0
  8889  001FBC  C0CF  F030         	movff	_prec,dtoa@p
  8890  001FC0  C0D0  F031         	movff	_prec+1,dtoa@p+1
  8891  001FC4                     l443:
  8892  001FC4  FFFF               	dw	65535	; assembler added errata NOP
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8896  001FC6  C0CD  F032         	movff	_width,dtoa@w
  8897  001FCA  C0CE  F033         	movff	_width+1,dtoa@w+1
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8901  001FCE  5034               	movf	dtoa@s,w,c
  8902  001FD0  1035               	iorwf	dtoa@s+1,w,c
  8903  001FD2  A4D8               	btfss	status,2,c
  8904  001FD4  D002               	goto	u3340
  8905                           
  8906                           ; BSR set to: 0
  8907  001FD6  A5D1               	btfss	_flags& (0+255),2,b
  8908  001FD8  D004               	goto	l3789
  8909  001FDA                     u3340:
  8910  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8914  001FDC  0632               	decf	dtoa@w,f,c
  8915  001FDE  A0D8               	btfss	status,0,c
  8916  001FE0  0633               	decf	dtoa@w+1,f,c
  8917  001FE2                     l3789:
  8918  001FE2  FFFF               	dw	65535	; assembler added errata NOP
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8922  001FE4  0E00               	movlw	0
  8923  001FE6  6E3F               	movwf	dtoa@i+1,c
  8924  001FE8  0E1F               	movlw	31
  8925  001FEA  6E3E               	movwf	dtoa@i,c
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8929  001FEC  0E00               	movlw	0
  8930  001FEE  6FF5               	movwf	(_dbuf+31)& (0+255),b
  8931                           
  8932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8933  001FF0  D07D               	goto	l3803
  8934  001FF2                     l3793:
  8935  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  8936                           
  8937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8938  001FF4  063E               	decf	dtoa@i,f,c
  8939  001FF6  A0D8               	btfss	status,0,c
  8940  001FF8  063F               	decf	dtoa@i+1,f,c
  8941                           
  8942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8943  001FFA  0ED6               	movlw	low _dbuf
  8944  001FFC  243E               	addwf	dtoa@i,w,c
  8945  001FFE  6ED9               	movwf	fsr2l,c
  8946  002000  0E00               	movlw	high _dbuf
  8947  002002  203F               	addwfc	dtoa@i+1,w,c
  8948  002004  6EDA               	movwf	fsr2h,c
  8949  002006  C036  F001         	movff	dtoa@n,___aomod@dividend
  8950  00200A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8951  00200E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8952  002012  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8953  002016  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8954  00201A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8955  00201E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8956  002022  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8957  002026  0E0A               	movlw	10
  8958  002028  6E09               	movwf	___aomod@divisor,c
  8959  00202A  0E00               	movlw	0
  8960  00202C  6E0A               	movwf	___aomod@divisor+1,c
  8961  00202E  0E00               	movlw	0
  8962  002030  6E0B               	movwf	___aomod@divisor+2,c
  8963  002032  0E00               	movlw	0
  8964  002034  6E0C               	movwf	___aomod@divisor+3,c
  8965  002036  0E00               	movlw	0
  8966  002038  6E0D               	movwf	___aomod@divisor+4,c
  8967  00203A  0E00               	movlw	0
  8968  00203C  6E0E               	movwf	___aomod@divisor+5,c
  8969  00203E  0E00               	movlw	0
  8970  002040  6E0F               	movwf	___aomod@divisor+6,c
  8971  002042  0E00               	movlw	0
  8972  002044  6E10               	movwf	___aomod@divisor+7,c
  8973  002046  EC51  F018         	call	___aomod	;wreg free
  8974  00204A  C001  F026         	movff	?___aomod,??_dtoa
  8975  00204E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8976  002052  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8977  002056  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8978  00205A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8979  00205E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8980  002062  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8981  002066  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8982  00206A  C026  F013         	movff	??_dtoa,abs@a
  8983  00206E  C028  F014         	movff	??_dtoa+2,abs@a+1
  8984  002072  ECA0  F01E         	call	_abs	;wreg free
  8985  002076  5013               	movf	?_abs,w,c
  8986  002078  0F30               	addlw	48
  8987  00207A  6EDF               	movwf	indf2,c
  8988                           
  8989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8990  00207C  0630               	decf	dtoa@p,f,c
  8991  00207E  A0D8               	btfss	status,0,c
  8992  002080  0631               	decf	dtoa@p+1,f,c
  8993                           
  8994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8995  002082  0632               	decf	dtoa@w,f,c
  8996  002084  A0D8               	btfss	status,0,c
  8997  002086  0633               	decf	dtoa@w+1,f,c
  8998                           
  8999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  9000  002088  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9001  00208C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9002  002090  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9003  002094  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9004  002098  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9005  00209C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9006  0020A0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9007  0020A4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9008  0020A8  0E0A               	movlw	10
  9009  0020AA  6E09               	movwf	___aodiv@divisor,c
  9010  0020AC  0E00               	movlw	0
  9011  0020AE  6E0A               	movwf	___aodiv@divisor+1,c
  9012  0020B0  0E00               	movlw	0
  9013  0020B2  6E0B               	movwf	___aodiv@divisor+2,c
  9014  0020B4  0E00               	movlw	0
  9015  0020B6  6E0C               	movwf	___aodiv@divisor+3,c
  9016  0020B8  0E00               	movlw	0
  9017  0020BA  6E0D               	movwf	___aodiv@divisor+4,c
  9018  0020BC  0E00               	movlw	0
  9019  0020BE  6E0E               	movwf	___aodiv@divisor+5,c
  9020  0020C0  0E00               	movlw	0
  9021  0020C2  6E0F               	movwf	___aodiv@divisor+6,c
  9022  0020C4  0E00               	movlw	0
  9023  0020C6  6E10               	movwf	___aodiv@divisor+7,c
  9024  0020C8  EC01  F017         	call	___aodiv	;wreg free
  9025  0020CC  C001  F036         	movff	?___aodiv,dtoa@n
  9026  0020D0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9027  0020D4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9028  0020D8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9029  0020DC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9030  0020E0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9031  0020E4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9032  0020E8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9033  0020EC                     l3803:
  9034  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  9035                           
  9036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9037  0020EE  BE3F               	btfsc	dtoa@i+1,7,c
  9038  0020F0  D021               	goto	u3390
  9039  0020F2  503F               	movf	dtoa@i+1,w,c
  9040  0020F4  E103               	bnz	u3350
  9041  0020F6  043E               	decf	dtoa@i,w,c
  9042  0020F8  A0D8               	btfss	status,0,c
  9043  0020FA  D01C               	goto	u3390
  9044  0020FC                     u3350:
  9045  0020FC  5036               	movf	dtoa@n,w,c
  9046  0020FE  1037               	iorwf	dtoa@n+1,w,c
  9047  002100  1038               	iorwf	dtoa@n+2,w,c
  9048  002102  1039               	iorwf	dtoa@n+3,w,c
  9049  002104  103A               	iorwf	dtoa@n+4,w,c
  9050  002106  103B               	iorwf	dtoa@n+5,w,c
  9051  002108  103C               	iorwf	dtoa@n+6,w,c
  9052  00210A  103D               	iorwf	dtoa@n+7,w,c
  9053  00210C  A4D8               	btfss	status,2,c
  9054  00210E  D771               	goto	l3793
  9055  002110  BE31               	btfsc	dtoa@p+1,7,c
  9056  002112  D005               	goto	u3370
  9057  002114  5031               	movf	dtoa@p+1,w,c
  9058  002116  E102               	bnz	u3371
  9059  002118  0430               	decf	dtoa@p,w,c
  9060  00211A  B0D8               	btfsc	status,0,c
  9061  00211C                     u3371:
  9062  00211C  D76A               	goto	l3793
  9063  00211E                     u3370:
  9064  00211E  FFFF               	dw	65535	; assembler added errata NOP
  9065  002120  BE33               	btfsc	dtoa@w+1,7,c
  9066  002122  D008               	goto	u3390
  9067  002124  5033               	movf	dtoa@w+1,w,c
  9068  002126  E103               	bnz	u3380
  9069  002128  0432               	decf	dtoa@w,w,c
  9070  00212A  A0D8               	btfss	status,0,c
  9071  00212C  D003               	goto	u3390
  9072  00212E                     u3380:
  9073  00212E  0100               	movlb	0	; () banked
  9074  002130  B3D1               	btfsc	_flags& (0+255),1,b
  9075  002132  D75F               	goto	l3793
  9076  002134                     u3390:
  9077  002134  FFFF               	dw	65535	; assembler added errata NOP
  9078                           
  9079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9080  002136  5034               	movf	dtoa@s,w,c
  9081  002138  1035               	iorwf	dtoa@s+1,w,c
  9082  00213A  A4D8               	btfss	status,2,c
  9083  00213C  D003               	goto	u3410
  9084  00213E  0100               	movlb	0	; () banked
  9085  002140  A5D1               	btfss	_flags& (0+255),2,b
  9086  002142  D01A               	goto	l3827
  9087  002144                     u3410:
  9088  002144  FFFF               	dw	65535	; assembler added errata NOP
  9089                           
  9090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9091  002146  063E               	decf	dtoa@i,f,c
  9092  002148  A0D8               	btfss	status,0,c
  9093  00214A  063F               	decf	dtoa@i+1,f,c
  9094                           
  9095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  9096  00214C  5034               	movf	dtoa@s,w,c
  9097  00214E  1035               	iorwf	dtoa@s+1,w,c
  9098  002150  A4D8               	btfss	status,2,c
  9099  002152  D004               	goto	l3823
  9100  002154  0E00               	movlw	0
  9101  002156  6E2F               	movwf	_dtoa$1121+1,c
  9102  002158  0E2B               	movlw	43
  9103  00215A  D004               	goto	L25
  9104  00215C                     l3823:
  9105  00215C  FFFF               	dw	65535	; assembler added errata NOP
  9106  00215E  0E00               	movlw	0
  9107  002160  6E2F               	movwf	_dtoa$1121+1,c
  9108  002162  0E2D               	movlw	45
  9109  002164                     L25:
  9110  002164  FFFF               	dw	65535	; assembler added errata NOP
  9111  002166  6E2E               	movwf	_dtoa$1121,c
  9112  002168  0ED6               	movlw	low _dbuf
  9113  00216A  243E               	addwf	dtoa@i,w,c
  9114  00216C  6ED9               	movwf	fsr2l,c
  9115  00216E  0E00               	movlw	high _dbuf
  9116  002170  203F               	addwfc	dtoa@i+1,w,c
  9117  002172  6EDA               	movwf	fsr2h,c
  9118  002174  C02E  FFDF         	movff	_dtoa$1121,indf2
  9119  002178                     l3827:
  9120  002178  FFFF               	dw	65535	; assembler added errata NOP
  9121                           
  9122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  9123  00217A  C01C  F011         	movff	dtoa@fp,pad@fp
  9124  00217E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9125  002182  0ED6               	movlw	low _dbuf
  9126  002184  243E               	addwf	dtoa@i,w,c
  9127  002186  6E13               	movwf	pad@buf,c
  9128  002188  0E00               	movlw	high _dbuf
  9129  00218A  203F               	addwfc	dtoa@i+1,w,c
  9130  00218C  6E14               	movwf	pad@buf+1,c
  9131  00218E  C032  F015         	movff	dtoa@w,pad@p
  9132  002192  C033  F016         	movff	dtoa@w+1,pad@p+1
  9133  002196  ECD7  F01B         	call	_pad	;wreg free
  9134  00219A  C011  F01C         	movff	?_pad,?_dtoa
  9135  00219E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9136  0021A2  0012               	return		;funcret
  9137  0021A4  FFFF               	dw	65535	; errata NOP
  9138  0021A6                     __end_of_dtoa:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function _abs *****************
  9142 ;; Defined at:
  9143 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  a               2   18[COMRAM] int 
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  2   18[COMRAM] int 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9157 ;;      Params:         2       0       0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0
  9159 ;;      Temps:          2       0       0       0       0       0       0
  9160 ;;      Totals:         4       0       0       0       0       0       0
  9161 ;;Total ram usage:        4 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    2
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_dtoa
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text36
  9172  003D40                     __ptext36:
  9173                           	opt callstack 0
  9174  003D40                     _abs:
  9175                           	opt callstack 0
  9176  003D40  FFFF               	dw	65535	; assembler added errata NOP
  9177                           
  9178                           ;incstack = 0
  9179  003D42  BE14               	btfsc	abs@a+1,7,c
  9180  003D44  D005               	goto	u2950
  9181  003D46  5014               	movf	abs@a+1,w,c
  9182  003D48  E111               	bnz	l1314
  9183  003D4A  0413               	decf	abs@a,w,c
  9184  003D4C  B0D8               	btfsc	status,0,c
  9185  003D4E  D00E               	goto	l1314
  9186  003D50                     u2950:
  9187  003D50  FFFF               	dw	65535	; assembler added errata NOP
  9188  003D52  C013  F015         	movff	abs@a,??_abs
  9189  003D56  C014  F016         	movff	abs@a+1,??_abs+1
  9190  003D5A  1E15               	comf	??_abs,f,c
  9191  003D5C  1E16               	comf	??_abs+1,f,c
  9192  003D5E  4A15               	infsnz	??_abs,f,c
  9193  003D60  2A16               	incf	??_abs+1,f,c
  9194  003D62  C015  F013         	movff	??_abs,?_abs
  9195  003D66  C016  F014         	movff	??_abs+1,?_abs+1
  9196  003D6A  D005               	goto	l1317
  9197  003D6C                     l1314:
  9198  003D6C  FFFF               	dw	65535	; assembler added errata NOP
  9199  003D6E  C013  F013         	movff	abs@a,?_abs
  9200  003D72  C014  F014         	movff	abs@a+1,?_abs+1
  9201  003D76                     l1317:
  9202  003D76  FFFF               	dw	65535	; assembler added errata NOP
  9203  003D78  0012               	return		;funcret
  9204  003D7A  FFFF               	dw	65535	; errata NOP
  9205  003D7C                     __end_of_abs:
  9206                           	opt callstack 0
  9207                           
  9208 ;; *************** function ___aomod *****************
  9209 ;; Defined at:
  9210 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  dividend        8    0[COMRAM] long long 
  9213 ;;  divisor         8    8[COMRAM] long long 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  sign            1   17[COMRAM] unsigned char 
  9216 ;;  counter         1   16[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  8    0[COMRAM] long long 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9226 ;;      Params:        16       0       0       0       0       0       0
  9227 ;;      Locals:         2       0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0
  9229 ;;      Totals:        18       0       0       0       0       0       0
  9230 ;;Total ram usage:       18 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    2
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_dtoa
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text37
  9241  0030A2                     __ptext37:
  9242                           	opt callstack 0
  9243  0030A2                     ___aomod:
  9244                           	opt callstack 0
  9245  0030A2  FFFF               	dw	65535	; assembler added errata NOP
  9246                           
  9247                           ;incstack = 0
  9248  0030A4  0E00               	movlw	0
  9249  0030A6  6E12               	movwf	___aomod@sign,c
  9250  0030A8  AE08               	btfss	___aomod@dividend+7,7,c
  9251  0030AA  D012               	goto	l3677
  9252  0030AC  1E08               	comf	___aomod@dividend+7,f,c
  9253  0030AE  1E07               	comf	___aomod@dividend+6,f,c
  9254  0030B0  1E06               	comf	___aomod@dividend+5,f,c
  9255  0030B2  1E05               	comf	___aomod@dividend+4,f,c
  9256  0030B4  1E04               	comf	___aomod@dividend+3,f,c
  9257  0030B6  1E03               	comf	___aomod@dividend+2,f,c
  9258  0030B8  1E02               	comf	___aomod@dividend+1,f,c
  9259  0030BA  6C01               	negf	___aomod@dividend,c
  9260  0030BC  0E00               	movlw	0
  9261  0030BE  2202               	addwfc	___aomod@dividend+1,f,c
  9262  0030C0  2203               	addwfc	___aomod@dividend+2,f,c
  9263  0030C2  2204               	addwfc	___aomod@dividend+3,f,c
  9264  0030C4  2205               	addwfc	___aomod@dividend+4,f,c
  9265  0030C6  2206               	addwfc	___aomod@dividend+5,f,c
  9266  0030C8  2207               	addwfc	___aomod@dividend+6,f,c
  9267  0030CA  2208               	addwfc	___aomod@dividend+7,f,c
  9268  0030CC  0E01               	movlw	1
  9269  0030CE  6E12               	movwf	___aomod@sign,c
  9270  0030D0                     l3677:
  9271  0030D0  FFFF               	dw	65535	; assembler added errata NOP
  9272  0030D2  AE10               	btfss	___aomod@divisor+7,7,c
  9273  0030D4  D010               	goto	l3681
  9274  0030D6  1E10               	comf	___aomod@divisor+7,f,c
  9275  0030D8  1E0F               	comf	___aomod@divisor+6,f,c
  9276  0030DA  1E0E               	comf	___aomod@divisor+5,f,c
  9277  0030DC  1E0D               	comf	___aomod@divisor+4,f,c
  9278  0030DE  1E0C               	comf	___aomod@divisor+3,f,c
  9279  0030E0  1E0B               	comf	___aomod@divisor+2,f,c
  9280  0030E2  1E0A               	comf	___aomod@divisor+1,f,c
  9281  0030E4  6C09               	negf	___aomod@divisor,c
  9282  0030E6  0E00               	movlw	0
  9283  0030E8  220A               	addwfc	___aomod@divisor+1,f,c
  9284  0030EA  220B               	addwfc	___aomod@divisor+2,f,c
  9285  0030EC  220C               	addwfc	___aomod@divisor+3,f,c
  9286  0030EE  220D               	addwfc	___aomod@divisor+4,f,c
  9287  0030F0  220E               	addwfc	___aomod@divisor+5,f,c
  9288  0030F2  220F               	addwfc	___aomod@divisor+6,f,c
  9289  0030F4  2210               	addwfc	___aomod@divisor+7,f,c
  9290  0030F6                     l3681:
  9291  0030F6  FFFF               	dw	65535	; assembler added errata NOP
  9292  0030F8  5009               	movf	___aomod@divisor,w,c
  9293  0030FA  100A               	iorwf	___aomod@divisor+1,w,c
  9294  0030FC  100B               	iorwf	___aomod@divisor+2,w,c
  9295  0030FE  100C               	iorwf	___aomod@divisor+3,w,c
  9296  003100  100D               	iorwf	___aomod@divisor+4,w,c
  9297  003102  100E               	iorwf	___aomod@divisor+5,w,c
  9298  003104  100F               	iorwf	___aomod@divisor+6,w,c
  9299  003106  1010               	iorwf	___aomod@divisor+7,w,c
  9300  003108  B4D8               	btfsc	status,2,c
  9301  00310A  D040               	goto	l3697
  9302  00310C  0E01               	movlw	1
  9303  00310E  6E11               	movwf	___aomod@counter,c
  9304  003110  D00B               	goto	l3687
  9305  003112                     l3685:
  9306  003112  FFFF               	dw	65535	; assembler added errata NOP
  9307  003114  90D8               	bcf	status,0,c
  9308  003116  3609               	rlcf	___aomod@divisor,f,c
  9309  003118  360A               	rlcf	___aomod@divisor+1,f,c
  9310  00311A  360B               	rlcf	___aomod@divisor+2,f,c
  9311  00311C  360C               	rlcf	___aomod@divisor+3,f,c
  9312  00311E  360D               	rlcf	___aomod@divisor+4,f,c
  9313  003120  360E               	rlcf	___aomod@divisor+5,f,c
  9314  003122  360F               	rlcf	___aomod@divisor+6,f,c
  9315  003124  3610               	rlcf	___aomod@divisor+7,f,c
  9316  003126  2A11               	incf	___aomod@counter,f,c
  9317  003128                     l3687:
  9318  003128  FFFF               	dw	65535	; assembler added errata NOP
  9319  00312A  AE10               	btfss	___aomod@divisor+7,7,c
  9320  00312C  D7F2               	goto	l3685
  9321  00312E                     u3150:
  9322  00312E  FFFF               	dw	65535	; assembler added errata NOP
  9323  003130  5009               	movf	___aomod@divisor,w,c
  9324  003132  5C01               	subwf	___aomod@dividend,w,c
  9325  003134  500A               	movf	___aomod@divisor+1,w,c
  9326  003136  5802               	subwfb	___aomod@dividend+1,w,c
  9327  003138  500B               	movf	___aomod@divisor+2,w,c
  9328  00313A  5803               	subwfb	___aomod@dividend+2,w,c
  9329  00313C  500C               	movf	___aomod@divisor+3,w,c
  9330  00313E  5804               	subwfb	___aomod@dividend+3,w,c
  9331  003140  500D               	movf	___aomod@divisor+4,w,c
  9332  003142  5805               	subwfb	___aomod@dividend+4,w,c
  9333  003144  500E               	movf	___aomod@divisor+5,w,c
  9334  003146  5806               	subwfb	___aomod@dividend+5,w,c
  9335  003148  500F               	movf	___aomod@divisor+6,w,c
  9336  00314A  5807               	subwfb	___aomod@dividend+6,w,c
  9337  00314C  5010               	movf	___aomod@divisor+7,w,c
  9338  00314E  5808               	subwfb	___aomod@dividend+7,w,c
  9339  003150  A0D8               	btfss	status,0,c
  9340  003152  D010               	goto	l3693
  9341  003154  5009               	movf	___aomod@divisor,w,c
  9342  003156  5E01               	subwf	___aomod@dividend,f,c
  9343  003158  500A               	movf	___aomod@divisor+1,w,c
  9344  00315A  5A02               	subwfb	___aomod@dividend+1,f,c
  9345  00315C  500B               	movf	___aomod@divisor+2,w,c
  9346  00315E  5A03               	subwfb	___aomod@dividend+2,f,c
  9347  003160  500C               	movf	___aomod@divisor+3,w,c
  9348  003162  5A04               	subwfb	___aomod@dividend+3,f,c
  9349  003164  500D               	movf	___aomod@divisor+4,w,c
  9350  003166  5A05               	subwfb	___aomod@dividend+4,f,c
  9351  003168  500E               	movf	___aomod@divisor+5,w,c
  9352  00316A  5A06               	subwfb	___aomod@dividend+5,f,c
  9353  00316C  500F               	movf	___aomod@divisor+6,w,c
  9354  00316E  5A07               	subwfb	___aomod@dividend+6,f,c
  9355  003170  5010               	movf	___aomod@divisor+7,w,c
  9356  003172  5A08               	subwfb	___aomod@dividend+7,f,c
  9357  003174                     l3693:
  9358  003174  FFFF               	dw	65535	; assembler added errata NOP
  9359  003176  90D8               	bcf	status,0,c
  9360  003178  3210               	rrcf	___aomod@divisor+7,f,c
  9361  00317A  320F               	rrcf	___aomod@divisor+6,f,c
  9362  00317C  320E               	rrcf	___aomod@divisor+5,f,c
  9363  00317E  320D               	rrcf	___aomod@divisor+4,f,c
  9364  003180  320C               	rrcf	___aomod@divisor+3,f,c
  9365  003182  320B               	rrcf	___aomod@divisor+2,f,c
  9366  003184  320A               	rrcf	___aomod@divisor+1,f,c
  9367  003186  3209               	rrcf	___aomod@divisor,f,c
  9368  003188  2E11               	decfsz	___aomod@counter,f,c
  9369  00318A  D7D1               	goto	u3150
  9370  00318C                     l3697:
  9371  00318C  FFFF               	dw	65535	; assembler added errata NOP
  9372  00318E  5012               	movf	___aomod@sign,w,c
  9373  003190  B4D8               	btfsc	status,2,c
  9374  003192  D010               	goto	l3701
  9375  003194  1E08               	comf	___aomod@dividend+7,f,c
  9376  003196  1E07               	comf	___aomod@dividend+6,f,c
  9377  003198  1E06               	comf	___aomod@dividend+5,f,c
  9378  00319A  1E05               	comf	___aomod@dividend+4,f,c
  9379  00319C  1E04               	comf	___aomod@dividend+3,f,c
  9380  00319E  1E03               	comf	___aomod@dividend+2,f,c
  9381  0031A0  1E02               	comf	___aomod@dividend+1,f,c
  9382  0031A2  6C01               	negf	___aomod@dividend,c
  9383  0031A4  0E00               	movlw	0
  9384  0031A6  2202               	addwfc	___aomod@dividend+1,f,c
  9385  0031A8  2203               	addwfc	___aomod@dividend+2,f,c
  9386  0031AA  2204               	addwfc	___aomod@dividend+3,f,c
  9387  0031AC  2205               	addwfc	___aomod@dividend+4,f,c
  9388  0031AE  2206               	addwfc	___aomod@dividend+5,f,c
  9389  0031B0  2207               	addwfc	___aomod@dividend+6,f,c
  9390  0031B2  2208               	addwfc	___aomod@dividend+7,f,c
  9391  0031B4                     l3701:
  9392  0031B4  FFFF               	dw	65535	; assembler added errata NOP
  9393  0031B6  C001  F001         	movff	___aomod@dividend,?___aomod
  9394  0031BA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9395  0031BE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9396  0031C2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9397  0031C6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9398  0031CA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9399  0031CE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9400  0031D2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9401  0031D6  0012               	return		;funcret
  9402  0031D8  FFFF               	dw	65535	; errata NOP
  9403  0031DA                     __end_of___aomod:
  9404                           	opt callstack 0
  9405                           
  9406 ;; *************** function ___aodiv *****************
  9407 ;; Defined at:
  9408 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  dividend        8    0[COMRAM] long long 
  9411 ;;  divisor         8    8[COMRAM] long long 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  quotient        8   18[COMRAM] long long 
  9414 ;;  sign            1   17[COMRAM] unsigned char 
  9415 ;;  counter         1   16[COMRAM] unsigned char 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  8    0[COMRAM] long long 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9425 ;;      Params:        16       0       0       0       0       0       0
  9426 ;;      Locals:        10       0       0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0
  9428 ;;      Totals:        26       0       0       0       0       0       0
  9429 ;;Total ram usage:       26 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    2
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_dtoa
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text38
  9440  002E02                     __ptext38:
  9441                           	opt callstack 0
  9442  002E02                     ___aodiv:
  9443                           	opt callstack 0
  9444  002E02  FFFF               	dw	65535	; assembler added errata NOP
  9445                           
  9446                           ;incstack = 0
  9447  002E04  0E00               	movlw	0
  9448  002E06  6E12               	movwf	___aodiv@sign,c
  9449  002E08  AE10               	btfss	___aodiv@divisor+7,7,c
  9450  002E0A  D012               	goto	l3633
  9451  002E0C  1E10               	comf	___aodiv@divisor+7,f,c
  9452  002E0E  1E0F               	comf	___aodiv@divisor+6,f,c
  9453  002E10  1E0E               	comf	___aodiv@divisor+5,f,c
  9454  002E12  1E0D               	comf	___aodiv@divisor+4,f,c
  9455  002E14  1E0C               	comf	___aodiv@divisor+3,f,c
  9456  002E16  1E0B               	comf	___aodiv@divisor+2,f,c
  9457  002E18  1E0A               	comf	___aodiv@divisor+1,f,c
  9458  002E1A  6C09               	negf	___aodiv@divisor,c
  9459  002E1C  0E00               	movlw	0
  9460  002E1E  220A               	addwfc	___aodiv@divisor+1,f,c
  9461  002E20  220B               	addwfc	___aodiv@divisor+2,f,c
  9462  002E22  220C               	addwfc	___aodiv@divisor+3,f,c
  9463  002E24  220D               	addwfc	___aodiv@divisor+4,f,c
  9464  002E26  220E               	addwfc	___aodiv@divisor+5,f,c
  9465  002E28  220F               	addwfc	___aodiv@divisor+6,f,c
  9466  002E2A  2210               	addwfc	___aodiv@divisor+7,f,c
  9467  002E2C  0E01               	movlw	1
  9468  002E2E  6E12               	movwf	___aodiv@sign,c
  9469  002E30                     l3633:
  9470  002E30  FFFF               	dw	65535	; assembler added errata NOP
  9471  002E32  AE08               	btfss	___aodiv@dividend+7,7,c
  9472  002E34  D012               	goto	l3639
  9473  002E36  1E08               	comf	___aodiv@dividend+7,f,c
  9474  002E38  1E07               	comf	___aodiv@dividend+6,f,c
  9475  002E3A  1E06               	comf	___aodiv@dividend+5,f,c
  9476  002E3C  1E05               	comf	___aodiv@dividend+4,f,c
  9477  002E3E  1E04               	comf	___aodiv@dividend+3,f,c
  9478  002E40  1E03               	comf	___aodiv@dividend+2,f,c
  9479  002E42  1E02               	comf	___aodiv@dividend+1,f,c
  9480  002E44  6C01               	negf	___aodiv@dividend,c
  9481  002E46  0E00               	movlw	0
  9482  002E48  2202               	addwfc	___aodiv@dividend+1,f,c
  9483  002E4A  2203               	addwfc	___aodiv@dividend+2,f,c
  9484  002E4C  2204               	addwfc	___aodiv@dividend+3,f,c
  9485  002E4E  2205               	addwfc	___aodiv@dividend+4,f,c
  9486  002E50  2206               	addwfc	___aodiv@dividend+5,f,c
  9487  002E52  2207               	addwfc	___aodiv@dividend+6,f,c
  9488  002E54  2208               	addwfc	___aodiv@dividend+7,f,c
  9489  002E56  0E01               	movlw	1
  9490  002E58  1A12               	xorwf	___aodiv@sign,f,c
  9491  002E5A                     l3639:
  9492  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  9493  002E5C  EE20  F013         	lfsr	2,___aodiv@quotient
  9494  002E60  0E07               	movlw	7
  9495  002E62                     u3071:
  9496  002E62  6ADE               	clrf	postinc2,c
  9497  002E64  06E8               	decf	wreg,f,c
  9498  002E66  E2FD               	bc	u3071
  9499  002E68  5009               	movf	___aodiv@divisor,w,c
  9500  002E6A  100A               	iorwf	___aodiv@divisor+1,w,c
  9501  002E6C  100B               	iorwf	___aodiv@divisor+2,w,c
  9502  002E6E  100C               	iorwf	___aodiv@divisor+3,w,c
  9503  002E70  100D               	iorwf	___aodiv@divisor+4,w,c
  9504  002E72  100E               	iorwf	___aodiv@divisor+5,w,c
  9505  002E74  100F               	iorwf	___aodiv@divisor+6,w,c
  9506  002E76  1010               	iorwf	___aodiv@divisor+7,w,c
  9507  002E78  B4D8               	btfsc	status,2,c
  9508  002E7A  D04A               	goto	l3661
  9509  002E7C  0E01               	movlw	1
  9510  002E7E  6E11               	movwf	___aodiv@counter,c
  9511  002E80  D00B               	goto	l3647
  9512  002E82                     l3645:
  9513  002E82  FFFF               	dw	65535	; assembler added errata NOP
  9514  002E84  90D8               	bcf	status,0,c
  9515  002E86  3609               	rlcf	___aodiv@divisor,f,c
  9516  002E88  360A               	rlcf	___aodiv@divisor+1,f,c
  9517  002E8A  360B               	rlcf	___aodiv@divisor+2,f,c
  9518  002E8C  360C               	rlcf	___aodiv@divisor+3,f,c
  9519  002E8E  360D               	rlcf	___aodiv@divisor+4,f,c
  9520  002E90  360E               	rlcf	___aodiv@divisor+5,f,c
  9521  002E92  360F               	rlcf	___aodiv@divisor+6,f,c
  9522  002E94  3610               	rlcf	___aodiv@divisor+7,f,c
  9523  002E96  2A11               	incf	___aodiv@counter,f,c
  9524  002E98                     l3647:
  9525  002E98  FFFF               	dw	65535	; assembler added errata NOP
  9526  002E9A  AE10               	btfss	___aodiv@divisor+7,7,c
  9527  002E9C  D7F2               	goto	l3645
  9528  002E9E                     u3090:
  9529  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  9530  002EA0  90D8               	bcf	status,0,c
  9531  002EA2  3613               	rlcf	___aodiv@quotient,f,c
  9532  002EA4  3614               	rlcf	___aodiv@quotient+1,f,c
  9533  002EA6  3615               	rlcf	___aodiv@quotient+2,f,c
  9534  002EA8  3616               	rlcf	___aodiv@quotient+3,f,c
  9535  002EAA  3617               	rlcf	___aodiv@quotient+4,f,c
  9536  002EAC  3618               	rlcf	___aodiv@quotient+5,f,c
  9537  002EAE  3619               	rlcf	___aodiv@quotient+6,f,c
  9538  002EB0  361A               	rlcf	___aodiv@quotient+7,f,c
  9539  002EB2  5009               	movf	___aodiv@divisor,w,c
  9540  002EB4  5C01               	subwf	___aodiv@dividend,w,c
  9541  002EB6  500A               	movf	___aodiv@divisor+1,w,c
  9542  002EB8  5802               	subwfb	___aodiv@dividend+1,w,c
  9543  002EBA  500B               	movf	___aodiv@divisor+2,w,c
  9544  002EBC  5803               	subwfb	___aodiv@dividend+2,w,c
  9545  002EBE  500C               	movf	___aodiv@divisor+3,w,c
  9546  002EC0  5804               	subwfb	___aodiv@dividend+3,w,c
  9547  002EC2  500D               	movf	___aodiv@divisor+4,w,c
  9548  002EC4  5805               	subwfb	___aodiv@dividend+4,w,c
  9549  002EC6  500E               	movf	___aodiv@divisor+5,w,c
  9550  002EC8  5806               	subwfb	___aodiv@dividend+5,w,c
  9551  002ECA  500F               	movf	___aodiv@divisor+6,w,c
  9552  002ECC  5807               	subwfb	___aodiv@dividend+6,w,c
  9553  002ECE  5010               	movf	___aodiv@divisor+7,w,c
  9554  002ED0  5808               	subwfb	___aodiv@dividend+7,w,c
  9555  002ED2  A0D8               	btfss	status,0,c
  9556  002ED4  D011               	goto	l3657
  9557  002ED6  5009               	movf	___aodiv@divisor,w,c
  9558  002ED8  5E01               	subwf	___aodiv@dividend,f,c
  9559  002EDA  500A               	movf	___aodiv@divisor+1,w,c
  9560  002EDC  5A02               	subwfb	___aodiv@dividend+1,f,c
  9561  002EDE  500B               	movf	___aodiv@divisor+2,w,c
  9562  002EE0  5A03               	subwfb	___aodiv@dividend+2,f,c
  9563  002EE2  500C               	movf	___aodiv@divisor+3,w,c
  9564  002EE4  5A04               	subwfb	___aodiv@dividend+3,f,c
  9565  002EE6  500D               	movf	___aodiv@divisor+4,w,c
  9566  002EE8  5A05               	subwfb	___aodiv@dividend+4,f,c
  9567  002EEA  500E               	movf	___aodiv@divisor+5,w,c
  9568  002EEC  5A06               	subwfb	___aodiv@dividend+5,f,c
  9569  002EEE  500F               	movf	___aodiv@divisor+6,w,c
  9570  002EF0  5A07               	subwfb	___aodiv@dividend+6,f,c
  9571  002EF2  5010               	movf	___aodiv@divisor+7,w,c
  9572  002EF4  5A08               	subwfb	___aodiv@dividend+7,f,c
  9573  002EF6  8013               	bsf	___aodiv@quotient,0,c
  9574  002EF8                     l3657:
  9575  002EF8  FFFF               	dw	65535	; assembler added errata NOP
  9576  002EFA  90D8               	bcf	status,0,c
  9577  002EFC  3210               	rrcf	___aodiv@divisor+7,f,c
  9578  002EFE  320F               	rrcf	___aodiv@divisor+6,f,c
  9579  002F00  320E               	rrcf	___aodiv@divisor+5,f,c
  9580  002F02  320D               	rrcf	___aodiv@divisor+4,f,c
  9581  002F04  320C               	rrcf	___aodiv@divisor+3,f,c
  9582  002F06  320B               	rrcf	___aodiv@divisor+2,f,c
  9583  002F08  320A               	rrcf	___aodiv@divisor+1,f,c
  9584  002F0A  3209               	rrcf	___aodiv@divisor,f,c
  9585  002F0C  2E11               	decfsz	___aodiv@counter,f,c
  9586  002F0E  D7C7               	goto	u3090
  9587  002F10                     l3661:
  9588  002F10  FFFF               	dw	65535	; assembler added errata NOP
  9589  002F12  5012               	movf	___aodiv@sign,w,c
  9590  002F14  B4D8               	btfsc	status,2,c
  9591  002F16  D010               	goto	l3665
  9592  002F18  1E1A               	comf	___aodiv@quotient+7,f,c
  9593  002F1A  1E19               	comf	___aodiv@quotient+6,f,c
  9594  002F1C  1E18               	comf	___aodiv@quotient+5,f,c
  9595  002F1E  1E17               	comf	___aodiv@quotient+4,f,c
  9596  002F20  1E16               	comf	___aodiv@quotient+3,f,c
  9597  002F22  1E15               	comf	___aodiv@quotient+2,f,c
  9598  002F24  1E14               	comf	___aodiv@quotient+1,f,c
  9599  002F26  6C13               	negf	___aodiv@quotient,c
  9600  002F28  0E00               	movlw	0
  9601  002F2A  2214               	addwfc	___aodiv@quotient+1,f,c
  9602  002F2C  2215               	addwfc	___aodiv@quotient+2,f,c
  9603  002F2E  2216               	addwfc	___aodiv@quotient+3,f,c
  9604  002F30  2217               	addwfc	___aodiv@quotient+4,f,c
  9605  002F32  2218               	addwfc	___aodiv@quotient+5,f,c
  9606  002F34  2219               	addwfc	___aodiv@quotient+6,f,c
  9607  002F36  221A               	addwfc	___aodiv@quotient+7,f,c
  9608  002F38                     l3665:
  9609  002F38  FFFF               	dw	65535	; assembler added errata NOP
  9610  002F3A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9611  002F3E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9612  002F42  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9613  002F46  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9614  002F4A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9615  002F4E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9616  002F52  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9617  002F56  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9618  002F5A  0012               	return		;funcret
  9619  002F5C  FFFF               	dw	65535	; errata NOP
  9620  002F5E                     __end_of___aodiv:
  9621                           	opt callstack 0
  9622                           
  9623 ;; *************** function _ctoa *****************
  9624 ;; Defined at:
  9625 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9628 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9629 ;;  c               1   29[COMRAM] unsigned char 
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  w               2   30[COMRAM] int 
  9632 ;;  l               2    0        int 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  2   27[COMRAM] int 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9642 ;;      Params:         3       0       0       0       0       0       0
  9643 ;;      Locals:         2       0       0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0
  9645 ;;      Totals:         5       0       0       0       0       0       0
  9646 ;;Total ram usage:        5 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:    6
  9649 ;; This function calls:
  9650 ;;		_pad
  9651 ;; This function is called by:
  9652 ;;		_vfpfcnvrt
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text39
  9657  003B06                     __ptext39:
  9658                           	opt callstack 0
  9659  003B06                     _ctoa:
  9660                           	opt callstack 0
  9661  003B06  FFFF               	dw	65535	; assembler added errata NOP
  9662                           
  9663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9664                           
  9665                           ;incstack = 0
  9666  003B08  0100               	movlb	0	; () banked
  9667  003B0A  51CD               	movf	_width& (0+255),w,b
  9668  003B0C  11CE               	iorwf	(_width+1)& (0+255),w,b
  9669  003B0E  A4D8               	btfss	status,2,c
  9670  003B10  D005               	goto	l3759
  9671                           
  9672                           ; BSR set to: 0
  9673  003B12  C0CD  F01F         	movff	_width,ctoa@w
  9674  003B16  C0CE  F020         	movff	_width+1,ctoa@w+1
  9675  003B1A  D007               	goto	l3761
  9676  003B1C                     l3759:
  9677  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  9678                           
  9679                           ; BSR set to: 0
  9680  003B1E  0EFF               	movlw	255
  9681  003B20  25CD               	addwf	_width& (0+255),w,b
  9682  003B22  6E1F               	movwf	ctoa@w,c
  9683  003B24  0EFF               	movlw	255
  9684  003B26  21CE               	addwfc	(_width+1)& (0+255),w,b
  9685  003B28  6E20               	movwf	ctoa@w+1,c
  9686  003B2A                     l3761:
  9687  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9691  003B2C  C01E  F0D6         	movff	ctoa@c,_dbuf
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9695  003B30  0E00               	movlw	0
  9696  003B32  6FD7               	movwf	(_dbuf+1)& (0+255),b
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9700  003B34  C01C  F011         	movff	ctoa@fp,pad@fp
  9701  003B38  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9702  003B3C  0ED6               	movlw	low _dbuf
  9703  003B3E  6E13               	movwf	pad@buf,c
  9704  003B40  0E00               	movlw	high _dbuf
  9705  003B42  6E14               	movwf	pad@buf+1,c
  9706  003B44  C01F  F015         	movff	ctoa@w,pad@p
  9707  003B48  C020  F016         	movff	ctoa@w+1,pad@p+1
  9708  003B4C  ECD7  F01B         	call	_pad	;wreg free
  9709  003B50  C011  F01C         	movff	?_pad,?_ctoa
  9710  003B54  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9711  003B58  0012               	return		;funcret
  9712  003B5A  FFFF               	dw	65535	; errata NOP
  9713  003B5C                     __end_of_ctoa:
  9714                           	opt callstack 0
  9715                           
  9716 ;; *************** function _pad *****************
  9717 ;; Defined at:
  9718 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9721 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9722 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9723 ;;		 -> dbuf(32), 
  9724 ;;  p               2   20[COMRAM] int 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  w               2   25[COMRAM] int 
  9727 ;;  i               2   23[COMRAM] int 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  2   16[COMRAM] int 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9737 ;;      Params:         6       0       0       0       0       0       0
  9738 ;;      Locals:         4       0       0       0       0       0       0
  9739 ;;      Temps:          1       0       0       0       0       0       0
  9740 ;;      Totals:        11       0       0       0       0       0       0
  9741 ;;Total ram usage:       11 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    5
  9744 ;; This function calls:
  9745 ;;		_fputc
  9746 ;;		_fputs
  9747 ;;		_strlen
  9748 ;; This function is called by:
  9749 ;;		_ctoa
  9750 ;;		_dtoa
  9751 ;;		_otoa
  9752 ;;		_utoa
  9753 ;;		_xtoa
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text40
  9758  0037AE                     __ptext40:
  9759                           	opt callstack 0
  9760  0037AE                     _pad:
  9761                           	opt callstack 0
  9762  0037AE  FFFF               	dw	65535	; assembler added errata NOP
  9763                           
  9764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9765                           
  9766                           ;incstack = 0
  9767  0037B0  0100               	movlb	0	; () banked
  9768  0037B2  A1D1               	btfss	_flags& (0+255),0,b
  9769  0037B4  D00A               	goto	l3575
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9773  0037B6  C013  F00A         	movff	pad@buf,fputs@s
  9774  0037BA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9775  0037BE  C011  F00C         	movff	pad@fp,fputs@fp
  9776  0037C2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9777  0037C6  EC43  F01E         	call	_fputs	;wreg free
  9778  0037CA                     l3575:
  9779  0037CA  FFFF               	dw	65535	; assembler added errata NOP
  9780                           
  9781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9782  0037CC  BE16               	btfsc	pad@p+1,7,c
  9783  0037CE  D005               	goto	l3579
  9784  0037D0  C015  F01A         	movff	pad@p,pad@w
  9785  0037D4  C016  F01B         	movff	pad@p+1,pad@w+1
  9786  0037D8  D005               	goto	l423
  9787  0037DA                     l3579:
  9788  0037DA  FFFF               	dw	65535	; assembler added errata NOP
  9789  0037DC  0E00               	movlw	0
  9790  0037DE  6E1B               	movwf	pad@w+1,c
  9791  0037E0  0E00               	movlw	0
  9792  0037E2  6E1A               	movwf	pad@w,c
  9793  0037E4                     l423:
  9794  0037E4  FFFF               	dw	65535	; assembler added errata NOP
  9795                           
  9796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9797  0037E6  0E00               	movlw	0
  9798  0037E8  6E19               	movwf	pad@i+1,c
  9799  0037EA  0E00               	movlw	0
  9800  0037EC  6E18               	movwf	pad@i,c
  9801                           
  9802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9803  0037EE  D00D               	goto	l3585
  9804  0037F0                     l3581:
  9805  0037F0  FFFF               	dw	65535	; assembler added errata NOP
  9806                           
  9807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9808  0037F2  0E00               	movlw	0
  9809  0037F4  6E02               	movwf	fputc@c+1,c
  9810  0037F6  0E20               	movlw	32
  9811  0037F8  6E01               	movwf	fputc@c,c
  9812  0037FA  C011  F003         	movff	pad@fp,fputc@fp
  9813  0037FE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9814  003802  EC81  F01B         	call	_fputc	;wreg free
  9815                           
  9816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9817  003806  4A18               	infsnz	pad@i,f,c
  9818  003808  2A19               	incf	pad@i+1,f,c
  9819  00380A                     l3585:
  9820  00380A  FFFF               	dw	65535	; assembler added errata NOP
  9821                           
  9822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9823  00380C  501A               	movf	pad@w,w,c
  9824  00380E  5C18               	subwf	pad@i,w,c
  9825  003810  5019               	movf	pad@i+1,w,c
  9826  003812  0A80               	xorlw	128
  9827  003814  6E17               	movwf	??_pad& (0+255),c
  9828  003816  501B               	movf	pad@w+1,w,c
  9829  003818  0A80               	xorlw	128
  9830  00381A  5817               	subwfb	??_pad& (0+255),w,c
  9831  00381C  A0D8               	btfss	status,0,c
  9832  00381E  D7E8               	goto	l3581
  9833                           
  9834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9835  003820  0100               	movlb	0	; () banked
  9836  003822  B1D1               	btfsc	_flags& (0+255),0,b
  9837  003824  D00A               	goto	l3589
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9841  003826  C013  F00A         	movff	pad@buf,fputs@s
  9842  00382A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9843  00382E  C011  F00C         	movff	pad@fp,fputs@fp
  9844  003832  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9845  003836  EC43  F01E         	call	_fputs	;wreg free
  9846  00383A                     l3589:
  9847  00383A  FFFF               	dw	65535	; assembler added errata NOP
  9848                           
  9849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9850  00383C  C013  F001         	movff	pad@buf,strlen@s
  9851  003840  C014  F002         	movff	pad@buf+1,strlen@s+1
  9852  003844  EC12  F01F         	call	_strlen	;wreg free
  9853  003848  501A               	movf	pad@w,w,c
  9854  00384A  2401               	addwf	?_strlen,w,c
  9855  00384C  6E11               	movwf	?_pad,c
  9856  00384E  501B               	movf	pad@w+1,w,c
  9857  003850  2002               	addwfc	?_strlen+1,w,c
  9858  003852  6E12               	movwf	?_pad+1,c
  9859  003854  0012               	return		;funcret
  9860  003856  FFFF               	dw	65535	; errata NOP
  9861  003858                     __end_of_pad:
  9862                           	opt callstack 0
  9863                           
  9864 ;; *************** function _strlen *****************
  9865 ;; Defined at:
  9866 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9869 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9872 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  2    0[COMRAM] unsigned int 
  9875 ;; Registers used:
  9876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9882 ;;      Params:         2       0       0       0       0       0       0
  9883 ;;      Locals:         2       0       0       0       0       0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0
  9885 ;;      Totals:         4       0       0       0       0       0       0
  9886 ;;Total ram usage:        4 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    2
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_pad
  9893 ;;		_stoa
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text41
  9898  003E24                     __ptext41:
  9899                           	opt callstack 0
  9900  003E24                     _strlen:
  9901                           	opt callstack 0
  9902  003E24  FFFF               	dw	65535	; assembler added errata NOP
  9903                           
  9904                           ;incstack = 0
  9905  003E26  C001  F003         	movff	strlen@s,strlen@a
  9906  003E2A  C002  F004         	movff	strlen@s+1,strlen@a+1
  9907  003E2E  D003               	goto	l3561
  9908  003E30                     l3559:
  9909  003E30  FFFF               	dw	65535	; assembler added errata NOP
  9910  003E32  4A01               	infsnz	strlen@s,f,c
  9911  003E34  2A02               	incf	strlen@s+1,f,c
  9912  003E36                     l3561:
  9913  003E36  FFFF               	dw	65535	; assembler added errata NOP
  9914  003E38  C001  FFD9         	movff	strlen@s,fsr2l
  9915  003E3C  C002  FFDA         	movff	strlen@s+1,fsr2h
  9916  003E40  50DF               	movf	indf2,w,c
  9917  003E42  A4D8               	btfss	status,2,c
  9918  003E44  D7F5               	goto	l3559
  9919  003E46  5003               	movf	strlen@a,w,c
  9920  003E48  5C01               	subwf	strlen@s,w,c
  9921  003E4A  6E01               	movwf	?_strlen,c
  9922  003E4C  5004               	movf	strlen@a+1,w,c
  9923  003E4E  5802               	subwfb	strlen@s+1,w,c
  9924  003E50  6E02               	movwf	?_strlen+1,c
  9925  003E52  0012               	return		;funcret
  9926  003E54  FFFF               	dw	65535	; errata NOP
  9927  003E56                     __end_of_strlen:
  9928                           	opt callstack 0
  9929                           
  9930 ;; *************** function _fputs *****************
  9931 ;; Defined at:
  9932 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9935 ;;		 -> dbuf(32), 
  9936 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9937 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;  i               2   14[COMRAM] int 
  9940 ;;  c               1   13[COMRAM] unsigned char 
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  2    9[COMRAM] int 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9950 ;;      Params:         4       0       0       0       0       0       0
  9951 ;;      Locals:         3       0       0       0       0       0       0
  9952 ;;      Temps:          0       0       0       0       0       0       0
  9953 ;;      Totals:         7       0       0       0       0       0       0
  9954 ;;Total ram usage:        7 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:    4
  9957 ;; This function calls:
  9958 ;;		_fputc
  9959 ;; This function is called by:
  9960 ;;		_pad
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           	psect	text42
  9965  003C86                     __ptext42:
  9966                           	opt callstack 0
  9967  003C86                     _fputs:
  9968                           	opt callstack 0
  9969  003C86  FFFF               	dw	65535	; assembler added errata NOP
  9970                           
  9971                           ;incstack = 0
  9972  003C88  0E00               	movlw	0
  9973  003C8A  6E10               	movwf	fputs@i+1,c
  9974  003C8C  0E00               	movlw	0
  9975  003C8E  6E0F               	movwf	fputs@i,c
  9976  003C90  D00C               	goto	l3555
  9977  003C92                     l3551:
  9978  003C92  FFFF               	dw	65535	; assembler added errata NOP
  9979  003C94  C00E  F001         	movff	fputs@c,fputc@c
  9980  003C98  6A02               	clrf	fputc@c+1,c
  9981  003C9A  C00C  F003         	movff	fputs@fp,fputc@fp
  9982  003C9E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9983  003CA2  EC81  F01B         	call	_fputc	;wreg free
  9984  003CA6  4A0F               	infsnz	fputs@i,f,c
  9985  003CA8  2A10               	incf	fputs@i+1,f,c
  9986  003CAA                     l3555:
  9987  003CAA  FFFF               	dw	65535	; assembler added errata NOP
  9988  003CAC  500F               	movf	fputs@i,w,c
  9989  003CAE  240A               	addwf	fputs@s,w,c
  9990  003CB0  6ED9               	movwf	fsr2l,c
  9991  003CB2  5010               	movf	fputs@i+1,w,c
  9992  003CB4  200B               	addwfc	fputs@s+1,w,c
  9993  003CB6  6EDA               	movwf	fsr2h,c
  9994  003CB8  50DF               	movf	indf2,w,c
  9995  003CBA  6E0E               	movwf	fputs@c,c
  9996  003CBC  500E               	movf	fputs@c,w,c
  9997  003CBE  B4D8               	btfsc	status,2,c
  9998  003CC0  0012               	return		;funcret
  9999  003CC2  FFFF               	dw	65535	; assembler added errata NOP
 10000  003CC4  D7E6               	goto	l3551
 10001  003CC6  FFFF               	dw	65535	; errata NOP
 10002  003CC8                     __end_of_fputs:
 10003                           	opt callstack 0
 10004                           
 10005 ;; *************** function _fputc *****************
 10006 ;; Defined at:
 10007 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  c               2    0[COMRAM] int 
 10010 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10011 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  2    0[COMRAM] int 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10023 ;;      Params:         4       0       0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0
 10025 ;;      Temps:          5       0       0       0       0       0       0
 10026 ;;      Totals:         9       0       0       0       0       0       0
 10027 ;;Total ram usage:        9 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    3
 10030 ;; This function calls:
 10031 ;;		_putch
 10032 ;; This function is called by:
 10033 ;;		_pad
 10034 ;;		_stoa
 10035 ;;		_vfpfcnvrt
 10036 ;;		_fputs
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text43
 10041  003702                     __ptext43:
 10042                           	opt callstack 0
 10043  003702                     _fputc:
 10044                           	opt callstack 0
 10045  003702  FFFF               	dw	65535	; assembler added errata NOP
 10046                           
 10047                           ;incstack = 0
 10048  003704  5003               	movf	fputc@fp,w,c
 10049  003706  1004               	iorwf	fputc@fp+1,w,c
 10050  003708  B4D8               	btfsc	status,2,c
 10051  00370A  D004               	goto	u2840
 10052  00370C  5003               	movf	fputc@fp,w,c
 10053  00370E  1004               	iorwf	fputc@fp+1,w,c
 10054  003710  A4D8               	btfss	status,2,c
 10055  003712  D005               	goto	l3541
 10056  003714                     u2840:
 10057  003714  FFFF               	dw	65535	; assembler added errata NOP
 10058  003716  5001               	movf	fputc@c,w,c
 10059  003718  EC3E  F000         	call	_putch
 10060  00371C  D045               	goto	l1391
 10061  00371E                     l3541:
 10062  00371E  FFFF               	dw	65535	; assembler added errata NOP
 10063  003720  EE20 F004          	lfsr	2,4
 10064  003724  5003               	movf	fputc@fp,w,c
 10065  003726  26D9               	addwf	fsr2l,f,c
 10066  003728  5004               	movf	fputc@fp+1,w,c
 10067  00372A  22DA               	addwfc	fsr2h,f,c
 10068  00372C  50DE               	movf	postinc2,w,c
 10069  00372E  10DE               	iorwf	postinc2,w,c
 10070  003730  B4D8               	btfsc	status,2,c
 10071  003732  D016               	goto	u2860
 10072  003734  EE20 F004          	lfsr	2,4
 10073  003738  5003               	movf	fputc@fp,w,c
 10074  00373A  26D9               	addwf	fsr2l,f,c
 10075  00373C  5004               	movf	fputc@fp+1,w,c
 10076  00373E  22DA               	addwfc	fsr2h,f,c
 10077  003740  EE10 F002          	lfsr	1,2
 10078  003744  5003               	movf	fputc@fp,w,c
 10079  003746  26E1               	addwf	fsr1l,f,c
 10080  003748  5004               	movf	fputc@fp+1,w,c
 10081  00374A  22E2               	addwfc	fsr1h,f,c
 10082  00374C  50DE               	movf	postinc2,w,c
 10083  00374E  5CE6               	subwf	postinc1,w,c
 10084  003750  50E6               	movf	postinc1,w,c
 10085  003752  0A80               	xorlw	128
 10086  003754  6E09               	movwf	(??_fputc+4)& (0+255),c
 10087  003756  50DE               	movf	postinc2,w,c
 10088  003758  0A80               	xorlw	128
 10089  00375A  5809               	subwfb	(??_fputc+4)& (0+255),w,c
 10090  00375C  B0D8               	btfsc	status,0,c
 10091  00375E  D024               	goto	l1391
 10092  003760                     u2860:
 10093  003760  FFFF               	dw	65535	; assembler added errata NOP
 10094  003762  EE20 F002          	lfsr	2,2
 10095  003766  5003               	movf	fputc@fp,w,c
 10096  003768  26D9               	addwf	fsr2l,f,c
 10097  00376A  5004               	movf	fputc@fp+1,w,c
 10098  00376C  22DA               	addwfc	fsr2h,f,c
 10099  00376E  CFDE F005          	movff	postinc2,??_fputc
 10100  003772  CFDD F006          	movff	postdec2,??_fputc+1
 10101  003776  C003  FFD9         	movff	fputc@fp,fsr2l
 10102  00377A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10103  00377E  CFDE F007          	movff	postinc2,??_fputc+2
 10104  003782  CFDD F008          	movff	postdec2,??_fputc+3
 10105  003786  5005               	movf	??_fputc,w,c
 10106  003788  2407               	addwf	??_fputc+2,w,c
 10107  00378A  6ED9               	movwf	fsr2l,c
 10108  00378C  5006               	movf	??_fputc+1,w,c
 10109  00378E  2008               	addwfc	??_fputc+3,w,c
 10110  003790  6EDA               	movwf	fsr2h,c
 10111  003792  C001  FFDF         	movff	fputc@c,indf2
 10112  003796  EE20 F002          	lfsr	2,2
 10113  00379A  5003               	movf	fputc@fp,w,c
 10114  00379C  26D9               	addwf	fsr2l,f,c
 10115  00379E  5004               	movf	fputc@fp+1,w,c
 10116  0037A0  22DA               	addwfc	fsr2h,f,c
 10117  0037A2  2ADE               	incf	postinc2,f,c
 10118  0037A4  0E00               	movlw	0
 10119  0037A6  22DD               	addwfc	postdec2,f,c
 10120  0037A8                     l1391:
 10121  0037A8  FFFF               	dw	65535	; assembler added errata NOP
 10122  0037AA  0012               	return		;funcret
 10123  0037AC  FFFF               	dw	65535	; errata NOP
 10124  0037AE                     __end_of_fputc:
 10125                           	opt callstack 0
 10126                           
 10127 ;; *************** function _putch *****************
 10128 ;; Defined at:
 10129 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  c               1    wreg     unsigned char 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  c               1    0[COMRAM] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10143 ;;      Params:         0       0       0       0       0       0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    2
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_fputc
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text44
 10158  00007C                     __ptext44:
 10159                           	opt callstack 0
 10160  00007C                     _putch:
 10161                           	opt callstack 0
 10162  00007C  FFFF               	dw	65535	; assembler added errata NOP
 10163                           
 10164                           ;incstack = 0
 10165  00007E  0012               	return		;funcret
 10166  000080  FFFF               	dw	65535	; errata NOP
 10167  000082                     __end_of_putch:
 10168                           	opt callstack 0
 10169                           
 10170 ;; *************** function _atoi *****************
 10171 ;; Defined at:
 10172 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10175 ;;		 -> STR_2(3), STR_1(4), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  n               2   20[COMRAM] int 
 10178 ;;  neg             2   13[COMRAM] int 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  2    7[COMRAM] int 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10188 ;;      Params:         2       0       0       0       0       0       0
 10189 ;;      Locals:         9       0       0       0       0       0       0
 10190 ;;      Temps:          4       0       0       0       0       0       0
 10191 ;;      Totals:        15       0       0       0       0       0       0
 10192 ;;Total ram usage:       15 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    3
 10195 ;; This function calls:
 10196 ;;		___wmul
 10197 ;;		_isdigit
 10198 ;;		_isspace
 10199 ;; This function is called by:
 10200 ;;		_vfpfcnvrt
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text45
 10205  002B40                     __ptext45:
 10206                           	opt callstack 0
 10207  002B40                     _atoi:
 10208                           	opt callstack 0
 10209  002B40  FFFF               	dw	65535	; assembler added errata NOP
 10210                           
 10211                           ;incstack = 0
 10212  002B42  0E00               	movlw	0
 10213  002B44  6E16               	movwf	atoi@n+1,c
 10214  002B46  0E00               	movlw	0
 10215  002B48  6E15               	movwf	atoi@n,c
 10216  002B4A  0E00               	movlw	0
 10217  002B4C  6E0F               	movwf	atoi@neg+1,c
 10218  002B4E  0E00               	movlw	0
 10219  002B50  6E0E               	movwf	atoi@neg,c
 10220  002B52  D003               	goto	l4027
 10221  002B54                     l4025:
 10222  002B54  FFFF               	dw	65535	; assembler added errata NOP
 10223  002B56  4A08               	infsnz	atoi@s,f,c
 10224  002B58  2A09               	incf	atoi@s+1,f,c
 10225  002B5A                     l4027:
 10226  002B5A  FFFF               	dw	65535	; assembler added errata NOP
 10227  002B5C  0E01               	movlw	1
 10228  002B5E  6E14               	movwf	_atoi$1768,c
 10229  002B60  C008  FFF6         	movff	atoi@s,tblptrl
 10230  002B64  C009  FFF7         	movff	atoi@s+1,tblptrh
 10231  002B68                     	if	0	;tblptru may be non-zero
 10232  002B68                     	endif
 10233  002B68                     	if	0	;tblptru may be non-zero
 10234  002B68                     	endif
 10235  002B68  0008               	tblrd		*
 10236  002B6A  FFFF               	dw	65535	; errata NOP
 10237  002B6C  50F5               	movf	tablat,w,c
 10238  002B6E  0A20               	xorlw	32
 10239  002B70  B4D8               	btfsc	status,2,c
 10240  002B72  D019               	goto	l4035
 10241  002B74  0EF7               	movlw	247
 10242  002B76  6E0A               	movwf	??_atoi& (0+255),c
 10243  002B78  0EFF               	movlw	255
 10244  002B7A  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10245  002B7C  C008  FFF6         	movff	atoi@s,tblptrl
 10246  002B80  C009  FFF7         	movff	atoi@s+1,tblptrh
 10247  002B84                     	if	0	;tblptru may be non-zero
 10248  002B84                     	endif
 10249  002B84                     	if	0	;tblptru may be non-zero
 10250  002B84                     	endif
 10251  002B84  0008               	tblrd		*
 10252  002B86  FFFF               	dw	65535	; errata NOP
 10253  002B88  50F5               	movf	tablat,w,c
 10254  002B8A  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10255  002B8C  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10256  002B8E  500A               	movf	??_atoi,w,c
 10257  002B90  260C               	addwf	??_atoi+2,f,c
 10258  002B92  500B               	movf	??_atoi+1,w,c
 10259  002B94  220D               	addwfc	??_atoi+3,f,c
 10260  002B96  500D               	movf	??_atoi+3,w,c
 10261  002B98  E104               	bnz	u3870
 10262  002B9A  0E05               	movlw	5
 10263  002B9C  5C0C               	subwf	??_atoi+2,w,c
 10264  002B9E  A0D8               	btfss	status,0,c
 10265  002BA0  D002               	goto	l4035
 10266  002BA2                     u3870:
 10267  002BA2  0E00               	movlw	0
 10268  002BA4  6E14               	movwf	_atoi$1768,c
 10269  002BA6                     l4035:
 10270  002BA6  FFFF               	dw	65535	; assembler added errata NOP
 10271  002BA8  C014  F010         	movff	_atoi$1768,_atoi$1767
 10272  002BAC  6A11               	clrf	_atoi$1767+1,c
 10273  002BAE  5010               	movf	_atoi$1767,w,c
 10274  002BB0  1011               	iorwf	_atoi$1767+1,w,c
 10275  002BB2  B4D8               	btfsc	status,2,c
 10276  002BB4  D00A               	goto	l4045
 10277  002BB6  D7CE               	goto	l4025
 10278  002BB8                     l4041:
 10279  002BB8  FFFF               	dw	65535	; assembler added errata NOP
 10280  002BBA  0E00               	movlw	0
 10281  002BBC  6E0F               	movwf	atoi@neg+1,c
 10282  002BBE  0E01               	movlw	1
 10283  002BC0  6E0E               	movwf	atoi@neg,c
 10284  002BC2                     l4043:
 10285  002BC2  FFFF               	dw	65535	; assembler added errata NOP
 10286  002BC4  4A08               	infsnz	atoi@s,f,c
 10287  002BC6  2A09               	incf	atoi@s+1,f,c
 10288  002BC8  D032               	goto	l4051
 10289  002BCA                     l4045:
 10290  002BCA  FFFF               	dw	65535	; assembler added errata NOP
 10291  002BCC  C008  FFF6         	movff	atoi@s,tblptrl
 10292  002BD0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10293  002BD4                     	if	0	;tblptru may be non-zero
 10294  002BD4                     	endif
 10295  002BD4                     	if	0	;tblptru may be non-zero
 10296  002BD4                     	endif
 10297  002BD4  0008               	tblrd		*
 10298  002BD6  FFFF               	dw	65535	; errata NOP
 10299  002BD8  50F5               	movf	tablat,w,c
 10300  002BDA  6E0A               	movwf	??_atoi& (0+255),c
 10301  002BDC  6A0B               	clrf	(??_atoi+1)& (0+255),c
 10302                           
 10303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10304                           ; Switch size 1, requested type "simple"
 10305                           ; Number of cases is 1, Range of values is 0 to 0
 10306                           ; switch strategies available:
 10307                           ; Name         Instructions Cycles
 10308                           ; simple_byte            4     3 (average)
 10309                           ;	Chosen strategy is simple_byte
 10310  002BDE  500B               	movf	??_atoi+1,w,c
 10311  002BE0  0A00               	xorlw	0	; case 0
 10312  002BE2  A4D8               	btfss	status,2,c
 10313  002BE4  D024               	goto	l4051
 10314                           
 10315                           ; Switch size 1, requested type "simple"
 10316                           ; Number of cases is 2, Range of values is 43 to 45
 10317                           ; switch strategies available:
 10318                           ; Name         Instructions Cycles
 10319                           ; simple_byte            7     4 (average)
 10320                           ;	Chosen strategy is simple_byte
 10321  002BE6  500A               	movf	??_atoi,w,c
 10322  002BE8  0A2B               	xorlw	43	; case 43
 10323  002BEA  B4D8               	btfsc	status,2,c
 10324  002BEC  D7EA               	goto	l4043
 10325  002BEE  0A06               	xorlw	6	; case 45
 10326  002BF0  B4D8               	btfsc	status,2,c
 10327  002BF2  D7E2               	goto	l4041
 10328  002BF4  D01C               	goto	l4051
 10329  002BF6                     l4047:
 10330  002BF6  FFFF               	dw	65535	; assembler added errata NOP
 10331  002BF8  C015  F001         	movff	atoi@n,___wmul@multiplier
 10332  002BFC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10333  002C00  0E00               	movlw	0
 10334  002C02  6E04               	movwf	___wmul@multiplicand+1,c
 10335  002C04  0E0A               	movlw	10
 10336  002C06  6E03               	movwf	___wmul@multiplicand,c
 10337  002C08  EC41  F01F         	call	___wmul	;wreg free
 10338  002C0C  C008  FFF6         	movff	atoi@s,tblptrl
 10339  002C10  C009  FFF7         	movff	atoi@s+1,tblptrh
 10340  002C14                     	if	0	;tblptru may be non-zero
 10341  002C14                     	endif
 10342  002C14                     	if	0	;tblptru may be non-zero
 10343  002C14                     	endif
 10344  002C14  0008               	tblrd		*
 10345  002C16  FFFF               	dw	65535	; errata NOP
 10346  002C18  50F5               	movf	tablat,w,c
 10347  002C1A  5E01               	subwf	?___wmul,f,c
 10348  002C1C  0E00               	movlw	0
 10349  002C1E  5A02               	subwfb	?___wmul+1,f,c
 10350  002C20  0E30               	movlw	48
 10351  002C22  2401               	addwf	?___wmul,w,c
 10352  002C24  6E15               	movwf	atoi@n,c
 10353  002C26  0E00               	movlw	0
 10354  002C28  2002               	addwfc	?___wmul+1,w,c
 10355  002C2A  6E16               	movwf	atoi@n+1,c
 10356  002C2C  D7CA               	goto	l4043
 10357  002C2E                     l4051:
 10358  002C2E  FFFF               	dw	65535	; assembler added errata NOP
 10359  002C30  0ED0               	movlw	208
 10360  002C32  6E0A               	movwf	??_atoi& (0+255),c
 10361  002C34  0EFF               	movlw	255
 10362  002C36  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10363  002C38  C008  FFF6         	movff	atoi@s,tblptrl
 10364  002C3C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10365  002C40                     	if	0	;tblptru may be non-zero
 10366  002C40                     	endif
 10367  002C40                     	if	0	;tblptru may be non-zero
 10368  002C40                     	endif
 10369  002C40  0008               	tblrd		*
 10370  002C42  FFFF               	dw	65535	; errata NOP
 10371  002C44  50F5               	movf	tablat,w,c
 10372  002C46  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10373  002C48  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10374  002C4A  500A               	movf	??_atoi,w,c
 10375  002C4C  260C               	addwf	??_atoi+2,f,c
 10376  002C4E  500B               	movf	??_atoi+1,w,c
 10377  002C50  220D               	addwfc	??_atoi+3,f,c
 10378  002C52  500D               	movf	??_atoi+3,w,c
 10379  002C54  E106               	bnz	u3890
 10380  002C56  0E0A               	movlw	10
 10381  002C58  5C0C               	subwf	??_atoi+2,w,c
 10382  002C5A  B0D8               	btfsc	status,0,c
 10383  002C5C  D002               	goto	u3890
 10384  002C5E  0E01               	movlw	1
 10385  002C60  D002               	goto	u3900
 10386  002C62                     u3890:
 10387  002C62  FFFF               	dw	65535	; assembler added errata NOP
 10388  002C64  0E00               	movlw	0
 10389  002C66                     u3900:
 10390  002C66  FFFF               	dw	65535	; assembler added errata NOP
 10391  002C68  6E12               	movwf	_atoi$1769,c
 10392  002C6A  6A13               	clrf	_atoi$1769+1,c
 10393  002C6C  5012               	movf	_atoi$1769,w,c
 10394  002C6E  1013               	iorwf	_atoi$1769+1,w,c
 10395  002C70  A4D8               	btfss	status,2,c
 10396  002C72  D7C1               	goto	l4047
 10397  002C74  500E               	movf	atoi@neg,w,c
 10398  002C76  100F               	iorwf	atoi@neg+1,w,c
 10399  002C78  A4D8               	btfss	status,2,c
 10400  002C7A  D00D               	goto	l1345
 10401  002C7C  C015  F00A         	movff	atoi@n,??_atoi
 10402  002C80  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10403  002C84  1E0A               	comf	??_atoi,f,c
 10404  002C86  1E0B               	comf	??_atoi+1,f,c
 10405  002C88  4A0A               	infsnz	??_atoi,f,c
 10406  002C8A  2A0B               	incf	??_atoi+1,f,c
 10407  002C8C  C00A  F008         	movff	??_atoi,?_atoi
 10408  002C90  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10409  002C94  D005               	goto	l1348
 10410  002C96                     l1345:
 10411  002C96  FFFF               	dw	65535	; assembler added errata NOP
 10412  002C98  C015  F008         	movff	atoi@n,?_atoi
 10413  002C9C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10414  002CA0                     l1348:
 10415  002CA0  FFFF               	dw	65535	; assembler added errata NOP
 10416  002CA2  0012               	return		;funcret
 10417  002CA4  FFFF               	dw	65535	; errata NOP
 10418  002CA6                     __end_of_atoi:
 10419                           	opt callstack 0
 10420                           
 10421 ;; *************** function _isspace *****************
 10422 ;; Defined at:
 10423 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  c               2    0[COMRAM] int 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  2    0[COMRAM] int 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10437 ;;      Params:         2       0       0       0       0       0       0
 10438 ;;      Locals:         1       0       0       0       0       0       0
 10439 ;;      Temps:          4       0       0       0       0       0       0
 10440 ;;      Totals:         7       0       0       0       0       0       0
 10441 ;;Total ram usage:        7 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    2
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_atoi
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text46
 10452  003C42                     __ptext46:
 10453                           	opt callstack 0
 10454  003C42                     _isspace:
 10455                           	opt callstack 0
 10456  003C42  FFFF               	dw	65535	; assembler added errata NOP
 10457                           
 10458                           ;incstack = 0
 10459  003C44  0E01               	movlw	1
 10460  003C46  6E07               	movwf	_isspace$1804,c
 10461  003C48  0E20               	movlw	32
 10462  003C4A  1801               	xorwf	isspace@c,w,c
 10463  003C4C  1002               	iorwf	isspace@c+1,w,c
 10464  003C4E  B4D8               	btfsc	status,2,c
 10465  003C50  D014               	goto	l3751
 10466  003C52  0EF7               	movlw	247
 10467  003C54  6E03               	movwf	??_isspace& (0+255),c
 10468  003C56  0EFF               	movlw	255
 10469  003C58  6E04               	movwf	(??_isspace+1)& (0+255),c
 10470  003C5A  C001  F005         	movff	isspace@c,??_isspace+2
 10471  003C5E  C002  F006         	movff	isspace@c+1,??_isspace+3
 10472  003C62  5003               	movf	??_isspace,w,c
 10473  003C64  2605               	addwf	??_isspace+2,f,c
 10474  003C66  5004               	movf	??_isspace+1,w,c
 10475  003C68  2206               	addwfc	??_isspace+3,f,c
 10476  003C6A  5006               	movf	??_isspace+3,w,c
 10477  003C6C  E104               	bnz	u3260
 10478  003C6E  0E05               	movlw	5
 10479  003C70  5C05               	subwf	??_isspace+2,w,c
 10480  003C72  A0D8               	btfss	status,0,c
 10481  003C74  D002               	goto	l3751
 10482  003C76                     u3260:
 10483  003C76  0E00               	movlw	0
 10484  003C78  6E07               	movwf	_isspace$1804,c
 10485  003C7A                     l3751:
 10486  003C7A  FFFF               	dw	65535	; assembler added errata NOP
 10487  003C7C  C007  F001         	movff	_isspace$1804,?_isspace
 10488  003C80  6A02               	clrf	?_isspace+1,c
 10489  003C82  0012               	return		;funcret
 10490  003C84  FFFF               	dw	65535	; errata NOP
 10491  003C86                     __end_of_isspace:
 10492                           	opt callstack 0
 10493                           
 10494 ;; *************** function _isdigit *****************
 10495 ;; Defined at:
 10496 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  c               2    0[COMRAM] int 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;		None
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  2    0[COMRAM] int 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10510 ;;      Params:         2       0       0       0       0       0       0
 10511 ;;      Locals:         0       0       0       0       0       0       0
 10512 ;;      Temps:          4       0       0       0       0       0       0
 10513 ;;      Totals:         6       0       0       0       0       0       0
 10514 ;;Total ram usage:        6 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    2
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		_vfpfcnvrt
 10521 ;;		_atoi
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           	psect	text47
 10526  003DEC                     __ptext47:
 10527                           	opt callstack 0
 10528  003DEC                     _isdigit:
 10529                           	opt callstack 0
 10530  003DEC  FFFF               	dw	65535	; assembler added errata NOP
 10531                           
 10532                           ;incstack = 0
 10533  003DEE  0ED0               	movlw	208
 10534  003DF0  6E03               	movwf	??_isdigit& (0+255),c
 10535  003DF2  0EFF               	movlw	255
 10536  003DF4  6E04               	movwf	(??_isdigit+1)& (0+255),c
 10537  003DF6  C001  F005         	movff	isdigit@c,??_isdigit+2
 10538  003DFA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10539  003DFE  5003               	movf	??_isdigit,w,c
 10540  003E00  2605               	addwf	??_isdigit+2,f,c
 10541  003E02  5004               	movf	??_isdigit+1,w,c
 10542  003E04  2206               	addwfc	??_isdigit+3,f,c
 10543  003E06  5006               	movf	??_isdigit+3,w,c
 10544  003E08  E106               	bnz	u3030
 10545  003E0A  0E0A               	movlw	10
 10546  003E0C  5C05               	subwf	??_isdigit+2,w,c
 10547  003E0E  B0D8               	btfsc	status,0,c
 10548  003E10  D002               	goto	u3030
 10549  003E12  0E01               	movlw	1
 10550  003E14  D002               	goto	u3040
 10551  003E16                     u3030:
 10552  003E16  FFFF               	dw	65535	; assembler added errata NOP
 10553  003E18  0E00               	movlw	0
 10554  003E1A                     u3040:
 10555  003E1A  FFFF               	dw	65535	; assembler added errata NOP
 10556  003E1C  6E01               	movwf	?_isdigit,c
 10557  003E1E  6A02               	clrf	?_isdigit+1,c
 10558  003E20  0012               	return		;funcret
 10559  003E22  FFFF               	dw	65535	; errata NOP
 10560  003E24                     __end_of_isdigit:
 10561                           	opt callstack 0
 10562                           
 10563 ;; *************** function ___wmul *****************
 10564 ;; Defined at:
 10565 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  multiplier      2    0[COMRAM] unsigned int 
 10568 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  product         2    4[COMRAM] unsigned int 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  2    0[COMRAM] unsigned int 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0, prodl, prodh
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10580 ;;      Params:         4       0       0       0       0       0       0
 10581 ;;      Locals:         2       0       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0
 10583 ;;      Totals:         6       0       0       0       0       0       0
 10584 ;;Total ram usage:        6 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    2
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_atoi
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text48
 10595  003E82                     __ptext48:
 10596                           	opt callstack 0
 10597  003E82                     ___wmul:
 10598                           	opt callstack 0
 10599  003E82  FFFF               	dw	65535	; assembler added errata NOP
 10600                           
 10601                           ;incstack = 0
 10602  003E84  5001               	movf	___wmul@multiplier,w,c
 10603  003E86  0203               	mulwf	___wmul@multiplicand,c
 10604  003E88  CFF3 F005          	movff	prodl,___wmul@product
 10605  003E8C  CFF4 F006          	movff	prodh,___wmul@product+1
 10606  003E90  5001               	movf	___wmul@multiplier,w,c
 10607  003E92  0204               	mulwf	___wmul@multiplicand+1,c
 10608  003E94  50F3               	movf	prodl,w,c
 10609  003E96  2606               	addwf	___wmul@product+1,f,c
 10610  003E98  5002               	movf	___wmul@multiplier+1,w,c
 10611  003E9A  0203               	mulwf	___wmul@multiplicand,c
 10612  003E9C  50F3               	movf	prodl,w,c
 10613  003E9E  2606               	addwf	___wmul@product+1,f,c
 10614  003EA0  C005  F001         	movff	___wmul@product,?___wmul
 10615  003EA4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10616  003EA8  0012               	return		;funcret
 10617  003EAA  FFFF               	dw	65535	; errata NOP
 10618  003EAC                     __end_of___wmul:
 10619                           	opt callstack 0
 10620                           
 10621 ;; *************** function _getchar *****************
 10622 ;; Defined at:
 10623 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  2   26[None  ] int 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10637 ;;      Params:         0       0       0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:    4
 10644 ;; This function calls:
 10645 ;;		_fgetc
 10646 ;; This function is called by:
 10647 ;;		_int_to_char
 10648 ;;		_float_to_char
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text49
 10653  003FCE                     __ptext49:
 10654                           	opt callstack 0
 10655  003FCE                     _getchar:
 10656                           	opt callstack 0
 10657  003FCE  FFFF               	dw	65535	; assembler added errata NOP
 10658                           
 10659                           ;	Return value of _getchar is never used
 10660                           
 10661                           ;incstack = 0
 10662  003FD0  0E00               	movlw	0
 10663  003FD2  6E03               	movwf	fgetc@fp,c
 10664  003FD4  0E00               	movlw	0
 10665  003FD6  6E04               	movwf	fgetc@fp+1,c
 10666  003FD8  EC74  F01C         	call	_fgetc	;wreg free
 10667  003FDC  0012               	return		;funcret
 10668  003FDE  FFFF               	dw	65535	; errata NOP
 10669  003FE0                     __end_of_getchar:
 10670                           	opt callstack 0
 10671                           
 10672 ;; *************** function _fgetc *****************
 10673 ;; Defined at:
 10674 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10677 ;;		 -> NULL(0), 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  c               2    9[COMRAM] int 
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  2    2[COMRAM] int 
 10682 ;; Registers used:
 10683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10689 ;;      Params:         2       0       0       0       0       0       0
 10690 ;;      Locals:         2       0       0       0       0       0       0
 10691 ;;      Temps:          5       0       0       0       0       0       0
 10692 ;;      Totals:         9       0       0       0       0       0       0
 10693 ;;Total ram usage:        9 bytes
 10694 ;; Hardware stack levels used:    1
 10695 ;; Hardware stack levels required when called:    3
 10696 ;; This function calls:
 10697 ;;		_getch
 10698 ;; This function is called by:
 10699 ;;		_getchar
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text50
 10704  0038E8                     __ptext50:
 10705                           	opt callstack 0
 10706  0038E8                     _fgetc:
 10707                           	opt callstack 0
 10708  0038E8  FFFF               	dw	65535	; assembler added errata NOP
 10709                           
 10710                           ;incstack = 0
 10711  0038EA  5003               	movf	fgetc@fp,w,c
 10712  0038EC  1004               	iorwf	fgetc@fp+1,w,c
 10713  0038EE  A4D8               	btfss	status,2,c
 10714  0038F0  D012               	goto	l4687
 10715  0038F2  507E               	movf	_ungetcnt,w,c
 10716  0038F4  B4D8               	btfsc	status,2,c
 10717  0038F6  D007               	goto	l4685
 10718  0038F8  0E00               	movlw	0
 10719  0038FA  6E0B               	movwf	fgetc@c+1,c
 10720  0038FC  0E00               	movlw	0
 10721  0038FE  6E0A               	movwf	fgetc@c,c
 10722  003900  0E00               	movlw	0
 10723  003902  6E7E               	movwf	_ungetcnt,c
 10724  003904  D02F               	goto	l4689
 10725  003906                     l4685:
 10726  003906  FFFF               	dw	65535	; assembler added errata NOP
 10727  003908  EC29  F000         	call	_getch	;wreg free
 10728  00390C  C001  F00A         	movff	?_getch,fgetc@c
 10729  003910  C002  F00B         	movff	?_getch+1,fgetc@c+1
 10730  003914  D027               	goto	l4689
 10731  003916                     l4687:
 10732  003916  FFFF               	dw	65535	; assembler added errata NOP
 10733  003918  EE20 F002          	lfsr	2,2
 10734  00391C  5003               	movf	fgetc@fp,w,c
 10735  00391E  26D9               	addwf	fsr2l,f,c
 10736  003920  5004               	movf	fgetc@fp+1,w,c
 10737  003922  22DA               	addwfc	fsr2h,f,c
 10738  003924  CFDE F005          	movff	postinc2,??_fgetc
 10739  003928  CFDD F006          	movff	postdec2,??_fgetc+1
 10740  00392C  C003  FFD9         	movff	fgetc@fp,fsr2l
 10741  003930  C004  FFDA         	movff	fgetc@fp+1,fsr2h
 10742  003934  CFDE F007          	movff	postinc2,??_fgetc+2
 10743  003938  CFDD F008          	movff	postdec2,??_fgetc+3
 10744  00393C  5005               	movf	??_fgetc,w,c
 10745  00393E  2407               	addwf	??_fgetc+2,w,c
 10746  003940  6ED9               	movwf	fsr2l,c
 10747  003942  5006               	movf	??_fgetc+1,w,c
 10748  003944  2008               	addwfc	??_fgetc+3,w,c
 10749  003946  6EDA               	movwf	fsr2h,c
 10750  003948  50DF               	movf	indf2,w,c
 10751  00394A  6E09               	movwf	(??_fgetc+4)& (0+255),c
 10752  00394C  5009               	movf	??_fgetc+4,w,c
 10753  00394E  6E0A               	movwf	fgetc@c,c
 10754  003950  6A0B               	clrf	fgetc@c+1,c
 10755  003952  EE20 F002          	lfsr	2,2
 10756  003956  5003               	movf	fgetc@fp,w,c
 10757  003958  26D9               	addwf	fsr2l,f,c
 10758  00395A  5004               	movf	fgetc@fp+1,w,c
 10759  00395C  22DA               	addwfc	fsr2h,f,c
 10760  00395E  2ADE               	incf	postinc2,f,c
 10761  003960  0E00               	movlw	0
 10762  003962  22DD               	addwfc	postdec2,f,c
 10763  003964                     l4689:
 10764  003964  FFFF               	dw	65535	; assembler added errata NOP
 10765  003966  C00A  F003         	movff	fgetc@c,?_fgetc
 10766  00396A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 10767  00396E  0012               	return		;funcret
 10768  003970  FFFF               	dw	65535	; errata NOP
 10769  003972                     __end_of_fgetc:
 10770                           	opt callstack 0
 10771                           
 10772 ;; *************** function _getch *****************
 10773 ;; Defined at:
 10774 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;		None
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  2    0[COMRAM] int 
 10781 ;; Registers used:
 10782 ;;		None
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10788 ;;      Params:         2       0       0       0       0       0       0
 10789 ;;      Locals:         0       0       0       0       0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0       0
 10791 ;;      Totals:         2       0       0       0       0       0       0
 10792 ;;Total ram usage:        2 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    2
 10795 ;; This function calls:
 10796 ;;		Nothing
 10797 ;; This function is called by:
 10798 ;;		_fgetc
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text51
 10803  000052                     __ptext51:
 10804                           	opt callstack 0
 10805  000052                     _getch:
 10806                           	opt callstack 0
 10807  000052  FFFF               	dw	65535	; assembler added errata NOP
 10808                           
 10809                           ;incstack = 0
 10810  000054  6801               	setf	?_getch,c
 10811  000056  6802               	setf	?_getch+1,c
 10812  000058  0012               	return		;funcret
 10813  00005A  FFFF               	dw	65535	; errata NOP
 10814  00005C                     __end_of_getch:
 10815                           	opt callstack 0
 10816                           
 10817 ;; *************** function _UARTSendString *****************
 10818 ;; Defined at:
 10819 ;;		line 72 in file "serial.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10822 ;;		 -> STR_14(24), STR_13(13), STR_12(9), STR_11(13), 
 10823 ;;		 -> STR_10(9), STR_9(26), STR_8(9), STR_7(3), 
 10824 ;;		 -> STR_6(17), STR_5(12), STR_4(3), STR_3(24), 
 10825 ;;		 -> int_to_char@result(10), 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  i               2   36[BANK0 ] int 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      void 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10837 ;;      Params:         0       2       0       0       0       0       0
 10838 ;;      Locals:         0       2       0       0       0       0       0
 10839 ;;      Temps:          0       2       0       0       0       0       0
 10840 ;;      Totals:         0       6       0       0       0       0       0
 10841 ;;Total ram usage:        6 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    3
 10844 ;; This function calls:
 10845 ;;		_UARTSendChar
 10846 ;; This function is called by:
 10847 ;;		_main
 10848 ;;		_read_SRAM
 10849 ;;		_write_SRAM
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text52
 10854  003972                     __ptext52:
 10855                           	opt callstack 0
 10856  003972                     _UARTSendString:
 10857                           	opt callstack 0
 10858  003972  FFFF               	dw	65535	; assembler added errata NOP
 10859                           
 10860                           ;serial.c: 73:   TRISCbits.TRISC7 = 0;
 10861                           
 10862                           ;incstack = 0
 10863  003974  9E94               	bcf	3988,7,c	;volatile
 10864                           
 10865                           ;serial.c: 74:   int i = 0;
 10866  003976  0E00               	movlw	0
 10867  003978  0100               	movlb	0	; () banked
 10868  00397A  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
 10869  00397C  0E00               	movlw	0
 10870  00397E  6FA4               	movwf	UARTSendString@i& (0+255),b
 10871                           
 10872                           ;serial.c: 75:   while (c[i] != '\0') {
 10873  003980  D01E               	goto	l5019
 10874  003982                     l5015:
 10875  003982  FFFF               	dw	65535	; assembler added errata NOP
 10876                           
 10877                           ;serial.c: 76:     UARTSendChar(c[i]);
 10878  003984  0100               	movlb	0	; () banked
 10879  003986  51A4               	movf	UARTSendString@i& (0+255),w,b
 10880  003988  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10881  00398A  6FA2               	movwf	??_UARTSendString& (0+255),b
 10882  00398C  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10883  00398E  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10884  003990  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10885  003992  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10886  003996  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10887  00399A  6AF8               	clrf	tblptru,c
 10888  00399C  0E05               	movlw	(high __ramtop+-1)
 10889  00399E  64F7               	cpfsgt	tblptrh,c
 10890  0039A0  D004               	bra	u5287
 10891  0039A2  0008               	tblrd		*
 10892  0039A4  FFFF               	dw	65535	; errata NOP
 10893  0039A6  50F5               	movf	tablat,w,c
 10894  0039A8  D005               	bra	u5280
 10895  0039AA                     u5287:
 10896  0039AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10897  0039AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10898  0039B2  50EF               	movf	indf0,w,c
 10899  0039B4                     u5280:
 10900  0039B4  ECC9  F01F         	call	_UARTSendChar
 10901                           
 10902                           ;serial.c: 77:     i++;
 10903  0039B8  0100               	movlb	0	; () banked
 10904  0039BA  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
 10905  0039BC  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
 10906  0039BE                     l5019:
 10907  0039BE  FFFF               	dw	65535	; assembler added errata NOP
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;serial.c: 75:   while (c[i] != '\0') {
 10911  0039C0  51A4               	movf	UARTSendString@i& (0+255),w,b
 10912  0039C2  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10913  0039C4  6FA2               	movwf	??_UARTSendString& (0+255),b
 10914  0039C6  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10915  0039C8  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10916  0039CA  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10917  0039CC  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10918  0039D0  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10919  0039D4  6AF8               	clrf	tblptru,c
 10920  0039D6  0E05               	movlw	(high __ramtop+-1)
 10921  0039D8  64F7               	cpfsgt	tblptrh,c
 10922  0039DA  D004               	bra	u5297
 10923  0039DC  0008               	tblrd		*
 10924  0039DE  FFFF               	dw	65535	; errata NOP
 10925  0039E0  50F5               	movf	tablat,w,c
 10926  0039E2  D005               	bra	u5290
 10927  0039E4                     u5297:
 10928  0039E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10929  0039E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10930  0039EC  50EF               	movf	indf0,w,c
 10931  0039EE                     u5290:
 10932  0039EE  0900               	iorlw	0
 10933  0039F0  B4D8               	btfsc	status,2,c
 10934  0039F2  0012               	return		;funcret
 10935  0039F4  FFFF               	dw	65535	; assembler added errata NOP
 10936  0039F6  D7C5               	goto	l5015
 10937  0039F8  FFFF               	dw	65535	; errata NOP
 10938  0039FA                     __end_of_UARTSendString:
 10939                           	opt callstack 0
 10940                           
 10941 ;; *************** function _UARTNewLine *****************
 10942 ;; Defined at:
 10943 ;;		line 48 in file "serial.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;		None
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;		None
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg, cstack
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10957 ;;      Params:         0       0       0       0       0       0       0
 10958 ;;      Locals:         0       0       0       0       0       0       0
 10959 ;;      Temps:          0       0       0       0       0       0       0
 10960 ;;      Totals:         0       0       0       0       0       0       0
 10961 ;;Total ram usage:        0 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    3
 10964 ;; This function calls:
 10965 ;;		_UARTSendChar
 10966 ;; This function is called by:
 10967 ;;		_main
 10968 ;;		_read_SRAM
 10969 ;;		_write_SRAM
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text53
 10974  003F7E                     __ptext53:
 10975                           	opt callstack 0
 10976  003F7E                     _UARTNewLine:
 10977                           	opt callstack 0
 10978  003F7E  FFFF               	dw	65535	; assembler added errata NOP
 10979                           
 10980                           ;serial.c: 49:   TRISCbits.TRISC7 = 0;
 10981                           
 10982                           ;incstack = 0
 10983  003F80  9E94               	bcf	3988,7,c	;volatile
 10984                           
 10985                           ;serial.c: 50:   UARTSendChar(0x0a);
 10986  003F82  0E0A               	movlw	10
 10987  003F84  ECC9  F01F         	call	_UARTSendChar
 10988                           
 10989                           ;serial.c: 51:   UARTSendChar(0x0d);
 10990  003F88  0E0D               	movlw	13
 10991  003F8A  ECC9  F01F         	call	_UARTSendChar
 10992  003F8E  0012               	return		;funcret
 10993  003F90  FFFF               	dw	65535	; errata NOP
 10994  003F92                     __end_of_UARTNewLine:
 10995                           	opt callstack 0
 10996                           
 10997 ;; *************** function _UARTSendChar *****************
 10998 ;; Defined at:
 10999 ;;		line 54 in file "serial.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  c               1    wreg     unsigned char 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  c               1    0[COMRAM] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      void 
 11006 ;; Registers used:
 11007 ;;		wreg
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11013 ;;      Params:         0       0       0       0       0       0       0
 11014 ;;      Locals:         1       0       0       0       0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0
 11016 ;;      Totals:         1       0       0       0       0       0       0
 11017 ;;Total ram usage:        1 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    2
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_UARTNewLine
 11024 ;;		_UARTSendString
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text54
 11029  003F92                     __ptext54:
 11030                           	opt callstack 0
 11031  003F92                     _UARTSendChar:
 11032                           	opt callstack 0
 11033  003F92  FFFF               	dw	65535	; assembler added errata NOP
 11034                           
 11035                           ;incstack = 0
 11036                           ;UARTSendChar@c stored from wreg
 11037  003F94  6E01               	movwf	UARTSendChar@c,c
 11038                           
 11039                           ;serial.c: 55:   TRISCbits.TRISC7 = 0;
 11040  003F96  9E94               	bcf	3988,7,c	;volatile
 11041  003F98                     l248:
 11042  003F98  FFFF               	dw	65535	; assembler added errata NOP
 11043  003F9A  A2AC               	btfss	4012,1,c	;volatile
 11044  003F9C  D7FD               	goto	l248
 11045                           
 11046                           ;serial.c: 57:   TXREG = c;
 11047  003F9E  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 11048  003FA2  0012               	return		;funcret
 11049  003FA4  FFFF               	dw	65535	; errata NOP
 11050  003FA6                     __end_of_UARTSendChar:
 11051                           	opt callstack 0
 11052                           
 11053 ;; *************** function _interrupt_enable *****************
 11054 ;; Defined at:
 11055 ;;		line 15 in file "serial.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;		None
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;		None
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  1    wreg      void 
 11062 ;; Registers used:
 11063 ;;		None
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11069 ;;      Params:         0       0       0       0       0       0       0
 11070 ;;      Locals:         0       0       0       0       0       0       0
 11071 ;;      Temps:          0       0       0       0       0       0       0
 11072 ;;      Totals:         0       0       0       0       0       0       0
 11073 ;;Total ram usage:        0 bytes
 11074 ;; Hardware stack levels used:    1
 11075 ;; Hardware stack levels required when called:    2
 11076 ;; This function calls:
 11077 ;;		Nothing
 11078 ;; This function is called by:
 11079 ;;		_main
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text55
 11084  003FE0                     __ptext55:
 11085                           	opt callstack 0
 11086  003FE0                     _interrupt_enable:
 11087                           	opt callstack 0
 11088  003FE0  FFFF               	dw	65535	; assembler added errata NOP
 11089                           
 11090                           ;serial.c: 16:   INTCONbits.GIE = 1;
 11091                           
 11092                           ;incstack = 0
 11093  003FE2  8EF2               	bsf	4082,7,c	;volatile
 11094                           
 11095                           ;serial.c: 17:   INTCONbits.PEIE = 1;
 11096  003FE4  8CF2               	bsf	4082,6,c	;volatile
 11097                           
 11098                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
 11099  003FE6  8AF2               	bsf	4082,5,c	;volatile
 11100                           
 11101                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
 11102  003FE8  84F1               	bsf	4081,2,c	;volatile
 11103                           
 11104                           ;serial.c: 20:   RCONbits.IPEN = 1;
 11105  003FEA  8ED0               	bsf	4048,7,c	;volatile
 11106  003FEC  0012               	return		;funcret
 11107  003FEE  FFFF               	dw	65535	; errata NOP
 11108  003FF0                     __end_of_interrupt_enable:
 11109                           	opt callstack 0
 11110                           
 11111 ;; *************** function _interrupt_disable *****************
 11112 ;; Defined at:
 11113 ;;		line 23 in file "serial.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;		None
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		None
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11127 ;;      Params:         0       0       0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0
 11129 ;;      Temps:          0       0       0       0       0       0       0
 11130 ;;      Totals:         0       0       0       0       0       0       0
 11131 ;;Total ram usage:        0 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    2
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text56
 11142  000038                     __ptext56:
 11143                           	opt callstack 0
 11144  000038                     _interrupt_disable:
 11145                           	opt callstack 0
 11146  000038  FFFF               	dw	65535	; assembler added errata NOP
 11147                           
 11148                           ;serial.c: 24:   INTCONbits.GIE = 0;
 11149                           
 11150                           ;incstack = 0
 11151  00003A  9EF2               	bcf	4082,7,c	;volatile
 11152                           
 11153                           ;serial.c: 25:   INTCONbits.PEIE = 0;
 11154  00003C  9CF2               	bcf	4082,6,c	;volatile
 11155                           
 11156                           ;serial.c: 26:   INTCONbits.TMR0IE = 0;
 11157  00003E  9AF2               	bcf	4082,5,c	;volatile
 11158                           
 11159                           ;serial.c: 27:   INTCON2bits.TMR0IP = 0;
 11160  000040  94F1               	bcf	4081,2,c	;volatile
 11161  000042  0012               	return		;funcret
 11162  000044  FFFF               	dw	65535	; errata NOP
 11163  000046                     __end_of_interrupt_disable:
 11164                           	opt callstack 0
 11165                           
 11166 ;; *************** function _initialize_TX *****************
 11167 ;; Defined at:
 11168 ;;		line 30 in file "serial.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;		None
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;		None
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11182 ;;      Params:         0       0       0       0       0       0       0
 11183 ;;      Locals:         0       0       0       0       0       0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0
 11185 ;;      Totals:         0       0       0       0       0       0       0
 11186 ;;Total ram usage:        0 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    2
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_main
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text57
 11197  003FA6                     __ptext57:
 11198                           	opt callstack 0
 11199  003FA6                     _initialize_TX:
 11200                           	opt callstack 0
 11201  003FA6  FFFF               	dw	65535	; assembler added errata NOP
 11202                           
 11203                           ;serial.c: 31:   TXSTAbits.TX9 = 1;
 11204                           
 11205                           ;incstack = 0
 11206  003FA8  8CAC               	bsf	4012,6,c	;volatile
 11207                           
 11208                           ;serial.c: 32:   TXSTAbits.TXEN = 1;
 11209  003FAA  8AAC               	bsf	4012,5,c	;volatile
 11210                           
 11211                           ;serial.c: 33:   TXSTAbits.SYNC = 0;
 11212  003FAC  98AC               	bcf	4012,4,c	;volatile
 11213                           
 11214                           ;serial.c: 34:   TXSTAbits.BRGH = 0;
 11215  003FAE  94AC               	bcf	4012,2,c	;volatile
 11216                           
 11217                           ;serial.c: 35:   TXSTAbits.TX9D = 1;
 11218  003FB0  80AC               	bsf	4012,0,c	;volatile
 11219                           
 11220                           ;serial.c: 36:   SPBRG = 25;
 11221  003FB2  0E19               	movlw	25
 11222  003FB4  6EAF               	movwf	4015,c	;volatile
 11223  003FB6  0012               	return		;funcret
 11224  003FB8  FFFF               	dw	65535	; errata NOP
 11225  003FBA                     __end_of_initialize_TX:
 11226                           	opt callstack 0
 11227                           
 11228 ;; *************** function _initialize_RX *****************
 11229 ;; Defined at:
 11230 ;;		line 39 in file "serial.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		wreg, status,2
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11244 ;;      Params:         0       0       0       0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0
 11247 ;;      Totals:         0       0       0       0       0       0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    2
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_main
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           	psect	text58
 11259  003FBA                     __ptext58:
 11260                           	opt callstack 0
 11261  003FBA                     _initialize_RX:
 11262                           	opt callstack 0
 11263  003FBA  FFFF               	dw	65535	; assembler added errata NOP
 11264                           
 11265                           ;serial.c: 40:   RCSTA = 0x00;
 11266                           
 11267                           ;incstack = 0
 11268  003FBC  0E00               	movlw	0
 11269  003FBE  6EAB               	movwf	4011,c	;volatile
 11270                           
 11271                           ;serial.c: 41:   RCSTAbits.SPEN = 1;
 11272  003FC0  8EAB               	bsf	4011,7,c	;volatile
 11273                           
 11274                           ;serial.c: 42:   RCSTAbits.RX9 = 1;
 11275  003FC2  8CAB               	bsf	4011,6,c	;volatile
 11276                           
 11277                           ;serial.c: 43:   RCSTAbits.CREN = 1;
 11278  003FC4  88AB               	bsf	4011,4,c	;volatile
 11279                           
 11280                           ;serial.c: 44:   RCSTAbits.ADDEN = 0;
 11281  003FC6  96AB               	bcf	4011,3,c	;volatile
 11282                           
 11283                           ;serial.c: 45:   RCSTAbits.RX9D = 1;
 11284  003FC8  80AB               	bsf	4011,0,c	;volatile
 11285  003FCA  0012               	return		;funcret
 11286  003FCC  FFFF               	dw	65535	; errata NOP
 11287  003FCE                     __end_of_initialize_RX:
 11288                           	opt callstack 0
 11289                           
 11290 ;; *************** function _initialize_PWM *****************
 11291 ;; Defined at:
 11292 ;;		line 5 in file "pwm.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  freq            2    0[COMRAM] int 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11306 ;;      Params:         2       0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0
 11309 ;;      Totals:         2       0       0       0       0       0       0
 11310 ;;Total ram usage:        2 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:    2
 11313 ;; This function calls:
 11314 ;;		Nothing
 11315 ;; This function is called by:
 11316 ;;		_main
 11317 ;;		_measureTemp
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text59
 11322  003F50                     __ptext59:
 11323                           	opt callstack 0
 11324  003F50                     _initialize_PWM:
 11325                           	opt callstack 0
 11326  003F50  FFFF               	dw	65535	; assembler added errata NOP
 11327                           
 11328                           ;pwm.c: 6:   T2CON &= ~(0x04);
 11329                           
 11330                           ;incstack = 0
 11331  003F52  94CA               	bcf	4042,2,c	;volatile
 11332                           
 11333                           ;pwm.c: 7:   PR2 = 0xFF;
 11334  003F54  68CB               	setf	4043,c	;volatile
 11335                           
 11336                           ;pwm.c: 8:   CCPR1L = 0xAA;
 11337  003F56  0EAA               	movlw	170
 11338  003F58  6EBE               	movwf	4030,c	;volatile
 11339                           
 11340                           ;pwm.c: 9:   CCP1CON |= 0x00;
 11341  003F5A  50BD               	movf	4029,w,c	;volatile
 11342                           
 11343                           ;pwm.c: 10:   T2CON = 0x07;
 11344  003F5C  0E07               	movlw	7
 11345  003F5E  6ECA               	movwf	4042,c	;volatile
 11346                           
 11347                           ;pwm.c: 11:   CCP1CON |= 0x0C;
 11348  003F60  0E0C               	movlw	12
 11349  003F62  12BD               	iorwf	4029,f,c	;volatile
 11350  003F64  0012               	return		;funcret
 11351  003F66  FFFF               	dw	65535	; errata NOP
 11352  003F68                     __end_of_initialize_PWM:
 11353                           	opt callstack 0
 11354                           
 11355 ;; *************** function _UARTRecieveChar *****************
 11356 ;; Defined at:
 11357 ;;		line 60 in file "serial.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      unsigned char 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11371 ;;      Params:         0       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0
 11373 ;;      Temps:          1       0       0       0       0       0       0
 11374 ;;      Totals:         1       0       0       0       0       0       0
 11375 ;;Total ram usage:        1 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    2
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_main
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text60
 11386  003E56                     __ptext60:
 11387                           	opt callstack 0
 11388  003E56                     _UARTRecieveChar:
 11389                           	opt callstack 0
 11390  003E56  FFFF               	dw	65535	; assembler added errata NOP
 11391                           
 11392                           ;serial.c: 61:   while (RCIF == 0) {
 11393                           
 11394                           ;incstack = 0
 11395  003E58  D00E               	goto	l5165
 11396  003E5A                     l255:
 11397  003E5A  FFFF               	dw	65535	; assembler added errata NOP
 11398                           
 11399                           ;serial.c: 62:     if (RCSTAbits.OERR == 1) {
 11400  003E5C  A2AB               	btfss	4011,1,c	;volatile
 11401  003E5E  D00B               	goto	l5165
 11402                           
 11403                           ;serial.c: 63:       RCSTAbits.OERR = 0;
 11404  003E60  92AB               	bcf	4011,1,c	;volatile
 11405                           
 11406                           ;serial.c: 64:       RCSTAbits.CREN = 0;
 11407  003E62  98AB               	bcf	4011,4,c	;volatile
 11408                           
 11409                           ;serial.c: 65:       RCSTAbits.CREN = 1;
 11410  003E64  88AB               	bsf	4011,4,c	;volatile
 11411                           
 11412                           ;serial.c: 66:       _delay((unsigned long)((10)*(16000000/4000.0)));
 11413  003E66  0E27               	movlw	39
 11414  003E68  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 11415  003E6A  0EFC               	movlw	252
 11416  003E6C                     u5667:
 11417  003E6C  FFFF               	dw	65535	; errata NOP
 11418  003E6E  2EE8               	decfsz	wreg,f,c
 11419  003E70  D7FD               	bra	u5667
 11420  003E72  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 11421  003E74  D7FB               	bra	u5667
 11422  003E76                     l5165:
 11423  003E76  FFFF               	dw	65535	; assembler added errata NOP
 11424                           
 11425                           ;serial.c: 61:   while (RCIF == 0) {
 11426  003E78  AA9E               	btfss	3998,5,c	;volatile
 11427  003E7A  D7EF               	goto	l255
 11428                           
 11429                           ;serial.c: 69:   return RCREG1;
 11430  003E7C  50AE               	movf	4014,w,c	;volatile
 11431  003E7E  0012               	return		;funcret
 11432  003E80  FFFF               	dw	65535	; errata NOP
 11433  003E82                     __end_of_UARTRecieveChar:
 11434                           	opt callstack 0
 11435                           
 11436 ;; *************** function _Timer0_Init *****************
 11437 ;; Defined at:
 11438 ;;		line 8 in file "timer.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11452 ;;      Params:         0       0       0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0
 11455 ;;      Totals:         0       0       0       0       0       0       0
 11456 ;;Total ram usage:        0 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    2
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text61
 11467  003EAC                     __ptext61:
 11468                           	opt callstack 0
 11469  003EAC                     _Timer0_Init:
 11470                           	opt callstack 0
 11471  003EAC  FFFF               	dw	65535	; assembler added errata NOP
 11472                           
 11473                           ;timer.c: 9:  time_ms = 0;
 11474                           
 11475                           ;incstack = 0
 11476  003EAE  0E00               	movlw	0
 11477  003EB0  0100               	movlb	0	; () banked
 11478  003EB2  6FC5               	movwf	_time_ms& (0+255),b	;volatile
 11479  003EB4  0E00               	movlw	0
 11480  003EB6  6FC6               	movwf	(_time_ms+1)& (0+255),b	;volatile
 11481  003EB8  0E00               	movlw	0
 11482  003EBA  6FC7               	movwf	(_time_ms+2)& (0+255),b	;volatile
 11483  003EBC  0E00               	movlw	0
 11484  003EBE  6FC8               	movwf	(_time_ms+3)& (0+255),b	;volatile
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 11488  003EC0  9CD5               	bcf	4053,6,c	;volatile
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;timer.c: 11:  TMR0H = 0xFF;
 11492  003EC2  68D7               	setf	4055,c	;volatile
 11493                           
 11494                           ;timer.c: 12:  TMR0L = 0x34;
 11495  003EC4  0E34               	movlw	52
 11496  003EC6  6ED6               	movwf	4054,c	;volatile
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 11500  003EC8  94F2               	bcf	4082,2,c	;volatile
 11501                           
 11502                           ;timer.c: 14:  T0CON = 0x00;
 11503  003ECA  0E00               	movlw	0
 11504  003ECC  6ED5               	movwf	4053,c	;volatile
 11505                           
 11506                           ; BSR set to: 0
 11507  003ECE  0012               	return		;funcret
 11508  003ED0  FFFF               	dw	65535	; errata NOP
 11509  003ED2                     __end_of_Timer0_Init:
 11510                           	opt callstack 0
 11511                           
 11512 ;; *************** function _timingISR *****************
 11513 ;; Defined at:
 11514 ;;		line 31 in file "timer.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, status,2, status,0, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11528 ;;      Params:         0       0       0       0       0       0       0
 11529 ;;      Locals:         0       0       0       0       0       0       0
 11530 ;;      Temps:          0       0       0       0       0       0       0
 11531 ;;      Totals:         0       0       0       0       0       0       0
 11532 ;;Total ram usage:        0 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    1
 11535 ;; This function calls:
 11536 ;;		i2_Timer0_StartTimer
 11537 ;; This function is called by:
 11538 ;;		Interrupt level 2
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	intcode
 11543  000008                     __pintcode:
 11544                           	opt callstack 0
 11545  000008                     _timingISR:
 11546                           	opt callstack 0
 11547  000008  FFFF               	dw	65535	; assembler added errata NOP
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;incstack = 0
 11551  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11552                           
 11553                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11554  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11555  00000E  AAF2               	btfss	4082,5,c	;volatile
 11556  000010  D00D               	goto	i2l311
 11557                           
 11558                           ;timer.c: 33:   TMR0IF = 0;
 11559  000012  94F2               	bcf	4082,2,c	;volatile
 11560                           
 11561                           ;timer.c: 34:   time_ms++;
 11562  000014  0E01               	movlw	1
 11563  000016  0100               	movlb	0	; () banked
 11564  000018  27C5               	addwf	_time_ms& (0+255),f,b	;volatile
 11565  00001A  0E00               	movlw	0
 11566  00001C  23C6               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11567  00001E  23C7               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11568  000020  23C8               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;timer.c: 35:   TMR0H = 0xFF;
 11572  000022  68D7               	setf	4055,c	;volatile
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;timer.c: 36:   TMR0L = 0x34;
 11576  000024  0E34               	movlw	52
 11577  000026  6ED6               	movwf	4054,c	;volatile
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;timer.c: 37:   Timer0_StartTimer();
 11581  000028  EC36  F000         	call	i2_Timer0_StartTimer	;wreg free
 11582  00002C                     i2l311:
 11583  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11584  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11585  000030  0011               	retfie		f
 11586  000032  FFFF               	dw	65535	; errata NOP
 11587  000034                     __end_of_timingISR:
 11588                           	opt callstack 0
 11589                           
 11590 ;; *************** function i2_Timer0_StartTimer *****************
 11591 ;; Defined at:
 11592 ;;		line 21 in file "timer.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;		None
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  2    0[None  ] int 
 11599 ;; Registers used:
 11600 ;;		None
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11606 ;;      Params:         0       0       0       0       0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0
 11609 ;;      Totals:         0       0       0       0       0       0       0
 11610 ;;Total ram usage:        0 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; This function calls:
 11613 ;;		Nothing
 11614 ;; This function is called by:
 11615 ;;		_timingISR
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text63
 11620  00006C                     __ptext63:
 11621                           	opt callstack 0
 11622  00006C                     i2_Timer0_StartTimer:
 11623                           	opt callstack 0
 11624  00006C  FFFF               	dw	65535	; assembler added errata NOP
 11625                           
 11626                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11627                           
 11628                           ;incstack = 0
 11629  00006E  8ED5               	bsf	4053,7,c	;volatile
 11630                           
 11631                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11632  000070  0012               	return		;funcret
 11633  000072  FFFF               	dw	65535	; errata NOP
 11634  000074                     __end_ofi2_Timer0_StartTimer:
 11635                           	opt callstack 0
 11636                           
 11637                           	psect	rparam
 11638  0000                     
 11639                           	psect	temp
 11640  00007F                     btemp:
 11641                           	opt callstack 0
 11642  00007F                     	ds	1
 11643  0000                     int$flags	set	btemp
 11644  0000                     wtemp8	set	btemp+1
 11645  0000                     ttemp5	set	btemp+1
 11646  0000                     ttemp6	set	btemp+4
 11647  0000                     ttemp7	set	btemp+8
 11648                           tosu	equ	0xFFF
 11649                           tosh	equ	0xFFE
 11650                           tosl	equ	0xFFD
 11651                           stkptr	equ	0xFFC
 11652                           pclatu	equ	0xFFB
 11653                           pclath	equ	0xFFA
 11654                           pcl	equ	0xFF9
 11655                           tblptru	equ	0xFF8
 11656                           tblptrh	equ	0xFF7
 11657                           tblptrl	equ	0xFF6
 11658                           tablat	equ	0xFF5
 11659                           prodh	equ	0xFF4
 11660                           prodl	equ	0xFF3
 11661                           indf0	equ	0xFEF
 11662                           postinc0	equ	0xFEE
 11663                           postdec0	equ	0xFED
 11664                           preinc0	equ	0xFEC
 11665                           plusw0	equ	0xFEB
 11666                           fsr0h	equ	0xFEA
 11667                           fsr0l	equ	0xFE9
 11668                           wreg	equ	0xFE8
 11669                           indf1	equ	0xFE7
 11670                           postinc1	equ	0xFE6
 11671                           postdec1	equ	0xFE5
 11672                           preinc1	equ	0xFE4
 11673                           plusw1	equ	0xFE3
 11674                           fsr1h	equ	0xFE2
 11675                           fsr1l	equ	0xFE1
 11676                           bsr	equ	0xFE0
 11677                           indf2	equ	0xFDF
 11678                           postinc2	equ	0xFDE
 11679                           postdec2	equ	0xFDD
 11680                           preinc2	equ	0xFDC
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8


Data Sizes:
    Strings     211
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     60     125
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_144(CODE[3]), STR_140(CODE[3]), STR_135(CODE[3]), STR_131(CODE[3]), 
		 -> STR_126(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), STR_113(CODE[4]), 
		 -> STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[4]), 
		 -> STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[4]), 
		 -> STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), 
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_144(CODE[3]), STR_140(CODE[3]), STR_135(CODE[3]), STR_131(CODE[3]), 
		 -> STR_126(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), STR_113(CODE[4]), 
		 -> STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[4]), 
		 -> STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[4]), 
		 -> STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), 
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1770_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 26
		 -> STR_14(CODE[24]), STR_13(CODE[13]), STR_12(CODE[9]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_9(CODE[26]), STR_8(CODE[9]), STR_7(CODE[3]), 
		 -> STR_6(CODE[17]), STR_5(CODE[12]), STR_4(CODE[3]), STR_3(CODE[24]), 
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _write_SRAM->_int_to_char
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_SRAM
    _write_SRAM->_UARTSendString
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  167939
                                             52 BANK0      8     8      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                  _interrupt_disable
                   _interrupt_enable
                          _read_SRAM
                     _set_duty_cycle
                            _spiInit
                           _spiWrite
                         _write_SRAM
 ---------------------------------------------------------------------------------
 (1) _write_SRAM                                          14    14      0   57767
                                             38 BANK0     14    14      0
                           _ReadTime
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (2) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     316
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1    1003
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51547
                                             38 BANK0      8     6      2
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49562
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1708
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2     152
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_disable
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _set_duty_cycle
   _spiInit
   _spiWrite
   _write_SRAM
     _ReadTime
     _Timer0_StartTimer
     _Timer0_StopTimer
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     ___fltol
       _get_temp (ARG)
         _ADC_Init
         _ADC_Read
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
     ___lldiv
       _ReadTime (ARG)
     _get_temp
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3C      7D       4       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      14        0.0%
DATA                 0      0      FB      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 10 21:45:23 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                                      l255 3E5A  
                                                      l423 37E4  
                                                      l248 3F98  
                                                      l520 21C8  
                                                      l168 248A  
                                                      l441 1FBA  
                                                      l505 2806  
                                                      l522 21D2  
                                                      l362 3BAA  
                                                      l443 1FC4  
                                                      l507 2810  
                                                      l363 3B92  
                                                      l466 29C8  
                                                      l468 29D2  
                                                      l486 2FC8  
                                                      l582 1870  
                                                      l666 38D2  
                                                      l936 34B4  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 3D40  
                                                      _lcd 00BC  
                                                      _pad 37AE  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                         ?_UARTRecieveChar 0001  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             __CFG_LVP$OFF 000000  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     ?_abs 0013  
                                                     l1301 2D70  
                                                     l1314 3D6C  
                                                     l1317 3D76  
                                                     l1077 33C0  
                                                     l1253 1902  
                                                     l1270 1BBA  
                                                     l1262 1B2C  
                                                     l1087 36DC  
                                                     l1263 1B26  
                                                     l1184 1E22  
                                                     l1176 1F36  
                                                     l1168 1D56  
                                                     l1345 2C96  
                                                     l1257 1BF2  
                                                     l1193 1E9A  
                                                     l1169 1D2E  
                                                     l1194 1E94  
                                                     l4003 2352  
                                                     l1348 2CA0  
                                                     l1460 3B00  
                                                     l1445 3640  
                                                     l1294 2CE6  
                                                     l1391 37A8  
                                                     l1455 3AF6  
                                                     l4111 0752  
                                                     l4103 0742  
                                                     l4041 2BB8  
                                                     l4025 2B54  
                                                     l4201 0BD8  
                                                     l4121 07AE  
                                                     l1297 2DFC  
                                                     l4051 2C2E  
                                                     l4043 2BC2  
                                                     l4035 2BA6  
                                                     l4027 2B5A  
                                                     l4019 23D0  
                                                     l4211 0CB8  
                                                     l4115 075A  
                                                     l4107 074A  
                                                     l4045 2BCA  
                                                     l4301 10DA  
                                                     l4221 0D62  
                                                     l4133 0820  
                                                     l5015 3982  
                                                     l4047 2BF6  
                                                     l4071 35B0  
                                                     l4311 1146  
                                                     l4135 0840  
                                                     l4119 0768  
                                                     l4073 35C0  
                                                     l4153 0928  
                                                     l4137 0850  
                                                     l5019 39BE  
                                                     l4171 0A12  
                                                     l4155 0948  
                                                     l5035 387C  
                                                     l3541 371E  
                                                     l3701 31B4  
                                                     l4261 0F5C  
                                                     l4253 0EE8  
                                                     l4245 0E68  
                                                     l4229 0E12  
                                                     l4181 0AF2  
                                                     l4157 0958  
                                                     l5037 388A  
                                                     l3551 3C92  
                                                     l3711 3332  
                                                     l4423 170C  
                                                     l4351 1356  
                                                     l4335 1300  
                                                     l4327 1252  
                                                     l4319 11E0  
                                                     l4271 0FDA  
                                                     l4191 0B5C  
                                                     l4095 0722  
                                                     l5047 38C2  
                                                     l3561 3E36  
                                                     l3633 2E30  
                                                     l3713 3348  
                                                     l4409 1636  
                                                     l4281 101E  
                                                     l4177 0AB8  
                                                     l4097 0728  
                                                     l5073 3458  
                                                     l5057 3408  
                                                     l4601 1DA8  
                                                     l4513 1C74  
                                                     l3555 3CAA  
                                                     l3803 20EC  
                                                     l3723 33A8  
                                                     l3731 3662  
                                                     l4443 1816  
                                                     l4291 1048  
                                                     l4275 100A  
                                                     l4267 0FCE  
                                                     l4099 073A  
                                                     l5091 34A2  
                                                     l5083 3474  
                                                     l4611 1E10  
                                                     l5165 3E76  
                                                     l3581 37F0  
                                                     l3645 2E82  
                                                     l3661 2F10  
                                                     l3901 2FFC  
                                                     l3733 3678  
                                                     l4437 17D6  
                                                     l4381 1554  
                                                     l4453 1838  
                                                     l5085 3482  
                                                     l5077 346A  
                                                     l4525 1C9E  
                                                     l4517 1C7A  
                                                     ?_pad 0011  
                                                     l3751 3C7A  
                                                     l3559 3E30  
                                                     l3575 37CA  
                                                     l3647 2E98  
                                                     l3639 2E5A  
                                                     l3823 215C  
                                                     l3911 3046  
                                                     l4447 1824  
                                                     l4367 144A  
                                                     l4359 13D6  
                                                     l5431 2552  
                                                     l3585 380A  
                                                     l3761 3B2A  
                                                     l3665 2F38  
                                                     l3657 2EF8  
                                                     l3681 30F6  
                                                     l3905 301E  
                                                     l4473 3A10  
                                                     l4721 3B70  
                                                     l5409 24C6  
                                                     l3579 37DA  
                                                     l3827 2178  
                                                     l3915 3064  
                                                     l3739 36C4  
                                                     l4395 15D6  
                                                     l4475 3A38  
                                                     l4619 1E4A  
                                                     l4635 1E70  
                                                     l4555 1CDC  
                                                     l5443 25B2  
                                                     l5435 2572  
                                                     l5419 24E8  
                                                     l3589 383A  
                                                     l3693 3174  
                                                     l3685 3112  
                                                     l3677 30D0  
                                                     l3845 2A12  
                                                     l3933 2848  
                                                     l4813 1ACC  
                                                     l4629 1E62  
                                                     l4493 1C2C  
                                                     l5445 25BE  
                                                     l3759 3B1C  
                                                     l3687 3128  
                                                     l3775 1F98  
                                                     l3919 307E  
                                                     l3943 2936  
                                                     l4743 18A4  
                                                     l4663 1F0C  
                                                     l4655 1EE2  
                                                     l4591 1D8E  
                                                     l4567 1D3E  
                                                     l5439 2592  
                                                     l5391 2470  
                                                     l3697 318C  
                                                     l3793 1FF2  
                                                     l3857 2A9E  
                                                     l4761 18EA  
                                                     l4745 18AA  
                                                     l4593 1D94  
                                                     l4569 1D44  
                                                     l4489 1C26  
                                                     l5449 25DE  
                                                     l3875 2B12  
                                                     l4843 1B92  
                                                     l4819 1AEC  
                                                     l4771 1924  
                                                     l4763 18F0  
                                                     l4747 18BC  
                                                     l4667 1F16  
                                                     l5395 2482  
                                                     l5379 2430  
                                                     l4685 3906  
                                                     l3789 1FE2  
                                                     l3981 223C  
                                                     l3973 2218  
                                                     l4669 1F1A  
                                                     l4909 2DEA  
                                                     l5389 2466  
                                                     l4687 3916  
                                                     l3887 2F8A  
                                                     l3967 21E8  
                                                     l4855 1BDC  
                                                     l4839 1B72  
                                                     l5399 2492  
                                                     l4689 3964  
                                                     l3897 2FE2  
                                                     l4881 2D20  
                                                     l4873 2CF8  
                                                     l3995 22D6  
                                                     l4891 2D98  
                                                     l4883 2D2E  
                                                     l4893 2DA6  
                                                     l4885 2D56  
                                                     l4879 2D18  
                                                     STR_1 06A3  
                                                     STR_2 06D1  
                                                     STR_3 061B  
                                                     STR_4 06CE  
                                                     STR_5 0669  
                                                     STR_6 064B  
                                                     STR_7 06CE  
                                                     STR_8 067E  
                                                     STR_9 0601  
                                                     u3000 3ADA  
                                                     u3010 3ADE  
                                                     u3030 3E16  
                                                     u3040 3E1A  
                                                     u3200 334E  
                                                     u4100 09A6  
                                                     u3150 312E  
                                                     u3230 367E  
                                                     u4030 088C  
                                                     u3071 2E62  
                                                     u3320 1FAE  
                                                     u4040 0890  
                                                     u3090 2E9E  
                                                     u3410 2144  
                                                     u4210 0D12  
                                                     u4130 0A6C  
                                                     u4050 089E  
                                                     u3260 3C76  
                                                     u3340 1FDA  
                                                     u3500 2AE6  
                                                     u5020 1910  
                                                     u3181 3312  
                                                     u3350 20FC  
                                                     u4310 1108  
                                                     u4150 0B4C  
                                                     u5110 1B82  
                                                     u5030 1A8C  
                                                     u3280 1F66  
                                                     u3440 29BC  
                                                     u4400 14A4  
                                                     u4080 0994  
                                                     u5120 1BA2  
                                                     u5200 2DB2  
                                                     u3370 211E  
                                                     u3290 1F6A  
                                                     u3450 2A78  
                                                     u3610 3094  
                                                     u4170 0B96  
                                                     u4090 0998  
                                                     u3371 211C  
                                                     u3531 2F6A  
                                                     u5035 1A80  
                                                     u3380 212E  
                                                     u3460 2AAE  
                                                     u2900 3DAA  
                                                     u3700 21BC  
                                                     u4420 15AE  
                                                     u4260 0F16  
                                                     u3390 2134  
                                                     u3630 27FA  
                                                     u4190 0C32  
                                                     u5070 1B1E  
                                                     u3455 2A64  
                                                     u2840 3714  
                                                     u3480 2AD0  
                                                     u3800 2364  
                                                     u3720 2238  
                                                     u4440 1610  
                                                     u5320 3890  
                                                     u4600 1D00  
                                                     u3490 2AE0  
                                                     u3730 2272  
                                                     u4610 1D10  
                                                     u3900 2C66  
                                                     u2860 3760  
                                                     u3580 3012  
                                                     u3660 2962  
                                                     u3820 2386  
                                                     u3740 2276  
                                                     u4460 1690  
                                                     u4380 1404  
                                                     u5340 33F4  
                                                     u4620 1D14  
                                                     u3661 2960  
                                                     u3821 2384  
                                                     u2950 3D50  
                                                     u3670 2972  
                                                     u3830 2396  
                                                     u5350 342A  
                                                     u5280 39B4  
                                                     u3680 2978  
                                                     u2960 3DDE  
                                                     u3840 239C  
                                                     u3760 22B0  
                                                     u4480 1766  
                                                     u4800 1E8C  
                                                     u5290 39EE  
                                                     u2970 3DE2  
                                                     u2890 3DA6  
                                                     u3770 22B4  
                                                     u4650 1D60  
                                                     u5355 341E  
                                                     u2980 3D32  
                                                     u4740 1E36  
                                                     u5540 2544  
                                                     _RCIF 007CF5  
                                                     u3870 2BA2  
                                                     u2990 3D36  
                                                     u3790 232C  
                                                     u5390 348A  
                                                     u5550 2564  
                                                     u5287 39AA  
                                                     u5560 2584  
                                                     u5297 39E4  
                                                     u3890 2C62  
                                                     u3970 3616  
                                                     u5570 25A4  
                                                     u3795 2318  
                                                     u4860 1EF0  
                                                     u4780 1E76  
                                                     u5647 25CC  
                                                     u5657 3B84  
                                                     u5667 3E6C  
                                         ??_initialize_PWM 0003  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 00D6  
                                       initialize_PWM@freq 0001  
                                                     _atoi 2B40  
                                                     _ctoa 3B06  
                                                     _main 23FE  
                                                     _dtoa 1F3C  
                                                     _prec 00CF  
                                                     _otoa 29A6  
                                                     _nout 00CB  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr0h 000FEA  
                                                     fsr1h 000FE2  
                                                     indf0 000FEF  
                                                     fsr2h 000FDA  
                                                     fsr0l 000FE9  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2F5E  
                                                     btemp 007F  
                                                     _utoa 27E4  
                                                     _xtoa 21A6  
                                         __end_of_ADC_Init 3FFE  
                                         __end_of_ADC_Read 3BB0  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                    write_SRAM@temperature 00B0  
                                            __CFG_OSC$RCIO 000000  
                                        int_to_char@result 0092  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                 __end_of_interrupt_enable 3FF0  
                                            __CFG_OSCS$OFF 000000  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2F5E  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1F3C  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 31DA  
                                                    STR_10 0675  
                                                    STR_11 065C  
                                                    STR_12 0675  
                                                    STR_13 065C  
                                                    STR_21 068F  
                                                    STR_30 0690  
                                                    STR_14 0633  
                                                    STR_15 068B  
                                                    STR_17 068B  
                                                    STR_33 06AD  
                                                    STR_26 068C  
                                                    STR_42 06B0  
                                                    STR_35 06AD  
                                                    STR_51 0697  
                                                    STR_19 068F  
                                                    STR_44 06B0  
                                                    STR_53 0697  
                                                    STR_61 06BF  
                                                    STR_37 06B3  
                                                    STR_46 06B6  
                                                    STR_39 06B3  
                                                    STR_63 06BF  
                                                    STR_71 0693  
                                                    STR_48 06B6  
                                                    STR_73 0693  
                                                    STR_81 06B9  
                                                    STR_58 0698  
                                                    STR_66 06C2  
                                                    STR_83 06B9  
                                                    STR_91 069B  
                                                    STR_68 06C2  
                                                    STR_93 069B  
                                                    STR_78 0694  
                                                    STR_86 06BC  
                                                    STR_88 06BC  
                                          __end_of___flmul 1BF8  
                                                    STR_98 069C  
                                                    ?_otoa 001C  
                                          __end_of___flsub 3BFA  
                                          __end_of___fltol 34BA  
                                                    ?_stoa 000A  
                                          __end_of___lldiv 38E8  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 33E6  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 3702  
                                                    i2l311 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 3FE0  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 38E8  
                                                    _flags 00D1  
                                                    _getch 0052  
                                                    _errno 00C9  
                                                    _fputc 3702  
                                          __end_of_isalpha 3D40  
                                                    _fputs 3C86  
                                          __end_of_isdigit 3E24  
                                          __end_of_read_op 3F38  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 00CD  
                                                    ctoa@c 001E  
                                                    _putch 007C  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 3DB4  
                                          __end_of_isspace 3C86  
                                          __end_of_isupper 3DEC  
                                          __end_of_spiInit 3F50  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 3AB0  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 3646  
                                          __end_of_toupper 3B06  
                                         ___lodiv@dividend 0001  
                                             _toupper$1924 000D  
                                          __initialization 3CC8  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2CA6  
                                             __end_of_ctoa 3B5C  
                                             __end_of_main 2604  
                                             __end_of_dtoa 21A6  
                                             __end_of_otoa 2B40  
                                             __end_of_stoa 30A2  
                                             __end_of_utoa 29A6  
                                             __end_of_xtoa 23FE  
                                         __end_of_ReadTime 3F7E  
                                       int_to_char@the_num 009C  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00B4  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   ?_fputs 000A  
                                                   STR_103 06A4  
                                                   STR_111 069F  
                                                   STR_113 069F  
                                                   STR_122 06A0  
                                                   STR_106 06C5  
                                                   _ADRESH 000FC4  
                                                   STR_131 06C8  
                                                   STR_115 0687  
                                                   STR_108 06C5  
                                                   STR_140 06CB  
                                                   STR_117 0687  
                                                   STR_133 06A7  
                                                   STR_126 0688  
                                                   STR_142 06AA  
                                                   _ADRESL 000FC3  
                                                   STR_135 06A7  
                                                   STR_144 06AA  
                                                   STR_129 06C8  
                                                   STR_138 06CB  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _TMR2IE 007CE9  
                                           __CFG_WDTPS$128 000000  
                                                   _TMR2IP 007CF9  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2E02  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0002  
                                      i2_Timer0_StartTimer 006C  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 3584  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3E82  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lldiv 000D  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 3CEE  
                                  __size_of_UARTSendString 0088  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                        main@input_address 00B6  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 3E24  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                         __end_of_spiWrite 0052  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                ??_spiInit 0004  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 3A5A  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3EF4  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 3CF6  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                        ?_Timer0_StopTimer 0001  
                                           __pcstackCOMRAM 0001  
                                       ??_Timer0_StopTimer 0001  
                                             __pidataBANK0 0074  
                                            __end_of_fgetc 3972  
                                            __end_of_getch 005C  
                                            __end_of_fputc 37AE  
                                            __end_of_fputs 3CC8  
                                      __end_of_Timer0_Init 3ED2  
                                            __end_of_putch 0082  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                  __size_of_set_duty_cycle 0022  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 00BC  
                                                ?_ReadTime 0001  
                                       __size_of_read_SRAM 0130  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3FBA  
                                            _initialize_TX 3FA6  
                                          _write_SRAM$2202 00A8  
                                          _write_SRAM$2203 00AC  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                        ?_interrupt_enable 0001  
                                                  ?_strlen 0001  
                                       ??_interrupt_enable 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                  _SSPSTAT 000FC7  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                           main@masterTemp 00B8  
                                               ??_ReadTime 0005  
                                 __size_of_UARTRecieveChar 002C  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 3EAC  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                ?_spiWrite 0001  
                                                  ___aodiv 2E02  
                                                  ___fladd 1BF8  
                                                  ___aomod 30A2  
                                                  ___flmul 1876  
                                                  ___flsub 3BB0  
                                                  ___fltol 33E6  
                                                  ___lldiv 3858  
                                          __size_of___wmul 002A  
                                                  ___lodiv 330A  
                                                  ___lomod 3646  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 3972  
                                                  _address 00D3  
                                                  __pcinit 3CC8  
                                                  __ramtop 0600  
                                                  __ptext0 23FE  
                                                  __ptext1 2604  
                                                  __ptext2 3ED2  
                                                  __ptext3 34BA  
                                                  __ptext4 2CA6  
                                                  __ptext5 3BB0  
                                                  __ptext6 1BF8  
                                                  __ptext7 1876  
                                                  __ptext8 3B5C  
                                                  __ptext9 3FF0  
                                                ?_write_op 0001  
                                                  _getchar 3FCE  
                                                _T0CONbits 000FD5  
                                        __end_of_read_SRAM 330A  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 3D04  
                                                  _isdigit 3DEC  
                                                  _read_op 3F16  
                                               ??___xxtofl 0005  
                                                  _islower 3D7C  
                                                  _isspace 3C42  
                                                  _isupper 3DB4  
                                                  fgetc@fp 0003  
                                                  _spiInit 3F38  
                                                  _time_ms 00C5  
                                                  atoi@neg 000E  
                                                  _sprintf 3A5A  
                                               ??_get_temp 0034  
                                                  _strncmp 3584  
                                                  _toupper 3AB0  
                                     end_of_initialization 3CF6  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                          ___lldiv@divisor 0009  
                                        __end_of_timingISR 0034  
                                          ___lldiv@counter 0011  
                                        __end_of_vfpfcnvrt 1876  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 39FA  
                                               ??_spiWrite 0001  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                  __size_of_initialize_PWM 0018  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                           _set_duty_cycle 3EF4  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 0064  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                              spiWrite@dat 0001  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00A0  
                                        ??_UARTRecieveChar 0001  
                                               _write_SRAM 2604  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 3EAC  
                                              vfpfcnvrt@vp 0067  
                                   __end_of_set_duty_cycle 3F16  
                                __size_of_Timer0_StopTimer 0008  
                                __end_of_Timer0_StartTimer 006C  
                                     read_SRAM@stored_temp 00AA  
                                           __end_of_strlen 3E56  
                                      start_initialization 3CC8  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 3D7C  
                                              __end_of_pad 3858  
                                       set_duty_cycle@mask 0003  
                                        __size_of_ReadTime 0016  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00F6  
                                     __end_of_UARTSendChar 3FA6  
                              __end_ofi2_Timer0_StartTimer 0074  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                          ?_set_duty_cycle 0001  
                                    set_duty_cycle@lower_2 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 007E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 0080  
                                    set_duty_cycle@upper_8 0002  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                __size_of_interrupt_enable 0010  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1767 0010  
                                                _atoi$1768 0014  
                                                _atoi$1769 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1121 002E  
                                            UARTSendChar@c 0001  
                                           _initialize_PWM 3F50  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lldiv 0005  
                                                 ?___lodiv 0001  
                                              ?_write_SRAM 0001  
                                                 ?___lomod 0001  
                                        __size_of_spiWrite 000C  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                        _interrupt_disable 0038  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                                 _ADC_Init 3FF0  
                                                 _ADC_Read 3B5C  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                       ?_interrupt_disable 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                 ?_spiInit 0001  
                                                _read_SRAM 31DA  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 0080  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                      ??_interrupt_disable 0001  
                                     spiInit@sTransmitEdge 0003  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00A0  
                                          UARTSendString@i 00A4  
                                   __end_of_initialize_PWM 3F68  
                                       spiInit@sDataSample 0001  
                                      __end_of_int_to_char 3C42  
                                      write_SRAM@curr_time 00B2  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 00C1  
                                                _timingISR 0008  
                                                _vfpfcnvrt 06D6  
                                __end_of_interrupt_disable 0046  
                                                _xtoa$1157 002F  
                                                _xtoa$1158 0031  
                                        ___wmul@multiplier 0001  
                                         _Timer0_StopTimer 005C  
                                                main@input 00BB  
                                             _isspace$1804 0007  
                                               ?_read_SRAM 00A6  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 3CDC  
                                      __size_of_write_SRAM 01E0  
                                          _UARTRecieveChar 3E56  
                                                 _ReadTime 3F68  
                                         ??_UARTSendString 00A2  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3F92  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lldiv 0090  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 0082  
                                                 ___xxtofl 2CA6  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 3858  
                                                 __ptext11 33E6  
                                                 __ptext20 3BFA  
                                                 __ptext12 005C  
                                                 __ptext21 3A5A  
                                                 __ptext13 0064  
                                                 __ptext30 3646  
                                                 __ptext22 39FA  
                                                 __ptext14 3F68  
                                                 __ptext31 330A  
                                                 __ptext23 06D6  
                                                 __ptext15 0046  
                                                 __ptext40 37AE  
                                                 __ptext32 3584  
                                                 __ptext24 21A6  
                                                 __ptext16 3F38  
                                                 __ptext41 3E24  
                                                 __ptext33 2F5E  
                                                 __ptext25 3AB0  
                                                 __ptext17 3EF4  
                                                 __ptext50 38E8  
                                                 __ptext42 3C86  
                                                 __ptext34 29A6  
                                                 __ptext26 3D7C  
                                                 __ptext18 31DA  
                                                 __ptext51 0052  
                                                 __ptext43 3702  
                                                 __ptext35 1F3C  
                                                 __ptext27 3DB4  
                                                 __ptext19 3F16  
                                                 __ptext60 3E56  
                                                 __ptext52 3972  
                                                 __ptext44 007C  
                                                 __ptext36 3D40  
                                                 __ptext28 3D04  
                                                 __ptext61 3EAC  
                                                 __ptext53 3F7E  
                                                 __ptext45 2B40  
                                                 __ptext37 30A2  
                                                 __ptext29 27E4  
                                                 __ptext54 3F92  
                                                 __ptext46 3C42  
                                                 __ptext38 2E02  
                                                 __ptext63 006C  
                                                 __ptext55 3FE0  
                                                 __ptext47 3DEC  
                                                 __ptext39 3B06  
                                                 __ptext56 0038  
                                                 __ptext48 3E82  
                                                 __ptext57 3FA6  
                                                 __ptext49 3FCE  
                                                 __ptext58 3FBA  
                                                 __ptext59 3F50  
                                         __size_of_isupper 0038  
                                         __size_of_spiInit 0018  
                                                 _get_temp 34BA  
                                         _interrupt_enable 3FE0  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                             _UARTSendChar 3F92  
                                              _int_to_char 3BFA  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 0206  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3FCE  
                                    __end_of_initialize_TX 3FBA  
                                                stoa@F1152 00F6  
                                                 _spiWrite 0046  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                             spiInit@sType 0004  
                                           read_op@address 0001  
                                         ??_set_duty_cycle 0002  
                                                 _ungetbuf 00D5  
                                                 _ungetcnt 007E  
                                                 _vfprintf 39FA  
                                         read_SRAM@address 00A6  
                               __size_of_interrupt_disable 000E  
                                                 main@temp 00B9  
                                        spiInit@sClockIdle 0002  
                                    read_SRAM@time_elapsed 00AC  
                                         ___aomod@dividend 0001  
                                                 _write_op 3ED2  
                                           _vfpfcnvrt$1172 005B  
                                           _vfpfcnvrt$1173 005D  
                                               _INTCONbits 000FF2  
                                  __end_of_UARTRecieveChar 3E82  
                                              ??_read_SRAM 00A8  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 3FFE  
                                                sprintf@ap 0090  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                         ___lldiv@dividend 0005  
                                              _UARTNewLine 3F7E  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                             ??_write_SRAM 00A6  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 008A  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 0080  
                                         ___lldiv@quotient 000D  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                       __end_of_write_SRAM 27E4  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                 __end_of_Timer0_StopTimer 0064  
                                             ___aomod@sign 0012  
