

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar  3 21:59:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F452 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  000040                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for stoa@F1152
   119  000040  28                 	db	40
   120  000041  6E                 	db	110
   121  000042  75                 	db	117
   122  000043  6C                 	db	108
   123  000044  6C                 	db	108
   124  000045  29                 	db	41
   125  000046  00                 	db	0
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TRISA	set	3986
   128  0000                     _PORTA	set	3968
   129  0000                     _PORTD	set	3971
   130  0000                     _PORTB	set	3969
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISC	set	3988
   134  0000                     _RC0	set	31760
   135  0000                     _RB5	set	31757
   136  0000                     _CCP1CON	set	4029
   137  0000                     _CCPR1L	set	4030
   138  0000                     _PR2	set	4043
   139  0000                     _T2CON	set	4042
   140  0000                     _ADRESL	set	4035
   141  0000                     _ADRESH	set	4036
   142  0000                     _ADCON0	set	4034
   143  0000                     _SSPBUF	set	4041
   144  0000                     _SSPCON1	set	4038
   145  0000                     _SSPSTATbits	set	4039
   146  0000                     _ADCON1	set	4033
   147  0000                     _RCREG1	set	4014
   148  0000                     _TXREG	set	4013
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _RCSTA	set	4011
   151  0000                     _SPBRG	set	4015
   152  0000                     _TXSTAbits	set	4012
   153  0000                     _RCONbits	set	4048
   154  0000                     _GO_nDONE	set	32274
   155  0000                     _RCIF	set	31989
   156  0000                     _TMR2IP	set	31993
   157  0000                     _TMR2IE	set	31977
   158  0000                     _T0CON	set	4053
   159  0000                     _TMR0L	set	4054
   160  0000                     _TMR0H	set	4055
   161  0000                     _T0CONbits	set	4053
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _TMR0IE	set	32661
   165  0000                     _TMR0IF	set	32658
   166                           
   167                           	psect	smallconst
   168  000600                     __psmallconst:
   169                           	opt callstack 0
   170  000600  00                 	db	0
   171  000601                     STR_3:
   172  000601  52                 	db	82	;'R'
   173  000602  65                 	db	101	;'e'
   174  000603  61                 	db	97	;'a'
   175  000604  64                 	db	100	;'d'
   176  000605  79                 	db	121	;'y'
   177  000606  20                 	db	32
   178  000607  66                 	db	102	;'f'
   179  000608  6F                 	db	111	;'o'
   180  000609  72                 	db	114	;'r'
   181  00060A  20                 	db	32
   182  00060B  65                 	db	101	;'e'
   183  00060C  76                 	db	118	;'v'
   184  00060D  65                 	db	101	;'e'
   185  00060E  6E                 	db	110	;'n'
   186  00060F  20                 	db	32
   187  000610  61                 	db	97	;'a'
   188  000611  64                 	db	100	;'d'
   189  000612  64                 	db	100	;'d'
   190  000613  72                 	db	114	;'r'
   191  000614  65                 	db	101	;'e'
   192  000615  73                 	db	115	;'s'
   193  000616  73                 	db	115	;'s'
   194  000617  20                 	db	32
   195  000618  69                 	db	105	;'i'
   196  000619  6E                 	db	110	;'n'
   197  00061A  70                 	db	112	;'p'
   198  00061B  75                 	db	117	;'u'
   199  00061C  74                 	db	116	;'t'
   200  00061D  00                 	db	0
   201  00061E                     STR_10:
   202  00061E  44                 	db	68	;'D'
   203  00061F  6F                 	db	111	;'o'
   204  000620  6E                 	db	110	;'n'
   205  000621  65                 	db	101	;'e'
   206  000622  20                 	db	32
   207  000623  72                 	db	114	;'r'
   208  000624  65                 	db	101	;'e'
   209  000625  61                 	db	97	;'a'
   210  000626  64                 	db	100	;'d'
   211  000627  69                 	db	105	;'i'
   212  000628  6E                 	db	110	;'n'
   213  000629  67                 	db	103	;'g'
   214  00062A  20                 	db	32
   215  00062B  66                 	db	102	;'f'
   216  00062C  72                 	db	114	;'r'
   217  00062D  6F                 	db	111	;'o'
   218  00062E  6D                 	db	109	;'m'
   219  00062F  20                 	db	32
   220  000630  6D                 	db	109	;'m'
   221  000631  65                 	db	101	;'e'
   222  000632  6D                 	db	109	;'m'
   223  000633  6F                 	db	111	;'o'
   224  000634  72                 	db	114	;'r'
   225  000635  79                 	db	121	;'y'
   226  000636  2E                 	db	46
   227  000637  00                 	db	0
   228  000638                     STR_4:
   229  000638  54                 	db	84	;'T'
   230  000639  65                 	db	101	;'e'
   231  00063A  6D                 	db	109	;'m'
   232  00063B  70                 	db	112	;'p'
   233  00063C  65                 	db	101	;'e'
   234  00063D  72                 	db	114	;'r'
   235  00063E  61                 	db	97	;'a'
   236  00063F  74                 	db	116	;'t'
   237  000640  75                 	db	117	;'u'
   238  000641  72                 	db	114	;'r'
   239  000642  65                 	db	101	;'e'
   240  000643  20                 	db	32
   241  000644  61                 	db	97	;'a'
   242  000645  74                 	db	116	;'t'
   243  000646  20                 	db	32
   244  000647  61                 	db	97	;'a'
   245  000648  64                 	db	100	;'d'
   246  000649  64                 	db	100	;'d'
   247  00064A  72                 	db	114	;'r'
   248  00064B  65                 	db	101	;'e'
   249  00064C  73                 	db	115	;'s'
   250  00064D  73                 	db	115	;'s'
   251  00064E  20                 	db	32
   252  00064F  00                 	db	0
   253  000650                     STR_15:
   254  000650  44                 	db	68	;'D'
   255  000651  6F                 	db	111	;'o'
   256  000652  6E                 	db	110	;'n'
   257  000653  65                 	db	101	;'e'
   258  000654  20                 	db	32
   259  000655  77                 	db	119	;'w'
   260  000656  72                 	db	114	;'r'
   261  000657  69                 	db	105	;'i'
   262  000658  74                 	db	116	;'t'
   263  000659  69                 	db	105	;'i'
   264  00065A  6E                 	db	110	;'n'
   265  00065B  67                 	db	103	;'g'
   266  00065C  20                 	db	32
   267  00065D  74                 	db	116	;'t'
   268  00065E  6F                 	db	111	;'o'
   269  00065F  20                 	db	32
   270  000660  6D                 	db	109	;'m'
   271  000661  65                 	db	101	;'e'
   272  000662  6D                 	db	109	;'m'
   273  000663  6F                 	db	111	;'o'
   274  000664  72                 	db	114	;'r'
   275  000665  79                 	db	121	;'y'
   276  000666  2E                 	db	46
   277  000667  00                 	db	0
   278  000668                     STR_7:
   279  000668  54                 	db	84	;'T'
   280  000669  69                 	db	105	;'i'
   281  00066A  6D                 	db	109	;'m'
   282  00066B  65                 	db	101	;'e'
   283  00066C  20                 	db	32
   284  00066D  61                 	db	97	;'a'
   285  00066E  74                 	db	116	;'t'
   286  00066F  20                 	db	32
   287  000670  61                 	db	97	;'a'
   288  000671  64                 	db	100	;'d'
   289  000672  64                 	db	100	;'d'
   290  000673  72                 	db	114	;'r'
   291  000674  65                 	db	101	;'e'
   292  000675  73                 	db	115	;'s'
   293  000676  73                 	db	115	;'s'
   294  000677  20                 	db	32
   295  000678  00                 	db	0
   296  000679                     STR_12:
   297  000679  20                 	db	32
   298  00067A  74                 	db	116	;'t'
   299  00067B  6F                 	db	111	;'o'
   300  00067C  20                 	db	32
   301  00067D  61                 	db	97	;'a'
   302  00067E  64                 	db	100	;'d'
   303  00067F  64                 	db	100	;'d'
   304  000680  72                 	db	114	;'r'
   305  000681  65                 	db	101	;'e'
   306  000682  73                 	db	115	;'s'
   307  000683  73                 	db	115	;'s'
   308  000684  20                 	db	32
   309  000685  00                 	db	0
   310  000686                     STR_6:
   311  000686  20                 	db	32
   312  000687  64                 	db	100	;'d'
   313  000688  65                 	db	101	;'e'
   314  000689  67                 	db	103	;'g'
   315  00068A  72                 	db	114	;'r'
   316  00068B  65                 	db	101	;'e'
   317  00068C  65                 	db	101	;'e'
   318  00068D  73                 	db	115	;'s'
   319  00068E  20                 	db	32
   320  00068F  43                 	db	67	;'C'
   321  000690  20                 	db	32
   322  000691  00                 	db	0
   323  000692                     STR_11:
   324  000692  57                 	db	87	;'W'
   325  000693  72                 	db	114	;'r'
   326  000694  69                 	db	105	;'i'
   327  000695  74                 	db	116	;'t'
   328  000696  69                 	db	105	;'i'
   329  000697  6E                 	db	110	;'n'
   330  000698  67                 	db	103	;'g'
   331  000699  20                 	db	32
   332  00069A  00                 	db	0
   333  00069B                     STR_9:
   334  00069B  20                 	db	32
   335  00069C  6D                 	db	109	;'m'
   336  00069D  69                 	db	105	;'i'
   337  00069E  6E                 	db	110	;'n'
   338  00069F  75                 	db	117	;'u'
   339  0006A0  74                 	db	116	;'t'
   340  0006A1  65                 	db	101	;'e'
   341  0006A2  73                 	db	115	;'s'
   342  0006A3  00                 	db	0
   343  0006A4                     STR_116:
   344  0006A4  68                 	db	104	;'h'
   345  0006A5  68                 	db	104	;'h'
   346  0006A6  58                 	db	88	;'X'
   347  0006A7  00                 	db	0
   348  0006A8                     STR_16:
   349  0006A8  68                 	db	104	;'h'
   350  0006A9  68                 	db	104	;'h'
   351  0006AA  64                 	db	100	;'d'
   352  0006AB  00                 	db	0
   353  0006AC                     STR_20:
   354  0006AC  68                 	db	104	;'h'
   355  0006AD  68                 	db	104	;'h'
   356  0006AE  69                 	db	105	;'i'
   357  0006AF  00                 	db	0
   358  0006B0                     STR_72:
   359  0006B0  68                 	db	104	;'h'
   360  0006B1  68                 	db	104	;'h'
   361  0006B2  6E                 	db	110	;'n'
   362  0006B3  00                 	db	0
   363  0006B4                     STR_52:
   364  0006B4  68                 	db	104	;'h'
   365  0006B5  68                 	db	104	;'h'
   366  0006B6  6F                 	db	111	;'o'
   367  0006B7  00                 	db	0
   368  0006B8                     STR_92:
   369  0006B8  68                 	db	104	;'h'
   370  0006B9  68                 	db	104	;'h'
   371  0006BA  75                 	db	117	;'u'
   372  0006BB  00                 	db	0
   373  0006BC                     STR_112:
   374  0006BC  68                 	db	104	;'h'
   375  0006BD  68                 	db	104	;'h'
   376  0006BE  78                 	db	120	;'x'
   377  0006BF  00                 	db	0
   378  0006C0                     STR_1:
   379  0006C0  25                 	db	37
   380  0006C1  6C                 	db	108	;'l'
   381  0006C2  75                 	db	117	;'u'
   382  0006C3  00                 	db	0
   383  0006C4                     STR_134:
   384  0006C4  6C                 	db	108	;'l'
   385  0006C5  58                 	db	88	;'X'
   386  0006C6  00                 	db	0
   387  0006C7                     STR_143:
   388  0006C7  7A                 	db	122	;'z'
   389  0006C8  58                 	db	88	;'X'
   390  0006C9  00                 	db	0
   391  0006CA                     STR_34:
   392  0006CA  6C                 	db	108	;'l'
   393  0006CB  64                 	db	100	;'d'
   394  0006CC  00                 	db	0
   395  0006CD                     STR_43:
   396  0006CD  7A                 	db	122	;'z'
   397  0006CE  64                 	db	100	;'d'
   398  0006CF  00                 	db	0
   399  0006D0                     STR_38:
   400  0006D0  6C                 	db	108	;'l'
   401  0006D1  69                 	db	105	;'i'
   402  0006D2  00                 	db	0
   403  0006D3                     STR_47:
   404  0006D3  7A                 	db	122	;'z'
   405  0006D4  69                 	db	105	;'i'
   406  0006D5  00                 	db	0
   407  0006D6                     STR_82:
   408  0006D6  6C                 	db	108	;'l'
   409  0006D7  6E                 	db	110	;'n'
   410  0006D8  00                 	db	0
   411  0006D9                     STR_87:
   412  0006D9  7A                 	db	122	;'z'
   413  0006DA  6E                 	db	110	;'n'
   414  0006DB  00                 	db	0
   415  0006DC                     STR_62:
   416  0006DC  6C                 	db	108	;'l'
   417  0006DD  6F                 	db	111	;'o'
   418  0006DE  00                 	db	0
   419  0006DF                     STR_67:
   420  0006DF  7A                 	db	122	;'z'
   421  0006E0  6F                 	db	111	;'o'
   422  0006E1  00                 	db	0
   423  0006E2                     STR_107:
   424  0006E2  7A                 	db	122	;'z'
   425  0006E3  75                 	db	117	;'u'
   426  0006E4  00                 	db	0
   427  0006E5                     STR_130:
   428  0006E5  6C                 	db	108	;'l'
   429  0006E6  78                 	db	120	;'x'
   430  0006E7  00                 	db	0
   431  0006E8                     STR_139:
   432  0006E8  7A                 	db	122	;'z'
   433  0006E9  78                 	db	120	;'x'
   434  0006EA  00                 	db	0
   435  0006EB                     STR_5:
   436  0006EB  3A                 	db	58	;':'
   437  0006EC  20                 	db	32
   438  0006ED  00                 	db	0
   439  0006EE  25                 	db	37
   440  0006EF  64                 	db	100	;'d'
   441  0006F0  00                 	db	0
   442  0000                     
   443                           ; #config settings
   444  0006F1  00                 	db	0	; dummy byte at the end
   445  0000                     
   446                           	psect	cinit
   447  003CBA                     __pcinit:
   448                           	opt callstack 0
   449  003CBA                     start_initialization:
   450                           	opt callstack 0
   451  003CBA                     __initialization:
   452                           	opt callstack 0
   453                           
   454                           ; Initialize objects allocated to BANK0 (7 bytes)
   455                           ; load TBLPTR registers with __pidataBANK0
   456  003CBA  0E40               	movlw	low __pidataBANK0
   457  003CBC  6EF6               	movwf	tblptrl,c
   458  003CBE  0E00               	movlw	high __pidataBANK0
   459  003CC0  6EF7               	movwf	tblptrh,c
   460  003CC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   461  003CC4  6EF8               	movwf	tblptru,c
   462  003CC6  EE00  F0F5         	lfsr	0,__pdataBANK0
   463  003CCA  EE10 F007          	lfsr	1,7
   464  003CCE                     copy_data0:
   465  003CCE  0009               	tblrd		*+
   466  003CD0  CFF5 FFEE          	movff	tablat,postinc0
   467  003CD4  50E5               	movf	postdec1,w,c
   468  003CD6  50E1               	movf	fsr1l,w,c
   469  003CD8  E1FA               	bnz	copy_data0
   470                           
   471                           ; Clear objects allocated to BANK0 (58 bytes)
   472  003CDA  EE00  F0BB         	lfsr	0,__pbssBANK0
   473  003CDE  0E3A               	movlw	58
   474  003CE0                     clear_0:
   475  003CE0  6AEE               	clrf	postinc0,c
   476  003CE2  06E8               	decf	wreg,f,c
   477  003CE4  E1FD               	bnz	clear_0
   478                           
   479                           ; Clear objects allocated to COMRAM (1 bytes)
   480  003CE6  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   481  003CE8                     end_of_initialization:
   482                           	opt callstack 0
   483  003CE8                     __end_of__initialization:
   484                           	opt callstack 0
   485  003CE8  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   486  003CEA  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   487  003CEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   488  003CEE  6EF8               	movwf	tblptru,c
   489  003CF0  0100               	movlb	0
   490  003CF2  EF00  F013         	goto	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMRAM
   493  00007E                     __pbssCOMRAM:
   494                           	opt callstack 0
   495  00007E                     _ungetcnt:
   496                           	opt callstack 0
   497  00007E                     	ds	1
   498                           
   499                           	psect	bssBANK0
   500  0000BB                     __pbssBANK0:
   501                           	opt callstack 0
   502  0000BB                     _lcd:
   503                           	opt callstack 0
   504  0000BB                     	ds	5
   505  0000C0                     _time_ms_2:
   506                           	opt callstack 0
   507  0000C0                     	ds	4
   508  0000C4                     _time_ms:
   509                           	opt callstack 0
   510  0000C4                     	ds	4
   511  0000C8                     _errno:
   512                           	opt callstack 0
   513  0000C8                     	ds	2
   514  0000CA                     _nout:
   515                           	opt callstack 0
   516  0000CA                     	ds	2
   517  0000CC                     _width:
   518                           	opt callstack 0
   519  0000CC                     	ds	2
   520  0000CE                     _prec:
   521                           	opt callstack 0
   522  0000CE                     	ds	2
   523  0000D0                     _flags:
   524                           	opt callstack 0
   525  0000D0                     	ds	2
   526  0000D2                     _address:
   527                           	opt callstack 0
   528  0000D2                     	ds	2
   529  0000D4                     	ds	1
   530  0000D5                     _dbuf:
   531                           	opt callstack 0
   532  0000D5                     	ds	32
   533                           
   534                           	psect	dataBANK0
   535  0000F5                     __pdataBANK0:
   536                           	opt callstack 0
   537  0000F5                     stoa@F1152:
   538                           	opt callstack 0
   539  0000F5                     	ds	7
   540                           
   541                           	psect	cstackBANK0
   542  000080                     __pcstackBANK0:
   543                           	opt callstack 0
   544  000080                     ?_sprintf:
   545                           	opt callstack 0
   546  000080                     sprintf@s:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x0
   550  000080                     	ds	2
   551  000082                     sprintf@fmt:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x2
   555  000082                     	ds	8
   556  00008A                     sprintf@f:
   557                           	opt callstack 0
   558                           
   559                           ; 6 bytes @ 0xA
   560  00008A                     	ds	6
   561  000090                     sprintf@ap:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x10
   565  000090                     	ds	2
   566  000092                     int_to_char@result:
   567                           	opt callstack 0
   568                           
   569                           ; 10 bytes @ 0x12
   570  000092                     	ds	10
   571  00009C                     int_to_char@the_num:
   572                           	opt callstack 0
   573                           
   574                           ; 4 bytes @ 0x1C
   575  00009C                     	ds	4
   576  0000A0                     UARTSendString@c:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x20
   580  0000A0                     	ds	2
   581  0000A2                     ??_UARTSendString:
   582                           
   583                           ; 1 bytes @ 0x22
   584  0000A2                     	ds	2
   585  0000A4                     UARTSendString@i:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x24
   589  0000A4                     	ds	2
   590  0000A6                     ??_write_SRAM:
   591  0000A6                     read_SRAM@address:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x26
   595  0000A6                     	ds	2
   596  0000A8                     ??_read_SRAM:
   597  0000A8                     _write_SRAM$2154:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x28
   601  0000A8                     	ds	2
   602  0000AA                     read_SRAM@stored_temp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x2A
   606  0000AA                     	ds	2
   607  0000AC                     read_SRAM@time_elapsed:
   608                           	opt callstack 0
   609  0000AC                     _write_SRAM$2155:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x2C
   613  0000AC                     	ds	4
   614  0000B0                     write_SRAM@temperature:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x30
   618  0000B0                     	ds	2
   619  0000B2                     write_SRAM@curr_time:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x32
   623  0000B2                     	ds	2
   624  0000B4                     ??_main:
   625                           
   626                           ; 1 bytes @ 0x34
   627  0000B4                     	ds	2
   628  0000B6                     main@input_address:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x36
   632  0000B6                     	ds	2
   633  0000B8                     main@temp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x38
   637  0000B8                     	ds	2
   638  0000BA                     main@input:
   639                           	opt callstack 0
   640                           
   641                           ; 1 bytes @ 0x3A
   642  0000BA                     	ds	1
   643                           
   644                           	psect	cstackCOMRAM
   645  000001                     __pcstackCOMRAM:
   646                           	opt callstack 0
   647  000001                     ??_UARTRecieveChar:
   648  000001                     ?_ADC_Read:
   649                           	opt callstack 0
   650  000001                     ?_strlen:
   651                           	opt callstack 0
   652  000001                     ?_isupper:
   653                           	opt callstack 0
   654  000001                     ?_isalpha:
   655                           	opt callstack 0
   656  000001                     ?_isdigit:
   657                           	opt callstack 0
   658  000001                     ?_strncmp:
   659                           	opt callstack 0
   660  000001                     ?_isspace:
   661                           	opt callstack 0
   662  000001                     ?_getch:
   663                           	opt callstack 0
   664  000001                     ?_islower:
   665                           	opt callstack 0
   666  000001                     ?___wmul:
   667                           	opt callstack 0
   668  000001                     ?_ReadTime:
   669                           	opt callstack 0
   670  000001                     ?___fladd:
   671                           	opt callstack 0
   672  000001                     ?___xxtofl:
   673                           	opt callstack 0
   674  000001                     ?___aodiv:
   675                           	opt callstack 0
   676  000001                     ?___aomod:
   677                           	opt callstack 0
   678  000001                     ?___lodiv:
   679                           	opt callstack 0
   680  000001                     ?___lomod:
   681                           	opt callstack 0
   682  000001                     write_op@data:
   683                           	opt callstack 0
   684  000001                     read_op@address:
   685                           	opt callstack 0
   686  000001                     UARTSendChar@c:
   687                           	opt callstack 0
   688  000001                     set_duty_cycle@lower_2:
   689                           	opt callstack 0
   690  000001                     initialize_PWM@freq:
   691                           	opt callstack 0
   692  000001                     ___wmul@multiplier:
   693                           	opt callstack 0
   694  000001                     isalpha@c:
   695                           	opt callstack 0
   696  000001                     isdigit@c:
   697                           	opt callstack 0
   698  000001                     isspace@c:
   699                           	opt callstack 0
   700  000001                     isupper@c:
   701                           	opt callstack 0
   702  000001                     fputc@c:
   703                           	opt callstack 0
   704  000001                     strlen@s:
   705                           	opt callstack 0
   706  000001                     strncmp@_l:
   707                           	opt callstack 0
   708  000001                     islower@c:
   709                           	opt callstack 0
   710  000001                     ___fladd@b:
   711                           	opt callstack 0
   712  000001                     ___xxtofl@val:
   713                           	opt callstack 0
   714  000001                     ___aodiv@dividend:
   715                           	opt callstack 0
   716  000001                     ___aomod@dividend:
   717                           	opt callstack 0
   718  000001                     ___lodiv@dividend:
   719                           	opt callstack 0
   720  000001                     ___lomod@dividend:
   721                           	opt callstack 0
   722                           
   723                           ; 8 bytes @ 0x0
   724  000001                     	ds	1
   725  000002                     write_op@address:
   726                           	opt callstack 0
   727  000002                     read_op@result:
   728                           	opt callstack 0
   729  000002                     set_duty_cycle@upper_8:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     ??_ADC_Read:
   735  000003                     ??_isupper:
   736  000003                     ??_isalpha:
   737  000003                     ??_isdigit:
   738  000003                     ??_isspace:
   739  000003                     ??_islower:
   740  000003                     ?_fgetc:
   741                           	opt callstack 0
   742  000003                     set_duty_cycle@mask:
   743                           	opt callstack 0
   744  000003                     ___wmul@multiplicand:
   745                           	opt callstack 0
   746  000003                     fputc@fp:
   747                           	opt callstack 0
   748  000003                     fgetc@fp:
   749                           	opt callstack 0
   750  000003                     strlen@a:
   751                           	opt callstack 0
   752  000003                     strncmp@_r:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000003                     	ds	2
   757  000005                     ??_fputc:
   758  000005                     ??_fgetc:
   759  000005                     ??___xxtofl:
   760  000005                     ?___lldiv:
   761                           	opt callstack 0
   762  000005                     ADC_Read@channel:
   763                           	opt callstack 0
   764  000005                     ___wmul@product:
   765                           	opt callstack 0
   766  000005                     strncmp@n:
   767                           	opt callstack 0
   768  000005                     ___lldiv@dividend:
   769                           	opt callstack 0
   770  000005                     ___fladd@a:
   771                           	opt callstack 0
   772                           
   773                           ; 4 bytes @ 0x4
   774  000005                     	ds	2
   775  000007                     ??_strncmp:
   776  000007                     ?_toupper:
   777                           	opt callstack 0
   778  000007                     _isspace$1758:
   779                           	opt callstack 0
   780  000007                     toupper@c:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x6
   784  000007                     	ds	1
   785  000008                     ?_atoi:
   786                           	opt callstack 0
   787  000008                     atoi@s:
   788                           	opt callstack 0
   789  000008                     strncmp@l:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x7
   793  000008                     	ds	1
   794  000009                     ??_toupper:
   795  000009                     ??___fladd:
   796  000009                     ___xxtofl@sign:
   797                           	opt callstack 0
   798  000009                     ___lldiv@divisor:
   799                           	opt callstack 0
   800  000009                     ___aodiv@divisor:
   801                           	opt callstack 0
   802  000009                     ___aomod@divisor:
   803                           	opt callstack 0
   804  000009                     ___lodiv@divisor:
   805                           	opt callstack 0
   806  000009                     ___lomod@divisor:
   807                           	opt callstack 0
   808                           
   809                           ; 8 bytes @ 0x8
   810  000009                     	ds	1
   811  00000A                     ??_atoi:
   812  00000A                     ?_stoa:
   813                           	opt callstack 0
   814  00000A                     ___xxtofl@exp:
   815                           	opt callstack 0
   816  00000A                     stoa@fp:
   817                           	opt callstack 0
   818  00000A                     fputs@s:
   819                           	opt callstack 0
   820  00000A                     fgetc@c:
   821                           	opt callstack 0
   822  00000A                     strncmp@r:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x9
   826  00000A                     	ds	1
   827  00000B                     ___xxtofl@arg:
   828                           	opt callstack 0
   829                           
   830                           ; 4 bytes @ 0xA
   831  00000B                     	ds	1
   832  00000C                     stoa@s:
   833                           	opt callstack 0
   834  00000C                     fputs@fp:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0xB
   838  00000C                     	ds	1
   839  00000D                     ___fladd@signs:
   840                           	opt callstack 0
   841  00000D                     _toupper$1878:
   842                           	opt callstack 0
   843  00000D                     ___lldiv@quotient:
   844                           	opt callstack 0
   845                           
   846                           ; 4 bytes @ 0xC
   847  00000D                     	ds	1
   848  00000E                     ??_stoa:
   849  00000E                     ___fladd@aexp:
   850                           	opt callstack 0
   851  00000E                     fputs@c:
   852                           	opt callstack 0
   853  00000E                     atoi@neg:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0xD
   857  00000E                     	ds	1
   858  00000F                     ?___flmul:
   859                           	opt callstack 0
   860  00000F                     ___fladd@bexp:
   861                           	opt callstack 0
   862  00000F                     fputs@i:
   863                           	opt callstack 0
   864  00000F                     ___flmul@b:
   865                           	opt callstack 0
   866  00000F                     stoa@nuls:
   867                           	opt callstack 0
   868                           
   869                           ; 7 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	opt callstack 0
   873  000010                     _atoi$1721:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	opt callstack 0
   880  000011                     ___lldiv@counter:
   881                           	opt callstack 0
   882  000011                     ___aodiv@counter:
   883                           	opt callstack 0
   884  000011                     ___aomod@counter:
   885                           	opt callstack 0
   886  000011                     ___lomod@counter:
   887                           	opt callstack 0
   888  000011                     pad@fp:
   889                           	opt callstack 0
   890  000011                     ___lodiv@quotient:
   891                           	opt callstack 0
   892                           
   893                           ; 8 bytes @ 0x10
   894  000011                     	ds	1
   895  000012                     ___aodiv@sign:
   896                           	opt callstack 0
   897  000012                     ___aomod@sign:
   898                           	opt callstack 0
   899  000012                     _atoi$1723:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903  000012                     	ds	1
   904  000013                     ?_abs:
   905                           	opt callstack 0
   906  000013                     pad@buf:
   907                           	opt callstack 0
   908  000013                     abs@a:
   909                           	opt callstack 0
   910  000013                     ___flmul@a:
   911                           	opt callstack 0
   912  000013                     ___aodiv@quotient:
   913                           	opt callstack 0
   914                           
   915                           ; 8 bytes @ 0x12
   916  000013                     	ds	1
   917  000014                     _atoi$1722:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x13
   921  000014                     	ds	1
   922  000015                     ??_abs:
   923  000015                     pad@p:
   924                           	opt callstack 0
   925  000015                     atoi@n:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x14
   929  000015                     	ds	1
   930  000016                     stoa@i:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x15
   934  000016                     	ds	1
   935  000017                     ??___flmul:
   936  000017                     ??_pad:
   937                           
   938                           ; 1 bytes @ 0x16
   939  000017                     	ds	1
   940  000018                     pad@i:
   941                           	opt callstack 0
   942  000018                     stoa@w:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x17
   946  000018                     	ds	1
   947  000019                     ___lodiv@counter:
   948                           	opt callstack 0
   949                           
   950                           ; 1 bytes @ 0x18
   951  000019                     	ds	1
   952  00001A                     pad@w:
   953                           	opt callstack 0
   954  00001A                     stoa@cp:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x19
   958  00001A                     	ds	1
   959  00001B                     ___flmul@sign:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0x1A
   963  00001B                     	ds	1
   964  00001C                     ?_ctoa:
   965                           	opt callstack 0
   966  00001C                     ?_dtoa:
   967                           	opt callstack 0
   968  00001C                     ?_otoa:
   969                           	opt callstack 0
   970  00001C                     ?_utoa:
   971                           	opt callstack 0
   972  00001C                     ?_xtoa:
   973                           	opt callstack 0
   974  00001C                     ctoa@fp:
   975                           	opt callstack 0
   976  00001C                     dtoa@fp:
   977                           	opt callstack 0
   978  00001C                     otoa@fp:
   979                           	opt callstack 0
   980  00001C                     stoa@p:
   981                           	opt callstack 0
   982  00001C                     utoa@fp:
   983                           	opt callstack 0
   984  00001C                     xtoa@fp:
   985                           	opt callstack 0
   986  00001C                     ___flmul@grs:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x1B
   990  00001C                     	ds	2
   991  00001E                     ctoa@c:
   992                           	opt callstack 0
   993  00001E                     stoa@l:
   994                           	opt callstack 0
   995  00001E                     dtoa@d:
   996                           	opt callstack 0
   997  00001E                     otoa@d:
   998                           	opt callstack 0
   999  00001E                     utoa@d:
  1000                           	opt callstack 0
  1001  00001E                     xtoa@d:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x1D
  1005  00001E                     	ds	1
  1006  00001F                     ctoa@w:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1E
  1010  00001F                     	ds	1
  1011  000020                     ___flmul@aexp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015  000020                     	ds	1
  1016  000021                     ___flmul@bexp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x20
  1020  000021                     	ds	1
  1021  000022                     ___flmul@prod:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x21
  1025  000022                     	ds	4
  1026  000026                     ??_dtoa:
  1027  000026                     ??_otoa:
  1028  000026                     ??_utoa:
  1029  000026                     xtoa@x:
  1030                           	opt callstack 0
  1031  000026                     ___flmul@temp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x25
  1035  000026                     	ds	1
  1036  000027                     ??_xtoa:
  1037                           
  1038                           ; 1 bytes @ 0x26
  1039  000027                     	ds	1
  1040  000028                     ?___flsub:
  1041                           	opt callstack 0
  1042  000028                     ___flsub@b:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x27
  1046  000028                     	ds	4
  1047  00002C                     ___flsub@a:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x2B
  1051  00002C                     	ds	2
  1052  00002E                     _dtoa$1075:
  1053                           	opt callstack 0
  1054  00002E                     otoa@p:
  1055                           	opt callstack 0
  1056  00002E                     utoa@p:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x2D
  1060  00002E                     	ds	1
  1061  00002F                     _xtoa$1111:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x2E
  1065  00002F                     	ds	1
  1066  000030                     ?_get_temp:
  1067                           	opt callstack 0
  1068  000030                     dtoa@p:
  1069                           	opt callstack 0
  1070  000030                     otoa@t:
  1071                           	opt callstack 0
  1072  000030                     utoa@w:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x2F
  1076  000030                     	ds	1
  1077  000031                     _xtoa$1112:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x30
  1081  000031                     	ds	1
  1082  000032                     dtoa@w:
  1083                           	opt callstack 0
  1084  000032                     otoa@w:
  1085                           	opt callstack 0
  1086  000032                     utoa@n:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x31
  1090  000032                     	ds	1
  1091  000033                     xtoa@p:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x32
  1095  000033                     	ds	1
  1096  000034                     dtoa@s:
  1097                           	opt callstack 0
  1098  000034                     get_temp@real_voltage:
  1099                           	opt callstack 0
  1100  000034                     otoa@n:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x33
  1104  000034                     	ds	1
  1105  000035                     xtoa@w:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x34
  1109  000035                     	ds	1
  1110  000036                     dtoa@n:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 8 bytes @ 0x35
  1114  000036                     	ds	1
  1115  000037                     xtoa@n:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x36
  1119  000037                     	ds	1
  1120  000038                     get_temp@temp:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x37
  1124  000038                     	ds	2
  1125  00003A                     utoa@i:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x39
  1129  00003A                     	ds	2
  1130  00003C                     get_temp@adc_voltage:
  1131                           	opt callstack 0
  1132  00003C                     otoa@i:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x3B
  1136  00003C                     	ds	2
  1137  00003E                     ?___fltol:
  1138                           	opt callstack 0
  1139  00003E                     dtoa@i:
  1140                           	opt callstack 0
  1141  00003E                     ___fltol@f1:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3D
  1145  00003E                     	ds	1
  1146  00003F                     xtoa@i:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3E
  1150  00003F                     	ds	2
  1151  000041                     xtoa@c:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x40
  1155  000041                     	ds	1
  1156  000042                     ??___fltol:
  1157                           
  1158                           ; 1 bytes @ 0x41
  1159  000042                     	ds	1
  1160  000043                     ?_vfpfcnvrt:
  1161                           	opt callstack 0
  1162  000043                     vfpfcnvrt@fp:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x42
  1166  000043                     	ds	2
  1167  000045                     vfpfcnvrt@fmt:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x44
  1171  000045                     	ds	1
  1172  000046                     ___fltol@sign1:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x45
  1176  000046                     	ds	1
  1177  000047                     ___fltol@exp1:
  1178                           	opt callstack 0
  1179  000047                     vfpfcnvrt@ap:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x46
  1183  000047                     	ds	2
  1184  000049                     ??_vfpfcnvrt:
  1185                           
  1186                           ; 1 bytes @ 0x48
  1187  000049                     	ds	14
  1188  000057                     vfpfcnvrt@cp:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x56
  1192  000057                     	ds	2
  1193  000059                     vfpfcnvrt@done:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x58
  1197  000059                     	ds	2
  1198  00005B                     _vfpfcnvrt$1126:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x5A
  1202  00005B                     	ds	2
  1203  00005D                     _vfpfcnvrt$1127:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x5C
  1207  00005D                     	ds	2
  1208  00005F                     vfpfcnvrt@ll:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x5E
  1212  00005F                     	ds	8
  1213  000067                     vfpfcnvrt@vp:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x66
  1217  000067                     	ds	2
  1218  000069                     vfpfcnvrt@c:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x68
  1222  000069                     	ds	1
  1223  00006A                     vfpfcnvrt@llu:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x69
  1227  00006A                     	ds	8
  1228  000072                     ?_vfprintf:
  1229                           	opt callstack 0
  1230  000072                     vfprintf@fp:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x71
  1234  000072                     	ds	2
  1235  000074                     vfprintf@fmt:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x73
  1239  000074                     	ds	2
  1240  000076                     vfprintf@ap:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x75
  1244  000076                     	ds	2
  1245  000078                     vfprintf@cfmt:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x77
  1249  000078                     	ds	2
  1250  00007A                     ?_int_to_char:
  1251                           	opt callstack 0
  1252  00007A                     int_to_char@num:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x79
  1256  00007A                     	ds	4
  1257  00007E                     
  1258                           ; 1 bytes @ 0x7D
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 27 in file "main.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  temp            2   56[BANK0 ] int 
  1269 ;;  input_addres    2   54[BANK0 ] int 
  1270 ;;  input           1   58[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         0       0       0       0       0       0       0
  1281 ;;      Locals:         0       5       0       0       0       0       0
  1282 ;;      Temps:          0       2       0       0       0       0       0
  1283 ;;      Totals:         0       7       0       0       0       0       0
  1284 ;;Total ram usage:        7 bytes
  1285 ;; Hardware stack levels required when called:   12
  1286 ;; This function calls:
  1287 ;;		_Timer0_Init
  1288 ;;		_Timer0_StartTimer
  1289 ;;		_UARTNewLine
  1290 ;;		_UARTRecieveChar
  1291 ;;		_UARTSendString
  1292 ;;		___fltol
  1293 ;;		_get_temp
  1294 ;;		_initialize_PWM
  1295 ;;		_initialize_RX
  1296 ;;		_initialize_TX
  1297 ;;		_int_to_char
  1298 ;;		_interrupt_disable
  1299 ;;		_interrupt_enable
  1300 ;;		_read_SRAM
  1301 ;;		_set_duty_cycle
  1302 ;;		_write_SRAM
  1303 ;; This function is called by:
  1304 ;;		Startup code after reset
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text0
  1309  002600                     __ptext0:
  1310                           	opt callstack 0
  1311  002600                     _main:
  1312                           	opt callstack 0
  1313  002600  FFFF               	dw	65535	; assembler added errata NOP
  1314                           
  1315                           ;main.c: 28:   interrupt_enable();
  1316                           
  1317                           ;incstack = 0
  1318  002602  ECDD  F01F         	call	_interrupt_enable	;wreg free
  1319                           
  1320                           ;main.c: 29:   TRISCbits.TRISC2 = 0;
  1321  002606  9494               	bcf	3988,2,c	;volatile
  1322                           
  1323                           ;main.c: 30:   TMR2IE = 1;
  1324  002608  829D               	bsf	3997,1,c	;volatile
  1325                           
  1326                           ;main.c: 31:   TMR2IP = 1;
  1327  00260A  829F               	bsf	3999,1,c	;volatile
  1328                           
  1329                           ;main.c: 32:   Timer0_Init();
  1330  00260C  EC4F  F01F         	call	_Timer0_Init	;wreg free
  1331                           
  1332                           ;main.c: 33:   Timer0_StartTimer();
  1333  002610  ECFC  F01F         	call	_Timer0_StartTimer	;wreg free
  1334                           
  1335                           ;main.c: 34:   initialize_TX();
  1336  002614  ECC0  F01F         	call	_initialize_TX	;wreg free
  1337                           
  1338                           ;main.c: 35:   initialize_RX();
  1339  002618  ECCA  F01F         	call	_initialize_RX	;wreg free
  1340                           
  1341                           ;main.c: 36:   TRISCbits.TRISC7 = 1;
  1342  00261C  8E94               	bsf	3988,7,c	;volatile
  1343                           
  1344                           ;main.c: 37:   TRISCbits.TRISC6 = 0;
  1345  00261E  9C94               	bcf	3988,6,c	;volatile
  1346  002620                     l5300:
  1347  002620  FFFF               	dw	65535	; assembler added errata NOP
  1348                           
  1349                           ;main.c: 39:     TRISCbits.TRISC7 = 1;
  1350  002622  8E94               	bsf	3988,7,c	;volatile
  1351                           
  1352                           ;main.c: 40:     char input = ' ';
  1353  002624  0E20               	movlw	32
  1354  002626  D003               	goto	L1
  1355  002628                     l5304:
  1356  002628  FFFF               	dw	65535	; assembler added errata NOP
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 42:      input = UARTRecieveChar();
  1360  00262A  EC24  F01F         	call	_UARTRecieveChar	;wreg free
  1361  00262E                     L1:
  1362  00262E  FFFF               	dw	65535	; assembler added errata NOP
  1363  002630  0100               	movlb	0	; () banked
  1364  002632  6FBA               	movwf	main@input& (0+255),b
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;main.c: 41:     while (input < 'a' || input > 'z') {
  1368  002634  0E60               	movlw	96
  1369  002636  65BA               	cpfsgt	main@input& (0+255),b
  1370  002638  D7F7               	goto	l5304
  1371                           
  1372                           ; BSR set to: 0
  1373  00263A  0E7B               	movlw	123
  1374  00263C  61BA               	cpfslt	main@input& (0+255),b
  1375  00263E  D7F4               	goto	l5304
  1376  002640  D0B4               	goto	l5364
  1377  002642                     l5310:
  1378  002642  FFFF               	dw	65535	; assembler added errata NOP
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;main.c: 46:       write_SRAM();
  1382  002644  EC0D  F012         	call	_write_SRAM	;wreg free
  1383                           
  1384                           ;main.c: 47:       break;
  1385  002648  D7EB               	goto	l5300
  1386  00264A                     l165:
  1387  00264A  FFFF               	dw	65535	; assembler added errata NOP
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 49:       TRISCbits.TRISC7 = 0;
  1391  00264C  9E94               	bcf	3988,7,c	;volatile
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;main.c: 50:       UARTSendString("Ready for even address input");
  1395  00264E  0E01               	movlw	low STR_3
  1396  002650  6FA0               	movwf	UARTSendString@c& (0+255),b
  1397  002652  0E06               	movlw	high STR_3
  1398  002654  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1399  002656  ECB2  F01C         	call	_UARTSendString	;wreg free
  1400                           
  1401                           ;main.c: 51:       UARTNewLine();
  1402  00265A  ECAC  F01F         	call	_UARTNewLine	;wreg free
  1403                           
  1404                           ;main.c: 52:       input = ' ';
  1405  00265E  0E20               	movlw	32
  1406  002660  D003               	goto	L2
  1407  002662                     l5318:
  1408  002662  FFFF               	dw	65535	; assembler added errata NOP
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 54:         input = UARTRecieveChar();
  1412  002664  EC24  F01F         	call	_UARTRecieveChar	;wreg free
  1413  002668                     L2:
  1414  002668  FFFF               	dw	65535	; assembler added errata NOP
  1415  00266A  0100               	movlb	0	; () banked
  1416  00266C  6FBA               	movwf	main@input& (0+255),b
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 53:       while (input < '0' || input > '9') {
  1420  00266E  0E2F               	movlw	47
  1421  002670  65BA               	cpfsgt	main@input& (0+255),b
  1422  002672  D7F7               	goto	l5318
  1423                           
  1424                           ; BSR set to: 0
  1425  002674  0E3A               	movlw	58
  1426  002676  61BA               	cpfslt	main@input& (0+255),b
  1427  002678  D7F4               	goto	l5318
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main.c: 56:       int input_address = input & 0xF;
  1431  00267A  C0BA  F0B4         	movff	main@input,??_main
  1432  00267E  0E0F               	movlw	15
  1433  002680  17B4               	andwf	??_main& (0+255),f,b
  1434  002682  51B4               	movf	??_main& (0+255),w,b
  1435  002684  6FB6               	movwf	main@input_address& (0+255),b
  1436  002686  6BB7               	clrf	(main@input_address+1)& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 57:       read_SRAM(input_address);
  1440  002688  C0B6  F0A6         	movff	main@input_address,read_SRAM@address
  1441  00268C  C0B7  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1442  002690  ECE3  F018         	call	_read_SRAM	;wreg free
  1443                           
  1444                           ;main.c: 58:       break;
  1445  002694  D7C5               	goto	l5300
  1446  002696                     l5328:
  1447  002696  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 60:       interrupt_enable();
  1451  002698  ECDD  F01F         	call	_interrupt_enable	;wreg free
  1452                           
  1453                           ;main.c: 61:       interrupt_disable();
  1454  00269C  ECEC  F01F         	call	_interrupt_disable	;wreg free
  1455                           
  1456                           ;main.c: 62:       TMR2IE = 1;
  1457  0026A0  829D               	bsf	3997,1,c	;volatile
  1458                           
  1459                           ;main.c: 63:       TMR2IP = 1;
  1460  0026A2  829F               	bsf	3999,1,c	;volatile
  1461                           
  1462                           ;main.c: 64:       initialize_PWM(0xFF);
  1463  0026A4  0E00               	movlw	0
  1464  0026A6  6E02               	movwf	initialize_PWM@freq+1,c
  1465  0026A8  6801               	setf	initialize_PWM@freq,c
  1466  0026AA  EC95  F01F         	call	_initialize_PWM	;wreg free
  1467                           
  1468                           ;main.c: 65:       set_duty_cycle(0x00, 0x00);
  1469  0026AE  0E00               	movlw	0
  1470  0026B0  6E01               	movwf	set_duty_cycle@lower_2,c
  1471  0026B2  0E00               	movlw	0
  1472  0026B4  EC73  F01F         	call	_set_duty_cycle
  1473  0026B8                     l5338:
  1474  0026B8  FFFF               	dw	65535	; assembler added errata NOP
  1475                           
  1476                           ;main.c: 67:         int temp = (int) get_temp();
  1477  0026BA  EC56  F01A         	call	_get_temp	;wreg free
  1478  0026BE  C030  F03E         	movff	?_get_temp,___fltol@f1
  1479  0026C2  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1480  0026C6  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1481  0026CA  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1482  0026CE  ECEC  F019         	call	___fltol	;wreg free
  1483  0026D2  C03E  F0B8         	movff	?___fltol,main@temp
  1484  0026D6  C03F  F0B9         	movff	?___fltol+1,main@temp+1
  1485                           
  1486                           ;main.c: 68:         UARTSendString(int_to_char(temp));
  1487  0026DA  C0B8  F07A         	movff	main@temp,int_to_char@num
  1488  0026DE  C0B9  F07B         	movff	main@temp+1,int_to_char@num+1
  1489  0026E2  0E00               	movlw	0
  1490  0026E4  BE7B               	btfsc	int_to_char@num+1,7,c
  1491  0026E6  0EFF               	movlw	-1
  1492  0026E8  6E7C               	movwf	int_to_char@num+2,c
  1493  0026EA  6E7D               	movwf	int_to_char@num+3,c
  1494  0026EC  ECF6  F01D         	call	_int_to_char	;wreg free
  1495  0026F0  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1496  0026F4  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1497  0026F8  ECB2  F01C         	call	_UARTSendString	;wreg free
  1498                           
  1499                           ;main.c: 69:         if (temp < 30) set_duty_cycle(0x00, 0x00);
  1500  0026FC  0100               	movlb	0	; () banked
  1501  0026FE  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1502  002700  D006               	goto	u5470
  1503  002702  51B9               	movf	(main@temp+1)& (0+255),w,b
  1504  002704  E10B               	bnz	l5346
  1505  002706  0E1E               	movlw	30
  1506  002708  5DB8               	subwf	main@temp& (0+255),w,b
  1507  00270A  B0D8               	btfsc	status,0,c
  1508  00270C  D007               	goto	l5346
  1509  00270E                     u5470:
  1510  00270E  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ; BSR set to: 0
  1513  002710  0E00               	movlw	0
  1514  002712  6E01               	movwf	set_duty_cycle@lower_2,c
  1515  002714  0E00               	movlw	0
  1516  002716  EC73  F01F         	call	_set_duty_cycle
  1517  00271A  D036               	goto	l5360
  1518  00271C                     l5346:
  1519  00271C  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ; BSR set to: 0
  1522  00271E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1523  002720  D006               	goto	u5480
  1524  002722  51B9               	movf	(main@temp+1)& (0+255),w,b
  1525  002724  E10B               	bnz	l5350
  1526  002726  0E32               	movlw	50
  1527  002728  5DB8               	subwf	main@temp& (0+255),w,b
  1528  00272A  B0D8               	btfsc	status,0,c
  1529  00272C  D007               	goto	l5350
  1530  00272E                     u5480:
  1531  00272E  FFFF               	dw	65535	; assembler added errata NOP
  1532                           
  1533                           ; BSR set to: 0
  1534  002730  0E03               	movlw	3
  1535  002732  6E01               	movwf	set_duty_cycle@lower_2,c
  1536  002734  0E0F               	movlw	15
  1537  002736  EC73  F01F         	call	_set_duty_cycle
  1538  00273A  D026               	goto	l5360
  1539  00273C                     l5350:
  1540  00273C  FFFF               	dw	65535	; assembler added errata NOP
  1541                           
  1542                           ; BSR set to: 0
  1543  00273E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1544  002740  D006               	goto	u5490
  1545  002742  51B9               	movf	(main@temp+1)& (0+255),w,b
  1546  002744  E10B               	bnz	l5354
  1547  002746  0E46               	movlw	70
  1548  002748  5DB8               	subwf	main@temp& (0+255),w,b
  1549  00274A  B0D8               	btfsc	status,0,c
  1550  00274C  D007               	goto	l5354
  1551  00274E                     u5490:
  1552  00274E  FFFF               	dw	65535	; assembler added errata NOP
  1553                           
  1554                           ; BSR set to: 0
  1555  002750  0E03               	movlw	3
  1556  002752  6E01               	movwf	set_duty_cycle@lower_2,c
  1557  002754  0E5F               	movlw	95
  1558  002756  EC73  F01F         	call	_set_duty_cycle
  1559  00275A  D016               	goto	l5360
  1560  00275C                     l5354:
  1561  00275C  FFFF               	dw	65535	; assembler added errata NOP
  1562                           
  1563                           ; BSR set to: 0
  1564  00275E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1565  002760  D006               	goto	u5500
  1566  002762  51B9               	movf	(main@temp+1)& (0+255),w,b
  1567  002764  E10B               	bnz	l5358
  1568  002766  0E64               	movlw	100
  1569  002768  5DB8               	subwf	main@temp& (0+255),w,b
  1570  00276A  B0D8               	btfsc	status,0,c
  1571  00276C  D007               	goto	l5358
  1572  00276E                     u5500:
  1573  00276E  FFFF               	dw	65535	; assembler added errata NOP
  1574                           
  1575                           ; BSR set to: 0
  1576  002770  0E03               	movlw	3
  1577  002772  6E01               	movwf	set_duty_cycle@lower_2,c
  1578  002774  0EF2               	movlw	242
  1579  002776  EC73  F01F         	call	_set_duty_cycle
  1580  00277A  D006               	goto	l5360
  1581  00277C                     l5358:
  1582  00277C  FFFF               	dw	65535	; assembler added errata NOP
  1583                           
  1584                           ; BSR set to: 0
  1585  00277E  0E03               	movlw	3
  1586  002780  6E01               	movwf	set_duty_cycle@lower_2,c
  1587  002782  0EFF               	movlw	255
  1588  002784  EC73  F01F         	call	_set_duty_cycle
  1589  002788                     l5360:
  1590  002788  FFFF               	dw	65535	; assembler added errata NOP
  1591                           
  1592                           ;main.c: 74:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1593  00278A  0E02               	movlw	2
  1594  00278C  0100               	movlb	0	; () banked
  1595  00278E  6FB5               	movwf	(??_main+1)& (0+255),b
  1596  002790  0E86               	movlw	134
  1597  002792  6FB4               	movwf	??_main& (0+255),b
  1598  002794  0EDA               	movlw	218
  1599  002796                     u5537:
  1600  002796  FFFF               	dw	65535	; errata NOP
  1601  002798  2EE8               	decfsz	wreg,f,c
  1602  00279A  D7FD               	bra	u5537
  1603  00279C  2FB4               	decfsz	??_main& (0+255),f,b
  1604  00279E  D7FB               	bra	u5537
  1605  0027A0  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1606  0027A2  D7F9               	bra	u5537
  1607  0027A4  D000               	nop2	
  1608  0027A6  F000               	nop	
  1609  0027A8  D787               	goto	l5338
  1610  0027AA                     l5364:
  1611  0027AA  FFFF               	dw	65535	; assembler added errata NOP
  1612                           
  1613                           ; BSR set to: 0
  1614  0027AC  51BA               	movf	main@input& (0+255),w,b
  1615  0027AE  6FB4               	movwf	??_main& (0+255),b
  1616  0027B0  6BB5               	clrf	(??_main+1)& (0+255),b
  1617                           
  1618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1619                           ; Switch size 1, requested type "simple"
  1620                           ; Number of cases is 1, Range of values is 0 to 0
  1621                           ; switch strategies available:
  1622                           ; Name         Instructions Cycles
  1623                           ; simple_byte            4     3 (average)
  1624                           ;	Chosen strategy is simple_byte
  1625  0027B2  51B5               	movf	(??_main+1)& (0+255),w,b
  1626  0027B4  0A00               	xorlw	0	; case 0
  1627  0027B6  A4D8               	btfss	status,2,c
  1628  0027B8  D733               	goto	l5300
  1629                           
  1630                           ; BSR set to: 0
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 3, Range of values is 114 to 120
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte           10     6 (average)
  1636                           ;	Chosen strategy is simple_byte
  1637  0027BA  51B4               	movf	??_main& (0+255),w,b
  1638  0027BC  0A72               	xorlw	114	; case 114
  1639  0027BE  B4D8               	btfsc	status,2,c
  1640  0027C0  D744               	goto	l165
  1641  0027C2  0A01               	xorlw	1	; case 115
  1642  0027C4  B4D8               	btfsc	status,2,c
  1643  0027C6  D73D               	goto	l5310
  1644  0027C8  0A0B               	xorlw	11	; case 120
  1645  0027CA  B4D8               	btfsc	status,2,c
  1646  0027CC  D764               	goto	l5328
  1647  0027CE  D728               	goto	l5300
  1648  0027D0                     __end_of_main:
  1649                           	opt callstack 0
  1650                           
  1651 ;; *************** function _write_SRAM *****************
  1652 ;; Defined at:
  1653 ;;		line 105 in file "main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  curr_time       2   50[BANK0 ] int 
  1658 ;;  temperature     2   48[BANK0 ] int 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1668 ;;      Params:         0       0       0       0       0       0       0
  1669 ;;      Locals:         0      12       0       0       0       0       0
  1670 ;;      Temps:          0       2       0       0       0       0       0
  1671 ;;      Totals:         0      14       0       0       0       0       0
  1672 ;;Total ram usage:       14 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:   11
  1675 ;; This function calls:
  1676 ;;		_ReadTime
  1677 ;;		_Timer0_StartTimer
  1678 ;;		_Timer0_StopTimer
  1679 ;;		_UARTNewLine
  1680 ;;		_UARTSendChar
  1681 ;;		_UARTSendString
  1682 ;;		___fltol
  1683 ;;		___lldiv
  1684 ;;		_get_temp
  1685 ;;		_int_to_char
  1686 ;;		_write_op
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text1
  1693  00241A                     __ptext1:
  1694                           	opt callstack 0
  1695  00241A                     _write_SRAM:
  1696                           	opt callstack 0
  1697  00241A  FFFF               	dw	65535	; assembler added errata NOP
  1698                           
  1699                           ;main.c: 106:   TRISCbits.TRISC7 = 0;
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;incstack = 0
  1703  00241C  9E94               	bcf	3988,7,c	;volatile
  1704                           
  1705                           ;main.c: 107:   int temperature = (int) get_temp();
  1706  00241E  EC56  F01A         	call	_get_temp	;wreg free
  1707  002422  C030  F03E         	movff	?_get_temp,___fltol@f1
  1708  002426  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1709  00242A  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1710  00242E  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1711  002432  ECEC  F019         	call	___fltol	;wreg free
  1712  002436  C03E  F0B0         	movff	?___fltol,write_SRAM@temperature
  1713  00243A  C03F  F0B1         	movff	?___fltol+1,write_SRAM@temperature+1
  1714                           
  1715                           ;main.c: 108:   Timer0_StopTimer();
  1716  00243E  ECF8  F01F         	call	_Timer0_StopTimer	;wreg free
  1717                           
  1718                           ;main.c: 109:   int curr_time = (int) (ReadTime()/60/100/60);
  1719  002442  0E3C               	movlw	60
  1720  002444  6E09               	movwf	___lldiv@divisor,c
  1721  002446  0E00               	movlw	0
  1722  002448  6E0A               	movwf	___lldiv@divisor+1,c
  1723  00244A  0E00               	movlw	0
  1724  00244C  6E0B               	movwf	___lldiv@divisor+2,c
  1725  00244E  0E00               	movlw	0
  1726  002450  6E0C               	movwf	___lldiv@divisor+3,c
  1727  002452  ECA1  F01F         	call	_ReadTime	;wreg free
  1728  002456  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1729  00245A  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1730  00245E  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1731  002462  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1732  002466  EC25  F01C         	call	___lldiv	;wreg free
  1733  00246A  C005  F0A8         	movff	?___lldiv,_write_SRAM$2154
  1734  00246E  C006  F0A9         	movff	?___lldiv+1,_write_SRAM$2154+1
  1735  002472  C007  F0AA         	movff	?___lldiv+2,_write_SRAM$2154+2
  1736  002476  C008  F0AB         	movff	?___lldiv+3,_write_SRAM$2154+3
  1737                           
  1738                           ;main.c: 109:   int curr_time = (int) (ReadTime()/60/100/60);
  1739  00247A  0E64               	movlw	100
  1740  00247C  6E09               	movwf	___lldiv@divisor,c
  1741  00247E  0E00               	movlw	0
  1742  002480  6E0A               	movwf	___lldiv@divisor+1,c
  1743  002482  0E00               	movlw	0
  1744  002484  6E0B               	movwf	___lldiv@divisor+2,c
  1745  002486  0E00               	movlw	0
  1746  002488  6E0C               	movwf	___lldiv@divisor+3,c
  1747  00248A  C0A8  F005         	movff	_write_SRAM$2154,___lldiv@dividend
  1748  00248E  C0A9  F006         	movff	_write_SRAM$2154+1,___lldiv@dividend+1
  1749  002492  C0AA  F007         	movff	_write_SRAM$2154+2,___lldiv@dividend+2
  1750  002496  C0AB  F008         	movff	_write_SRAM$2154+3,___lldiv@dividend+3
  1751  00249A  EC25  F01C         	call	___lldiv	;wreg free
  1752  00249E  C005  F0AC         	movff	?___lldiv,_write_SRAM$2155
  1753  0024A2  C006  F0AD         	movff	?___lldiv+1,_write_SRAM$2155+1
  1754  0024A6  C007  F0AE         	movff	?___lldiv+2,_write_SRAM$2155+2
  1755  0024AA  C008  F0AF         	movff	?___lldiv+3,_write_SRAM$2155+3
  1756                           
  1757                           ;main.c: 109:   int curr_time = (int) (ReadTime()/60/100/60);
  1758  0024AE  C0AC  F005         	movff	_write_SRAM$2155,___lldiv@dividend
  1759  0024B2  C0AD  F006         	movff	_write_SRAM$2155+1,___lldiv@dividend+1
  1760  0024B6  C0AE  F007         	movff	_write_SRAM$2155+2,___lldiv@dividend+2
  1761  0024BA  C0AF  F008         	movff	_write_SRAM$2155+3,___lldiv@dividend+3
  1762  0024BE  0E3C               	movlw	60
  1763  0024C0  6E09               	movwf	___lldiv@divisor,c
  1764  0024C2  0E00               	movlw	0
  1765  0024C4  6E0A               	movwf	___lldiv@divisor+1,c
  1766  0024C6  0E00               	movlw	0
  1767  0024C8  6E0B               	movwf	___lldiv@divisor+2,c
  1768  0024CA  0E00               	movlw	0
  1769  0024CC  6E0C               	movwf	___lldiv@divisor+3,c
  1770  0024CE  EC25  F01C         	call	___lldiv	;wreg free
  1771  0024D2  C005  F0B2         	movff	?___lldiv,write_SRAM@curr_time
  1772  0024D6  C006  F0B3         	movff	?___lldiv+1,write_SRAM@curr_time+1
  1773                           
  1774                           ;main.c: 110:   Timer0_StartTimer();
  1775  0024DA  ECFC  F01F         	call	_Timer0_StartTimer	;wreg free
  1776                           
  1777                           ;main.c: 111:   UARTSendString("Writing ");
  1778  0024DE  0E92               	movlw	low STR_11
  1779  0024E0  0100               	movlb	0	; () banked
  1780  0024E2  6FA0               	movwf	UARTSendString@c& (0+255),b
  1781  0024E4  0E06               	movlw	high STR_11
  1782  0024E6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1783  0024E8  ECB2  F01C         	call	_UARTSendString	;wreg free
  1784                           
  1785                           ;main.c: 112:   UARTSendString(int_to_char(temperature));
  1786  0024EC  C0B0  F07A         	movff	write_SRAM@temperature,int_to_char@num
  1787  0024F0  C0B1  F07B         	movff	write_SRAM@temperature+1,int_to_char@num+1
  1788  0024F4  0E00               	movlw	0
  1789  0024F6  BE7B               	btfsc	int_to_char@num+1,7,c
  1790  0024F8  0EFF               	movlw	-1
  1791  0024FA  6E7C               	movwf	int_to_char@num+2,c
  1792  0024FC  6E7D               	movwf	int_to_char@num+3,c
  1793  0024FE  ECF6  F01D         	call	_int_to_char	;wreg free
  1794  002502  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1795  002506  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1796  00250A  ECB2  F01C         	call	_UARTSendString	;wreg free
  1797                           
  1798                           ;main.c: 113:   UARTSendString(" to address ");
  1799  00250E  0E79               	movlw	low STR_12
  1800  002510  0100               	movlb	0	; () banked
  1801  002512  6FA0               	movwf	UARTSendString@c& (0+255),b
  1802  002514  0E06               	movlw	high STR_12
  1803  002516  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1804  002518  ECB2  F01C         	call	_UARTSendString	;wreg free
  1805                           
  1806                           ;main.c: 114:   UARTSendString(int_to_char(address));
  1807  00251C  C0D2  F07A         	movff	_address,int_to_char@num
  1808  002520  C0D3  F07B         	movff	_address+1,int_to_char@num+1
  1809  002524  0E00               	movlw	0
  1810  002526  BE7B               	btfsc	int_to_char@num+1,7,c
  1811  002528  0EFF               	movlw	-1
  1812  00252A  6E7C               	movwf	int_to_char@num+2,c
  1813  00252C  6E7D               	movwf	int_to_char@num+3,c
  1814  00252E  ECF6  F01D         	call	_int_to_char	;wreg free
  1815  002532  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1816  002536  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1817  00253A  ECB2  F01C         	call	_UARTSendString	;wreg free
  1818                           
  1819                           ;main.c: 115:   UARTNewLine();
  1820  00253E  ECAC  F01F         	call	_UARTNewLine	;wreg free
  1821                           
  1822                           ;main.c: 116:   write_op(address, temperature);
  1823  002542  C0B0  F001         	movff	write_SRAM@temperature,write_op@data
  1824  002546  0100               	movlb	0	; () banked
  1825  002548  51D2               	movf	_address& (0+255),w,b
  1826  00254A  EC62  F01F         	call	_write_op
  1827                           
  1828                           ;main.c: 117:   UARTSendString("Writing ");
  1829  00254E  0E92               	movlw	low STR_11
  1830  002550  0100               	movlb	0	; () banked
  1831  002552  6FA0               	movwf	UARTSendString@c& (0+255),b
  1832  002554  0E06               	movlw	high STR_11
  1833  002556  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1834  002558  ECB2  F01C         	call	_UARTSendString	;wreg free
  1835                           
  1836                           ;main.c: 118:   UARTSendString(int_to_char(curr_time));
  1837  00255C  C0B2  F07A         	movff	write_SRAM@curr_time,int_to_char@num
  1838  002560  C0B3  F07B         	movff	write_SRAM@curr_time+1,int_to_char@num+1
  1839  002564  0E00               	movlw	0
  1840  002566  BE7B               	btfsc	int_to_char@num+1,7,c
  1841  002568  0EFF               	movlw	-1
  1842  00256A  6E7C               	movwf	int_to_char@num+2,c
  1843  00256C  6E7D               	movwf	int_to_char@num+3,c
  1844  00256E  ECF6  F01D         	call	_int_to_char	;wreg free
  1845  002572  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1846  002576  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1847  00257A  ECB2  F01C         	call	_UARTSendString	;wreg free
  1848                           
  1849                           ;main.c: 119:   UARTSendString(" to address ");
  1850  00257E  0E79               	movlw	low STR_12
  1851  002580  0100               	movlb	0	; () banked
  1852  002582  6FA0               	movwf	UARTSendString@c& (0+255),b
  1853  002584  0E06               	movlw	high STR_12
  1854  002586  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1855  002588  ECB2  F01C         	call	_UARTSendString	;wreg free
  1856                           
  1857                           ;main.c: 120:   UARTSendString(int_to_char(address + 1));
  1858  00258C  0E01               	movlw	1
  1859  00258E  0100               	movlb	0	; () banked
  1860  002590  25D2               	addwf	_address& (0+255),w,b
  1861  002592  6FA6               	movwf	??_write_SRAM& (0+255),b
  1862  002594  0E00               	movlw	0
  1863  002596  21D3               	addwfc	(_address+1)& (0+255),w,b
  1864  002598  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1865  00259A  C0A6  F07A         	movff	??_write_SRAM,int_to_char@num
  1866  00259E  C0A7  F07B         	movff	??_write_SRAM+1,int_to_char@num+1
  1867  0025A2  0E00               	movlw	0
  1868  0025A4  BE7B               	btfsc	int_to_char@num+1,7,c
  1869  0025A6  0EFF               	movlw	-1
  1870  0025A8  6E7C               	movwf	int_to_char@num+2,c
  1871  0025AA  6E7D               	movwf	int_to_char@num+3,c
  1872  0025AC  ECF6  F01D         	call	_int_to_char	;wreg free
  1873  0025B0  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1874  0025B4  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1875  0025B8  ECB2  F01C         	call	_UARTSendString	;wreg free
  1876                           
  1877                           ;main.c: 121:   UARTNewLine();
  1878  0025BC  ECAC  F01F         	call	_UARTNewLine	;wreg free
  1879                           
  1880                           ;main.c: 122:   write_op(address + 1, curr_time);
  1881  0025C0  C0B2  F001         	movff	write_SRAM@curr_time,write_op@data
  1882  0025C4  0100               	movlb	0	; () banked
  1883  0025C6  29D2               	incf	_address& (0+255),w,b
  1884  0025C8  EC62  F01F         	call	_write_op
  1885                           
  1886                           ;main.c: 123:   address = (address + 2) % 16;
  1887  0025CC  0E02               	movlw	2
  1888  0025CE  0100               	movlb	0	; () banked
  1889  0025D0  25D2               	addwf	_address& (0+255),w,b
  1890  0025D2  6FA6               	movwf	??_write_SRAM& (0+255),b
  1891  0025D4  0E00               	movlw	0
  1892  0025D6  21D3               	addwfc	(_address+1)& (0+255),w,b
  1893  0025D8  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1894  0025DA  0E0F               	movlw	15
  1895  0025DC  15A6               	andwf	??_write_SRAM& (0+255),w,b
  1896  0025DE  6FD2               	movwf	_address& (0+255),b
  1897  0025E0  6BD3               	clrf	(_address+1)& (0+255),b
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 124:   UARTSendString("Done writing to memory.");
  1901  0025E2  0E50               	movlw	low STR_15
  1902  0025E4  6FA0               	movwf	UARTSendString@c& (0+255),b
  1903  0025E6  0E06               	movlw	high STR_15
  1904  0025E8  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1905  0025EA  ECB2  F01C         	call	_UARTSendString	;wreg free
  1906                           
  1907                           ;main.c: 125:   UARTNewLine();
  1908  0025EE  ECAC  F01F         	call	_UARTNewLine	;wreg free
  1909                           
  1910                           ;main.c: 126:   UARTNewLine();
  1911  0025F2  ECAC  F01F         	call	_UARTNewLine	;wreg free
  1912                           
  1913                           ;main.c: 127:   UARTSendChar(0x2A);
  1914  0025F6  0E2A               	movlw	42
  1915  0025F8  ECB6  F01F         	call	_UARTSendChar
  1916  0025FC  0012               	return		;funcret
  1917  0025FE  FFFF               	dw	65535	; errata NOP
  1918  002600                     __end_of_write_SRAM:
  1919                           	opt callstack 0
  1920                           
  1921 ;; *************** function _write_op *****************
  1922 ;; Defined at:
  1923 ;;		line 9 in file "drive_memory.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  address         1    wreg     unsigned char 
  1926 ;;  data            1    0[COMRAM] unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  address         1    1[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         1       0       0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0
  1941 ;;      Totals:         2       0       0       0       0       0       0
  1942 ;;Total ram usage:        2 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_write_SRAM
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text2
  1953  003EC4                     __ptext2:
  1954                           	opt callstack 0
  1955  003EC4                     _write_op:
  1956                           	opt callstack 0
  1957  003EC4  FFFF               	dw	65535	; assembler added errata NOP
  1958                           
  1959                           ;incstack = 0
  1960                           ;write_op@address stored from wreg
  1961  003EC6  6E02               	movwf	write_op@address,c
  1962                           
  1963                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1964  003EC8  9094               	bcf	3988,0,c	;volatile
  1965                           
  1966                           ;drive_memory.c: 12:   TRISD = 0x00;
  1967  003ECA  0E00               	movlw	0
  1968  003ECC  6E95               	movwf	3989,c	;volatile
  1969                           
  1970                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1971  003ECE  0EC0               	movlw	192
  1972  003ED0  1693               	andwf	3987,f,c	;volatile
  1973                           
  1974                           ;drive_memory.c: 14:   PORTB = address;
  1975  003ED2  C002  FF81         	movff	write_op@address,3969	;volatile
  1976                           
  1977                           ;drive_memory.c: 15:   RB5 = 0;
  1978  003ED6  9A81               	bcf	3969,5,c	;volatile
  1979                           
  1980                           ;drive_memory.c: 17:   RC0 = 1;
  1981  003ED8  8082               	bsf	3970,0,c	;volatile
  1982                           
  1983                           ;drive_memory.c: 21:   RC0 = 0;
  1984  003EDA  9082               	bcf	3970,0,c	;volatile
  1985                           
  1986                           ;drive_memory.c: 23:   PORTD = data;
  1987                           
  1988                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1989  003EDC  C001  FF83         	movff	write_op@data,3971	;volatile
  1990                           
  1991                           ;drive_memory.c: 26:   RC0 = 1;
  1992                           
  1993                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1994  003EE0  8082               	bsf	3970,0,c	;volatile
  1995  003EE2  0012               	return		;funcret
  1996  003EE4  FFFF               	dw	65535	; errata NOP
  1997  003EE6                     __end_of_write_op:
  1998                           	opt callstack 0
  1999                           
  2000 ;; *************** function _get_temp *****************
  2001 ;; Defined at:
  2002 ;;		line 10 in file "temp_adc.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  temp            4   55[COMRAM] float 
  2007 ;;  real_voltage    4   51[COMRAM] float 
  2008 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  4   47[COMRAM] float 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2018 ;;      Params:         4       0       0       0       0       0       0
  2019 ;;      Locals:        10       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0
  2021 ;;      Totals:        14       0       0       0       0       0       0
  2022 ;;Total ram usage:       14 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    4
  2025 ;; This function calls:
  2026 ;;		_ADC_Init
  2027 ;;		_ADC_Read
  2028 ;;		___flmul
  2029 ;;		___flsub
  2030 ;;		___xxtofl
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;;		_write_SRAM
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text3
  2038  0034AC                     __ptext3:
  2039                           	opt callstack 0
  2040  0034AC                     _get_temp:
  2041                           	opt callstack 0
  2042  0034AC  FFFF               	dw	65535	; assembler added errata NOP
  2043                           
  2044                           ;temp_adc.c: 11:   ADC_Init();
  2045                           
  2046                           ;incstack = 0
  2047  0034AE  ECE5  F01F         	call	_ADC_Init	;wreg free
  2048                           
  2049                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  2050  0034B2  90C1               	bcf	4033,0,c	;volatile
  2051                           
  2052                           ;temp_adc.c: 13:   TRISA |= 0x01;
  2053  0034B4  8092               	bsf	3986,0,c	;volatile
  2054                           
  2055                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  2056  0034B6  0E00               	movlw	0
  2057  0034B8  ECA7  F01D         	call	_ADC_Read
  2058  0034BC  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  2059  0034C0  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  2060                           
  2061                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  2062  0034C4  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  2063  0034C8  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  2064  0034CC  6A03               	clrf	___xxtofl@val+2,c
  2065  0034CE  6A04               	clrf	___xxtofl@val+3,c
  2066  0034D0  0E00               	movlw	0
  2067  0034D2  EC49  F016         	call	___xxtofl
  2068  0034D6  C001  F00F         	movff	?___xxtofl,___flmul@b
  2069  0034DA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2070  0034DE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2071  0034E2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2072  0034E6  0E9F               	movlw	159
  2073  0034E8  6E13               	movwf	___flmul@a,c
  2074  0034EA  0EAB               	movlw	171
  2075  0034EC  6E14               	movwf	___flmul@a+1,c
  2076  0034EE  0EAD               	movlw	173
  2077  0034F0  6E15               	movwf	___flmul@a+2,c
  2078  0034F2  0E3B               	movlw	59
  2079  0034F4  6E16               	movwf	___flmul@a+3,c
  2080  0034F6  EC49  F00C         	call	___flmul	;wreg free
  2081  0034FA  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  2082  0034FE  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  2083  003502  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  2084  003506  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  2085                           
  2086                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  2087  00350A  0E00               	movlw	0
  2088  00350C  6E28               	movwf	___flsub@b,c
  2089  00350E  0E00               	movlw	0
  2090  003510  6E29               	movwf	___flsub@b+1,c
  2091  003512  0E48               	movlw	72
  2092  003514  6E2A               	movwf	___flsub@b+2,c
  2093  003516  0E43               	movlw	67
  2094  003518  6E2B               	movwf	___flsub@b+3,c
  2095  00351A  0E00               	movlw	0
  2096  00351C  6E13               	movwf	___flmul@a,c
  2097  00351E  0E00               	movlw	0
  2098  003520  6E14               	movwf	___flmul@a+1,c
  2099  003522  0E0C               	movlw	12
  2100  003524  6E15               	movwf	___flmul@a+2,c
  2101  003526  0E42               	movlw	66
  2102  003528  6E16               	movwf	___flmul@a+3,c
  2103  00352A  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  2104  00352E  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  2105  003532  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  2106  003536  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  2107  00353A  EC49  F00C         	call	___flmul	;wreg free
  2108  00353E  C00F  F02C         	movff	?___flmul,___flsub@a
  2109  003542  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2110  003546  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2111  00354A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2112  00354E  ECD1  F01D         	call	___flsub	;wreg free
  2113  003552  C028  F038         	movff	?___flsub,get_temp@temp
  2114  003556  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  2115  00355A  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  2116  00355E  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  2117                           
  2118                           ;temp_adc.c: 18:   return temp;
  2119  003562  C038  F030         	movff	get_temp@temp,?_get_temp
  2120  003566  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  2121  00356A  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  2122  00356E  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  2123  003572  0012               	return		;funcret
  2124  003574  FFFF               	dw	65535	; errata NOP
  2125  003576                     __end_of_get_temp:
  2126                           	opt callstack 0
  2127                           
  2128 ;; *************** function ___xxtofl *****************
  2129 ;; Defined at:
  2130 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  sign            1    wreg     unsigned char 
  2133 ;;  val             4    0[COMRAM] long 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  sign            1    8[COMRAM] unsigned char 
  2136 ;;  arg             4   10[COMRAM] unsigned long 
  2137 ;;  exp             1    9[COMRAM] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  4    0[COMRAM] unsigned char 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2147 ;;      Params:         4       0       0       0       0       0       0
  2148 ;;      Locals:         6       0       0       0       0       0       0
  2149 ;;      Temps:          4       0       0       0       0       0       0
  2150 ;;      Totals:        14       0       0       0       0       0       0
  2151 ;;Total ram usage:       14 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    2
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_get_temp
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text4
  2162  002C92                     __ptext4:
  2163                           	opt callstack 0
  2164  002C92                     ___xxtofl:
  2165                           	opt callstack 0
  2166  002C92  FFFF               	dw	65535	; assembler added errata NOP
  2167                           
  2168                           ;incstack = 0
  2169                           ;___xxtofl@sign stored from wreg
  2170  002C94  6E09               	movwf	___xxtofl@sign,c
  2171  002C96  5009               	movf	___xxtofl@sign,w,c
  2172  002C98  A4D8               	btfss	status,2,c
  2173  002C9A  AE04               	btfss	___xxtofl@val+3,7,c
  2174  002C9C  D01A               	goto	l1267
  2175  002C9E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2176  002CA2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2177  002CA6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2178  002CAA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2179  002CAE  1E05               	comf	??___xxtofl,f,c
  2180  002CB0  1E06               	comf	??___xxtofl+1,f,c
  2181  002CB2  1E07               	comf	??___xxtofl+2,f,c
  2182  002CB4  1E08               	comf	??___xxtofl+3,f,c
  2183  002CB6  2A05               	incf	??___xxtofl,f,c
  2184  002CB8  0E00               	movlw	0
  2185  002CBA  2206               	addwfc	??___xxtofl+1,f,c
  2186  002CBC  2207               	addwfc	??___xxtofl+2,f,c
  2187  002CBE  2208               	addwfc	??___xxtofl+3,f,c
  2188  002CC0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2189  002CC4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2190  002CC8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2191  002CCC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2192  002CD0  D009               	goto	l4804
  2193  002CD2                     l1267:
  2194  002CD2  FFFF               	dw	65535	; assembler added errata NOP
  2195  002CD4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2196  002CD8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2197  002CDC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2198  002CE0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2199  002CE4                     l4804:
  2200  002CE4  FFFF               	dw	65535	; assembler added errata NOP
  2201  002CE6  5001               	movf	___xxtofl@val,w,c
  2202  002CE8  1002               	iorwf	___xxtofl@val+1,w,c
  2203  002CEA  1003               	iorwf	___xxtofl@val+2,w,c
  2204  002CEC  1004               	iorwf	___xxtofl@val+3,w,c
  2205  002CEE  A4D8               	btfss	status,2,c
  2206  002CF0  D009               	goto	l4810
  2207  002CF2  0E00               	movlw	0
  2208  002CF4  6E01               	movwf	?___xxtofl,c
  2209  002CF6  0E00               	movlw	0
  2210  002CF8  6E02               	movwf	?___xxtofl+1,c
  2211  002CFA  0E00               	movlw	0
  2212  002CFC  6E03               	movwf	?___xxtofl+2,c
  2213  002CFE  0E00               	movlw	0
  2214  002D00  6E04               	movwf	?___xxtofl+3,c
  2215  002D02  D072               	goto	l1270
  2216  002D04                     l4810:
  2217  002D04  FFFF               	dw	65535	; assembler added errata NOP
  2218  002D06  0E96               	movlw	150
  2219  002D08  6E0A               	movwf	___xxtofl@exp,c
  2220  002D0A  D007               	goto	l4814
  2221  002D0C                     l4812:
  2222  002D0C  FFFF               	dw	65535	; assembler added errata NOP
  2223  002D0E  2A0A               	incf	___xxtofl@exp,f,c
  2224  002D10  90D8               	bcf	status,0,c
  2225  002D12  320E               	rrcf	___xxtofl@arg+3,f,c
  2226  002D14  320D               	rrcf	___xxtofl@arg+2,f,c
  2227  002D16  320C               	rrcf	___xxtofl@arg+1,f,c
  2228  002D18  320B               	rrcf	___xxtofl@arg,f,c
  2229  002D1A                     l4814:
  2230  002D1A  FFFF               	dw	65535	; assembler added errata NOP
  2231  002D1C  0E00               	movlw	0
  2232  002D1E  140B               	andwf	___xxtofl@arg,w,c
  2233  002D20  6E05               	movwf	??___xxtofl& (0+255),c
  2234  002D22  0E00               	movlw	0
  2235  002D24  140C               	andwf	___xxtofl@arg+1,w,c
  2236  002D26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2237  002D28  0E00               	movlw	0
  2238  002D2A  140D               	andwf	___xxtofl@arg+2,w,c
  2239  002D2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2240  002D2E  0EFE               	movlw	254
  2241  002D30  140E               	andwf	___xxtofl@arg+3,w,c
  2242  002D32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2243  002D34  5005               	movf	??___xxtofl,w,c
  2244  002D36  1006               	iorwf	??___xxtofl+1,w,c
  2245  002D38  1007               	iorwf	??___xxtofl+2,w,c
  2246  002D3A  1008               	iorwf	??___xxtofl+3,w,c
  2247  002D3C  B4D8               	btfsc	status,2,c
  2248  002D3E  D00E               	goto	l1274
  2249  002D40  D7E5               	goto	l4812
  2250  002D42                     l4816:
  2251  002D42  FFFF               	dw	65535	; assembler added errata NOP
  2252  002D44  2A0A               	incf	___xxtofl@exp,f,c
  2253  002D46  0E01               	movlw	1
  2254  002D48  260B               	addwf	___xxtofl@arg,f,c
  2255  002D4A  0E00               	movlw	0
  2256  002D4C  220C               	addwfc	___xxtofl@arg+1,f,c
  2257  002D4E  220D               	addwfc	___xxtofl@arg+2,f,c
  2258  002D50  220E               	addwfc	___xxtofl@arg+3,f,c
  2259  002D52  90D8               	bcf	status,0,c
  2260  002D54  320E               	rrcf	___xxtofl@arg+3,f,c
  2261  002D56  320D               	rrcf	___xxtofl@arg+2,f,c
  2262  002D58  320C               	rrcf	___xxtofl@arg+1,f,c
  2263  002D5A  320B               	rrcf	___xxtofl@arg,f,c
  2264  002D5C                     l1274:
  2265  002D5C  FFFF               	dw	65535	; assembler added errata NOP
  2266  002D5E  0E00               	movlw	0
  2267  002D60  140B               	andwf	___xxtofl@arg,w,c
  2268  002D62  6E05               	movwf	??___xxtofl& (0+255),c
  2269  002D64  0E00               	movlw	0
  2270  002D66  140C               	andwf	___xxtofl@arg+1,w,c
  2271  002D68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2272  002D6A  0E00               	movlw	0
  2273  002D6C  140D               	andwf	___xxtofl@arg+2,w,c
  2274  002D6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2275  002D70  0EFF               	movlw	255
  2276  002D72  140E               	andwf	___xxtofl@arg+3,w,c
  2277  002D74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2278  002D76  5005               	movf	??___xxtofl,w,c
  2279  002D78  1006               	iorwf	??___xxtofl+1,w,c
  2280  002D7A  1007               	iorwf	??___xxtofl+2,w,c
  2281  002D7C  1008               	iorwf	??___xxtofl+3,w,c
  2282  002D7E  B4D8               	btfsc	status,2,c
  2283  002D80  D008               	goto	l4824
  2284  002D82  D7DF               	goto	l4816
  2285  002D84                     l4822:
  2286  002D84  FFFF               	dw	65535	; assembler added errata NOP
  2287  002D86  060A               	decf	___xxtofl@exp,f,c
  2288  002D88  90D8               	bcf	status,0,c
  2289  002D8A  360B               	rlcf	___xxtofl@arg,f,c
  2290  002D8C  360C               	rlcf	___xxtofl@arg+1,f,c
  2291  002D8E  360D               	rlcf	___xxtofl@arg+2,f,c
  2292  002D90  360E               	rlcf	___xxtofl@arg+3,f,c
  2293  002D92                     l4824:
  2294  002D92  FFFF               	dw	65535	; assembler added errata NOP
  2295  002D94  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2296  002D96  D003               	goto	u5140
  2297  002D98  0E02               	movlw	2
  2298  002D9A  600A               	cpfslt	___xxtofl@exp,c
  2299  002D9C  D7F3               	goto	l4822
  2300  002D9E                     u5140:
  2301  002D9E  FFFF               	dw	65535	; assembler added errata NOP
  2302  002DA0  A00A               	btfss	___xxtofl@exp,0,c
  2303  002DA2  9E0D               	bcf	___xxtofl@arg+2,7,c
  2304  002DA4  90D8               	bcf	status,0,c
  2305  002DA6  320A               	rrcf	___xxtofl@exp,f,c
  2306  002DA8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2307  002DAC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2308  002DAE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2309  002DB0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2310  002DB2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2311  002DB6  6A07               	clrf	??___xxtofl+2,c
  2312  002DB8  6A06               	clrf	??___xxtofl+1,c
  2313  002DBA  6A05               	clrf	??___xxtofl,c
  2314  002DBC  5005               	movf	??___xxtofl,w,c
  2315  002DBE  120B               	iorwf	___xxtofl@arg,f,c
  2316  002DC0  5006               	movf	??___xxtofl+1,w,c
  2317  002DC2  120C               	iorwf	___xxtofl@arg+1,f,c
  2318  002DC4  5007               	movf	??___xxtofl+2,w,c
  2319  002DC6  120D               	iorwf	___xxtofl@arg+2,f,c
  2320  002DC8  5008               	movf	??___xxtofl+3,w,c
  2321  002DCA  120E               	iorwf	___xxtofl@arg+3,f,c
  2322  002DCC  5009               	movf	___xxtofl@sign,w,c
  2323  002DCE  A4D8               	btfss	status,2,c
  2324  002DD0  AE04               	btfss	___xxtofl@val+3,7,c
  2325  002DD2  D001               	goto	l4840
  2326  002DD4  8E0E               	bsf	___xxtofl@arg+3,7,c
  2327  002DD6                     l4840:
  2328  002DD6  FFFF               	dw	65535	; assembler added errata NOP
  2329  002DD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2330  002DDC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2331  002DE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2332  002DE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2333  002DE8                     l1270:
  2334  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  2335  002DEA  0012               	return		;funcret
  2336  002DEC  FFFF               	dw	65535	; errata NOP
  2337  002DEE                     __end_of___xxtofl:
  2338                           	opt callstack 0
  2339                           
  2340 ;; *************** function ___flsub *****************
  2341 ;; Defined at:
  2342 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  b               4   39[COMRAM] unsigned char 
  2345 ;;  a               4   43[COMRAM] unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  4   39[COMRAM] unsigned char 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:         8       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0
  2360 ;;      Totals:         8       0       0       0       0       0       0
  2361 ;;Total ram usage:        8 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    3
  2364 ;; This function calls:
  2365 ;;		___fladd
  2366 ;; This function is called by:
  2367 ;;		_get_temp
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text5
  2372  003BA2                     __ptext5:
  2373                           	opt callstack 0
  2374  003BA2                     ___flsub:
  2375                           	opt callstack 0
  2376  003BA2  FFFF               	dw	65535	; assembler added errata NOP
  2377                           
  2378                           ;incstack = 0
  2379  003BA4  0E00               	movlw	0
  2380  003BA6  1A2C               	xorwf	___flsub@a,f,c
  2381  003BA8  0E00               	movlw	0
  2382  003BAA  1A2D               	xorwf	___flsub@a+1,f,c
  2383  003BAC  0E00               	movlw	0
  2384  003BAE  1A2E               	xorwf	___flsub@a+2,f,c
  2385  003BB0  0E80               	movlw	128
  2386  003BB2  1A2F               	xorwf	___flsub@a+3,f,c
  2387  003BB4  C028  F001         	movff	___flsub@b,___fladd@b
  2388  003BB8  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  2389  003BBC  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  2390  003BC0  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  2391  003BC4  C02C  F005         	movff	___flsub@a,___fladd@a
  2392  003BC8  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  2393  003BCC  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  2394  003BD0  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  2395  003BD4  EC0A  F00E         	call	___fladd	;wreg free
  2396  003BD8  C001  F028         	movff	?___fladd,?___flsub
  2397  003BDC  C002  F029         	movff	?___fladd+1,?___flsub+1
  2398  003BE0  C003  F02A         	movff	?___fladd+2,?___flsub+2
  2399  003BE4  C004  F02B         	movff	?___fladd+3,?___flsub+3
  2400  003BE8  0012               	return		;funcret
  2401  003BEA  FFFF               	dw	65535	; errata NOP
  2402  003BEC                     __end_of___flsub:
  2403                           	opt callstack 0
  2404                           
  2405 ;; *************** function ___fladd *****************
  2406 ;; Defined at:
  2407 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  b               4    0[COMRAM] unsigned char 
  2410 ;;  a               4    4[COMRAM] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  grs             1   15[COMRAM] unsigned char 
  2413 ;;  bexp            1   14[COMRAM] unsigned char 
  2414 ;;  aexp            1   13[COMRAM] unsigned char 
  2415 ;;  signs           1   12[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  4    0[COMRAM] unsigned char 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2425 ;;      Params:         8       0       0       0       0       0       0
  2426 ;;      Locals:         4       0       0       0       0       0       0
  2427 ;;      Temps:          4       0       0       0       0       0       0
  2428 ;;      Totals:        16       0       0       0       0       0       0
  2429 ;;Total ram usage:       16 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    2
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		___flsub
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text6
  2440  001C14                     __ptext6:
  2441                           	opt callstack 0
  2442  001C14                     ___fladd:
  2443                           	opt callstack 0
  2444  001C14  FFFF               	dw	65535	; assembler added errata NOP
  2445                           
  2446                           ;incstack = 0
  2447  001C16  5004               	movf	___fladd@b+3,w,c
  2448  001C18  0B80               	andlw	128
  2449  001C1A  6E0D               	movwf	___fladd@signs,c
  2450  001C1C  5004               	movf	___fladd@b+3,w,c
  2451  001C1E  2404               	addwf	___fladd@b+3,w,c
  2452  001C20  6E0F               	movwf	___fladd@bexp,c
  2453  001C22  BE03               	btfsc	___fladd@b+2,7,c
  2454  001C24  800F               	bsf	___fladd@bexp,0,c
  2455  001C26  500F               	movf	___fladd@bexp,w,c
  2456  001C28  B4D8               	btfsc	status,2,c
  2457  001C2A  D00E               	goto	l4424
  2458  001C2C  280F               	incf	___fladd@bexp,w,c
  2459  001C2E  A4D8               	btfss	status,2,c
  2460  001C30  D008               	goto	l4420
  2461  001C32  0E00               	movlw	0
  2462  001C34  6E01               	movwf	___fladd@b,c
  2463  001C36  0E00               	movlw	0
  2464  001C38  6E02               	movwf	___fladd@b+1,c
  2465  001C3A  0E00               	movlw	0
  2466  001C3C  6E03               	movwf	___fladd@b+2,c
  2467  001C3E  0E00               	movlw	0
  2468  001C40  6E04               	movwf	___fladd@b+3,c
  2469  001C42                     l4420:
  2470  001C42  FFFF               	dw	65535	; assembler added errata NOP
  2471  001C44  8E03               	bsf	___fladd@b+2,7,c
  2472  001C46  D007               	goto	L3
  2473  001C48                     l4424:
  2474  001C48  FFFF               	dw	65535	; assembler added errata NOP
  2475  001C4A  0E00               	movlw	0
  2476  001C4C  6E01               	movwf	___fladd@b,c
  2477  001C4E  0E00               	movlw	0
  2478  001C50  6E02               	movwf	___fladd@b+1,c
  2479  001C52  0E00               	movlw	0
  2480  001C54  6E03               	movwf	___fladd@b+2,c
  2481  001C56                     L3:
  2482  001C56  FFFF               	dw	65535	; assembler added errata NOP
  2483  001C58  0E00               	movlw	0
  2484  001C5A  6E04               	movwf	___fladd@b+3,c
  2485  001C5C  5008               	movf	___fladd@a+3,w,c
  2486  001C5E  0B80               	andlw	128
  2487  001C60  6E0E               	movwf	___fladd@aexp,c
  2488  001C62  500D               	movf	___fladd@signs,w,c
  2489  001C64  180E               	xorwf	___fladd@aexp,w,c
  2490  001C66  A4D8               	btfss	status,2,c
  2491  001C68  8C0D               	bsf	___fladd@signs,6,c
  2492  001C6A  5008               	movf	___fladd@a+3,w,c
  2493  001C6C  2408               	addwf	___fladd@a+3,w,c
  2494  001C6E  6E0E               	movwf	___fladd@aexp,c
  2495  001C70  BE07               	btfsc	___fladd@a+2,7,c
  2496  001C72  800E               	bsf	___fladd@aexp,0,c
  2497  001C74  500E               	movf	___fladd@aexp,w,c
  2498  001C76  B4D8               	btfsc	status,2,c
  2499  001C78  D00E               	goto	l4448
  2500  001C7A  280E               	incf	___fladd@aexp,w,c
  2501  001C7C  A4D8               	btfss	status,2,c
  2502  001C7E  D008               	goto	l4444
  2503  001C80  0E00               	movlw	0
  2504  001C82  6E05               	movwf	___fladd@a,c
  2505  001C84  0E00               	movlw	0
  2506  001C86  6E06               	movwf	___fladd@a+1,c
  2507  001C88  0E00               	movlw	0
  2508  001C8A  6E07               	movwf	___fladd@a+2,c
  2509  001C8C  0E00               	movlw	0
  2510  001C8E  6E08               	movwf	___fladd@a+3,c
  2511  001C90                     l4444:
  2512  001C90  FFFF               	dw	65535	; assembler added errata NOP
  2513  001C92  8E07               	bsf	___fladd@a+2,7,c
  2514  001C94  D007               	goto	L4
  2515  001C96                     l4448:
  2516  001C96  FFFF               	dw	65535	; assembler added errata NOP
  2517  001C98  0E00               	movlw	0
  2518  001C9A  6E05               	movwf	___fladd@a,c
  2519  001C9C  0E00               	movlw	0
  2520  001C9E  6E06               	movwf	___fladd@a+1,c
  2521  001CA0  0E00               	movlw	0
  2522  001CA2  6E07               	movwf	___fladd@a+2,c
  2523  001CA4                     L4:
  2524  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  2525  001CA6  0E00               	movlw	0
  2526  001CA8  6E08               	movwf	___fladd@a+3,c
  2527  001CAA  500F               	movf	___fladd@bexp,w,c
  2528  001CAC  5C0E               	subwf	___fladd@aexp,w,c
  2529  001CAE  B0D8               	btfsc	status,0,c
  2530  001CB0  D023               	goto	l4486
  2531  001CB2  AC0D               	btfss	___fladd@signs,6,c
  2532  001CB4  D002               	goto	l4456
  2533  001CB6  0E80               	movlw	128
  2534  001CB8  1A0D               	xorwf	___fladd@signs,f,c
  2535  001CBA                     l4456:
  2536  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  2537  001CBC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2538  001CC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2539  001CC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2540  001CC8  C001  F010         	movff	___fladd@b,___fladd@grs
  2541  001CCC  C005  F001         	movff	___fladd@a,___fladd@b
  2542  001CD0  C010  F005         	movff	___fladd@grs,___fladd@a
  2543  001CD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2544  001CD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2545  001CDC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2546  001CE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2547  001CE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2548  001CE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2549  001CEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2550  001CF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2551  001CF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2552  001CF8                     l4486:
  2553  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  2554  001CFA  0E00               	movlw	0
  2555  001CFC  6E10               	movwf	___fladd@grs,c
  2556  001CFE  500F               	movf	___fladd@bexp,w,c
  2557  001D00  C00E  F009         	movff	___fladd@aexp,??___fladd
  2558  001D04  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2559  001D06  5E09               	subwf	??___fladd,f,c
  2560  001D08  0E00               	movlw	0
  2561  001D0A  5A0A               	subwfb	??___fladd+1,f,c
  2562  001D0C  BE0A               	btfsc	??___fladd+1,7,c
  2563  001D0E  D031               	goto	l1141
  2564  001D10  500A               	movf	??___fladd+1,w,c
  2565  001D12  E104               	bnz	u4540
  2566  001D14  0E1A               	movlw	26
  2567  001D16  5C09               	subwf	??___fladd,w,c
  2568  001D18  A0D8               	btfss	status,0,c
  2569  001D1A  D02B               	goto	l1141
  2570  001D1C                     u4540:
  2571  001D1C  5001               	movf	___fladd@b,w,c
  2572  001D1E  1002               	iorwf	___fladd@b+1,w,c
  2573  001D20  1003               	iorwf	___fladd@b+2,w,c
  2574  001D22  1004               	iorwf	___fladd@b+3,w,c
  2575  001D24  B4D8               	btfsc	status,2,c
  2576  001D26  D002               	goto	u4550
  2577  001D28  0E01               	movlw	1
  2578  001D2A  D002               	goto	u4560
  2579  001D2C                     u4550:
  2580  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  2581  001D2E  0E00               	movlw	0
  2582  001D30                     u4560:
  2583  001D30  FFFF               	dw	65535	; assembler added errata NOP
  2584  001D32  6E10               	movwf	___fladd@grs,c
  2585  001D34  0E00               	movlw	0
  2586  001D36  6E01               	movwf	___fladd@b,c
  2587  001D38  0E00               	movlw	0
  2588  001D3A  6E02               	movwf	___fladd@b+1,c
  2589  001D3C  0E00               	movlw	0
  2590  001D3E  6E03               	movwf	___fladd@b+2,c
  2591  001D40  0E00               	movlw	0
  2592  001D42  6E04               	movwf	___fladd@b+3,c
  2593  001D44  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2594  001D48  D019               	goto	u4590
  2595  001D4A                     l1142:
  2596  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  2597  001D4C  A010               	btfss	___fladd@grs,0,c
  2598  001D4E  D005               	goto	l4498
  2599  001D50  90D8               	bcf	status,0,c
  2600  001D52  3010               	rrcf	___fladd@grs,w,c
  2601  001D54  0901               	iorlw	1
  2602  001D56  6E10               	movwf	___fladd@grs,c
  2603  001D58  D003               	goto	l4500
  2604  001D5A                     l4498:
  2605  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  2606  001D5C  90D8               	bcf	status,0,c
  2607  001D5E  3210               	rrcf	___fladd@grs,f,c
  2608  001D60                     l4500:
  2609  001D60  FFFF               	dw	65535	; assembler added errata NOP
  2610  001D62  B001               	btfsc	___fladd@b,0,c
  2611  001D64  8E10               	bsf	___fladd@grs,7,c
  2612  001D66  3404               	rlcf	___fladd@b+3,w,c
  2613  001D68  3204               	rrcf	___fladd@b+3,f,c
  2614  001D6A  3203               	rrcf	___fladd@b+2,f,c
  2615  001D6C  3202               	rrcf	___fladd@b+1,f,c
  2616  001D6E  3201               	rrcf	___fladd@b,f,c
  2617  001D70  2A0F               	incf	___fladd@bexp,f,c
  2618  001D72                     l1141:
  2619  001D72  FFFF               	dw	65535	; assembler added errata NOP
  2620  001D74  500E               	movf	___fladd@aexp,w,c
  2621  001D76  5C0F               	subwf	___fladd@bexp,w,c
  2622  001D78  A0D8               	btfss	status,0,c
  2623  001D7A  D7E7               	goto	l1142
  2624  001D7C                     u4590:
  2625  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  2626  001D7E  BC0D               	btfsc	___fladd@signs,6,c
  2627  001D80  D021               	goto	l4532
  2628  001D82  500F               	movf	___fladd@bexp,w,c
  2629  001D84  B4D8               	btfsc	status,2,c
  2630  001D86  D065               	goto	u4680
  2631  001D88  5005               	movf	___fladd@a,w,c
  2632  001D8A  2601               	addwf	___fladd@b,f,c
  2633  001D8C  5006               	movf	___fladd@a+1,w,c
  2634  001D8E  2202               	addwfc	___fladd@b+1,f,c
  2635  001D90  5007               	movf	___fladd@a+2,w,c
  2636  001D92  2203               	addwfc	___fladd@b+2,f,c
  2637  001D94  5008               	movf	___fladd@a+3,w,c
  2638  001D96  2204               	addwfc	___fladd@b+3,f,c
  2639  001D98  A004               	btfss	___fladd@b+3,0,c
  2640  001D9A  D07B               	goto	u4720
  2641  001D9C  A010               	btfss	___fladd@grs,0,c
  2642  001D9E  D005               	goto	l4522
  2643  001DA0  90D8               	bcf	status,0,c
  2644  001DA2  3010               	rrcf	___fladd@grs,w,c
  2645  001DA4  0901               	iorlw	1
  2646  001DA6  6E10               	movwf	___fladd@grs,c
  2647  001DA8  D003               	goto	l4524
  2648  001DAA                     l4522:
  2649  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  2650  001DAC  90D8               	bcf	status,0,c
  2651  001DAE  3210               	rrcf	___fladd@grs,f,c
  2652  001DB0                     l4524:
  2653  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  2654  001DB2  B001               	btfsc	___fladd@b,0,c
  2655  001DB4  8E10               	bsf	___fladd@grs,7,c
  2656  001DB6  3404               	rlcf	___fladd@b+3,w,c
  2657  001DB8  3204               	rrcf	___fladd@b+3,f,c
  2658  001DBA  3203               	rrcf	___fladd@b+2,f,c
  2659  001DBC  3202               	rrcf	___fladd@b+1,f,c
  2660  001DBE  3201               	rrcf	___fladd@b,f,c
  2661  001DC0  2A0F               	incf	___fladd@bexp,f,c
  2662  001DC2  D067               	goto	u4720
  2663  001DC4                     l4532:
  2664  001DC4  FFFF               	dw	65535	; assembler added errata NOP
  2665  001DC6  5005               	movf	___fladd@a,w,c
  2666  001DC8  5C01               	subwf	___fladd@b,w,c
  2667  001DCA  5006               	movf	___fladd@a+1,w,c
  2668  001DCC  5802               	subwfb	___fladd@b+1,w,c
  2669  001DCE  5007               	movf	___fladd@a+2,w,c
  2670  001DD0  5803               	subwfb	___fladd@b+2,w,c
  2671  001DD2  5004               	movf	___fladd@b+3,w,c
  2672  001DD4  0A80               	xorlw	128
  2673  001DD6  6E09               	movwf	??___fladd& (0+255),c
  2674  001DD8  5008               	movf	___fladd@a+3,w,c
  2675  001DDA  0A80               	xorlw	128
  2676  001DDC  5809               	subwfb	??___fladd& (0+255),w,c
  2677  001DDE  B0D8               	btfsc	status,0,c
  2678  001DE0  D025               	goto	l4542
  2679  001DE2  5001               	movf	___fladd@b,w,c
  2680  001DE4  5C05               	subwf	___fladd@a,w,c
  2681  001DE6  6E09               	movwf	??___fladd& (0+255),c
  2682  001DE8  5002               	movf	___fladd@b+1,w,c
  2683  001DEA  5806               	subwfb	___fladd@a+1,w,c
  2684  001DEC  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2685  001DEE  5003               	movf	___fladd@b+2,w,c
  2686  001DF0  5807               	subwfb	___fladd@a+2,w,c
  2687  001DF2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2688  001DF4  5004               	movf	___fladd@b+3,w,c
  2689  001DF6  5808               	subwfb	___fladd@a+3,w,c
  2690  001DF8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2691  001DFA  0EFF               	movlw	255
  2692  001DFC  2409               	addwf	??___fladd,w,c
  2693  001DFE  6E01               	movwf	___fladd@b,c
  2694  001E00  0EFF               	movlw	255
  2695  001E02  200A               	addwfc	??___fladd+1,w,c
  2696  001E04  6E02               	movwf	___fladd@b+1,c
  2697  001E06  0EFF               	movlw	255
  2698  001E08  200B               	addwfc	??___fladd+2,w,c
  2699  001E0A  6E03               	movwf	___fladd@b+2,c
  2700  001E0C  0EFF               	movlw	255
  2701  001E0E  200C               	addwfc	??___fladd+3,w,c
  2702  001E10  6E04               	movwf	___fladd@b+3,c
  2703  001E12  0E80               	movlw	128
  2704  001E14  1A0D               	xorwf	___fladd@signs,f,c
  2705  001E16  6C10               	negf	___fladd@grs,c
  2706  001E18  5010               	movf	___fladd@grs,w,c
  2707  001E1A  A4D8               	btfss	status,2,c
  2708  001E1C  D010               	goto	l1157
  2709  001E1E  0E01               	movlw	1
  2710  001E20  2601               	addwf	___fladd@b,f,c
  2711  001E22  0E00               	movlw	0
  2712  001E24  2202               	addwfc	___fladd@b+1,f,c
  2713  001E26  2203               	addwfc	___fladd@b+2,f,c
  2714  001E28  2204               	addwfc	___fladd@b+3,f,c
  2715  001E2A  D009               	goto	l1157
  2716  001E2C                     l4542:
  2717  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  2718  001E2E  5005               	movf	___fladd@a,w,c
  2719  001E30  5E01               	subwf	___fladd@b,f,c
  2720  001E32  5006               	movf	___fladd@a+1,w,c
  2721  001E34  5A02               	subwfb	___fladd@b+1,f,c
  2722  001E36  5007               	movf	___fladd@a+2,w,c
  2723  001E38  5A03               	subwfb	___fladd@b+2,f,c
  2724  001E3A  5008               	movf	___fladd@a+3,w,c
  2725  001E3C  5A04               	subwfb	___fladd@b+3,f,c
  2726  001E3E                     l1157:
  2727  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  2728  001E40  5001               	movf	___fladd@b,w,c
  2729  001E42  1002               	iorwf	___fladd@b+1,w,c
  2730  001E44  1003               	iorwf	___fladd@b+2,w,c
  2731  001E46  1004               	iorwf	___fladd@b+3,w,c
  2732  001E48  A4D8               	btfss	status,2,c
  2733  001E4A  D020               	goto	l4566
  2734  001E4C  5010               	movf	___fladd@grs,w,c
  2735  001E4E  A4D8               	btfss	status,2,c
  2736  001E50  D01D               	goto	l4566
  2737  001E52                     u4680:
  2738  001E52  FFFF               	dw	65535	; assembler added errata NOP
  2739  001E54  0E00               	movlw	0
  2740  001E56  6E01               	movwf	?___fladd,c
  2741  001E58  0E00               	movlw	0
  2742  001E5A  6E02               	movwf	?___fladd+1,c
  2743  001E5C  0E00               	movlw	0
  2744  001E5E  6E03               	movwf	?___fladd+2,c
  2745  001E60  0E00               	movlw	0
  2746  001E62  6E04               	movwf	?___fladd+3,c
  2747  001E64  D076               	goto	l1149
  2748  001E66                     l4550:
  2749  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2750  001E68  90D8               	bcf	status,0,c
  2751  001E6A  3601               	rlcf	___fladd@b,f,c
  2752  001E6C  3602               	rlcf	___fladd@b+1,f,c
  2753  001E6E  3603               	rlcf	___fladd@b+2,f,c
  2754  001E70  3604               	rlcf	___fladd@b+3,f,c
  2755  001E72  BE10               	btfsc	___fladd@grs,7,c
  2756  001E74  8001               	bsf	___fladd@b,0,c
  2757  001E76  A010               	btfss	___fladd@grs,0,c
  2758  001E78  D002               	goto	l4560
  2759  001E7A  80D8               	bsf	status,0,c
  2760  001E7C  D002               	goto	L5
  2761  001E7E                     l4560:
  2762  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  2763  001E80  90D8               	bcf	status,0,c
  2764  001E82                     L5:
  2765  001E82  FFFF               	dw	65535	; assembler added errata NOP
  2766  001E84  3610               	rlcf	___fladd@grs,f,c
  2767  001E86  500F               	movf	___fladd@bexp,w,c
  2768  001E88  A4D8               	btfss	status,2,c
  2769  001E8A  060F               	decf	___fladd@bexp,f,c
  2770  001E8C                     l4566:
  2771  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2772  001E8E  AE03               	btfss	___fladd@b+2,7,c
  2773  001E90  D7EA               	goto	l4550
  2774  001E92                     u4720:
  2775  001E92  FFFF               	dw	65535	; assembler added errata NOP
  2776  001E94  0E00               	movlw	0
  2777  001E96  6E0E               	movwf	___fladd@aexp,c
  2778  001E98  AE10               	btfss	___fladd@grs,7,c
  2779  001E9A  D00D               	goto	l1166
  2780  001E9C  C010  F009         	movff	___fladd@grs,??___fladd
  2781  001EA0  0E7F               	movlw	127
  2782  001EA2  1609               	andwf	??___fladd,f,c
  2783  001EA4  B4D8               	btfsc	status,2,c
  2784  001EA6  D004               	goto	l1167
  2785  001EA8                     u4740:
  2786  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  2787  001EAA  0E01               	movlw	1
  2788  001EAC  6E0E               	movwf	___fladd@aexp,c
  2789  001EAE  D003               	goto	l1166
  2790  001EB0                     l1167:
  2791  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  2792  001EB2  B001               	btfsc	___fladd@b,0,c
  2793  001EB4  D7F9               	goto	u4740
  2794  001EB6                     l1166:
  2795  001EB6  FFFF               	dw	65535	; assembler added errata NOP
  2796  001EB8  500E               	movf	___fladd@aexp,w,c
  2797  001EBA  B4D8               	btfsc	status,2,c
  2798  001EBC  D020               	goto	l4586
  2799  001EBE  0E01               	movlw	1
  2800  001EC0  2601               	addwf	___fladd@b,f,c
  2801  001EC2  0E00               	movlw	0
  2802  001EC4  2202               	addwfc	___fladd@b+1,f,c
  2803  001EC6  2203               	addwfc	___fladd@b+2,f,c
  2804  001EC8  2204               	addwfc	___fladd@b+3,f,c
  2805  001ECA  A004               	btfss	___fladd@b+3,0,c
  2806  001ECC  D018               	goto	l4586
  2807  001ECE  C001  F009         	movff	___fladd@b,??___fladd
  2808  001ED2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2809  001ED6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2810  001EDA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2811  001EDE  340C               	rlcf	??___fladd+3,w,c
  2812  001EE0  320C               	rrcf	??___fladd+3,f,c
  2813  001EE2  320B               	rrcf	??___fladd+2,f,c
  2814  001EE4  320A               	rrcf	??___fladd+1,f,c
  2815  001EE6  3209               	rrcf	??___fladd,f,c
  2816  001EE8  C009  F001         	movff	??___fladd,___fladd@b
  2817  001EEC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2818  001EF0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2819  001EF4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2820  001EF8  280F               	incf	___fladd@bexp,w,c
  2821  001EFA  A4D8               	btfss	status,2,c
  2822  001EFC  2A0F               	incf	___fladd@bexp,f,c
  2823  001EFE                     l4586:
  2824  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  2825  001F00  280F               	incf	___fladd@bexp,w,c
  2826  001F02  B4D8               	btfsc	status,2,c
  2827  001F04  D003               	goto	u4800
  2828  001F06  500F               	movf	___fladd@bexp,w,c
  2829  001F08  A4D8               	btfss	status,2,c
  2830  001F0A  D00E               	goto	l4594
  2831  001F0C                     u4800:
  2832  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2833  001F0E  0E00               	movlw	0
  2834  001F10  6E01               	movwf	___fladd@b,c
  2835  001F12  0E00               	movlw	0
  2836  001F14  6E02               	movwf	___fladd@b+1,c
  2837  001F16  0E00               	movlw	0
  2838  001F18  6E03               	movwf	___fladd@b+2,c
  2839  001F1A  0E00               	movlw	0
  2840  001F1C  6E04               	movwf	___fladd@b+3,c
  2841  001F1E  500F               	movf	___fladd@bexp,w,c
  2842  001F20  A4D8               	btfss	status,2,c
  2843  001F22  D002               	goto	l4594
  2844  001F24  0E00               	movlw	0
  2845  001F26  6E0D               	movwf	___fladd@signs,c
  2846  001F28                     l4594:
  2847  001F28  FFFF               	dw	65535	; assembler added errata NOP
  2848  001F2A  A00F               	btfss	___fladd@bexp,0,c
  2849  001F2C  D002               	goto	l4598
  2850  001F2E  8E03               	bsf	___fladd@b+2,7,c
  2851  001F30  D002               	goto	l4600
  2852  001F32                     l4598:
  2853  001F32  FFFF               	dw	65535	; assembler added errata NOP
  2854  001F34  9E03               	bcf	___fladd@b+2,7,c
  2855  001F36                     l4600:
  2856  001F36  FFFF               	dw	65535	; assembler added errata NOP
  2857  001F38  90D8               	bcf	status,0,c
  2858  001F3A  300F               	rrcf	___fladd@bexp,w,c
  2859  001F3C  6E04               	movwf	___fladd@b+3,c
  2860  001F3E  BE0D               	btfsc	___fladd@signs,7,c
  2861  001F40  8E04               	bsf	___fladd@b+3,7,c
  2862  001F42  C001  F001         	movff	___fladd@b,?___fladd
  2863  001F46  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2864  001F4A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2865  001F4E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2866  001F52                     l1149:
  2867  001F52  FFFF               	dw	65535	; assembler added errata NOP
  2868  001F54  0012               	return		;funcret
  2869  001F56  FFFF               	dw	65535	; errata NOP
  2870  001F58                     __end_of___fladd:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function ___flmul *****************
  2874 ;; Defined at:
  2875 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  b               4   14[COMRAM] unsigned char 
  2878 ;;  a               4   18[COMRAM] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  prod            4   33[COMRAM] struct .
  2881 ;;  grs             4   27[COMRAM] unsigned long 
  2882 ;;  temp            2   37[COMRAM] struct .
  2883 ;;  bexp            1   32[COMRAM] unsigned char 
  2884 ;;  aexp            1   31[COMRAM] unsigned char 
  2885 ;;  sign            1   26[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  4   14[COMRAM] unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, prodl, prodh
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         8       0       0       0       0       0       0
  2896 ;;      Locals:        13       0       0       0       0       0       0
  2897 ;;      Temps:          4       0       0       0       0       0       0
  2898 ;;      Totals:        25       0       0       0       0       0       0
  2899 ;;Total ram usage:       25 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_get_temp
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text7
  2910  001892                     __ptext7:
  2911                           	opt callstack 0
  2912  001892                     ___flmul:
  2913                           	opt callstack 0
  2914  001892  FFFF               	dw	65535	; assembler added errata NOP
  2915                           
  2916                           ;incstack = 0
  2917  001894  5012               	movf	___flmul@b+3,w,c
  2918  001896  0B80               	andlw	128
  2919  001898  6E1B               	movwf	___flmul@sign,c
  2920  00189A  5012               	movf	___flmul@b+3,w,c
  2921  00189C  2412               	addwf	___flmul@b+3,w,c
  2922  00189E  6E21               	movwf	___flmul@bexp,c
  2923  0018A0  BE11               	btfsc	___flmul@b+2,7,c
  2924  0018A2  8021               	bsf	___flmul@bexp,0,c
  2925  0018A4  5021               	movf	___flmul@bexp,w,c
  2926  0018A6  B4D8               	btfsc	status,2,c
  2927  0018A8  D00E               	goto	l4676
  2928  0018AA  2821               	incf	___flmul@bexp,w,c
  2929  0018AC  A4D8               	btfss	status,2,c
  2930  0018AE  D008               	goto	l4674
  2931  0018B0  0E00               	movlw	0
  2932  0018B2  6E0F               	movwf	___flmul@b,c
  2933  0018B4  0E00               	movlw	0
  2934  0018B6  6E10               	movwf	___flmul@b+1,c
  2935  0018B8  0E00               	movlw	0
  2936  0018BA  6E11               	movwf	___flmul@b+2,c
  2937  0018BC  0E00               	movlw	0
  2938  0018BE  6E12               	movwf	___flmul@b+3,c
  2939  0018C0                     l4674:
  2940  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  2941  0018C2  8E11               	bsf	___flmul@b+2,7,c
  2942  0018C4  D009               	goto	l4678
  2943  0018C6                     l4676:
  2944  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  2945  0018C8  0E00               	movlw	0
  2946  0018CA  6E0F               	movwf	___flmul@b,c
  2947  0018CC  0E00               	movlw	0
  2948  0018CE  6E10               	movwf	___flmul@b+1,c
  2949  0018D0  0E00               	movlw	0
  2950  0018D2  6E11               	movwf	___flmul@b+2,c
  2951  0018D4  0E00               	movlw	0
  2952  0018D6  6E12               	movwf	___flmul@b+3,c
  2953  0018D8                     l4678:
  2954  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  2955  0018DA  5016               	movf	___flmul@a+3,w,c
  2956  0018DC  0B80               	andlw	128
  2957  0018DE  1A1B               	xorwf	___flmul@sign,f,c
  2958  0018E0  5016               	movf	___flmul@a+3,w,c
  2959  0018E2  2416               	addwf	___flmul@a+3,w,c
  2960  0018E4  6E20               	movwf	___flmul@aexp,c
  2961  0018E6  BE15               	btfsc	___flmul@a+2,7,c
  2962  0018E8  8020               	bsf	___flmul@aexp,0,c
  2963  0018EA  5020               	movf	___flmul@aexp,w,c
  2964  0018EC  B4D8               	btfsc	status,2,c
  2965  0018EE  D00E               	goto	l4694
  2966  0018F0  2820               	incf	___flmul@aexp,w,c
  2967  0018F2  A4D8               	btfss	status,2,c
  2968  0018F4  D008               	goto	l4692
  2969  0018F6  0E00               	movlw	0
  2970  0018F8  6E13               	movwf	___flmul@a,c
  2971  0018FA  0E00               	movlw	0
  2972  0018FC  6E14               	movwf	___flmul@a+1,c
  2973  0018FE  0E00               	movlw	0
  2974  001900  6E15               	movwf	___flmul@a+2,c
  2975  001902  0E00               	movlw	0
  2976  001904  6E16               	movwf	___flmul@a+3,c
  2977  001906                     l4692:
  2978  001906  FFFF               	dw	65535	; assembler added errata NOP
  2979  001908  8E15               	bsf	___flmul@a+2,7,c
  2980  00190A  D009               	goto	l1226
  2981  00190C                     l4694:
  2982  00190C  FFFF               	dw	65535	; assembler added errata NOP
  2983  00190E  0E00               	movlw	0
  2984  001910  6E13               	movwf	___flmul@a,c
  2985  001912  0E00               	movlw	0
  2986  001914  6E14               	movwf	___flmul@a+1,c
  2987  001916  0E00               	movlw	0
  2988  001918  6E15               	movwf	___flmul@a+2,c
  2989  00191A  0E00               	movlw	0
  2990  00191C  6E16               	movwf	___flmul@a+3,c
  2991  00191E                     l1226:
  2992  00191E  FFFF               	dw	65535	; assembler added errata NOP
  2993  001920  5020               	movf	___flmul@aexp,w,c
  2994  001922  B4D8               	btfsc	status,2,c
  2995  001924  D003               	goto	u4960
  2996  001926  5021               	movf	___flmul@bexp,w,c
  2997  001928  A4D8               	btfss	status,2,c
  2998  00192A  D00A               	goto	l4702
  2999  00192C                     u4960:
  3000  00192C  FFFF               	dw	65535	; assembler added errata NOP
  3001  00192E  0E00               	movlw	0
  3002  001930  6E0F               	movwf	?___flmul,c
  3003  001932  0E00               	movlw	0
  3004  001934  6E10               	movwf	?___flmul+1,c
  3005  001936  0E00               	movlw	0
  3006  001938  6E11               	movwf	?___flmul+2,c
  3007  00193A  0E00               	movlw	0
  3008  00193C  6E12               	movwf	?___flmul+3,c
  3009  00193E  D167               	goto	l1230
  3010  001940                     l4702:
  3011  001940  FFFF               	dw	65535	; assembler added errata NOP
  3012  001942  5015               	movf	___flmul@a+2,w,c
  3013  001944  020F               	mulwf	___flmul@b,c
  3014  001946  CFF3 F026          	movff	prodl,___flmul@temp
  3015  00194A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3016  00194E  5026               	movf	___flmul@temp,w,c
  3017  001950  6E1C               	movwf	___flmul@grs,c
  3018  001952  6A1D               	clrf	___flmul@grs+1,c
  3019  001954  6A1E               	clrf	___flmul@grs+2,c
  3020  001956  6A1F               	clrf	___flmul@grs+3,c
  3021  001958  5027               	movf	___flmul@temp+1,w,c
  3022  00195A  6E22               	movwf	___flmul@prod,c
  3023  00195C  6A23               	clrf	___flmul@prod+1,c
  3024  00195E  6A24               	clrf	___flmul@prod+2,c
  3025  001960  6A25               	clrf	___flmul@prod+3,c
  3026  001962  5014               	movf	___flmul@a+1,w,c
  3027  001964  0210               	mulwf	___flmul@b+1,c
  3028  001966  CFF3 F026          	movff	prodl,___flmul@temp
  3029  00196A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3030  00196E  5026               	movf	___flmul@temp,w,c
  3031  001970  261C               	addwf	___flmul@grs,f,c
  3032  001972  0E00               	movlw	0
  3033  001974  221D               	addwfc	___flmul@grs+1,f,c
  3034  001976  221E               	addwfc	___flmul@grs+2,f,c
  3035  001978  221F               	addwfc	___flmul@grs+3,f,c
  3036  00197A  5027               	movf	___flmul@temp+1,w,c
  3037  00197C  2622               	addwf	___flmul@prod,f,c
  3038  00197E  0E00               	movlw	0
  3039  001980  2223               	addwfc	___flmul@prod+1,f,c
  3040  001982  2224               	addwfc	___flmul@prod+2,f,c
  3041  001984  2225               	addwfc	___flmul@prod+3,f,c
  3042  001986  5013               	movf	___flmul@a,w,c
  3043  001988  0211               	mulwf	___flmul@b+2,c
  3044  00198A  CFF3 F026          	movff	prodl,___flmul@temp
  3045  00198E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3046  001992  5026               	movf	___flmul@temp,w,c
  3047  001994  261C               	addwf	___flmul@grs,f,c
  3048  001996  0E00               	movlw	0
  3049  001998  221D               	addwfc	___flmul@grs+1,f,c
  3050  00199A  221E               	addwfc	___flmul@grs+2,f,c
  3051  00199C  221F               	addwfc	___flmul@grs+3,f,c
  3052  00199E  5027               	movf	___flmul@temp+1,w,c
  3053  0019A0  2622               	addwf	___flmul@prod,f,c
  3054  0019A2  0E00               	movlw	0
  3055  0019A4  2223               	addwfc	___flmul@prod+1,f,c
  3056  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  3057  0019A8  2225               	addwfc	___flmul@prod+3,f,c
  3058  0019AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3059  0019AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3060  0019B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3061  0019B6  6A1C               	clrf	___flmul@grs,c
  3062  0019B8  5013               	movf	___flmul@a,w,c
  3063  0019BA  0210               	mulwf	___flmul@b+1,c
  3064  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  3065  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3066  0019C4  5026               	movf	___flmul@temp,w,c
  3067  0019C6  261C               	addwf	___flmul@grs,f,c
  3068  0019C8  5027               	movf	___flmul@temp+1,w,c
  3069  0019CA  221D               	addwfc	___flmul@grs+1,f,c
  3070  0019CC  0E00               	movlw	0
  3071  0019CE  221E               	addwfc	___flmul@grs+2,f,c
  3072  0019D0  0E00               	movlw	0
  3073  0019D2  221F               	addwfc	___flmul@grs+3,f,c
  3074  0019D4  5014               	movf	___flmul@a+1,w,c
  3075  0019D6  020F               	mulwf	___flmul@b,c
  3076  0019D8  CFF3 F026          	movff	prodl,___flmul@temp
  3077  0019DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3078  0019E0  5026               	movf	___flmul@temp,w,c
  3079  0019E2  261C               	addwf	___flmul@grs,f,c
  3080  0019E4  5027               	movf	___flmul@temp+1,w,c
  3081  0019E6  221D               	addwfc	___flmul@grs+1,f,c
  3082  0019E8  0E00               	movlw	0
  3083  0019EA  221E               	addwfc	___flmul@grs+2,f,c
  3084  0019EC  0E00               	movlw	0
  3085  0019EE  221F               	addwfc	___flmul@grs+3,f,c
  3086  0019F0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3087  0019F4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3088  0019F8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3089  0019FC  6A1C               	clrf	___flmul@grs,c
  3090  0019FE  5013               	movf	___flmul@a,w,c
  3091  001A00  020F               	mulwf	___flmul@b,c
  3092  001A02  CFF3 F026          	movff	prodl,___flmul@temp
  3093  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3094  001A0A  5026               	movf	___flmul@temp,w,c
  3095  001A0C  261C               	addwf	___flmul@grs,f,c
  3096  001A0E  5027               	movf	___flmul@temp+1,w,c
  3097  001A10  221D               	addwfc	___flmul@grs+1,f,c
  3098  001A12  0E00               	movlw	0
  3099  001A14  221E               	addwfc	___flmul@grs+2,f,c
  3100  001A16  0E00               	movlw	0
  3101  001A18  221F               	addwfc	___flmul@grs+3,f,c
  3102  001A1A  5015               	movf	___flmul@a+2,w,c
  3103  001A1C  0210               	mulwf	___flmul@b+1,c
  3104  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
  3105  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3106  001A26  5026               	movf	___flmul@temp,w,c
  3107  001A28  2622               	addwf	___flmul@prod,f,c
  3108  001A2A  5027               	movf	___flmul@temp+1,w,c
  3109  001A2C  2223               	addwfc	___flmul@prod+1,f,c
  3110  001A2E  0E00               	movlw	0
  3111  001A30  2224               	addwfc	___flmul@prod+2,f,c
  3112  001A32  0E00               	movlw	0
  3113  001A34  2225               	addwfc	___flmul@prod+3,f,c
  3114  001A36  5014               	movf	___flmul@a+1,w,c
  3115  001A38  0211               	mulwf	___flmul@b+2,c
  3116  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
  3117  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3118  001A42  5026               	movf	___flmul@temp,w,c
  3119  001A44  2622               	addwf	___flmul@prod,f,c
  3120  001A46  5027               	movf	___flmul@temp+1,w,c
  3121  001A48  2223               	addwfc	___flmul@prod+1,f,c
  3122  001A4A  0E00               	movlw	0
  3123  001A4C  2224               	addwfc	___flmul@prod+2,f,c
  3124  001A4E  0E00               	movlw	0
  3125  001A50  2225               	addwfc	___flmul@prod+3,f,c
  3126  001A52  5015               	movf	___flmul@a+2,w,c
  3127  001A54  0211               	mulwf	___flmul@b+2,c
  3128  001A56  CFF3 F026          	movff	prodl,___flmul@temp
  3129  001A5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3130  001A5E  5026               	movf	___flmul@temp,w,c
  3131  001A60  6E17               	movwf	??___flmul& (0+255),c
  3132  001A62  5027               	movf	___flmul@temp+1,w,c
  3133  001A64  6E18               	movwf	(??___flmul+1)& (0+255),c
  3134  001A66  6A19               	clrf	(??___flmul+2)& (0+255),c
  3135  001A68  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3136  001A6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3137  001A6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  3138  001A72  C017  F018         	movff	??___flmul,??___flmul+1
  3139  001A76  6A17               	clrf	??___flmul,c
  3140  001A78  5017               	movf	??___flmul,w,c
  3141  001A7A  2622               	addwf	___flmul@prod,f,c
  3142  001A7C  5018               	movf	??___flmul+1,w,c
  3143  001A7E  2223               	addwfc	___flmul@prod+1,f,c
  3144  001A80  5019               	movf	??___flmul+2,w,c
  3145  001A82  2224               	addwfc	___flmul@prod+2,f,c
  3146  001A84  501A               	movf	??___flmul+3,w,c
  3147  001A86  2225               	addwfc	___flmul@prod+3,f,c
  3148  001A88  C01C  F017         	movff	___flmul@grs,??___flmul
  3149  001A8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3150  001A90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3151  001A94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3152  001A98  0E19               	movlw	25
  3153  001A9A  D006               	goto	u4970
  3154  001A9C                     u4975:
  3155  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3156  001A9E  90D8               	bcf	status,0,c
  3157  001AA0  321A               	rrcf	??___flmul+3,f,c
  3158  001AA2  3219               	rrcf	??___flmul+2,f,c
  3159  001AA4  3218               	rrcf	??___flmul+1,f,c
  3160  001AA6  3217               	rrcf	??___flmul,f,c
  3161  001AA8                     u4970:
  3162  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  3163  001AAA  2EE8               	decfsz	wreg,f,c
  3164  001AAC  D7F7               	goto	u4975
  3165  001AAE  5017               	movf	??___flmul,w,c
  3166  001AB0  2622               	addwf	___flmul@prod,f,c
  3167  001AB2  5018               	movf	??___flmul+1,w,c
  3168  001AB4  2223               	addwfc	___flmul@prod+1,f,c
  3169  001AB6  5019               	movf	??___flmul+2,w,c
  3170  001AB8  2224               	addwfc	___flmul@prod+2,f,c
  3171  001ABA  501A               	movf	??___flmul+3,w,c
  3172  001ABC  2225               	addwfc	___flmul@prod+3,f,c
  3173  001ABE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3174  001AC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3175  001AC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3176  001ACA  6A1C               	clrf	___flmul@grs,c
  3177  001ACC  5020               	movf	___flmul@aexp,w,c
  3178  001ACE  C021  F017         	movff	___flmul@bexp,??___flmul
  3179  001AD2  6A18               	clrf	(??___flmul+1)& (0+255),c
  3180  001AD4  2617               	addwf	??___flmul,f,c
  3181  001AD6  0E00               	movlw	0
  3182  001AD8  2218               	addwfc	??___flmul+1,f,c
  3183  001ADA  0E82               	movlw	130
  3184  001ADC  2417               	addwf	??___flmul,w,c
  3185  001ADE  6E26               	movwf	___flmul@temp,c
  3186  001AE0  0EFF               	movlw	255
  3187  001AE2  2018               	addwfc	??___flmul+1,w,c
  3188  001AE4  6E27               	movwf	___flmul@temp+1,c
  3189  001AE6  D010               	goto	l4750
  3190  001AE8                     l4744:
  3191  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  3192  001AEA  90D8               	bcf	status,0,c
  3193  001AEC  3622               	rlcf	___flmul@prod,f,c
  3194  001AEE  3623               	rlcf	___flmul@prod+1,f,c
  3195  001AF0  3624               	rlcf	___flmul@prod+2,f,c
  3196  001AF2  3625               	rlcf	___flmul@prod+3,f,c
  3197  001AF4  BE1F               	btfsc	___flmul@grs+3,7,c
  3198  001AF6  8022               	bsf	___flmul@prod,0,c
  3199  001AF8  90D8               	bcf	status,0,c
  3200  001AFA  361C               	rlcf	___flmul@grs,f,c
  3201  001AFC  361D               	rlcf	___flmul@grs+1,f,c
  3202  001AFE  361E               	rlcf	___flmul@grs+2,f,c
  3203  001B00  361F               	rlcf	___flmul@grs+3,f,c
  3204  001B02  0626               	decf	___flmul@temp,f,c
  3205  001B04  A0D8               	btfss	status,0,c
  3206  001B06  0627               	decf	___flmul@temp+1,f,c
  3207  001B08                     l4750:
  3208  001B08  FFFF               	dw	65535	; assembler added errata NOP
  3209  001B0A  AE24               	btfss	___flmul@prod+2,7,c
  3210  001B0C  D7ED               	goto	l4744
  3211  001B0E  0E00               	movlw	0
  3212  001B10  6E20               	movwf	___flmul@aexp,c
  3213  001B12  AE1F               	btfss	___flmul@grs+3,7,c
  3214  001B14  D019               	goto	l1235
  3215  001B16  0EFF               	movlw	255
  3216  001B18  141C               	andwf	___flmul@grs,w,c
  3217  001B1A  6E17               	movwf	??___flmul& (0+255),c
  3218  001B1C  0EFF               	movlw	255
  3219  001B1E  141D               	andwf	___flmul@grs+1,w,c
  3220  001B20  6E18               	movwf	(??___flmul+1)& (0+255),c
  3221  001B22  0EFF               	movlw	255
  3222  001B24  141E               	andwf	___flmul@grs+2,w,c
  3223  001B26  6E19               	movwf	(??___flmul+2)& (0+255),c
  3224  001B28  0E7F               	movlw	127
  3225  001B2A  141F               	andwf	___flmul@grs+3,w,c
  3226  001B2C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3227  001B2E  5017               	movf	??___flmul,w,c
  3228  001B30  1018               	iorwf	??___flmul+1,w,c
  3229  001B32  1019               	iorwf	??___flmul+2,w,c
  3230  001B34  101A               	iorwf	??___flmul+3,w,c
  3231  001B36  B4D8               	btfsc	status,2,c
  3232  001B38  D004               	goto	l1236
  3233  001B3A                     u5010:
  3234  001B3A  FFFF               	dw	65535	; assembler added errata NOP
  3235  001B3C  0E01               	movlw	1
  3236  001B3E  6E20               	movwf	___flmul@aexp,c
  3237  001B40  D003               	goto	l1235
  3238  001B42                     l1236:
  3239  001B42  FFFF               	dw	65535	; assembler added errata NOP
  3240  001B44  B022               	btfsc	___flmul@prod,0,c
  3241  001B46  D7F9               	goto	u5010
  3242  001B48                     l1235:
  3243  001B48  FFFF               	dw	65535	; assembler added errata NOP
  3244  001B4A  5020               	movf	___flmul@aexp,w,c
  3245  001B4C  B4D8               	btfsc	status,2,c
  3246  001B4E  D01F               	goto	l4770
  3247  001B50  0E01               	movlw	1
  3248  001B52  2622               	addwf	___flmul@prod,f,c
  3249  001B54  0E00               	movlw	0
  3250  001B56  2223               	addwfc	___flmul@prod+1,f,c
  3251  001B58  2224               	addwfc	___flmul@prod+2,f,c
  3252  001B5A  2225               	addwfc	___flmul@prod+3,f,c
  3253  001B5C  A025               	btfss	___flmul@prod+3,0,c
  3254  001B5E  D017               	goto	l4770
  3255  001B60  C022  F017         	movff	___flmul@prod,??___flmul
  3256  001B64  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3257  001B68  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3258  001B6C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3259  001B70  341A               	rlcf	??___flmul+3,w,c
  3260  001B72  321A               	rrcf	??___flmul+3,f,c
  3261  001B74  3219               	rrcf	??___flmul+2,f,c
  3262  001B76  3218               	rrcf	??___flmul+1,f,c
  3263  001B78  3217               	rrcf	??___flmul,f,c
  3264  001B7A  C017  F022         	movff	??___flmul,___flmul@prod
  3265  001B7E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3266  001B82  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3267  001B86  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3268  001B8A  4A26               	infsnz	___flmul@temp,f,c
  3269  001B8C  2A27               	incf	___flmul@temp+1,f,c
  3270  001B8E                     l4770:
  3271  001B8E  FFFF               	dw	65535	; assembler added errata NOP
  3272  001B90  BE27               	btfsc	___flmul@temp+1,7,c
  3273  001B92  D00D               	goto	l4774
  3274  001B94  5027               	movf	___flmul@temp+1,w,c
  3275  001B96  E103               	bnz	u5050
  3276  001B98  2826               	incf	___flmul@temp,w,c
  3277  001B9A  A0D8               	btfss	status,0,c
  3278  001B9C  D008               	goto	l4774
  3279  001B9E                     u5050:
  3280  001B9E  0E00               	movlw	0
  3281  001BA0  6E22               	movwf	___flmul@prod,c
  3282  001BA2  0E00               	movlw	0
  3283  001BA4  6E23               	movwf	___flmul@prod+1,c
  3284  001BA6  0E80               	movlw	128
  3285  001BA8  6E24               	movwf	___flmul@prod+2,c
  3286  001BAA  0E7F               	movlw	127
  3287  001BAC  D023               	goto	L6
  3288  001BAE                     l4774:
  3289  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  3290  001BB0  BE27               	btfsc	___flmul@temp+1,7,c
  3291  001BB2  D005               	goto	u5060
  3292  001BB4  5027               	movf	___flmul@temp+1,w,c
  3293  001BB6  E10F               	bnz	l1243
  3294  001BB8  0426               	decf	___flmul@temp,w,c
  3295  001BBA  B0D8               	btfsc	status,0,c
  3296  001BBC  D00C               	goto	l1243
  3297  001BBE                     u5060:
  3298  001BBE  FFFF               	dw	65535	; assembler added errata NOP
  3299  001BC0  0E00               	movlw	0
  3300  001BC2  6E22               	movwf	___flmul@prod,c
  3301  001BC4  0E00               	movlw	0
  3302  001BC6  6E23               	movwf	___flmul@prod+1,c
  3303  001BC8  0E00               	movlw	0
  3304  001BCA  6E24               	movwf	___flmul@prod+2,c
  3305  001BCC  0E00               	movlw	0
  3306  001BCE  6E25               	movwf	___flmul@prod+3,c
  3307  001BD0  0E00               	movlw	0
  3308  001BD2  6E1B               	movwf	___flmul@sign,c
  3309  001BD4  D011               	goto	l4786
  3310  001BD6                     l1243:
  3311  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  3312  001BD8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3313  001BDC  0EFF               	movlw	255
  3314  001BDE  1622               	andwf	___flmul@prod,f,c
  3315  001BE0  0EFF               	movlw	255
  3316  001BE2  1623               	andwf	___flmul@prod+1,f,c
  3317  001BE4  0E7F               	movlw	127
  3318  001BE6  1624               	andwf	___flmul@prod+2,f,c
  3319  001BE8  0E00               	movlw	0
  3320  001BEA  1625               	andwf	___flmul@prod+3,f,c
  3321  001BEC  B021               	btfsc	___flmul@bexp,0,c
  3322  001BEE  8E24               	bsf	___flmul@prod+2,7,c
  3323  001BF0  90D8               	bcf	status,0,c
  3324  001BF2  3021               	rrcf	___flmul@bexp,w,c
  3325  001BF4                     L6:
  3326  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  3327  001BF6  6E25               	movwf	___flmul@prod+3,c
  3328  001BF8                     l4786:
  3329  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  3330  001BFA  501B               	movf	___flmul@sign,w,c
  3331  001BFC  1225               	iorwf	___flmul@prod+3,f,c
  3332  001BFE  C022  F00F         	movff	___flmul@prod,?___flmul
  3333  001C02  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3334  001C06  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3335  001C0A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3336  001C0E                     l1230:
  3337  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  3338  001C10  0012               	return		;funcret
  3339  001C12  FFFF               	dw	65535	; errata NOP
  3340  001C14                     __end_of___flmul:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _ADC_Read *****************
  3344 ;; Defined at:
  3345 ;;		line 28 in file "adc.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  channel         1    wreg     unsigned char 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  channel         1    4[COMRAM] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2    0[COMRAM] unsigned int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         2       0       0       0       0       0       0
  3360 ;;      Locals:         1       0       0       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0
  3362 ;;      Totals:         5       0       0       0       0       0       0
  3363 ;;Total ram usage:        5 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    2
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_get_temp
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text8
  3374  003B4E                     __ptext8:
  3375                           	opt callstack 0
  3376  003B4E                     _ADC_Read:
  3377                           	opt callstack 0
  3378  003B4E  FFFF               	dw	65535	; assembler added errata NOP
  3379                           
  3380                           ;incstack = 0
  3381                           ;ADC_Read@channel stored from wreg
  3382  003B50  6E05               	movwf	ADC_Read@channel,c
  3383                           
  3384                           ;adc.c: 29:  if(channel > 7)
  3385  003B52  0E07               	movlw	7
  3386  003B54  6405               	cpfsgt	ADC_Read@channel,c
  3387  003B56  D005               	goto	l4652
  3388                           
  3389                           ;adc.c: 30:  return 0;
  3390  003B58  0E00               	movlw	0
  3391  003B5A  6E02               	movwf	?_ADC_Read+1,c
  3392  003B5C  0E00               	movlw	0
  3393  003B5E  6E01               	movwf	?_ADC_Read,c
  3394  003B60  D01D               	goto	l335
  3395  003B62                     l4652:
  3396  003B62  FFFF               	dw	65535	; assembler added errata NOP
  3397                           
  3398                           ;adc.c: 31:  ADCON0 &= 0xC5;
  3399  003B64  0EC5               	movlw	197
  3400  003B66  16C2               	andwf	4034,f,c	;volatile
  3401                           
  3402                           ;adc.c: 32:  ADCON0 |= channel<<3;
  3403  003B68  3805               	swapf	ADC_Read@channel,w,c	;volatile
  3404  003B6A  42E8               	rrncf	wreg,f,c
  3405  003B6C  0BF8               	andlw	248
  3406  003B6E  12C2               	iorwf	4034,f,c	;volatile
  3407                           
  3408                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  3409  003B70  0E08               	movlw	8
  3410  003B72  6E03               	movwf	??_ADC_Read& (0+255),c
  3411  003B74  0ECB               	movlw	203
  3412  003B76                     u5547:
  3413  003B76  FFFF               	dw	65535	; errata NOP
  3414  003B78  2EE8               	decfsz	wreg,f,c
  3415  003B7A  D7FD               	bra	u5547
  3416  003B7C  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  3417  003B7E  D7FB               	bra	u5547
  3418  003B80  D000               	nop2	
  3419                           
  3420                           ;adc.c: 34:  GO_nDONE = 1;
  3421  003B82  84C2               	bsf	4034,2,c	;volatile
  3422  003B84                     l336:
  3423  003B84  FFFF               	dw	65535	; assembler added errata NOP
  3424  003B86  B4C2               	btfsc	4034,2,c	;volatile
  3425  003B88  D7FD               	goto	l336
  3426                           
  3427                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  3428  003B8A  50C4               	movf	4036,w,c	;volatile
  3429  003B8C  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  3430  003B8E  6A03               	clrf	??_ADC_Read& (0+255),c
  3431  003B90  50C3               	movf	4035,w,c	;volatile
  3432  003B92  2403               	addwf	??_ADC_Read,w,c
  3433  003B94  6E01               	movwf	?_ADC_Read,c
  3434  003B96  0E00               	movlw	0
  3435  003B98  2004               	addwfc	??_ADC_Read+1,w,c
  3436  003B9A  6E02               	movwf	?_ADC_Read+1,c
  3437  003B9C                     l335:
  3438  003B9C  FFFF               	dw	65535	; assembler added errata NOP
  3439  003B9E  0012               	return		;funcret
  3440  003BA0  FFFF               	dw	65535	; errata NOP
  3441  003BA2                     __end_of_ADC_Read:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _ADC_Init *****************
  3445 ;; Defined at:
  3446 ;;		line 23 in file "adc.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3460 ;;      Params:         0       0       0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0
  3463 ;;      Totals:         0       0       0       0       0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    2
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_get_temp
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text9
  3475  003FCA                     __ptext9:
  3476                           	opt callstack 0
  3477  003FCA                     _ADC_Init:
  3478                           	opt callstack 0
  3479  003FCA  FFFF               	dw	65535	; assembler added errata NOP
  3480                           
  3481                           ;adc.c: 24:  ADCON0 = 0x81;
  3482                           
  3483                           ;incstack = 0
  3484  003FCC  0E81               	movlw	129
  3485  003FCE  6EC2               	movwf	4034,c	;volatile
  3486                           
  3487                           ;adc.c: 25:  ADCON1 = 0x80;
  3488  003FD0  0E80               	movlw	128
  3489  003FD2  6EC1               	movwf	4033,c	;volatile
  3490  003FD4  0012               	return		;funcret
  3491  003FD6  FFFF               	dw	65535	; errata NOP
  3492  003FD8                     __end_of_ADC_Init:
  3493                           	opt callstack 0
  3494                           
  3495 ;; *************** function ___lldiv *****************
  3496 ;; Defined at:
  3497 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  dividend        4    4[COMRAM] unsigned long 
  3500 ;;  divisor         4    8[COMRAM] unsigned long 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  quotient        4   12[COMRAM] unsigned long 
  3503 ;;  counter         1   16[COMRAM] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  4    4[COMRAM] unsigned long 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3513 ;;      Params:         8       0       0       0       0       0       0
  3514 ;;      Locals:         5       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0
  3516 ;;      Totals:        13       0       0       0       0       0       0
  3517 ;;Total ram usage:       13 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    2
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_write_SRAM
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text10
  3528  00384A                     __ptext10:
  3529                           	opt callstack 0
  3530  00384A                     ___lldiv:
  3531                           	opt callstack 0
  3532  00384A  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ;incstack = 0
  3535  00384C  0E00               	movlw	0
  3536  00384E  6E0D               	movwf	___lldiv@quotient,c
  3537  003850  0E00               	movlw	0
  3538  003852  6E0E               	movwf	___lldiv@quotient+1,c
  3539  003854  0E00               	movlw	0
  3540  003856  6E0F               	movwf	___lldiv@quotient+2,c
  3541  003858  0E00               	movlw	0
  3542  00385A  6E10               	movwf	___lldiv@quotient+3,c
  3543  00385C  5009               	movf	___lldiv@divisor,w,c
  3544  00385E  100A               	iorwf	___lldiv@divisor+1,w,c
  3545  003860  100B               	iorwf	___lldiv@divisor+2,w,c
  3546  003862  100C               	iorwf	___lldiv@divisor+3,w,c
  3547  003864  B4D8               	btfsc	status,2,c
  3548  003866  D02E               	goto	l639
  3549  003868  0E01               	movlw	1
  3550  00386A  6E11               	movwf	___lldiv@counter,c
  3551  00386C  D007               	goto	l4968
  3552  00386E                     l4966:
  3553  00386E  FFFF               	dw	65535	; assembler added errata NOP
  3554  003870  90D8               	bcf	status,0,c
  3555  003872  3609               	rlcf	___lldiv@divisor,f,c
  3556  003874  360A               	rlcf	___lldiv@divisor+1,f,c
  3557  003876  360B               	rlcf	___lldiv@divisor+2,f,c
  3558  003878  360C               	rlcf	___lldiv@divisor+3,f,c
  3559  00387A  2A11               	incf	___lldiv@counter,f,c
  3560  00387C                     l4968:
  3561  00387C  FFFF               	dw	65535	; assembler added errata NOP
  3562  00387E  AE0C               	btfss	___lldiv@divisor+3,7,c
  3563  003880  D7F6               	goto	l4966
  3564  003882                     u5260:
  3565  003882  FFFF               	dw	65535	; assembler added errata NOP
  3566  003884  90D8               	bcf	status,0,c
  3567  003886  360D               	rlcf	___lldiv@quotient,f,c
  3568  003888  360E               	rlcf	___lldiv@quotient+1,f,c
  3569  00388A  360F               	rlcf	___lldiv@quotient+2,f,c
  3570  00388C  3610               	rlcf	___lldiv@quotient+3,f,c
  3571  00388E  5009               	movf	___lldiv@divisor,w,c
  3572  003890  5C05               	subwf	___lldiv@dividend,w,c
  3573  003892  500A               	movf	___lldiv@divisor+1,w,c
  3574  003894  5806               	subwfb	___lldiv@dividend+1,w,c
  3575  003896  500B               	movf	___lldiv@divisor+2,w,c
  3576  003898  5807               	subwfb	___lldiv@dividend+2,w,c
  3577  00389A  500C               	movf	___lldiv@divisor+3,w,c
  3578  00389C  5808               	subwfb	___lldiv@dividend+3,w,c
  3579  00389E  A0D8               	btfss	status,0,c
  3580  0038A0  D009               	goto	l4978
  3581  0038A2  5009               	movf	___lldiv@divisor,w,c
  3582  0038A4  5E05               	subwf	___lldiv@dividend,f,c
  3583  0038A6  500A               	movf	___lldiv@divisor+1,w,c
  3584  0038A8  5A06               	subwfb	___lldiv@dividend+1,f,c
  3585  0038AA  500B               	movf	___lldiv@divisor+2,w,c
  3586  0038AC  5A07               	subwfb	___lldiv@dividend+2,f,c
  3587  0038AE  500C               	movf	___lldiv@divisor+3,w,c
  3588  0038B0  5A08               	subwfb	___lldiv@dividend+3,f,c
  3589  0038B2  800D               	bsf	___lldiv@quotient,0,c
  3590  0038B4                     l4978:
  3591  0038B4  FFFF               	dw	65535	; assembler added errata NOP
  3592  0038B6  90D8               	bcf	status,0,c
  3593  0038B8  320C               	rrcf	___lldiv@divisor+3,f,c
  3594  0038BA  320B               	rrcf	___lldiv@divisor+2,f,c
  3595  0038BC  320A               	rrcf	___lldiv@divisor+1,f,c
  3596  0038BE  3209               	rrcf	___lldiv@divisor,f,c
  3597  0038C0  2E11               	decfsz	___lldiv@counter,f,c
  3598  0038C2  D7DF               	goto	u5260
  3599  0038C4                     l639:
  3600  0038C4  FFFF               	dw	65535	; assembler added errata NOP
  3601  0038C6  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3602  0038CA  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3603  0038CE  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3604  0038D2  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3605  0038D6  0012               	return		;funcret
  3606  0038D8  FFFF               	dw	65535	; errata NOP
  3607  0038DA                     __end_of___lldiv:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function ___fltol *****************
  3611 ;; Defined at:
  3612 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  f1              4   61[COMRAM] unsigned long 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  exp1            1   70[COMRAM] unsigned char 
  3617 ;;  sign1           1   69[COMRAM] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  4   61[COMRAM] long 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3627 ;;      Params:         4       0       0       0       0       0       0
  3628 ;;      Locals:         2       0       0       0       0       0       0
  3629 ;;      Temps:          4       0       0       0       0       0       0
  3630 ;;      Totals:        10       0       0       0       0       0       0
  3631 ;;Total ram usage:       10 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    2
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;;		_write_SRAM
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text11
  3643  0033D8                     __ptext11:
  3644                           	opt callstack 0
  3645  0033D8                     ___fltol:
  3646                           	opt callstack 0
  3647  0033D8  FFFF               	dw	65535	; assembler added errata NOP
  3648                           
  3649                           ;incstack = 0
  3650  0033DA  3440               	rlcf	___fltol@f1+2,w,c
  3651  0033DC  3441               	rlcf	___fltol@f1+3,w,c
  3652  0033DE  6E47               	movwf	___fltol@exp1,c
  3653  0033E0  5047               	movf	___fltol@exp1,w,c
  3654  0033E2  A4D8               	btfss	status,2,c
  3655  0033E4  D00A               	goto	l4988
  3656  0033E6                     u5280:
  3657  0033E6  FFFF               	dw	65535	; assembler added errata NOP
  3658  0033E8  0E00               	movlw	0
  3659  0033EA  6E3E               	movwf	?___fltol,c
  3660  0033EC  0E00               	movlw	0
  3661  0033EE  6E3F               	movwf	?___fltol+1,c
  3662  0033F0  0E00               	movlw	0
  3663  0033F2  6E40               	movwf	?___fltol+2,c
  3664  0033F4  0E00               	movlw	0
  3665  0033F6  6E41               	movwf	?___fltol+3,c
  3666  0033F8  D056               	goto	l909
  3667  0033FA                     l4988:
  3668  0033FA  FFFF               	dw	65535	; assembler added errata NOP
  3669  0033FC  C03E  F042         	movff	___fltol@f1,??___fltol
  3670  003400  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  3671  003404  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  3672  003408  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  3673  00340C  0E20               	movlw	32
  3674  00340E  D006               	goto	u5290
  3675  003410                     u5295:
  3676  003410  FFFF               	dw	65535	; assembler added errata NOP
  3677  003412  90D8               	bcf	status,0,c
  3678  003414  3245               	rrcf	??___fltol+3,f,c
  3679  003416  3244               	rrcf	??___fltol+2,f,c
  3680  003418  3243               	rrcf	??___fltol+1,f,c
  3681  00341A  3242               	rrcf	??___fltol,f,c
  3682  00341C                     u5290:
  3683  00341C  FFFF               	dw	65535	; assembler added errata NOP
  3684  00341E  2EE8               	decfsz	wreg,f,c
  3685  003420  D7F7               	goto	u5295
  3686  003422  5042               	movf	??___fltol,w,c
  3687  003424  6E46               	movwf	___fltol@sign1,c
  3688  003426  8E40               	bsf	___fltol@f1+2,7,c
  3689  003428  0EFF               	movlw	255
  3690  00342A  163E               	andwf	___fltol@f1,f,c
  3691  00342C  0EFF               	movlw	255
  3692  00342E  163F               	andwf	___fltol@f1+1,f,c
  3693  003430  0EFF               	movlw	255
  3694  003432  1640               	andwf	___fltol@f1+2,f,c
  3695  003434  0E00               	movlw	0
  3696  003436  1641               	andwf	___fltol@f1+3,f,c
  3697  003438  0E96               	movlw	150
  3698  00343A  5E47               	subwf	___fltol@exp1,f,c
  3699  00343C  AE47               	btfss	___fltol@exp1,7,c
  3700  00343E  D00E               	goto	l5008
  3701  003440  5047               	movf	___fltol@exp1,w,c
  3702  003442  0A80               	xorlw	128
  3703  003444  0F97               	addlw	151
  3704  003446  A0D8               	btfss	status,0,c
  3705  003448  D7CE               	goto	u5280
  3706  00344A                     l5004:
  3707  00344A  FFFF               	dw	65535	; assembler added errata NOP
  3708  00344C  90D8               	bcf	status,0,c
  3709  00344E  3241               	rrcf	___fltol@f1+3,f,c
  3710  003450  3240               	rrcf	___fltol@f1+2,f,c
  3711  003452  323F               	rrcf	___fltol@f1+1,f,c
  3712  003454  323E               	rrcf	___fltol@f1,f,c
  3713  003456  3E47               	incfsz	___fltol@exp1,f,c
  3714  003458  D7F8               	goto	l5004
  3715  00345A  D010               	goto	u5330
  3716  00345C                     l5008:
  3717  00345C  FFFF               	dw	65535	; assembler added errata NOP
  3718  00345E  0E1F               	movlw	31
  3719  003460  6447               	cpfsgt	___fltol@exp1,c
  3720  003462  D008               	goto	l5016
  3721  003464  D7C0               	goto	u5280
  3722  003466                     l5014:
  3723  003466  FFFF               	dw	65535	; assembler added errata NOP
  3724  003468  90D8               	bcf	status,0,c
  3725  00346A  363E               	rlcf	___fltol@f1,f,c
  3726  00346C  363F               	rlcf	___fltol@f1+1,f,c
  3727  00346E  3640               	rlcf	___fltol@f1+2,f,c
  3728  003470  3641               	rlcf	___fltol@f1+3,f,c
  3729  003472  0647               	decf	___fltol@exp1,f,c
  3730  003474                     l5016:
  3731  003474  FFFF               	dw	65535	; assembler added errata NOP
  3732  003476  5047               	movf	___fltol@exp1,w,c
  3733  003478  A4D8               	btfss	status,2,c
  3734  00347A  D7F5               	goto	l5014
  3735  00347C                     u5330:
  3736  00347C  FFFF               	dw	65535	; assembler added errata NOP
  3737  00347E  5046               	movf	___fltol@sign1,w,c
  3738  003480  B4D8               	btfsc	status,2,c
  3739  003482  D008               	goto	l5022
  3740  003484  1E41               	comf	___fltol@f1+3,f,c
  3741  003486  1E40               	comf	___fltol@f1+2,f,c
  3742  003488  1E3F               	comf	___fltol@f1+1,f,c
  3743  00348A  6C3E               	negf	___fltol@f1,c
  3744  00348C  0E00               	movlw	0
  3745  00348E  223F               	addwfc	___fltol@f1+1,f,c
  3746  003490  2240               	addwfc	___fltol@f1+2,f,c
  3747  003492  2241               	addwfc	___fltol@f1+3,f,c
  3748  003494                     l5022:
  3749  003494  FFFF               	dw	65535	; assembler added errata NOP
  3750  003496  C03E  F03E         	movff	___fltol@f1,?___fltol
  3751  00349A  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  3752  00349E  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  3753  0034A2  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  3754  0034A6                     l909:
  3755  0034A6  FFFF               	dw	65535	; assembler added errata NOP
  3756  0034A8  0012               	return		;funcret
  3757  0034AA  FFFF               	dw	65535	; errata NOP
  3758  0034AC                     __end_of___fltol:
  3759                           	opt callstack 0
  3760                           
  3761 ;; *************** function _Timer0_StopTimer *****************
  3762 ;; Defined at:
  3763 ;;		line 26 in file "timer.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2  141[None  ] int 
  3770 ;; Registers used:
  3771 ;;		None
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3777 ;;      Params:         0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_write_SRAM
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text12
  3792  003FF0                     __ptext12:
  3793                           	opt callstack 0
  3794  003FF0                     _Timer0_StopTimer:
  3795                           	opt callstack 0
  3796  003FF0  FFFF               	dw	65535	; assembler added errata NOP
  3797                           
  3798                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  3799                           
  3800                           ;incstack = 0
  3801  003FF2  9ED5               	bcf	4053,7,c	;volatile
  3802                           
  3803                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  3804  003FF4  0012               	return		;funcret
  3805  003FF6  FFFF               	dw	65535	; errata NOP
  3806  003FF8                     __end_of_Timer0_StopTimer:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _Timer0_StartTimer *****************
  3810 ;; Defined at:
  3811 ;;		line 21 in file "timer.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2  109[None  ] int 
  3818 ;; Registers used:
  3819 ;;		None
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3825 ;;      Params:         0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    2
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;;		_write_SRAM
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text13
  3841  003FF8                     __ptext13:
  3842                           	opt callstack 0
  3843  003FF8                     _Timer0_StartTimer:
  3844                           	opt callstack 0
  3845  003FF8  FFFF               	dw	65535	; assembler added errata NOP
  3846                           
  3847                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  3848                           
  3849                           ;incstack = 0
  3850  003FFA  8ED5               	bsf	4053,7,c	;volatile
  3851                           
  3852                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  3853  003FFC  0012               	return		;funcret
  3854  003FFE  FFFF               	dw	65535	; errata NOP
  3855  004000                     __end_of_Timer0_StartTimer:
  3856                           	opt callstack 0
  3857                           
  3858 ;; *************** function _ReadTime *****************
  3859 ;; Defined at:
  3860 ;;		line 17 in file "timer.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  4    0[COMRAM] unsigned long 
  3867 ;; Registers used:
  3868 ;;		None
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3874 ;;      Params:         4       0       0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0
  3877 ;;      Totals:         4       0       0       0       0       0       0
  3878 ;;Total ram usage:        4 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    2
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_write_SRAM
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text14
  3889  003F42                     __ptext14:
  3890                           	opt callstack 0
  3891  003F42                     _ReadTime:
  3892                           	opt callstack 0
  3893  003F42  FFFF               	dw	65535	; assembler added errata NOP
  3894                           
  3895                           ;timer.c: 18:  return time_ms;
  3896                           
  3897                           ;incstack = 0
  3898  003F44  C0C4  F001         	movff	_time_ms,?_ReadTime	;volatile
  3899  003F48  C0C5  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  3900  003F4C  C0C6  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  3901  003F50  C0C7  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  3902  003F54  0012               	return		;funcret
  3903  003F56  FFFF               	dw	65535	; errata NOP
  3904  003F58                     __end_of_ReadTime:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function _set_duty_cycle *****************
  3908 ;; Defined at:
  3909 ;;		line 18 in file "pwm.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  upper_8         1    wreg     unsigned char 
  3912 ;;  lower_2         1    0[COMRAM] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  upper_8         1    1[COMRAM] unsigned char 
  3915 ;;  mask            1    2[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3925 ;;      Params:         1       0       0       0       0       0       0
  3926 ;;      Locals:         2       0       0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0
  3928 ;;      Totals:         3       0       0       0       0       0       0
  3929 ;;Total ram usage:        3 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text15
  3940  003EE6                     __ptext15:
  3941                           	opt callstack 0
  3942  003EE6                     _set_duty_cycle:
  3943                           	opt callstack 0
  3944  003EE6  FFFF               	dw	65535	; assembler added errata NOP
  3945                           
  3946                           ;incstack = 0
  3947                           ;set_duty_cycle@upper_8 stored from wreg
  3948  003EE8  6E02               	movwf	set_duty_cycle@upper_8,c
  3949                           
  3950                           ;pwm.c: 19:   CCPR1L = upper_8;
  3951  003EEA  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  3952                           
  3953                           ;pwm.c: 20:   char mask = 0;
  3954  003EEE  0E00               	movlw	0
  3955  003EF0  6E03               	movwf	set_duty_cycle@mask,c
  3956                           
  3957                           ;pwm.c: 21:   mask |= lower_2;
  3958  003EF2  5001               	movf	set_duty_cycle@lower_2,w,c
  3959  003EF4  1203               	iorwf	set_duty_cycle@mask,f,c
  3960                           
  3961                           ;pwm.c: 22:   mask = mask << 4;
  3962  003EF6  3803               	swapf	set_duty_cycle@mask,w,c
  3963  003EF8  0BF0               	andlw	240
  3964  003EFA  6E03               	movwf	set_duty_cycle@mask,c
  3965                           
  3966                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  3967  003EFC  50BD               	movf	4029,w,c	;volatile
  3968  003EFE  0BCF               	andlw	207
  3969  003F00  1003               	iorwf	set_duty_cycle@mask,w,c
  3970  003F02  6EBD               	movwf	4029,c	;volatile
  3971  003F04  0012               	return		;funcret
  3972  003F06  FFFF               	dw	65535	; errata NOP
  3973  003F08                     __end_of_set_duty_cycle:
  3974                           	opt callstack 0
  3975                           
  3976 ;; *************** function _read_SRAM *****************
  3977 ;; Defined at:
  3978 ;;		line 83 in file "main.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  address         2   38[BANK0 ] int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  time_elapsed    2   44[BANK0 ] int 
  3983 ;;  stored_temp     2   42[BANK0 ] int 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3993 ;;      Params:         0       2       0       0       0       0       0
  3994 ;;      Locals:         0       4       0       0       0       0       0
  3995 ;;      Temps:          0       2       0       0       0       0       0
  3996 ;;      Totals:         0       8       0       0       0       0       0
  3997 ;;Total ram usage:        8 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:   11
  4000 ;; This function calls:
  4001 ;;		_UARTNewLine
  4002 ;;		_UARTSendChar
  4003 ;;		_UARTSendString
  4004 ;;		_int_to_char
  4005 ;;		_read_op
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text16
  4012  0031C6                     __ptext16:
  4013                           	opt callstack 0
  4014  0031C6                     _read_SRAM:
  4015                           	opt callstack 0
  4016  0031C6  FFFF               	dw	65535	; assembler added errata NOP
  4017                           
  4018                           ;main.c: 84:   int stored_temp = read_op(address);
  4019                           
  4020                           ;incstack = 0
  4021  0031C8  0100               	movlb	0	; () banked
  4022  0031CA  51A6               	movf	read_SRAM@address& (0+255),w,b
  4023  0031CC  EC84  F01F         	call	_read_op
  4024  0031D0  0100               	movlb	0	; () banked
  4025  0031D2  6FA8               	movwf	??_read_SRAM& (0+255),b
  4026  0031D4  51A8               	movf	??_read_SRAM& (0+255),w,b
  4027  0031D6  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  4028  0031D8  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  4029                           
  4030                           ;main.c: 85:   int time_elapsed = read_op(address + 1);
  4031  0031DA  29A6               	incf	read_SRAM@address& (0+255),w,b
  4032  0031DC  EC84  F01F         	call	_read_op
  4033  0031E0  0100               	movlb	0	; () banked
  4034  0031E2  6FA8               	movwf	??_read_SRAM& (0+255),b
  4035  0031E4  51A8               	movf	??_read_SRAM& (0+255),w,b
  4036  0031E6  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  4037  0031E8  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;main.c: 86:   TRISCbits.TRISC7 = 0;
  4041  0031EA  9E94               	bcf	3988,7,c	;volatile
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;main.c: 87:   UARTSendString("Temperature at address ");
  4045  0031EC  0E38               	movlw	low STR_4
  4046  0031EE  6FA0               	movwf	UARTSendString@c& (0+255),b
  4047  0031F0  0E06               	movlw	high STR_4
  4048  0031F2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4049  0031F4  ECB2  F01C         	call	_UARTSendString	;wreg free
  4050                           
  4051                           ;main.c: 88:   UARTSendString(int_to_char(address));
  4052  0031F8  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  4053  0031FC  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  4054  003200  0E00               	movlw	0
  4055  003202  BE7B               	btfsc	int_to_char@num+1,7,c
  4056  003204  0EFF               	movlw	-1
  4057  003206  6E7C               	movwf	int_to_char@num+2,c
  4058  003208  6E7D               	movwf	int_to_char@num+3,c
  4059  00320A  ECF6  F01D         	call	_int_to_char	;wreg free
  4060  00320E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4061  003212  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4062  003216  ECB2  F01C         	call	_UARTSendString	;wreg free
  4063                           
  4064                           ;main.c: 89:   UARTSendString(": ");
  4065  00321A  0EEB               	movlw	low STR_5
  4066  00321C  0100               	movlb	0	; () banked
  4067  00321E  6FA0               	movwf	UARTSendString@c& (0+255),b
  4068  003220  0E06               	movlw	high STR_5
  4069  003222  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4070  003224  ECB2  F01C         	call	_UARTSendString	;wreg free
  4071                           
  4072                           ;main.c: 90:   UARTSendString(int_to_char(stored_temp));
  4073  003228  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  4074  00322C  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  4075  003230  0E00               	movlw	0
  4076  003232  BE7B               	btfsc	int_to_char@num+1,7,c
  4077  003234  0EFF               	movlw	-1
  4078  003236  6E7C               	movwf	int_to_char@num+2,c
  4079  003238  6E7D               	movwf	int_to_char@num+3,c
  4080  00323A  ECF6  F01D         	call	_int_to_char	;wreg free
  4081  00323E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4082  003242  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4083  003246  ECB2  F01C         	call	_UARTSendString	;wreg free
  4084                           
  4085                           ;main.c: 91:   UARTSendString(" degrees C ");
  4086  00324A  0E86               	movlw	low STR_6
  4087  00324C  0100               	movlb	0	; () banked
  4088  00324E  6FA0               	movwf	UARTSendString@c& (0+255),b
  4089  003250  0E06               	movlw	high STR_6
  4090  003252  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4091  003254  ECB2  F01C         	call	_UARTSendString	;wreg free
  4092                           
  4093                           ;main.c: 92:   UARTNewLine();
  4094  003258  ECAC  F01F         	call	_UARTNewLine	;wreg free
  4095                           
  4096                           ;main.c: 93:   UARTSendString("Time at address ");
  4097  00325C  0E68               	movlw	low STR_7
  4098  00325E  0100               	movlb	0	; () banked
  4099  003260  6FA0               	movwf	UARTSendString@c& (0+255),b
  4100  003262  0E06               	movlw	high STR_7
  4101  003264  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4102  003266  ECB2  F01C         	call	_UARTSendString	;wreg free
  4103                           
  4104                           ;main.c: 94:   UARTSendString(int_to_char(address + 1));
  4105  00326A  0E01               	movlw	1
  4106  00326C  0100               	movlb	0	; () banked
  4107  00326E  25A6               	addwf	read_SRAM@address& (0+255),w,b
  4108  003270  6FA8               	movwf	??_read_SRAM& (0+255),b
  4109  003272  0E00               	movlw	0
  4110  003274  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  4111  003276  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4112  003278  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  4113  00327C  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  4114  003280  0E00               	movlw	0
  4115  003282  BE7B               	btfsc	int_to_char@num+1,7,c
  4116  003284  0EFF               	movlw	-1
  4117  003286  6E7C               	movwf	int_to_char@num+2,c
  4118  003288  6E7D               	movwf	int_to_char@num+3,c
  4119  00328A  ECF6  F01D         	call	_int_to_char	;wreg free
  4120  00328E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4121  003292  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4122  003296  ECB2  F01C         	call	_UARTSendString	;wreg free
  4123                           
  4124                           ;main.c: 95:   UARTSendString(": ");
  4125  00329A  0EEB               	movlw	low STR_5
  4126  00329C  0100               	movlb	0	; () banked
  4127  00329E  6FA0               	movwf	UARTSendString@c& (0+255),b
  4128  0032A0  0E06               	movlw	high STR_5
  4129  0032A2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4130  0032A4  ECB2  F01C         	call	_UARTSendString	;wreg free
  4131                           
  4132                           ;main.c: 96:   UARTSendString(int_to_char(time_elapsed));
  4133  0032A8  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  4134  0032AC  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  4135  0032B0  0E00               	movlw	0
  4136  0032B2  BE7B               	btfsc	int_to_char@num+1,7,c
  4137  0032B4  0EFF               	movlw	-1
  4138  0032B6  6E7C               	movwf	int_to_char@num+2,c
  4139  0032B8  6E7D               	movwf	int_to_char@num+3,c
  4140  0032BA  ECF6  F01D         	call	_int_to_char	;wreg free
  4141  0032BE  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4142  0032C2  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4143  0032C6  ECB2  F01C         	call	_UARTSendString	;wreg free
  4144                           
  4145                           ;main.c: 97:   UARTSendString(" minutes");
  4146  0032CA  0E9B               	movlw	low STR_9
  4147  0032CC  0100               	movlb	0	; () banked
  4148  0032CE  6FA0               	movwf	UARTSendString@c& (0+255),b
  4149  0032D0  0E06               	movlw	high STR_9
  4150  0032D2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4151  0032D4  ECB2  F01C         	call	_UARTSendString	;wreg free
  4152                           
  4153                           ;main.c: 98:   UARTNewLine();
  4154  0032D8  ECAC  F01F         	call	_UARTNewLine	;wreg free
  4155                           
  4156                           ;main.c: 99:   UARTSendString("Done reading from memory.");
  4157  0032DC  0E1E               	movlw	low STR_10
  4158  0032DE  0100               	movlb	0	; () banked
  4159  0032E0  6FA0               	movwf	UARTSendString@c& (0+255),b
  4160  0032E2  0E06               	movlw	high STR_10
  4161  0032E4  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4162  0032E6  ECB2  F01C         	call	_UARTSendString	;wreg free
  4163                           
  4164                           ;main.c: 100:   UARTNewLine();
  4165  0032EA  ECAC  F01F         	call	_UARTNewLine	;wreg free
  4166                           
  4167                           ;main.c: 101:   UARTNewLine();
  4168  0032EE  ECAC  F01F         	call	_UARTNewLine	;wreg free
  4169                           
  4170                           ;main.c: 102:   UARTSendChar(0x2A);
  4171  0032F2  0E2A               	movlw	42
  4172  0032F4  ECB6  F01F         	call	_UARTSendChar
  4173  0032F8  0012               	return		;funcret
  4174  0032FA  FFFF               	dw	65535	; errata NOP
  4175  0032FC                     __end_of_read_SRAM:
  4176                           	opt callstack 0
  4177                           
  4178 ;; *************** function _read_op *****************
  4179 ;; Defined at:
  4180 ;;		line 30 in file "drive_memory.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  address         1    wreg     unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  address         1    0[COMRAM] unsigned char 
  4185 ;;  result          1    1[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4195 ;;      Params:         0       0       0       0       0       0       0
  4196 ;;      Locals:         2       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    2
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_read_SRAM
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text17
  4210  003F08                     __ptext17:
  4211                           	opt callstack 0
  4212  003F08                     _read_op:
  4213                           	opt callstack 0
  4214  003F08  FFFF               	dw	65535	; assembler added errata NOP
  4215                           
  4216                           ;incstack = 0
  4217                           ;read_op@address stored from wreg
  4218  003F0A  6E01               	movwf	read_op@address,c
  4219                           
  4220                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  4221  003F0C  9094               	bcf	3988,0,c	;volatile
  4222                           
  4223                           ;drive_memory.c: 33:   TRISD = 0xFF;
  4224  003F0E  6895               	setf	3989,c	;volatile
  4225                           
  4226                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  4227  003F10  0EC0               	movlw	192
  4228  003F12  1693               	andwf	3987,f,c	;volatile
  4229                           
  4230                           ;drive_memory.c: 35:   PORTB = address;
  4231  003F14  C001  FF81         	movff	read_op@address,3969	;volatile
  4232                           
  4233                           ;drive_memory.c: 36:   RB5 = 1;
  4234  003F18  8A81               	bsf	3969,5,c	;volatile
  4235                           
  4236                           ;drive_memory.c: 38:   RC0 = 1;
  4237  003F1A  8082               	bsf	3970,0,c	;volatile
  4238                           
  4239                           ;drive_memory.c: 41:   RB5 = 0;
  4240  003F1C  9A81               	bcf	3969,5,c	;volatile
  4241                           
  4242                           ;drive_memory.c: 45:   RB5 = 1;
  4243                           
  4244                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  4245  003F1E  8A81               	bsf	3969,5,c	;volatile
  4246                           
  4247                           ;drive_memory.c: 46:   char result = PORTD;
  4248  003F20  CF83 F002          	movff	3971,read_op@result	;volatile
  4249                           
  4250                           ;drive_memory.c: 47:   return result;
  4251  003F24  5002               	movf	read_op@result,w,c
  4252  003F26  0012               	return		;funcret
  4253  003F28  FFFF               	dw	65535	; errata NOP
  4254  003F2A                     __end_of_read_op:
  4255                           	opt callstack 0
  4256                           
  4257 ;; *************** function _int_to_char *****************
  4258 ;; Defined at:
  4259 ;;		line 18 in file "lcd.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  num             4  121[COMRAM] unsigned long 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  result         10   18[BANK0 ] unsigned char [10]
  4264 ;;  the_num         4   28[BANK0 ] unsigned long 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2  121[COMRAM] PTR unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4274 ;;      Params:         4       0       0       0       0       0       0
  4275 ;;      Locals:         0      14       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0
  4277 ;;      Totals:         4      14       0       0       0       0       0
  4278 ;;Total ram usage:       18 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:   10
  4281 ;; This function calls:
  4282 ;;		_getchar
  4283 ;;		_sprintf
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;;		_read_SRAM
  4287 ;;		_write_SRAM
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text18
  4292  003BEC                     __ptext18:
  4293                           	opt callstack 0
  4294  003BEC                     _int_to_char:
  4295                           	opt callstack 0
  4296  003BEC  FFFF               	dw	65535	; assembler added errata NOP
  4297                           
  4298                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  4299                           
  4300                           ;incstack = 0
  4301  003BEE  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  4302  003BF2  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  4303  003BF6  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  4304  003BFA  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  4305                           
  4306                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  4307  003BFE  0E92               	movlw	low int_to_char@result
  4308  003C00  0100               	movlb	0	; () banked
  4309  003C02  6F80               	movwf	sprintf@s& (0+255),b
  4310  003C04  0E00               	movlw	high int_to_char@result
  4311  003C06  6F81               	movwf	(sprintf@s+1)& (0+255),b
  4312  003C08  0EC0               	movlw	low STR_1
  4313  003C0A  6F82               	movwf	sprintf@fmt& (0+255),b
  4314  003C0C  0E06               	movlw	high STR_1
  4315  003C0E  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  4316  003C10  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  4317  003C14  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  4318  003C18  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  4319  003C1C  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  4320  003C20  EC26  F01D         	call	_sprintf	;wreg free
  4321                           
  4322                           ;lcd.c: 22:   getchar();
  4323  003C24  ECD4  F01F         	call	_getchar	;wreg free
  4324                           
  4325                           ;lcd.c: 23:   return result;
  4326  003C28  0E92               	movlw	low int_to_char@result
  4327  003C2A  6E7A               	movwf	?_int_to_char,c
  4328  003C2C  0E00               	movlw	high int_to_char@result
  4329  003C2E  6E7B               	movwf	?_int_to_char+1,c
  4330  003C30  0012               	return		;funcret
  4331  003C32  FFFF               	dw	65535	; errata NOP
  4332  003C34                     __end_of_int_to_char:
  4333                           	opt callstack 0
  4334                           
  4335 ;; *************** function _sprintf *****************
  4336 ;; Defined at:
  4337 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4340 ;;		 -> int_to_char@result(10), 
  4341 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4342 ;;		 -> STR_1(4), 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  f               6   10[BANK0 ] struct _IO_FILE
  4345 ;;  ap              2   16[BANK0 ] PTR void [1]
  4346 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4347 ;;  ret             2    0        int 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    0[BANK0 ] int 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4357 ;;      Params:         0       8       0       0       0       0       0
  4358 ;;      Locals:         0      10       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0
  4360 ;;      Totals:         0      18       0       0       0       0       0
  4361 ;;Total ram usage:       18 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    9
  4364 ;; This function calls:
  4365 ;;		_vfprintf
  4366 ;; This function is called by:
  4367 ;;		_int_to_char
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text19
  4372  003A4C                     __ptext19:
  4373                           	opt callstack 0
  4374  003A4C                     _sprintf:
  4375                           	opt callstack 0
  4376  003A4C  FFFF               	dw	65535	; assembler added errata NOP
  4377                           
  4378                           ;incstack = 0
  4379  003A4E  0E84               	movlw	low (?_sprintf+4)
  4380  003A50  0100               	movlb	0	; () banked
  4381  003A52  6F90               	movwf	sprintf@ap& (0+255),b
  4382  003A54  0E00               	movlw	high (?_sprintf+4)
  4383  003A56  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  4384  003A58  C080  F08A         	movff	sprintf@s,sprintf@f
  4385  003A5C  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  4386                           
  4387                           ; BSR set to: 0
  4388  003A60  0E00               	movlw	0
  4389  003A62  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  4390  003A64  0E00               	movlw	0
  4391  003A66  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  4392                           
  4393                           ; BSR set to: 0
  4394  003A68  0E00               	movlw	0
  4395  003A6A  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  4396  003A6C  0E00               	movlw	0
  4397  003A6E  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400  003A70  0E8A               	movlw	low sprintf@f
  4401  003A72  6E72               	movwf	vfprintf@fp,c
  4402  003A74  0E00               	movlw	high sprintf@f
  4403  003A76  6E73               	movwf	vfprintf@fp+1,c
  4404  003A78  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  4405  003A7C  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4406  003A80  0E90               	movlw	low sprintf@ap
  4407  003A82  6E76               	movwf	vfprintf@ap,c
  4408  003A84  0E00               	movlw	high sprintf@ap
  4409  003A86  6E77               	movwf	vfprintf@ap+1,c
  4410  003A88  ECF6  F01C         	call	_vfprintf	;wreg free
  4411  003A8C  0100               	movlb	0	; () banked
  4412  003A8E  518C               	movf	(sprintf@f+2)& (0+255),w,b
  4413  003A90  2580               	addwf	sprintf@s& (0+255),w,b
  4414  003A92  6ED9               	movwf	fsr2l,c
  4415  003A94  518D               	movf	(sprintf@f+3)& (0+255),w,b
  4416  003A96  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  4417  003A98  6EDA               	movwf	fsr2h,c
  4418  003A9A  0E00               	movlw	0
  4419  003A9C  6EDF               	movwf	indf2,c
  4420                           
  4421                           ; BSR set to: 0
  4422  003A9E  0012               	return		;funcret
  4423  003AA0  FFFF               	dw	65535	; errata NOP
  4424  003AA2                     __end_of_sprintf:
  4425                           	opt callstack 0
  4426                           
  4427 ;; *************** function _vfprintf *****************
  4428 ;; Defined at:
  4429 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  4432 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4433 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  4434 ;;		 -> STR_2(3), STR_1(4), 
  4435 ;;  ap              2  117[COMRAM] PTR PTR void 
  4436 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  4439 ;;		 -> STR_2(3), STR_1(4), 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2  113[COMRAM] int 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4449 ;;      Params:         6       0       0       0       0       0       0
  4450 ;;      Locals:         2       0       0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0
  4452 ;;      Totals:         8       0       0       0       0       0       0
  4453 ;;Total ram usage:        8 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    8
  4456 ;; This function calls:
  4457 ;;		_vfpfcnvrt
  4458 ;; This function is called by:
  4459 ;;		_sprintf
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text20
  4464  0039EC                     __ptext20:
  4465                           	opt callstack 0
  4466  0039EC                     _vfprintf:
  4467                           	opt callstack 0
  4468  0039EC  FFFF               	dw	65535	; assembler added errata NOP
  4469                           
  4470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;incstack = 0
  4474  0039EE  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  4475  0039F2  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4476                           
  4477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4478  0039F6  0E00               	movlw	0
  4479  0039F8  0100               	movlb	0	; () banked
  4480  0039FA  6FCB               	movwf	(_nout+1)& (0+255),b
  4481  0039FC  0E00               	movlw	0
  4482  0039FE  6FCA               	movwf	_nout& (0+255),b
  4483                           
  4484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4485  003A00  D014               	goto	l4406
  4486  003A02                     l4404:
  4487  003A02  FFFF               	dw	65535	; assembler added errata NOP
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4491  003A04  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4492  003A08  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4493  003A0C  0E78               	movlw	low vfprintf@cfmt
  4494  003A0E  6E45               	movwf	vfpfcnvrt@fmt,c
  4495  003A10  0E00               	movlw	high vfprintf@cfmt
  4496  003A12  6E46               	movwf	vfpfcnvrt@fmt+1,c
  4497  003A14  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4498  003A18  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4499  003A1C  EC79  F003         	call	_vfpfcnvrt	;wreg free
  4500  003A20  5043               	movf	?_vfpfcnvrt,w,c
  4501  003A22  0100               	movlb	0	; () banked
  4502  003A24  27CA               	addwf	_nout& (0+255),f,b
  4503  003A26  5044               	movf	?_vfpfcnvrt+1,w,c
  4504  003A28  23CB               	addwfc	(_nout+1)& (0+255),f,b
  4505  003A2A                     l4406:
  4506  003A2A  FFFF               	dw	65535	; assembler added errata NOP
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4510  003A2C  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  4511  003A30  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4512  003A34                     	if	0	;tblptru may be non-zero
  4513  003A34                     	endif
  4514  003A34                     	if	0	;tblptru may be non-zero
  4515  003A34                     	endif
  4516  003A34  0008               	tblrd		*
  4517  003A36  FFFF               	dw	65535	; errata NOP
  4518  003A38  50F5               	movf	tablat,w,c
  4519  003A3A  0900               	iorlw	0
  4520  003A3C  A4D8               	btfss	status,2,c
  4521  003A3E  D7E1               	goto	l4404
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4525  003A40  C0CA  F072         	movff	_nout,?_vfprintf
  4526  003A44  C0CB  F073         	movff	_nout+1,?_vfprintf+1
  4527                           
  4528                           ; BSR set to: 0
  4529  003A48  0012               	return		;funcret
  4530  003A4A  FFFF               	dw	65535	; errata NOP
  4531  003A4C                     __end_of_vfprintf:
  4532                           	opt callstack 0
  4533                           
  4534 ;; *************** function _vfpfcnvrt *****************
  4535 ;; Defined at:
  4536 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4539 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4540 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4541 ;;		 -> vfprintf@cfmt(2), 
  4542 ;;  ap              2   70[COMRAM] PTR PTR void 
  4543 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  llu             8  105[COMRAM] unsigned long long 
  4546 ;;  ll              8   94[COMRAM] long long 
  4547 ;;  f               4    0        long long 
  4548 ;;  ct              3    0        unsigned char [3]
  4549 ;;  vp              2  102[COMRAM] PTR void 
  4550 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4551 ;;  done            2   88[COMRAM] int 
  4552 ;;  cp              2   86[COMRAM] PTR unsigned char 
  4553 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4554 ;;  i               2    0        int 
  4555 ;;  c               1  104[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   66[COMRAM] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4565 ;;      Params:         6       0       0       0       0       0       0
  4566 ;;      Locals:        27       0       0       0       0       0       0
  4567 ;;      Temps:         14       0       0       0       0       0       0
  4568 ;;      Totals:        47       0       0       0       0       0       0
  4569 ;;Total ram usage:       47 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    7
  4572 ;; This function calls:
  4573 ;;		_atoi
  4574 ;;		_ctoa
  4575 ;;		_dtoa
  4576 ;;		_fputc
  4577 ;;		_isdigit
  4578 ;;		_otoa
  4579 ;;		_stoa
  4580 ;;		_strncmp
  4581 ;;		_utoa
  4582 ;;		_xtoa
  4583 ;; This function is called by:
  4584 ;;		_vfprintf
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text21
  4589  0006F2                     __ptext21:
  4590                           	opt callstack 0
  4591  0006F2                     _vfpfcnvrt:
  4592                           	opt callstack 0
  4593  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  4594                           
  4595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;incstack = 0
  4599  0006F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4600  0006F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4601  0006FC  CFDE FFF6          	movff	postinc2,tblptrl
  4602  000700  CFDD FFF7          	movff	postdec2,tblptrh
  4603  000704                     	if	0	;tblptru may be non-zero
  4604  000704                     	endif
  4605  000704                     	if	0	;tblptru may be non-zero
  4606  000704                     	endif
  4607  000704  0008               	tblrd		*
  4608  000706  FFFF               	dw	65535	; errata NOP
  4609  000708  50F5               	movf	tablat,w,c
  4610  00070A  0A25               	xorlw	37
  4611  00070C  A4D8               	btfss	status,2,c
  4612  00070E  EF2A  F00C         	goto	l4384
  4613                           
  4614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  4615  000712  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4616  000716  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4617  00071A  2ADE               	incf	postinc2,f,c
  4618  00071C  0E00               	movlw	0
  4619  00071E  22DD               	addwfc	postdec2,f,c
  4620                           
  4621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  4622  000720  0E00               	movlw	0
  4623  000722  0100               	movlb	0	; () banked
  4624  000724  6FCD               	movwf	(_width+1)& (0+255),b
  4625  000726  0E00               	movlw	0
  4626  000728  6FCC               	movwf	_width& (0+255),b
  4627  00072A  C0CC  F0D0         	movff	_width,_flags
  4628  00072E  C0CD  F0D1         	movff	_width+1,_flags+1
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  4632  000732  69CE               	setf	_prec& (0+255),b
  4633  000734  69CF               	setf	(_prec+1)& (0+255),b
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  4637  000736  0E00               	movlw	0
  4638  000738  6E5A               	movwf	vfpfcnvrt@done+1,c
  4639  00073A  0E00               	movlw	0
  4640  00073C  D020               	goto	L7
  4641  00073E                     l4026:
  4642  00073E  FFFF               	dw	65535	; assembler added errata NOP
  4643                           
  4644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  4645  000740  0100               	movlb	0	; () banked
  4646  000742  81D0               	bsf	_flags& (0+255),0,b
  4647  000744                     l4028:
  4648  000744  FFFF               	dw	65535	; assembler added errata NOP
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  4652  000746  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4653  00074A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4654  00074E  2ADE               	incf	postinc2,f,c
  4655  000750  0E00               	movlw	0
  4656  000752  22DD               	addwfc	postdec2,f,c
  4657                           
  4658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  4659  000754  D03A               	goto	l4052
  4660  000756                     l4030:
  4661  000756  FFFF               	dw	65535	; assembler added errata NOP
  4662                           
  4663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  4664  000758  0100               	movlb	0	; () banked
  4665  00075A  83D0               	bsf	_flags& (0+255),1,b
  4666  00075C  D7F3               	goto	l4028
  4667  00075E                     l4034:
  4668  00075E  FFFF               	dw	65535	; assembler added errata NOP
  4669                           
  4670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  4671  000760  0100               	movlb	0	; () banked
  4672  000762  85D0               	bsf	_flags& (0+255),2,b
  4673  000764  D7EF               	goto	l4028
  4674  000766                     l4038:
  4675  000766  FFFF               	dw	65535	; assembler added errata NOP
  4676                           
  4677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  4678  000768  0100               	movlb	0	; () banked
  4679  00076A  87D0               	bsf	_flags& (0+255),3,b
  4680  00076C  D7EB               	goto	l4028
  4681  00076E                     l4042:
  4682  00076E  FFFF               	dw	65535	; assembler added errata NOP
  4683                           
  4684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  4685  000770  0100               	movlb	0	; () banked
  4686  000772  89D0               	bsf	_flags& (0+255),4,b
  4687  000774  D7E7               	goto	l4028
  4688  000776                     l4046:
  4689  000776  FFFF               	dw	65535	; assembler added errata NOP
  4690                           
  4691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  4692  000778  0E00               	movlw	0
  4693  00077A  6E5A               	movwf	vfpfcnvrt@done+1,c
  4694  00077C  0E01               	movlw	1
  4695  00077E                     L7:
  4696  00077E  FFFF               	dw	65535	; assembler added errata NOP
  4697  000780  6E59               	movwf	vfpfcnvrt@done,c
  4698                           
  4699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  4700  000782  D023               	goto	l4052
  4701  000784                     l4050:
  4702  000784  FFFF               	dw	65535	; assembler added errata NOP
  4703  000786  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4704  00078A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4705  00078E  CFDE FFF6          	movff	postinc2,tblptrl
  4706  000792  CFDD FFF7          	movff	postdec2,tblptrh
  4707  000796                     	if	0	;tblptru may be non-zero
  4708  000796                     	endif
  4709  000796                     	if	0	;tblptru may be non-zero
  4710  000796                     	endif
  4711  000796  0008               	tblrd		*
  4712  000798  FFFF               	dw	65535	; errata NOP
  4713  00079A  50F5               	movf	tablat,w,c
  4714  00079C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4715  00079E  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  4716                           
  4717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4718                           ; Switch size 1, requested type "simple"
  4719                           ; Number of cases is 1, Range of values is 0 to 0
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte            4     3 (average)
  4723                           ;	Chosen strategy is simple_byte
  4724  0007A0  504A               	movf	??_vfpfcnvrt+1,w,c
  4725  0007A2  0A00               	xorlw	0	; case 0
  4726  0007A4  A4D8               	btfss	status,2,c
  4727  0007A6  D7E7               	goto	l4046
  4728                           
  4729                           ; Switch size 1, requested type "simple"
  4730                           ; Number of cases is 5, Range of values is 32 to 48
  4731                           ; switch strategies available:
  4732                           ; Name         Instructions Cycles
  4733                           ; simple_byte           16     9 (average)
  4734                           ;	Chosen strategy is simple_byte
  4735  0007A8  5049               	movf	??_vfpfcnvrt,w,c
  4736  0007AA  0A20               	xorlw	32	; case 32
  4737  0007AC  B4D8               	btfsc	status,2,c
  4738  0007AE  D7DB               	goto	l4038
  4739  0007B0  0A03               	xorlw	3	; case 35
  4740  0007B2  B4D8               	btfsc	status,2,c
  4741  0007B4  D7DC               	goto	l4042
  4742  0007B6  0A08               	xorlw	8	; case 43
  4743  0007B8  B4D8               	btfsc	status,2,c
  4744  0007BA  D7D1               	goto	l4034
  4745  0007BC  0A06               	xorlw	6	; case 45
  4746  0007BE  B4D8               	btfsc	status,2,c
  4747  0007C0  D7BE               	goto	l4026
  4748  0007C2  0A1D               	xorlw	29	; case 48
  4749  0007C4  B4D8               	btfsc	status,2,c
  4750  0007C6  D7C7               	goto	l4030
  4751  0007C8  D7D6               	goto	l4046
  4752  0007CA                     l4052:
  4753  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  4754                           
  4755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  4756  0007CC  5059               	movf	vfpfcnvrt@done,w,c
  4757  0007CE  105A               	iorwf	vfpfcnvrt@done+1,w,c
  4758  0007D0  B4D8               	btfsc	status,2,c
  4759  0007D2  D7D8               	goto	l4050
  4760                           
  4761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  4762  0007D4  0100               	movlb	0	; () banked
  4763  0007D6  B1D0               	btfsc	_flags& (0+255),0,b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  4767  0007D8  93D0               	bcf	_flags& (0+255),1,b
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  4771  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4772  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4773  0007E2  CFDE FFF6          	movff	postinc2,tblptrl
  4774  0007E6  CFDD FFF7          	movff	postdec2,tblptrh
  4775  0007EA                     	if	0	;tblptru may be non-zero
  4776  0007EA                     	endif
  4777  0007EA                     	if	0	;tblptru may be non-zero
  4778  0007EA                     	endif
  4779  0007EA  0008               	tblrd		*
  4780  0007EC  FFFF               	dw	65535	; errata NOP
  4781  0007EE  50F5               	movf	tablat,w,c
  4782  0007F0  0A2A               	xorlw	42
  4783  0007F2  A4D8               	btfss	status,2,c
  4784  0007F4  D023               	goto	l4064
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  4788  0007F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4789  0007FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4790  0007FE  2ADE               	incf	postinc2,f,c
  4791  000800  0E00               	movlw	0
  4792  000802  22DD               	addwfc	postdec2,f,c
  4793                           
  4794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  4795  000804  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4796  000808  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4797  00080C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4798  000810  0E02               	movlw	2
  4799  000812  26DE               	addwf	postinc2,f,c
  4800  000814  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4801  000818  0E00               	movlw	0
  4802  00081A  22DD               	addwfc	postdec2,f,c
  4803  00081C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4804  000820  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4805  000824  CFDE F0CC          	movff	postinc2,_width
  4806  000828  CFDD F0CD          	movff	postdec2,_width+1
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  4810  00082C  AFCD               	btfss	(_width+1)& (0+255),7,b
  4811  00082E  D045               	goto	u3990
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  4815  000830  81D0               	bsf	_flags& (0+255),0,b
  4816                           
  4817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  4818  000832  6DCC               	negf	_width& (0+255),b
  4819  000834  1FCD               	comf	(_width+1)& (0+255),f,b
  4820  000836  B0D8               	btfsc	status,0,c
  4821  000838  2BCD               	incf	(_width+1)& (0+255),f,b
  4822  00083A  D03F               	goto	u3990
  4823  00083C                     l4064:
  4824  00083C  FFFF               	dw	65535	; assembler added errata NOP
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  4828  00083E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4829  000842  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4830  000846  CFDE F008          	movff	postinc2,atoi@s
  4831  00084A  CFDD F009          	movff	postdec2,atoi@s+1
  4832  00084E  EC96  F015         	call	_atoi	;wreg free
  4833  000852  C008  F0CC         	movff	?_atoi,_width
  4834  000856  C009  F0CD         	movff	?_atoi+1,_width+1
  4835                           
  4836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4837  00085A  D008               	goto	l4068
  4838  00085C                     l4066:
  4839  00085C  FFFF               	dw	65535	; assembler added errata NOP
  4840                           
  4841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  4842  00085E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4843  000862  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4844  000866  2ADE               	incf	postinc2,f,c
  4845  000868  0E00               	movlw	0
  4846  00086A  22DD               	addwfc	postdec2,f,c
  4847  00086C                     l4068:
  4848  00086C  FFFF               	dw	65535	; assembler added errata NOP
  4849  00086E  0ED0               	movlw	208
  4850  000870  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4851  000872  0EFF               	movlw	255
  4852  000874  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4853  000876  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4854  00087A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4855  00087E  CFDE FFF6          	movff	postinc2,tblptrl
  4856  000882  CFDD FFF7          	movff	postdec2,tblptrh
  4857  000886                     	if	0	;tblptru may be non-zero
  4858  000886                     	endif
  4859  000886                     	if	0	;tblptru may be non-zero
  4860  000886                     	endif
  4861  000886  0008               	tblrd		*
  4862  000888  FFFF               	dw	65535	; errata NOP
  4863  00088A  50F5               	movf	tablat,w,c
  4864  00088C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4865  00088E  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  4866  000890  5049               	movf	??_vfpfcnvrt,w,c
  4867  000892  264B               	addwf	??_vfpfcnvrt+2,f,c
  4868  000894  504A               	movf	??_vfpfcnvrt+1,w,c
  4869  000896  224C               	addwfc	??_vfpfcnvrt+3,f,c
  4870  000898  504C               	movf	??_vfpfcnvrt+3,w,c
  4871  00089A  E106               	bnz	u3970
  4872  00089C  0E0A               	movlw	10
  4873  00089E  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  4874  0008A0  B0D8               	btfsc	status,0,c
  4875  0008A2  D002               	goto	u3970
  4876  0008A4  0E01               	movlw	1
  4877  0008A6  D002               	goto	u3980
  4878  0008A8                     u3970:
  4879  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  4880  0008AA  0E00               	movlw	0
  4881  0008AC                     u3980:
  4882  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  4883  0008AE  6E5B               	movwf	_vfpfcnvrt$1126,c
  4884  0008B0  6A5C               	clrf	_vfpfcnvrt$1126+1,c
  4885  0008B2  505B               	movf	_vfpfcnvrt$1126,w,c
  4886  0008B4  105C               	iorwf	_vfpfcnvrt$1126+1,w,c
  4887  0008B6  A4D8               	btfss	status,2,c
  4888  0008B8  D7D1               	goto	l4066
  4889  0008BA                     u3990:
  4890  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  4891                           
  4892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  4893  0008BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4894  0008C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4895  0008C4  CFDE FFF6          	movff	postinc2,tblptrl
  4896  0008C8  CFDD FFF7          	movff	postdec2,tblptrh
  4897  0008CC                     	if	0	;tblptru may be non-zero
  4898  0008CC                     	endif
  4899  0008CC                     	if	0	;tblptru may be non-zero
  4900  0008CC                     	endif
  4901  0008CC  0008               	tblrd		*
  4902  0008CE  FFFF               	dw	65535	; errata NOP
  4903  0008D0  50F5               	movf	tablat,w,c
  4904  0008D2  0A2E               	xorlw	46
  4905  0008D4  A4D8               	btfss	status,2,c
  4906  0008D6  D075               	goto	u4040
  4907                           
  4908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  4909  0008D8  0E00               	movlw	0
  4910  0008DA  0100               	movlb	0	; () banked
  4911  0008DC  6FCF               	movwf	(_prec+1)& (0+255),b
  4912  0008DE  0E00               	movlw	0
  4913  0008E0  6FCE               	movwf	_prec& (0+255),b
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  4917  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  0008EA  2ADE               	incf	postinc2,f,c
  4920  0008EC  0E00               	movlw	0
  4921  0008EE  22DD               	addwfc	postdec2,f,c
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  4925  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4926  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4927  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  4928  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  4929  000900                     	if	0	;tblptru may be non-zero
  4930  000900                     	endif
  4931  000900                     	if	0	;tblptru may be non-zero
  4932  000900                     	endif
  4933  000900  0008               	tblrd		*
  4934  000902  FFFF               	dw	65535	; errata NOP
  4935  000904  50F5               	movf	tablat,w,c
  4936  000906  0A2A               	xorlw	42
  4937  000908  A4D8               	btfss	status,2,c
  4938  00090A  D01C               	goto	l4084
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  4942  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944  000914  2ADE               	incf	postinc2,f,c
  4945  000916  0E00               	movlw	0
  4946  000918  22DD               	addwfc	postdec2,f,c
  4947                           
  4948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  4949  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4950  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4951  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4952  000926  0E02               	movlw	2
  4953  000928  26DE               	addwf	postinc2,f,c
  4954  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4955  00092E  0E00               	movlw	0
  4956  000930  22DD               	addwfc	postdec2,f,c
  4957  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4958  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4959  00093A  CFDE F0CE          	movff	postinc2,_prec
  4960  00093E  CFDD F0CF          	movff	postdec2,_prec+1
  4961                           
  4962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  4963  000942  D03F               	goto	u4040
  4964  000944                     l4084:
  4965  000944  FFFF               	dw	65535	; assembler added errata NOP
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  4969  000946  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4970  00094A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4971  00094E  CFDE F008          	movff	postinc2,atoi@s
  4972  000952  CFDD F009          	movff	postdec2,atoi@s+1
  4973  000956  EC96  F015         	call	_atoi	;wreg free
  4974  00095A  C008  F0CE         	movff	?_atoi,_prec
  4975  00095E  C009  F0CF         	movff	?_atoi+1,_prec+1
  4976                           
  4977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4978  000962  D008               	goto	l4088
  4979  000964                     l4086:
  4980  000964  FFFF               	dw	65535	; assembler added errata NOP
  4981                           
  4982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  4983  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4984  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4985  00096E  2ADE               	incf	postinc2,f,c
  4986  000970  0E00               	movlw	0
  4987  000972  22DD               	addwfc	postdec2,f,c
  4988  000974                     l4088:
  4989  000974  FFFF               	dw	65535	; assembler added errata NOP
  4990  000976  0ED0               	movlw	208
  4991  000978  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4992  00097A  0EFF               	movlw	255
  4993  00097C  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4994  00097E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4995  000982  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4996  000986  CFDE FFF6          	movff	postinc2,tblptrl
  4997  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  4998  00098E                     	if	0	;tblptru may be non-zero
  4999  00098E                     	endif
  5000  00098E                     	if	0	;tblptru may be non-zero
  5001  00098E                     	endif
  5002  00098E  0008               	tblrd		*
  5003  000990  FFFF               	dw	65535	; errata NOP
  5004  000992  50F5               	movf	tablat,w,c
  5005  000994  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5006  000996  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5007  000998  5049               	movf	??_vfpfcnvrt,w,c
  5008  00099A  264B               	addwf	??_vfpfcnvrt+2,f,c
  5009  00099C  504A               	movf	??_vfpfcnvrt+1,w,c
  5010  00099E  224C               	addwfc	??_vfpfcnvrt+3,f,c
  5011  0009A0  504C               	movf	??_vfpfcnvrt+3,w,c
  5012  0009A2  E106               	bnz	u4020
  5013  0009A4  0E0A               	movlw	10
  5014  0009A6  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5015  0009A8  B0D8               	btfsc	status,0,c
  5016  0009AA  D002               	goto	u4020
  5017  0009AC  0E01               	movlw	1
  5018  0009AE  D002               	goto	u4030
  5019  0009B0                     u4020:
  5020  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  5021  0009B2  0E00               	movlw	0
  5022  0009B4                     u4030:
  5023  0009B4  FFFF               	dw	65535	; assembler added errata NOP
  5024  0009B6  6E5D               	movwf	_vfpfcnvrt$1127,c
  5025  0009B8  6A5E               	clrf	_vfpfcnvrt$1127+1,c
  5026  0009BA  505D               	movf	_vfpfcnvrt$1127,w,c
  5027  0009BC  105E               	iorwf	_vfpfcnvrt$1127+1,w,c
  5028  0009BE  A4D8               	btfss	status,2,c
  5029  0009C0  D7D1               	goto	l4086
  5030  0009C2                     u4040:
  5031  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  5032                           
  5033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5034  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5035  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5036  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  5037  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  5038  0009D4                     	if	0	;tblptru may be non-zero
  5039  0009D4                     	endif
  5040  0009D4                     	if	0	;tblptru may be non-zero
  5041  0009D4                     	endif
  5042  0009D4  0008               	tblrd		*
  5043  0009D6  FFFF               	dw	65535	; errata NOP
  5044  0009D8  50F5               	movf	tablat,w,c
  5045  0009DA  0A63               	xorlw	99
  5046  0009DC  A4D8               	btfss	status,2,c
  5047  0009DE  D027               	goto	l4102
  5048                           
  5049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5050  0009E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5051  0009E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5052  0009E8  2ADE               	incf	postinc2,f,c
  5053  0009EA  0E00               	movlw	0
  5054  0009EC  22DD               	addwfc	postdec2,f,c
  5055                           
  5056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5057  0009EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5058  0009F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5059  0009F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5060  0009FA  0E02               	movlw	2
  5061  0009FC  26DE               	addwf	postinc2,f,c
  5062  0009FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5063  000A02  0E00               	movlw	0
  5064  000A04  22DD               	addwfc	postdec2,f,c
  5065  000A06  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5066  000A0A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5067  000A0E  50DF               	movf	indf2,w,c
  5068  000A10  6E69               	movwf	vfpfcnvrt@c,c
  5069                           
  5070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5071  000A12  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5072  000A16  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5073  000A1A  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5074  000A1E  EC7C  F01D         	call	_ctoa	;wreg free
  5075  000A22  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  5076  000A26  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5077  000A2A  EF46  F00C         	goto	l555
  5078  000A2E                     l4102:
  5079  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  5080                           
  5081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  5082  000A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5083  000A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5084  000A38  CFDE F001          	movff	postinc2,strncmp@_l
  5085  000A3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5086  000A40  0EA8               	movlw	low STR_16
  5087  000A42  6E03               	movwf	strncmp@_r,c
  5088  000A44  0E06               	movlw	high STR_16
  5089  000A46  6E04               	movwf	strncmp@_r+1,c
  5090  000A48  0E00               	movlw	0
  5091  000A4A  6E06               	movwf	strncmp@n+1,c
  5092  000A4C  0E03               	movlw	3
  5093  000A4E  6E05               	movwf	strncmp@n,c
  5094  000A50  ECBB  F01A         	call	_strncmp	;wreg free
  5095  000A54  5001               	movf	?_strncmp,w,c
  5096  000A56  1002               	iorwf	?_strncmp+1,w,c
  5097  000A58  B4D8               	btfsc	status,2,c
  5098  000A5A  D016               	goto	u4070
  5099  000A5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5100  000A60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5101  000A64  CFDE F001          	movff	postinc2,strncmp@_l
  5102  000A68  CFDD F002          	movff	postdec2,strncmp@_l+1
  5103  000A6C  0EAC               	movlw	low STR_20
  5104  000A6E  6E03               	movwf	strncmp@_r,c
  5105  000A70  0E06               	movlw	high STR_20
  5106  000A72  6E04               	movwf	strncmp@_r+1,c
  5107  000A74  0E00               	movlw	0
  5108  000A76  6E06               	movwf	strncmp@n+1,c
  5109  000A78  0E03               	movlw	3
  5110  000A7A  6E05               	movwf	strncmp@n,c
  5111  000A7C  ECBB  F01A         	call	_strncmp	;wreg free
  5112  000A80  5001               	movf	?_strncmp,w,c
  5113  000A82  1002               	iorwf	?_strncmp+1,w,c
  5114  000A84  A4D8               	btfss	status,2,c
  5115  000A86  D043               	goto	l4112
  5116  000A88                     u4070:
  5117  000A88  FFFF               	dw	65535	; assembler added errata NOP
  5118                           
  5119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  5120  000A8A  0E03               	movlw	3
  5121  000A8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5122  000A90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5123  000A94  26DE               	addwf	postinc2,f,c
  5124  000A96  0E00               	movlw	0
  5125  000A98  22DD               	addwfc	postdec2,f,c
  5126                           
  5127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5128  000A9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5129  000A9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5130  000AA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5131  000AA6  0E02               	movlw	2
  5132  000AA8  26DE               	addwf	postinc2,f,c
  5133  000AAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5134  000AAE  0E00               	movlw	0
  5135  000AB0  22DD               	addwfc	postdec2,f,c
  5136  000AB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5137  000AB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5138  000ABA  50DF               	movf	indf2,w,c
  5139  000ABC  6E5F               	movwf	vfpfcnvrt@ll,c
  5140  000ABE  0E00               	movlw	0
  5141  000AC0  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  5142  000AC2  0EFF               	movlw	-1
  5143  000AC4  6E60               	movwf	vfpfcnvrt@ll+1,c
  5144  000AC6                     L8:
  5145  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  5146  000AC8  6E61               	movwf	vfpfcnvrt@ll+2,c
  5147  000ACA  6E62               	movwf	vfpfcnvrt@ll+3,c
  5148  000ACC  6E63               	movwf	vfpfcnvrt@ll+4,c
  5149  000ACE  6E64               	movwf	vfpfcnvrt@ll+5,c
  5150  000AD0  6E65               	movwf	vfpfcnvrt@ll+6,c
  5151  000AD2  6E66               	movwf	vfpfcnvrt@ll+7,c
  5152  000AD4                     l4108:
  5153  000AD4  FFFF               	dw	65535	; assembler added errata NOP
  5154                           
  5155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  5156  000AD6  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5157  000ADA  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5158  000ADE  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5159  000AE2  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5160  000AE6  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5161  000AEA  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5162  000AEE  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5163  000AF2  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5164  000AF6  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5165  000AFA  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5166  000AFE  ECAC  F00F         	call	_dtoa	;wreg free
  5167  000B02  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5168  000B06  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5169  000B0A  EF46  F00C         	goto	l555
  5170  000B0E                     l4112:
  5171  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  5172                           
  5173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  5174  000B10  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5175  000B14  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5176  000B18  CFDE F001          	movff	postinc2,strncmp@_l
  5177  000B1C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5178  000B20  0EA9               	movlw	low (STR_16+1)
  5179  000B22  6E03               	movwf	strncmp@_r,c
  5180  000B24  0E06               	movlw	high (STR_16+1)
  5181  000B26  6E04               	movwf	strncmp@_r+1,c
  5182  000B28  0E00               	movlw	0
  5183  000B2A  6E06               	movwf	strncmp@n+1,c
  5184  000B2C  0E02               	movlw	2
  5185  000B2E  6E05               	movwf	strncmp@n,c
  5186  000B30  ECBB  F01A         	call	_strncmp	;wreg free
  5187  000B34  5001               	movf	?_strncmp,w,c
  5188  000B36  1002               	iorwf	?_strncmp+1,w,c
  5189  000B38  B4D8               	btfsc	status,2,c
  5190  000B3A  D016               	goto	u4090
  5191  000B3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5192  000B40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5193  000B44  CFDE F001          	movff	postinc2,strncmp@_l
  5194  000B48  CFDD F002          	movff	postdec2,strncmp@_l+1
  5195  000B4C  0EAD               	movlw	low (STR_20+1)
  5196  000B4E  6E03               	movwf	strncmp@_r,c
  5197  000B50  0E06               	movlw	high (STR_20+1)
  5198  000B52  6E04               	movwf	strncmp@_r+1,c
  5199  000B54  0E00               	movlw	0
  5200  000B56  6E06               	movwf	strncmp@n+1,c
  5201  000B58  0E02               	movlw	2
  5202  000B5A  6E05               	movwf	strncmp@n,c
  5203  000B5C  ECBB  F01A         	call	_strncmp	;wreg free
  5204  000B60  5001               	movf	?_strncmp,w,c
  5205  000B62  1002               	iorwf	?_strncmp+1,w,c
  5206  000B64  A4D8               	btfss	status,2,c
  5207  000B66  D008               	goto	l4122
  5208  000B68                     u4090:
  5209  000B68  FFFF               	dw	65535	; assembler added errata NOP
  5210                           
  5211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  5212  000B6A  0E02               	movlw	2
  5213  000B6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5214  000B70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5215  000B74  26DE               	addwf	postinc2,f,c
  5216  000B76  D023               	goto	L18
  5217  000B78                     l4122:
  5218  000B78  FFFF               	dw	65535	; assembler added errata NOP
  5219                           
  5220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5221  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5222  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5223  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  5224  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  5225  000B8A                     	if	0	;tblptru may be non-zero
  5226  000B8A                     	endif
  5227  000B8A                     	if	0	;tblptru may be non-zero
  5228  000B8A                     	endif
  5229  000B8A  0008               	tblrd		*
  5230  000B8C  FFFF               	dw	65535	; errata NOP
  5231  000B8E  50F5               	movf	tablat,w,c
  5232  000B90  0A64               	xorlw	100
  5233  000B92  B4D8               	btfsc	status,2,c
  5234  000B94  D00E               	goto	u4110
  5235  000B96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5236  000B9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5237  000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  5238  000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  5239  000BA6                     	if	0	;tblptru may be non-zero
  5240  000BA6                     	endif
  5241  000BA6                     	if	0	;tblptru may be non-zero
  5242  000BA6                     	endif
  5243  000BA6  0008               	tblrd		*
  5244  000BA8  FFFF               	dw	65535	; errata NOP
  5245  000BAA  50F5               	movf	tablat,w,c
  5246  000BAC  0A69               	xorlw	105
  5247  000BAE  A4D8               	btfss	status,2,c
  5248  000BB0  D021               	goto	l4132
  5249  000BB2                     u4110:
  5250  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  5251                           
  5252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5253  000BB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5254  000BB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5255  000BBC  2ADE               	incf	postinc2,f,c
  5256  000BBE                     L18:
  5257  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  5258  000BC0  0E00               	movlw	0
  5259  000BC2  22DD               	addwfc	postdec2,f,c
  5260                           
  5261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5262  000BC4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5263  000BC8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5264  000BCC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5265  000BD0  0E02               	movlw	2
  5266  000BD2  26DE               	addwf	postinc2,f,c
  5267  000BD4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5268  000BD8  0E00               	movlw	0
  5269  000BDA  22DD               	addwfc	postdec2,f,c
  5270  000BDC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5271  000BE0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5272  000BE4  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  5273  000BE8  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  5274  000BEC  0E00               	movlw	0
  5275  000BEE  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  5276  000BF0  0EFF               	movlw	-1
  5277  000BF2  D769               	goto	L8
  5278  000BF4                     l4132:
  5279  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  5280                           
  5281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5282  000BF6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5283  000BFA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5284  000BFE  CFDE F001          	movff	postinc2,strncmp@_l
  5285  000C02  CFDD F002          	movff	postdec2,strncmp@_l+1
  5286  000C06  0ECA               	movlw	low STR_34
  5287  000C08  6E03               	movwf	strncmp@_r,c
  5288  000C0A  0E06               	movlw	high STR_34
  5289  000C0C  6E04               	movwf	strncmp@_r+1,c
  5290  000C0E  0E00               	movlw	0
  5291  000C10  6E06               	movwf	strncmp@n+1,c
  5292  000C12  0E02               	movlw	2
  5293  000C14  6E05               	movwf	strncmp@n,c
  5294  000C16  ECBB  F01A         	call	_strncmp	;wreg free
  5295  000C1A  5001               	movf	?_strncmp,w,c
  5296  000C1C  1002               	iorwf	?_strncmp+1,w,c
  5297  000C1E  B4D8               	btfsc	status,2,c
  5298  000C20  D016               	goto	u4130
  5299  000C22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5300  000C26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5301  000C2A  CFDE F001          	movff	postinc2,strncmp@_l
  5302  000C2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5303  000C32  0ED0               	movlw	low STR_38
  5304  000C34  6E03               	movwf	strncmp@_r,c
  5305  000C36  0E06               	movlw	high STR_38
  5306  000C38  6E04               	movwf	strncmp@_r+1,c
  5307  000C3A  0E00               	movlw	0
  5308  000C3C  6E06               	movwf	strncmp@n+1,c
  5309  000C3E  0E02               	movlw	2
  5310  000C40  6E05               	movwf	strncmp@n,c
  5311  000C42  ECBB  F01A         	call	_strncmp	;wreg free
  5312  000C46  5001               	movf	?_strncmp,w,c
  5313  000C48  1002               	iorwf	?_strncmp+1,w,c
  5314  000C4A  A4D8               	btfss	status,2,c
  5315  000C4C  D043               	goto	l4142
  5316  000C4E                     u4130:
  5317  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  5318                           
  5319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5320  000C50  0E02               	movlw	2
  5321  000C52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5322  000C56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5323  000C5A  26DE               	addwf	postinc2,f,c
  5324  000C5C  0E00               	movlw	0
  5325  000C5E  22DD               	addwfc	postdec2,f,c
  5326                           
  5327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5328  000C60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5329  000C64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5330  000C68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5331  000C6C  0E04               	movlw	4
  5332  000C6E  26DE               	addwf	postinc2,f,c
  5333  000C70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5334  000C74  0E00               	movlw	0
  5335  000C76  22DD               	addwfc	postdec2,f,c
  5336  000C78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5337  000C7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5338  000C80  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5339  000C84  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5340  000C88  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5341  000C8C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5342  000C90  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5343  000C94  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5344  000C98  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5345  000C9C  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5346  000CA0  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  5347  000CA2  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  5348  000CA4  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  5349  000CA6  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5350  000CAA  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5351  000CAE  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5352  000CB2  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5353  000CB6  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5354  000CBA  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5355  000CBE  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5356  000CC2  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5357  000CC6  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5358  000CCA  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5359  000CCE  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5360  000CD2  D700               	goto	l4108
  5361  000CD4                     l4142:
  5362  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  5363                           
  5364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  5365  000CD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5366  000CDA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5367  000CDE  CFDE F001          	movff	postinc2,strncmp@_l
  5368  000CE2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5369  000CE6  0ECD               	movlw	low STR_43
  5370  000CE8  6E03               	movwf	strncmp@_r,c
  5371  000CEA  0E06               	movlw	high STR_43
  5372  000CEC  6E04               	movwf	strncmp@_r+1,c
  5373  000CEE  0E00               	movlw	0
  5374  000CF0  6E06               	movwf	strncmp@n+1,c
  5375  000CF2  0E02               	movlw	2
  5376  000CF4  6E05               	movwf	strncmp@n,c
  5377  000CF6  ECBB  F01A         	call	_strncmp	;wreg free
  5378  000CFA  5001               	movf	?_strncmp,w,c
  5379  000CFC  1002               	iorwf	?_strncmp+1,w,c
  5380  000CFE  B4D8               	btfsc	status,2,c
  5381  000D00  D016               	goto	u4150
  5382  000D02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5383  000D06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5384  000D0A  CFDE F001          	movff	postinc2,strncmp@_l
  5385  000D0E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5386  000D12  0ED3               	movlw	low STR_47
  5387  000D14  6E03               	movwf	strncmp@_r,c
  5388  000D16  0E06               	movlw	high STR_47
  5389  000D18  6E04               	movwf	strncmp@_r+1,c
  5390  000D1A  0E00               	movlw	0
  5391  000D1C  6E06               	movwf	strncmp@n+1,c
  5392  000D1E  0E02               	movlw	2
  5393  000D20  6E05               	movwf	strncmp@n,c
  5394  000D22  ECBB  F01A         	call	_strncmp	;wreg free
  5395  000D26  5001               	movf	?_strncmp,w,c
  5396  000D28  1002               	iorwf	?_strncmp+1,w,c
  5397  000D2A  A4D8               	btfss	status,2,c
  5398  000D2C  D028               	goto	l4152
  5399  000D2E                     u4150:
  5400  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  5401                           
  5402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  5403  000D30  0E02               	movlw	2
  5404  000D32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5405  000D36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5406  000D3A  26DE               	addwf	postinc2,f,c
  5407  000D3C  0E00               	movlw	0
  5408  000D3E  22DD               	addwfc	postdec2,f,c
  5409                           
  5410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5411  000D40  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5412  000D44  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5413  000D48  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5414  000D4C  0E02               	movlw	2
  5415  000D4E  26DE               	addwf	postinc2,f,c
  5416  000D50  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5417  000D54  0E00               	movlw	0
  5418  000D56  22DD               	addwfc	postdec2,f,c
  5419  000D58  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5420  000D5C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5421  000D60  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5422  000D64  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5423  000D68  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5424  000D6C  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5425  000D70  6A61               	clrf	vfpfcnvrt@ll+2,c
  5426  000D72  6A62               	clrf	vfpfcnvrt@ll+3,c
  5427  000D74  6A63               	clrf	vfpfcnvrt@ll+4,c
  5428  000D76  6A64               	clrf	vfpfcnvrt@ll+5,c
  5429  000D78  6A65               	clrf	vfpfcnvrt@ll+6,c
  5430  000D7A  6A66               	clrf	vfpfcnvrt@ll+7,c
  5431  000D7C  D6AB               	goto	l4108
  5432  000D7E                     l4152:
  5433  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  5434                           
  5435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5436  000D80  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5437  000D84  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5438  000D88  CFDE F001          	movff	postinc2,strncmp@_l
  5439  000D8C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5440  000D90  0EB4               	movlw	low STR_52
  5441  000D92  6E03               	movwf	strncmp@_r,c
  5442  000D94  0E06               	movlw	high STR_52
  5443  000D96  6E04               	movwf	strncmp@_r+1,c
  5444  000D98  0E00               	movlw	0
  5445  000D9A  6E06               	movwf	strncmp@n+1,c
  5446  000D9C  0E03               	movlw	3
  5447  000D9E  6E05               	movwf	strncmp@n,c
  5448  000DA0  ECBB  F01A         	call	_strncmp	;wreg free
  5449  000DA4  5001               	movf	?_strncmp,w,c
  5450  000DA6  1002               	iorwf	?_strncmp+1,w,c
  5451  000DA8  A4D8               	btfss	status,2,c
  5452  000DAA  D041               	goto	l4160
  5453                           
  5454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  5455  000DAC  0E03               	movlw	3
  5456  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5457  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5458  000DB6  26DE               	addwf	postinc2,f,c
  5459  000DB8  0E00               	movlw	0
  5460  000DBA  22DD               	addwfc	postdec2,f,c
  5461                           
  5462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5463  000DBC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5464  000DC0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5465  000DC4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5466  000DC8  0E02               	movlw	2
  5467  000DCA  26DE               	addwf	postinc2,f,c
  5468  000DCC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5469  000DD0  0E00               	movlw	0
  5470  000DD2  22DD               	addwfc	postdec2,f,c
  5471  000DD4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5472  000DD8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5473  000DDC  50DF               	movf	indf2,w,c
  5474  000DDE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5475  000DE0  504B               	movf	??_vfpfcnvrt+2,w,c
  5476  000DE2  6E6A               	movwf	vfpfcnvrt@llu,c
  5477  000DE4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5478  000DE6                     L9:
  5479  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  5480  000DE8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5481  000DEA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5482  000DEC                     L10:
  5483  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  5484  000DEE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5485  000DF0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5486  000DF2  6A70               	clrf	vfpfcnvrt@llu+6,c
  5487  000DF4  6A71               	clrf	vfpfcnvrt@llu+7,c
  5488                           
  5489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  5490  000DF6  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5491  000DFA  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5492  000DFE  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5493  000E02  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5494  000E06  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5495  000E0A  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5496  000E0E  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5497  000E12  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5498  000E16  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5499  000E1A  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5500  000E1E  ECC9  F014         	call	_otoa	;wreg free
  5501  000E22  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5502  000E26  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5503  000E2A  EF46  F00C         	goto	l555
  5504  000E2E                     l4160:
  5505  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  5506                           
  5507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5508  000E30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5509  000E34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5510  000E38  CFDE F001          	movff	postinc2,strncmp@_l
  5511  000E3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5512  000E40  0EB5               	movlw	low (STR_52+1)
  5513  000E42  6E03               	movwf	strncmp@_r,c
  5514  000E44  0E06               	movlw	high (STR_52+1)
  5515  000E46  6E04               	movwf	strncmp@_r+1,c
  5516  000E48  0E00               	movlw	0
  5517  000E4A  6E06               	movwf	strncmp@n+1,c
  5518  000E4C  0E02               	movlw	2
  5519  000E4E  6E05               	movwf	strncmp@n,c
  5520  000E50  ECBB  F01A         	call	_strncmp	;wreg free
  5521  000E54  5001               	movf	?_strncmp,w,c
  5522  000E56  1002               	iorwf	?_strncmp+1,w,c
  5523  000E58  B4D8               	btfsc	status,2,c
  5524  000E5A  D06B               	goto	u4200
  5525                           
  5526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  5527                           
  5528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5529                           
  5530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  5531  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5532  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5533  000E64  CFDE FFF6          	movff	postinc2,tblptrl
  5534  000E68  CFDD FFF7          	movff	postdec2,tblptrh
  5535  000E6C                     	if	0	;tblptru may be non-zero
  5536  000E6C                     	endif
  5537  000E6C                     	if	0	;tblptru may be non-zero
  5538  000E6C                     	endif
  5539  000E6C  0008               	tblrd		*
  5540  000E6E  FFFF               	dw	65535	; errata NOP
  5541  000E70  50F5               	movf	tablat,w,c
  5542  000E72  0A6F               	xorlw	111
  5543  000E74  A4D8               	btfss	status,2,c
  5544  000E76  D006               	goto	l4176
  5545                           
  5546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  5547  000E78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5548  000E7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5549  000E80  2ADE               	incf	postinc2,f,c
  5550  000E82  D05E               	goto	L23
  5551  000E84                     l4176:
  5552  000E84  FFFF               	dw	65535	; assembler added errata NOP
  5553                           
  5554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  5555  000E86  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5556  000E8A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5557  000E8E  CFDE F001          	movff	postinc2,strncmp@_l
  5558  000E92  CFDD F002          	movff	postdec2,strncmp@_l+1
  5559  000E96  0EDC               	movlw	low STR_62
  5560  000E98  6E03               	movwf	strncmp@_r,c
  5561  000E9A  0E06               	movlw	high STR_62
  5562  000E9C  6E04               	movwf	strncmp@_r+1,c
  5563  000E9E  0E00               	movlw	0
  5564  000EA0  6E06               	movwf	strncmp@n+1,c
  5565  000EA2  0E02               	movlw	2
  5566  000EA4  6E05               	movwf	strncmp@n,c
  5567  000EA6  ECBB  F01A         	call	_strncmp	;wreg free
  5568  000EAA  5001               	movf	?_strncmp,w,c
  5569  000EAC  1002               	iorwf	?_strncmp+1,w,c
  5570  000EAE  A4D8               	btfss	status,2,c
  5571  000EB0  D029               	goto	l4184
  5572                           
  5573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  5574  000EB2  0E02               	movlw	2
  5575  000EB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5576  000EB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5577  000EBC  26DE               	addwf	postinc2,f,c
  5578  000EBE  0E00               	movlw	0
  5579  000EC0  22DD               	addwfc	postdec2,f,c
  5580                           
  5581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  5582  000EC2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5583  000EC6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5584  000ECA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5585  000ECE  0E04               	movlw	4
  5586  000ED0  26DE               	addwf	postinc2,f,c
  5587  000ED2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5588  000ED6  0E00               	movlw	0
  5589  000ED8  22DD               	addwfc	postdec2,f,c
  5590  000EDA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5591  000EDE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5592  000EE2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5593  000EE6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5594  000EEA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5595  000EEE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5596  000EF2  504B               	movf	??_vfpfcnvrt+2,w,c
  5597  000EF4  6E6A               	movwf	vfpfcnvrt@llu,c
  5598  000EF6  504C               	movf	??_vfpfcnvrt+3,w,c
  5599  000EF8  6E6B               	movwf	vfpfcnvrt@llu+1,c
  5600  000EFA  504D               	movf	??_vfpfcnvrt+4,w,c
  5601  000EFC  6E6C               	movwf	vfpfcnvrt@llu+2,c
  5602  000EFE  504E               	movf	??_vfpfcnvrt+5,w,c
  5603  000F00  6E6D               	movwf	vfpfcnvrt@llu+3,c
  5604  000F02  D774               	goto	L10
  5605  000F04                     l4184:
  5606  000F04  FFFF               	dw	65535	; assembler added errata NOP
  5607                           
  5608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5609  000F06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5610  000F0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5611  000F0E  CFDE F001          	movff	postinc2,strncmp@_l
  5612  000F12  CFDD F002          	movff	postdec2,strncmp@_l+1
  5613  000F16  0EDF               	movlw	low STR_67
  5614  000F18  6E03               	movwf	strncmp@_r,c
  5615  000F1A  0E06               	movlw	high STR_67
  5616  000F1C  6E04               	movwf	strncmp@_r+1,c
  5617  000F1E  0E00               	movlw	0
  5618  000F20  6E06               	movwf	strncmp@n+1,c
  5619  000F22  0E02               	movlw	2
  5620  000F24  6E05               	movwf	strncmp@n,c
  5621  000F26  ECBB  F01A         	call	_strncmp	;wreg free
  5622  000F2A  5001               	movf	?_strncmp,w,c
  5623  000F2C  1002               	iorwf	?_strncmp+1,w,c
  5624  000F2E  A4D8               	btfss	status,2,c
  5625  000F30  D023               	goto	l4192
  5626  000F32                     u4200:
  5627  000F32  FFFF               	dw	65535	; assembler added errata NOP
  5628                           
  5629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  5630  000F34  0E02               	movlw	2
  5631  000F36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5632  000F3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5633  000F3E  26DE               	addwf	postinc2,f,c
  5634  000F40                     L23:
  5635  000F40  FFFF               	dw	65535	; assembler added errata NOP
  5636  000F42  0E00               	movlw	0
  5637  000F44  22DD               	addwfc	postdec2,f,c
  5638                           
  5639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5640  000F46  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5641  000F4A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5642  000F4E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5643  000F52  0E02               	movlw	2
  5644  000F54  26DE               	addwf	postinc2,f,c
  5645  000F56  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5646  000F5A  0E00               	movlw	0
  5647  000F5C  22DD               	addwfc	postdec2,f,c
  5648  000F5E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5649  000F62  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5650  000F66  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5651  000F6A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5652  000F6E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5653  000F72  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5654  000F76  D737               	goto	L9
  5655  000F78                     l4192:
  5656  000F78  FFFF               	dw	65535	; assembler added errata NOP
  5657                           
  5658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5659  000F7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5660  000F7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5661  000F82  CFDE F001          	movff	postinc2,strncmp@_l
  5662  000F86  CFDD F002          	movff	postdec2,strncmp@_l+1
  5663  000F8A  0EB0               	movlw	low STR_72
  5664  000F8C  6E03               	movwf	strncmp@_r,c
  5665  000F8E  0E06               	movlw	high STR_72
  5666  000F90  6E04               	movwf	strncmp@_r+1,c
  5667  000F92  0E00               	movlw	0
  5668  000F94  6E06               	movwf	strncmp@n+1,c
  5669  000F96  0E03               	movlw	3
  5670  000F98  6E05               	movwf	strncmp@n,c
  5671  000F9A  ECBB  F01A         	call	_strncmp	;wreg free
  5672  000F9E  5001               	movf	?_strncmp,w,c
  5673  000FA0  1002               	iorwf	?_strncmp+1,w,c
  5674  000FA2  A4D8               	btfss	status,2,c
  5675  000FA4  D028               	goto	l4202
  5676                           
  5677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  5678  000FA6  0E03               	movlw	3
  5679  000FA8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5680  000FAC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5681  000FB0  26DE               	addwf	postinc2,f,c
  5682  000FB2  0E00               	movlw	0
  5683  000FB4  22DD               	addwfc	postdec2,f,c
  5684                           
  5685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5686  000FB6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5687  000FBA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5688  000FBE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5689  000FC2  0E02               	movlw	2
  5690  000FC4  26DE               	addwf	postinc2,f,c
  5691  000FC6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5692  000FCA  0E00               	movlw	0
  5693  000FCC  22DD               	addwfc	postdec2,f,c
  5694  000FCE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5695  000FD2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5696  000FD6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5697  000FDA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5698                           
  5699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  5700  000FDE  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5701  000FE2  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5702  000FE6  C0CA  FFDF         	movff	_nout,indf2
  5703  000FEA                     l4198:
  5704  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  5705                           
  5706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  5707  000FEC  0E00               	movlw	0
  5708  000FEE  6E44               	movwf	?_vfpfcnvrt+1,c
  5709  000FF0  0E00               	movlw	0
  5710  000FF2  EF1D  F00C         	goto	L11
  5711  000FF6                     l4202:
  5712  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  5713                           
  5714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5715  000FF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5716  000FFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5717  001000  CFDE F001          	movff	postinc2,strncmp@_l
  5718  001004  CFDD F002          	movff	postdec2,strncmp@_l+1
  5719  001008  0EB1               	movlw	low (STR_72+1)
  5720  00100A  6E03               	movwf	strncmp@_r,c
  5721  00100C  0E06               	movlw	high (STR_72+1)
  5722  00100E  6E04               	movwf	strncmp@_r+1,c
  5723  001010  0E00               	movlw	0
  5724  001012  6E06               	movwf	strncmp@n+1,c
  5725  001014  0E02               	movlw	2
  5726  001016  6E05               	movwf	strncmp@n,c
  5727  001018  ECBB  F01A         	call	_strncmp	;wreg free
  5728  00101C  5001               	movf	?_strncmp,w,c
  5729  00101E  1002               	iorwf	?_strncmp+1,w,c
  5730  001020  A4D8               	btfss	status,2,c
  5731  001022  D00B               	goto	l4212
  5732  001024  D07F               	goto	u4250
  5733  001026                     l4206:
  5734  001026  FFFF               	dw	65535	; assembler added errata NOP
  5735                           
  5736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  5737  001028  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5738  00102C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5739  001030  C0CA  FFDE         	movff	_nout,postinc2
  5740  001034  C0CB  FFDD         	movff	_nout+1,postdec2
  5741  001038  D7D8               	goto	l4198
  5742  00103A                     l4212:
  5743  00103A  FFFF               	dw	65535	; assembler added errata NOP
  5744                           
  5745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  5746  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5747  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5748  001044  CFDE FFF6          	movff	postinc2,tblptrl
  5749  001048  CFDD FFF7          	movff	postdec2,tblptrh
  5750  00104C                     	if	0	;tblptru may be non-zero
  5751  00104C                     	endif
  5752  00104C                     	if	0	;tblptru may be non-zero
  5753  00104C                     	endif
  5754  00104C  0008               	tblrd		*
  5755  00104E  FFFF               	dw	65535	; errata NOP
  5756  001050  50F5               	movf	tablat,w,c
  5757  001052  0A6E               	xorlw	110
  5758  001054  A4D8               	btfss	status,2,c
  5759  001056  D006               	goto	l4222
  5760                           
  5761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  5762  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5763  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5764  001060  2ADE               	incf	postinc2,f,c
  5765  001062  D067               	goto	L20
  5766  001064                     l4222:
  5767  001064  FFFF               	dw	65535	; assembler added errata NOP
  5768                           
  5769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  5770  001066  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5771  00106A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5772  00106E  CFDE F001          	movff	postinc2,strncmp@_l
  5773  001072  CFDD F002          	movff	postdec2,strncmp@_l+1
  5774  001076  0ED6               	movlw	low STR_82
  5775  001078  6E03               	movwf	strncmp@_r,c
  5776  00107A  0E06               	movlw	high STR_82
  5777  00107C  6E04               	movwf	strncmp@_r+1,c
  5778  00107E  0E00               	movlw	0
  5779  001080  6E06               	movwf	strncmp@n+1,c
  5780  001082  0E02               	movlw	2
  5781  001084  6E05               	movwf	strncmp@n,c
  5782  001086  ECBB  F01A         	call	_strncmp	;wreg free
  5783  00108A  5001               	movf	?_strncmp,w,c
  5784  00108C  1002               	iorwf	?_strncmp+1,w,c
  5785  00108E  A4D8               	btfss	status,2,c
  5786  001090  D032               	goto	l4232
  5787                           
  5788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  5789  001092  0E02               	movlw	2
  5790  001094  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5791  001098  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5792  00109C  26DE               	addwf	postinc2,f,c
  5793  00109E  0E00               	movlw	0
  5794  0010A0  22DD               	addwfc	postdec2,f,c
  5795                           
  5796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  5797  0010A2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5798  0010A6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5799  0010AA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5800  0010AE  0E02               	movlw	2
  5801  0010B0  26DE               	addwf	postinc2,f,c
  5802  0010B2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5803  0010B6  0E00               	movlw	0
  5804  0010B8  22DD               	addwfc	postdec2,f,c
  5805  0010BA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5806  0010BE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5807  0010C2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5808  0010C6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5809                           
  5810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  5811  0010CA  C0CA  F049         	movff	_nout,??_vfpfcnvrt
  5812  0010CE  C0CB  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  5813  0010D2  0E00               	movlw	0
  5814  0010D4  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  5815  0010D6  0EFF               	movlw	255
  5816  0010D8  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5817  0010DA  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  5818  0010DC  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5819  0010E0  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5820  0010E4  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  5821  0010E8  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  5822  0010EC  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  5823  0010F0  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  5824  0010F4  D77A               	goto	l4198
  5825  0010F6                     l4232:
  5826  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  5827                           
  5828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5829  0010F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5830  0010FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5831  001100  CFDE F001          	movff	postinc2,strncmp@_l
  5832  001104  CFDD F002          	movff	postdec2,strncmp@_l+1
  5833  001108  0ED9               	movlw	low STR_87
  5834  00110A  6E03               	movwf	strncmp@_r,c
  5835  00110C  0E06               	movlw	high STR_87
  5836  00110E  6E04               	movwf	strncmp@_r+1,c
  5837  001110  0E00               	movlw	0
  5838  001112  6E06               	movwf	strncmp@n+1,c
  5839  001114  0E02               	movlw	2
  5840  001116  6E05               	movwf	strncmp@n,c
  5841  001118  ECBB  F01A         	call	_strncmp	;wreg free
  5842  00111C  5001               	movf	?_strncmp,w,c
  5843  00111E  1002               	iorwf	?_strncmp+1,w,c
  5844  001120  A4D8               	btfss	status,2,c
  5845  001122  D01F               	goto	l4242
  5846  001124                     u4250:
  5847  001124  FFFF               	dw	65535	; assembler added errata NOP
  5848                           
  5849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  5850  001126  0E02               	movlw	2
  5851  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5852  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5853  001130  26DE               	addwf	postinc2,f,c
  5854  001132                     L20:
  5855  001132  FFFF               	dw	65535	; assembler added errata NOP
  5856  001134  0E00               	movlw	0
  5857  001136  22DD               	addwfc	postdec2,f,c
  5858                           
  5859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5860  001138  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5861  00113C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5862  001140  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5863  001144  0E02               	movlw	2
  5864  001146  26DE               	addwf	postinc2,f,c
  5865  001148  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5866  00114C  0E00               	movlw	0
  5867  00114E  22DD               	addwfc	postdec2,f,c
  5868  001150  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5869  001154  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5870  001158  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5871  00115C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5872  001160  D762               	goto	l4206
  5873  001162                     l4242:
  5874  001162  FFFF               	dw	65535	; assembler added errata NOP
  5875                           
  5876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  5877  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5878  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5879  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  5880  001170  CFDD FFF7          	movff	postdec2,tblptrh
  5881  001174                     	if	0	;tblptru may be non-zero
  5882  001174                     	endif
  5883  001174                     	if	0	;tblptru may be non-zero
  5884  001174                     	endif
  5885  001174  0008               	tblrd		*
  5886  001176  FFFF               	dw	65535	; errata NOP
  5887  001178  50F5               	movf	tablat,w,c
  5888  00117A  0A70               	xorlw	112
  5889  00117C  A4D8               	btfss	status,2,c
  5890  00117E  D03E               	goto	l4250
  5891                           
  5892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  5893  001180  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5894  001184  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5895  001188  2ADE               	incf	postinc2,f,c
  5896  00118A  0E00               	movlw	0
  5897  00118C  22DD               	addwfc	postdec2,f,c
  5898                           
  5899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5900  00118E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5901  001192  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5902  001196  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5903  00119A  0E02               	movlw	2
  5904  00119C  26DE               	addwf	postinc2,f,c
  5905  00119E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5906  0011A2  0E00               	movlw	0
  5907  0011A4  22DD               	addwfc	postdec2,f,c
  5908  0011A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5909  0011AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5910  0011AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5911  0011B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5912  0011B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5913  0011BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5914  0011BE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5915  0011C0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5916  0011C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5917  0011C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5918  0011C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  5919  0011C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  5920                           
  5921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  5922  0011CA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5923  0011CE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5924  0011D2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5925  0011D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5926  0011DA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5927  0011DE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5928  0011E2  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5929  0011E6  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5930  0011EA  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5931  0011EE  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5932  0011F2  0E78               	movlw	120
  5933  0011F4  6E26               	movwf	xtoa@x,c
  5934  0011F6  ECE1  F010         	call	_xtoa	;wreg free
  5935  0011FA  D1B4               	goto	L13
  5936  0011FC                     l4250:
  5937  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  5938                           
  5939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5940  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5941  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5942  001206  CFDE FFF6          	movff	postinc2,tblptrl
  5943  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  5944  00120E                     	if	0	;tblptru may be non-zero
  5945  00120E                     	endif
  5946  00120E                     	if	0	;tblptru may be non-zero
  5947  00120E                     	endif
  5948  00120E  0008               	tblrd		*
  5949  001210  FFFF               	dw	65535	; errata NOP
  5950  001212  50F5               	movf	tablat,w,c
  5951  001214  0A73               	xorlw	115
  5952  001216  A4D8               	btfss	status,2,c
  5953  001218  D02A               	goto	l4258
  5954                           
  5955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5956  00121A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5957  00121E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5958  001222  2ADE               	incf	postinc2,f,c
  5959  001224  0E00               	movlw	0
  5960  001226  22DD               	addwfc	postdec2,f,c
  5961                           
  5962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5963  001228  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5964  00122C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5965  001230  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5966  001234  0E02               	movlw	2
  5967  001236  26DE               	addwf	postinc2,f,c
  5968  001238  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5969  00123C  0E00               	movlw	0
  5970  00123E  22DD               	addwfc	postdec2,f,c
  5971  001240  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5972  001244  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5973  001248  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  5974  00124C  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  5975                           
  5976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5977  001250  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5978  001254  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5979  001258  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5980  00125C  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5981  001260  ECA5  F017         	call	_stoa	;wreg free
  5982  001264  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5983  001268  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5984  00126C  D30F               	goto	l555
  5985  00126E                     l4258:
  5986  00126E  FFFF               	dw	65535	; assembler added errata NOP
  5987                           
  5988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5989  001270  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5990  001274  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5991  001278  CFDE F001          	movff	postinc2,strncmp@_l
  5992  00127C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5993  001280  0EB8               	movlw	low STR_92
  5994  001282  6E03               	movwf	strncmp@_r,c
  5995  001284  0E06               	movlw	high STR_92
  5996  001286  6E04               	movwf	strncmp@_r+1,c
  5997  001288  0E00               	movlw	0
  5998  00128A  6E06               	movwf	strncmp@n+1,c
  5999  00128C  0E03               	movlw	3
  6000  00128E  6E05               	movwf	strncmp@n,c
  6001  001290  ECBB  F01A         	call	_strncmp	;wreg free
  6002  001294  5001               	movf	?_strncmp,w,c
  6003  001296  1002               	iorwf	?_strncmp+1,w,c
  6004  001298  A4D8               	btfss	status,2,c
  6005  00129A  D040               	goto	l4266
  6006                           
  6007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  6008  00129C  0E03               	movlw	3
  6009  00129E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  0012A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  0012A6  26DE               	addwf	postinc2,f,c
  6012  0012A8  0E00               	movlw	0
  6013  0012AA  22DD               	addwfc	postdec2,f,c
  6014                           
  6015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6016  0012AC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6017  0012B0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6018  0012B4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6019  0012B8  0E02               	movlw	2
  6020  0012BA  26DE               	addwf	postinc2,f,c
  6021  0012BC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6022  0012C0  0E00               	movlw	0
  6023  0012C2  22DD               	addwfc	postdec2,f,c
  6024  0012C4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6025  0012C8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6026  0012CC  50DF               	movf	indf2,w,c
  6027  0012CE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6028  0012D0  504B               	movf	??_vfpfcnvrt+2,w,c
  6029  0012D2  6E6A               	movwf	vfpfcnvrt@llu,c
  6030  0012D4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6031  0012D6                     L14:
  6032  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  6033  0012D8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6034  0012DA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6035  0012DC                     L15:
  6036  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  6037  0012DE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6038  0012E0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6039  0012E2  6A70               	clrf	vfpfcnvrt@llu+6,c
  6040  0012E4  6A71               	clrf	vfpfcnvrt@llu+7,c
  6041                           
  6042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  6043  0012E6  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  6044  0012EA  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6045  0012EE  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  6046  0012F2  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6047  0012F6  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6048  0012FA  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6049  0012FE  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6050  001302  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6051  001306  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6052  00130A  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6053  00130E  ECE8  F013         	call	_utoa	;wreg free
  6054  001312  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  6055  001316  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  6056  00131A  D2B8               	goto	l555
  6057  00131C                     l4266:
  6058  00131C  FFFF               	dw	65535	; assembler added errata NOP
  6059                           
  6060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6061  00131E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6062  001322  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6063  001326  CFDE F001          	movff	postinc2,strncmp@_l
  6064  00132A  CFDD F002          	movff	postdec2,strncmp@_l+1
  6065  00132E  0EB9               	movlw	low (STR_92+1)
  6066  001330  6E03               	movwf	strncmp@_r,c
  6067  001332  0E06               	movlw	high (STR_92+1)
  6068  001334  6E04               	movwf	strncmp@_r+1,c
  6069  001336  0E00               	movlw	0
  6070  001338  6E06               	movwf	strncmp@n+1,c
  6071  00133A  0E02               	movlw	2
  6072  00133C  6E05               	movwf	strncmp@n,c
  6073  00133E  ECBB  F01A         	call	_strncmp	;wreg free
  6074  001342  5001               	movf	?_strncmp,w,c
  6075  001344  1002               	iorwf	?_strncmp+1,w,c
  6076  001346  B4D8               	btfsc	status,2,c
  6077  001348  D06B               	goto	u4320
  6078                           
  6079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  6080                           
  6081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6082                           
  6083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  6084  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6085  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6086  001352  CFDE FFF6          	movff	postinc2,tblptrl
  6087  001356  CFDD FFF7          	movff	postdec2,tblptrh
  6088  00135A                     	if	0	;tblptru may be non-zero
  6089  00135A                     	endif
  6090  00135A                     	if	0	;tblptru may be non-zero
  6091  00135A                     	endif
  6092  00135A  0008               	tblrd		*
  6093  00135C  FFFF               	dw	65535	; errata NOP
  6094  00135E  50F5               	movf	tablat,w,c
  6095  001360  0A75               	xorlw	117
  6096  001362  A4D8               	btfss	status,2,c
  6097  001364  D006               	goto	l4282
  6098                           
  6099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  6100  001366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6101  00136A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6102  00136E  2ADE               	incf	postinc2,f,c
  6103  001370  D05E               	goto	L24
  6104  001372                     l4282:
  6105  001372  FFFF               	dw	65535	; assembler added errata NOP
  6106                           
  6107                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6108  001374  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6109  001378  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6110  00137C  CFDE F001          	movff	postinc2,strncmp@_l
  6111  001380  CFDD F002          	movff	postdec2,strncmp@_l+1
  6112  001384  0EC1               	movlw	low (STR_1+1)
  6113  001386  6E03               	movwf	strncmp@_r,c
  6114  001388  0E06               	movlw	high (STR_1+1)
  6115  00138A  6E04               	movwf	strncmp@_r+1,c
  6116  00138C  0E00               	movlw	0
  6117  00138E  6E06               	movwf	strncmp@n+1,c
  6118  001390  0E02               	movlw	2
  6119  001392  6E05               	movwf	strncmp@n,c
  6120  001394  ECBB  F01A         	call	_strncmp	;wreg free
  6121  001398  5001               	movf	?_strncmp,w,c
  6122  00139A  1002               	iorwf	?_strncmp+1,w,c
  6123  00139C  A4D8               	btfss	status,2,c
  6124  00139E  D029               	goto	l4290
  6125                           
  6126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  6127  0013A0  0E02               	movlw	2
  6128  0013A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6129  0013A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6130  0013AA  26DE               	addwf	postinc2,f,c
  6131  0013AC  0E00               	movlw	0
  6132  0013AE  22DD               	addwfc	postdec2,f,c
  6133                           
  6134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6135  0013B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6136  0013B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6137  0013B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6138  0013BC  0E04               	movlw	4
  6139  0013BE  26DE               	addwf	postinc2,f,c
  6140  0013C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6141  0013C4  0E00               	movlw	0
  6142  0013C6  22DD               	addwfc	postdec2,f,c
  6143  0013C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6144  0013CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6145  0013D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6146  0013D4  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6147  0013D8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6148  0013DC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6149  0013E0  504B               	movf	??_vfpfcnvrt+2,w,c
  6150  0013E2  6E6A               	movwf	vfpfcnvrt@llu,c
  6151  0013E4  504C               	movf	??_vfpfcnvrt+3,w,c
  6152  0013E6  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6153  0013E8  504D               	movf	??_vfpfcnvrt+4,w,c
  6154  0013EA  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6155  0013EC  504E               	movf	??_vfpfcnvrt+5,w,c
  6156  0013EE  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6157  0013F0  D775               	goto	L15
  6158  0013F2                     l4290:
  6159  0013F2  FFFF               	dw	65535	; assembler added errata NOP
  6160                           
  6161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6162  0013F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6163  0013F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6164  0013FC  CFDE F001          	movff	postinc2,strncmp@_l
  6165  001400  CFDD F002          	movff	postdec2,strncmp@_l+1
  6166  001404  0EE2               	movlw	low STR_107
  6167  001406  6E03               	movwf	strncmp@_r,c
  6168  001408  0E06               	movlw	high STR_107
  6169  00140A  6E04               	movwf	strncmp@_r+1,c
  6170  00140C  0E00               	movlw	0
  6171  00140E  6E06               	movwf	strncmp@n+1,c
  6172  001410  0E02               	movlw	2
  6173  001412  6E05               	movwf	strncmp@n,c
  6174  001414  ECBB  F01A         	call	_strncmp	;wreg free
  6175  001418  5001               	movf	?_strncmp,w,c
  6176  00141A  1002               	iorwf	?_strncmp+1,w,c
  6177  00141C  A4D8               	btfss	status,2,c
  6178  00141E  D023               	goto	l4298
  6179  001420                     u4320:
  6180  001420  FFFF               	dw	65535	; assembler added errata NOP
  6181                           
  6182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  6183  001422  0E02               	movlw	2
  6184  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6185  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6186  00142C  26DE               	addwf	postinc2,f,c
  6187  00142E                     L24:
  6188  00142E  FFFF               	dw	65535	; assembler added errata NOP
  6189  001430  0E00               	movlw	0
  6190  001432  22DD               	addwfc	postdec2,f,c
  6191                           
  6192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6193  001434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6194  001438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6195  00143C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6196  001440  0E02               	movlw	2
  6197  001442  26DE               	addwf	postinc2,f,c
  6198  001444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6199  001448  0E00               	movlw	0
  6200  00144A  22DD               	addwfc	postdec2,f,c
  6201  00144C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6202  001450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6203  001454  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6204  001458  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6205  00145C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6206  001460  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6207  001464  D738               	goto	L14
  6208  001466                     l4298:
  6209  001466  FFFF               	dw	65535	; assembler added errata NOP
  6210                           
  6211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  6212  001468  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6213  00146C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6214  001470  CFDE F001          	movff	postinc2,strncmp@_l
  6215  001474  CFDD F002          	movff	postdec2,strncmp@_l+1
  6216  001478  0EBC               	movlw	low STR_112
  6217  00147A  6E03               	movwf	strncmp@_r,c
  6218  00147C  0E06               	movlw	high STR_112
  6219  00147E  6E04               	movwf	strncmp@_r+1,c
  6220  001480  0E00               	movlw	0
  6221  001482  6E06               	movwf	strncmp@n+1,c
  6222  001484  0E03               	movlw	3
  6223  001486  6E05               	movwf	strncmp@n,c
  6224  001488  ECBB  F01A         	call	_strncmp	;wreg free
  6225  00148C  5001               	movf	?_strncmp,w,c
  6226  00148E  1002               	iorwf	?_strncmp+1,w,c
  6227  001490  B4D8               	btfsc	status,2,c
  6228  001492  D016               	goto	u4340
  6229  001494  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6230  001498  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6231  00149C  CFDE F001          	movff	postinc2,strncmp@_l
  6232  0014A0  CFDD F002          	movff	postdec2,strncmp@_l+1
  6233  0014A4  0EA4               	movlw	low STR_116
  6234  0014A6  6E03               	movwf	strncmp@_r,c
  6235  0014A8  0E06               	movlw	high STR_116
  6236  0014AA  6E04               	movwf	strncmp@_r+1,c
  6237  0014AC  0E00               	movlw	0
  6238  0014AE  6E06               	movwf	strncmp@n+1,c
  6239  0014B0  0E03               	movlw	3
  6240  0014B2  6E05               	movwf	strncmp@n,c
  6241  0014B4  ECBB  F01A         	call	_strncmp	;wreg free
  6242  0014B8  5001               	movf	?_strncmp,w,c
  6243  0014BA  1002               	iorwf	?_strncmp+1,w,c
  6244  0014BC  A4D8               	btfss	status,2,c
  6245  0014BE  D058               	goto	l4312
  6246  0014C0                     u4340:
  6247  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  6248                           
  6249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  6250  0014C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6251  0014C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6252  0014CA  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6253  0014CE  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6254  0014D2  0E02               	movlw	2
  6255  0014D4  2649               	addwf	??_vfpfcnvrt,f,c
  6256  0014D6  0E00               	movlw	0
  6257  0014D8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6258  0014DA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6259  0014DE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6260  0014E2                     	if	0	;tblptru may be non-zero
  6261  0014E2                     	endif
  6262  0014E2                     	if	0	;tblptru may be non-zero
  6263  0014E2                     	endif
  6264  0014E2  0008               	tblrd		*
  6265  0014E4  FFFF               	dw	65535	; errata NOP
  6266  0014E6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6267                           
  6268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  6269  0014EA  0E03               	movlw	3
  6270  0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6271  0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6272  0014F4  26DE               	addwf	postinc2,f,c
  6273  0014F6  0E00               	movlw	0
  6274  0014F8  22DD               	addwfc	postdec2,f,c
  6275                           
  6276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6277  0014FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6278  0014FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6279  001502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6280  001506  0E02               	movlw	2
  6281  001508  26DE               	addwf	postinc2,f,c
  6282  00150A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6283  00150E  0E00               	movlw	0
  6284  001510  22DD               	addwfc	postdec2,f,c
  6285  001512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6286  001516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6287  00151A  50DF               	movf	indf2,w,c
  6288  00151C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6289  00151E  504B               	movf	??_vfpfcnvrt+2,w,c
  6290  001520  6E6A               	movwf	vfpfcnvrt@llu,c
  6291  001522  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6292  001524                     L16:
  6293  001524  FFFF               	dw	65535	; assembler added errata NOP
  6294  001526  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6295  001528  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6296  00152A                     L17:
  6297  00152A  FFFF               	dw	65535	; assembler added errata NOP
  6298  00152C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6299  00152E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6300  001530  6A70               	clrf	vfpfcnvrt@llu+6,c
  6301  001532  6A71               	clrf	vfpfcnvrt@llu+7,c
  6302                           
  6303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  6304  001534  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6305  001538  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6306  00153C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6307  001540  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6308  001544  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6309  001548  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6310  00154C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6311  001550  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6312  001554  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6313  001558  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6314  00155C  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  6315  001560  ECE1  F010         	call	_xtoa	;wreg free
  6316  001564                     L13:
  6317  001564  FFFF               	dw	65535	; assembler added errata NOP
  6318  001566  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6319  00156A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6320  00156E  D18E               	goto	l555
  6321  001570                     l4312:
  6322  001570  FFFF               	dw	65535	; assembler added errata NOP
  6323                           
  6324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  6325  001572  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6326  001576  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6327  00157A  CFDE F001          	movff	postinc2,strncmp@_l
  6328  00157E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6329  001582  0EBD               	movlw	low (STR_112+1)
  6330  001584  6E03               	movwf	strncmp@_r,c
  6331  001586  0E06               	movlw	high (STR_112+1)
  6332  001588  6E04               	movwf	strncmp@_r+1,c
  6333  00158A  0E00               	movlw	0
  6334  00158C  6E06               	movwf	strncmp@n+1,c
  6335  00158E  0E02               	movlw	2
  6336  001590  6E05               	movwf	strncmp@n,c
  6337  001592  ECBB  F01A         	call	_strncmp	;wreg free
  6338  001596  5001               	movf	?_strncmp,w,c
  6339  001598  1002               	iorwf	?_strncmp+1,w,c
  6340  00159A  B4D8               	btfsc	status,2,c
  6341  00159C  D016               	goto	u4360
  6342  00159E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6343  0015A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6344  0015A6  CFDE F001          	movff	postinc2,strncmp@_l
  6345  0015AA  CFDD F002          	movff	postdec2,strncmp@_l+1
  6346  0015AE  0EA5               	movlw	low (STR_116+1)
  6347  0015B0  6E03               	movwf	strncmp@_r,c
  6348  0015B2  0E06               	movlw	high (STR_116+1)
  6349  0015B4  6E04               	movwf	strncmp@_r+1,c
  6350  0015B6  0E00               	movlw	0
  6351  0015B8  6E06               	movwf	strncmp@n+1,c
  6352  0015BA  0E02               	movlw	2
  6353  0015BC  6E05               	movwf	strncmp@n,c
  6354  0015BE  ECBB  F01A         	call	_strncmp	;wreg free
  6355  0015C2  5001               	movf	?_strncmp,w,c
  6356  0015C4  1002               	iorwf	?_strncmp+1,w,c
  6357  0015C6  A4D8               	btfss	status,2,c
  6358  0015C8  D014               	goto	l4326
  6359  0015CA                     u4360:
  6360  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  6361                           
  6362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  6363  0015CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6364  0015D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6365  0015D4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6366  0015D8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6367  0015DC  0E01               	movlw	1
  6368  0015DE  2649               	addwf	??_vfpfcnvrt,f,c
  6369  0015E0  0E00               	movlw	0
  6370  0015E2  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6371  0015E4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6372  0015E8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6373  0015EC                     	if	0	;tblptru may be non-zero
  6374  0015EC                     	endif
  6375  0015EC                     	if	0	;tblptru may be non-zero
  6376  0015EC                     	endif
  6377  0015EC  0008               	tblrd		*
  6378  0015EE  FFFF               	dw	65535	; errata NOP
  6379  0015F0  D0DB               	goto	L28
  6380  0015F2                     l4326:
  6381  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  6382                           
  6383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6384  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6385  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6386  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  6387  001600  CFDD FFF7          	movff	postdec2,tblptrh
  6388  001604                     	if	0	;tblptru may be non-zero
  6389  001604                     	endif
  6390  001604                     	if	0	;tblptru may be non-zero
  6391  001604                     	endif
  6392  001604  0008               	tblrd		*
  6393  001606  FFFF               	dw	65535	; errata NOP
  6394  001608  50F5               	movf	tablat,w,c
  6395  00160A  0A78               	xorlw	120
  6396  00160C  B4D8               	btfsc	status,2,c
  6397  00160E  D00E               	goto	u4380
  6398  001610  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6399  001614  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6400  001618  CFDE FFF6          	movff	postinc2,tblptrl
  6401  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  6402  001620                     	if	0	;tblptru may be non-zero
  6403  001620                     	endif
  6404  001620                     	if	0	;tblptru may be non-zero
  6405  001620                     	endif
  6406  001620  0008               	tblrd		*
  6407  001622  FFFF               	dw	65535	; errata NOP
  6408  001624  50F5               	movf	tablat,w,c
  6409  001626  0A58               	xorlw	88
  6410  001628  A4D8               	btfss	status,2,c
  6411  00162A  D013               	goto	l4340
  6412  00162C                     u4380:
  6413  00162C  FFFF               	dw	65535	; assembler added errata NOP
  6414                           
  6415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6416  00162E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6417  001632  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6418  001636  CFDE FFF6          	movff	postinc2,tblptrl
  6419  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  6420  00163E                     	if	0	;tblptru may be non-zero
  6421  00163E                     	endif
  6422  00163E                     	if	0	;tblptru may be non-zero
  6423  00163E                     	endif
  6424  00163E  0008               	tblrd		*
  6425  001640  FFFF               	dw	65535	; errata NOP
  6426  001642  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6427                           
  6428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6429  001646  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6430  00164A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6431  00164E  2ADE               	incf	postinc2,f,c
  6432  001650  D0B4               	goto	L27
  6433  001652                     l4340:
  6434  001652  FFFF               	dw	65535	; assembler added errata NOP
  6435                           
  6436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  6437  001654  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6438  001658  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6439  00165C  CFDE F001          	movff	postinc2,strncmp@_l
  6440  001660  CFDD F002          	movff	postdec2,strncmp@_l+1
  6441  001664  0EE5               	movlw	low STR_130
  6442  001666  6E03               	movwf	strncmp@_r,c
  6443  001668  0E06               	movlw	high STR_130
  6444  00166A  6E04               	movwf	strncmp@_r+1,c
  6445  00166C  0E00               	movlw	0
  6446  00166E  6E06               	movwf	strncmp@n+1,c
  6447  001670  0E02               	movlw	2
  6448  001672  6E05               	movwf	strncmp@n,c
  6449  001674  ECBB  F01A         	call	_strncmp	;wreg free
  6450  001678  5001               	movf	?_strncmp,w,c
  6451  00167A  1002               	iorwf	?_strncmp+1,w,c
  6452  00167C  B4D8               	btfsc	status,2,c
  6453  00167E  D016               	goto	u4400
  6454  001680  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6455  001684  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6456  001688  CFDE F001          	movff	postinc2,strncmp@_l
  6457  00168C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6458  001690  0EC4               	movlw	low STR_134
  6459  001692  6E03               	movwf	strncmp@_r,c
  6460  001694  0E06               	movlw	high STR_134
  6461  001696  6E04               	movwf	strncmp@_r+1,c
  6462  001698  0E00               	movlw	0
  6463  00169A  6E06               	movwf	strncmp@n+1,c
  6464  00169C  0E02               	movlw	2
  6465  00169E  6E05               	movwf	strncmp@n,c
  6466  0016A0  ECBB  F01A         	call	_strncmp	;wreg free
  6467  0016A4  5001               	movf	?_strncmp,w,c
  6468  0016A6  1002               	iorwf	?_strncmp+1,w,c
  6469  0016A8  A4D8               	btfss	status,2,c
  6470  0016AA  D03E               	goto	l4354
  6471  0016AC                     u4400:
  6472  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  6473                           
  6474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  6475  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6476  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6477  0016B6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6478  0016BA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6479  0016BE  0E01               	movlw	1
  6480  0016C0  2649               	addwf	??_vfpfcnvrt,f,c
  6481  0016C2  0E00               	movlw	0
  6482  0016C4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6483  0016C6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6484  0016CA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6485  0016CE                     	if	0	;tblptru may be non-zero
  6486  0016CE                     	endif
  6487  0016CE                     	if	0	;tblptru may be non-zero
  6488  0016CE                     	endif
  6489  0016CE  0008               	tblrd		*
  6490  0016D0  FFFF               	dw	65535	; errata NOP
  6491  0016D2  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6492                           
  6493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  6494  0016D6  0E02               	movlw	2
  6495  0016D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6496  0016DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6497  0016E0  26DE               	addwf	postinc2,f,c
  6498  0016E2  0E00               	movlw	0
  6499  0016E4  22DD               	addwfc	postdec2,f,c
  6500                           
  6501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6502  0016E6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6503  0016EA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6504  0016EE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6505  0016F2  0E04               	movlw	4
  6506  0016F4  26DE               	addwf	postinc2,f,c
  6507  0016F6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6508  0016FA  0E00               	movlw	0
  6509  0016FC  22DD               	addwfc	postdec2,f,c
  6510  0016FE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6511  001702  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6512  001706  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6513  00170A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6514  00170E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6515  001712  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6516  001716  504B               	movf	??_vfpfcnvrt+2,w,c
  6517  001718  6E6A               	movwf	vfpfcnvrt@llu,c
  6518  00171A  504C               	movf	??_vfpfcnvrt+3,w,c
  6519  00171C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6520  00171E  504D               	movf	??_vfpfcnvrt+4,w,c
  6521  001720  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6522  001722  504E               	movf	??_vfpfcnvrt+5,w,c
  6523  001724  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6524  001726  D701               	goto	L17
  6525  001728                     l4354:
  6526  001728  FFFF               	dw	65535	; assembler added errata NOP
  6527                           
  6528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  6529  00172A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6530  00172E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6531  001732  CFDE F001          	movff	postinc2,strncmp@_l
  6532  001736  CFDD F002          	movff	postdec2,strncmp@_l+1
  6533  00173A  0EE8               	movlw	low STR_139
  6534  00173C  6E03               	movwf	strncmp@_r,c
  6535  00173E  0E06               	movlw	high STR_139
  6536  001740  6E04               	movwf	strncmp@_r+1,c
  6537  001742  0E00               	movlw	0
  6538  001744  6E06               	movwf	strncmp@n+1,c
  6539  001746  0E02               	movlw	2
  6540  001748  6E05               	movwf	strncmp@n,c
  6541  00174A  ECBB  F01A         	call	_strncmp	;wreg free
  6542  00174E  5001               	movf	?_strncmp,w,c
  6543  001750  1002               	iorwf	?_strncmp+1,w,c
  6544  001752  B4D8               	btfsc	status,2,c
  6545  001754  D016               	goto	u4420
  6546  001756  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6547  00175A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6548  00175E  CFDE F001          	movff	postinc2,strncmp@_l
  6549  001762  CFDD F002          	movff	postdec2,strncmp@_l+1
  6550  001766  0EC7               	movlw	low STR_143
  6551  001768  6E03               	movwf	strncmp@_r,c
  6552  00176A  0E06               	movlw	high STR_143
  6553  00176C  6E04               	movwf	strncmp@_r+1,c
  6554  00176E  0E00               	movlw	0
  6555  001770  6E06               	movwf	strncmp@n+1,c
  6556  001772  0E02               	movlw	2
  6557  001774  6E05               	movwf	strncmp@n,c
  6558  001776  ECBB  F01A         	call	_strncmp	;wreg free
  6559  00177A  5001               	movf	?_strncmp,w,c
  6560  00177C  1002               	iorwf	?_strncmp+1,w,c
  6561  00177E  A4D8               	btfss	status,2,c
  6562  001780  D038               	goto	l4368
  6563  001782                     u4420:
  6564  001782  FFFF               	dw	65535	; assembler added errata NOP
  6565                           
  6566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  6567  001784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6568  001788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6569  00178C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6570  001790  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6571  001794  0E01               	movlw	1
  6572  001796  2649               	addwf	??_vfpfcnvrt,f,c
  6573  001798  0E00               	movlw	0
  6574  00179A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6575  00179C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6576  0017A0  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6577  0017A4                     	if	0	;tblptru may be non-zero
  6578  0017A4                     	endif
  6579  0017A4                     	if	0	;tblptru may be non-zero
  6580  0017A4                     	endif
  6581  0017A4  0008               	tblrd		*
  6582  0017A6  FFFF               	dw	65535	; errata NOP
  6583  0017A8                     L28:
  6584  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  6585  0017AA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6586                           
  6587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  6588  0017AE  0E02               	movlw	2
  6589  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6590  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6591  0017B8  26DE               	addwf	postinc2,f,c
  6592  0017BA                     L27:
  6593  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  6594  0017BC  0E00               	movlw	0
  6595  0017BE  22DD               	addwfc	postdec2,f,c
  6596                           
  6597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6598  0017C0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6599  0017C4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6600  0017C8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6601  0017CC  0E02               	movlw	2
  6602  0017CE  26DE               	addwf	postinc2,f,c
  6603  0017D0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6604  0017D4  0E00               	movlw	0
  6605  0017D6  22DD               	addwfc	postdec2,f,c
  6606  0017D8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6607  0017DC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6608  0017E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6609  0017E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6610  0017E8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6611  0017EC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6612  0017F0  D699               	goto	L16
  6613  0017F2                     l4368:
  6614  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  6615                           
  6616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6617  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6618  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6619  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  6620  001800  CFDD FFF7          	movff	postdec2,tblptrh
  6621  001804                     	if	0	;tblptru may be non-zero
  6622  001804                     	endif
  6623  001804                     	if	0	;tblptru may be non-zero
  6624  001804                     	endif
  6625  001804  0008               	tblrd		*
  6626  001806  FFFF               	dw	65535	; errata NOP
  6627  001808  50F5               	movf	tablat,w,c
  6628  00180A  0A25               	xorlw	37
  6629  00180C  A4D8               	btfss	status,2,c
  6630  00180E  D018               	goto	l4378
  6631                           
  6632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6633  001810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6634  001814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6635  001818  2ADE               	incf	postinc2,f,c
  6636  00181A  0E00               	movlw	0
  6637  00181C  22DD               	addwfc	postdec2,f,c
  6638                           
  6639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6640  00181E  0E00               	movlw	0
  6641  001820  6E02               	movwf	fputc@c+1,c
  6642  001822  0E25               	movlw	37
  6643  001824  6E01               	movwf	fputc@c,c
  6644  001826  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6645  00182A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6646  00182E  EC7A  F01B         	call	_fputc	;wreg free
  6647  001832                     l4374:
  6648  001832  FFFF               	dw	65535	; assembler added errata NOP
  6649                           
  6650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6651  001834  0E00               	movlw	0
  6652  001836  6E44               	movwf	?_vfpfcnvrt+1,c
  6653  001838  0E01               	movlw	1
  6654  00183A                     L11:
  6655  00183A  FFFF               	dw	65535	; assembler added errata NOP
  6656  00183C  6E43               	movwf	?_vfpfcnvrt,c
  6657  00183E  D026               	goto	l555
  6658  001840                     l4378:
  6659  001840  FFFF               	dw	65535	; assembler added errata NOP
  6660                           
  6661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6662  001842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6663  001846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6664  00184A  2ADE               	incf	postinc2,f,c
  6665  00184C  0E00               	movlw	0
  6666  00184E  22DD               	addwfc	postdec2,f,c
  6667  001850  EFF5  F007         	goto	l4198
  6668  001854                     l4384:
  6669  001854  FFFF               	dw	65535	; assembler added errata NOP
  6670                           
  6671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6672  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6673  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6674  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  6675  001862  CFDD FFF7          	movff	postdec2,tblptrh
  6676  001866                     	if	0	;tblptru may be non-zero
  6677  001866                     	endif
  6678  001866                     	if	0	;tblptru may be non-zero
  6679  001866                     	endif
  6680  001866  0008               	tblrd		*
  6681  001868  FFFF               	dw	65535	; errata NOP
  6682  00186A  50F5               	movf	tablat,w,c
  6683  00186C  6E01               	movwf	fputc@c,c
  6684  00186E  6A02               	clrf	fputc@c+1,c
  6685  001870  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6686  001874  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6687  001878  EC7A  F01B         	call	_fputc	;wreg free
  6688                           
  6689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6690  00187C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6691  001880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6692  001884  2ADE               	incf	postinc2,f,c
  6693  001886  0E00               	movlw	0
  6694  001888  22DD               	addwfc	postdec2,f,c
  6695  00188A  D7D3               	goto	l4374
  6696  00188C                     l555:
  6697  00188C  FFFF               	dw	65535	; assembler added errata NOP
  6698  00188E  0012               	return		;funcret
  6699  001890  FFFF               	dw	65535	; errata NOP
  6700  001892                     __end_of_vfpfcnvrt:
  6701                           	opt callstack 0
  6702                           
  6703 ;; *************** function _xtoa *****************
  6704 ;; Defined at:
  6705 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6708 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6709 ;;  d               8   29[COMRAM] unsigned long long 
  6710 ;;  x               1   37[COMRAM] unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  n               8   54[COMRAM] unsigned long long 
  6713 ;;  c               2   64[COMRAM] int 
  6714 ;;  i               2   62[COMRAM] int 
  6715 ;;  w               2   52[COMRAM] int 
  6716 ;;  p               2   50[COMRAM] int 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  2   27[COMRAM] int 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6726 ;;      Params:        11       0       0       0       0       0       0
  6727 ;;      Locals:        20       0       0       0       0       0       0
  6728 ;;      Temps:          8       0       0       0       0       0       0
  6729 ;;      Totals:        39       0       0       0       0       0       0
  6730 ;;Total ram usage:       39 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    6
  6733 ;; This function calls:
  6734 ;;		_isalpha
  6735 ;;		_isupper
  6736 ;;		_pad
  6737 ;;		_toupper
  6738 ;; This function is called by:
  6739 ;;		_vfpfcnvrt
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text22
  6744  0021C2                     __ptext22:
  6745                           	opt callstack 0
  6746  0021C2                     _xtoa:
  6747                           	opt callstack 0
  6748  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  6749                           
  6750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6751                           
  6752                           ;incstack = 0
  6753  0021C4  0100               	movlb	0	; () banked
  6754  0021C6  AFCF               	btfss	(_prec+1)& (0+255),7,b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6758  0021C8  93D0               	bcf	_flags& (0+255),1,b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6762  0021CA  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  6763  0021CC  D005               	goto	u3640
  6764  0021CE  51CF               	movf	(_prec+1)& (0+255),w,b
  6765  0021D0  E109               	bnz	l493
  6766  0021D2  05CE               	decf	_prec& (0+255),w,b
  6767  0021D4  B0D8               	btfsc	status,0,c
  6768  0021D6  D006               	goto	l493
  6769  0021D8                     u3640:
  6770  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  6771                           
  6772                           ; BSR set to: 0
  6773  0021DA  0E00               	movlw	0
  6774  0021DC  6E34               	movwf	xtoa@p+1,c
  6775  0021DE  0E01               	movlw	1
  6776  0021E0  6E33               	movwf	xtoa@p,c
  6777  0021E2  D005               	goto	l495
  6778  0021E4                     l493:
  6779  0021E4  FFFF               	dw	65535	; assembler added errata NOP
  6780                           
  6781                           ; BSR set to: 0
  6782  0021E6  C0CE  F033         	movff	_prec,xtoa@p
  6783  0021EA  C0CF  F034         	movff	_prec+1,xtoa@p+1
  6784  0021EE                     l495:
  6785  0021EE  FFFF               	dw	65535	; assembler added errata NOP
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6789  0021F0  C0CC  F035         	movff	_width,xtoa@w
  6790  0021F4  C0CD  F036         	movff	_width+1,xtoa@w+1
  6791                           
  6792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6793  0021F8  A9D0               	btfss	_flags& (0+255),4,b
  6794  0021FA  D004               	goto	l3898
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6798  0021FC  0EFE               	movlw	254
  6799  0021FE  2635               	addwf	xtoa@w,f,c
  6800  002200  0EFF               	movlw	255
  6801  002202  2236               	addwfc	xtoa@w+1,f,c
  6802  002204                     l3898:
  6803  002204  FFFF               	dw	65535	; assembler added errata NOP
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6807  002206  C01E  F037         	movff	xtoa@d,xtoa@n
  6808  00220A  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6809  00220E  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6810  002212  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6811  002216  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6812  00221A  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6813  00221E  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6814  002222  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6818  002226  0E00               	movlw	0
  6819  002228  6E40               	movwf	xtoa@i+1,c
  6820  00222A  0E1F               	movlw	31
  6821  00222C  6E3F               	movwf	xtoa@i,c
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6825  00222E  0E00               	movlw	0
  6826  002230  6FF4               	movwf	(_dbuf+31)& (0+255),b
  6827                           
  6828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6829  002232  D09D               	goto	l3934
  6830  002234                     l3904:
  6831  002234  FFFF               	dw	65535	; assembler added errata NOP
  6832                           
  6833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6834  002236  063F               	decf	xtoa@i,f,c
  6835  002238  A0D8               	btfss	status,0,c
  6836  00223A  0640               	decf	xtoa@i+1,f,c
  6837                           
  6838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6839  00223C  0E0F               	movlw	15
  6840  00223E  1437               	andwf	xtoa@n,w,c
  6841  002240  6E41               	movwf	xtoa@c,c
  6842  002242  6A42               	clrf	xtoa@c+1,c
  6843                           
  6844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6845  002244  BE42               	btfsc	xtoa@c+1,7,c
  6846  002246  D008               	goto	l3912
  6847  002248  5042               	movf	xtoa@c+1,w,c
  6848  00224A  E104               	bnz	u3660
  6849  00224C  0E0A               	movlw	10
  6850  00224E  5C41               	subwf	xtoa@c,w,c
  6851  002250  A0D8               	btfss	status,0,c
  6852  002252  D002               	goto	l3912
  6853  002254                     u3660:
  6854  002254  0E57               	movlw	87
  6855  002256  D002               	goto	L25
  6856  002258                     l3912:
  6857  002258  FFFF               	dw	65535	; assembler added errata NOP
  6858  00225A  0E30               	movlw	48
  6859  00225C                     L25:
  6860  00225C  FFFF               	dw	65535	; assembler added errata NOP
  6861  00225E  2441               	addwf	xtoa@c,w,c
  6862  002260  6E41               	movwf	xtoa@c,c
  6863  002262  0E00               	movlw	0
  6864  002264  2042               	addwfc	xtoa@c+1,w,c
  6865  002266  6E42               	movwf	xtoa@c+1,c
  6866                           
  6867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  6868  002268  0EBF               	movlw	191
  6869  00226A  6E27               	movwf	??_xtoa& (0+255),c
  6870  00226C  0EFF               	movlw	255
  6871  00226E  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6872  002270  5026               	movf	xtoa@x,w,c
  6873  002272  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6874  002274  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  6875  002276  5027               	movf	??_xtoa,w,c
  6876  002278  2629               	addwf	??_xtoa+2,f,c
  6877  00227A  5028               	movf	??_xtoa+1,w,c
  6878  00227C  222A               	addwfc	??_xtoa+3,f,c
  6879  00227E  502A               	movf	??_xtoa+3,w,c
  6880  002280  E106               	bnz	u3670
  6881  002282  0E1A               	movlw	26
  6882  002284  5C29               	subwf	??_xtoa+2,w,c
  6883  002286  B0D8               	btfsc	status,0,c
  6884  002288  D002               	goto	u3670
  6885  00228A  0E01               	movlw	1
  6886  00228C  D002               	goto	u3680
  6887  00228E                     u3670:
  6888  00228E  FFFF               	dw	65535	; assembler added errata NOP
  6889  002290  0E00               	movlw	0
  6890  002292                     u3680:
  6891  002292  FFFF               	dw	65535	; assembler added errata NOP
  6892  002294  6E2F               	movwf	_xtoa$1111,c
  6893  002296  6A30               	clrf	_xtoa$1111+1,c
  6894  002298  502F               	movf	_xtoa$1111,w,c
  6895  00229A  1030               	iorwf	_xtoa$1111+1,w,c
  6896  00229C  B4D8               	btfsc	status,2,c
  6897  00229E  D029               	goto	l3926
  6898  0022A0  0E9F               	movlw	159
  6899  0022A2  6E27               	movwf	??_xtoa& (0+255),c
  6900  0022A4  0EFF               	movlw	255
  6901  0022A6  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6902  0022A8  0E20               	movlw	32
  6903  0022AA  1041               	iorwf	xtoa@c,w,c
  6904  0022AC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6905  0022AE  0E00               	movlw	0
  6906  0022B0  1042               	iorwf	xtoa@c+1,w,c
  6907  0022B2  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  6908  0022B4  5027               	movf	??_xtoa,w,c
  6909  0022B6  2629               	addwf	??_xtoa+2,f,c
  6910  0022B8  5028               	movf	??_xtoa+1,w,c
  6911  0022BA  222A               	addwfc	??_xtoa+3,f,c
  6912  0022BC  502A               	movf	??_xtoa+3,w,c
  6913  0022BE  E106               	bnz	u3700
  6914  0022C0  0E1A               	movlw	26
  6915  0022C2  5C29               	subwf	??_xtoa+2,w,c
  6916  0022C4  B0D8               	btfsc	status,0,c
  6917  0022C6  D002               	goto	u3700
  6918  0022C8  0E01               	movlw	1
  6919  0022CA  D002               	goto	u3710
  6920  0022CC                     u3700:
  6921  0022CC  FFFF               	dw	65535	; assembler added errata NOP
  6922  0022CE  0E00               	movlw	0
  6923  0022D0                     u3710:
  6924  0022D0  FFFF               	dw	65535	; assembler added errata NOP
  6925  0022D2  6E31               	movwf	_xtoa$1112,c
  6926  0022D4  6A32               	clrf	_xtoa$1112+1,c
  6927  0022D6  5031               	movf	_xtoa$1112,w,c
  6928  0022D8  1032               	iorwf	_xtoa$1112+1,w,c
  6929  0022DA  B4D8               	btfsc	status,2,c
  6930  0022DC  D00A               	goto	l3926
  6931                           
  6932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6933  0022DE  C041  F007         	movff	xtoa@c,toupper@c
  6934  0022E2  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6935  0022E6  EC51  F01D         	call	_toupper	;wreg free
  6936  0022EA  C007  F041         	movff	?_toupper,xtoa@c
  6937  0022EE  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6938  0022F2                     l3926:
  6939  0022F2  FFFF               	dw	65535	; assembler added errata NOP
  6940                           
  6941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6942  0022F4  0ED5               	movlw	low _dbuf
  6943  0022F6  243F               	addwf	xtoa@i,w,c
  6944  0022F8  6ED9               	movwf	fsr2l,c
  6945  0022FA  0E00               	movlw	high _dbuf
  6946  0022FC  2040               	addwfc	xtoa@i+1,w,c
  6947  0022FE  6EDA               	movwf	fsr2h,c
  6948  002300  C041  FFDF         	movff	xtoa@c,indf2
  6949                           
  6950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6951  002304  0633               	decf	xtoa@p,f,c
  6952  002306  A0D8               	btfss	status,0,c
  6953  002308  0634               	decf	xtoa@p+1,f,c
  6954                           
  6955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6956  00230A  0635               	decf	xtoa@w,f,c
  6957  00230C  A0D8               	btfss	status,0,c
  6958  00230E  0636               	decf	xtoa@w+1,f,c
  6959                           
  6960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6961  002310  C037  F027         	movff	xtoa@n,??_xtoa
  6962  002314  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6963  002318  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6964  00231C  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6965  002320  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6966  002324  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6967  002328  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6968  00232C  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6969  002330  0E05               	movlw	5
  6970  002332  D00A               	goto	u3730
  6971  002334                     u3735:
  6972  002334  FFFF               	dw	65535	; assembler added errata NOP
  6973  002336  90D8               	bcf	status,0,c
  6974  002338  322E               	rrcf	??_xtoa+7,f,c
  6975  00233A  322D               	rrcf	??_xtoa+6,f,c
  6976  00233C  322C               	rrcf	??_xtoa+5,f,c
  6977  00233E  322B               	rrcf	??_xtoa+4,f,c
  6978  002340  322A               	rrcf	??_xtoa+3,f,c
  6979  002342  3229               	rrcf	??_xtoa+2,f,c
  6980  002344  3228               	rrcf	??_xtoa+1,f,c
  6981  002346  3227               	rrcf	??_xtoa,f,c
  6982  002348                     u3730:
  6983  002348  FFFF               	dw	65535	; assembler added errata NOP
  6984  00234A  2EE8               	decfsz	wreg,f,c
  6985  00234C  D7F3               	goto	u3735
  6986  00234E  C027  F037         	movff	??_xtoa,xtoa@n
  6987  002352  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6988  002356  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6989  00235A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6990  00235E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6991  002362  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6992  002366  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6993  00236A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6994  00236E                     l3934:
  6995  00236E  FFFF               	dw	65535	; assembler added errata NOP
  6996                           
  6997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6998  002370  BE40               	btfsc	xtoa@i+1,7,c
  6999  002372  D022               	goto	u3780
  7000  002374  5040               	movf	xtoa@i+1,w,c
  7001  002376  E104               	bnz	u3740
  7002  002378  0E02               	movlw	2
  7003  00237A  5C3F               	subwf	xtoa@i,w,c
  7004  00237C  A0D8               	btfss	status,0,c
  7005  00237E  D01C               	goto	u3780
  7006  002380                     u3740:
  7007  002380  5037               	movf	xtoa@n,w,c
  7008  002382  1038               	iorwf	xtoa@n+1,w,c
  7009  002384  1039               	iorwf	xtoa@n+2,w,c
  7010  002386  103A               	iorwf	xtoa@n+3,w,c
  7011  002388  103B               	iorwf	xtoa@n+4,w,c
  7012  00238A  103C               	iorwf	xtoa@n+5,w,c
  7013  00238C  103D               	iorwf	xtoa@n+6,w,c
  7014  00238E  103E               	iorwf	xtoa@n+7,w,c
  7015  002390  A4D8               	btfss	status,2,c
  7016  002392  D750               	goto	l3904
  7017  002394  BE34               	btfsc	xtoa@p+1,7,c
  7018  002396  D005               	goto	u3760
  7019  002398  5034               	movf	xtoa@p+1,w,c
  7020  00239A  E102               	bnz	u3761
  7021  00239C  0433               	decf	xtoa@p,w,c
  7022  00239E  B0D8               	btfsc	status,0,c
  7023  0023A0                     u3761:
  7024  0023A0  D749               	goto	l3904
  7025  0023A2                     u3760:
  7026  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  7027  0023A4  BE36               	btfsc	xtoa@w+1,7,c
  7028  0023A6  D008               	goto	u3780
  7029  0023A8  5036               	movf	xtoa@w+1,w,c
  7030  0023AA  E103               	bnz	u3770
  7031  0023AC  0435               	decf	xtoa@w,w,c
  7032  0023AE  A0D8               	btfss	status,0,c
  7033  0023B0  D003               	goto	u3780
  7034  0023B2                     u3770:
  7035  0023B2  0100               	movlb	0	; () banked
  7036  0023B4  B3D0               	btfsc	_flags& (0+255),1,b
  7037  0023B6  D73E               	goto	l3904
  7038  0023B8                     u3780:
  7039  0023B8  FFFF               	dw	65535	; assembler added errata NOP
  7040                           
  7041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7042  0023BA  0100               	movlb	0	; () banked
  7043  0023BC  A9D0               	btfss	_flags& (0+255),4,b
  7044  0023BE  D016               	goto	l3950
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7048  0023C0  063F               	decf	xtoa@i,f,c
  7049  0023C2  A0D8               	btfss	status,0,c
  7050  0023C4  0640               	decf	xtoa@i+1,f,c
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7054  0023C6  0ED5               	movlw	low _dbuf
  7055  0023C8  243F               	addwf	xtoa@i,w,c
  7056  0023CA  6ED9               	movwf	fsr2l,c
  7057  0023CC  0E00               	movlw	high _dbuf
  7058  0023CE  2040               	addwfc	xtoa@i+1,w,c
  7059  0023D0  6EDA               	movwf	fsr2h,c
  7060  0023D2  C026  FFDF         	movff	xtoa@x,indf2
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7064  0023D6  063F               	decf	xtoa@i,f,c
  7065  0023D8  A0D8               	btfss	status,0,c
  7066  0023DA  0640               	decf	xtoa@i+1,f,c
  7067                           
  7068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7069  0023DC  0ED5               	movlw	low _dbuf
  7070  0023DE  243F               	addwf	xtoa@i,w,c
  7071  0023E0  6ED9               	movwf	fsr2l,c
  7072  0023E2  0E00               	movlw	high _dbuf
  7073  0023E4  2040               	addwfc	xtoa@i+1,w,c
  7074  0023E6  6EDA               	movwf	fsr2h,c
  7075  0023E8  0E30               	movlw	48
  7076  0023EA  6EDF               	movwf	indf2,c
  7077  0023EC                     l3950:
  7078  0023EC  FFFF               	dw	65535	; assembler added errata NOP
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7082  0023EE  C01C  F011         	movff	xtoa@fp,pad@fp
  7083  0023F2  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7084  0023F6  0ED5               	movlw	low _dbuf
  7085  0023F8  243F               	addwf	xtoa@i,w,c
  7086  0023FA  6E13               	movwf	pad@buf,c
  7087  0023FC  0E00               	movlw	high _dbuf
  7088  0023FE  2040               	addwfc	xtoa@i+1,w,c
  7089  002400  6E14               	movwf	pad@buf+1,c
  7090  002402  C035  F015         	movff	xtoa@w,pad@p
  7091  002406  C036  F016         	movff	xtoa@w+1,pad@p+1
  7092  00240A  ECD0  F01B         	call	_pad	;wreg free
  7093  00240E  C011  F01C         	movff	?_pad,?_xtoa
  7094  002412  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7095  002416  0012               	return		;funcret
  7096  002418  FFFF               	dw	65535	; errata NOP
  7097  00241A                     __end_of_xtoa:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _toupper *****************
  7101 ;; Defined at:
  7102 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  c               2    6[COMRAM] int 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;		None
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  2    6[COMRAM] int 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7116 ;;      Params:         2       0       0       0       0       0       0
  7117 ;;      Locals:         2       0       0       0       0       0       0
  7118 ;;      Temps:          4       0       0       0       0       0       0
  7119 ;;      Totals:         8       0       0       0       0       0       0
  7120 ;;Total ram usage:        8 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    3
  7123 ;; This function calls:
  7124 ;;		_islower
  7125 ;; This function is called by:
  7126 ;;		_xtoa
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text23
  7131  003AA2                     __ptext23:
  7132                           	opt callstack 0
  7133  003AA2                     _toupper:
  7134                           	opt callstack 0
  7135  003AA2  FFFF               	dw	65535	; assembler added errata NOP
  7136                           
  7137                           ;incstack = 0
  7138  003AA4  0E9F               	movlw	159
  7139  003AA6  6E09               	movwf	??_toupper& (0+255),c
  7140  003AA8  0EFF               	movlw	255
  7141  003AAA  6E0A               	movwf	(??_toupper+1)& (0+255),c
  7142  003AAC  C007  F00B         	movff	toupper@c,??_toupper+2
  7143  003AB0  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7144  003AB4  5009               	movf	??_toupper,w,c
  7145  003AB6  260B               	addwf	??_toupper+2,f,c
  7146  003AB8  500A               	movf	??_toupper+1,w,c
  7147  003ABA  220C               	addwfc	??_toupper+3,f,c
  7148  003ABC  500C               	movf	??_toupper+3,w,c
  7149  003ABE  E106               	bnz	u2940
  7150  003AC0  0E1A               	movlw	26
  7151  003AC2  5C0B               	subwf	??_toupper+2,w,c
  7152  003AC4  B0D8               	btfsc	status,0,c
  7153  003AC6  D002               	goto	u2940
  7154  003AC8  0E01               	movlw	1
  7155  003ACA  D002               	goto	u2950
  7156  003ACC                     u2940:
  7157  003ACC  FFFF               	dw	65535	; assembler added errata NOP
  7158  003ACE  0E00               	movlw	0
  7159  003AD0                     u2950:
  7160  003AD0  FFFF               	dw	65535	; assembler added errata NOP
  7161  003AD2  6E0D               	movwf	_toupper$1878,c
  7162  003AD4  6A0E               	clrf	_toupper$1878+1,c
  7163  003AD6  500D               	movf	_toupper$1878,w,c
  7164  003AD8  100E               	iorwf	_toupper$1878+1,w,c
  7165  003ADA  B4D8               	btfsc	status,2,c
  7166  003ADC  D005               	goto	l1428
  7167  003ADE  0E5F               	movlw	95
  7168  003AE0  1407               	andwf	toupper@c,w,c
  7169  003AE2  6E07               	movwf	?_toupper,c
  7170  003AE4  6A08               	clrf	?_toupper+1,c
  7171  003AE6  D005               	goto	l1433
  7172  003AE8                     l1428:
  7173  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  7174  003AEA  C007  F007         	movff	toupper@c,?_toupper
  7175  003AEE  C008  F008         	movff	toupper@c+1,?_toupper+1
  7176  003AF2                     l1433:
  7177  003AF2  FFFF               	dw	65535	; assembler added errata NOP
  7178  003AF4  0012               	return		;funcret
  7179  003AF6  FFFF               	dw	65535	; errata NOP
  7180  003AF8                     __end_of_toupper:
  7181                           	opt callstack 0
  7182                           
  7183 ;; *************** function _islower *****************
  7184 ;; Defined at:
  7185 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  c               2    0[COMRAM] int 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  2    0[COMRAM] int 
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7199 ;;      Params:         2       0       0       0       0       0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0
  7201 ;;      Temps:          4       0       0       0       0       0       0
  7202 ;;      Totals:         6       0       0       0       0       0       0
  7203 ;;Total ram usage:        6 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    2
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_toupper
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           	psect	text24
  7214  003D6E                     __ptext24:
  7215                           	opt callstack 0
  7216  003D6E                     _islower:
  7217                           	opt callstack 0
  7218  003D6E  FFFF               	dw	65535	; assembler added errata NOP
  7219                           
  7220                           ;incstack = 0
  7221  003D70  0E9F               	movlw	159
  7222  003D72  6E03               	movwf	??_islower& (0+255),c
  7223  003D74  0EFF               	movlw	255
  7224  003D76  6E04               	movwf	(??_islower+1)& (0+255),c
  7225  003D78  C001  F005         	movff	islower@c,??_islower+2
  7226  003D7C  C002  F006         	movff	islower@c+1,??_islower+3
  7227  003D80  5003               	movf	??_islower,w,c
  7228  003D82  2605               	addwf	??_islower+2,f,c
  7229  003D84  5004               	movf	??_islower+1,w,c
  7230  003D86  2206               	addwfc	??_islower+3,f,c
  7231  003D88  5006               	movf	??_islower+3,w,c
  7232  003D8A  E106               	bnz	u2830
  7233  003D8C  0E1A               	movlw	26
  7234  003D8E  5C05               	subwf	??_islower+2,w,c
  7235  003D90  B0D8               	btfsc	status,0,c
  7236  003D92  D002               	goto	u2830
  7237  003D94  0E01               	movlw	1
  7238  003D96  D002               	goto	u2840
  7239  003D98                     u2830:
  7240  003D98  FFFF               	dw	65535	; assembler added errata NOP
  7241  003D9A  0E00               	movlw	0
  7242  003D9C                     u2840:
  7243  003D9C  FFFF               	dw	65535	; assembler added errata NOP
  7244  003D9E  6E01               	movwf	?_islower,c
  7245  003DA0  6A02               	clrf	?_islower+1,c
  7246  003DA2  0012               	return		;funcret
  7247  003DA4  FFFF               	dw	65535	; errata NOP
  7248  003DA6                     __end_of_islower:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _isupper *****************
  7252 ;; Defined at:
  7253 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  c               2    0[COMRAM] int 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    0[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7267 ;;      Params:         2       0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0
  7269 ;;      Temps:          4       0       0       0       0       0       0
  7270 ;;      Totals:         6       0       0       0       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_xtoa
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text25
  7282  003DA6                     __ptext25:
  7283                           	opt callstack 0
  7284  003DA6                     _isupper:
  7285                           	opt callstack 0
  7286  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  7287                           
  7288                           ;incstack = 0
  7289  003DA8  0EBF               	movlw	191
  7290  003DAA  6E03               	movwf	??_isupper& (0+255),c
  7291  003DAC  0EFF               	movlw	255
  7292  003DAE  6E04               	movwf	(??_isupper+1)& (0+255),c
  7293  003DB0  C001  F005         	movff	isupper@c,??_isupper+2
  7294  003DB4  C002  F006         	movff	isupper@c+1,??_isupper+3
  7295  003DB8  5003               	movf	??_isupper,w,c
  7296  003DBA  2605               	addwf	??_isupper+2,f,c
  7297  003DBC  5004               	movf	??_isupper+1,w,c
  7298  003DBE  2206               	addwfc	??_isupper+3,f,c
  7299  003DC0  5006               	movf	??_isupper+3,w,c
  7300  003DC2  E106               	bnz	u2900
  7301  003DC4  0E1A               	movlw	26
  7302  003DC6  5C05               	subwf	??_isupper+2,w,c
  7303  003DC8  B0D8               	btfsc	status,0,c
  7304  003DCA  D002               	goto	u2900
  7305  003DCC  0E01               	movlw	1
  7306  003DCE  D002               	goto	u2910
  7307  003DD0                     u2900:
  7308  003DD0  FFFF               	dw	65535	; assembler added errata NOP
  7309  003DD2  0E00               	movlw	0
  7310  003DD4                     u2910:
  7311  003DD4  FFFF               	dw	65535	; assembler added errata NOP
  7312  003DD6  6E01               	movwf	?_isupper,c
  7313  003DD8  6A02               	clrf	?_isupper+1,c
  7314  003DDA  0012               	return		;funcret
  7315  003DDC  FFFF               	dw	65535	; errata NOP
  7316  003DDE                     __end_of_isupper:
  7317                           	opt callstack 0
  7318                           
  7319 ;; *************** function _isalpha *****************
  7320 ;; Defined at:
  7321 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  c               2    0[COMRAM] int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  2    0[COMRAM] int 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7335 ;;      Params:         2       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0
  7337 ;;      Temps:          4       0       0       0       0       0       0
  7338 ;;      Totals:         6       0       0       0       0       0       0
  7339 ;;Total ram usage:        6 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    2
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_xtoa
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text26
  7350  003CF6                     __ptext26:
  7351                           	opt callstack 0
  7352  003CF6                     _isalpha:
  7353                           	opt callstack 0
  7354  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  7355                           
  7356                           ;incstack = 0
  7357  003CF8  0E9F               	movlw	159
  7358  003CFA  6E03               	movwf	??_isalpha& (0+255),c
  7359  003CFC  0EFF               	movlw	255
  7360  003CFE  6E04               	movwf	(??_isalpha+1)& (0+255),c
  7361  003D00  0E20               	movlw	32
  7362  003D02  1001               	iorwf	isalpha@c,w,c
  7363  003D04  6E05               	movwf	(??_isalpha+2)& (0+255),c
  7364  003D06  0E00               	movlw	0
  7365  003D08  1002               	iorwf	isalpha@c+1,w,c
  7366  003D0A  6E06               	movwf	(??_isalpha+3)& (0+255),c
  7367  003D0C  5003               	movf	??_isalpha,w,c
  7368  003D0E  2605               	addwf	??_isalpha+2,f,c
  7369  003D10  5004               	movf	??_isalpha+1,w,c
  7370  003D12  2206               	addwfc	??_isalpha+3,f,c
  7371  003D14  5006               	movf	??_isalpha+3,w,c
  7372  003D16  E106               	bnz	u2920
  7373  003D18  0E1A               	movlw	26
  7374  003D1A  5C05               	subwf	??_isalpha+2,w,c
  7375  003D1C  B0D8               	btfsc	status,0,c
  7376  003D1E  D002               	goto	u2920
  7377  003D20  0E01               	movlw	1
  7378  003D22  D002               	goto	u2930
  7379  003D24                     u2920:
  7380  003D24  FFFF               	dw	65535	; assembler added errata NOP
  7381  003D26  0E00               	movlw	0
  7382  003D28                     u2930:
  7383  003D28  FFFF               	dw	65535	; assembler added errata NOP
  7384  003D2A  6E01               	movwf	?_isalpha,c
  7385  003D2C  6A02               	clrf	?_isalpha+1,c
  7386  003D2E  0012               	return		;funcret
  7387  003D30  FFFF               	dw	65535	; errata NOP
  7388  003D32                     __end_of_isalpha:
  7389                           	opt callstack 0
  7390                           
  7391 ;; *************** function _utoa *****************
  7392 ;; Defined at:
  7393 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7396 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7397 ;;  d               8   29[COMRAM] unsigned long long 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  n               8   49[COMRAM] unsigned long long 
  7400 ;;  i               2   57[COMRAM] int 
  7401 ;;  w               2   47[COMRAM] int 
  7402 ;;  p               2   45[COMRAM] int 
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  2   27[COMRAM] int 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7412 ;;      Params:        10       0       0       0       0       0       0
  7413 ;;      Locals:        14       0       0       0       0       0       0
  7414 ;;      Temps:          8       0       0       0       0       0       0
  7415 ;;      Totals:        32       0       0       0       0       0       0
  7416 ;;Total ram usage:       32 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:    6
  7419 ;; This function calls:
  7420 ;;		___lodiv
  7421 ;;		___lomod
  7422 ;;		_pad
  7423 ;; This function is called by:
  7424 ;;		_vfpfcnvrt
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text27
  7429  0027D0                     __ptext27:
  7430                           	opt callstack 0
  7431  0027D0                     _utoa:
  7432                           	opt callstack 0
  7433  0027D0  FFFF               	dw	65535	; assembler added errata NOP
  7434                           
  7435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  7436                           
  7437                           ;incstack = 0
  7438  0027D2  0100               	movlb	0	; () banked
  7439  0027D4  AFCF               	btfss	(_prec+1)& (0+255),7,b
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  7443  0027D6  93D0               	bcf	_flags& (0+255),1,b
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  7447  0027D8  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  7448  0027DA  D005               	goto	u3570
  7449  0027DC  51CF               	movf	(_prec+1)& (0+255),w,b
  7450  0027DE  E109               	bnz	l478
  7451  0027E0  05CE               	decf	_prec& (0+255),w,b
  7452  0027E2  B0D8               	btfsc	status,0,c
  7453  0027E4  D006               	goto	l478
  7454  0027E6                     u3570:
  7455  0027E6  FFFF               	dw	65535	; assembler added errata NOP
  7456                           
  7457                           ; BSR set to: 0
  7458  0027E8  0E00               	movlw	0
  7459  0027EA  6E2F               	movwf	utoa@p+1,c
  7460  0027EC  0E01               	movlw	1
  7461  0027EE  6E2E               	movwf	utoa@p,c
  7462  0027F0  D005               	goto	l480
  7463  0027F2                     l478:
  7464  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  7465                           
  7466                           ; BSR set to: 0
  7467  0027F4  C0CE  F02E         	movff	_prec,utoa@p
  7468  0027F8  C0CF  F02F         	movff	_prec+1,utoa@p+1
  7469  0027FC                     l480:
  7470  0027FC  FFFF               	dw	65535	; assembler added errata NOP
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  7474  0027FE  C0CC  F030         	movff	_width,utoa@w
  7475  002802  C0CD  F031         	movff	_width+1,utoa@w+1
  7476                           
  7477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  7478  002806  C01E  F032         	movff	utoa@d,utoa@n
  7479  00280A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7480  00280E  C020  F034         	movff	utoa@d+2,utoa@n+2
  7481  002812  C021  F035         	movff	utoa@d+3,utoa@n+3
  7482  002816  C022  F036         	movff	utoa@d+4,utoa@n+4
  7483  00281A  C023  F037         	movff	utoa@d+5,utoa@n+5
  7484  00281E  C024  F038         	movff	utoa@d+6,utoa@n+6
  7485  002822  C025  F039         	movff	utoa@d+7,utoa@n+7
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  7489  002826  0E00               	movlw	0
  7490  002828  6E3B               	movwf	utoa@i+1,c
  7491  00282A  0E1F               	movlw	31
  7492  00282C  6E3A               	movwf	utoa@i,c
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  7496  00282E  0E00               	movlw	0
  7497  002830  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7498                           
  7499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7500  002832  D077               	goto	l3874
  7501  002834                     l3864:
  7502  002834  FFFF               	dw	65535	; assembler added errata NOP
  7503                           
  7504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  7505  002836  063A               	decf	utoa@i,f,c
  7506  002838  A0D8               	btfss	status,0,c
  7507  00283A  063B               	decf	utoa@i+1,f,c
  7508                           
  7509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  7510  00283C  0ED5               	movlw	low _dbuf
  7511  00283E  243A               	addwf	utoa@i,w,c
  7512  002840  6ED9               	movwf	fsr2l,c
  7513  002842  0E00               	movlw	high _dbuf
  7514  002844  203B               	addwfc	utoa@i+1,w,c
  7515  002846  6EDA               	movwf	fsr2h,c
  7516  002848  C032  F001         	movff	utoa@n,___lomod@dividend
  7517  00284C  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7518  002850  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7519  002854  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7520  002858  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7521  00285C  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7522  002860  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7523  002864  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7524  002868  0E0A               	movlw	10
  7525  00286A  6E09               	movwf	___lomod@divisor,c
  7526  00286C  0E00               	movlw	0
  7527  00286E  6E0A               	movwf	___lomod@divisor+1,c
  7528  002870  0E00               	movlw	0
  7529  002872  6E0B               	movwf	___lomod@divisor+2,c
  7530  002874  0E00               	movlw	0
  7531  002876  6E0C               	movwf	___lomod@divisor+3,c
  7532  002878  0E00               	movlw	0
  7533  00287A  6E0D               	movwf	___lomod@divisor+4,c
  7534  00287C  0E00               	movlw	0
  7535  00287E  6E0E               	movwf	___lomod@divisor+5,c
  7536  002880  0E00               	movlw	0
  7537  002882  6E0F               	movwf	___lomod@divisor+6,c
  7538  002884  0E00               	movlw	0
  7539  002886  6E10               	movwf	___lomod@divisor+7,c
  7540  002888  EC1C  F01B         	call	___lomod	;wreg free
  7541  00288C  C001  F026         	movff	?___lomod,??_utoa
  7542  002890  C002  F027         	movff	?___lomod+1,??_utoa+1
  7543  002894  C003  F028         	movff	?___lomod+2,??_utoa+2
  7544  002898  C004  F029         	movff	?___lomod+3,??_utoa+3
  7545  00289C  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7546  0028A0  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7547  0028A4  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7548  0028A8  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7549  0028AC  5026               	movf	??_utoa,w,c
  7550  0028AE  0F30               	addlw	48
  7551  0028B0  6EDF               	movwf	indf2,c
  7552                           
  7553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  7554  0028B2  062E               	decf	utoa@p,f,c
  7555  0028B4  A0D8               	btfss	status,0,c
  7556  0028B6  062F               	decf	utoa@p+1,f,c
  7557                           
  7558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  7559  0028B8  0630               	decf	utoa@w,f,c
  7560  0028BA  A0D8               	btfss	status,0,c
  7561  0028BC  0631               	decf	utoa@w+1,f,c
  7562                           
  7563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  7564  0028BE  C032  F001         	movff	utoa@n,___lodiv@dividend
  7565  0028C2  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7566  0028C6  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7567  0028CA  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7568  0028CE  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7569  0028D2  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7570  0028D6  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7571  0028DA  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7572  0028DE  0E0A               	movlw	10
  7573  0028E0  6E09               	movwf	___lodiv@divisor,c
  7574  0028E2  0E00               	movlw	0
  7575  0028E4  6E0A               	movwf	___lodiv@divisor+1,c
  7576  0028E6  0E00               	movlw	0
  7577  0028E8  6E0B               	movwf	___lodiv@divisor+2,c
  7578  0028EA  0E00               	movlw	0
  7579  0028EC  6E0C               	movwf	___lodiv@divisor+3,c
  7580  0028EE  0E00               	movlw	0
  7581  0028F0  6E0D               	movwf	___lodiv@divisor+4,c
  7582  0028F2  0E00               	movlw	0
  7583  0028F4  6E0E               	movwf	___lodiv@divisor+5,c
  7584  0028F6  0E00               	movlw	0
  7585  0028F8  6E0F               	movwf	___lodiv@divisor+6,c
  7586  0028FA  0E00               	movlw	0
  7587  0028FC  6E10               	movwf	___lodiv@divisor+7,c
  7588  0028FE  EC7E  F019         	call	___lodiv	;wreg free
  7589  002902  C001  F032         	movff	?___lodiv,utoa@n
  7590  002906  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7591  00290A  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7592  00290E  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7593  002912  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7594  002916  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7595  00291A  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7596  00291E  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7597  002922                     l3874:
  7598  002922  FFFF               	dw	65535	; assembler added errata NOP
  7599                           
  7600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7601  002924  503A               	movf	utoa@i,w,c
  7602  002926  103B               	iorwf	utoa@i+1,w,c
  7603  002928  B4D8               	btfsc	status,2,c
  7604  00292A  D01C               	goto	u3620
  7605  00292C  5032               	movf	utoa@n,w,c
  7606  00292E  1033               	iorwf	utoa@n+1,w,c
  7607  002930  1034               	iorwf	utoa@n+2,w,c
  7608  002932  1035               	iorwf	utoa@n+3,w,c
  7609  002934  1036               	iorwf	utoa@n+4,w,c
  7610  002936  1037               	iorwf	utoa@n+5,w,c
  7611  002938  1038               	iorwf	utoa@n+6,w,c
  7612  00293A  1039               	iorwf	utoa@n+7,w,c
  7613  00293C  A4D8               	btfss	status,2,c
  7614  00293E  D77A               	goto	l3864
  7615  002940  BE2F               	btfsc	utoa@p+1,7,c
  7616  002942  D005               	goto	u3600
  7617  002944  502F               	movf	utoa@p+1,w,c
  7618  002946  E102               	bnz	u3601
  7619  002948  042E               	decf	utoa@p,w,c
  7620  00294A  B0D8               	btfsc	status,0,c
  7621  00294C                     u3601:
  7622  00294C  D773               	goto	l3864
  7623  00294E                     u3600:
  7624  00294E  FFFF               	dw	65535	; assembler added errata NOP
  7625  002950  BE31               	btfsc	utoa@w+1,7,c
  7626  002952  D008               	goto	u3620
  7627  002954  5031               	movf	utoa@w+1,w,c
  7628  002956  E103               	bnz	u3610
  7629  002958  0430               	decf	utoa@w,w,c
  7630  00295A  A0D8               	btfss	status,0,c
  7631  00295C  D003               	goto	u3620
  7632  00295E                     u3610:
  7633  00295E  0100               	movlb	0	; () banked
  7634  002960  B3D0               	btfsc	_flags& (0+255),1,b
  7635  002962  D768               	goto	l3864
  7636  002964                     u3620:
  7637  002964  FFFF               	dw	65535	; assembler added errata NOP
  7638                           
  7639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  7640  002966  C01C  F011         	movff	utoa@fp,pad@fp
  7641  00296A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7642  00296E  0ED5               	movlw	low _dbuf
  7643  002970  243A               	addwf	utoa@i,w,c
  7644  002972  6E13               	movwf	pad@buf,c
  7645  002974  0E00               	movlw	high _dbuf
  7646  002976  203B               	addwfc	utoa@i+1,w,c
  7647  002978  6E14               	movwf	pad@buf+1,c
  7648  00297A  C030  F015         	movff	utoa@w,pad@p
  7649  00297E  C031  F016         	movff	utoa@w+1,pad@p+1
  7650  002982  ECD0  F01B         	call	_pad	;wreg free
  7651  002986  C011  F01C         	movff	?_pad,?_utoa
  7652  00298A  C012  F01D         	movff	?_pad+1,?_utoa+1
  7653  00298E  0012               	return		;funcret
  7654  002990  FFFF               	dw	65535	; errata NOP
  7655  002992                     __end_of_utoa:
  7656                           	opt callstack 0
  7657                           
  7658 ;; *************** function ___lomod *****************
  7659 ;; Defined at:
  7660 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  dividend        8    0[COMRAM] unsigned long long 
  7663 ;;  divisor         8    8[COMRAM] unsigned long long 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  counter         1   16[COMRAM] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  8    0[COMRAM] unsigned long long 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7675 ;;      Params:        16       0       0       0       0       0       0
  7676 ;;      Locals:         1       0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0
  7678 ;;      Totals:        17       0       0       0       0       0       0
  7679 ;;Total ram usage:       17 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    2
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_utoa
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text28
  7690  003638                     __ptext28:
  7691                           	opt callstack 0
  7692  003638                     ___lomod:
  7693                           	opt callstack 0
  7694  003638  FFFF               	dw	65535	; assembler added errata NOP
  7695                           
  7696                           ;incstack = 0
  7697  00363A  5009               	movf	___lomod@divisor,w,c
  7698  00363C  100A               	iorwf	___lomod@divisor+1,w,c
  7699  00363E  100B               	iorwf	___lomod@divisor+2,w,c
  7700  003640  100C               	iorwf	___lomod@divisor+3,w,c
  7701  003642  100D               	iorwf	___lomod@divisor+4,w,c
  7702  003644  100E               	iorwf	___lomod@divisor+5,w,c
  7703  003646  100F               	iorwf	___lomod@divisor+6,w,c
  7704  003648  1010               	iorwf	___lomod@divisor+7,w,c
  7705  00364A  B4D8               	btfsc	status,2,c
  7706  00364C  D040               	goto	l1060
  7707  00364E  0E01               	movlw	1
  7708  003650  6E11               	movwf	___lomod@counter,c
  7709  003652  D00B               	goto	l3664
  7710  003654                     l3662:
  7711  003654  FFFF               	dw	65535	; assembler added errata NOP
  7712  003656  90D8               	bcf	status,0,c
  7713  003658  3609               	rlcf	___lomod@divisor,f,c
  7714  00365A  360A               	rlcf	___lomod@divisor+1,f,c
  7715  00365C  360B               	rlcf	___lomod@divisor+2,f,c
  7716  00365E  360C               	rlcf	___lomod@divisor+3,f,c
  7717  003660  360D               	rlcf	___lomod@divisor+4,f,c
  7718  003662  360E               	rlcf	___lomod@divisor+5,f,c
  7719  003664  360F               	rlcf	___lomod@divisor+6,f,c
  7720  003666  3610               	rlcf	___lomod@divisor+7,f,c
  7721  003668  2A11               	incf	___lomod@counter,f,c
  7722  00366A                     l3664:
  7723  00366A  FFFF               	dw	65535	; assembler added errata NOP
  7724  00366C  AE10               	btfss	___lomod@divisor+7,7,c
  7725  00366E  D7F2               	goto	l3662
  7726  003670                     u3170:
  7727  003670  FFFF               	dw	65535	; assembler added errata NOP
  7728  003672  5009               	movf	___lomod@divisor,w,c
  7729  003674  5C01               	subwf	___lomod@dividend,w,c
  7730  003676  500A               	movf	___lomod@divisor+1,w,c
  7731  003678  5802               	subwfb	___lomod@dividend+1,w,c
  7732  00367A  500B               	movf	___lomod@divisor+2,w,c
  7733  00367C  5803               	subwfb	___lomod@dividend+2,w,c
  7734  00367E  500C               	movf	___lomod@divisor+3,w,c
  7735  003680  5804               	subwfb	___lomod@dividend+3,w,c
  7736  003682  500D               	movf	___lomod@divisor+4,w,c
  7737  003684  5805               	subwfb	___lomod@dividend+4,w,c
  7738  003686  500E               	movf	___lomod@divisor+5,w,c
  7739  003688  5806               	subwfb	___lomod@dividend+5,w,c
  7740  00368A  500F               	movf	___lomod@divisor+6,w,c
  7741  00368C  5807               	subwfb	___lomod@dividend+6,w,c
  7742  00368E  5010               	movf	___lomod@divisor+7,w,c
  7743  003690  5808               	subwfb	___lomod@dividend+7,w,c
  7744  003692  A0D8               	btfss	status,0,c
  7745  003694  D010               	goto	l3670
  7746  003696  5009               	movf	___lomod@divisor,w,c
  7747  003698  5E01               	subwf	___lomod@dividend,f,c
  7748  00369A  500A               	movf	___lomod@divisor+1,w,c
  7749  00369C  5A02               	subwfb	___lomod@dividend+1,f,c
  7750  00369E  500B               	movf	___lomod@divisor+2,w,c
  7751  0036A0  5A03               	subwfb	___lomod@dividend+2,f,c
  7752  0036A2  500C               	movf	___lomod@divisor+3,w,c
  7753  0036A4  5A04               	subwfb	___lomod@dividend+3,f,c
  7754  0036A6  500D               	movf	___lomod@divisor+4,w,c
  7755  0036A8  5A05               	subwfb	___lomod@dividend+4,f,c
  7756  0036AA  500E               	movf	___lomod@divisor+5,w,c
  7757  0036AC  5A06               	subwfb	___lomod@dividend+5,f,c
  7758  0036AE  500F               	movf	___lomod@divisor+6,w,c
  7759  0036B0  5A07               	subwfb	___lomod@dividend+6,f,c
  7760  0036B2  5010               	movf	___lomod@divisor+7,w,c
  7761  0036B4  5A08               	subwfb	___lomod@dividend+7,f,c
  7762  0036B6                     l3670:
  7763  0036B6  FFFF               	dw	65535	; assembler added errata NOP
  7764  0036B8  90D8               	bcf	status,0,c
  7765  0036BA  3210               	rrcf	___lomod@divisor+7,f,c
  7766  0036BC  320F               	rrcf	___lomod@divisor+6,f,c
  7767  0036BE  320E               	rrcf	___lomod@divisor+5,f,c
  7768  0036C0  320D               	rrcf	___lomod@divisor+4,f,c
  7769  0036C2  320C               	rrcf	___lomod@divisor+3,f,c
  7770  0036C4  320B               	rrcf	___lomod@divisor+2,f,c
  7771  0036C6  320A               	rrcf	___lomod@divisor+1,f,c
  7772  0036C8  3209               	rrcf	___lomod@divisor,f,c
  7773  0036CA  2E11               	decfsz	___lomod@counter,f,c
  7774  0036CC  D7D1               	goto	u3170
  7775  0036CE                     l1060:
  7776  0036CE  FFFF               	dw	65535	; assembler added errata NOP
  7777  0036D0  C001  F001         	movff	___lomod@dividend,?___lomod
  7778  0036D4  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7779  0036D8  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7780  0036DC  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7781  0036E0  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7782  0036E4  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7783  0036E8  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7784  0036EC  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7785  0036F0  0012               	return		;funcret
  7786  0036F2  FFFF               	dw	65535	; errata NOP
  7787  0036F4                     __end_of___lomod:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function ___lodiv *****************
  7791 ;; Defined at:
  7792 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  dividend        8    0[COMRAM] unsigned long long 
  7795 ;;  divisor         8    8[COMRAM] unsigned long long 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  quotient        8   16[COMRAM] unsigned long long 
  7798 ;;  counter         1   24[COMRAM] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  8    0[COMRAM] unsigned long long 
  7801 ;; Registers used:
  7802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7808 ;;      Params:        16       0       0       0       0       0       0
  7809 ;;      Locals:         9       0       0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0
  7811 ;;      Totals:        25       0       0       0       0       0       0
  7812 ;;Total ram usage:       25 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    2
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_utoa
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text29
  7823  0032FC                     __ptext29:
  7824                           	opt callstack 0
  7825  0032FC                     ___lodiv:
  7826                           	opt callstack 0
  7827  0032FC  FFFF               	dw	65535	; assembler added errata NOP
  7828                           
  7829                           ;incstack = 0
  7830  0032FE  EE20  F011         	lfsr	2,___lodiv@quotient
  7831  003302  0E07               	movlw	7
  7832  003304                     u3121:
  7833  003304  6ADE               	clrf	postinc2,c
  7834  003306  06E8               	decf	wreg,f,c
  7835  003308  E2FD               	bc	u3121
  7836  00330A  5009               	movf	___lodiv@divisor,w,c
  7837  00330C  100A               	iorwf	___lodiv@divisor+1,w,c
  7838  00330E  100B               	iorwf	___lodiv@divisor+2,w,c
  7839  003310  100C               	iorwf	___lodiv@divisor+3,w,c
  7840  003312  100D               	iorwf	___lodiv@divisor+4,w,c
  7841  003314  100E               	iorwf	___lodiv@divisor+5,w,c
  7842  003316  100F               	iorwf	___lodiv@divisor+6,w,c
  7843  003318  1010               	iorwf	___lodiv@divisor+7,w,c
  7844  00331A  B4D8               	btfsc	status,2,c
  7845  00331C  D04A               	goto	l1050
  7846  00331E  0E01               	movlw	1
  7847  003320  6E19               	movwf	___lodiv@counter,c
  7848  003322  D00B               	goto	l3644
  7849  003324                     l3642:
  7850  003324  FFFF               	dw	65535	; assembler added errata NOP
  7851  003326  90D8               	bcf	status,0,c
  7852  003328  3609               	rlcf	___lodiv@divisor,f,c
  7853  00332A  360A               	rlcf	___lodiv@divisor+1,f,c
  7854  00332C  360B               	rlcf	___lodiv@divisor+2,f,c
  7855  00332E  360C               	rlcf	___lodiv@divisor+3,f,c
  7856  003330  360D               	rlcf	___lodiv@divisor+4,f,c
  7857  003332  360E               	rlcf	___lodiv@divisor+5,f,c
  7858  003334  360F               	rlcf	___lodiv@divisor+6,f,c
  7859  003336  3610               	rlcf	___lodiv@divisor+7,f,c
  7860  003338  2A19               	incf	___lodiv@counter,f,c
  7861  00333A                     l3644:
  7862  00333A  FFFF               	dw	65535	; assembler added errata NOP
  7863  00333C  AE10               	btfss	___lodiv@divisor+7,7,c
  7864  00333E  D7F2               	goto	l3642
  7865  003340                     u3140:
  7866  003340  FFFF               	dw	65535	; assembler added errata NOP
  7867  003342  90D8               	bcf	status,0,c
  7868  003344  3611               	rlcf	___lodiv@quotient,f,c
  7869  003346  3612               	rlcf	___lodiv@quotient+1,f,c
  7870  003348  3613               	rlcf	___lodiv@quotient+2,f,c
  7871  00334A  3614               	rlcf	___lodiv@quotient+3,f,c
  7872  00334C  3615               	rlcf	___lodiv@quotient+4,f,c
  7873  00334E  3616               	rlcf	___lodiv@quotient+5,f,c
  7874  003350  3617               	rlcf	___lodiv@quotient+6,f,c
  7875  003352  3618               	rlcf	___lodiv@quotient+7,f,c
  7876  003354  5009               	movf	___lodiv@divisor,w,c
  7877  003356  5C01               	subwf	___lodiv@dividend,w,c
  7878  003358  500A               	movf	___lodiv@divisor+1,w,c
  7879  00335A  5802               	subwfb	___lodiv@dividend+1,w,c
  7880  00335C  500B               	movf	___lodiv@divisor+2,w,c
  7881  00335E  5803               	subwfb	___lodiv@dividend+2,w,c
  7882  003360  500C               	movf	___lodiv@divisor+3,w,c
  7883  003362  5804               	subwfb	___lodiv@dividend+3,w,c
  7884  003364  500D               	movf	___lodiv@divisor+4,w,c
  7885  003366  5805               	subwfb	___lodiv@dividend+4,w,c
  7886  003368  500E               	movf	___lodiv@divisor+5,w,c
  7887  00336A  5806               	subwfb	___lodiv@dividend+5,w,c
  7888  00336C  500F               	movf	___lodiv@divisor+6,w,c
  7889  00336E  5807               	subwfb	___lodiv@dividend+6,w,c
  7890  003370  5010               	movf	___lodiv@divisor+7,w,c
  7891  003372  5808               	subwfb	___lodiv@dividend+7,w,c
  7892  003374  A0D8               	btfss	status,0,c
  7893  003376  D011               	goto	l3654
  7894  003378  5009               	movf	___lodiv@divisor,w,c
  7895  00337A  5E01               	subwf	___lodiv@dividend,f,c
  7896  00337C  500A               	movf	___lodiv@divisor+1,w,c
  7897  00337E  5A02               	subwfb	___lodiv@dividend+1,f,c
  7898  003380  500B               	movf	___lodiv@divisor+2,w,c
  7899  003382  5A03               	subwfb	___lodiv@dividend+2,f,c
  7900  003384  500C               	movf	___lodiv@divisor+3,w,c
  7901  003386  5A04               	subwfb	___lodiv@dividend+3,f,c
  7902  003388  500D               	movf	___lodiv@divisor+4,w,c
  7903  00338A  5A05               	subwfb	___lodiv@dividend+4,f,c
  7904  00338C  500E               	movf	___lodiv@divisor+5,w,c
  7905  00338E  5A06               	subwfb	___lodiv@dividend+5,f,c
  7906  003390  500F               	movf	___lodiv@divisor+6,w,c
  7907  003392  5A07               	subwfb	___lodiv@dividend+6,f,c
  7908  003394  5010               	movf	___lodiv@divisor+7,w,c
  7909  003396  5A08               	subwfb	___lodiv@dividend+7,f,c
  7910  003398  8011               	bsf	___lodiv@quotient,0,c
  7911  00339A                     l3654:
  7912  00339A  FFFF               	dw	65535	; assembler added errata NOP
  7913  00339C  90D8               	bcf	status,0,c
  7914  00339E  3210               	rrcf	___lodiv@divisor+7,f,c
  7915  0033A0  320F               	rrcf	___lodiv@divisor+6,f,c
  7916  0033A2  320E               	rrcf	___lodiv@divisor+5,f,c
  7917  0033A4  320D               	rrcf	___lodiv@divisor+4,f,c
  7918  0033A6  320C               	rrcf	___lodiv@divisor+3,f,c
  7919  0033A8  320B               	rrcf	___lodiv@divisor+2,f,c
  7920  0033AA  320A               	rrcf	___lodiv@divisor+1,f,c
  7921  0033AC  3209               	rrcf	___lodiv@divisor,f,c
  7922  0033AE  2E19               	decfsz	___lodiv@counter,f,c
  7923  0033B0  D7C7               	goto	u3140
  7924  0033B2                     l1050:
  7925  0033B2  FFFF               	dw	65535	; assembler added errata NOP
  7926  0033B4  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7927  0033B8  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7928  0033BC  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7929  0033C0  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7930  0033C4  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7931  0033C8  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7932  0033CC  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7933  0033D0  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7934  0033D4  0012               	return		;funcret
  7935  0033D6  FFFF               	dw	65535	; errata NOP
  7936  0033D8                     __end_of___lodiv:
  7937                           	opt callstack 0
  7938                           
  7939 ;; *************** function _strncmp *****************
  7940 ;; Defined at:
  7941 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7944 ;;		 -> STR_2(3), STR_1(4), 
  7945 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7946 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  7947 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  7948 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  7949 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  7950 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  7951 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  7952 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  7953 ;;  n               2    4[COMRAM] unsigned int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7956 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  7957 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  7958 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  7959 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  7960 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  7961 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  7962 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  7963 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7964 ;;		 -> STR_2(3), STR_1(4), 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  2    0[COMRAM] int 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7974 ;;      Params:         6       0       0       0       0       0       0
  7975 ;;      Locals:         4       0       0       0       0       0       0
  7976 ;;      Temps:          1       0       0       0       0       0       0
  7977 ;;      Totals:        11       0       0       0       0       0       0
  7978 ;;Total ram usage:       11 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    2
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_vfpfcnvrt
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text30
  7989  003576                     __ptext30:
  7990                           	opt callstack 0
  7991  003576                     _strncmp:
  7992                           	opt callstack 0
  7993  003576  FFFF               	dw	65535	; assembler added errata NOP
  7994                           
  7995                           ;incstack = 0
  7996  003578  C001  F008         	movff	strncmp@_l,strncmp@l
  7997  00357C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7998  003580  C003  F00A         	movff	strncmp@_r,strncmp@r
  7999  003584  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8000  003588  0605               	decf	strncmp@n,f,c
  8001  00358A  A0D8               	btfss	status,0,c
  8002  00358C  0606               	decf	strncmp@n+1,f,c
  8003  00358E  2805               	incf	strncmp@n,w,c
  8004  003590  E110               	bnz	l4004
  8005  003592  2806               	incf	strncmp@n+1,w,c
  8006  003594  A4D8               	btfss	status,2,c
  8007  003596  D00D               	goto	l4004
  8008  003598  0E00               	movlw	0
  8009  00359A  6E02               	movwf	?_strncmp+1,c
  8010  00359C  0E00               	movlw	0
  8011  00359E  6E01               	movwf	?_strncmp,c
  8012  0035A0  D048               	goto	l1418
  8013  0035A2                     l4002:
  8014  0035A2  FFFF               	dw	65535	; assembler added errata NOP
  8015  0035A4  4A08               	infsnz	strncmp@l,f,c
  8016  0035A6  2A09               	incf	strncmp@l+1,f,c
  8017  0035A8  4A0A               	infsnz	strncmp@r,f,c
  8018  0035AA  2A0B               	incf	strncmp@r+1,f,c
  8019  0035AC  0605               	decf	strncmp@n,f,c
  8020  0035AE  A0D8               	btfss	status,0,c
  8021  0035B0  0606               	decf	strncmp@n+1,f,c
  8022  0035B2                     l4004:
  8023  0035B2  FFFF               	dw	65535	; assembler added errata NOP
  8024  0035B4  C008  FFF6         	movff	strncmp@l,tblptrl
  8025  0035B8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8026  0035BC                     	if	0	;tblptru may be non-zero
  8027  0035BC                     	endif
  8028  0035BC                     	if	0	;tblptru may be non-zero
  8029  0035BC                     	endif
  8030  0035BC  0008               	tblrd		*
  8031  0035BE  FFFF               	dw	65535	; errata NOP
  8032  0035C0  50F5               	movf	tablat,w,c
  8033  0035C2  0900               	iorlw	0
  8034  0035C4  B4D8               	btfsc	status,2,c
  8035  0035C6  D020               	goto	u3910
  8036  0035C8  C00A  FFF6         	movff	strncmp@r,tblptrl
  8037  0035CC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8038  0035D0                     	if	0	;tblptru may be non-zero
  8039  0035D0                     	endif
  8040  0035D0                     	if	0	;tblptru may be non-zero
  8041  0035D0                     	endif
  8042  0035D0  0008               	tblrd		*
  8043  0035D2  FFFF               	dw	65535	; errata NOP
  8044  0035D4  50F5               	movf	tablat,w,c
  8045  0035D6  0900               	iorlw	0
  8046  0035D8  B4D8               	btfsc	status,2,c
  8047  0035DA  D016               	goto	u3910
  8048  0035DC  5005               	movf	strncmp@n,w,c
  8049  0035DE  1006               	iorwf	strncmp@n+1,w,c
  8050  0035E0  B4D8               	btfsc	status,2,c
  8051  0035E2  D012               	goto	u3910
  8052  0035E4  C008  FFF6         	movff	strncmp@l,tblptrl
  8053  0035E8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8054  0035EC                     	if	0	;tblptru may be non-zero
  8055  0035EC                     	endif
  8056  0035EC                     	if	0	;tblptru may be non-zero
  8057  0035EC                     	endif
  8058  0035EC  0008               	tblrd		*
  8059  0035EE  FFFF               	dw	65535	; errata NOP
  8060  0035F0  CFF5 F007          	movff	tablat,??_strncmp
  8061  0035F4  C00A  FFF6         	movff	strncmp@r,tblptrl
  8062  0035F8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8063  0035FC                     	if	0	;tblptru may be non-zero
  8064  0035FC                     	endif
  8065  0035FC                     	if	0	;tblptru may be non-zero
  8066  0035FC                     	endif
  8067  0035FC  0008               	tblrd		*
  8068  0035FE  FFFF               	dw	65535	; errata NOP
  8069  003600  50F5               	movf	tablat,w,c
  8070  003602  1807               	xorwf	??_strncmp,w,c
  8071  003604  B4D8               	btfsc	status,2,c
  8072  003606  D7CD               	goto	l4002
  8073  003608                     u3910:
  8074  003608  FFFF               	dw	65535	; assembler added errata NOP
  8075  00360A  C008  FFF6         	movff	strncmp@l,tblptrl
  8076  00360E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8077  003612                     	if	0	;tblptru may be non-zero
  8078  003612                     	endif
  8079  003612                     	if	0	;tblptru may be non-zero
  8080  003612                     	endif
  8081  003612  0008               	tblrd		*
  8082  003614  FFFF               	dw	65535	; errata NOP
  8083  003616  CFF5 F007          	movff	tablat,??_strncmp
  8084  00361A  C00A  FFF6         	movff	strncmp@r,tblptrl
  8085  00361E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8086  003622                     	if	0	;tblptru may be non-zero
  8087  003622                     	endif
  8088  003622                     	if	0	;tblptru may be non-zero
  8089  003622                     	endif
  8090  003622  0008               	tblrd		*
  8091  003624  FFFF               	dw	65535	; errata NOP
  8092  003626  50F5               	movf	tablat,w,c
  8093  003628  5C07               	subwf	??_strncmp,w,c
  8094  00362A  6E01               	movwf	?_strncmp,c
  8095  00362C  6A02               	clrf	?_strncmp+1,c
  8096  00362E  A0D8               	btfss	status,0,c
  8097  003630  0602               	decf	?_strncmp+1,f,c
  8098  003632                     l1418:
  8099  003632  FFFF               	dw	65535	; assembler added errata NOP
  8100  003634  0012               	return		;funcret
  8101  003636  FFFF               	dw	65535	; errata NOP
  8102  003638                     __end_of_strncmp:
  8103                           	opt callstack 0
  8104                           
  8105 ;; *************** function _stoa *****************
  8106 ;; Defined at:
  8107 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8110 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8111 ;;  s               2   11[COMRAM] PTR unsigned char 
  8112 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8115 ;;  l               2   29[COMRAM] int 
  8116 ;;  p               2   27[COMRAM] int 
  8117 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8118 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  8119 ;;  w               2   23[COMRAM] int 
  8120 ;;  i               2   21[COMRAM] int 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  2    9[COMRAM] int 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8130 ;;      Params:         4       0       0       0       0       0       0
  8131 ;;      Locals:        17       0       0       0       0       0       0
  8132 ;;      Temps:          1       0       0       0       0       0       0
  8133 ;;      Totals:        22       0       0       0       0       0       0
  8134 ;;Total ram usage:       22 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    4
  8137 ;; This function calls:
  8138 ;;		_fputc
  8139 ;;		_strlen
  8140 ;; This function is called by:
  8141 ;;		_vfpfcnvrt
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text31
  8146  002F4A                     __ptext31:
  8147                           	opt callstack 0
  8148  002F4A                     _stoa:
  8149                           	opt callstack 0
  8150  002F4A  FFFF               	dw	65535	; assembler added errata NOP
  8151                           
  8152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8153                           
  8154                           ;incstack = 0
  8155  002F4C  EE20  F0F5         	lfsr	2,stoa@F1152
  8156  002F50  EE10  F00F         	lfsr	1,stoa@nuls
  8157  002F54  0E06               	movlw	6
  8158  002F56                     u3471:
  8159  002F56  CFDB FFE3          	movff	plusw2,plusw1
  8160  002F5A  06E8               	decf	wreg,f,c
  8161  002F5C  E2FC               	bc	u3471
  8162                           
  8163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8164  002F5E  C00C  F01A         	movff	stoa@s,stoa@cp
  8165  002F62  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8166                           
  8167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8168  002F66  501A               	movf	stoa@cp,w,c
  8169  002F68  101B               	iorwf	stoa@cp+1,w,c
  8170  002F6A  A4D8               	btfss	status,2,c
  8171  002F6C  D004               	goto	l3818
  8172                           
  8173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8174  002F6E  0E0F               	movlw	low stoa@nuls
  8175  002F70  6E1A               	movwf	stoa@cp,c
  8176  002F72  0E00               	movlw	high stoa@nuls
  8177  002F74  6E1B               	movwf	stoa@cp+1,c
  8178  002F76                     l3818:
  8179  002F76  FFFF               	dw	65535	; assembler added errata NOP
  8180                           
  8181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8182  002F78  C01A  F001         	movff	stoa@cp,strlen@s
  8183  002F7C  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8184  002F80  EC0B  F01F         	call	_strlen	;wreg free
  8185  002F84  C001  F01E         	movff	?_strlen,stoa@l
  8186  002F88  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8187                           
  8188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8189  002F8C  C0CE  F01C         	movff	_prec,stoa@p
  8190  002F90  C0CF  F01D         	movff	_prec+1,stoa@p+1
  8191                           
  8192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8193  002F94  BE1D               	btfsc	stoa@p+1,7,c
  8194  002F96  D00E               	goto	l459
  8195  002F98  501E               	movf	stoa@l,w,c
  8196  002F9A  5C1C               	subwf	stoa@p,w,c
  8197  002F9C  501D               	movf	stoa@p+1,w,c
  8198  002F9E  0A80               	xorlw	128
  8199  002FA0  6E0E               	movwf	??_stoa& (0+255),c
  8200  002FA2  501F               	movf	stoa@l+1,w,c
  8201  002FA4  0A80               	xorlw	128
  8202  002FA6  580E               	subwfb	??_stoa& (0+255),w,c
  8203  002FA8  B0D8               	btfsc	status,0,c
  8204  002FAA  D004               	goto	l459
  8205  002FAC  C01C  F01E         	movff	stoa@p,stoa@l
  8206  002FB0  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8207  002FB4                     l459:
  8208  002FB4  FFFF               	dw	65535	; assembler added errata NOP
  8209                           
  8210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8211  002FB6  C01E  F01C         	movff	stoa@l,stoa@p
  8212  002FBA  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8213                           
  8214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8215  002FBE  C0CC  F018         	movff	_width,stoa@w
  8216  002FC2  C0CD  F019         	movff	_width+1,stoa@w+1
  8217                           
  8218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8219  002FC6  0100               	movlb	0	; () banked
  8220  002FC8  A1D0               	btfss	_flags& (0+255),0,b
  8221  002FCA  D00E               	goto	l3832
  8222  002FCC  D018               	goto	u3520
  8223  002FCE                     l3828:
  8224  002FCE  FFFF               	dw	65535	; assembler added errata NOP
  8225                           
  8226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8227  002FD0  0E00               	movlw	0
  8228  002FD2  6E02               	movwf	fputc@c+1,c
  8229  002FD4  0E20               	movlw	32
  8230  002FD6  6E01               	movwf	fputc@c,c
  8231  002FD8  C00A  F003         	movff	stoa@fp,fputc@fp
  8232  002FDC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8233  002FE0  EC7A  F01B         	call	_fputc	;wreg free
  8234                           
  8235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8236  002FE4  4A1E               	infsnz	stoa@l,f,c
  8237  002FE6  2A1F               	incf	stoa@l+1,f,c
  8238  002FE8                     l3832:
  8239  002FE8  FFFF               	dw	65535	; assembler added errata NOP
  8240                           
  8241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8242  002FEA  5018               	movf	stoa@w,w,c
  8243  002FEC  5C1E               	subwf	stoa@l,w,c
  8244  002FEE  501F               	movf	stoa@l+1,w,c
  8245  002FF0  0A80               	xorlw	128
  8246  002FF2  6E0E               	movwf	??_stoa& (0+255),c
  8247  002FF4  5019               	movf	stoa@w+1,w,c
  8248  002FF6  0A80               	xorlw	128
  8249  002FF8  580E               	subwfb	??_stoa& (0+255),w,c
  8250  002FFA  A0D8               	btfss	status,0,c
  8251  002FFC  D7E8               	goto	l3828
  8252  002FFE                     u3520:
  8253  002FFE  FFFF               	dw	65535	; assembler added errata NOP
  8254                           
  8255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8256  003000  0E00               	movlw	0
  8257  003002  6E17               	movwf	stoa@i+1,c
  8258  003004  0E00               	movlw	0
  8259  003006  6E16               	movwf	stoa@i,c
  8260                           
  8261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8262  003008  D014               	goto	l3842
  8263  00300A                     l3836:
  8264  00300A  FFFF               	dw	65535	; assembler added errata NOP
  8265                           
  8266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8267  00300C  C01A  FFD9         	movff	stoa@cp,fsr2l
  8268  003010  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8269  003014  50DF               	movf	indf2,w,c
  8270  003016  6E0E               	movwf	??_stoa& (0+255),c
  8271  003018  500E               	movf	??_stoa,w,c
  8272  00301A  6E01               	movwf	fputc@c,c
  8273  00301C  6A02               	clrf	fputc@c+1,c
  8274  00301E  C00A  F003         	movff	stoa@fp,fputc@fp
  8275  003022  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8276  003026  EC7A  F01B         	call	_fputc	;wreg free
  8277                           
  8278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8279  00302A  4A1A               	infsnz	stoa@cp,f,c
  8280  00302C  2A1B               	incf	stoa@cp+1,f,c
  8281                           
  8282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8283  00302E  4A16               	infsnz	stoa@i,f,c
  8284  003030  2A17               	incf	stoa@i+1,f,c
  8285  003032                     l3842:
  8286  003032  FFFF               	dw	65535	; assembler added errata NOP
  8287                           
  8288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8289  003034  501C               	movf	stoa@p,w,c
  8290  003036  5C16               	subwf	stoa@i,w,c
  8291  003038  5017               	movf	stoa@i+1,w,c
  8292  00303A  0A80               	xorlw	128
  8293  00303C  6E0E               	movwf	??_stoa& (0+255),c
  8294  00303E  501D               	movf	stoa@p+1,w,c
  8295  003040  0A80               	xorlw	128
  8296  003042  580E               	subwfb	??_stoa& (0+255),w,c
  8297  003044  A0D8               	btfss	status,0,c
  8298  003046  D7E1               	goto	l3836
  8299                           
  8300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8301  003048  0100               	movlb	0	; () banked
  8302  00304A  B1D0               	btfsc	_flags& (0+255),0,b
  8303  00304C  D00E               	goto	l3850
  8304  00304E  D018               	goto	u3550
  8305  003050                     l3846:
  8306  003050  FFFF               	dw	65535	; assembler added errata NOP
  8307                           
  8308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8309  003052  0E00               	movlw	0
  8310  003054  6E02               	movwf	fputc@c+1,c
  8311  003056  0E20               	movlw	32
  8312  003058  6E01               	movwf	fputc@c,c
  8313  00305A  C00A  F003         	movff	stoa@fp,fputc@fp
  8314  00305E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8315  003062  EC7A  F01B         	call	_fputc	;wreg free
  8316                           
  8317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8318  003066  4A1E               	infsnz	stoa@l,f,c
  8319  003068  2A1F               	incf	stoa@l+1,f,c
  8320  00306A                     l3850:
  8321  00306A  FFFF               	dw	65535	; assembler added errata NOP
  8322                           
  8323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8324  00306C  5018               	movf	stoa@w,w,c
  8325  00306E  5C1E               	subwf	stoa@l,w,c
  8326  003070  501F               	movf	stoa@l+1,w,c
  8327  003072  0A80               	xorlw	128
  8328  003074  6E0E               	movwf	??_stoa& (0+255),c
  8329  003076  5019               	movf	stoa@w+1,w,c
  8330  003078  0A80               	xorlw	128
  8331  00307A  580E               	subwfb	??_stoa& (0+255),w,c
  8332  00307C  A0D8               	btfss	status,0,c
  8333  00307E  D7E8               	goto	l3846
  8334  003080                     u3550:
  8335  003080  FFFF               	dw	65535	; assembler added errata NOP
  8336                           
  8337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8338                           
  8339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  8340  003082  C01E  F00A         	movff	stoa@l,?_stoa
  8341  003086  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8342  00308A  0012               	return		;funcret
  8343  00308C  FFFF               	dw	65535	; errata NOP
  8344  00308E                     __end_of_stoa:
  8345                           	opt callstack 0
  8346                           
  8347 ;; *************** function _otoa *****************
  8348 ;; Defined at:
  8349 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8352 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8353 ;;  d               8   29[COMRAM] unsigned long long 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  n               8   51[COMRAM] unsigned long long 
  8356 ;;  i               2   59[COMRAM] int 
  8357 ;;  w               2   49[COMRAM] int 
  8358 ;;  t               2   47[COMRAM] int 
  8359 ;;  p               2   45[COMRAM] int 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  2   27[COMRAM] int 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8369 ;;      Params:        10       0       0       0       0       0       0
  8370 ;;      Locals:        16       0       0       0       0       0       0
  8371 ;;      Temps:          8       0       0       0       0       0       0
  8372 ;;      Totals:        34       0       0       0       0       0       0
  8373 ;;Total ram usage:       34 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    6
  8376 ;; This function calls:
  8377 ;;		_pad
  8378 ;; This function is called by:
  8379 ;;		_vfpfcnvrt
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text32
  8384  002992                     __ptext32:
  8385                           	opt callstack 0
  8386  002992                     _otoa:
  8387                           	opt callstack 0
  8388  002992  FFFF               	dw	65535	; assembler added errata NOP
  8389                           
  8390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  8391                           
  8392                           ;incstack = 0
  8393  002994  0100               	movlb	0	; () banked
  8394  002996  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  8398  002998  93D0               	bcf	_flags& (0+255),1,b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  8402  00299A  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8403  00299C  D005               	goto	u3380
  8404  00299E  51CF               	movf	(_prec+1)& (0+255),w,b
  8405  0029A0  E109               	bnz	l439
  8406  0029A2  05CE               	decf	_prec& (0+255),w,b
  8407  0029A4  B0D8               	btfsc	status,0,c
  8408  0029A6  D006               	goto	l439
  8409  0029A8                     u3380:
  8410  0029A8  FFFF               	dw	65535	; assembler added errata NOP
  8411                           
  8412                           ; BSR set to: 0
  8413  0029AA  0E00               	movlw	0
  8414  0029AC  6E2F               	movwf	otoa@p+1,c
  8415  0029AE  0E01               	movlw	1
  8416  0029B0  6E2E               	movwf	otoa@p,c
  8417  0029B2  D005               	goto	l441
  8418  0029B4                     l439:
  8419  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  8420                           
  8421                           ; BSR set to: 0
  8422  0029B6  C0CE  F02E         	movff	_prec,otoa@p
  8423  0029BA  C0CF  F02F         	movff	_prec+1,otoa@p+1
  8424  0029BE                     l441:
  8425  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  8429  0029C0  C0CC  F032         	movff	_width,otoa@w
  8430  0029C4  C0CD  F033         	movff	_width+1,otoa@w+1
  8431                           
  8432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  8433  0029C8  C01E  F034         	movff	otoa@d,otoa@n
  8434  0029CC  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8435  0029D0  C020  F036         	movff	otoa@d+2,otoa@n+2
  8436  0029D4  C021  F037         	movff	otoa@d+3,otoa@n+3
  8437  0029D8  C022  F038         	movff	otoa@d+4,otoa@n+4
  8438  0029DC  C023  F039         	movff	otoa@d+5,otoa@n+5
  8439  0029E0  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8440  0029E4  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  8444  0029E8  0E00               	movlw	0
  8445  0029EA  6E3D               	movwf	otoa@i+1,c
  8446  0029EC  0E1F               	movlw	31
  8447  0029EE  6E3C               	movwf	otoa@i,c
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  8451  0029F0  0E00               	movlw	0
  8452  0029F2  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  8456  0029F4  0E00               	movlw	0
  8457  0029F6  6E31               	movwf	otoa@t+1,c
  8458  0029F8  0E00               	movlw	0
  8459  0029FA  6E30               	movwf	otoa@t,c
  8460                           
  8461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8462  0029FC  D046               	goto	l3788
  8463  0029FE                     l3776:
  8464  0029FE  FFFF               	dw	65535	; assembler added errata NOP
  8465                           
  8466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  8467  002A00  063C               	decf	otoa@i,f,c
  8468  002A02  A0D8               	btfss	status,0,c
  8469  002A04  063D               	decf	otoa@i+1,f,c
  8470                           
  8471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  8472  002A06  0E07               	movlw	7
  8473  002A08  1434               	andwf	otoa@n,w,c
  8474  002A0A  6E30               	movwf	otoa@t,c
  8475  002A0C  6A31               	clrf	otoa@t+1,c
  8476                           
  8477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  8478  002A0E  0ED5               	movlw	low _dbuf
  8479  002A10  243C               	addwf	otoa@i,w,c
  8480  002A12  6ED9               	movwf	fsr2l,c
  8481  002A14  0E00               	movlw	high _dbuf
  8482  002A16  203D               	addwfc	otoa@i+1,w,c
  8483  002A18  6EDA               	movwf	fsr2h,c
  8484  002A1A  5030               	movf	otoa@t,w,c
  8485  002A1C  0F30               	addlw	48
  8486  002A1E  6EDF               	movwf	indf2,c
  8487                           
  8488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  8489  002A20  062E               	decf	otoa@p,f,c
  8490  002A22  A0D8               	btfss	status,0,c
  8491  002A24  062F               	decf	otoa@p+1,f,c
  8492                           
  8493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  8494  002A26  0632               	decf	otoa@w,f,c
  8495  002A28  A0D8               	btfss	status,0,c
  8496  002A2A  0633               	decf	otoa@w+1,f,c
  8497                           
  8498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  8499  002A2C  C034  F026         	movff	otoa@n,??_otoa
  8500  002A30  C035  F027         	movff	otoa@n+1,??_otoa+1
  8501  002A34  C036  F028         	movff	otoa@n+2,??_otoa+2
  8502  002A38  C037  F029         	movff	otoa@n+3,??_otoa+3
  8503  002A3C  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8504  002A40  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8505  002A44  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8506  002A48  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8507  002A4C  0E04               	movlw	4
  8508  002A4E  D00A               	goto	u3390
  8509  002A50                     u3395:
  8510  002A50  FFFF               	dw	65535	; assembler added errata NOP
  8511  002A52  90D8               	bcf	status,0,c
  8512  002A54  322D               	rrcf	??_otoa+7,f,c
  8513  002A56  322C               	rrcf	??_otoa+6,f,c
  8514  002A58  322B               	rrcf	??_otoa+5,f,c
  8515  002A5A  322A               	rrcf	??_otoa+4,f,c
  8516  002A5C  3229               	rrcf	??_otoa+3,f,c
  8517  002A5E  3228               	rrcf	??_otoa+2,f,c
  8518  002A60  3227               	rrcf	??_otoa+1,f,c
  8519  002A62  3226               	rrcf	??_otoa,f,c
  8520  002A64                     u3390:
  8521  002A64  FFFF               	dw	65535	; assembler added errata NOP
  8522  002A66  2EE8               	decfsz	wreg,f,c
  8523  002A68  D7F3               	goto	u3395
  8524  002A6A  C026  F034         	movff	??_otoa,otoa@n
  8525  002A6E  C027  F035         	movff	??_otoa+1,otoa@n+1
  8526  002A72  C028  F036         	movff	??_otoa+2,otoa@n+2
  8527  002A76  C029  F037         	movff	??_otoa+3,otoa@n+3
  8528  002A7A  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8529  002A7E  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8530  002A82  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8531  002A86  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8532  002A8A                     l3788:
  8533  002A8A  FFFF               	dw	65535	; assembler added errata NOP
  8534                           
  8535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8536  002A8C  BE3D               	btfsc	otoa@i+1,7,c
  8537  002A8E  D021               	goto	u3440
  8538  002A90  503D               	movf	otoa@i+1,w,c
  8539  002A92  E103               	bnz	u3400
  8540  002A94  043C               	decf	otoa@i,w,c
  8541  002A96  A0D8               	btfss	status,0,c
  8542  002A98  D01C               	goto	u3440
  8543  002A9A                     u3400:
  8544  002A9A  5034               	movf	otoa@n,w,c
  8545  002A9C  1035               	iorwf	otoa@n+1,w,c
  8546  002A9E  1036               	iorwf	otoa@n+2,w,c
  8547  002AA0  1037               	iorwf	otoa@n+3,w,c
  8548  002AA2  1038               	iorwf	otoa@n+4,w,c
  8549  002AA4  1039               	iorwf	otoa@n+5,w,c
  8550  002AA6  103A               	iorwf	otoa@n+6,w,c
  8551  002AA8  103B               	iorwf	otoa@n+7,w,c
  8552  002AAA  A4D8               	btfss	status,2,c
  8553  002AAC  D7A8               	goto	l3776
  8554  002AAE  BE2F               	btfsc	otoa@p+1,7,c
  8555  002AB0  D005               	goto	u3420
  8556  002AB2  502F               	movf	otoa@p+1,w,c
  8557  002AB4  E1A4               	bnz	l3776
  8558  002AB6  042E               	decf	otoa@p,w,c
  8559  002AB8  B0D8               	btfsc	status,0,c
  8560  002ABA  D7A1               	goto	l3776
  8561  002ABC                     u3420:
  8562  002ABC  FFFF               	dw	65535	; assembler added errata NOP
  8563  002ABE  BE33               	btfsc	otoa@w+1,7,c
  8564  002AC0  D008               	goto	u3440
  8565  002AC2  5033               	movf	otoa@w+1,w,c
  8566  002AC4  E103               	bnz	u3430
  8567  002AC6  0432               	decf	otoa@w,w,c
  8568  002AC8  A0D8               	btfss	status,0,c
  8569  002ACA  D003               	goto	u3440
  8570  002ACC                     u3430:
  8571  002ACC  0100               	movlb	0	; () banked
  8572  002ACE  B3D0               	btfsc	_flags& (0+255),1,b
  8573  002AD0  D796               	goto	l3776
  8574  002AD2                     u3440:
  8575  002AD2  FFFF               	dw	65535	; assembler added errata NOP
  8576                           
  8577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  8578  002AD4  0100               	movlb	0	; () banked
  8579  002AD6  A9D0               	btfss	_flags& (0+255),4,b
  8580  002AD8  D012               	goto	l3806
  8581                           
  8582                           ; BSR set to: 0
  8583  002ADA  5030               	movf	otoa@t,w,c
  8584  002ADC  1031               	iorwf	otoa@t+1,w,c
  8585  002ADE  B4D8               	btfsc	status,2,c
  8586  002AE0  D00E               	goto	l3806
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  8590  002AE2  063C               	decf	otoa@i,f,c
  8591  002AE4  A0D8               	btfss	status,0,c
  8592  002AE6  063D               	decf	otoa@i+1,f,c
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  8596  002AE8  0ED5               	movlw	low _dbuf
  8597  002AEA  243C               	addwf	otoa@i,w,c
  8598  002AEC  6ED9               	movwf	fsr2l,c
  8599  002AEE  0E00               	movlw	high _dbuf
  8600  002AF0  203D               	addwfc	otoa@i+1,w,c
  8601  002AF2  6EDA               	movwf	fsr2h,c
  8602  002AF4  0E30               	movlw	48
  8603  002AF6  6EDF               	movwf	indf2,c
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  8607  002AF8  0632               	decf	otoa@w,f,c
  8608  002AFA  A0D8               	btfss	status,0,c
  8609  002AFC  0633               	decf	otoa@w+1,f,c
  8610  002AFE                     l3806:
  8611  002AFE  FFFF               	dw	65535	; assembler added errata NOP
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  8615  002B00  C01C  F011         	movff	otoa@fp,pad@fp
  8616  002B04  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8617  002B08  0ED5               	movlw	low _dbuf
  8618  002B0A  243C               	addwf	otoa@i,w,c
  8619  002B0C  6E13               	movwf	pad@buf,c
  8620  002B0E  0E00               	movlw	high _dbuf
  8621  002B10  203D               	addwfc	otoa@i+1,w,c
  8622  002B12  6E14               	movwf	pad@buf+1,c
  8623  002B14  C032  F015         	movff	otoa@w,pad@p
  8624  002B18  C033  F016         	movff	otoa@w+1,pad@p+1
  8625  002B1C  ECD0  F01B         	call	_pad	;wreg free
  8626  002B20  C011  F01C         	movff	?_pad,?_otoa
  8627  002B24  C012  F01D         	movff	?_pad+1,?_otoa+1
  8628  002B28  0012               	return		;funcret
  8629  002B2A  FFFF               	dw	65535	; errata NOP
  8630  002B2C                     __end_of_otoa:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function _dtoa *****************
  8634 ;; Defined at:
  8635 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8638 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8639 ;;  d               8   29[COMRAM] long long 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  n               8   53[COMRAM] long long 
  8642 ;;  i               2   61[COMRAM] int 
  8643 ;;  s               2   51[COMRAM] int 
  8644 ;;  w               2   49[COMRAM] int 
  8645 ;;  p               2   47[COMRAM] int 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  2   27[COMRAM] int 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8655 ;;      Params:        10       0       0       0       0       0       0
  8656 ;;      Locals:        18       0       0       0       0       0       0
  8657 ;;      Temps:          8       0       0       0       0       0       0
  8658 ;;      Totals:        36       0       0       0       0       0       0
  8659 ;;Total ram usage:       36 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    6
  8662 ;; This function calls:
  8663 ;;		___aodiv
  8664 ;;		___aomod
  8665 ;;		_abs
  8666 ;;		_pad
  8667 ;; This function is called by:
  8668 ;;		_vfpfcnvrt
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text33
  8673  001F58                     __ptext33:
  8674                           	opt callstack 0
  8675  001F58                     _dtoa:
  8676                           	opt callstack 0
  8677  001F58  FFFF               	dw	65535	; assembler added errata NOP
  8678                           
  8679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8680                           
  8681                           ;incstack = 0
  8682  001F5A  C01E  F036         	movff	dtoa@d,dtoa@n
  8683  001F5E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8684  001F62  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8685  001F66  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8686  001F6A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8687  001F6E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8688  001F72  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8689  001F76  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8690                           
  8691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8692  001F7A  AE3D               	btfss	dtoa@n+7,7,c
  8693  001F7C  D002               	goto	u3220
  8694  001F7E  0E01               	movlw	1
  8695  001F80  D002               	goto	u3230
  8696  001F82                     u3220:
  8697  001F82  FFFF               	dw	65535	; assembler added errata NOP
  8698  001F84  0E00               	movlw	0
  8699  001F86                     u3230:
  8700  001F86  FFFF               	dw	65535	; assembler added errata NOP
  8701  001F88  6E34               	movwf	dtoa@s,c
  8702  001F8A  6A35               	clrf	dtoa@s+1,c
  8703                           
  8704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8705  001F8C  5034               	movf	dtoa@s,w,c
  8706  001F8E  1035               	iorwf	dtoa@s+1,w,c
  8707  001F90  B4D8               	btfsc	status,2,c
  8708  001F92  D010               	goto	l3706
  8709                           
  8710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8711  001F94  1E3D               	comf	dtoa@n+7,f,c
  8712  001F96  1E3C               	comf	dtoa@n+6,f,c
  8713  001F98  1E3B               	comf	dtoa@n+5,f,c
  8714  001F9A  1E3A               	comf	dtoa@n+4,f,c
  8715  001F9C  1E39               	comf	dtoa@n+3,f,c
  8716  001F9E  1E38               	comf	dtoa@n+2,f,c
  8717  001FA0  1E37               	comf	dtoa@n+1,f,c
  8718  001FA2  6C36               	negf	dtoa@n,c
  8719  001FA4  0E00               	movlw	0
  8720  001FA6  2237               	addwfc	dtoa@n+1,f,c
  8721  001FA8  2238               	addwfc	dtoa@n+2,f,c
  8722  001FAA  2239               	addwfc	dtoa@n+3,f,c
  8723  001FAC  223A               	addwfc	dtoa@n+4,f,c
  8724  001FAE  223B               	addwfc	dtoa@n+5,f,c
  8725  001FB0  223C               	addwfc	dtoa@n+6,f,c
  8726  001FB2  223D               	addwfc	dtoa@n+7,f,c
  8727  001FB4                     l3706:
  8728  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  8729                           
  8730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8731  001FB6  0100               	movlb	0	; () banked
  8732  001FB8  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8736  001FBA  93D0               	bcf	_flags& (0+255),1,b
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8740  001FBC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8741  001FBE  D005               	goto	u3260
  8742  001FC0  51CF               	movf	(_prec+1)& (0+255),w,b
  8743  001FC2  E109               	bnz	l414
  8744  001FC4  05CE               	decf	_prec& (0+255),w,b
  8745  001FC6  B0D8               	btfsc	status,0,c
  8746  001FC8  D006               	goto	l414
  8747  001FCA                     u3260:
  8748  001FCA  FFFF               	dw	65535	; assembler added errata NOP
  8749                           
  8750                           ; BSR set to: 0
  8751  001FCC  0E00               	movlw	0
  8752  001FCE  6E31               	movwf	dtoa@p+1,c
  8753  001FD0  0E01               	movlw	1
  8754  001FD2  6E30               	movwf	dtoa@p,c
  8755  001FD4  D005               	goto	l416
  8756  001FD6                     l414:
  8757  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  8758                           
  8759                           ; BSR set to: 0
  8760  001FD8  C0CE  F030         	movff	_prec,dtoa@p
  8761  001FDC  C0CF  F031         	movff	_prec+1,dtoa@p+1
  8762  001FE0                     l416:
  8763  001FE0  FFFF               	dw	65535	; assembler added errata NOP
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8767  001FE2  C0CC  F032         	movff	_width,dtoa@w
  8768  001FE6  C0CD  F033         	movff	_width+1,dtoa@w+1
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8772  001FEA  5034               	movf	dtoa@s,w,c
  8773  001FEC  1035               	iorwf	dtoa@s+1,w,c
  8774  001FEE  A4D8               	btfss	status,2,c
  8775  001FF0  D002               	goto	u3280
  8776                           
  8777                           ; BSR set to: 0
  8778  001FF2  A5D0               	btfss	_flags& (0+255),2,b
  8779  001FF4  D004               	goto	l3720
  8780  001FF6                     u3280:
  8781  001FF6  FFFF               	dw	65535	; assembler added errata NOP
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8785  001FF8  0632               	decf	dtoa@w,f,c
  8786  001FFA  A0D8               	btfss	status,0,c
  8787  001FFC  0633               	decf	dtoa@w+1,f,c
  8788  001FFE                     l3720:
  8789  001FFE  FFFF               	dw	65535	; assembler added errata NOP
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8793  002000  0E00               	movlw	0
  8794  002002  6E3F               	movwf	dtoa@i+1,c
  8795  002004  0E1F               	movlw	31
  8796  002006  6E3E               	movwf	dtoa@i,c
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8800  002008  0E00               	movlw	0
  8801  00200A  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8802                           
  8803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8804  00200C  D07D               	goto	l3734
  8805  00200E                     l3724:
  8806  00200E  FFFF               	dw	65535	; assembler added errata NOP
  8807                           
  8808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8809  002010  063E               	decf	dtoa@i,f,c
  8810  002012  A0D8               	btfss	status,0,c
  8811  002014  063F               	decf	dtoa@i+1,f,c
  8812                           
  8813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8814  002016  0ED5               	movlw	low _dbuf
  8815  002018  243E               	addwf	dtoa@i,w,c
  8816  00201A  6ED9               	movwf	fsr2l,c
  8817  00201C  0E00               	movlw	high _dbuf
  8818  00201E  203F               	addwfc	dtoa@i+1,w,c
  8819  002020  6EDA               	movwf	fsr2h,c
  8820  002022  C036  F001         	movff	dtoa@n,___aomod@dividend
  8821  002026  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8822  00202A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8823  00202E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8824  002032  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8825  002036  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8826  00203A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8827  00203E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8828  002042  0E0A               	movlw	10
  8829  002044  6E09               	movwf	___aomod@divisor,c
  8830  002046  0E00               	movlw	0
  8831  002048  6E0A               	movwf	___aomod@divisor+1,c
  8832  00204A  0E00               	movlw	0
  8833  00204C  6E0B               	movwf	___aomod@divisor+2,c
  8834  00204E  0E00               	movlw	0
  8835  002050  6E0C               	movwf	___aomod@divisor+3,c
  8836  002052  0E00               	movlw	0
  8837  002054  6E0D               	movwf	___aomod@divisor+4,c
  8838  002056  0E00               	movlw	0
  8839  002058  6E0E               	movwf	___aomod@divisor+5,c
  8840  00205A  0E00               	movlw	0
  8841  00205C  6E0F               	movwf	___aomod@divisor+6,c
  8842  00205E  0E00               	movlw	0
  8843  002060  6E10               	movwf	___aomod@divisor+7,c
  8844  002062  EC47  F018         	call	___aomod	;wreg free
  8845  002066  C001  F026         	movff	?___aomod,??_dtoa
  8846  00206A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8847  00206E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8848  002072  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8849  002076  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8850  00207A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8851  00207E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8852  002082  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8853  002086  C026  F013         	movff	??_dtoa,abs@a
  8854  00208A  C028  F014         	movff	??_dtoa+2,abs@a+1
  8855  00208E  EC99  F01E         	call	_abs	;wreg free
  8856  002092  5013               	movf	?_abs,w,c
  8857  002094  0F30               	addlw	48
  8858  002096  6EDF               	movwf	indf2,c
  8859                           
  8860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8861  002098  0630               	decf	dtoa@p,f,c
  8862  00209A  A0D8               	btfss	status,0,c
  8863  00209C  0631               	decf	dtoa@p+1,f,c
  8864                           
  8865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8866  00209E  0632               	decf	dtoa@w,f,c
  8867  0020A0  A0D8               	btfss	status,0,c
  8868  0020A2  0633               	decf	dtoa@w+1,f,c
  8869                           
  8870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8871  0020A4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8872  0020A8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8873  0020AC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8874  0020B0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8875  0020B4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8876  0020B8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8877  0020BC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8878  0020C0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8879  0020C4  0E0A               	movlw	10
  8880  0020C6  6E09               	movwf	___aodiv@divisor,c
  8881  0020C8  0E00               	movlw	0
  8882  0020CA  6E0A               	movwf	___aodiv@divisor+1,c
  8883  0020CC  0E00               	movlw	0
  8884  0020CE  6E0B               	movwf	___aodiv@divisor+2,c
  8885  0020D0  0E00               	movlw	0
  8886  0020D2  6E0C               	movwf	___aodiv@divisor+3,c
  8887  0020D4  0E00               	movlw	0
  8888  0020D6  6E0D               	movwf	___aodiv@divisor+4,c
  8889  0020D8  0E00               	movlw	0
  8890  0020DA  6E0E               	movwf	___aodiv@divisor+5,c
  8891  0020DC  0E00               	movlw	0
  8892  0020DE  6E0F               	movwf	___aodiv@divisor+6,c
  8893  0020E0  0E00               	movlw	0
  8894  0020E2  6E10               	movwf	___aodiv@divisor+7,c
  8895  0020E4  ECF7  F016         	call	___aodiv	;wreg free
  8896  0020E8  C001  F036         	movff	?___aodiv,dtoa@n
  8897  0020EC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8898  0020F0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8899  0020F4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8900  0020F8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8901  0020FC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8902  002100  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8903  002104  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8904  002108                     l3734:
  8905  002108  FFFF               	dw	65535	; assembler added errata NOP
  8906                           
  8907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8908  00210A  BE3F               	btfsc	dtoa@i+1,7,c
  8909  00210C  D021               	goto	u3330
  8910  00210E  503F               	movf	dtoa@i+1,w,c
  8911  002110  E103               	bnz	u3290
  8912  002112  043E               	decf	dtoa@i,w,c
  8913  002114  A0D8               	btfss	status,0,c
  8914  002116  D01C               	goto	u3330
  8915  002118                     u3290:
  8916  002118  5036               	movf	dtoa@n,w,c
  8917  00211A  1037               	iorwf	dtoa@n+1,w,c
  8918  00211C  1038               	iorwf	dtoa@n+2,w,c
  8919  00211E  1039               	iorwf	dtoa@n+3,w,c
  8920  002120  103A               	iorwf	dtoa@n+4,w,c
  8921  002122  103B               	iorwf	dtoa@n+5,w,c
  8922  002124  103C               	iorwf	dtoa@n+6,w,c
  8923  002126  103D               	iorwf	dtoa@n+7,w,c
  8924  002128  A4D8               	btfss	status,2,c
  8925  00212A  D771               	goto	l3724
  8926  00212C  BE31               	btfsc	dtoa@p+1,7,c
  8927  00212E  D005               	goto	u3310
  8928  002130  5031               	movf	dtoa@p+1,w,c
  8929  002132  E102               	bnz	u3311
  8930  002134  0430               	decf	dtoa@p,w,c
  8931  002136  B0D8               	btfsc	status,0,c
  8932  002138                     u3311:
  8933  002138  D76A               	goto	l3724
  8934  00213A                     u3310:
  8935  00213A  FFFF               	dw	65535	; assembler added errata NOP
  8936  00213C  BE33               	btfsc	dtoa@w+1,7,c
  8937  00213E  D008               	goto	u3330
  8938  002140  5033               	movf	dtoa@w+1,w,c
  8939  002142  E103               	bnz	u3320
  8940  002144  0432               	decf	dtoa@w,w,c
  8941  002146  A0D8               	btfss	status,0,c
  8942  002148  D003               	goto	u3330
  8943  00214A                     u3320:
  8944  00214A  0100               	movlb	0	; () banked
  8945  00214C  B3D0               	btfsc	_flags& (0+255),1,b
  8946  00214E  D75F               	goto	l3724
  8947  002150                     u3330:
  8948  002150  FFFF               	dw	65535	; assembler added errata NOP
  8949                           
  8950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8951  002152  5034               	movf	dtoa@s,w,c
  8952  002154  1035               	iorwf	dtoa@s+1,w,c
  8953  002156  A4D8               	btfss	status,2,c
  8954  002158  D003               	goto	u3350
  8955  00215A  0100               	movlb	0	; () banked
  8956  00215C  A5D0               	btfss	_flags& (0+255),2,b
  8957  00215E  D01A               	goto	l3758
  8958  002160                     u3350:
  8959  002160  FFFF               	dw	65535	; assembler added errata NOP
  8960                           
  8961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8962  002162  063E               	decf	dtoa@i,f,c
  8963  002164  A0D8               	btfss	status,0,c
  8964  002166  063F               	decf	dtoa@i+1,f,c
  8965                           
  8966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8967  002168  5034               	movf	dtoa@s,w,c
  8968  00216A  1035               	iorwf	dtoa@s+1,w,c
  8969  00216C  A4D8               	btfss	status,2,c
  8970  00216E  D004               	goto	l3754
  8971  002170  0E00               	movlw	0
  8972  002172  6E2F               	movwf	_dtoa$1075+1,c
  8973  002174  0E2B               	movlw	43
  8974  002176  D004               	goto	L26
  8975  002178                     l3754:
  8976  002178  FFFF               	dw	65535	; assembler added errata NOP
  8977  00217A  0E00               	movlw	0
  8978  00217C  6E2F               	movwf	_dtoa$1075+1,c
  8979  00217E  0E2D               	movlw	45
  8980  002180                     L26:
  8981  002180  FFFF               	dw	65535	; assembler added errata NOP
  8982  002182  6E2E               	movwf	_dtoa$1075,c
  8983  002184  0ED5               	movlw	low _dbuf
  8984  002186  243E               	addwf	dtoa@i,w,c
  8985  002188  6ED9               	movwf	fsr2l,c
  8986  00218A  0E00               	movlw	high _dbuf
  8987  00218C  203F               	addwfc	dtoa@i+1,w,c
  8988  00218E  6EDA               	movwf	fsr2h,c
  8989  002190  C02E  FFDF         	movff	_dtoa$1075,indf2
  8990  002194                     l3758:
  8991  002194  FFFF               	dw	65535	; assembler added errata NOP
  8992                           
  8993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8994  002196  C01C  F011         	movff	dtoa@fp,pad@fp
  8995  00219A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8996  00219E  0ED5               	movlw	low _dbuf
  8997  0021A0  243E               	addwf	dtoa@i,w,c
  8998  0021A2  6E13               	movwf	pad@buf,c
  8999  0021A4  0E00               	movlw	high _dbuf
  9000  0021A6  203F               	addwfc	dtoa@i+1,w,c
  9001  0021A8  6E14               	movwf	pad@buf+1,c
  9002  0021AA  C032  F015         	movff	dtoa@w,pad@p
  9003  0021AE  C033  F016         	movff	dtoa@w+1,pad@p+1
  9004  0021B2  ECD0  F01B         	call	_pad	;wreg free
  9005  0021B6  C011  F01C         	movff	?_pad,?_dtoa
  9006  0021BA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9007  0021BE  0012               	return		;funcret
  9008  0021C0  FFFF               	dw	65535	; errata NOP
  9009  0021C2                     __end_of_dtoa:
  9010                           	opt callstack 0
  9011                           
  9012 ;; *************** function _abs *****************
  9013 ;; Defined at:
  9014 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  a               2   18[COMRAM] int 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2   18[COMRAM] int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9028 ;;      Params:         2       0       0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0
  9030 ;;      Temps:          2       0       0       0       0       0       0
  9031 ;;      Totals:         4       0       0       0       0       0       0
  9032 ;;Total ram usage:        4 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; Hardware stack levels required when called:    2
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_dtoa
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text34
  9043  003D32                     __ptext34:
  9044                           	opt callstack 0
  9045  003D32                     _abs:
  9046                           	opt callstack 0
  9047  003D32  FFFF               	dw	65535	; assembler added errata NOP
  9048                           
  9049                           ;incstack = 0
  9050  003D34  BE14               	btfsc	abs@a+1,7,c
  9051  003D36  D005               	goto	u2890
  9052  003D38  5014               	movf	abs@a+1,w,c
  9053  003D3A  E111               	bnz	l1287
  9054  003D3C  0413               	decf	abs@a,w,c
  9055  003D3E  B0D8               	btfsc	status,0,c
  9056  003D40  D00E               	goto	l1287
  9057  003D42                     u2890:
  9058  003D42  FFFF               	dw	65535	; assembler added errata NOP
  9059  003D44  C013  F015         	movff	abs@a,??_abs
  9060  003D48  C014  F016         	movff	abs@a+1,??_abs+1
  9061  003D4C  1E15               	comf	??_abs,f,c
  9062  003D4E  1E16               	comf	??_abs+1,f,c
  9063  003D50  4A15               	infsnz	??_abs,f,c
  9064  003D52  2A16               	incf	??_abs+1,f,c
  9065  003D54  C015  F013         	movff	??_abs,?_abs
  9066  003D58  C016  F014         	movff	??_abs+1,?_abs+1
  9067  003D5C  D005               	goto	l1290
  9068  003D5E                     l1287:
  9069  003D5E  FFFF               	dw	65535	; assembler added errata NOP
  9070  003D60  C013  F013         	movff	abs@a,?_abs
  9071  003D64  C014  F014         	movff	abs@a+1,?_abs+1
  9072  003D68                     l1290:
  9073  003D68  FFFF               	dw	65535	; assembler added errata NOP
  9074  003D6A  0012               	return		;funcret
  9075  003D6C  FFFF               	dw	65535	; errata NOP
  9076  003D6E                     __end_of_abs:
  9077                           	opt callstack 0
  9078                           
  9079 ;; *************** function ___aomod *****************
  9080 ;; Defined at:
  9081 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  dividend        8    0[COMRAM] long long 
  9084 ;;  divisor         8    8[COMRAM] long long 
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;  sign            1   17[COMRAM] unsigned char 
  9087 ;;  counter         1   16[COMRAM] unsigned char 
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  8    0[COMRAM] long long 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2, status,0
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9097 ;;      Params:        16       0       0       0       0       0       0
  9098 ;;      Locals:         2       0       0       0       0       0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0
  9100 ;;      Totals:        18       0       0       0       0       0       0
  9101 ;;Total ram usage:       18 bytes
  9102 ;; Hardware stack levels used:    1
  9103 ;; Hardware stack levels required when called:    2
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_dtoa
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text35
  9112  00308E                     __ptext35:
  9113                           	opt callstack 0
  9114  00308E                     ___aomod:
  9115                           	opt callstack 0
  9116  00308E  FFFF               	dw	65535	; assembler added errata NOP
  9117                           
  9118                           ;incstack = 0
  9119  003090  0E00               	movlw	0
  9120  003092  6E12               	movwf	___aomod@sign,c
  9121  003094  AE08               	btfss	___aomod@dividend+7,7,c
  9122  003096  D012               	goto	l3608
  9123  003098  1E08               	comf	___aomod@dividend+7,f,c
  9124  00309A  1E07               	comf	___aomod@dividend+6,f,c
  9125  00309C  1E06               	comf	___aomod@dividend+5,f,c
  9126  00309E  1E05               	comf	___aomod@dividend+4,f,c
  9127  0030A0  1E04               	comf	___aomod@dividend+3,f,c
  9128  0030A2  1E03               	comf	___aomod@dividend+2,f,c
  9129  0030A4  1E02               	comf	___aomod@dividend+1,f,c
  9130  0030A6  6C01               	negf	___aomod@dividend,c
  9131  0030A8  0E00               	movlw	0
  9132  0030AA  2202               	addwfc	___aomod@dividend+1,f,c
  9133  0030AC  2203               	addwfc	___aomod@dividend+2,f,c
  9134  0030AE  2204               	addwfc	___aomod@dividend+3,f,c
  9135  0030B0  2205               	addwfc	___aomod@dividend+4,f,c
  9136  0030B2  2206               	addwfc	___aomod@dividend+5,f,c
  9137  0030B4  2207               	addwfc	___aomod@dividend+6,f,c
  9138  0030B6  2208               	addwfc	___aomod@dividend+7,f,c
  9139  0030B8  0E01               	movlw	1
  9140  0030BA  6E12               	movwf	___aomod@sign,c
  9141  0030BC                     l3608:
  9142  0030BC  FFFF               	dw	65535	; assembler added errata NOP
  9143  0030BE  AE10               	btfss	___aomod@divisor+7,7,c
  9144  0030C0  D010               	goto	l3612
  9145  0030C2  1E10               	comf	___aomod@divisor+7,f,c
  9146  0030C4  1E0F               	comf	___aomod@divisor+6,f,c
  9147  0030C6  1E0E               	comf	___aomod@divisor+5,f,c
  9148  0030C8  1E0D               	comf	___aomod@divisor+4,f,c
  9149  0030CA  1E0C               	comf	___aomod@divisor+3,f,c
  9150  0030CC  1E0B               	comf	___aomod@divisor+2,f,c
  9151  0030CE  1E0A               	comf	___aomod@divisor+1,f,c
  9152  0030D0  6C09               	negf	___aomod@divisor,c
  9153  0030D2  0E00               	movlw	0
  9154  0030D4  220A               	addwfc	___aomod@divisor+1,f,c
  9155  0030D6  220B               	addwfc	___aomod@divisor+2,f,c
  9156  0030D8  220C               	addwfc	___aomod@divisor+3,f,c
  9157  0030DA  220D               	addwfc	___aomod@divisor+4,f,c
  9158  0030DC  220E               	addwfc	___aomod@divisor+5,f,c
  9159  0030DE  220F               	addwfc	___aomod@divisor+6,f,c
  9160  0030E0  2210               	addwfc	___aomod@divisor+7,f,c
  9161  0030E2                     l3612:
  9162  0030E2  FFFF               	dw	65535	; assembler added errata NOP
  9163  0030E4  5009               	movf	___aomod@divisor,w,c
  9164  0030E6  100A               	iorwf	___aomod@divisor+1,w,c
  9165  0030E8  100B               	iorwf	___aomod@divisor+2,w,c
  9166  0030EA  100C               	iorwf	___aomod@divisor+3,w,c
  9167  0030EC  100D               	iorwf	___aomod@divisor+4,w,c
  9168  0030EE  100E               	iorwf	___aomod@divisor+5,w,c
  9169  0030F0  100F               	iorwf	___aomod@divisor+6,w,c
  9170  0030F2  1010               	iorwf	___aomod@divisor+7,w,c
  9171  0030F4  B4D8               	btfsc	status,2,c
  9172  0030F6  D040               	goto	l3628
  9173  0030F8  0E01               	movlw	1
  9174  0030FA  6E11               	movwf	___aomod@counter,c
  9175  0030FC  D00B               	goto	l3618
  9176  0030FE                     l3616:
  9177  0030FE  FFFF               	dw	65535	; assembler added errata NOP
  9178  003100  90D8               	bcf	status,0,c
  9179  003102  3609               	rlcf	___aomod@divisor,f,c
  9180  003104  360A               	rlcf	___aomod@divisor+1,f,c
  9181  003106  360B               	rlcf	___aomod@divisor+2,f,c
  9182  003108  360C               	rlcf	___aomod@divisor+3,f,c
  9183  00310A  360D               	rlcf	___aomod@divisor+4,f,c
  9184  00310C  360E               	rlcf	___aomod@divisor+5,f,c
  9185  00310E  360F               	rlcf	___aomod@divisor+6,f,c
  9186  003110  3610               	rlcf	___aomod@divisor+7,f,c
  9187  003112  2A11               	incf	___aomod@counter,f,c
  9188  003114                     l3618:
  9189  003114  FFFF               	dw	65535	; assembler added errata NOP
  9190  003116  AE10               	btfss	___aomod@divisor+7,7,c
  9191  003118  D7F2               	goto	l3616
  9192  00311A                     u3090:
  9193  00311A  FFFF               	dw	65535	; assembler added errata NOP
  9194  00311C  5009               	movf	___aomod@divisor,w,c
  9195  00311E  5C01               	subwf	___aomod@dividend,w,c
  9196  003120  500A               	movf	___aomod@divisor+1,w,c
  9197  003122  5802               	subwfb	___aomod@dividend+1,w,c
  9198  003124  500B               	movf	___aomod@divisor+2,w,c
  9199  003126  5803               	subwfb	___aomod@dividend+2,w,c
  9200  003128  500C               	movf	___aomod@divisor+3,w,c
  9201  00312A  5804               	subwfb	___aomod@dividend+3,w,c
  9202  00312C  500D               	movf	___aomod@divisor+4,w,c
  9203  00312E  5805               	subwfb	___aomod@dividend+4,w,c
  9204  003130  500E               	movf	___aomod@divisor+5,w,c
  9205  003132  5806               	subwfb	___aomod@dividend+5,w,c
  9206  003134  500F               	movf	___aomod@divisor+6,w,c
  9207  003136  5807               	subwfb	___aomod@dividend+6,w,c
  9208  003138  5010               	movf	___aomod@divisor+7,w,c
  9209  00313A  5808               	subwfb	___aomod@dividend+7,w,c
  9210  00313C  A0D8               	btfss	status,0,c
  9211  00313E  D010               	goto	l3624
  9212  003140  5009               	movf	___aomod@divisor,w,c
  9213  003142  5E01               	subwf	___aomod@dividend,f,c
  9214  003144  500A               	movf	___aomod@divisor+1,w,c
  9215  003146  5A02               	subwfb	___aomod@dividend+1,f,c
  9216  003148  500B               	movf	___aomod@divisor+2,w,c
  9217  00314A  5A03               	subwfb	___aomod@dividend+2,f,c
  9218  00314C  500C               	movf	___aomod@divisor+3,w,c
  9219  00314E  5A04               	subwfb	___aomod@dividend+3,f,c
  9220  003150  500D               	movf	___aomod@divisor+4,w,c
  9221  003152  5A05               	subwfb	___aomod@dividend+4,f,c
  9222  003154  500E               	movf	___aomod@divisor+5,w,c
  9223  003156  5A06               	subwfb	___aomod@dividend+5,f,c
  9224  003158  500F               	movf	___aomod@divisor+6,w,c
  9225  00315A  5A07               	subwfb	___aomod@dividend+6,f,c
  9226  00315C  5010               	movf	___aomod@divisor+7,w,c
  9227  00315E  5A08               	subwfb	___aomod@dividend+7,f,c
  9228  003160                     l3624:
  9229  003160  FFFF               	dw	65535	; assembler added errata NOP
  9230  003162  90D8               	bcf	status,0,c
  9231  003164  3210               	rrcf	___aomod@divisor+7,f,c
  9232  003166  320F               	rrcf	___aomod@divisor+6,f,c
  9233  003168  320E               	rrcf	___aomod@divisor+5,f,c
  9234  00316A  320D               	rrcf	___aomod@divisor+4,f,c
  9235  00316C  320C               	rrcf	___aomod@divisor+3,f,c
  9236  00316E  320B               	rrcf	___aomod@divisor+2,f,c
  9237  003170  320A               	rrcf	___aomod@divisor+1,f,c
  9238  003172  3209               	rrcf	___aomod@divisor,f,c
  9239  003174  2E11               	decfsz	___aomod@counter,f,c
  9240  003176  D7D1               	goto	u3090
  9241  003178                     l3628:
  9242  003178  FFFF               	dw	65535	; assembler added errata NOP
  9243  00317A  5012               	movf	___aomod@sign,w,c
  9244  00317C  B4D8               	btfsc	status,2,c
  9245  00317E  D010               	goto	l3632
  9246  003180  1E08               	comf	___aomod@dividend+7,f,c
  9247  003182  1E07               	comf	___aomod@dividend+6,f,c
  9248  003184  1E06               	comf	___aomod@dividend+5,f,c
  9249  003186  1E05               	comf	___aomod@dividend+4,f,c
  9250  003188  1E04               	comf	___aomod@dividend+3,f,c
  9251  00318A  1E03               	comf	___aomod@dividend+2,f,c
  9252  00318C  1E02               	comf	___aomod@dividend+1,f,c
  9253  00318E  6C01               	negf	___aomod@dividend,c
  9254  003190  0E00               	movlw	0
  9255  003192  2202               	addwfc	___aomod@dividend+1,f,c
  9256  003194  2203               	addwfc	___aomod@dividend+2,f,c
  9257  003196  2204               	addwfc	___aomod@dividend+3,f,c
  9258  003198  2205               	addwfc	___aomod@dividend+4,f,c
  9259  00319A  2206               	addwfc	___aomod@dividend+5,f,c
  9260  00319C  2207               	addwfc	___aomod@dividend+6,f,c
  9261  00319E  2208               	addwfc	___aomod@dividend+7,f,c
  9262  0031A0                     l3632:
  9263  0031A0  FFFF               	dw	65535	; assembler added errata NOP
  9264  0031A2  C001  F001         	movff	___aomod@dividend,?___aomod
  9265  0031A6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9266  0031AA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9267  0031AE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9268  0031B2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9269  0031B6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9270  0031BA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9271  0031BE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9272  0031C2  0012               	return		;funcret
  9273  0031C4  FFFF               	dw	65535	; errata NOP
  9274  0031C6                     __end_of___aomod:
  9275                           	opt callstack 0
  9276                           
  9277 ;; *************** function ___aodiv *****************
  9278 ;; Defined at:
  9279 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;  dividend        8    0[COMRAM] long long 
  9282 ;;  divisor         8    8[COMRAM] long long 
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;  quotient        8   18[COMRAM] long long 
  9285 ;;  sign            1   17[COMRAM] unsigned char 
  9286 ;;  counter         1   16[COMRAM] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  8    0[COMRAM] long long 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9296 ;;      Params:        16       0       0       0       0       0       0
  9297 ;;      Locals:        10       0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0
  9299 ;;      Totals:        26       0       0       0       0       0       0
  9300 ;;Total ram usage:       26 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    2
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_dtoa
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text36
  9311  002DEE                     __ptext36:
  9312                           	opt callstack 0
  9313  002DEE                     ___aodiv:
  9314                           	opt callstack 0
  9315  002DEE  FFFF               	dw	65535	; assembler added errata NOP
  9316                           
  9317                           ;incstack = 0
  9318  002DF0  0E00               	movlw	0
  9319  002DF2  6E12               	movwf	___aodiv@sign,c
  9320  002DF4  AE10               	btfss	___aodiv@divisor+7,7,c
  9321  002DF6  D012               	goto	l3564
  9322  002DF8  1E10               	comf	___aodiv@divisor+7,f,c
  9323  002DFA  1E0F               	comf	___aodiv@divisor+6,f,c
  9324  002DFC  1E0E               	comf	___aodiv@divisor+5,f,c
  9325  002DFE  1E0D               	comf	___aodiv@divisor+4,f,c
  9326  002E00  1E0C               	comf	___aodiv@divisor+3,f,c
  9327  002E02  1E0B               	comf	___aodiv@divisor+2,f,c
  9328  002E04  1E0A               	comf	___aodiv@divisor+1,f,c
  9329  002E06  6C09               	negf	___aodiv@divisor,c
  9330  002E08  0E00               	movlw	0
  9331  002E0A  220A               	addwfc	___aodiv@divisor+1,f,c
  9332  002E0C  220B               	addwfc	___aodiv@divisor+2,f,c
  9333  002E0E  220C               	addwfc	___aodiv@divisor+3,f,c
  9334  002E10  220D               	addwfc	___aodiv@divisor+4,f,c
  9335  002E12  220E               	addwfc	___aodiv@divisor+5,f,c
  9336  002E14  220F               	addwfc	___aodiv@divisor+6,f,c
  9337  002E16  2210               	addwfc	___aodiv@divisor+7,f,c
  9338  002E18  0E01               	movlw	1
  9339  002E1A  6E12               	movwf	___aodiv@sign,c
  9340  002E1C                     l3564:
  9341  002E1C  FFFF               	dw	65535	; assembler added errata NOP
  9342  002E1E  AE08               	btfss	___aodiv@dividend+7,7,c
  9343  002E20  D012               	goto	l3570
  9344  002E22  1E08               	comf	___aodiv@dividend+7,f,c
  9345  002E24  1E07               	comf	___aodiv@dividend+6,f,c
  9346  002E26  1E06               	comf	___aodiv@dividend+5,f,c
  9347  002E28  1E05               	comf	___aodiv@dividend+4,f,c
  9348  002E2A  1E04               	comf	___aodiv@dividend+3,f,c
  9349  002E2C  1E03               	comf	___aodiv@dividend+2,f,c
  9350  002E2E  1E02               	comf	___aodiv@dividend+1,f,c
  9351  002E30  6C01               	negf	___aodiv@dividend,c
  9352  002E32  0E00               	movlw	0
  9353  002E34  2202               	addwfc	___aodiv@dividend+1,f,c
  9354  002E36  2203               	addwfc	___aodiv@dividend+2,f,c
  9355  002E38  2204               	addwfc	___aodiv@dividend+3,f,c
  9356  002E3A  2205               	addwfc	___aodiv@dividend+4,f,c
  9357  002E3C  2206               	addwfc	___aodiv@dividend+5,f,c
  9358  002E3E  2207               	addwfc	___aodiv@dividend+6,f,c
  9359  002E40  2208               	addwfc	___aodiv@dividend+7,f,c
  9360  002E42  0E01               	movlw	1
  9361  002E44  1A12               	xorwf	___aodiv@sign,f,c
  9362  002E46                     l3570:
  9363  002E46  FFFF               	dw	65535	; assembler added errata NOP
  9364  002E48  EE20  F013         	lfsr	2,___aodiv@quotient
  9365  002E4C  0E07               	movlw	7
  9366  002E4E                     u3011:
  9367  002E4E  6ADE               	clrf	postinc2,c
  9368  002E50  06E8               	decf	wreg,f,c
  9369  002E52  E2FD               	bc	u3011
  9370  002E54  5009               	movf	___aodiv@divisor,w,c
  9371  002E56  100A               	iorwf	___aodiv@divisor+1,w,c
  9372  002E58  100B               	iorwf	___aodiv@divisor+2,w,c
  9373  002E5A  100C               	iorwf	___aodiv@divisor+3,w,c
  9374  002E5C  100D               	iorwf	___aodiv@divisor+4,w,c
  9375  002E5E  100E               	iorwf	___aodiv@divisor+5,w,c
  9376  002E60  100F               	iorwf	___aodiv@divisor+6,w,c
  9377  002E62  1010               	iorwf	___aodiv@divisor+7,w,c
  9378  002E64  B4D8               	btfsc	status,2,c
  9379  002E66  D04A               	goto	l3592
  9380  002E68  0E01               	movlw	1
  9381  002E6A  6E11               	movwf	___aodiv@counter,c
  9382  002E6C  D00B               	goto	l3578
  9383  002E6E                     l3576:
  9384  002E6E  FFFF               	dw	65535	; assembler added errata NOP
  9385  002E70  90D8               	bcf	status,0,c
  9386  002E72  3609               	rlcf	___aodiv@divisor,f,c
  9387  002E74  360A               	rlcf	___aodiv@divisor+1,f,c
  9388  002E76  360B               	rlcf	___aodiv@divisor+2,f,c
  9389  002E78  360C               	rlcf	___aodiv@divisor+3,f,c
  9390  002E7A  360D               	rlcf	___aodiv@divisor+4,f,c
  9391  002E7C  360E               	rlcf	___aodiv@divisor+5,f,c
  9392  002E7E  360F               	rlcf	___aodiv@divisor+6,f,c
  9393  002E80  3610               	rlcf	___aodiv@divisor+7,f,c
  9394  002E82  2A11               	incf	___aodiv@counter,f,c
  9395  002E84                     l3578:
  9396  002E84  FFFF               	dw	65535	; assembler added errata NOP
  9397  002E86  AE10               	btfss	___aodiv@divisor+7,7,c
  9398  002E88  D7F2               	goto	l3576
  9399  002E8A                     u3030:
  9400  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  9401  002E8C  90D8               	bcf	status,0,c
  9402  002E8E  3613               	rlcf	___aodiv@quotient,f,c
  9403  002E90  3614               	rlcf	___aodiv@quotient+1,f,c
  9404  002E92  3615               	rlcf	___aodiv@quotient+2,f,c
  9405  002E94  3616               	rlcf	___aodiv@quotient+3,f,c
  9406  002E96  3617               	rlcf	___aodiv@quotient+4,f,c
  9407  002E98  3618               	rlcf	___aodiv@quotient+5,f,c
  9408  002E9A  3619               	rlcf	___aodiv@quotient+6,f,c
  9409  002E9C  361A               	rlcf	___aodiv@quotient+7,f,c
  9410  002E9E  5009               	movf	___aodiv@divisor,w,c
  9411  002EA0  5C01               	subwf	___aodiv@dividend,w,c
  9412  002EA2  500A               	movf	___aodiv@divisor+1,w,c
  9413  002EA4  5802               	subwfb	___aodiv@dividend+1,w,c
  9414  002EA6  500B               	movf	___aodiv@divisor+2,w,c
  9415  002EA8  5803               	subwfb	___aodiv@dividend+2,w,c
  9416  002EAA  500C               	movf	___aodiv@divisor+3,w,c
  9417  002EAC  5804               	subwfb	___aodiv@dividend+3,w,c
  9418  002EAE  500D               	movf	___aodiv@divisor+4,w,c
  9419  002EB0  5805               	subwfb	___aodiv@dividend+4,w,c
  9420  002EB2  500E               	movf	___aodiv@divisor+5,w,c
  9421  002EB4  5806               	subwfb	___aodiv@dividend+5,w,c
  9422  002EB6  500F               	movf	___aodiv@divisor+6,w,c
  9423  002EB8  5807               	subwfb	___aodiv@dividend+6,w,c
  9424  002EBA  5010               	movf	___aodiv@divisor+7,w,c
  9425  002EBC  5808               	subwfb	___aodiv@dividend+7,w,c
  9426  002EBE  A0D8               	btfss	status,0,c
  9427  002EC0  D011               	goto	l3588
  9428  002EC2  5009               	movf	___aodiv@divisor,w,c
  9429  002EC4  5E01               	subwf	___aodiv@dividend,f,c
  9430  002EC6  500A               	movf	___aodiv@divisor+1,w,c
  9431  002EC8  5A02               	subwfb	___aodiv@dividend+1,f,c
  9432  002ECA  500B               	movf	___aodiv@divisor+2,w,c
  9433  002ECC  5A03               	subwfb	___aodiv@dividend+2,f,c
  9434  002ECE  500C               	movf	___aodiv@divisor+3,w,c
  9435  002ED0  5A04               	subwfb	___aodiv@dividend+3,f,c
  9436  002ED2  500D               	movf	___aodiv@divisor+4,w,c
  9437  002ED4  5A05               	subwfb	___aodiv@dividend+4,f,c
  9438  002ED6  500E               	movf	___aodiv@divisor+5,w,c
  9439  002ED8  5A06               	subwfb	___aodiv@dividend+5,f,c
  9440  002EDA  500F               	movf	___aodiv@divisor+6,w,c
  9441  002EDC  5A07               	subwfb	___aodiv@dividend+6,f,c
  9442  002EDE  5010               	movf	___aodiv@divisor+7,w,c
  9443  002EE0  5A08               	subwfb	___aodiv@dividend+7,f,c
  9444  002EE2  8013               	bsf	___aodiv@quotient,0,c
  9445  002EE4                     l3588:
  9446  002EE4  FFFF               	dw	65535	; assembler added errata NOP
  9447  002EE6  90D8               	bcf	status,0,c
  9448  002EE8  3210               	rrcf	___aodiv@divisor+7,f,c
  9449  002EEA  320F               	rrcf	___aodiv@divisor+6,f,c
  9450  002EEC  320E               	rrcf	___aodiv@divisor+5,f,c
  9451  002EEE  320D               	rrcf	___aodiv@divisor+4,f,c
  9452  002EF0  320C               	rrcf	___aodiv@divisor+3,f,c
  9453  002EF2  320B               	rrcf	___aodiv@divisor+2,f,c
  9454  002EF4  320A               	rrcf	___aodiv@divisor+1,f,c
  9455  002EF6  3209               	rrcf	___aodiv@divisor,f,c
  9456  002EF8  2E11               	decfsz	___aodiv@counter,f,c
  9457  002EFA  D7C7               	goto	u3030
  9458  002EFC                     l3592:
  9459  002EFC  FFFF               	dw	65535	; assembler added errata NOP
  9460  002EFE  5012               	movf	___aodiv@sign,w,c
  9461  002F00  B4D8               	btfsc	status,2,c
  9462  002F02  D010               	goto	l3596
  9463  002F04  1E1A               	comf	___aodiv@quotient+7,f,c
  9464  002F06  1E19               	comf	___aodiv@quotient+6,f,c
  9465  002F08  1E18               	comf	___aodiv@quotient+5,f,c
  9466  002F0A  1E17               	comf	___aodiv@quotient+4,f,c
  9467  002F0C  1E16               	comf	___aodiv@quotient+3,f,c
  9468  002F0E  1E15               	comf	___aodiv@quotient+2,f,c
  9469  002F10  1E14               	comf	___aodiv@quotient+1,f,c
  9470  002F12  6C13               	negf	___aodiv@quotient,c
  9471  002F14  0E00               	movlw	0
  9472  002F16  2214               	addwfc	___aodiv@quotient+1,f,c
  9473  002F18  2215               	addwfc	___aodiv@quotient+2,f,c
  9474  002F1A  2216               	addwfc	___aodiv@quotient+3,f,c
  9475  002F1C  2217               	addwfc	___aodiv@quotient+4,f,c
  9476  002F1E  2218               	addwfc	___aodiv@quotient+5,f,c
  9477  002F20  2219               	addwfc	___aodiv@quotient+6,f,c
  9478  002F22  221A               	addwfc	___aodiv@quotient+7,f,c
  9479  002F24                     l3596:
  9480  002F24  FFFF               	dw	65535	; assembler added errata NOP
  9481  002F26  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9482  002F2A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9483  002F2E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9484  002F32  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9485  002F36  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9486  002F3A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9487  002F3E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9488  002F42  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9489  002F46  0012               	return		;funcret
  9490  002F48  FFFF               	dw	65535	; errata NOP
  9491  002F4A                     __end_of___aodiv:
  9492                           	opt callstack 0
  9493                           
  9494 ;; *************** function _ctoa *****************
  9495 ;; Defined at:
  9496 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9499 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9500 ;;  c               1   29[COMRAM] unsigned char 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  w               2   30[COMRAM] int 
  9503 ;;  l               2    0        int 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  2   27[COMRAM] int 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9513 ;;      Params:         3       0       0       0       0       0       0
  9514 ;;      Locals:         2       0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0
  9516 ;;      Totals:         5       0       0       0       0       0       0
  9517 ;;Total ram usage:        5 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    6
  9520 ;; This function calls:
  9521 ;;		_pad
  9522 ;; This function is called by:
  9523 ;;		_vfpfcnvrt
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text37
  9528  003AF8                     __ptext37:
  9529                           	opt callstack 0
  9530  003AF8                     _ctoa:
  9531                           	opt callstack 0
  9532  003AF8  FFFF               	dw	65535	; assembler added errata NOP
  9533                           
  9534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9535                           
  9536                           ;incstack = 0
  9537  003AFA  0100               	movlb	0	; () banked
  9538  003AFC  51CC               	movf	_width& (0+255),w,b
  9539  003AFE  11CD               	iorwf	(_width+1)& (0+255),w,b
  9540  003B00  A4D8               	btfss	status,2,c
  9541  003B02  D005               	goto	l3690
  9542                           
  9543                           ; BSR set to: 0
  9544  003B04  C0CC  F01F         	movff	_width,ctoa@w
  9545  003B08  C0CD  F020         	movff	_width+1,ctoa@w+1
  9546  003B0C  D007               	goto	l3692
  9547  003B0E                     l3690:
  9548  003B0E  FFFF               	dw	65535	; assembler added errata NOP
  9549                           
  9550                           ; BSR set to: 0
  9551  003B10  0EFF               	movlw	255
  9552  003B12  25CC               	addwf	_width& (0+255),w,b
  9553  003B14  6E1F               	movwf	ctoa@w,c
  9554  003B16  0EFF               	movlw	255
  9555  003B18  21CD               	addwfc	(_width+1)& (0+255),w,b
  9556  003B1A  6E20               	movwf	ctoa@w+1,c
  9557  003B1C                     l3692:
  9558  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9562  003B1E  C01E  F0D5         	movff	ctoa@c,_dbuf
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9566  003B22  0E00               	movlw	0
  9567  003B24  6FD6               	movwf	(_dbuf+1)& (0+255),b
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9571  003B26  C01C  F011         	movff	ctoa@fp,pad@fp
  9572  003B2A  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9573  003B2E  0ED5               	movlw	low _dbuf
  9574  003B30  6E13               	movwf	pad@buf,c
  9575  003B32  0E00               	movlw	high _dbuf
  9576  003B34  6E14               	movwf	pad@buf+1,c
  9577  003B36  C01F  F015         	movff	ctoa@w,pad@p
  9578  003B3A  C020  F016         	movff	ctoa@w+1,pad@p+1
  9579  003B3E  ECD0  F01B         	call	_pad	;wreg free
  9580  003B42  C011  F01C         	movff	?_pad,?_ctoa
  9581  003B46  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9582  003B4A  0012               	return		;funcret
  9583  003B4C  FFFF               	dw	65535	; errata NOP
  9584  003B4E                     __end_of_ctoa:
  9585                           	opt callstack 0
  9586                           
  9587 ;; *************** function _pad *****************
  9588 ;; Defined at:
  9589 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9592 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9593 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9594 ;;		 -> dbuf(32), 
  9595 ;;  p               2   20[COMRAM] int 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  w               2   25[COMRAM] int 
  9598 ;;  i               2   23[COMRAM] int 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  2   16[COMRAM] int 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9608 ;;      Params:         6       0       0       0       0       0       0
  9609 ;;      Locals:         4       0       0       0       0       0       0
  9610 ;;      Temps:          1       0       0       0       0       0       0
  9611 ;;      Totals:        11       0       0       0       0       0       0
  9612 ;;Total ram usage:       11 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    5
  9615 ;; This function calls:
  9616 ;;		_fputc
  9617 ;;		_fputs
  9618 ;;		_strlen
  9619 ;; This function is called by:
  9620 ;;		_ctoa
  9621 ;;		_dtoa
  9622 ;;		_otoa
  9623 ;;		_utoa
  9624 ;;		_xtoa
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text38
  9629  0037A0                     __ptext38:
  9630                           	opt callstack 0
  9631  0037A0                     _pad:
  9632                           	opt callstack 0
  9633  0037A0  FFFF               	dw	65535	; assembler added errata NOP
  9634                           
  9635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9636                           
  9637                           ;incstack = 0
  9638  0037A2  0100               	movlb	0	; () banked
  9639  0037A4  A1D0               	btfss	_flags& (0+255),0,b
  9640  0037A6  D00A               	goto	l3506
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9644  0037A8  C013  F00A         	movff	pad@buf,fputs@s
  9645  0037AC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9646  0037B0  C011  F00C         	movff	pad@fp,fputs@fp
  9647  0037B4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9648  0037B8  EC3C  F01E         	call	_fputs	;wreg free
  9649  0037BC                     l3506:
  9650  0037BC  FFFF               	dw	65535	; assembler added errata NOP
  9651                           
  9652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9653  0037BE  BE16               	btfsc	pad@p+1,7,c
  9654  0037C0  D005               	goto	l3510
  9655  0037C2  C015  F01A         	movff	pad@p,pad@w
  9656  0037C6  C016  F01B         	movff	pad@p+1,pad@w+1
  9657  0037CA  D005               	goto	l396
  9658  0037CC                     l3510:
  9659  0037CC  FFFF               	dw	65535	; assembler added errata NOP
  9660  0037CE  0E00               	movlw	0
  9661  0037D0  6E1B               	movwf	pad@w+1,c
  9662  0037D2  0E00               	movlw	0
  9663  0037D4  6E1A               	movwf	pad@w,c
  9664  0037D6                     l396:
  9665  0037D6  FFFF               	dw	65535	; assembler added errata NOP
  9666                           
  9667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9668  0037D8  0E00               	movlw	0
  9669  0037DA  6E19               	movwf	pad@i+1,c
  9670  0037DC  0E00               	movlw	0
  9671  0037DE  6E18               	movwf	pad@i,c
  9672                           
  9673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9674  0037E0  D00D               	goto	l3516
  9675  0037E2                     l3512:
  9676  0037E2  FFFF               	dw	65535	; assembler added errata NOP
  9677                           
  9678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9679  0037E4  0E00               	movlw	0
  9680  0037E6  6E02               	movwf	fputc@c+1,c
  9681  0037E8  0E20               	movlw	32
  9682  0037EA  6E01               	movwf	fputc@c,c
  9683  0037EC  C011  F003         	movff	pad@fp,fputc@fp
  9684  0037F0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9685  0037F4  EC7A  F01B         	call	_fputc	;wreg free
  9686                           
  9687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9688  0037F8  4A18               	infsnz	pad@i,f,c
  9689  0037FA  2A19               	incf	pad@i+1,f,c
  9690  0037FC                     l3516:
  9691  0037FC  FFFF               	dw	65535	; assembler added errata NOP
  9692                           
  9693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9694  0037FE  501A               	movf	pad@w,w,c
  9695  003800  5C18               	subwf	pad@i,w,c
  9696  003802  5019               	movf	pad@i+1,w,c
  9697  003804  0A80               	xorlw	128
  9698  003806  6E17               	movwf	??_pad& (0+255),c
  9699  003808  501B               	movf	pad@w+1,w,c
  9700  00380A  0A80               	xorlw	128
  9701  00380C  5817               	subwfb	??_pad& (0+255),w,c
  9702  00380E  A0D8               	btfss	status,0,c
  9703  003810  D7E8               	goto	l3512
  9704                           
  9705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9706  003812  0100               	movlb	0	; () banked
  9707  003814  B1D0               	btfsc	_flags& (0+255),0,b
  9708  003816  D00A               	goto	l3520
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9712  003818  C013  F00A         	movff	pad@buf,fputs@s
  9713  00381C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9714  003820  C011  F00C         	movff	pad@fp,fputs@fp
  9715  003824  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9716  003828  EC3C  F01E         	call	_fputs	;wreg free
  9717  00382C                     l3520:
  9718  00382C  FFFF               	dw	65535	; assembler added errata NOP
  9719                           
  9720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9721  00382E  C013  F001         	movff	pad@buf,strlen@s
  9722  003832  C014  F002         	movff	pad@buf+1,strlen@s+1
  9723  003836  EC0B  F01F         	call	_strlen	;wreg free
  9724  00383A  501A               	movf	pad@w,w,c
  9725  00383C  2401               	addwf	?_strlen,w,c
  9726  00383E  6E11               	movwf	?_pad,c
  9727  003840  501B               	movf	pad@w+1,w,c
  9728  003842  2002               	addwfc	?_strlen+1,w,c
  9729  003844  6E12               	movwf	?_pad+1,c
  9730  003846  0012               	return		;funcret
  9731  003848  FFFF               	dw	65535	; errata NOP
  9732  00384A                     __end_of_pad:
  9733                           	opt callstack 0
  9734                           
  9735 ;; *************** function _strlen *****************
  9736 ;; Defined at:
  9737 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9740 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9743 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2    0[COMRAM] unsigned int 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9753 ;;      Params:         2       0       0       0       0       0       0
  9754 ;;      Locals:         2       0       0       0       0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0
  9756 ;;      Totals:         4       0       0       0       0       0       0
  9757 ;;Total ram usage:        4 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    2
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_pad
  9764 ;;		_stoa
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text39
  9769  003E16                     __ptext39:
  9770                           	opt callstack 0
  9771  003E16                     _strlen:
  9772                           	opt callstack 0
  9773  003E16  FFFF               	dw	65535	; assembler added errata NOP
  9774                           
  9775                           ;incstack = 0
  9776  003E18  C001  F003         	movff	strlen@s,strlen@a
  9777  003E1C  C002  F004         	movff	strlen@s+1,strlen@a+1
  9778  003E20  D003               	goto	l3492
  9779  003E22                     l3490:
  9780  003E22  FFFF               	dw	65535	; assembler added errata NOP
  9781  003E24  4A01               	infsnz	strlen@s,f,c
  9782  003E26  2A02               	incf	strlen@s+1,f,c
  9783  003E28                     l3492:
  9784  003E28  FFFF               	dw	65535	; assembler added errata NOP
  9785  003E2A  C001  FFD9         	movff	strlen@s,fsr2l
  9786  003E2E  C002  FFDA         	movff	strlen@s+1,fsr2h
  9787  003E32  50DF               	movf	indf2,w,c
  9788  003E34  A4D8               	btfss	status,2,c
  9789  003E36  D7F5               	goto	l3490
  9790  003E38  5003               	movf	strlen@a,w,c
  9791  003E3A  5C01               	subwf	strlen@s,w,c
  9792  003E3C  6E01               	movwf	?_strlen,c
  9793  003E3E  5004               	movf	strlen@a+1,w,c
  9794  003E40  5802               	subwfb	strlen@s+1,w,c
  9795  003E42  6E02               	movwf	?_strlen+1,c
  9796  003E44  0012               	return		;funcret
  9797  003E46  FFFF               	dw	65535	; errata NOP
  9798  003E48                     __end_of_strlen:
  9799                           	opt callstack 0
  9800                           
  9801 ;; *************** function _fputs *****************
  9802 ;; Defined at:
  9803 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9806 ;;		 -> dbuf(32), 
  9807 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9808 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  i               2   14[COMRAM] int 
  9811 ;;  c               1   13[COMRAM] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  2    9[COMRAM] int 
  9814 ;; Registers used:
  9815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9821 ;;      Params:         4       0       0       0       0       0       0
  9822 ;;      Locals:         3       0       0       0       0       0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0
  9824 ;;      Totals:         7       0       0       0       0       0       0
  9825 ;;Total ram usage:        7 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:    4
  9828 ;; This function calls:
  9829 ;;		_fputc
  9830 ;; This function is called by:
  9831 ;;		_pad
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text40
  9836  003C78                     __ptext40:
  9837                           	opt callstack 0
  9838  003C78                     _fputs:
  9839                           	opt callstack 0
  9840  003C78  FFFF               	dw	65535	; assembler added errata NOP
  9841                           
  9842                           ;incstack = 0
  9843  003C7A  0E00               	movlw	0
  9844  003C7C  6E10               	movwf	fputs@i+1,c
  9845  003C7E  0E00               	movlw	0
  9846  003C80  6E0F               	movwf	fputs@i,c
  9847  003C82  D00C               	goto	l3486
  9848  003C84                     l3482:
  9849  003C84  FFFF               	dw	65535	; assembler added errata NOP
  9850  003C86  C00E  F001         	movff	fputs@c,fputc@c
  9851  003C8A  6A02               	clrf	fputc@c+1,c
  9852  003C8C  C00C  F003         	movff	fputs@fp,fputc@fp
  9853  003C90  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9854  003C94  EC7A  F01B         	call	_fputc	;wreg free
  9855  003C98  4A0F               	infsnz	fputs@i,f,c
  9856  003C9A  2A10               	incf	fputs@i+1,f,c
  9857  003C9C                     l3486:
  9858  003C9C  FFFF               	dw	65535	; assembler added errata NOP
  9859  003C9E  500F               	movf	fputs@i,w,c
  9860  003CA0  240A               	addwf	fputs@s,w,c
  9861  003CA2  6ED9               	movwf	fsr2l,c
  9862  003CA4  5010               	movf	fputs@i+1,w,c
  9863  003CA6  200B               	addwfc	fputs@s+1,w,c
  9864  003CA8  6EDA               	movwf	fsr2h,c
  9865  003CAA  50DF               	movf	indf2,w,c
  9866  003CAC  6E0E               	movwf	fputs@c,c
  9867  003CAE  500E               	movf	fputs@c,w,c
  9868  003CB0  B4D8               	btfsc	status,2,c
  9869  003CB2  0012               	return		;funcret
  9870  003CB4  FFFF               	dw	65535	; assembler added errata NOP
  9871  003CB6  D7E6               	goto	l3482
  9872  003CB8  FFFF               	dw	65535	; errata NOP
  9873  003CBA                     __end_of_fputs:
  9874                           	opt callstack 0
  9875                           
  9876 ;; *************** function _fputc *****************
  9877 ;; Defined at:
  9878 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  c               2    0[COMRAM] int 
  9881 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9882 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  2    0[COMRAM] int 
  9887 ;; Registers used:
  9888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9894 ;;      Params:         4       0       0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0       0       0
  9896 ;;      Temps:          5       0       0       0       0       0       0
  9897 ;;      Totals:         9       0       0       0       0       0       0
  9898 ;;Total ram usage:        9 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    3
  9901 ;; This function calls:
  9902 ;;		_putch
  9903 ;; This function is called by:
  9904 ;;		_pad
  9905 ;;		_stoa
  9906 ;;		_vfpfcnvrt
  9907 ;;		_fputs
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text41
  9912  0036F4                     __ptext41:
  9913                           	opt callstack 0
  9914  0036F4                     _fputc:
  9915                           	opt callstack 0
  9916  0036F4  FFFF               	dw	65535	; assembler added errata NOP
  9917                           
  9918                           ;incstack = 0
  9919  0036F6  5003               	movf	fputc@fp,w,c
  9920  0036F8  1004               	iorwf	fputc@fp+1,w,c
  9921  0036FA  B4D8               	btfsc	status,2,c
  9922  0036FC  D004               	goto	u2780
  9923  0036FE  5003               	movf	fputc@fp,w,c
  9924  003700  1004               	iorwf	fputc@fp+1,w,c
  9925  003702  A4D8               	btfss	status,2,c
  9926  003704  D005               	goto	l3472
  9927  003706                     u2780:
  9928  003706  FFFF               	dw	65535	; assembler added errata NOP
  9929  003708  5001               	movf	fputc@c,w,c
  9930  00370A  EC24  F000         	call	_putch
  9931  00370E  D045               	goto	l1364
  9932  003710                     l3472:
  9933  003710  FFFF               	dw	65535	; assembler added errata NOP
  9934  003712  EE20 F004          	lfsr	2,4
  9935  003716  5003               	movf	fputc@fp,w,c
  9936  003718  26D9               	addwf	fsr2l,f,c
  9937  00371A  5004               	movf	fputc@fp+1,w,c
  9938  00371C  22DA               	addwfc	fsr2h,f,c
  9939  00371E  50DE               	movf	postinc2,w,c
  9940  003720  10DE               	iorwf	postinc2,w,c
  9941  003722  B4D8               	btfsc	status,2,c
  9942  003724  D016               	goto	u2800
  9943  003726  EE20 F004          	lfsr	2,4
  9944  00372A  5003               	movf	fputc@fp,w,c
  9945  00372C  26D9               	addwf	fsr2l,f,c
  9946  00372E  5004               	movf	fputc@fp+1,w,c
  9947  003730  22DA               	addwfc	fsr2h,f,c
  9948  003732  EE10 F002          	lfsr	1,2
  9949  003736  5003               	movf	fputc@fp,w,c
  9950  003738  26E1               	addwf	fsr1l,f,c
  9951  00373A  5004               	movf	fputc@fp+1,w,c
  9952  00373C  22E2               	addwfc	fsr1h,f,c
  9953  00373E  50DE               	movf	postinc2,w,c
  9954  003740  5CE6               	subwf	postinc1,w,c
  9955  003742  50E6               	movf	postinc1,w,c
  9956  003744  0A80               	xorlw	128
  9957  003746  6E09               	movwf	(??_fputc+4)& (0+255),c
  9958  003748  50DE               	movf	postinc2,w,c
  9959  00374A  0A80               	xorlw	128
  9960  00374C  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  9961  00374E  B0D8               	btfsc	status,0,c
  9962  003750  D024               	goto	l1364
  9963  003752                     u2800:
  9964  003752  FFFF               	dw	65535	; assembler added errata NOP
  9965  003754  EE20 F002          	lfsr	2,2
  9966  003758  5003               	movf	fputc@fp,w,c
  9967  00375A  26D9               	addwf	fsr2l,f,c
  9968  00375C  5004               	movf	fputc@fp+1,w,c
  9969  00375E  22DA               	addwfc	fsr2h,f,c
  9970  003760  CFDE F005          	movff	postinc2,??_fputc
  9971  003764  CFDD F006          	movff	postdec2,??_fputc+1
  9972  003768  C003  FFD9         	movff	fputc@fp,fsr2l
  9973  00376C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9974  003770  CFDE F007          	movff	postinc2,??_fputc+2
  9975  003774  CFDD F008          	movff	postdec2,??_fputc+3
  9976  003778  5005               	movf	??_fputc,w,c
  9977  00377A  2407               	addwf	??_fputc+2,w,c
  9978  00377C  6ED9               	movwf	fsr2l,c
  9979  00377E  5006               	movf	??_fputc+1,w,c
  9980  003780  2008               	addwfc	??_fputc+3,w,c
  9981  003782  6EDA               	movwf	fsr2h,c
  9982  003784  C001  FFDF         	movff	fputc@c,indf2
  9983  003788  EE20 F002          	lfsr	2,2
  9984  00378C  5003               	movf	fputc@fp,w,c
  9985  00378E  26D9               	addwf	fsr2l,f,c
  9986  003790  5004               	movf	fputc@fp+1,w,c
  9987  003792  22DA               	addwfc	fsr2h,f,c
  9988  003794  2ADE               	incf	postinc2,f,c
  9989  003796  0E00               	movlw	0
  9990  003798  22DD               	addwfc	postdec2,f,c
  9991  00379A                     l1364:
  9992  00379A  FFFF               	dw	65535	; assembler added errata NOP
  9993  00379C  0012               	return		;funcret
  9994  00379E  FFFF               	dw	65535	; errata NOP
  9995  0037A0                     __end_of_fputc:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function _putch *****************
  9999 ;; Defined at:
 10000 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  c               1    wreg     unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  c               1    0[COMRAM] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10014 ;;      Params:         0       0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:    2
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_fputc
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text42
 10029  000048                     __ptext42:
 10030                           	opt callstack 0
 10031  000048                     _putch:
 10032                           	opt callstack 0
 10033  000048  FFFF               	dw	65535	; assembler added errata NOP
 10034                           
 10035                           ;incstack = 0
 10036  00004A  0012               	return		;funcret
 10037  00004C  FFFF               	dw	65535	; errata NOP
 10038  00004E                     __end_of_putch:
 10039                           	opt callstack 0
 10040                           
 10041 ;; *************** function _atoi *****************
 10042 ;; Defined at:
 10043 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10046 ;;		 -> STR_2(3), STR_1(4), 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  n               2   20[COMRAM] int 
 10049 ;;  neg             2   13[COMRAM] int 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  2    7[COMRAM] int 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10059 ;;      Params:         2       0       0       0       0       0       0
 10060 ;;      Locals:         9       0       0       0       0       0       0
 10061 ;;      Temps:          4       0       0       0       0       0       0
 10062 ;;      Totals:        15       0       0       0       0       0       0
 10063 ;;Total ram usage:       15 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    3
 10066 ;; This function calls:
 10067 ;;		___wmul
 10068 ;;		_isdigit
 10069 ;;		_isspace
 10070 ;; This function is called by:
 10071 ;;		_vfpfcnvrt
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text43
 10076  002B2C                     __ptext43:
 10077                           	opt callstack 0
 10078  002B2C                     _atoi:
 10079                           	opt callstack 0
 10080  002B2C  FFFF               	dw	65535	; assembler added errata NOP
 10081                           
 10082                           ;incstack = 0
 10083  002B2E  0E00               	movlw	0
 10084  002B30  6E16               	movwf	atoi@n+1,c
 10085  002B32  0E00               	movlw	0
 10086  002B34  6E15               	movwf	atoi@n,c
 10087  002B36  0E00               	movlw	0
 10088  002B38  6E0F               	movwf	atoi@neg+1,c
 10089  002B3A  0E00               	movlw	0
 10090  002B3C  6E0E               	movwf	atoi@neg,c
 10091  002B3E  D003               	goto	l3958
 10092  002B40                     l3956:
 10093  002B40  FFFF               	dw	65535	; assembler added errata NOP
 10094  002B42  4A08               	infsnz	atoi@s,f,c
 10095  002B44  2A09               	incf	atoi@s+1,f,c
 10096  002B46                     l3958:
 10097  002B46  FFFF               	dw	65535	; assembler added errata NOP
 10098  002B48  0E01               	movlw	1
 10099  002B4A  6E14               	movwf	_atoi$1722,c
 10100  002B4C  C008  FFF6         	movff	atoi@s,tblptrl
 10101  002B50  C009  FFF7         	movff	atoi@s+1,tblptrh
 10102  002B54                     	if	0	;tblptru may be non-zero
 10103  002B54                     	endif
 10104  002B54                     	if	0	;tblptru may be non-zero
 10105  002B54                     	endif
 10106  002B54  0008               	tblrd		*
 10107  002B56  FFFF               	dw	65535	; errata NOP
 10108  002B58  50F5               	movf	tablat,w,c
 10109  002B5A  0A20               	xorlw	32
 10110  002B5C  B4D8               	btfsc	status,2,c
 10111  002B5E  D019               	goto	l3966
 10112  002B60  0EF7               	movlw	247
 10113  002B62  6E0A               	movwf	??_atoi& (0+255),c
 10114  002B64  0EFF               	movlw	255
 10115  002B66  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10116  002B68  C008  FFF6         	movff	atoi@s,tblptrl
 10117  002B6C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10118  002B70                     	if	0	;tblptru may be non-zero
 10119  002B70                     	endif
 10120  002B70                     	if	0	;tblptru may be non-zero
 10121  002B70                     	endif
 10122  002B70  0008               	tblrd		*
 10123  002B72  FFFF               	dw	65535	; errata NOP
 10124  002B74  50F5               	movf	tablat,w,c
 10125  002B76  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10126  002B78  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10127  002B7A  500A               	movf	??_atoi,w,c
 10128  002B7C  260C               	addwf	??_atoi+2,f,c
 10129  002B7E  500B               	movf	??_atoi+1,w,c
 10130  002B80  220D               	addwfc	??_atoi+3,f,c
 10131  002B82  500D               	movf	??_atoi+3,w,c
 10132  002B84  E104               	bnz	u3810
 10133  002B86  0E05               	movlw	5
 10134  002B88  5C0C               	subwf	??_atoi+2,w,c
 10135  002B8A  A0D8               	btfss	status,0,c
 10136  002B8C  D002               	goto	l3966
 10137  002B8E                     u3810:
 10138  002B8E  0E00               	movlw	0
 10139  002B90  6E14               	movwf	_atoi$1722,c
 10140  002B92                     l3966:
 10141  002B92  FFFF               	dw	65535	; assembler added errata NOP
 10142  002B94  C014  F010         	movff	_atoi$1722,_atoi$1721
 10143  002B98  6A11               	clrf	_atoi$1721+1,c
 10144  002B9A  5010               	movf	_atoi$1721,w,c
 10145  002B9C  1011               	iorwf	_atoi$1721+1,w,c
 10146  002B9E  B4D8               	btfsc	status,2,c
 10147  002BA0  D00A               	goto	l3976
 10148  002BA2  D7CE               	goto	l3956
 10149  002BA4                     l3972:
 10150  002BA4  FFFF               	dw	65535	; assembler added errata NOP
 10151  002BA6  0E00               	movlw	0
 10152  002BA8  6E0F               	movwf	atoi@neg+1,c
 10153  002BAA  0E01               	movlw	1
 10154  002BAC  6E0E               	movwf	atoi@neg,c
 10155  002BAE                     l3974:
 10156  002BAE  FFFF               	dw	65535	; assembler added errata NOP
 10157  002BB0  4A08               	infsnz	atoi@s,f,c
 10158  002BB2  2A09               	incf	atoi@s+1,f,c
 10159  002BB4  D032               	goto	l3982
 10160  002BB6                     l3976:
 10161  002BB6  FFFF               	dw	65535	; assembler added errata NOP
 10162  002BB8  C008  FFF6         	movff	atoi@s,tblptrl
 10163  002BBC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10164  002BC0                     	if	0	;tblptru may be non-zero
 10165  002BC0                     	endif
 10166  002BC0                     	if	0	;tblptru may be non-zero
 10167  002BC0                     	endif
 10168  002BC0  0008               	tblrd		*
 10169  002BC2  FFFF               	dw	65535	; errata NOP
 10170  002BC4  50F5               	movf	tablat,w,c
 10171  002BC6  6E0A               	movwf	??_atoi& (0+255),c
 10172  002BC8  6A0B               	clrf	(??_atoi+1)& (0+255),c
 10173                           
 10174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10175                           ; Switch size 1, requested type "simple"
 10176                           ; Number of cases is 1, Range of values is 0 to 0
 10177                           ; switch strategies available:
 10178                           ; Name         Instructions Cycles
 10179                           ; simple_byte            4     3 (average)
 10180                           ;	Chosen strategy is simple_byte
 10181  002BCA  500B               	movf	??_atoi+1,w,c
 10182  002BCC  0A00               	xorlw	0	; case 0
 10183  002BCE  A4D8               	btfss	status,2,c
 10184  002BD0  D024               	goto	l3982
 10185                           
 10186                           ; Switch size 1, requested type "simple"
 10187                           ; Number of cases is 2, Range of values is 43 to 45
 10188                           ; switch strategies available:
 10189                           ; Name         Instructions Cycles
 10190                           ; simple_byte            7     4 (average)
 10191                           ;	Chosen strategy is simple_byte
 10192  002BD2  500A               	movf	??_atoi,w,c
 10193  002BD4  0A2B               	xorlw	43	; case 43
 10194  002BD6  B4D8               	btfsc	status,2,c
 10195  002BD8  D7EA               	goto	l3974
 10196  002BDA  0A06               	xorlw	6	; case 45
 10197  002BDC  B4D8               	btfsc	status,2,c
 10198  002BDE  D7E2               	goto	l3972
 10199  002BE0  D01C               	goto	l3982
 10200  002BE2                     l3978:
 10201  002BE2  FFFF               	dw	65535	; assembler added errata NOP
 10202  002BE4  C015  F001         	movff	atoi@n,___wmul@multiplier
 10203  002BE8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10204  002BEC  0E00               	movlw	0
 10205  002BEE  6E04               	movwf	___wmul@multiplicand+1,c
 10206  002BF0  0E0A               	movlw	10
 10207  002BF2  6E03               	movwf	___wmul@multiplicand,c
 10208  002BF4  EC3A  F01F         	call	___wmul	;wreg free
 10209  002BF8  C008  FFF6         	movff	atoi@s,tblptrl
 10210  002BFC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10211  002C00                     	if	0	;tblptru may be non-zero
 10212  002C00                     	endif
 10213  002C00                     	if	0	;tblptru may be non-zero
 10214  002C00                     	endif
 10215  002C00  0008               	tblrd		*
 10216  002C02  FFFF               	dw	65535	; errata NOP
 10217  002C04  50F5               	movf	tablat,w,c
 10218  002C06  5E01               	subwf	?___wmul,f,c
 10219  002C08  0E00               	movlw	0
 10220  002C0A  5A02               	subwfb	?___wmul+1,f,c
 10221  002C0C  0E30               	movlw	48
 10222  002C0E  2401               	addwf	?___wmul,w,c
 10223  002C10  6E15               	movwf	atoi@n,c
 10224  002C12  0E00               	movlw	0
 10225  002C14  2002               	addwfc	?___wmul+1,w,c
 10226  002C16  6E16               	movwf	atoi@n+1,c
 10227  002C18  D7CA               	goto	l3974
 10228  002C1A                     l3982:
 10229  002C1A  FFFF               	dw	65535	; assembler added errata NOP
 10230  002C1C  0ED0               	movlw	208
 10231  002C1E  6E0A               	movwf	??_atoi& (0+255),c
 10232  002C20  0EFF               	movlw	255
 10233  002C22  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10234  002C24  C008  FFF6         	movff	atoi@s,tblptrl
 10235  002C28  C009  FFF7         	movff	atoi@s+1,tblptrh
 10236  002C2C                     	if	0	;tblptru may be non-zero
 10237  002C2C                     	endif
 10238  002C2C                     	if	0	;tblptru may be non-zero
 10239  002C2C                     	endif
 10240  002C2C  0008               	tblrd		*
 10241  002C2E  FFFF               	dw	65535	; errata NOP
 10242  002C30  50F5               	movf	tablat,w,c
 10243  002C32  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10244  002C34  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10245  002C36  500A               	movf	??_atoi,w,c
 10246  002C38  260C               	addwf	??_atoi+2,f,c
 10247  002C3A  500B               	movf	??_atoi+1,w,c
 10248  002C3C  220D               	addwfc	??_atoi+3,f,c
 10249  002C3E  500D               	movf	??_atoi+3,w,c
 10250  002C40  E106               	bnz	u3830
 10251  002C42  0E0A               	movlw	10
 10252  002C44  5C0C               	subwf	??_atoi+2,w,c
 10253  002C46  B0D8               	btfsc	status,0,c
 10254  002C48  D002               	goto	u3830
 10255  002C4A  0E01               	movlw	1
 10256  002C4C  D002               	goto	u3840
 10257  002C4E                     u3830:
 10258  002C4E  FFFF               	dw	65535	; assembler added errata NOP
 10259  002C50  0E00               	movlw	0
 10260  002C52                     u3840:
 10261  002C52  FFFF               	dw	65535	; assembler added errata NOP
 10262  002C54  6E12               	movwf	_atoi$1723,c
 10263  002C56  6A13               	clrf	_atoi$1723+1,c
 10264  002C58  5012               	movf	_atoi$1723,w,c
 10265  002C5A  1013               	iorwf	_atoi$1723+1,w,c
 10266  002C5C  A4D8               	btfss	status,2,c
 10267  002C5E  D7C1               	goto	l3978
 10268  002C60  500E               	movf	atoi@neg,w,c
 10269  002C62  100F               	iorwf	atoi@neg+1,w,c
 10270  002C64  A4D8               	btfss	status,2,c
 10271  002C66  D00D               	goto	l1318
 10272  002C68  C015  F00A         	movff	atoi@n,??_atoi
 10273  002C6C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10274  002C70  1E0A               	comf	??_atoi,f,c
 10275  002C72  1E0B               	comf	??_atoi+1,f,c
 10276  002C74  4A0A               	infsnz	??_atoi,f,c
 10277  002C76  2A0B               	incf	??_atoi+1,f,c
 10278  002C78  C00A  F008         	movff	??_atoi,?_atoi
 10279  002C7C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10280  002C80  D005               	goto	l1321
 10281  002C82                     l1318:
 10282  002C82  FFFF               	dw	65535	; assembler added errata NOP
 10283  002C84  C015  F008         	movff	atoi@n,?_atoi
 10284  002C88  C016  F009         	movff	atoi@n+1,?_atoi+1
 10285  002C8C                     l1321:
 10286  002C8C  FFFF               	dw	65535	; assembler added errata NOP
 10287  002C8E  0012               	return		;funcret
 10288  002C90  FFFF               	dw	65535	; errata NOP
 10289  002C92                     __end_of_atoi:
 10290                           	opt callstack 0
 10291                           
 10292 ;; *************** function _isspace *****************
 10293 ;; Defined at:
 10294 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  c               2    0[COMRAM] int 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  2    0[COMRAM] int 
 10301 ;; Registers used:
 10302 ;;		wreg, status,2, status,0
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10308 ;;      Params:         2       0       0       0       0       0       0
 10309 ;;      Locals:         1       0       0       0       0       0       0
 10310 ;;      Temps:          4       0       0       0       0       0       0
 10311 ;;      Totals:         7       0       0       0       0       0       0
 10312 ;;Total ram usage:        7 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:    2
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_atoi
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text44
 10323  003C34                     __ptext44:
 10324                           	opt callstack 0
 10325  003C34                     _isspace:
 10326                           	opt callstack 0
 10327  003C34  FFFF               	dw	65535	; assembler added errata NOP
 10328                           
 10329                           ;incstack = 0
 10330  003C36  0E01               	movlw	1
 10331  003C38  6E07               	movwf	_isspace$1758,c
 10332  003C3A  0E20               	movlw	32
 10333  003C3C  1801               	xorwf	isspace@c,w,c
 10334  003C3E  1002               	iorwf	isspace@c+1,w,c
 10335  003C40  B4D8               	btfsc	status,2,c
 10336  003C42  D014               	goto	l3682
 10337  003C44  0EF7               	movlw	247
 10338  003C46  6E03               	movwf	??_isspace& (0+255),c
 10339  003C48  0EFF               	movlw	255
 10340  003C4A  6E04               	movwf	(??_isspace+1)& (0+255),c
 10341  003C4C  C001  F005         	movff	isspace@c,??_isspace+2
 10342  003C50  C002  F006         	movff	isspace@c+1,??_isspace+3
 10343  003C54  5003               	movf	??_isspace,w,c
 10344  003C56  2605               	addwf	??_isspace+2,f,c
 10345  003C58  5004               	movf	??_isspace+1,w,c
 10346  003C5A  2206               	addwfc	??_isspace+3,f,c
 10347  003C5C  5006               	movf	??_isspace+3,w,c
 10348  003C5E  E104               	bnz	u3200
 10349  003C60  0E05               	movlw	5
 10350  003C62  5C05               	subwf	??_isspace+2,w,c
 10351  003C64  A0D8               	btfss	status,0,c
 10352  003C66  D002               	goto	l3682
 10353  003C68                     u3200:
 10354  003C68  0E00               	movlw	0
 10355  003C6A  6E07               	movwf	_isspace$1758,c
 10356  003C6C                     l3682:
 10357  003C6C  FFFF               	dw	65535	; assembler added errata NOP
 10358  003C6E  C007  F001         	movff	_isspace$1758,?_isspace
 10359  003C72  6A02               	clrf	?_isspace+1,c
 10360  003C74  0012               	return		;funcret
 10361  003C76  FFFF               	dw	65535	; errata NOP
 10362  003C78                     __end_of_isspace:
 10363                           	opt callstack 0
 10364                           
 10365 ;; *************** function _isdigit *****************
 10366 ;; Defined at:
 10367 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  c               2    0[COMRAM] int 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  2    0[COMRAM] int 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10381 ;;      Params:         2       0       0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0
 10383 ;;      Temps:          4       0       0       0       0       0       0
 10384 ;;      Totals:         6       0       0       0       0       0       0
 10385 ;;Total ram usage:        6 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    2
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		_vfpfcnvrt
 10392 ;;		_atoi
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text45
 10397  003DDE                     __ptext45:
 10398                           	opt callstack 0
 10399  003DDE                     _isdigit:
 10400                           	opt callstack 0
 10401  003DDE  FFFF               	dw	65535	; assembler added errata NOP
 10402                           
 10403                           ;incstack = 0
 10404  003DE0  0ED0               	movlw	208
 10405  003DE2  6E03               	movwf	??_isdigit& (0+255),c
 10406  003DE4  0EFF               	movlw	255
 10407  003DE6  6E04               	movwf	(??_isdigit+1)& (0+255),c
 10408  003DE8  C001  F005         	movff	isdigit@c,??_isdigit+2
 10409  003DEC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10410  003DF0  5003               	movf	??_isdigit,w,c
 10411  003DF2  2605               	addwf	??_isdigit+2,f,c
 10412  003DF4  5004               	movf	??_isdigit+1,w,c
 10413  003DF6  2206               	addwfc	??_isdigit+3,f,c
 10414  003DF8  5006               	movf	??_isdigit+3,w,c
 10415  003DFA  E106               	bnz	u2970
 10416  003DFC  0E0A               	movlw	10
 10417  003DFE  5C05               	subwf	??_isdigit+2,w,c
 10418  003E00  B0D8               	btfsc	status,0,c
 10419  003E02  D002               	goto	u2970
 10420  003E04  0E01               	movlw	1
 10421  003E06  D002               	goto	u2980
 10422  003E08                     u2970:
 10423  003E08  FFFF               	dw	65535	; assembler added errata NOP
 10424  003E0A  0E00               	movlw	0
 10425  003E0C                     u2980:
 10426  003E0C  FFFF               	dw	65535	; assembler added errata NOP
 10427  003E0E  6E01               	movwf	?_isdigit,c
 10428  003E10  6A02               	clrf	?_isdigit+1,c
 10429  003E12  0012               	return		;funcret
 10430  003E14  FFFF               	dw	65535	; errata NOP
 10431  003E16                     __end_of_isdigit:
 10432                           	opt callstack 0
 10433                           
 10434 ;; *************** function ___wmul *****************
 10435 ;; Defined at:
 10436 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  multiplier      2    0[COMRAM] unsigned int 
 10439 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  product         2    4[COMRAM] unsigned int 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  2    0[COMRAM] unsigned int 
 10444 ;; Registers used:
 10445 ;;		wreg, status,2, status,0, prodl, prodh
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10451 ;;      Params:         4       0       0       0       0       0       0
 10452 ;;      Locals:         2       0       0       0       0       0       0
 10453 ;;      Temps:          0       0       0       0       0       0       0
 10454 ;;      Totals:         6       0       0       0       0       0       0
 10455 ;;Total ram usage:        6 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:    2
 10458 ;; This function calls:
 10459 ;;		Nothing
 10460 ;; This function is called by:
 10461 ;;		_atoi
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	text46
 10466  003E74                     __ptext46:
 10467                           	opt callstack 0
 10468  003E74                     ___wmul:
 10469                           	opt callstack 0
 10470  003E74  FFFF               	dw	65535	; assembler added errata NOP
 10471                           
 10472                           ;incstack = 0
 10473  003E76  5001               	movf	___wmul@multiplier,w,c
 10474  003E78  0203               	mulwf	___wmul@multiplicand,c
 10475  003E7A  CFF3 F005          	movff	prodl,___wmul@product
 10476  003E7E  CFF4 F006          	movff	prodh,___wmul@product+1
 10477  003E82  5001               	movf	___wmul@multiplier,w,c
 10478  003E84  0204               	mulwf	___wmul@multiplicand+1,c
 10479  003E86  50F3               	movf	prodl,w,c
 10480  003E88  2606               	addwf	___wmul@product+1,f,c
 10481  003E8A  5002               	movf	___wmul@multiplier+1,w,c
 10482  003E8C  0203               	mulwf	___wmul@multiplicand,c
 10483  003E8E  50F3               	movf	prodl,w,c
 10484  003E90  2606               	addwf	___wmul@product+1,f,c
 10485  003E92  C005  F001         	movff	___wmul@product,?___wmul
 10486  003E96  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10487  003E9A  0012               	return		;funcret
 10488  003E9C  FFFF               	dw	65535	; errata NOP
 10489  003E9E                     __end_of___wmul:
 10490                           	opt callstack 0
 10491                           
 10492 ;; *************** function _getchar *****************
 10493 ;; Defined at:
 10494 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;		None
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;		None
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  2   26[None  ] int 
 10501 ;; Registers used:
 10502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10508 ;;      Params:         0       0       0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0
 10511 ;;      Totals:         0       0       0       0       0       0       0
 10512 ;;Total ram usage:        0 bytes
 10513 ;; Hardware stack levels used:    1
 10514 ;; Hardware stack levels required when called:    4
 10515 ;; This function calls:
 10516 ;;		_fgetc
 10517 ;; This function is called by:
 10518 ;;		_int_to_char
 10519 ;;		_float_to_char
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text47
 10524  003FA8                     __ptext47:
 10525                           	opt callstack 0
 10526  003FA8                     _getchar:
 10527                           	opt callstack 0
 10528  003FA8  FFFF               	dw	65535	; assembler added errata NOP
 10529                           
 10530                           ;	Return value of _getchar is never used
 10531                           
 10532                           ;incstack = 0
 10533  003FAA  0E00               	movlw	0
 10534  003FAC  6E03               	movwf	fgetc@fp,c
 10535  003FAE  0E00               	movlw	0
 10536  003FB0  6E04               	movwf	fgetc@fp+1,c
 10537  003FB2  EC6D  F01C         	call	_fgetc	;wreg free
 10538  003FB6  0012               	return		;funcret
 10539  003FB8  FFFF               	dw	65535	; errata NOP
 10540  003FBA                     __end_of_getchar:
 10541                           	opt callstack 0
 10542                           
 10543 ;; *************** function _fgetc *****************
 10544 ;; Defined at:
 10545 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10548 ;;		 -> NULL(0), 
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;  c               2    9[COMRAM] int 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  2    2[COMRAM] int 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10560 ;;      Params:         2       0       0       0       0       0       0
 10561 ;;      Locals:         2       0       0       0       0       0       0
 10562 ;;      Temps:          5       0       0       0       0       0       0
 10563 ;;      Totals:         9       0       0       0       0       0       0
 10564 ;;Total ram usage:        9 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    3
 10567 ;; This function calls:
 10568 ;;		_getch
 10569 ;; This function is called by:
 10570 ;;		_getchar
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text48
 10575  0038DA                     __ptext48:
 10576                           	opt callstack 0
 10577  0038DA                     _fgetc:
 10578                           	opt callstack 0
 10579  0038DA  FFFF               	dw	65535	; assembler added errata NOP
 10580                           
 10581                           ;incstack = 0
 10582  0038DC  5003               	movf	fgetc@fp,w,c
 10583  0038DE  1004               	iorwf	fgetc@fp+1,w,c
 10584  0038E0  A4D8               	btfss	status,2,c
 10585  0038E2  D012               	goto	l4618
 10586  0038E4  507E               	movf	_ungetcnt,w,c
 10587  0038E6  B4D8               	btfsc	status,2,c
 10588  0038E8  D007               	goto	l4616
 10589  0038EA  0E00               	movlw	0
 10590  0038EC  6E0B               	movwf	fgetc@c+1,c
 10591  0038EE  0E00               	movlw	0
 10592  0038F0  6E0A               	movwf	fgetc@c,c
 10593  0038F2  0E00               	movlw	0
 10594  0038F4  6E7E               	movwf	_ungetcnt,c
 10595  0038F6  D02F               	goto	l4620
 10596  0038F8                     l4616:
 10597  0038F8  FFFF               	dw	65535	; assembler added errata NOP
 10598  0038FA  ECF3  F01F         	call	_getch	;wreg free
 10599  0038FE  C001  F00A         	movff	?_getch,fgetc@c
 10600  003902  C002  F00B         	movff	?_getch+1,fgetc@c+1
 10601  003906  D027               	goto	l4620
 10602  003908                     l4618:
 10603  003908  FFFF               	dw	65535	; assembler added errata NOP
 10604  00390A  EE20 F002          	lfsr	2,2
 10605  00390E  5003               	movf	fgetc@fp,w,c
 10606  003910  26D9               	addwf	fsr2l,f,c
 10607  003912  5004               	movf	fgetc@fp+1,w,c
 10608  003914  22DA               	addwfc	fsr2h,f,c
 10609  003916  CFDE F005          	movff	postinc2,??_fgetc
 10610  00391A  CFDD F006          	movff	postdec2,??_fgetc+1
 10611  00391E  C003  FFD9         	movff	fgetc@fp,fsr2l
 10612  003922  C004  FFDA         	movff	fgetc@fp+1,fsr2h
 10613  003926  CFDE F007          	movff	postinc2,??_fgetc+2
 10614  00392A  CFDD F008          	movff	postdec2,??_fgetc+3
 10615  00392E  5005               	movf	??_fgetc,w,c
 10616  003930  2407               	addwf	??_fgetc+2,w,c
 10617  003932  6ED9               	movwf	fsr2l,c
 10618  003934  5006               	movf	??_fgetc+1,w,c
 10619  003936  2008               	addwfc	??_fgetc+3,w,c
 10620  003938  6EDA               	movwf	fsr2h,c
 10621  00393A  50DF               	movf	indf2,w,c
 10622  00393C  6E09               	movwf	(??_fgetc+4)& (0+255),c
 10623  00393E  5009               	movf	??_fgetc+4,w,c
 10624  003940  6E0A               	movwf	fgetc@c,c
 10625  003942  6A0B               	clrf	fgetc@c+1,c
 10626  003944  EE20 F002          	lfsr	2,2
 10627  003948  5003               	movf	fgetc@fp,w,c
 10628  00394A  26D9               	addwf	fsr2l,f,c
 10629  00394C  5004               	movf	fgetc@fp+1,w,c
 10630  00394E  22DA               	addwfc	fsr2h,f,c
 10631  003950  2ADE               	incf	postinc2,f,c
 10632  003952  0E00               	movlw	0
 10633  003954  22DD               	addwfc	postdec2,f,c
 10634  003956                     l4620:
 10635  003956  FFFF               	dw	65535	; assembler added errata NOP
 10636  003958  C00A  F003         	movff	fgetc@c,?_fgetc
 10637  00395C  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 10638  003960  0012               	return		;funcret
 10639  003962  FFFF               	dw	65535	; errata NOP
 10640  003964                     __end_of_fgetc:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _getch *****************
 10644 ;; Defined at:
 10645 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  2    0[COMRAM] int 
 10652 ;; Registers used:
 10653 ;;		None
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10659 ;;      Params:         2       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0
 10662 ;;      Totals:         2       0       0       0       0       0       0
 10663 ;;Total ram usage:        2 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    2
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_fgetc
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text49
 10674  003FE6                     __ptext49:
 10675                           	opt callstack 0
 10676  003FE6                     _getch:
 10677                           	opt callstack 0
 10678  003FE6  FFFF               	dw	65535	; assembler added errata NOP
 10679                           
 10680                           ;incstack = 0
 10681  003FE8  6801               	setf	?_getch,c
 10682  003FEA  6802               	setf	?_getch+1,c
 10683  003FEC  0012               	return		;funcret
 10684  003FEE  FFFF               	dw	65535	; errata NOP
 10685  003FF0                     __end_of_getch:
 10686                           	opt callstack 0
 10687                           
 10688 ;; *************** function _UARTSendString *****************
 10689 ;; Defined at:
 10690 ;;		line 72 in file "serial.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10693 ;;		 -> STR_15(24), STR_14(13), STR_13(9), STR_12(13), 
 10694 ;;		 -> STR_11(9), STR_10(26), STR_9(9), STR_8(3), 
 10695 ;;		 -> STR_7(17), STR_6(12), STR_5(3), STR_4(24), 
 10696 ;;		 -> STR_3(29), int_to_char@result(10), 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  i               2   36[BANK0 ] int 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10708 ;;      Params:         0       2       0       0       0       0       0
 10709 ;;      Locals:         0       2       0       0       0       0       0
 10710 ;;      Temps:          0       2       0       0       0       0       0
 10711 ;;      Totals:         0       6       0       0       0       0       0
 10712 ;;Total ram usage:        6 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    3
 10715 ;; This function calls:
 10716 ;;		_UARTSendChar
 10717 ;; This function is called by:
 10718 ;;		_main
 10719 ;;		_read_SRAM
 10720 ;;		_write_SRAM
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text50
 10725  003964                     __ptext50:
 10726                           	opt callstack 0
 10727  003964                     _UARTSendString:
 10728                           	opt callstack 0
 10729  003964  FFFF               	dw	65535	; assembler added errata NOP
 10730                           
 10731                           ;serial.c: 73:   TRISCbits.TRISC7 = 0;
 10732                           
 10733                           ;incstack = 0
 10734  003966  9E94               	bcf	3988,7,c	;volatile
 10735                           
 10736                           ;serial.c: 74:   int i = 0;
 10737  003968  0E00               	movlw	0
 10738  00396A  0100               	movlb	0	; () banked
 10739  00396C  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
 10740  00396E  0E00               	movlw	0
 10741  003970  6FA4               	movwf	UARTSendString@i& (0+255),b
 10742                           
 10743                           ;serial.c: 75:   while (c[i] != '\0') {
 10744  003972  D01E               	goto	l4934
 10745  003974                     l4930:
 10746  003974  FFFF               	dw	65535	; assembler added errata NOP
 10747                           
 10748                           ;serial.c: 76:     UARTSendChar(c[i]);
 10749  003976  0100               	movlb	0	; () banked
 10750  003978  51A4               	movf	UARTSendString@i& (0+255),w,b
 10751  00397A  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10752  00397C  6FA2               	movwf	??_UARTSendString& (0+255),b
 10753  00397E  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10754  003980  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10755  003982  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10756  003984  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10757  003988  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10758  00398C  6AF8               	clrf	tblptru,c
 10759  00398E  0E05               	movlw	(high __ramtop+-1)
 10760  003990  64F7               	cpfsgt	tblptrh,c
 10761  003992  D004               	bra	u5227
 10762  003994  0008               	tblrd		*
 10763  003996  FFFF               	dw	65535	; errata NOP
 10764  003998  50F5               	movf	tablat,w,c
 10765  00399A  D005               	bra	u5220
 10766  00399C                     u5227:
 10767  00399C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10768  0039A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10769  0039A4  50EF               	movf	indf0,w,c
 10770  0039A6                     u5220:
 10771  0039A6  ECB6  F01F         	call	_UARTSendChar
 10772                           
 10773                           ;serial.c: 77:     i++;
 10774  0039AA  0100               	movlb	0	; () banked
 10775  0039AC  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
 10776  0039AE  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
 10777  0039B0                     l4934:
 10778  0039B0  FFFF               	dw	65535	; assembler added errata NOP
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;serial.c: 75:   while (c[i] != '\0') {
 10782  0039B2  51A4               	movf	UARTSendString@i& (0+255),w,b
 10783  0039B4  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10784  0039B6  6FA2               	movwf	??_UARTSendString& (0+255),b
 10785  0039B8  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10786  0039BA  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10787  0039BC  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10788  0039BE  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10789  0039C2  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10790  0039C6  6AF8               	clrf	tblptru,c
 10791  0039C8  0E05               	movlw	(high __ramtop+-1)
 10792  0039CA  64F7               	cpfsgt	tblptrh,c
 10793  0039CC  D004               	bra	u5237
 10794  0039CE  0008               	tblrd		*
 10795  0039D0  FFFF               	dw	65535	; errata NOP
 10796  0039D2  50F5               	movf	tablat,w,c
 10797  0039D4  D005               	bra	u5230
 10798  0039D6                     u5237:
 10799  0039D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10800  0039DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10801  0039DE  50EF               	movf	indf0,w,c
 10802  0039E0                     u5230:
 10803  0039E0  0900               	iorlw	0
 10804  0039E2  B4D8               	btfsc	status,2,c
 10805  0039E4  0012               	return		;funcret
 10806  0039E6  FFFF               	dw	65535	; assembler added errata NOP
 10807  0039E8  D7C5               	goto	l4930
 10808  0039EA  FFFF               	dw	65535	; errata NOP
 10809  0039EC                     __end_of_UARTSendString:
 10810                           	opt callstack 0
 10811                           
 10812 ;; *************** function _UARTNewLine *****************
 10813 ;; Defined at:
 10814 ;;		line 48 in file "serial.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;		None
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;		None
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10828 ;;      Params:         0       0       0       0       0       0       0
 10829 ;;      Locals:         0       0       0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0
 10831 ;;      Totals:         0       0       0       0       0       0       0
 10832 ;;Total ram usage:        0 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:    3
 10835 ;; This function calls:
 10836 ;;		_UARTSendChar
 10837 ;; This function is called by:
 10838 ;;		_main
 10839 ;;		_read_SRAM
 10840 ;;		_write_SRAM
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text51
 10845  003F58                     __ptext51:
 10846                           	opt callstack 0
 10847  003F58                     _UARTNewLine:
 10848                           	opt callstack 0
 10849  003F58  FFFF               	dw	65535	; assembler added errata NOP
 10850                           
 10851                           ;serial.c: 49:   TRISCbits.TRISC7 = 0;
 10852                           
 10853                           ;incstack = 0
 10854  003F5A  9E94               	bcf	3988,7,c	;volatile
 10855                           
 10856                           ;serial.c: 50:   UARTSendChar(0x0a);
 10857  003F5C  0E0A               	movlw	10
 10858  003F5E  ECB6  F01F         	call	_UARTSendChar
 10859                           
 10860                           ;serial.c: 51:   UARTSendChar(0x0d);
 10861  003F62  0E0D               	movlw	13
 10862  003F64  ECB6  F01F         	call	_UARTSendChar
 10863  003F68  0012               	return		;funcret
 10864  003F6A  FFFF               	dw	65535	; errata NOP
 10865  003F6C                     __end_of_UARTNewLine:
 10866                           	opt callstack 0
 10867                           
 10868 ;; *************** function _UARTSendChar *****************
 10869 ;; Defined at:
 10870 ;;		line 54 in file "serial.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  c               1    wreg     unsigned char 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;  c               1    0[COMRAM] unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10884 ;;      Params:         0       0       0       0       0       0       0
 10885 ;;      Locals:         1       0       0       0       0       0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0
 10887 ;;      Totals:         1       0       0       0       0       0       0
 10888 ;;Total ram usage:        1 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:    2
 10891 ;; This function calls:
 10892 ;;		Nothing
 10893 ;; This function is called by:
 10894 ;;		_read_SRAM
 10895 ;;		_write_SRAM
 10896 ;;		_UARTNewLine
 10897 ;;		_UARTSendString
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text52
 10902  003F6C                     __ptext52:
 10903                           	opt callstack 0
 10904  003F6C                     _UARTSendChar:
 10905                           	opt callstack 0
 10906  003F6C  FFFF               	dw	65535	; assembler added errata NOP
 10907                           
 10908                           ;incstack = 0
 10909                           ;UARTSendChar@c stored from wreg
 10910  003F6E  6E01               	movwf	UARTSendChar@c,c
 10911                           
 10912                           ;serial.c: 55:   TRISCbits.TRISC7 = 0;
 10913  003F70  9E94               	bcf	3988,7,c	;volatile
 10914  003F72                     l234:
 10915  003F72  FFFF               	dw	65535	; assembler added errata NOP
 10916  003F74  A2AC               	btfss	4012,1,c	;volatile
 10917  003F76  D7FD               	goto	l234
 10918                           
 10919                           ;serial.c: 57:   TXREG = c;
 10920  003F78  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 10921  003F7C  0012               	return		;funcret
 10922  003F7E  FFFF               	dw	65535	; errata NOP
 10923  003F80                     __end_of_UARTSendChar:
 10924                           	opt callstack 0
 10925                           
 10926 ;; *************** function _interrupt_enable *****************
 10927 ;; Defined at:
 10928 ;;		line 15 in file "serial.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		None
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10942 ;;      Params:         0       0       0       0       0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    2
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_main
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text53
 10957  003FBA                     __ptext53:
 10958                           	opt callstack 0
 10959  003FBA                     _interrupt_enable:
 10960                           	opt callstack 0
 10961  003FBA  FFFF               	dw	65535	; assembler added errata NOP
 10962                           
 10963                           ;serial.c: 16:   INTCONbits.GIE = 1;
 10964                           
 10965                           ;incstack = 0
 10966  003FBC  8EF2               	bsf	4082,7,c	;volatile
 10967                           
 10968                           ;serial.c: 17:   INTCONbits.PEIE = 1;
 10969  003FBE  8CF2               	bsf	4082,6,c	;volatile
 10970                           
 10971                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
 10972  003FC0  8AF2               	bsf	4082,5,c	;volatile
 10973                           
 10974                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
 10975  003FC2  84F1               	bsf	4081,2,c	;volatile
 10976                           
 10977                           ;serial.c: 20:   RCONbits.IPEN = 1;
 10978  003FC4  8ED0               	bsf	4048,7,c	;volatile
 10979  003FC6  0012               	return		;funcret
 10980  003FC8  FFFF               	dw	65535	; errata NOP
 10981  003FCA                     __end_of_interrupt_enable:
 10982                           	opt callstack 0
 10983                           
 10984 ;; *************** function _interrupt_disable *****************
 10985 ;; Defined at:
 10986 ;;		line 23 in file "serial.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		None
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11000 ;;      Params:         0       0       0       0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0
 11003 ;;      Totals:         0       0       0       0       0       0       0
 11004 ;;Total ram usage:        0 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    2
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_main
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text54
 11015  003FD8                     __ptext54:
 11016                           	opt callstack 0
 11017  003FD8                     _interrupt_disable:
 11018                           	opt callstack 0
 11019  003FD8  FFFF               	dw	65535	; assembler added errata NOP
 11020                           
 11021                           ;serial.c: 24:   INTCONbits.GIE = 0;
 11022                           
 11023                           ;incstack = 0
 11024  003FDA  9EF2               	bcf	4082,7,c	;volatile
 11025                           
 11026                           ;serial.c: 25:   INTCONbits.PEIE = 0;
 11027  003FDC  9CF2               	bcf	4082,6,c	;volatile
 11028                           
 11029                           ;serial.c: 26:   INTCONbits.TMR0IE = 0;
 11030  003FDE  9AF2               	bcf	4082,5,c	;volatile
 11031                           
 11032                           ;serial.c: 27:   INTCON2bits.TMR0IP = 0;
 11033  003FE0  94F1               	bcf	4081,2,c	;volatile
 11034  003FE2  0012               	return		;funcret
 11035  003FE4  FFFF               	dw	65535	; errata NOP
 11036  003FE6                     __end_of_interrupt_disable:
 11037                           	opt callstack 0
 11038                           
 11039 ;; *************** function _initialize_TX *****************
 11040 ;; Defined at:
 11041 ;;		line 30 in file "serial.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11055 ;;      Params:         0       0       0       0       0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    2
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_main
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text55
 11070  003F80                     __ptext55:
 11071                           	opt callstack 0
 11072  003F80                     _initialize_TX:
 11073                           	opt callstack 0
 11074  003F80  FFFF               	dw	65535	; assembler added errata NOP
 11075                           
 11076                           ;serial.c: 31:   TXSTAbits.TX9 = 1;
 11077                           
 11078                           ;incstack = 0
 11079  003F82  8CAC               	bsf	4012,6,c	;volatile
 11080                           
 11081                           ;serial.c: 32:   TXSTAbits.TXEN = 1;
 11082  003F84  8AAC               	bsf	4012,5,c	;volatile
 11083                           
 11084                           ;serial.c: 33:   TXSTAbits.SYNC = 0;
 11085  003F86  98AC               	bcf	4012,4,c	;volatile
 11086                           
 11087                           ;serial.c: 34:   TXSTAbits.BRGH = 0;
 11088  003F88  94AC               	bcf	4012,2,c	;volatile
 11089                           
 11090                           ;serial.c: 35:   TXSTAbits.TX9D = 1;
 11091  003F8A  80AC               	bsf	4012,0,c	;volatile
 11092                           
 11093                           ;serial.c: 36:   SPBRG = 25;
 11094  003F8C  0E19               	movlw	25
 11095  003F8E  6EAF               	movwf	4015,c	;volatile
 11096  003F90  0012               	return		;funcret
 11097  003F92  FFFF               	dw	65535	; errata NOP
 11098  003F94                     __end_of_initialize_TX:
 11099                           	opt callstack 0
 11100                           
 11101 ;; *************** function _initialize_RX *****************
 11102 ;; Defined at:
 11103 ;;		line 39 in file "serial.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11117 ;;      Params:         0       0       0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    2
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_main
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text56
 11132  003F94                     __ptext56:
 11133                           	opt callstack 0
 11134  003F94                     _initialize_RX:
 11135                           	opt callstack 0
 11136  003F94  FFFF               	dw	65535	; assembler added errata NOP
 11137                           
 11138                           ;serial.c: 40:   RCSTA = 0x00;
 11139                           
 11140                           ;incstack = 0
 11141  003F96  0E00               	movlw	0
 11142  003F98  6EAB               	movwf	4011,c	;volatile
 11143                           
 11144                           ;serial.c: 41:   RCSTAbits.SPEN = 1;
 11145  003F9A  8EAB               	bsf	4011,7,c	;volatile
 11146                           
 11147                           ;serial.c: 42:   RCSTAbits.RX9 = 1;
 11148  003F9C  8CAB               	bsf	4011,6,c	;volatile
 11149                           
 11150                           ;serial.c: 43:   RCSTAbits.CREN = 1;
 11151  003F9E  88AB               	bsf	4011,4,c	;volatile
 11152                           
 11153                           ;serial.c: 44:   RCSTAbits.ADDEN = 0;
 11154  003FA0  96AB               	bcf	4011,3,c	;volatile
 11155                           
 11156                           ;serial.c: 45:   RCSTAbits.RX9D = 1;
 11157  003FA2  80AB               	bsf	4011,0,c	;volatile
 11158  003FA4  0012               	return		;funcret
 11159  003FA6  FFFF               	dw	65535	; errata NOP
 11160  003FA8                     __end_of_initialize_RX:
 11161                           	opt callstack 0
 11162                           
 11163 ;; *************** function _initialize_PWM *****************
 11164 ;; Defined at:
 11165 ;;		line 5 in file "pwm.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  freq            2    0[COMRAM] int 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11179 ;;      Params:         2       0       0       0       0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0
 11182 ;;      Totals:         2       0       0       0       0       0       0
 11183 ;;Total ram usage:        2 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    2
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_main
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text57
 11194  003F2A                     __ptext57:
 11195                           	opt callstack 0
 11196  003F2A                     _initialize_PWM:
 11197                           	opt callstack 0
 11198  003F2A  FFFF               	dw	65535	; assembler added errata NOP
 11199                           
 11200                           ;pwm.c: 6:   T2CON &= ~(0x04);
 11201                           
 11202                           ;incstack = 0
 11203  003F2C  94CA               	bcf	4042,2,c	;volatile
 11204                           
 11205                           ;pwm.c: 7:   PR2 = 0xFF;
 11206  003F2E  68CB               	setf	4043,c	;volatile
 11207                           
 11208                           ;pwm.c: 8:   CCPR1L = 0xAA;
 11209  003F30  0EAA               	movlw	170
 11210  003F32  6EBE               	movwf	4030,c	;volatile
 11211                           
 11212                           ;pwm.c: 9:   CCP1CON |= 0x00;
 11213  003F34  50BD               	movf	4029,w,c	;volatile
 11214                           
 11215                           ;pwm.c: 10:   T2CON = 0x07;
 11216  003F36  0E07               	movlw	7
 11217  003F38  6ECA               	movwf	4042,c	;volatile
 11218                           
 11219                           ;pwm.c: 11:   CCP1CON |= 0x0C;
 11220  003F3A  0E0C               	movlw	12
 11221  003F3C  12BD               	iorwf	4029,f,c	;volatile
 11222  003F3E  0012               	return		;funcret
 11223  003F40  FFFF               	dw	65535	; errata NOP
 11224  003F42                     __end_of_initialize_PWM:
 11225                           	opt callstack 0
 11226                           
 11227 ;; *************** function _UARTRecieveChar *****************
 11228 ;; Defined at:
 11229 ;;		line 60 in file "serial.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      unsigned char 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11243 ;;      Params:         0       0       0       0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0
 11245 ;;      Temps:          1       0       0       0       0       0       0
 11246 ;;      Totals:         1       0       0       0       0       0       0
 11247 ;;Total ram usage:        1 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    2
 11250 ;; This function calls:
 11251 ;;		Nothing
 11252 ;; This function is called by:
 11253 ;;		_main
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text58
 11258  003E48                     __ptext58:
 11259                           	opt callstack 0
 11260  003E48                     _UARTRecieveChar:
 11261                           	opt callstack 0
 11262  003E48  FFFF               	dw	65535	; assembler added errata NOP
 11263                           
 11264                           ;serial.c: 61:   while (RCIF == 0) {
 11265                           
 11266                           ;incstack = 0
 11267  003E4A  D00E               	goto	l5088
 11268  003E4C                     l241:
 11269  003E4C  FFFF               	dw	65535	; assembler added errata NOP
 11270                           
 11271                           ;serial.c: 62:     if (RCSTAbits.OERR == 1) {
 11272  003E4E  A2AB               	btfss	4011,1,c	;volatile
 11273  003E50  D00B               	goto	l5088
 11274                           
 11275                           ;serial.c: 63:       RCSTAbits.OERR = 0;
 11276  003E52  92AB               	bcf	4011,1,c	;volatile
 11277                           
 11278                           ;serial.c: 64:       RCSTAbits.CREN = 0;
 11279  003E54  98AB               	bcf	4011,4,c	;volatile
 11280                           
 11281                           ;serial.c: 65:       RCSTAbits.CREN = 1;
 11282  003E56  88AB               	bsf	4011,4,c	;volatile
 11283                           
 11284                           ;serial.c: 66:       _delay((unsigned long)((10)*(16000000/4000.0)));
 11285  003E58  0E27               	movlw	39
 11286  003E5A  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 11287  003E5C  0EFC               	movlw	252
 11288  003E5E                     u5557:
 11289  003E5E  FFFF               	dw	65535	; errata NOP
 11290  003E60  2EE8               	decfsz	wreg,f,c
 11291  003E62  D7FD               	bra	u5557
 11292  003E64  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 11293  003E66  D7FB               	bra	u5557
 11294  003E68                     l5088:
 11295  003E68  FFFF               	dw	65535	; assembler added errata NOP
 11296                           
 11297                           ;serial.c: 61:   while (RCIF == 0) {
 11298  003E6A  AA9E               	btfss	3998,5,c	;volatile
 11299  003E6C  D7EF               	goto	l241
 11300                           
 11301                           ;serial.c: 69:   return RCREG1;
 11302  003E6E  50AE               	movf	4014,w,c	;volatile
 11303  003E70  0012               	return		;funcret
 11304  003E72  FFFF               	dw	65535	; errata NOP
 11305  003E74                     __end_of_UARTRecieveChar:
 11306                           	opt callstack 0
 11307                           
 11308 ;; *************** function _Timer0_Init *****************
 11309 ;; Defined at:
 11310 ;;		line 8 in file "timer.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;		None
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, status,2
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11324 ;;      Params:         0       0       0       0       0       0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    2
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		_main
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text59
 11339  003E9E                     __ptext59:
 11340                           	opt callstack 0
 11341  003E9E                     _Timer0_Init:
 11342                           	opt callstack 0
 11343  003E9E  FFFF               	dw	65535	; assembler added errata NOP
 11344                           
 11345                           ;timer.c: 9:  time_ms = 0;
 11346                           
 11347                           ;incstack = 0
 11348  003EA0  0E00               	movlw	0
 11349  003EA2  0100               	movlb	0	; () banked
 11350  003EA4  6FC4               	movwf	_time_ms& (0+255),b	;volatile
 11351  003EA6  0E00               	movlw	0
 11352  003EA8  6FC5               	movwf	(_time_ms+1)& (0+255),b	;volatile
 11353  003EAA  0E00               	movlw	0
 11354  003EAC  6FC6               	movwf	(_time_ms+2)& (0+255),b	;volatile
 11355  003EAE  0E00               	movlw	0
 11356  003EB0  6FC7               	movwf	(_time_ms+3)& (0+255),b	;volatile
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 11360  003EB2  9CD5               	bcf	4053,6,c	;volatile
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;timer.c: 11:  TMR0H = 0xFF;
 11364  003EB4  68D7               	setf	4055,c	;volatile
 11365                           
 11366                           ;timer.c: 12:  TMR0L = 0x34;
 11367  003EB6  0E34               	movlw	52
 11368  003EB8  6ED6               	movwf	4054,c	;volatile
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 11372  003EBA  94F2               	bcf	4082,2,c	;volatile
 11373                           
 11374                           ;timer.c: 14:  T0CON = 0x00;
 11375  003EBC  0E00               	movlw	0
 11376  003EBE  6ED5               	movwf	4053,c	;volatile
 11377                           
 11378                           ; BSR set to: 0
 11379  003EC0  0012               	return		;funcret
 11380  003EC2  FFFF               	dw	65535	; errata NOP
 11381  003EC4                     __end_of_Timer0_Init:
 11382                           	opt callstack 0
 11383                           
 11384 ;; *************** function _timingISR *****************
 11385 ;; Defined at:
 11386 ;;		line 31 in file "timer.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2, status,0, cstack
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11400 ;;      Params:         0       0       0       0       0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0
 11403 ;;      Totals:         0       0       0       0       0       0       0
 11404 ;;Total ram usage:        0 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; Hardware stack levels required when called:    1
 11407 ;; This function calls:
 11408 ;;		i2_Timer0_StartTimer
 11409 ;; This function is called by:
 11410 ;;		Interrupt level 2
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	intcode
 11415  000008                     __pintcode:
 11416                           	opt callstack 0
 11417  000008                     _timingISR:
 11418                           	opt callstack 0
 11419  000008  FFFF               	dw	65535	; assembler added errata NOP
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;incstack = 0
 11423  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11424                           
 11425                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11426  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11427  00000E  AAF2               	btfss	4082,5,c	;volatile
 11428  000010  D00D               	goto	i2l297
 11429                           
 11430                           ;timer.c: 33:   TMR0IF = 0;
 11431  000012  94F2               	bcf	4082,2,c	;volatile
 11432                           
 11433                           ;timer.c: 34:   time_ms++;
 11434  000014  0E01               	movlw	1
 11435  000016  0100               	movlb	0	; () banked
 11436  000018  27C4               	addwf	_time_ms& (0+255),f,b	;volatile
 11437  00001A  0E00               	movlw	0
 11438  00001C  23C5               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11439  00001E  23C6               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11440  000020  23C7               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;timer.c: 35:   TMR0H = 0xFF;
 11444  000022  68D7               	setf	4055,c	;volatile
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;timer.c: 36:   TMR0L = 0x34;
 11448  000024  0E34               	movlw	52
 11449  000026  6ED6               	movwf	4054,c	;volatile
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;timer.c: 37:   Timer0_StartTimer();
 11453  000028  EC1C  F000         	call	i2_Timer0_StartTimer	;wreg free
 11454  00002C                     i2l297:
 11455  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11456  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11457  000030  0011               	retfie		f
 11458  000032  FFFF               	dw	65535	; errata NOP
 11459  000034                     __end_of_timingISR:
 11460                           	opt callstack 0
 11461                           
 11462 ;; *************** function i2_Timer0_StartTimer *****************
 11463 ;; Defined at:
 11464 ;;		line 21 in file "timer.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;		None
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  2    0[None  ] int 
 11471 ;; Registers used:
 11472 ;;		None
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11478 ;;      Params:         0       0       0       0       0       0       0
 11479 ;;      Locals:         0       0       0       0       0       0       0
 11480 ;;      Temps:          0       0       0       0       0       0       0
 11481 ;;      Totals:         0       0       0       0       0       0       0
 11482 ;;Total ram usage:        0 bytes
 11483 ;; Hardware stack levels used:    1
 11484 ;; This function calls:
 11485 ;;		Nothing
 11486 ;; This function is called by:
 11487 ;;		_timingISR
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text61
 11492  000038                     __ptext61:
 11493                           	opt callstack 0
 11494  000038                     i2_Timer0_StartTimer:
 11495                           	opt callstack 0
 11496  000038  FFFF               	dw	65535	; assembler added errata NOP
 11497                           
 11498                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11499                           
 11500                           ;incstack = 0
 11501  00003A  8ED5               	bsf	4053,7,c	;volatile
 11502                           
 11503                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11504  00003C  0012               	return		;funcret
 11505  00003E  FFFF               	dw	65535	; errata NOP
 11506  000040                     __end_ofi2_Timer0_StartTimer:
 11507                           	opt callstack 0
 11508                           
 11509                           	psect	rparam
 11510  0000                     
 11511                           	psect	temp
 11512  00007F                     btemp:
 11513                           	opt callstack 0
 11514  00007F                     	ds	1
 11515  0000                     int$flags	set	btemp
 11516  0000                     wtemp8	set	btemp+1
 11517  0000                     ttemp5	set	btemp+1
 11518  0000                     ttemp6	set	btemp+4
 11519  0000                     ttemp7	set	btemp+8
 11520                           tosu	equ	0xFFF
 11521                           tosh	equ	0xFFE
 11522                           tosl	equ	0xFFD
 11523                           stkptr	equ	0xFFC
 11524                           pclatu	equ	0xFFB
 11525                           pclath	equ	0xFFA
 11526                           pcl	equ	0xFF9
 11527                           tblptru	equ	0xFF8
 11528                           tblptrh	equ	0xFF7
 11529                           tblptrl	equ	0xFF6
 11530                           tablat	equ	0xFF5
 11531                           prodh	equ	0xFF4
 11532                           prodl	equ	0xFF3
 11533                           indf0	equ	0xFEF
 11534                           postinc0	equ	0xFEE
 11535                           postdec0	equ	0xFED
 11536                           preinc0	equ	0xFEC
 11537                           plusw0	equ	0xFEB
 11538                           fsr0h	equ	0xFEA
 11539                           fsr0l	equ	0xFE9
 11540                           wreg	equ	0xFE8
 11541                           indf1	equ	0xFE7
 11542                           postinc1	equ	0xFE6
 11543                           postdec1	equ	0xFE5
 11544                           preinc1	equ	0xFE4
 11545                           plusw1	equ	0xFE3
 11546                           fsr1h	equ	0xFE2
 11547                           fsr1l	equ	0xFE1
 11548                           bsr	equ	0xFE0
 11549                           indf2	equ	0xFDF
 11550                           postinc2	equ	0xFDE
 11551                           postdec2	equ	0xFDD
 11552                           preinc2	equ	0xFDC
 11553                           plusw2	equ	0xFDB
 11554                           fsr2h	equ	0xFDA
 11555                           fsr2l	equ	0xFD9
 11556                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     59     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1724_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 29
		 -> STR_15(CODE[24]), STR_14(CODE[13]), STR_13(CODE[9]), STR_12(CODE[13]), 
		 -> STR_11(CODE[9]), STR_10(CODE[26]), STR_9(CODE[9]), STR_8(CODE[3]), 
		 -> STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[3]), STR_4(CODE[24]), 
		 -> STR_3(CODE[29]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _write_SRAM->_int_to_char
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_SRAM
    _write_SRAM->_UARTSendString
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  166992
                                             52 BANK0      7     7      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                  _interrupt_disable
                   _interrupt_enable
                          _read_SRAM
                     _set_duty_cycle
                         _write_SRAM
 ---------------------------------------------------------------------------------
 (1) _write_SRAM                                          14    14      0   57713
                                             38 BANK0     14    14      0
                           _ReadTime
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                       _UARTSendChar
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (2) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     547
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51645
                                             38 BANK0      8     6      2
                        _UARTNewLine
                       _UARTSendChar
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49562
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1784
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_disable
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _set_duty_cycle
   _write_SRAM
     _ReadTime
     _Timer0_StartTimer
     _Timer0_StopTimer
     _UARTNewLine
       _UARTSendChar
     _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     ___fltol
       _get_temp (ARG)
         _ADC_Init
         _ADC_Read
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
     ___lldiv
       _ReadTime (ARG)
     _get_temp
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3B      7C       4       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      14        0.0%
DATA                 0      0      FA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar  3 21:59:07 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                                      l241 3E4C  
                                                      l234 3F72  
                                                      l165 264A  
                                                      l414 1FD6  
                                                      l335 3B9C  
                                                      l416 1FE0  
                                                      l336 3B84  
                                                      l441 29BE  
                                                      l439 29B4  
                                                      l480 27FC  
                                                      l459 2FB4  
                                                      l555 188C  
                                                      l396 37D6  
                                                      l493 21E4  
                                                      l478 27F2  
                                                      l495 21EE  
                                                      l639 38C4  
                                                      l909 34A6  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 3D32  
                                                      _lcd 00BB  
                                                      _pad 37A0  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                         ?_UARTRecieveChar 0001  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             __CFG_LVP$OFF 000000  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     l1050 33B2  
                                                     ?_abs 0013  
                                                     l1060 36CE  
                                                     l1141 1D72  
                                                     l1230 1C0E  
                                                     l1142 1D4A  
                                                     l1321 2C8C  
                                                     l1226 191E  
                                                     l1243 1BD6  
                                                     l1235 1B48  
                                                     l1236 1B42  
                                                     l1157 1E3E  
                                                     l1149 1F52  
                                                     l1318 2C82  
                                                     l1166 1EB6  
                                                     l1270 2DE8  
                                                     l1167 1EB0  
                                                     l1433 3AF2  
                                                     l1290 3D68  
                                                     l4002 35A2  
                                                     l1418 3632  
                                                     l1274 2D5C  
                                                     l1267 2CD2  
                                                     l1364 379A  
                                                     l4004 35B2  
                                                     l1428 3AE8  
                                                     l4102 0A2E  
                                                     l4030 0756  
                                                     l1287 3D5E  
                                                     l4112 0B0E  
                                                     l4202 0FF6  
                                                     l4122 0B78  
                                                     l4050 0784  
                                                     l4042 076E  
                                                     l4034 075E  
                                                     l4026 073E  
                                                     l4212 103A  
                                                     l4132 0BF4  
                                                     l4108 0AD4  
                                                     l4028 0744  
                                                     l4052 07CA  
                                                     l5004 344A  
                                                     l3510 37CC  
                                                     l4222 1064  
                                                     l4206 1026  
                                                     l4142 0CD4  
                                                     l4046 0776  
                                                     l4038 0766  
                                                     l5022 3494  
                                                     l5014 3466  
                                                     l3520 382C  
                                                     l3512 37E2  
                                                     l4312 1570  
                                                     l4232 10F6  
                                                     l4160 0E2E  
                                                     l4152 0D7E  
                                                     l4064 083C  
                                                     l5016 3474  
                                                     l5008 345C  
                                                     l3506 37BC  
                                                     l4250 11FC  
                                                     l4242 1162  
                                                     l4066 085C  
                                                     l3516 37FC  
                                                     l3612 30E2  
                                                     l4340 1652  
                                                     l4084 0944  
                                                     l4068 086C  
                                                     l4404 3A02  
                                                     l4500 1D60  
                                                     l4420 1C42  
                                                     l5300 2620  
                                                     l4326 15F2  
                                                     l4086 0964  
                                                     l4406 3A2A  
                                                     l5310 2642  
                                                     l3472 3710  
                                                     l3632 31A0  
                                                     l3624 3160  
                                                     l3616 30FE  
                                                     l3608 30BC  
                                                     l3720 1FFE  
                                                     l4192 0F78  
                                                     l4184 0F04  
                                                     l4176 0E84  
                                                     l4088 0974  
                                                     l4600 1F36  
                                                     l4424 1C48  
                                                     l5304 2628  
                                                     l3482 3C84  
                                                     l3490 3E22  
                                                     l3570 2E46  
                                                     l3618 3114  
                                                     l3706 1FB4  
                                                     l3642 3324  
                                                     l4354 1728  
                                                     l4290 13F2  
                                                     l4282 1372  
                                                     l4266 131C  
                                                     l4258 126E  
                                                     l4522 1DAA  
                                                     l4620 3956  
                                                     l3492 3E28  
                                                     l3564 2E1C  
                                                     l3628 3178  
                                                     l3724 200E  
                                                     l3644 333A  
                                                     l4524 1DB0  
                                                     l4532 1DC4  
                                                     l4444 1C90  
                                                     l3486 3C9C  
                                                     l3734 2108  
                                                     l3806 2AFE  
                                                     l3654 339A  
                                                     l3670 36B6  
                                                     l3662 3654  
                                                     l4374 1832  
                                                     l4198 0FEA  
                                                     l4702 1940  
                                                     l4550 1E66  
                                                     l4542 1E2C  
                                                     l5350 273C  
                                                     l5318 2662  
                                                     ?_pad 0011  
                                                     l5088 3E68  
                                                     l4616 38F8  
                                                     l3576 2E6E  
                                                     l3592 2EFC  
                                                     l3832 2FE8  
                                                     l3664 366A  
                                                     l3912 2258  
                                                     l3904 2234  
                                                     l4368 17F2  
                                                     l4384 1854  
                                                     l4560 1E7E  
                                                     l4456 1CBA  
                                                     l4448 1C96  
                                                     l5360 2788  
                                                     l5328 2696  
                                                     l4618 3908  
                                                     l3682 3C6C  
                                                     l3690 3B0E  
                                                     l3578 2E84  
                                                     l3754 2178  
                                                     l3850 306A  
                                                     l3842 3032  
                                                     l3818 2F76  
                                                     l4378 1840  
                                                     l4298 1466  
                                                     l4810 2D04  
                                                     l5354 275C  
                                                     l5346 271C  
                                                     l5338 26B8  
                                                     l3692 3B1C  
                                                     l3596 2F24  
                                                     l3588 2EE4  
                                                     l3836 300A  
                                                     l3828 2FCE  
                                                     l4652 3B62  
                                                     l4812 2D0C  
                                                     l4804 2CE4  
                                                     l5364 27AA  
                                                     l3758 2194  
                                                     l3846 3050  
                                                     l3950 23EC  
                                                     l3926 22F2  
                                                     l3934 236E  
                                                     l4750 1B08  
                                                     l4566 1E8C  
                                                     l4486 1CF8  
                                                     l4822 2D84  
                                                     l4814 2D1A  
                                                     l5358 277C  
                                                     l3776 29FE  
                                                     l3864 2834  
                                                     l4744 1AE8  
                                                     l4840 2DD6  
                                                     l4824 2D92  
                                                     l4816 2D42  
                                                     l4930 3974  
                                                     l3874 2922  
                                                     l4770 1B8E  
                                                     l4674 18C0  
                                                     l4594 1F28  
                                                     l4586 1EFE  
                                                     l4498 1D5A  
                                                     l3972 2BA4  
                                                     l3956 2B40  
                                                     l3788 2A8A  
                                                     l4692 1906  
                                                     l4676 18C6  
                                                     l4934 39B0  
                                                     l3982 2C1A  
                                                     l3974 2BAE  
                                                     l3966 2B92  
                                                     l3958 2B46  
                                                     l4774 1BAE  
                                                     l4694 190C  
                                                     l4678 18D8  
                                                     l4598 1F32  
                                                     l3976 2BB6  
                                                     l3978 2BE2  
                                                     l3898 2204  
                                                     l4786 1BF8  
                                                     l4966 386E  
                                                     l4968 387C  
                                                     l4978 38B4  
                                                     l4988 33FA  
                                                     STR_1 06C0  
                                                     STR_2 06EE  
                                                     STR_3 0601  
                                                     STR_4 0638  
                                                     STR_5 06EB  
                                                     STR_6 0686  
                                                     STR_7 0668  
                                                     STR_8 06EB  
                                                     STR_9 069B  
                                                     u3011 2E4E  
                                                     u3030 2E8A  
                                                     u3200 3C68  
                                                     u3121 3304  
                                                     u3220 1F82  
                                                     u3140 3340  
                                                     u4020 09B0  
                                                     u3310 213A  
                                                     u3230 1F86  
                                                     u4110 0BB2  
                                                     u4030 09B4  
                                                     u3311 2138  
                                                     u3320 214A  
                                                     u3400 2A9A  
                                                     u4200 0F32  
                                                     u4040 09C2  
                                                     u3090 311A  
                                                     u3330 2150  
                                                     u3170 3670  
                                                     u4130 0C4E  
                                                     u5010 1B3A  
                                                     u3260 1FCA  
                                                     u3420 2ABC  
                                                     u3350 2160  
                                                     u3430 2ACC  
                                                     u4150 0D2E  
                                                     u4070 0A88  
                                                     u2800 3752  
                                                     u3280 1FF6  
                                                     u3440 2AD2  
                                                     u3520 2FFE  
                                                     u3600 294E  
                                                     u4400 16AC  
                                                     u4320 1420  
                                                     u3601 294C  
                                                     u3290 2118  
                                                     u3610 295E  
                                                     u4250 1124  
                                                     u4090 0B68  
                                                     u5050 1B9E  
                                                     u5220 39A6  
                                                     u3380 29A8  
                                                     u3620 2964  
                                                     u2900 3DD0  
                                                     u3700 22CC  
                                                     u4420 1782  
                                                     u4340 14C0  
                                                     u5060 1BBE  
                                                     u5140 2D9E  
                                                     u5230 39E0  
                                                     u3390 2A64  
                                                     u3550 3080  
                                                     u2910 3DD4  
                                                     u2830 3D98  
                                                     u3710 22D0  
                                                     u3471 2F56  
                                                     u2920 3D24  
                                                     u2840 3D9C  
                                                     u3640 21D8  
                                                     u4360 15CA  
                                                     u3810 2B8E  
                                                     u3570 27E6  
                                                     u2930 3D28  
                                                     u3730 2348  
                                                     u5330 347C  
                                                     u5227 399C  
                                                     u3395 2A50  
                                                     u2780 3706  
                                                     u2940 3ACC  
                                                     u3740 2380  
                                                     u3660 2254  
                                                     u4380 162C  
                                                     u5260 3882  
                                                     u4540 1D1C  
                                                     u5500 276E  
                                                     u5237 39D6  
                                                     u3830 2C4E  
                                                     u3910 3608  
                                                     u2950 3AD0  
                                                     u3670 228E  
                                                     u4550 1D2C  
                                                     u3735 2334  
                                                     u3840 2C52  
                                                     u3760 23A2  
                                                     u3680 2292  
                                                     u5280 33E6  
                                                     u4800 1F0C  
                                                     u4720 1E92  
                                                     u4560 1D30  
                                                     u3761 23A0  
                                                     u2970 3E08  
                                                     u2890 3D42  
                                                     u3770 23B2  
                                                     u5290 341C  
                                                     u2980 3E0C  
                                                     u3780 23B8  
                                                     u4740 1EA8  
                                                     _RCIF 007CF5  
                                                     u4590 1D7C  
                                                     u5470 270E  
                                                     u5295 3410  
                                                     u4680 1E52  
                                                     u5480 272E  
                                                     u5537 2796  
                                                     u3970 08A8  
                                                     u5490 274E  
                                                     u5547 3B76  
                                                     u3980 08AC  
                                                     u5557 3E5E  
                                                     u3990 08BA  
                                                     u4960 192C  
                                                     u4970 1AA8  
                                                     u4975 1A9C  
                                         ??_initialize_PWM 0003  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 00D5  
                                       initialize_PWM@freq 0001  
                                                     _atoi 2B2C  
                                                     _ctoa 3AF8  
                                                     _main 2600  
                                                     _dtoa 1F58  
                                                     _prec 00CE  
                                                     _otoa 2992  
                                                     _nout 00CA  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr0h 000FEA  
                                                     fsr1h 000FE2  
                                                     indf0 000FEF  
                                                     fsr2h 000FDA  
                                                     fsr0l 000FE9  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2F4A  
                                                     btemp 007F  
                                                     _utoa 27D0  
                                                     _xtoa 21C2  
                                         __end_of_ADC_Init 3FD8  
                                         __end_of_ADC_Read 3BA2  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                    write_SRAM@temperature 00B0  
                                            __CFG_OSC$RCIO 000000  
                                        int_to_char@result 0092  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                 __end_of_interrupt_enable 3FCA  
                                            __CFG_OSCS$OFF 000000  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2F4A  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1F58  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 31C6  
                                                    STR_10 061E  
                                                    STR_11 0692  
                                                    STR_20 06AC  
                                                    STR_12 0679  
                                                    STR_13 0692  
                                                    STR_14 0679  
                                                    STR_22 06AC  
                                                    STR_31 06AD  
                                                    STR_15 0650  
                                                    STR_40 06D0  
                                                    STR_16 06A8  
                                                    STR_18 06A8  
                                                    STR_34 06CA  
                                                    STR_27 06A9  
                                                    STR_43 06CD  
                                                    STR_36 06CA  
                                                    STR_52 06B4  
                                                    STR_45 06CD  
                                                    STR_54 06B4  
                                                    STR_62 06DC  
                                                    STR_38 06D0  
                                                    STR_47 06D3  
                                                    STR_64 06DC  
                                                    STR_72 06B0  
                                                    STR_49 06D3  
                                                    STR_74 06B0  
                                                    STR_82 06D6  
                                                    STR_59 06B5  
                                                    STR_67 06DF  
                                                    STR_84 06D6  
                                                    STR_92 06B8  
                                                    STR_69 06DF  
                                                    STR_94 06B8  
                                                    STR_79 06B1  
                                                    STR_87 06D9  
                                          __end_of___flmul 1C14  
                                                    STR_89 06D9  
                                                    ?_otoa 001C  
                                                    STR_99 06B9  
                                          __end_of___flsub 3BEC  
                                          __end_of___fltol 34AC  
                                                    ?_stoa 000A  
                                          __end_of___lldiv 38DA  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 33D8  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 36F4  
                                                    i2l297 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 3FBA  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 38DA  
                                                    _flags 00D0  
                                                    _getch 3FE6  
                                                    _errno 00C8  
                                                    _fputc 36F4  
                                          __end_of_isalpha 3D32  
                                                    _fputs 3C78  
                                          __end_of_isdigit 3E16  
                                          __end_of_read_op 3F2A  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 00CC  
                                                    ctoa@c 001E  
                                                    _putch 0048  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 3DA6  
                                          __end_of_isspace 3C78  
                                          __end_of_isupper 3DDE  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 3AA2  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 3638  
                                          __end_of_toupper 3AF8  
                                         ___lodiv@dividend 0001  
                                             _toupper$1878 000D  
                                          __initialization 3CBA  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2C92  
                                             __end_of_ctoa 3B4E  
                                             __end_of_main 27D0  
                                             __end_of_dtoa 21C2  
                                             __end_of_otoa 2B2C  
                                             __end_of_stoa 308E  
                                             __end_of_utoa 2992  
                                             __end_of_xtoa 241A  
                                         __end_of_ReadTime 3F58  
                                       int_to_char@the_num 009C  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00B4  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   ?_fputs 000A  
                                                   STR_104 06C1  
                                                   STR_112 06BC  
                                                   STR_114 06BC  
                                                   STR_130 06E5  
                                                   _ADRESH 000FC4  
                                                   STR_123 06BD  
                                                   STR_107 06E2  
                                                   STR_132 06E5  
                                                   STR_116 06A4  
                                                   STR_109 06E2  
                                                   STR_141 06E8  
                                                   STR_118 06A4  
                                                   STR_134 06C4  
                                                   _ADRESL 000FC3  
                                                   STR_127 06A5  
                                                   STR_143 06C7  
                                                   STR_136 06C4  
                                                   STR_145 06C7  
                                                   STR_139 06E8  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _TMR2IE 007CE9  
                                           __CFG_WDTPS$128 000000  
                                                   _TMR2IP 007CF9  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2DEE  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0002  
                                      i2_Timer0_StartTimer 0038  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 3576  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3E74  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lldiv 000D  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 3CE0  
                                  __size_of_UARTSendString 0088  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                        main@input_address 00B6  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 3E16  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 3A4C  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3EE6  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 3CE8  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                        ?_Timer0_StopTimer 0001  
                                           __pcstackCOMRAM 0001  
                                       ??_Timer0_StopTimer 0001  
                                             __pidataBANK0 0040  
                                            __end_of_fgetc 3964  
                                            __end_of_getch 3FF0  
                                            __end_of_fputc 37A0  
                                            __end_of_fputs 3CBA  
                                      __end_of_Timer0_Init 3EC4  
                                            __end_of_putch 004E  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                  __size_of_set_duty_cycle 0022  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 00BB  
                                                ?_ReadTime 0001  
                                       __size_of_read_SRAM 0136  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3F94  
                                            _initialize_TX 3F80  
                                          _write_SRAM$2154 00A8  
                                          _write_SRAM$2155 00AC  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                        ?_interrupt_enable 0001  
                                                  ?_strlen 0001  
                                       ??_interrupt_enable 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                               ??_ReadTime 0005  
                                 __size_of_UARTRecieveChar 002C  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 3E9E  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 2DEE  
                                                  ___fladd 1C14  
                                                  ___aomod 308E  
                                                  ___flmul 1892  
                                                  ___flsub 3BA2  
                                                  ___fltol 33D8  
                                                  ___lldiv 384A  
                                          __size_of___wmul 002A  
                                                  ___lodiv 32FC  
                                                  ___lomod 3638  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 3964  
                                                  _address 00D2  
                                                  __pcinit 3CBA  
                                                  __ramtop 0600  
                                                  __ptext0 2600  
                                                  __ptext1 241A  
                                                  __ptext2 3EC4  
                                                  __ptext3 34AC  
                                                  __ptext4 2C92  
                                                  __ptext5 3BA2  
                                                  __ptext6 1C14  
                                                  __ptext7 1892  
                                                  __ptext8 3B4E  
                                                  __ptext9 3FCA  
                                                ?_write_op 0001  
                                                  _getchar 3FA8  
                                                _T0CONbits 000FD5  
                                        __end_of_read_SRAM 32FC  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 3CF6  
                                                  _isdigit 3DDE  
                                                  _read_op 3F08  
                                               ??___xxtofl 0005  
                                                  _islower 3D6E  
                                                  _isspace 3C34  
                                                  _isupper 3DA6  
                                                  fgetc@fp 0003  
                                                  _time_ms 00C4  
                                                  atoi@neg 000E  
                                                  _sprintf 3A4C  
                                               ??_get_temp 0034  
                                                  _strncmp 3576  
                                                  _toupper 3AA2  
                                     end_of_initialization 3CE8  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                          ___lldiv@divisor 0009  
                                        __end_of_timingISR 0034  
                                          ___lldiv@counter 0011  
                                        __end_of_vfpfcnvrt 1892  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 39EC  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                  __size_of_initialize_PWM 0018  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                           _set_duty_cycle 3EE6  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 3FF8  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00A0  
                                        ??_UARTRecieveChar 0001  
                                               _write_SRAM 241A  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 3E9E  
                                              vfpfcnvrt@vp 0067  
                                   __end_of_set_duty_cycle 3F08  
                                __size_of_Timer0_StopTimer 0008  
                                __end_of_Timer0_StartTimer 4000  
                                     read_SRAM@stored_temp 00AA  
                                           __end_of_strlen 3E48  
                                      start_initialization 3CBA  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 3D6E  
                                              __end_of_pad 384A  
                                       set_duty_cycle@mask 0003  
                                        __size_of_ReadTime 0016  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00F5  
                                     __end_of_UARTSendChar 3F80  
                              __end_ofi2_Timer0_StartTimer 0040  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                          ?_set_duty_cycle 0001  
                                    set_duty_cycle@lower_2 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 007E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 0080  
                                    set_duty_cycle@upper_8 0002  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                __size_of_interrupt_enable 0010  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1721 0010  
                                                _atoi$1722 0014  
                                                _atoi$1723 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1075 002E  
                                            UARTSendChar@c 0001  
                                           _initialize_PWM 3F2A  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lldiv 0005  
                                                 ?___lodiv 0001  
                                              ?_write_SRAM 0001  
                                                 ?___lomod 0001  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                        _interrupt_disable 3FD8  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                                 _ADC_Init 3FCA  
                                                 _ADC_Read 3B4E  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                       ?_interrupt_disable 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _read_SRAM 31C6  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 0080  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                      ??_interrupt_disable 0001  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00A0  
                                          UARTSendString@i 00A4  
                                   __end_of_initialize_PWM 3F42  
                                      __end_of_int_to_char 3C34  
                                      write_SRAM@curr_time 00B2  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 00C0  
                                                _timingISR 0008  
                                                _vfpfcnvrt 06F2  
                                __end_of_interrupt_disable 3FE6  
                                                _xtoa$1111 002F  
                                                _xtoa$1112 0031  
                                        ___wmul@multiplier 0001  
                                         _Timer0_StopTimer 3FF0  
                                                main@input 00BA  
                                             _isspace$1758 0007  
                                               ?_read_SRAM 00A6  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 3CCE  
                                      __size_of_write_SRAM 01E6  
                                          _UARTRecieveChar 3E48  
                                                 _ReadTime 3F42  
                                         ??_UARTSendString 00A2  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3F6C  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lldiv 0090  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 0082  
                                                 ___xxtofl 2C92  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 384A  
                                                 __ptext11 33D8  
                                                 __ptext20 39EC  
                                                 __ptext12 3FF0  
                                                 __ptext21 06F2  
                                                 __ptext13 3FF8  
                                                 __ptext30 3576  
                                                 __ptext22 21C2  
                                                 __ptext14 3F42  
                                                 __ptext31 2F4A  
                                                 __ptext23 3AA2  
                                                 __ptext15 3EE6  
                                                 __ptext40 3C78  
                                                 __ptext32 2992  
                                                 __ptext24 3D6E  
                                                 __ptext16 31C6  
                                                 __ptext41 36F4  
                                                 __ptext33 1F58  
                                                 __ptext25 3DA6  
                                                 __ptext17 3F08  
                                                 __ptext50 3964  
                                                 __ptext42 0048  
                                                 __ptext34 3D32  
                                                 __ptext26 3CF6  
                                                 __ptext18 3BEC  
                                                 __ptext51 3F58  
                                                 __ptext43 2B2C  
                                                 __ptext35 308E  
                                                 __ptext27 27D0  
                                                 __ptext19 3A4C  
                                                 __ptext52 3F6C  
                                                 __ptext44 3C34  
                                                 __ptext36 2DEE  
                                                 __ptext28 3638  
                                                 __ptext61 0038  
                                                 __ptext53 3FBA  
                                                 __ptext45 3DDE  
                                                 __ptext37 3AF8  
                                                 __ptext29 32FC  
                                                 __ptext54 3FD8  
                                                 __ptext46 3E74  
                                                 __ptext38 37A0  
                                                 __ptext55 3F80  
                                                 __ptext47 3FA8  
                                                 __ptext39 3E16  
                                                 __ptext56 3F94  
                                                 __ptext48 38DA  
                                                 __ptext57 3F2A  
                                                 __ptext49 3FE6  
                                                 __ptext58 3E48  
                                                 __ptext59 3E9E  
                                         __size_of_isupper 0038  
                                                 _get_temp 34AC  
                                         _interrupt_enable 3FBA  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                             _UARTSendChar 3F6C  
                                              _int_to_char 3BEC  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 01D0  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3FA8  
                                    __end_of_initialize_TX 3F94  
                                                stoa@F1152 00F5  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                           read_op@address 0001  
                                         ??_set_duty_cycle 0002  
                                                 _ungetbuf 00D4  
                                                 _ungetcnt 007E  
                                                 _vfprintf 39EC  
                                         read_SRAM@address 00A6  
                               __size_of_interrupt_disable 000E  
                                                 main@temp 00B8  
                                    read_SRAM@time_elapsed 00AC  
                                         ___aomod@dividend 0001  
                                                 _write_op 3EC4  
                                           _vfpfcnvrt$1126 005B  
                                           _vfpfcnvrt$1127 005D  
                                               _INTCONbits 000FF2  
                                  __end_of_UARTRecieveChar 3E74  
                                              ??_read_SRAM 00A8  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 004E  
                                                sprintf@ap 0090  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                         ___lldiv@dividend 0005  
                                              _UARTNewLine 3F58  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                             ??_write_SRAM 00A6  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 008A  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 0080  
                                         ___lldiv@quotient 000D  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                       __end_of_write_SRAM 2600  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                 __end_of_Timer0_StopTimer 3FF8  
                                             ___aomod@sign 0012  
