

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 20 02:55:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F452 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  003B28                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for stoa@F1152
   109  003B28  28                 	db	40
   110  003B29  6E                 	db	110
   111  003B2A  75                 	db	117
   112  003B2B  6C                 	db	108
   113  003B2C  6C                 	db	108
   114  003B2D  29                 	db	41
   115  003B2E  00                 	db	0
   116  0000                     _TRISC	set	3988
   117  0000                     _TRISA	set	3986
   118  0000                     _PORTA	set	3968
   119  0000                     _PORTD	set	3971
   120  0000                     _PORTB	set	3969
   121  0000                     _PORTCbits	set	3970
   122  0000                     _TRISCbits	set	3988
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISD	set	3989
   125  0000                     _ADRESL	set	4035
   126  0000                     _ADRESH	set	4036
   127  0000                     _ADCON0	set	4034
   128  0000                     _SSPBUF	set	4041
   129  0000                     _SSPCON1	set	4038
   130  0000                     _SSPSTATbits	set	4039
   131  0000                     _ADCON1	set	4033
   132  0000                     _RCREG1	set	4014
   133  0000                     _TXREG	set	4013
   134  0000                     _RCSTAbits	set	4011
   135  0000                     _RCSTA	set	4011
   136  0000                     _SPBRG	set	4015
   137  0000                     _TXSTAbits	set	4012
   138  0000                     _RCONbits	set	4048
   139  0000                     _GO_nDONE	set	32274
   140  0000                     _RCIF	set	31989
   141  0000                     _T0CON	set	4053
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR0H	set	4055
   144  0000                     _T0CONbits	set	4053
   145  0000                     _INTCON2bits	set	4081
   146  0000                     _INTCONbits	set	4082
   147  0000                     _TMR0IE	set	32661
   148  0000                     _TMR0IF	set	32658
   149                           
   150                           	psect	smallconst
   151  000600                     __psmallconst:
   152                           	opt callstack 0
   153  000600  00                 	db	0
   154  000601                     STR_103:
   155  000601  68                 	db	104	;'h'
   156  000602  68                 	db	104	;'h'
   157  000603  58                 	db	88	;'X'
   158  000604  00                 	db	0
   159  000605                     STR_3:
   160  000605  68                 	db	104	;'h'
   161  000606  68                 	db	104	;'h'
   162  000607  64                 	db	100	;'d'
   163  000608  00                 	db	0
   164  000609                     STR_7:
   165  000609  68                 	db	104	;'h'
   166  00060A  68                 	db	104	;'h'
   167  00060B  69                 	db	105	;'i'
   168  00060C  00                 	db	0
   169  00060D                     STR_59:
   170  00060D  68                 	db	104	;'h'
   171  00060E  68                 	db	104	;'h'
   172  00060F  6E                 	db	110	;'n'
   173  000610  00                 	db	0
   174  000611                     STR_39:
   175  000611  68                 	db	104	;'h'
   176  000612  68                 	db	104	;'h'
   177  000613  6F                 	db	111	;'o'
   178  000614  00                 	db	0
   179  000615                     STR_79:
   180  000615  68                 	db	104	;'h'
   181  000616  68                 	db	104	;'h'
   182  000617  75                 	db	117	;'u'
   183  000618  00                 	db	0
   184  000619                     STR_99:
   185  000619  68                 	db	104	;'h'
   186  00061A  68                 	db	104	;'h'
   187  00061B  78                 	db	120	;'x'
   188  00061C  00                 	db	0
   189  00061D                     STR_1:
   190  00061D  25                 	db	37
   191  00061E  6C                 	db	108	;'l'
   192  00061F  75                 	db	117	;'u'
   193  000620  00                 	db	0
   194  000621                     STR_121:
   195  000621  6C                 	db	108	;'l'
   196  000622  58                 	db	88	;'X'
   197  000623  00                 	db	0
   198  000624                     STR_130:
   199  000624  7A                 	db	122	;'z'
   200  000625  58                 	db	88	;'X'
   201  000626  00                 	db	0
   202  000627                     STR_21:
   203  000627  6C                 	db	108	;'l'
   204  000628  64                 	db	100	;'d'
   205  000629  00                 	db	0
   206  00062A                     STR_30:
   207  00062A  7A                 	db	122	;'z'
   208  00062B  64                 	db	100	;'d'
   209  00062C  00                 	db	0
   210  00062D                     STR_25:
   211  00062D  6C                 	db	108	;'l'
   212  00062E  69                 	db	105	;'i'
   213  00062F  00                 	db	0
   214  000630                     STR_34:
   215  000630  7A                 	db	122	;'z'
   216  000631  69                 	db	105	;'i'
   217  000632  00                 	db	0
   218  000633                     STR_69:
   219  000633  6C                 	db	108	;'l'
   220  000634  6E                 	db	110	;'n'
   221  000635  00                 	db	0
   222  000636                     STR_74:
   223  000636  7A                 	db	122	;'z'
   224  000637  6E                 	db	110	;'n'
   225  000638  00                 	db	0
   226  000639                     STR_49:
   227  000639  6C                 	db	108	;'l'
   228  00063A  6F                 	db	111	;'o'
   229  00063B  00                 	db	0
   230  00063C                     STR_54:
   231  00063C  7A                 	db	122	;'z'
   232  00063D  6F                 	db	111	;'o'
   233  00063E  00                 	db	0
   234  00063F                     STR_94:
   235  00063F  7A                 	db	122	;'z'
   236  000640  75                 	db	117	;'u'
   237  000641  00                 	db	0
   238  000642                     STR_117:
   239  000642  6C                 	db	108	;'l'
   240  000643  78                 	db	120	;'x'
   241  000644  00                 	db	0
   242  000645                     STR_126:
   243  000645  7A                 	db	122	;'z'
   244  000646  78                 	db	120	;'x'
   245  000647  00                 	db	0
   246  000648  25                 	db	37
   247  000649  64                 	db	100	;'d'
   248  00064A  00                 	db	0
   249  0000                     
   250                           ; #config settings
   251  00064B  00                 	db	0	; dummy byte at the end
   252  0000                     
   253                           	psect	cinit
   254  00393A                     __pcinit:
   255                           	opt callstack 0
   256  00393A                     start_initialization:
   257                           	opt callstack 0
   258  00393A                     __initialization:
   259                           	opt callstack 0
   260                           
   261                           ; Initialize objects allocated to BANK0 (7 bytes)
   262                           ; load TBLPTR registers with __pidataBANK0
   263  00393A  0E28               	movlw	low __pidataBANK0
   264  00393C  6EF6               	movwf	tblptrl,c
   265  00393E  0E3B               	movlw	high __pidataBANK0
   266  003940  6EF7               	movwf	tblptrh,c
   267  003942  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   268  003944  6EF8               	movwf	tblptru,c
   269  003946  EE00  F0EA         	lfsr	0,__pdataBANK0
   270  00394A  EE10 F007          	lfsr	1,7
   271  00394E                     copy_data0:
   272  00394E  0009               	tblrd		*+
   273  003950  CFF5 FFEE          	movff	tablat,postinc0
   274  003954  50E5               	movf	postdec1,w,c
   275  003956  50E1               	movf	fsr1l,w,c
   276  003958  E1FA               	bnz	copy_data0
   277                           
   278                           ; Clear objects allocated to BANK0 (56 bytes)
   279  00395A  EE00  F080         	lfsr	0,__pbssBANK0
   280  00395E  0E38               	movlw	56
   281  003960                     clear_0:
   282  003960  6AEE               	clrf	postinc0,c
   283  003962  06E8               	decf	wreg,f,c
   284  003964  E1FD               	bnz	clear_0
   285  003966                     end_of_initialization:
   286                           	opt callstack 0
   287  003966                     __end_of__initialization:
   288                           	opt callstack 0
   289  003966  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290  003968  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  00396A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292  00396C  6EF8               	movwf	tblptru,c
   293  00396E  0100               	movlb	0
   294  003970  EFB5  F016         	goto	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  000080                     __pbssBANK0:
   298                           	opt callstack 0
   299  000080                     _lcd:
   300                           	opt callstack 0
   301  000080                     	ds	5
   302  000085                     _time_ms:
   303                           	opt callstack 0
   304  000085                     	ds	4
   305  000089                     _errno:
   306                           	opt callstack 0
   307  000089                     	ds	2
   308  00008B                     _nout:
   309                           	opt callstack 0
   310  00008B                     	ds	2
   311  00008D                     _width:
   312                           	opt callstack 0
   313  00008D                     	ds	2
   314  00008F                     _prec:
   315                           	opt callstack 0
   316  00008F                     	ds	2
   317  000091                     _flags:
   318                           	opt callstack 0
   319  000091                     	ds	2
   320  000093                     _interval_events:
   321                           	opt callstack 0
   322  000093                     	ds	2
   323  000095                     _ungetcnt:
   324                           	opt callstack 0
   325  000095                     	ds	1
   326  000096                     	ds	1
   327  000097                     _flag:
   328                           	opt callstack 0
   329  000097                     	ds	1
   330  000098                     _dbuf:
   331                           	opt callstack 0
   332  000098                     	ds	32
   333                           
   334                           	psect	dataBANK0
   335  0000EA                     __pdataBANK0:
   336                           	opt callstack 0
   337  0000EA                     stoa@F1152:
   338                           	opt callstack 0
   339  0000EA                     	ds	7
   340                           
   341                           	psect	cstackBANK0
   342  0000B8                     __pcstackBANK0:
   343                           	opt callstack 0
   344  0000B8                     ?_sprintf:
   345                           	opt callstack 0
   346  0000B8                     sprintf@s:
   347                           	opt callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350  0000B8                     	ds	2
   351  0000BA                     sprintf@fmt:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355  0000BA                     	ds	8
   356  0000C2                     sprintf@f:
   357                           	opt callstack 0
   358                           
   359                           ; 6 bytes @ 0xA
   360  0000C2                     	ds	6
   361  0000C8                     sprintf@ap:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x10
   365  0000C8                     	ds	2
   366  0000CA                     int_to_char@result:
   367                           	opt callstack 0
   368                           
   369                           ; 10 bytes @ 0x12
   370  0000CA                     	ds	10
   371  0000D4                     int_to_char@the_num:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x1C
   375  0000D4                     	ds	4
   376  0000D8                     UARTSendString@c:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x20
   380  0000D8                     	ds	2
   381  0000DA                     UARTSendString@i:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x22
   385  0000DA                     	ds	2
   386  0000DC                     read_op@address:
   387                           	opt callstack 0
   388                           
   389                           ; 1 bytes @ 0x24
   390  0000DC                     	ds	1
   391  0000DD                     read_op@i:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0x25
   395  0000DD                     	ds	2
   396  0000DF                     read_op@result:
   397                           	opt callstack 0
   398                           
   399                           ; 1 bytes @ 0x27
   400  0000DF                     	ds	1
   401  0000E0                     read_op@mask:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x28
   405  0000E0                     	ds	1
   406  0000E1                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x29
   409  0000E1                     	ds	1
   410  0000E2                     main@temp:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x2A
   414  0000E2                     	ds	2
   415  0000E4                     main@stored_temp:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0x2C
   419  0000E4                     	ds	2
   420  0000E6                     main@time_elapsed:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x2E
   424  0000E6                     	ds	2
   425  0000E8                     main@address:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x30
   429  0000E8                     	ds	2
   430                           
   431                           	psect	cstackCOMRAM
   432  000001                     __pcstackCOMRAM:
   433                           	opt callstack 0
   434  000001                     ?_ADC_Read:
   435                           	opt callstack 0
   436  000001                     ?_strlen:
   437                           	opt callstack 0
   438  000001                     ?_isupper:
   439                           	opt callstack 0
   440  000001                     ?_isalpha:
   441                           	opt callstack 0
   442  000001                     ?_isdigit:
   443                           	opt callstack 0
   444  000001                     ?_strncmp:
   445                           	opt callstack 0
   446  000001                     ?_isspace:
   447                           	opt callstack 0
   448  000001                     ?_getch:
   449                           	opt callstack 0
   450  000001                     ?_islower:
   451                           	opt callstack 0
   452  000001                     ?___wmul:
   453                           	opt callstack 0
   454  000001                     ?___fladd:
   455                           	opt callstack 0
   456  000001                     ?___lldiv:
   457                           	opt callstack 0
   458  000001                     ?___xxtofl:
   459                           	opt callstack 0
   460  000001                     ?___aodiv:
   461                           	opt callstack 0
   462  000001                     ?___aomod:
   463                           	opt callstack 0
   464  000001                     ?___lodiv:
   465                           	opt callstack 0
   466  000001                     ?___lomod:
   467                           	opt callstack 0
   468  000001                     UARTSendChar@c:
   469                           	opt callstack 0
   470  000001                     ___wmul@multiplier:
   471                           	opt callstack 0
   472  000001                     isalpha@c:
   473                           	opt callstack 0
   474  000001                     isdigit@c:
   475                           	opt callstack 0
   476  000001                     isspace@c:
   477                           	opt callstack 0
   478  000001                     isupper@c:
   479                           	opt callstack 0
   480  000001                     fputc@c:
   481                           	opt callstack 0
   482  000001                     strlen@s:
   483                           	opt callstack 0
   484  000001                     strncmp@_l:
   485                           	opt callstack 0
   486  000001                     islower@c:
   487                           	opt callstack 0
   488  000001                     ___lldiv@dividend:
   489                           	opt callstack 0
   490  000001                     ___fladd@b:
   491                           	opt callstack 0
   492  000001                     ___xxtofl@val:
   493                           	opt callstack 0
   494  000001                     ___aodiv@dividend:
   495                           	opt callstack 0
   496  000001                     ___aomod@dividend:
   497                           	opt callstack 0
   498  000001                     ___lodiv@dividend:
   499                           	opt callstack 0
   500  000001                     ___lomod@dividend:
   501                           	opt callstack 0
   502                           
   503                           ; 8 bytes @ 0x0
   504  000001                     	ds	1
   505  000002                     
   506                           ; 1 bytes @ 0x1
   507  000002                     	ds	1
   508  000003                     ??_ADC_Read:
   509  000003                     ??_isupper:
   510  000003                     ??_isalpha:
   511  000003                     ??_isdigit:
   512  000003                     ??_isspace:
   513  000003                     ??_islower:
   514  000003                     ?_fgetc:
   515                           	opt callstack 0
   516  000003                     ___wmul@multiplicand:
   517                           	opt callstack 0
   518  000003                     fputc@fp:
   519                           	opt callstack 0
   520  000003                     fgetc@fp:
   521                           	opt callstack 0
   522  000003                     strlen@a:
   523                           	opt callstack 0
   524  000003                     strncmp@_r:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x2
   528  000003                     	ds	2
   529  000005                     ??_fputc:
   530  000005                     ??_fgetc:
   531  000005                     ??___xxtofl:
   532  000005                     ADC_Read@channel:
   533                           	opt callstack 0
   534  000005                     ___wmul@product:
   535                           	opt callstack 0
   536  000005                     strncmp@n:
   537                           	opt callstack 0
   538  000005                     ___lldiv@divisor:
   539                           	opt callstack 0
   540  000005                     ___fladd@a:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x4
   544  000005                     	ds	2
   545  000007                     ??_strncmp:
   546  000007                     ?_toupper:
   547                           	opt callstack 0
   548  000007                     _isspace$1784:
   549                           	opt callstack 0
   550  000007                     toupper@c:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x6
   554  000007                     	ds	1
   555  000008                     ?_atoi:
   556                           	opt callstack 0
   557  000008                     atoi@s:
   558                           	opt callstack 0
   559  000008                     strncmp@l:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x7
   563  000008                     	ds	1
   564  000009                     ??_toupper:
   565  000009                     ??___fladd:
   566  000009                     ___xxtofl@sign:
   567                           	opt callstack 0
   568  000009                     ___lldiv@quotient:
   569                           	opt callstack 0
   570  000009                     ___aodiv@divisor:
   571                           	opt callstack 0
   572  000009                     ___aomod@divisor:
   573                           	opt callstack 0
   574  000009                     ___lodiv@divisor:
   575                           	opt callstack 0
   576  000009                     ___lomod@divisor:
   577                           	opt callstack 0
   578                           
   579                           ; 8 bytes @ 0x8
   580  000009                     	ds	1
   581  00000A                     ??_atoi:
   582  00000A                     ?_stoa:
   583                           	opt callstack 0
   584  00000A                     ___xxtofl@exp:
   585                           	opt callstack 0
   586  00000A                     stoa@fp:
   587                           	opt callstack 0
   588  00000A                     fputs@s:
   589                           	opt callstack 0
   590  00000A                     fgetc@c:
   591                           	opt callstack 0
   592  00000A                     strncmp@r:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x9
   596  00000A                     	ds	1
   597  00000B                     ___xxtofl@arg:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0xA
   601  00000B                     	ds	1
   602  00000C                     stoa@s:
   603                           	opt callstack 0
   604  00000C                     fputs@fp:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0xB
   608  00000C                     	ds	1
   609  00000D                     ___lldiv@counter:
   610                           	opt callstack 0
   611  00000D                     ___fladd@signs:
   612                           	opt callstack 0
   613  00000D                     _toupper$1904:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0xC
   617  00000D                     	ds	1
   618  00000E                     ??_stoa:
   619  00000E                     write_op@data:
   620                           	opt callstack 0
   621  00000E                     ___fladd@aexp:
   622                           	opt callstack 0
   623  00000E                     fputs@c:
   624                           	opt callstack 0
   625  00000E                     atoi@neg:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0xD
   629  00000E                     	ds	1
   630  00000F                     ??_write_op:
   631  00000F                     ?___flmul:
   632                           	opt callstack 0
   633  00000F                     ___fladd@bexp:
   634                           	opt callstack 0
   635  00000F                     fputs@i:
   636                           	opt callstack 0
   637  00000F                     ___flmul@b:
   638                           	opt callstack 0
   639  00000F                     stoa@nuls:
   640                           	opt callstack 0
   641                           
   642                           ; 7 bytes @ 0xE
   643  00000F                     	ds	1
   644  000010                     write_op@address:
   645                           	opt callstack 0
   646  000010                     ___fladd@grs:
   647                           	opt callstack 0
   648  000010                     _atoi$1747:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0xF
   652  000010                     	ds	1
   653  000011                     ?_pad:
   654                           	opt callstack 0
   655  000011                     ___aodiv@counter:
   656                           	opt callstack 0
   657  000011                     ___aomod@counter:
   658                           	opt callstack 0
   659  000011                     ___lomod@counter:
   660                           	opt callstack 0
   661  000011                     pad@fp:
   662                           	opt callstack 0
   663  000011                     ___lodiv@quotient:
   664                           	opt callstack 0
   665                           
   666                           ; 8 bytes @ 0x10
   667  000011                     	ds	1
   668  000012                     ___aodiv@sign:
   669                           	opt callstack 0
   670  000012                     ___aomod@sign:
   671                           	opt callstack 0
   672  000012                     _atoi$1749:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x11
   676  000012                     	ds	1
   677  000013                     ?_abs:
   678                           	opt callstack 0
   679  000013                     pad@buf:
   680                           	opt callstack 0
   681  000013                     abs@a:
   682                           	opt callstack 0
   683  000013                     ___flmul@a:
   684                           	opt callstack 0
   685  000013                     ___aodiv@quotient:
   686                           	opt callstack 0
   687                           
   688                           ; 8 bytes @ 0x12
   689  000013                     	ds	1
   690  000014                     _atoi$1748:
   691                           	opt callstack 0
   692                           
   693                           ; 1 bytes @ 0x13
   694  000014                     	ds	1
   695  000015                     ??_abs:
   696  000015                     pad@p:
   697                           	opt callstack 0
   698  000015                     atoi@n:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x14
   702  000015                     	ds	1
   703  000016                     stoa@i:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x15
   707  000016                     	ds	1
   708  000017                     ??___flmul:
   709  000017                     ??_pad:
   710                           
   711                           ; 1 bytes @ 0x16
   712  000017                     	ds	1
   713  000018                     pad@i:
   714                           	opt callstack 0
   715  000018                     stoa@w:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x17
   719  000018                     	ds	1
   720  000019                     ___lodiv@counter:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x18
   724  000019                     	ds	1
   725  00001A                     pad@w:
   726                           	opt callstack 0
   727  00001A                     stoa@cp:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x19
   731  00001A                     	ds	1
   732  00001B                     ___flmul@sign:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x1A
   736  00001B                     	ds	1
   737  00001C                     ?_ctoa:
   738                           	opt callstack 0
   739  00001C                     ?_dtoa:
   740                           	opt callstack 0
   741  00001C                     ?_otoa:
   742                           	opt callstack 0
   743  00001C                     ?_utoa:
   744                           	opt callstack 0
   745  00001C                     ?_xtoa:
   746                           	opt callstack 0
   747  00001C                     ctoa@fp:
   748                           	opt callstack 0
   749  00001C                     dtoa@fp:
   750                           	opt callstack 0
   751  00001C                     otoa@fp:
   752                           	opt callstack 0
   753  00001C                     stoa@p:
   754                           	opt callstack 0
   755  00001C                     utoa@fp:
   756                           	opt callstack 0
   757  00001C                     xtoa@fp:
   758                           	opt callstack 0
   759  00001C                     ___flmul@grs:
   760                           	opt callstack 0
   761                           
   762                           ; 4 bytes @ 0x1B
   763  00001C                     	ds	2
   764  00001E                     ctoa@c:
   765                           	opt callstack 0
   766  00001E                     stoa@l:
   767                           	opt callstack 0
   768  00001E                     dtoa@d:
   769                           	opt callstack 0
   770  00001E                     otoa@d:
   771                           	opt callstack 0
   772  00001E                     utoa@d:
   773                           	opt callstack 0
   774  00001E                     xtoa@d:
   775                           	opt callstack 0
   776                           
   777                           ; 8 bytes @ 0x1D
   778  00001E                     	ds	1
   779  00001F                     ctoa@w:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x1E
   783  00001F                     	ds	1
   784  000020                     ___flmul@aexp:
   785                           	opt callstack 0
   786                           
   787                           ; 1 bytes @ 0x1F
   788  000020                     	ds	1
   789  000021                     ___flmul@bexp:
   790                           	opt callstack 0
   791                           
   792                           ; 1 bytes @ 0x20
   793  000021                     	ds	1
   794  000022                     ___flmul@prod:
   795                           	opt callstack 0
   796                           
   797                           ; 4 bytes @ 0x21
   798  000022                     	ds	4
   799  000026                     ??_dtoa:
   800  000026                     ??_otoa:
   801  000026                     ??_utoa:
   802  000026                     xtoa@x:
   803                           	opt callstack 0
   804  000026                     ___flmul@temp:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x25
   808  000026                     	ds	1
   809  000027                     ??_xtoa:
   810                           
   811                           ; 1 bytes @ 0x26
   812  000027                     	ds	1
   813  000028                     ?___flsub:
   814                           	opt callstack 0
   815  000028                     ___flsub@b:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x27
   819  000028                     	ds	4
   820  00002C                     ___flsub@a:
   821                           	opt callstack 0
   822                           
   823                           ; 4 bytes @ 0x2B
   824  00002C                     	ds	2
   825  00002E                     _dtoa$1101:
   826                           	opt callstack 0
   827  00002E                     otoa@p:
   828                           	opt callstack 0
   829  00002E                     utoa@p:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x2D
   833  00002E                     	ds	1
   834  00002F                     _xtoa$1137:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x2E
   838  00002F                     	ds	1
   839  000030                     ?_get_temp:
   840                           	opt callstack 0
   841  000030                     dtoa@p:
   842                           	opt callstack 0
   843  000030                     otoa@t:
   844                           	opt callstack 0
   845  000030                     utoa@w:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x2F
   849  000030                     	ds	1
   850  000031                     _xtoa$1138:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x30
   854  000031                     	ds	1
   855  000032                     dtoa@w:
   856                           	opt callstack 0
   857  000032                     otoa@w:
   858                           	opt callstack 0
   859  000032                     utoa@n:
   860                           	opt callstack 0
   861                           
   862                           ; 8 bytes @ 0x31
   863  000032                     	ds	1
   864  000033                     xtoa@p:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x32
   868  000033                     	ds	1
   869  000034                     dtoa@s:
   870                           	opt callstack 0
   871  000034                     get_temp@real_voltage:
   872                           	opt callstack 0
   873  000034                     otoa@n:
   874                           	opt callstack 0
   875                           
   876                           ; 8 bytes @ 0x33
   877  000034                     	ds	1
   878  000035                     xtoa@w:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x34
   882  000035                     	ds	1
   883  000036                     dtoa@n:
   884                           	opt callstack 0
   885                           
   886                           ; 8 bytes @ 0x35
   887  000036                     	ds	1
   888  000037                     xtoa@n:
   889                           	opt callstack 0
   890                           
   891                           ; 8 bytes @ 0x36
   892  000037                     	ds	1
   893  000038                     get_temp@temp:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x37
   897  000038                     	ds	2
   898  00003A                     utoa@i:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x39
   902  00003A                     	ds	2
   903  00003C                     get_temp@adc_voltage:
   904                           	opt callstack 0
   905  00003C                     otoa@i:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x3B
   909  00003C                     	ds	2
   910  00003E                     ?___fltol:
   911                           	opt callstack 0
   912  00003E                     dtoa@i:
   913                           	opt callstack 0
   914  00003E                     ___fltol@f1:
   915                           	opt callstack 0
   916                           
   917                           ; 4 bytes @ 0x3D
   918  00003E                     	ds	1
   919  00003F                     xtoa@i:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x3E
   923  00003F                     	ds	2
   924  000041                     xtoa@c:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x40
   928  000041                     	ds	1
   929  000042                     ??___fltol:
   930                           
   931                           ; 1 bytes @ 0x41
   932  000042                     	ds	1
   933  000043                     ?_vfpfcnvrt:
   934                           	opt callstack 0
   935  000043                     vfpfcnvrt@fp:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x42
   939  000043                     	ds	2
   940  000045                     vfpfcnvrt@fmt:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x44
   944  000045                     	ds	1
   945  000046                     ___fltol@sign1:
   946                           	opt callstack 0
   947                           
   948                           ; 1 bytes @ 0x45
   949  000046                     	ds	1
   950  000047                     ___fltol@exp1:
   951                           	opt callstack 0
   952  000047                     vfpfcnvrt@ap:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x46
   956  000047                     	ds	2
   957  000049                     ??_vfpfcnvrt:
   958                           
   959                           ; 1 bytes @ 0x48
   960  000049                     	ds	14
   961  000057                     vfpfcnvrt@cp:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x56
   965  000057                     	ds	2
   966  000059                     vfpfcnvrt@done:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x58
   970  000059                     	ds	2
   971  00005B                     _vfpfcnvrt$1152:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x5A
   975  00005B                     	ds	2
   976  00005D                     _vfpfcnvrt$1153:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x5C
   980  00005D                     	ds	2
   981  00005F                     vfpfcnvrt@ll:
   982                           	opt callstack 0
   983                           
   984                           ; 8 bytes @ 0x5E
   985  00005F                     	ds	8
   986  000067                     vfpfcnvrt@vp:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x66
   990  000067                     	ds	2
   991  000069                     vfpfcnvrt@c:
   992                           	opt callstack 0
   993                           
   994                           ; 1 bytes @ 0x68
   995  000069                     	ds	1
   996  00006A                     vfpfcnvrt@llu:
   997                           	opt callstack 0
   998                           
   999                           ; 8 bytes @ 0x69
  1000  00006A                     	ds	8
  1001  000072                     ?_vfprintf:
  1002                           	opt callstack 0
  1003  000072                     vfprintf@fp:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x71
  1007  000072                     	ds	2
  1008  000074                     vfprintf@fmt:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x73
  1012  000074                     	ds	2
  1013  000076                     vfprintf@ap:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x75
  1017  000076                     	ds	2
  1018  000078                     vfprintf@cfmt:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x77
  1022  000078                     	ds	2
  1023  00007A                     ?_int_to_char:
  1024                           	opt callstack 0
  1025  00007A                     int_to_char@num:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x79
  1029  00007A                     	ds	4
  1030  00007E                     ??_read_op:
  1031                           
  1032                           ; 1 bytes @ 0x7D
  1033  00007E                     	ds	1
  1034                           
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 28 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  address         2   48[BANK0 ] int 
  1045 ;;  time_elapsed    2   46[BANK0 ] int 
  1046 ;;  stored_temp     2   44[BANK0 ] int 
  1047 ;;  temp            2   42[BANK0 ] int 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       8       0       0       0       0       0
  1059 ;;      Temps:          0       1       0       0       0       0       0
  1060 ;;      Totals:         0       9       0       0       0       0       0
  1061 ;;Total ram usage:        9 bytes
  1062 ;; Hardware stack levels required when called:   12
  1063 ;; This function calls:
  1064 ;;		_Timer0_Init
  1065 ;;		_Timer0_StartTimer
  1066 ;;		_UARTNewLine
  1067 ;;		_UARTSendString
  1068 ;;		___fltol
  1069 ;;		___lldiv
  1070 ;;		_get_temp
  1071 ;;		_initialize_RX
  1072 ;;		_initialize_TX
  1073 ;;		_int_to_char
  1074 ;;		_read_op
  1075 ;;		_write_op
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text0
  1082  002D6A                     __ptext0:
  1083                           	opt callstack 0
  1084  002D6A                     _main:
  1085                           	opt callstack 0
  1086  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  1087                           
  1088                           ;incstack = 0
  1089  002D6C  0E00               	movlw	0
  1090  002D6E  0100               	movlb	0	; () banked
  1091  002D70  6FE9               	movwf	(main@address+1)& (0+255),b
  1092  002D72  0E00               	movlw	0
  1093  002D74  6FE8               	movwf	main@address& (0+255),b
  1094                           
  1095                           ; BSR set to: 0
  1096  002D76  EC3C  F01D         	call	_Timer0_Init	;wreg free
  1097  002D7A  EC8C  F01D         	call	_Timer0_StartTimer	;wreg free
  1098  002D7E  EC63  F01D         	call	_initialize_TX	;wreg free
  1099  002D82  EC6D  F01D         	call	_initialize_RX	;wreg free
  1100  002D86  8E94               	bsf	3988,7,c	;volatile
  1101  002D88  9C94               	bcf	3988,6,c	;volatile
  1102  002D8A  EC0C  F018         	call	_get_temp	;wreg free
  1103  002D8E  C030  F03E         	movff	?_get_temp,___fltol@f1
  1104  002D92  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1105  002D96  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1106  002D9A  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1107  002D9E  ECA2  F017         	call	___fltol	;wreg free
  1108  002DA2  C03E  F0E2         	movff	?___fltol,main@temp
  1109  002DA6  C03F  F0E3         	movff	?___fltol+1,main@temp+1
  1110  002DAA  C0E2  F00E         	movff	main@temp,write_op@data
  1111  002DAE  0E00               	movlw	0
  1112  002DB0  EC8C  F01B         	call	_write_op
  1113  002DB4  0100               	movlb	0	; () banked
  1114  002DB6  4BE8               	infsnz	main@address& (0+255),f,b
  1115  002DB8  2BE9               	incf	(main@address+1)& (0+255),f,b
  1116                           
  1117                           ; BSR set to: 0
  1118  002DBA  C085  F001         	movff	_time_ms,___lldiv@dividend	;volatile
  1119  002DBE  C086  F002         	movff	_time_ms+1,___lldiv@dividend+1	;volatile
  1120  002DC2  C087  F003         	movff	_time_ms+2,___lldiv@dividend+2	;volatile
  1121  002DC6  C088  F004         	movff	_time_ms+3,___lldiv@dividend+3	;volatile
  1122  002DCA  0E3C               	movlw	60
  1123  002DCC  6E05               	movwf	___lldiv@divisor,c
  1124  002DCE  0E00               	movlw	0
  1125  002DD0  6E06               	movwf	___lldiv@divisor+1,c
  1126  002DD2  0E00               	movlw	0
  1127  002DD4  6E07               	movwf	___lldiv@divisor+2,c
  1128  002DD6  0E00               	movlw	0
  1129  002DD8  6E08               	movwf	___lldiv@divisor+3,c
  1130  002DDA  EC23  F01A         	call	___lldiv	;wreg free
  1131  002DDE  5001               	movf	?___lldiv,w,c
  1132  002DE0  6E0E               	movwf	write_op@data,c
  1133  002DE2  0100               	movlb	0	; () banked
  1134  002DE4  51E8               	movf	main@address& (0+255),w,b
  1135  002DE6  EC8C  F01B         	call	_write_op
  1136  002DEA  0100               	movlb	0	; () banked
  1137  002DEC  07E8               	decf	main@address& (0+255),f,b
  1138  002DEE  A0D8               	btfss	status,0,c
  1139  002DF0  07E9               	decf	(main@address+1)& (0+255),f,b
  1140                           
  1141                           ; BSR set to: 0
  1142  002DF2  51E8               	movf	main@address& (0+255),w,b
  1143  002DF4  ECDB  F019         	call	_read_op
  1144  002DF8  0100               	movlb	0	; () banked
  1145  002DFA  6FE1               	movwf	??_main& (0+255),b
  1146  002DFC  51E1               	movf	??_main& (0+255),w,b
  1147  002DFE  6FE4               	movwf	main@stored_temp& (0+255),b
  1148  002E00  6BE5               	clrf	(main@stored_temp+1)& (0+255),b
  1149                           
  1150                           ; BSR set to: 0
  1151  002E02  4BE8               	infsnz	main@address& (0+255),f,b
  1152  002E04  2BE9               	incf	(main@address+1)& (0+255),f,b
  1153                           
  1154                           ; BSR set to: 0
  1155  002E06  51E8               	movf	main@address& (0+255),w,b
  1156  002E08  ECDB  F019         	call	_read_op
  1157  002E0C  0100               	movlb	0	; () banked
  1158  002E0E  6FE1               	movwf	??_main& (0+255),b
  1159  002E10  51E1               	movf	??_main& (0+255),w,b
  1160  002E12  6FE6               	movwf	main@time_elapsed& (0+255),b
  1161  002E14  6BE7               	clrf	(main@time_elapsed+1)& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164  002E16  9E94               	bcf	3988,7,c	;volatile
  1165                           
  1166                           ; BSR set to: 0
  1167  002E18  C0E4  F07A         	movff	main@stored_temp,int_to_char@num
  1168  002E1C  C0E5  F07B         	movff	main@stored_temp+1,int_to_char@num+1
  1169  002E20  0E00               	movlw	0
  1170  002E22  BE7B               	btfsc	int_to_char@num+1,7,c
  1171  002E24  0EFF               	movlw	-1
  1172  002E26  6E7C               	movwf	int_to_char@num+2,c
  1173  002E28  6E7D               	movwf	int_to_char@num+3,c
  1174  002E2A  ECD8  F01B         	call	_int_to_char	;wreg free
  1175  002E2E  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1176  002E32  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1177  002E36  EC1E  F01C         	call	_UARTSendString	;wreg free
  1178  002E3A  EC4F  F01D         	call	_UARTNewLine	;wreg free
  1179  002E3E  C0E6  F07A         	movff	main@time_elapsed,int_to_char@num
  1180  002E42  C0E7  F07B         	movff	main@time_elapsed+1,int_to_char@num+1
  1181  002E46  0E00               	movlw	0
  1182  002E48  BE7B               	btfsc	int_to_char@num+1,7,c
  1183  002E4A  0EFF               	movlw	-1
  1184  002E4C  6E7C               	movwf	int_to_char@num+2,c
  1185  002E4E  6E7D               	movwf	int_to_char@num+3,c
  1186  002E50  ECD8  F01B         	call	_int_to_char	;wreg free
  1187  002E54  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1188  002E58  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1189  002E5C  EC1E  F01C         	call	_UARTSendString	;wreg free
  1190  002E60  EC4F  F01D         	call	_UARTNewLine	;wreg free
  1191  002E64  EF1A  F000         	goto	start
  1192  002E68                     __end_of_main:
  1193                           	opt callstack 0
  1194                           
  1195 ;; *************** function _write_op *****************
  1196 ;; Defined at:
  1197 ;;		line 13 in file "drive_memory.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  address         1    wreg     unsigned char 
  1200 ;;  data            1   13[COMRAM] unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  address         1   15[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         1       0       0       0       0       0       0
  1213 ;;      Locals:         1       0       0       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0       0       0
  1215 ;;      Totals:         3       0       0       0       0       0       0
  1216 ;;Total ram usage:        3 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text1
  1227  003718                     __ptext1:
  1228                           	opt callstack 0
  1229  003718                     _write_op:
  1230                           	opt callstack 0
  1231  003718  FFFF               	dw	65535	; assembler added errata NOP
  1232                           
  1233                           ;incstack = 0
  1234                           ;write_op@address stored from wreg
  1235  00371A  6E10               	movwf	write_op@address,c
  1236                           
  1237                           ;drive_memory.c: 14:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1238  00371C  0E27               	movlw	39
  1239  00371E  6E0F               	movwf	??_write_op& (0+255),c
  1240  003720  0EFC               	movlw	252
  1241  003722                     u5337:
  1242  003722  FFFF               	dw	65535	; errata NOP
  1243  003724  2EE8               	decfsz	wreg,f,c
  1244  003726  D7FD               	bra	u5337
  1245  003728  2E0F               	decfsz	??_write_op& (0+255),f,c
  1246  00372A  D7FB               	bra	u5337
  1247                           
  1248                           ;drive_memory.c: 15:   TRISD = 0x00;
  1249  00372C  0E00               	movlw	0
  1250  00372E  6E95               	movwf	3989,c	;volatile
  1251                           
  1252                           ;drive_memory.c: 16:   TRISB &= ~(0x3f);
  1253  003730  0EC0               	movlw	192
  1254  003732  1693               	andwf	3987,f,c	;volatile
  1255                           
  1256                           ;drive_memory.c: 17:   TRISCbits.TRISC1 = 0;
  1257  003734  9294               	bcf	3988,1,c	;volatile
  1258                           
  1259                           ;drive_memory.c: 19:   PORTCbits.RC2 = 1;
  1260  003736  8482               	bsf	3970,2,c	;volatile
  1261                           
  1262                           ;drive_memory.c: 20:   PORTCbits.RC1 = 0;
  1263  003738  9282               	bcf	3970,1,c	;volatile
  1264                           
  1265                           ;drive_memory.c: 21:   PORTB = address;
  1266  00373A  C010  FF81         	movff	write_op@address,3969	;volatile
  1267                           
  1268                           ;drive_memory.c: 22:   PORTD = data;
  1269  00373E  C00E  FF83         	movff	write_op@data,3971	;volatile
  1270                           
  1271                           ;drive_memory.c: 23:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1272  003742  0E27               	movlw	39
  1273  003744  6E0F               	movwf	??_write_op& (0+255),c
  1274  003746  0EFC               	movlw	252
  1275  003748                     u5347:
  1276  003748  FFFF               	dw	65535	; errata NOP
  1277  00374A  2EE8               	decfsz	wreg,f,c
  1278  00374C  D7FD               	bra	u5347
  1279  00374E  2E0F               	decfsz	??_write_op& (0+255),f,c
  1280  003750  D7FB               	bra	u5347
  1281                           
  1282                           ;drive_memory.c: 25:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1283  003752  0E27               	movlw	39
  1284  003754  6E0F               	movwf	??_write_op& (0+255),c
  1285  003756  0EFC               	movlw	252
  1286  003758                     u5357:
  1287  003758  FFFF               	dw	65535	; errata NOP
  1288  00375A  2EE8               	decfsz	wreg,f,c
  1289  00375C  D7FD               	bra	u5357
  1290  00375E  2E0F               	decfsz	??_write_op& (0+255),f,c
  1291  003760  D7FB               	bra	u5357
  1292  003762  0012               	return		;funcret
  1293  003764  FFFF               	dw	65535	; errata NOP
  1294  003766                     __end_of_write_op:
  1295                           	opt callstack 0
  1296                           
  1297 ;; *************** function _read_op *****************
  1298 ;; Defined at:
  1299 ;;		line 28 in file "drive_memory.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  address         1    wreg     unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  address         1   36[BANK0 ] unsigned char 
  1304 ;;  i               2   37[BANK0 ] int 
  1305 ;;  mask            1   40[BANK0 ] unsigned char 
  1306 ;;  result          1   39[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      unsigned char 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1316 ;;      Params:         0       0       0       0       0       0       0
  1317 ;;      Locals:         0       5       0       0       0       0       0
  1318 ;;      Temps:          1       0       0       0       0       0       0
  1319 ;;      Totals:         1       5       0       0       0       0       0
  1320 ;;Total ram usage:        6 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:   11
  1323 ;; This function calls:
  1324 ;;		_UARTNewLine
  1325 ;;		_UARTSendString
  1326 ;;		_int_to_char
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text2
  1333  0033B6                     __ptext2:
  1334                           	opt callstack 0
  1335  0033B6                     _read_op:
  1336                           	opt callstack 0
  1337  0033B6  FFFF               	dw	65535	; assembler added errata NOP
  1338                           
  1339                           ;incstack = 0
  1340                           ;read_op@address stored from wreg
  1341  0033B8  0100               	movlb	0	; () banked
  1342  0033BA  6FDC               	movwf	read_op@address& (0+255),b
  1343                           
  1344                           ;drive_memory.c: 29:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1345  0033BC  0E27               	movlw	39
  1346  0033BE  6E7E               	movwf	??_read_op& (0+255),c
  1347  0033C0  0EFC               	movlw	252
  1348  0033C2                     u5367:
  1349  0033C2  FFFF               	dw	65535	; errata NOP
  1350  0033C4  2EE8               	decfsz	wreg,f,c
  1351  0033C6  D7FD               	bra	u5367
  1352  0033C8  2E7E               	decfsz	??_read_op& (0+255),f,c
  1353  0033CA  D7FB               	bra	u5367
  1354                           
  1355                           ;drive_memory.c: 30:   TRISD = 0xff;
  1356  0033CC  6895               	setf	3989,c	;volatile
  1357                           
  1358                           ;drive_memory.c: 31:   PORTB = address;
  1359  0033CE  C0DC  FF81         	movff	read_op@address,3969	;volatile
  1360                           
  1361                           ;drive_memory.c: 32:   PORTCbits.RC1 = 1;
  1362  0033D2  8282               	bsf	3970,1,c	;volatile
  1363                           
  1364                           ;drive_memory.c: 33:   PORTCbits.RC2 = 0;
  1365  0033D4  9482               	bcf	3970,2,c	;volatile
  1366                           
  1367                           ;drive_memory.c: 37:   char result = 0x00;
  1368  0033D6  0E00               	movlw	0
  1369  0033D8  0100               	movlb	0	; () banked
  1370  0033DA  6FDF               	movwf	read_op@result& (0+255),b
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;drive_memory.c: 38:   char mask = 0x01;
  1374  0033DC  0E01               	movlw	1
  1375  0033DE  6FE0               	movwf	read_op@mask& (0+255),b
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;drive_memory.c: 39:   for (int i = 0; i < 8; i++) {
  1379  0033E0  0E00               	movlw	0
  1380  0033E2  6FDE               	movwf	(read_op@i+1)& (0+255),b
  1381  0033E4  0E00               	movlw	0
  1382  0033E6  6FDD               	movwf	read_op@i& (0+255),b
  1383  0033E8                     l4682:
  1384  0033E8  FFFF               	dw	65535	; assembler added errata NOP
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;drive_memory.c: 40:     result |= (PORTD & mask);
  1388  0033EA  5083               	movf	3971,w,c	;volatile
  1389  0033EC  15E0               	andwf	read_op@mask& (0+255),w,b
  1390  0033EE  13DF               	iorwf	read_op@result& (0+255),f,b
  1391                           
  1392                           ;drive_memory.c: 41:     mask = mask << 1;
  1393  0033F0  51E0               	movf	read_op@mask& (0+255),w,b
  1394  0033F2  25E0               	addwf	read_op@mask& (0+255),w,b
  1395  0033F4  6FE0               	movwf	read_op@mask& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;drive_memory.c: 42:   }
  1399  0033F6  4BDD               	infsnz	read_op@i& (0+255),f,b
  1400  0033F8  2BDE               	incf	(read_op@i+1)& (0+255),f,b
  1401                           
  1402                           ; BSR set to: 0
  1403  0033FA  BFDE               	btfsc	(read_op@i+1)& (0+255),7,b
  1404  0033FC  D7F5               	goto	l4682
  1405  0033FE  51DE               	movf	(read_op@i+1)& (0+255),w,b
  1406  003400  E104               	bnz	u5140
  1407  003402  0E08               	movlw	8
  1408  003404  5DDD               	subwf	read_op@i& (0+255),w,b
  1409  003406  A0D8               	btfss	status,0,c
  1410  003408  D7EF               	goto	l4682
  1411  00340A                     u5140:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;drive_memory.c: 43:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1415  00340A  0E27               	movlw	39
  1416  00340C  6E7E               	movwf	??_read_op& (0+255),c
  1417  00340E  0EFC               	movlw	252
  1418  003410                     u5377:
  1419  003410  FFFF               	dw	65535	; errata NOP
  1420  003412  2EE8               	decfsz	wreg,f,c
  1421  003414  D7FD               	bra	u5377
  1422  003416  2E7E               	decfsz	??_read_op& (0+255),f,c
  1423  003418  D7FB               	bra	u5377
  1424                           
  1425                           ;drive_memory.c: 45:   PORTCbits.RC2 = 1;
  1426  00341A  8482               	bsf	3970,2,c	;volatile
  1427                           
  1428                           ;drive_memory.c: 46:   TRISCbits.TRISC7 = 0;
  1429  00341C  9E94               	bcf	3988,7,c	;volatile
  1430                           
  1431                           ;drive_memory.c: 47:   UARTSendString(int_to_char(result));
  1432  00341E  0100               	movlb	0	; () banked
  1433  003420  51DF               	movf	read_op@result& (0+255),w,b
  1434  003422  6E7A               	movwf	int_to_char@num,c
  1435  003424  6A7B               	clrf	int_to_char@num+1,c
  1436  003426  6A7C               	clrf	int_to_char@num+2,c
  1437  003428  6A7D               	clrf	int_to_char@num+3,c
  1438  00342A  ECD8  F01B         	call	_int_to_char	;wreg free
  1439  00342E  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1440  003432  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1441  003436  EC1E  F01C         	call	_UARTSendString	;wreg free
  1442                           
  1443                           ;drive_memory.c: 48:   UARTNewLine();
  1444  00343A  EC4F  F01D         	call	_UARTNewLine	;wreg free
  1445                           
  1446                           ;drive_memory.c: 49:   return result;
  1447  00343E  0100               	movlb	0	; () banked
  1448  003440  51DF               	movf	read_op@result& (0+255),w,b
  1449                           
  1450                           ; BSR set to: 0
  1451  003442  0012               	return		;funcret
  1452  003444  FFFF               	dw	65535	; errata NOP
  1453  003446                     __end_of_read_op:
  1454                           	opt callstack 0
  1455                           
  1456 ;; *************** function _int_to_char *****************
  1457 ;; Defined at:
  1458 ;;		line 18 in file "lcd.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  num             4  121[COMRAM] unsigned long 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  result         10   18[BANK0 ] unsigned char [10]
  1463 ;;  the_num         4   28[BANK0 ] unsigned long 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2  121[COMRAM] PTR unsigned char 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         4       0       0       0       0       0       0
  1474 ;;      Locals:         0      14       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0
  1476 ;;      Totals:         4      14       0       0       0       0       0
  1477 ;;Total ram usage:       18 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:   10
  1480 ;; This function calls:
  1481 ;;		_getchar
  1482 ;;		_sprintf
  1483 ;; This function is called by:
  1484 ;;		_read_op
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text3
  1490  0037B0                     __ptext3:
  1491                           	opt callstack 0
  1492  0037B0                     _int_to_char:
  1493                           	opt callstack 0
  1494  0037B0  FFFF               	dw	65535	; assembler added errata NOP
  1495                           
  1496                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;incstack = 0
  1500  0037B2  C07A  F0D4         	movff	int_to_char@num,int_to_char@the_num
  1501  0037B6  C07B  F0D5         	movff	int_to_char@num+1,int_to_char@the_num+1
  1502  0037BA  C07C  F0D6         	movff	int_to_char@num+2,int_to_char@the_num+2
  1503  0037BE  C07D  F0D7         	movff	int_to_char@num+3,int_to_char@the_num+3
  1504                           
  1505                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1506  0037C2  0ECA               	movlw	low int_to_char@result
  1507  0037C4  0100               	movlb	0	; () banked
  1508  0037C6  6FB8               	movwf	sprintf@s& (0+255),b
  1509  0037C8  0E00               	movlw	high int_to_char@result
  1510  0037CA  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  1511  0037CC  0E1D               	movlw	low STR_1
  1512  0037CE  6FBA               	movwf	sprintf@fmt& (0+255),b
  1513  0037D0  0E06               	movlw	high STR_1
  1514  0037D2  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  1515  0037D4  C0D4  F0BC         	movff	int_to_char@the_num,?_sprintf+4
  1516  0037D8  C0D5  F0BD         	movff	int_to_char@the_num+1,?_sprintf+5
  1517  0037DC  C0D6  F0BE         	movff	int_to_char@the_num+2,?_sprintf+6
  1518  0037E0  C0D7  F0BF         	movff	int_to_char@the_num+3,?_sprintf+7
  1519  0037E4  ECE1  F01A         	call	_sprintf	;wreg free
  1520                           
  1521                           ;lcd.c: 22:   getchar();
  1522  0037E8  EC77  F01D         	call	_getchar	;wreg free
  1523                           
  1524                           ;lcd.c: 23:   return result;
  1525  0037EC  0ECA               	movlw	low int_to_char@result
  1526  0037EE  6E7A               	movwf	?_int_to_char,c
  1527  0037F0  0E00               	movlw	high int_to_char@result
  1528  0037F2  6E7B               	movwf	?_int_to_char+1,c
  1529  0037F4  0012               	return		;funcret
  1530  0037F6  FFFF               	dw	65535	; errata NOP
  1531  0037F8                     __end_of_int_to_char:
  1532                           	opt callstack 0
  1533                           
  1534 ;; *************** function _sprintf *****************
  1535 ;; Defined at:
  1536 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1539 ;;		 -> int_to_char@result(10), 
  1540 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1541 ;;		 -> STR_1(4), 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1544 ;;  ap              2   16[BANK0 ] PTR void [1]
  1545 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1546 ;;  ret             2    0        int 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    0[BANK0 ] int 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1556 ;;      Params:         0       8       0       0       0       0       0
  1557 ;;      Locals:         0      10       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0
  1559 ;;      Totals:         0      18       0       0       0       0       0
  1560 ;;Total ram usage:       18 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    9
  1563 ;; This function calls:
  1564 ;;		_vfprintf
  1565 ;; This function is called by:
  1566 ;;		_int_to_char
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text4
  1571  0035C2                     __ptext4:
  1572                           	opt callstack 0
  1573  0035C2                     _sprintf:
  1574                           	opt callstack 0
  1575  0035C2  FFFF               	dw	65535	; assembler added errata NOP
  1576                           
  1577                           ;incstack = 0
  1578  0035C4  0EBC               	movlw	low (?_sprintf+4)
  1579  0035C6  0100               	movlb	0	; () banked
  1580  0035C8  6FC8               	movwf	sprintf@ap& (0+255),b
  1581  0035CA  0E00               	movlw	high (?_sprintf+4)
  1582  0035CC  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1583  0035CE  C0B8  F0C2         	movff	sprintf@s,sprintf@f
  1584  0035D2  C0B9  F0C3         	movff	sprintf@s+1,sprintf@f+1
  1585                           
  1586                           ; BSR set to: 0
  1587  0035D6  0E00               	movlw	0
  1588  0035D8  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  1589  0035DA  0E00               	movlw	0
  1590  0035DC  6FC4               	movwf	(sprintf@f+2)& (0+255),b
  1591                           
  1592                           ; BSR set to: 0
  1593  0035DE  0E00               	movlw	0
  1594  0035E0  6FC7               	movwf	(sprintf@f+5)& (0+255),b
  1595  0035E2  0E00               	movlw	0
  1596  0035E4  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  1597                           
  1598                           ; BSR set to: 0
  1599  0035E6  0EC2               	movlw	low sprintf@f
  1600  0035E8  6E72               	movwf	vfprintf@fp,c
  1601  0035EA  0E00               	movlw	high sprintf@f
  1602  0035EC  6E73               	movwf	vfprintf@fp+1,c
  1603  0035EE  C0BA  F074         	movff	sprintf@fmt,vfprintf@fmt
  1604  0035F2  C0BB  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1605  0035F6  0EC8               	movlw	low sprintf@ap
  1606  0035F8  6E76               	movwf	vfprintf@ap,c
  1607  0035FA  0E00               	movlw	high sprintf@ap
  1608  0035FC  6E77               	movwf	vfprintf@ap+1,c
  1609  0035FE  ECB1  F01A         	call	_vfprintf	;wreg free
  1610  003602  0100               	movlb	0	; () banked
  1611  003604  51C4               	movf	(sprintf@f+2)& (0+255),w,b
  1612  003606  25B8               	addwf	sprintf@s& (0+255),w,b
  1613  003608  6ED9               	movwf	fsr2l,c
  1614  00360A  51C5               	movf	(sprintf@f+3)& (0+255),w,b
  1615  00360C  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  1616  00360E  6EDA               	movwf	fsr2h,c
  1617  003610  0E00               	movlw	0
  1618  003612  6EDF               	movwf	indf2,c
  1619                           
  1620                           ; BSR set to: 0
  1621  003614  0012               	return		;funcret
  1622  003616  FFFF               	dw	65535	; errata NOP
  1623  003618                     __end_of_sprintf:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function _vfprintf *****************
  1627 ;; Defined at:
  1628 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1631 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1632 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1633 ;;		 -> STR_2(3), STR_1(4), 
  1634 ;;  ap              2  117[COMRAM] PTR PTR void 
  1635 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1638 ;;		 -> STR_2(3), STR_1(4), 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  2  113[COMRAM] int 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         6       0       0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0
  1651 ;;      Totals:         8       0       0       0       0       0       0
  1652 ;;Total ram usage:        8 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    8
  1655 ;; This function calls:
  1656 ;;		_vfpfcnvrt
  1657 ;; This function is called by:
  1658 ;;		_sprintf
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text5
  1663  003562                     __ptext5:
  1664                           	opt callstack 0
  1665  003562                     _vfprintf:
  1666                           	opt callstack 0
  1667  003562  FFFF               	dw	65535	; assembler added errata NOP
  1668                           
  1669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;incstack = 0
  1673  003564  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1674  003568  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1675                           
  1676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1677  00356C  0E00               	movlw	0
  1678  00356E  0100               	movlb	0	; () banked
  1679  003570  6F8C               	movwf	(_nout+1)& (0+255),b
  1680  003572  0E00               	movlw	0
  1681  003574  6F8B               	movwf	_nout& (0+255),b
  1682                           
  1683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1684  003576  D014               	goto	l4156
  1685  003578                     l4154:
  1686  003578  FFFF               	dw	65535	; assembler added errata NOP
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1690  00357A  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1691  00357E  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1692  003582  0E78               	movlw	low vfprintf@cfmt
  1693  003584  6E45               	movwf	vfpfcnvrt@fmt,c
  1694  003586  0E00               	movlw	high vfprintf@cfmt
  1695  003588  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1696  00358A  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1697  00358E  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1698  003592  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1699  003596  5043               	movf	?_vfpfcnvrt,w,c
  1700  003598  0100               	movlb	0	; () banked
  1701  00359A  278B               	addwf	_nout& (0+255),f,b
  1702  00359C  5044               	movf	?_vfpfcnvrt+1,w,c
  1703  00359E  238C               	addwfc	(_nout+1)& (0+255),f,b
  1704  0035A0                     l4156:
  1705  0035A0  FFFF               	dw	65535	; assembler added errata NOP
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1709  0035A2  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1710  0035A6  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1711  0035AA                     	if	0	;tblptru may be non-zero
  1712  0035AA                     	endif
  1713  0035AA                     	if	0	;tblptru may be non-zero
  1714  0035AA                     	endif
  1715  0035AA  0008               	tblrd		*
  1716  0035AC  FFFF               	dw	65535	; errata NOP
  1717  0035AE  50F5               	movf	tablat,w,c
  1718  0035B0  0900               	iorlw	0
  1719  0035B2  A4D8               	btfss	status,2,c
  1720  0035B4  D7E1               	goto	l4154
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1724  0035B6  C08B  F072         	movff	_nout,?_vfprintf
  1725  0035BA  C08C  F073         	movff	_nout+1,?_vfprintf+1
  1726                           
  1727                           ; BSR set to: 0
  1728  0035BE  0012               	return		;funcret
  1729  0035C0  FFFF               	dw	65535	; errata NOP
  1730  0035C2                     __end_of_vfprintf:
  1731                           	opt callstack 0
  1732                           
  1733 ;; *************** function _vfpfcnvrt *****************
  1734 ;; Defined at:
  1735 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1738 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1739 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1740 ;;		 -> vfprintf@cfmt(2), 
  1741 ;;  ap              2   70[COMRAM] PTR PTR void 
  1742 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  llu             8  105[COMRAM] unsigned long long 
  1745 ;;  ll              8   94[COMRAM] long long 
  1746 ;;  f               4    0        long long 
  1747 ;;  ct              3    0        unsigned char [3]
  1748 ;;  vp              2  102[COMRAM] PTR void 
  1749 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1750 ;;  done            2   88[COMRAM] int 
  1751 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1752 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1753 ;;  i               2    0        int 
  1754 ;;  c               1  104[COMRAM] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2   66[COMRAM] int 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         6       0       0       0       0       0       0
  1765 ;;      Locals:        27       0       0       0       0       0       0
  1766 ;;      Temps:         14       0       0       0       0       0       0
  1767 ;;      Totals:        47       0       0       0       0       0       0
  1768 ;;Total ram usage:       47 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    7
  1771 ;; This function calls:
  1772 ;;		_atoi
  1773 ;;		_ctoa
  1774 ;;		_dtoa
  1775 ;;		_fputc
  1776 ;;		_isdigit
  1777 ;;		_otoa
  1778 ;;		_stoa
  1779 ;;		_strncmp
  1780 ;;		_utoa
  1781 ;;		_xtoa
  1782 ;; This function is called by:
  1783 ;;		_vfprintf
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text6
  1788  00064C                     __ptext6:
  1789                           	opt callstack 0
  1790  00064C                     _vfpfcnvrt:
  1791                           	opt callstack 0
  1792  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1793                           
  1794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;incstack = 0
  1798  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1801  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1802  00065E                     	if	0	;tblptru may be non-zero
  1803  00065E                     	endif
  1804  00065E                     	if	0	;tblptru may be non-zero
  1805  00065E                     	endif
  1806  00065E  0008               	tblrd		*
  1807  000660  FFFF               	dw	65535	; errata NOP
  1808  000662  50F5               	movf	tablat,w,c
  1809  000664  0A25               	xorlw	37
  1810  000666  A4D8               	btfss	status,2,c
  1811  000668  EFD7  F00B         	goto	l4134
  1812                           
  1813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1814  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  000674  2ADE               	incf	postinc2,f,c
  1817  000676  0E00               	movlw	0
  1818  000678  22DD               	addwfc	postdec2,f,c
  1819                           
  1820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1821  00067A  0E00               	movlw	0
  1822  00067C  0100               	movlb	0	; () banked
  1823  00067E  6F8E               	movwf	(_width+1)& (0+255),b
  1824  000680  0E00               	movlw	0
  1825  000682  6F8D               	movwf	_width& (0+255),b
  1826  000684  C08D  F091         	movff	_width,_flags
  1827  000688  C08E  F092         	movff	_width+1,_flags+1
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1831  00068C  698F               	setf	_prec& (0+255),b
  1832  00068E  6990               	setf	(_prec+1)& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1836  000690  0E00               	movlw	0
  1837  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1838  000694  0E00               	movlw	0
  1839  000696  D020               	goto	L1
  1840  000698                     l3776:
  1841  000698  FFFF               	dw	65535	; assembler added errata NOP
  1842                           
  1843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1844  00069A  0100               	movlb	0	; () banked
  1845  00069C  8191               	bsf	_flags& (0+255),0,b
  1846  00069E                     l3778:
  1847  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1851  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853  0006A8  2ADE               	incf	postinc2,f,c
  1854  0006AA  0E00               	movlw	0
  1855  0006AC  22DD               	addwfc	postdec2,f,c
  1856                           
  1857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1858  0006AE  D03A               	goto	l3802
  1859  0006B0                     l3780:
  1860  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1861                           
  1862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1863  0006B2  0100               	movlb	0	; () banked
  1864  0006B4  8391               	bsf	_flags& (0+255),1,b
  1865  0006B6  D7F3               	goto	l3778
  1866  0006B8                     l3784:
  1867  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1868                           
  1869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1870  0006BA  0100               	movlb	0	; () banked
  1871  0006BC  8591               	bsf	_flags& (0+255),2,b
  1872  0006BE  D7EF               	goto	l3778
  1873  0006C0                     l3788:
  1874  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1877  0006C2  0100               	movlb	0	; () banked
  1878  0006C4  8791               	bsf	_flags& (0+255),3,b
  1879  0006C6  D7EB               	goto	l3778
  1880  0006C8                     l3792:
  1881  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1882                           
  1883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1884  0006CA  0100               	movlb	0	; () banked
  1885  0006CC  8991               	bsf	_flags& (0+255),4,b
  1886  0006CE  D7E7               	goto	l3778
  1887  0006D0                     l3796:
  1888  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1891  0006D2  0E00               	movlw	0
  1892  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1893  0006D6  0E01               	movlw	1
  1894  0006D8                     L1:
  1895  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1896  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1897                           
  1898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1899  0006DC  D023               	goto	l3802
  1900  0006DE                     l3800:
  1901  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1902  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1905  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1906  0006F0                     	if	0	;tblptru may be non-zero
  1907  0006F0                     	endif
  1908  0006F0                     	if	0	;tblptru may be non-zero
  1909  0006F0                     	endif
  1910  0006F0  0008               	tblrd		*
  1911  0006F2  FFFF               	dw	65535	; errata NOP
  1912  0006F4  50F5               	movf	tablat,w,c
  1913  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1914  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1915                           
  1916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 1, Range of values is 0 to 0
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte            4     3 (average)
  1922                           ;	Chosen strategy is simple_byte
  1923  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1924  0006FC  0A00               	xorlw	0	; case 0
  1925  0006FE  A4D8               	btfss	status,2,c
  1926  000700  D7E7               	goto	l3796
  1927                           
  1928                           ; Switch size 1, requested type "simple"
  1929                           ; Number of cases is 5, Range of values is 32 to 48
  1930                           ; switch strategies available:
  1931                           ; Name         Instructions Cycles
  1932                           ; simple_byte           16     9 (average)
  1933                           ;	Chosen strategy is simple_byte
  1934  000702  5049               	movf	??_vfpfcnvrt,w,c
  1935  000704  0A20               	xorlw	32	; case 32
  1936  000706  B4D8               	btfsc	status,2,c
  1937  000708  D7DB               	goto	l3788
  1938  00070A  0A03               	xorlw	3	; case 35
  1939  00070C  B4D8               	btfsc	status,2,c
  1940  00070E  D7DC               	goto	l3792
  1941  000710  0A08               	xorlw	8	; case 43
  1942  000712  B4D8               	btfsc	status,2,c
  1943  000714  D7D1               	goto	l3784
  1944  000716  0A06               	xorlw	6	; case 45
  1945  000718  B4D8               	btfsc	status,2,c
  1946  00071A  D7BE               	goto	l3776
  1947  00071C  0A1D               	xorlw	29	; case 48
  1948  00071E  B4D8               	btfsc	status,2,c
  1949  000720  D7C7               	goto	l3780
  1950  000722  D7D6               	goto	l3796
  1951  000724                     l3802:
  1952  000724  FFFF               	dw	65535	; assembler added errata NOP
  1953                           
  1954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1955  000726  5059               	movf	vfpfcnvrt@done,w,c
  1956  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1957  00072A  B4D8               	btfsc	status,2,c
  1958  00072C  D7D8               	goto	l3800
  1959                           
  1960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1961  00072E  0100               	movlb	0	; () banked
  1962  000730  B191               	btfsc	_flags& (0+255),0,b
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1966  000732  9391               	bcf	_flags& (0+255),1,b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1970  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1971  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1972  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1973  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1974  000744                     	if	0	;tblptru may be non-zero
  1975  000744                     	endif
  1976  000744                     	if	0	;tblptru may be non-zero
  1977  000744                     	endif
  1978  000744  0008               	tblrd		*
  1979  000746  FFFF               	dw	65535	; errata NOP
  1980  000748  50F5               	movf	tablat,w,c
  1981  00074A  0A2A               	xorlw	42
  1982  00074C  A4D8               	btfss	status,2,c
  1983  00074E  D023               	goto	l3814
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1987  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1988  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1989  000758  2ADE               	incf	postinc2,f,c
  1990  00075A  0E00               	movlw	0
  1991  00075C  22DD               	addwfc	postdec2,f,c
  1992                           
  1993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1994  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1995  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1996  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1997  00076A  0E02               	movlw	2
  1998  00076C  26DE               	addwf	postinc2,f,c
  1999  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2000  000772  0E00               	movlw	0
  2001  000774  22DD               	addwfc	postdec2,f,c
  2002  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2003  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2004  00077E  CFDE F08D          	movff	postinc2,_width
  2005  000782  CFDD F08E          	movff	postdec2,_width+1
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2009  000786  AF8E               	btfss	(_width+1)& (0+255),7,b
  2010  000788  D045               	goto	u3900
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2014  00078A  8191               	bsf	_flags& (0+255),0,b
  2015                           
  2016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2017  00078C  6D8D               	negf	_width& (0+255),b
  2018  00078E  1F8E               	comf	(_width+1)& (0+255),f,b
  2019  000790  B0D8               	btfsc	status,0,c
  2020  000792  2B8E               	incf	(_width+1)& (0+255),f,b
  2021  000794  D03F               	goto	u3900
  2022  000796                     l3814:
  2023  000796  FFFF               	dw	65535	; assembler added errata NOP
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2027  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2028  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2029  0007A0  CFDE F008          	movff	postinc2,atoi@s
  2030  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  2031  0007A8  EC68  F013         	call	_atoi	;wreg free
  2032  0007AC  C008  F08D         	movff	?_atoi,_width
  2033  0007B0  C009  F08E         	movff	?_atoi+1,_width+1
  2034                           
  2035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2036  0007B4  D008               	goto	l3818
  2037  0007B6                     l3816:
  2038  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  2039                           
  2040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2041  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  0007C0  2ADE               	incf	postinc2,f,c
  2044  0007C2  0E00               	movlw	0
  2045  0007C4  22DD               	addwfc	postdec2,f,c
  2046  0007C6                     l3818:
  2047  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  2048  0007C8  0ED0               	movlw	208
  2049  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2050  0007CC  0EFF               	movlw	255
  2051  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2052  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2053  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2054  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  2055  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  2056  0007E0                     	if	0	;tblptru may be non-zero
  2057  0007E0                     	endif
  2058  0007E0                     	if	0	;tblptru may be non-zero
  2059  0007E0                     	endif
  2060  0007E0  0008               	tblrd		*
  2061  0007E2  FFFF               	dw	65535	; errata NOP
  2062  0007E4  50F5               	movf	tablat,w,c
  2063  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2064  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2065  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  2066  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  2067  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  2068  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2069  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  2070  0007F4  E106               	bnz	u3880
  2071  0007F6  0E0A               	movlw	10
  2072  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2073  0007FA  B0D8               	btfsc	status,0,c
  2074  0007FC  D002               	goto	u3880
  2075  0007FE  0E01               	movlw	1
  2076  000800  D002               	goto	u3890
  2077  000802                     u3880:
  2078  000802  FFFF               	dw	65535	; assembler added errata NOP
  2079  000804  0E00               	movlw	0
  2080  000806                     u3890:
  2081  000806  FFFF               	dw	65535	; assembler added errata NOP
  2082  000808  6E5B               	movwf	_vfpfcnvrt$1152,c
  2083  00080A  6A5C               	clrf	_vfpfcnvrt$1152+1,c
  2084  00080C  505B               	movf	_vfpfcnvrt$1152,w,c
  2085  00080E  105C               	iorwf	_vfpfcnvrt$1152+1,w,c
  2086  000810  A4D8               	btfss	status,2,c
  2087  000812  D7D1               	goto	l3816
  2088  000814                     u3900:
  2089  000814  FFFF               	dw	65535	; assembler added errata NOP
  2090                           
  2091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2092  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2093  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2094  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  2095  000822  CFDD FFF7          	movff	postdec2,tblptrh
  2096  000826                     	if	0	;tblptru may be non-zero
  2097  000826                     	endif
  2098  000826                     	if	0	;tblptru may be non-zero
  2099  000826                     	endif
  2100  000826  0008               	tblrd		*
  2101  000828  FFFF               	dw	65535	; errata NOP
  2102  00082A  50F5               	movf	tablat,w,c
  2103  00082C  0A2E               	xorlw	46
  2104  00082E  A4D8               	btfss	status,2,c
  2105  000830  D075               	goto	u3950
  2106                           
  2107                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2108  000832  0E00               	movlw	0
  2109  000834  0100               	movlb	0	; () banked
  2110  000836  6F90               	movwf	(_prec+1)& (0+255),b
  2111  000838  0E00               	movlw	0
  2112  00083A  6F8F               	movwf	_prec& (0+255),b
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2116  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118  000844  2ADE               	incf	postinc2,f,c
  2119  000846  0E00               	movlw	0
  2120  000848  22DD               	addwfc	postdec2,f,c
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2124  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2125  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2126  000852  CFDE FFF6          	movff	postinc2,tblptrl
  2127  000856  CFDD FFF7          	movff	postdec2,tblptrh
  2128  00085A                     	if	0	;tblptru may be non-zero
  2129  00085A                     	endif
  2130  00085A                     	if	0	;tblptru may be non-zero
  2131  00085A                     	endif
  2132  00085A  0008               	tblrd		*
  2133  00085C  FFFF               	dw	65535	; errata NOP
  2134  00085E  50F5               	movf	tablat,w,c
  2135  000860  0A2A               	xorlw	42
  2136  000862  A4D8               	btfss	status,2,c
  2137  000864  D01C               	goto	l3834
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2141  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2142  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2143  00086E  2ADE               	incf	postinc2,f,c
  2144  000870  0E00               	movlw	0
  2145  000872  22DD               	addwfc	postdec2,f,c
  2146                           
  2147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2148  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2149  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2150  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2151  000880  0E02               	movlw	2
  2152  000882  26DE               	addwf	postinc2,f,c
  2153  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2154  000888  0E00               	movlw	0
  2155  00088A  22DD               	addwfc	postdec2,f,c
  2156  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2157  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2158  000894  CFDE F08F          	movff	postinc2,_prec
  2159  000898  CFDD F090          	movff	postdec2,_prec+1
  2160                           
  2161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2162  00089C  D03F               	goto	u3950
  2163  00089E                     l3834:
  2164  00089E  FFFF               	dw	65535	; assembler added errata NOP
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2168  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  0008A8  CFDE F008          	movff	postinc2,atoi@s
  2171  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  2172  0008B0  EC68  F013         	call	_atoi	;wreg free
  2173  0008B4  C008  F08F         	movff	?_atoi,_prec
  2174  0008B8  C009  F090         	movff	?_atoi+1,_prec+1
  2175                           
  2176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2177  0008BC  D008               	goto	l3838
  2178  0008BE                     l3836:
  2179  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  2180                           
  2181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2182  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2183  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2184  0008C8  2ADE               	incf	postinc2,f,c
  2185  0008CA  0E00               	movlw	0
  2186  0008CC  22DD               	addwfc	postdec2,f,c
  2187  0008CE                     l3838:
  2188  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  2189  0008D0  0ED0               	movlw	208
  2190  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2191  0008D4  0EFF               	movlw	255
  2192  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2193  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2194  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2195  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  2196  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  2197  0008E8                     	if	0	;tblptru may be non-zero
  2198  0008E8                     	endif
  2199  0008E8                     	if	0	;tblptru may be non-zero
  2200  0008E8                     	endif
  2201  0008E8  0008               	tblrd		*
  2202  0008EA  FFFF               	dw	65535	; errata NOP
  2203  0008EC  50F5               	movf	tablat,w,c
  2204  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2205  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2206  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  2207  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  2208  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  2209  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2210  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  2211  0008FC  E106               	bnz	u3930
  2212  0008FE  0E0A               	movlw	10
  2213  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2214  000902  B0D8               	btfsc	status,0,c
  2215  000904  D002               	goto	u3930
  2216  000906  0E01               	movlw	1
  2217  000908  D002               	goto	u3940
  2218  00090A                     u3930:
  2219  00090A  FFFF               	dw	65535	; assembler added errata NOP
  2220  00090C  0E00               	movlw	0
  2221  00090E                     u3940:
  2222  00090E  FFFF               	dw	65535	; assembler added errata NOP
  2223  000910  6E5D               	movwf	_vfpfcnvrt$1153,c
  2224  000912  6A5E               	clrf	_vfpfcnvrt$1153+1,c
  2225  000914  505D               	movf	_vfpfcnvrt$1153,w,c
  2226  000916  105E               	iorwf	_vfpfcnvrt$1153+1,w,c
  2227  000918  A4D8               	btfss	status,2,c
  2228  00091A  D7D1               	goto	l3836
  2229  00091C                     u3950:
  2230  00091C  FFFF               	dw	65535	; assembler added errata NOP
  2231                           
  2232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2233  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2234  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2235  000926  CFDE FFF6          	movff	postinc2,tblptrl
  2236  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  2237  00092E                     	if	0	;tblptru may be non-zero
  2238  00092E                     	endif
  2239  00092E                     	if	0	;tblptru may be non-zero
  2240  00092E                     	endif
  2241  00092E  0008               	tblrd		*
  2242  000930  FFFF               	dw	65535	; errata NOP
  2243  000932  50F5               	movf	tablat,w,c
  2244  000934  0A63               	xorlw	99
  2245  000936  A4D8               	btfss	status,2,c
  2246  000938  D027               	goto	l3852
  2247                           
  2248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2249  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2250  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2251  000942  2ADE               	incf	postinc2,f,c
  2252  000944  0E00               	movlw	0
  2253  000946  22DD               	addwfc	postdec2,f,c
  2254                           
  2255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2256  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2257  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2258  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2259  000954  0E02               	movlw	2
  2260  000956  26DE               	addwf	postinc2,f,c
  2261  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2262  00095C  0E00               	movlw	0
  2263  00095E  22DD               	addwfc	postdec2,f,c
  2264  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2265  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2266  000968  50DF               	movf	indf2,w,c
  2267  00096A  6E69               	movwf	vfpfcnvrt@c,c
  2268                           
  2269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2270  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2271  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2272  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2273  000978  EC37  F01B         	call	_ctoa	;wreg free
  2274  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2275  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2276  000984  EFF3  F00B         	goto	l479
  2277  000988                     l3852:
  2278  000988  FFFF               	dw	65535	; assembler added errata NOP
  2279                           
  2280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2281  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2282  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2283  000992  CFDE F001          	movff	postinc2,strncmp@_l
  2284  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  2285  00099A  0E05               	movlw	low STR_3
  2286  00099C  6E03               	movwf	strncmp@_r,c
  2287  00099E  0E06               	movlw	high STR_3
  2288  0009A0  6E04               	movwf	strncmp@_r+1,c
  2289  0009A2  0E00               	movlw	0
  2290  0009A4  6E06               	movwf	strncmp@n+1,c
  2291  0009A6  0E03               	movlw	3
  2292  0009A8  6E05               	movwf	strncmp@n,c
  2293  0009AA  EC71  F018         	call	_strncmp	;wreg free
  2294  0009AE  5001               	movf	?_strncmp,w,c
  2295  0009B0  1002               	iorwf	?_strncmp+1,w,c
  2296  0009B2  B4D8               	btfsc	status,2,c
  2297  0009B4  D016               	goto	u3980
  2298  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  2301  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2302  0009C6  0E09               	movlw	low STR_7
  2303  0009C8  6E03               	movwf	strncmp@_r,c
  2304  0009CA  0E06               	movlw	high STR_7
  2305  0009CC  6E04               	movwf	strncmp@_r+1,c
  2306  0009CE  0E00               	movlw	0
  2307  0009D0  6E06               	movwf	strncmp@n+1,c
  2308  0009D2  0E03               	movlw	3
  2309  0009D4  6E05               	movwf	strncmp@n,c
  2310  0009D6  EC71  F018         	call	_strncmp	;wreg free
  2311  0009DA  5001               	movf	?_strncmp,w,c
  2312  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2313  0009DE  A4D8               	btfss	status,2,c
  2314  0009E0  D043               	goto	l3862
  2315  0009E2                     u3980:
  2316  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2317                           
  2318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2319  0009E4  0E03               	movlw	3
  2320  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2321  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2322  0009EE  26DE               	addwf	postinc2,f,c
  2323  0009F0  0E00               	movlw	0
  2324  0009F2  22DD               	addwfc	postdec2,f,c
  2325                           
  2326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2327  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2328  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2329  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2330  000A00  0E02               	movlw	2
  2331  000A02  26DE               	addwf	postinc2,f,c
  2332  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2333  000A08  0E00               	movlw	0
  2334  000A0A  22DD               	addwfc	postdec2,f,c
  2335  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2336  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2337  000A14  50DF               	movf	indf2,w,c
  2338  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2339  000A18  0E00               	movlw	0
  2340  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2341  000A1C  0EFF               	movlw	-1
  2342  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2343  000A20                     L2:
  2344  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2345  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2346  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2347  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2348  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2349  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2350  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2351  000A2E                     l3858:
  2352  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2353                           
  2354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2355  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2356  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2357  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2358  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2359  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2360  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2361  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2362  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2363  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2364  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2365  000A58  EC59  F00F         	call	_dtoa	;wreg free
  2366  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2367  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2368  000A64  EFF3  F00B         	goto	l479
  2369  000A68                     l3862:
  2370  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2371                           
  2372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2373  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2374  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2375  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2376  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2377  000A7A  0E06               	movlw	low (STR_3+1)
  2378  000A7C  6E03               	movwf	strncmp@_r,c
  2379  000A7E  0E06               	movlw	high (STR_3+1)
  2380  000A80  6E04               	movwf	strncmp@_r+1,c
  2381  000A82  0E00               	movlw	0
  2382  000A84  6E06               	movwf	strncmp@n+1,c
  2383  000A86  0E02               	movlw	2
  2384  000A88  6E05               	movwf	strncmp@n,c
  2385  000A8A  EC71  F018         	call	_strncmp	;wreg free
  2386  000A8E  5001               	movf	?_strncmp,w,c
  2387  000A90  1002               	iorwf	?_strncmp+1,w,c
  2388  000A92  B4D8               	btfsc	status,2,c
  2389  000A94  D016               	goto	u4000
  2390  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2393  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2394  000AA6  0E0A               	movlw	low (STR_7+1)
  2395  000AA8  6E03               	movwf	strncmp@_r,c
  2396  000AAA  0E06               	movlw	high (STR_7+1)
  2397  000AAC  6E04               	movwf	strncmp@_r+1,c
  2398  000AAE  0E00               	movlw	0
  2399  000AB0  6E06               	movwf	strncmp@n+1,c
  2400  000AB2  0E02               	movlw	2
  2401  000AB4  6E05               	movwf	strncmp@n,c
  2402  000AB6  EC71  F018         	call	_strncmp	;wreg free
  2403  000ABA  5001               	movf	?_strncmp,w,c
  2404  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2405  000ABE  A4D8               	btfss	status,2,c
  2406  000AC0  D008               	goto	l3872
  2407  000AC2                     u4000:
  2408  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2409                           
  2410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2411  000AC4  0E02               	movlw	2
  2412  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2413  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2414  000ACE  26DE               	addwf	postinc2,f,c
  2415  000AD0  D023               	goto	L12
  2416  000AD2                     l3872:
  2417  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2418                           
  2419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2420  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2423  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2424  000AE4                     	if	0	;tblptru may be non-zero
  2425  000AE4                     	endif
  2426  000AE4                     	if	0	;tblptru may be non-zero
  2427  000AE4                     	endif
  2428  000AE4  0008               	tblrd		*
  2429  000AE6  FFFF               	dw	65535	; errata NOP
  2430  000AE8  50F5               	movf	tablat,w,c
  2431  000AEA  0A64               	xorlw	100
  2432  000AEC  B4D8               	btfsc	status,2,c
  2433  000AEE  D00E               	goto	u4020
  2434  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2437  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2438  000B00                     	if	0	;tblptru may be non-zero
  2439  000B00                     	endif
  2440  000B00                     	if	0	;tblptru may be non-zero
  2441  000B00                     	endif
  2442  000B00  0008               	tblrd		*
  2443  000B02  FFFF               	dw	65535	; errata NOP
  2444  000B04  50F5               	movf	tablat,w,c
  2445  000B06  0A69               	xorlw	105
  2446  000B08  A4D8               	btfss	status,2,c
  2447  000B0A  D021               	goto	l3882
  2448  000B0C                     u4020:
  2449  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2450                           
  2451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2452  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  000B16  2ADE               	incf	postinc2,f,c
  2455  000B18                     L12:
  2456  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2457  000B1A  0E00               	movlw	0
  2458  000B1C  22DD               	addwfc	postdec2,f,c
  2459                           
  2460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2461  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2462  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2463  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2464  000B2A  0E02               	movlw	2
  2465  000B2C  26DE               	addwf	postinc2,f,c
  2466  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2467  000B32  0E00               	movlw	0
  2468  000B34  22DD               	addwfc	postdec2,f,c
  2469  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2470  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2471  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2472  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2473  000B46  0E00               	movlw	0
  2474  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2475  000B4A  0EFF               	movlw	-1
  2476  000B4C  D769               	goto	L2
  2477  000B4E                     l3882:
  2478  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2479                           
  2480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2481  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2482  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2483  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2484  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2485  000B60  0E27               	movlw	low STR_21
  2486  000B62  6E03               	movwf	strncmp@_r,c
  2487  000B64  0E06               	movlw	high STR_21
  2488  000B66  6E04               	movwf	strncmp@_r+1,c
  2489  000B68  0E00               	movlw	0
  2490  000B6A  6E06               	movwf	strncmp@n+1,c
  2491  000B6C  0E02               	movlw	2
  2492  000B6E  6E05               	movwf	strncmp@n,c
  2493  000B70  EC71  F018         	call	_strncmp	;wreg free
  2494  000B74  5001               	movf	?_strncmp,w,c
  2495  000B76  1002               	iorwf	?_strncmp+1,w,c
  2496  000B78  B4D8               	btfsc	status,2,c
  2497  000B7A  D016               	goto	u4040
  2498  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2499  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2500  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2501  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2502  000B8C  0E2D               	movlw	low STR_25
  2503  000B8E  6E03               	movwf	strncmp@_r,c
  2504  000B90  0E06               	movlw	high STR_25
  2505  000B92  6E04               	movwf	strncmp@_r+1,c
  2506  000B94  0E00               	movlw	0
  2507  000B96  6E06               	movwf	strncmp@n+1,c
  2508  000B98  0E02               	movlw	2
  2509  000B9A  6E05               	movwf	strncmp@n,c
  2510  000B9C  EC71  F018         	call	_strncmp	;wreg free
  2511  000BA0  5001               	movf	?_strncmp,w,c
  2512  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2513  000BA4  A4D8               	btfss	status,2,c
  2514  000BA6  D043               	goto	l3892
  2515  000BA8                     u4040:
  2516  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2517                           
  2518                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2519  000BAA  0E02               	movlw	2
  2520  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522  000BB4  26DE               	addwf	postinc2,f,c
  2523  000BB6  0E00               	movlw	0
  2524  000BB8  22DD               	addwfc	postdec2,f,c
  2525                           
  2526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2527  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2528  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2529  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2530  000BC6  0E04               	movlw	4
  2531  000BC8  26DE               	addwf	postinc2,f,c
  2532  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2533  000BCE  0E00               	movlw	0
  2534  000BD0  22DD               	addwfc	postdec2,f,c
  2535  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2536  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2537  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2538  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2539  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2540  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2541  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2542  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2543  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2544  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2545  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2546  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2547  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2548  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2549  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2550  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2551  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2552  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2553  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2554  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2555  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2556  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2557  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2558  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2559  000C2C  D700               	goto	l3858
  2560  000C2E                     l3892:
  2561  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2562                           
  2563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2564  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2567  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2568  000C40  0E2A               	movlw	low STR_30
  2569  000C42  6E03               	movwf	strncmp@_r,c
  2570  000C44  0E06               	movlw	high STR_30
  2571  000C46  6E04               	movwf	strncmp@_r+1,c
  2572  000C48  0E00               	movlw	0
  2573  000C4A  6E06               	movwf	strncmp@n+1,c
  2574  000C4C  0E02               	movlw	2
  2575  000C4E  6E05               	movwf	strncmp@n,c
  2576  000C50  EC71  F018         	call	_strncmp	;wreg free
  2577  000C54  5001               	movf	?_strncmp,w,c
  2578  000C56  1002               	iorwf	?_strncmp+1,w,c
  2579  000C58  B4D8               	btfsc	status,2,c
  2580  000C5A  D016               	goto	u4060
  2581  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2582  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2583  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2584  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2585  000C6C  0E30               	movlw	low STR_34
  2586  000C6E  6E03               	movwf	strncmp@_r,c
  2587  000C70  0E06               	movlw	high STR_34
  2588  000C72  6E04               	movwf	strncmp@_r+1,c
  2589  000C74  0E00               	movlw	0
  2590  000C76  6E06               	movwf	strncmp@n+1,c
  2591  000C78  0E02               	movlw	2
  2592  000C7A  6E05               	movwf	strncmp@n,c
  2593  000C7C  EC71  F018         	call	_strncmp	;wreg free
  2594  000C80  5001               	movf	?_strncmp,w,c
  2595  000C82  1002               	iorwf	?_strncmp+1,w,c
  2596  000C84  A4D8               	btfss	status,2,c
  2597  000C86  D028               	goto	l3902
  2598  000C88                     u4060:
  2599  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2600                           
  2601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2602  000C8A  0E02               	movlw	2
  2603  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  000C94  26DE               	addwf	postinc2,f,c
  2606  000C96  0E00               	movlw	0
  2607  000C98  22DD               	addwfc	postdec2,f,c
  2608                           
  2609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2610  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2611  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2612  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2613  000CA6  0E02               	movlw	2
  2614  000CA8  26DE               	addwf	postinc2,f,c
  2615  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2616  000CAE  0E00               	movlw	0
  2617  000CB0  22DD               	addwfc	postdec2,f,c
  2618  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2619  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2620  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2621  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2622  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2623  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2624  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2625  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2626  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2627  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2628  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2629  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2630  000CD6  D6AB               	goto	l3858
  2631  000CD8                     l3902:
  2632  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2633                           
  2634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2635  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2636  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2637  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2638  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2639  000CEA  0E11               	movlw	low STR_39
  2640  000CEC  6E03               	movwf	strncmp@_r,c
  2641  000CEE  0E06               	movlw	high STR_39
  2642  000CF0  6E04               	movwf	strncmp@_r+1,c
  2643  000CF2  0E00               	movlw	0
  2644  000CF4  6E06               	movwf	strncmp@n+1,c
  2645  000CF6  0E03               	movlw	3
  2646  000CF8  6E05               	movwf	strncmp@n,c
  2647  000CFA  EC71  F018         	call	_strncmp	;wreg free
  2648  000CFE  5001               	movf	?_strncmp,w,c
  2649  000D00  1002               	iorwf	?_strncmp+1,w,c
  2650  000D02  A4D8               	btfss	status,2,c
  2651  000D04  D041               	goto	l3910
  2652                           
  2653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2654  000D06  0E03               	movlw	3
  2655  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  000D10  26DE               	addwf	postinc2,f,c
  2658  000D12  0E00               	movlw	0
  2659  000D14  22DD               	addwfc	postdec2,f,c
  2660                           
  2661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2662  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2663  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2664  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2665  000D22  0E02               	movlw	2
  2666  000D24  26DE               	addwf	postinc2,f,c
  2667  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2668  000D2A  0E00               	movlw	0
  2669  000D2C  22DD               	addwfc	postdec2,f,c
  2670  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2671  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2672  000D36  50DF               	movf	indf2,w,c
  2673  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2674  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2675  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2676  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2677  000D40                     L3:
  2678  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2679  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2680  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2681  000D46                     L4:
  2682  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2683  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2684  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2685  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2686  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2687                           
  2688                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2689  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2690  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2691  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2692  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2693  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2694  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2695  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2696  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2697  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2698  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2699  000D78  EC9B  F012         	call	_otoa	;wreg free
  2700  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2701  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2702  000D84  EFF3  F00B         	goto	l479
  2703  000D88                     l3910:
  2704  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2707  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2708  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2709  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2710  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2711  000D9A  0E12               	movlw	low (STR_39+1)
  2712  000D9C  6E03               	movwf	strncmp@_r,c
  2713  000D9E  0E06               	movlw	high (STR_39+1)
  2714  000DA0  6E04               	movwf	strncmp@_r+1,c
  2715  000DA2  0E00               	movlw	0
  2716  000DA4  6E06               	movwf	strncmp@n+1,c
  2717  000DA6  0E02               	movlw	2
  2718  000DA8  6E05               	movwf	strncmp@n,c
  2719  000DAA  EC71  F018         	call	_strncmp	;wreg free
  2720  000DAE  5001               	movf	?_strncmp,w,c
  2721  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2722  000DB2  B4D8               	btfsc	status,2,c
  2723  000DB4  D06B               	goto	u4110
  2724                           
  2725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2726                           
  2727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2728                           
  2729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2730  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2733  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2734  000DC6                     	if	0	;tblptru may be non-zero
  2735  000DC6                     	endif
  2736  000DC6                     	if	0	;tblptru may be non-zero
  2737  000DC6                     	endif
  2738  000DC6  0008               	tblrd		*
  2739  000DC8  FFFF               	dw	65535	; errata NOP
  2740  000DCA  50F5               	movf	tablat,w,c
  2741  000DCC  0A6F               	xorlw	111
  2742  000DCE  A4D8               	btfss	status,2,c
  2743  000DD0  D006               	goto	l3926
  2744                           
  2745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2746  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  000DDA  2ADE               	incf	postinc2,f,c
  2749  000DDC  D05E               	goto	L17
  2750  000DDE                     l3926:
  2751  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2752                           
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2754  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2755  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2756  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2757  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2758  000DF0  0E39               	movlw	low STR_49
  2759  000DF2  6E03               	movwf	strncmp@_r,c
  2760  000DF4  0E06               	movlw	high STR_49
  2761  000DF6  6E04               	movwf	strncmp@_r+1,c
  2762  000DF8  0E00               	movlw	0
  2763  000DFA  6E06               	movwf	strncmp@n+1,c
  2764  000DFC  0E02               	movlw	2
  2765  000DFE  6E05               	movwf	strncmp@n,c
  2766  000E00  EC71  F018         	call	_strncmp	;wreg free
  2767  000E04  5001               	movf	?_strncmp,w,c
  2768  000E06  1002               	iorwf	?_strncmp+1,w,c
  2769  000E08  A4D8               	btfss	status,2,c
  2770  000E0A  D029               	goto	l3934
  2771                           
  2772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2773  000E0C  0E02               	movlw	2
  2774  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  000E16  26DE               	addwf	postinc2,f,c
  2777  000E18  0E00               	movlw	0
  2778  000E1A  22DD               	addwfc	postdec2,f,c
  2779                           
  2780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2781  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2782  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2783  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2784  000E28  0E04               	movlw	4
  2785  000E2A  26DE               	addwf	postinc2,f,c
  2786  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2787  000E30  0E00               	movlw	0
  2788  000E32  22DD               	addwfc	postdec2,f,c
  2789  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2790  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2791  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2792  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2793  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2794  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2795  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2796  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2797  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2798  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2799  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2800  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2801  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2802  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2803  000E5C  D774               	goto	L4
  2804  000E5E                     l3934:
  2805  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2806                           
  2807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2808  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2809  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2810  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2811  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2812  000E70  0E3C               	movlw	low STR_54
  2813  000E72  6E03               	movwf	strncmp@_r,c
  2814  000E74  0E06               	movlw	high STR_54
  2815  000E76  6E04               	movwf	strncmp@_r+1,c
  2816  000E78  0E00               	movlw	0
  2817  000E7A  6E06               	movwf	strncmp@n+1,c
  2818  000E7C  0E02               	movlw	2
  2819  000E7E  6E05               	movwf	strncmp@n,c
  2820  000E80  EC71  F018         	call	_strncmp	;wreg free
  2821  000E84  5001               	movf	?_strncmp,w,c
  2822  000E86  1002               	iorwf	?_strncmp+1,w,c
  2823  000E88  A4D8               	btfss	status,2,c
  2824  000E8A  D023               	goto	l3942
  2825  000E8C                     u4110:
  2826  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2827                           
  2828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2829  000E8E  0E02               	movlw	2
  2830  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2831  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2832  000E98  26DE               	addwf	postinc2,f,c
  2833  000E9A                     L17:
  2834  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2835  000E9C  0E00               	movlw	0
  2836  000E9E  22DD               	addwfc	postdec2,f,c
  2837                           
  2838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2839  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2840  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2841  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2842  000EAC  0E02               	movlw	2
  2843  000EAE  26DE               	addwf	postinc2,f,c
  2844  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2845  000EB4  0E00               	movlw	0
  2846  000EB6  22DD               	addwfc	postdec2,f,c
  2847  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2848  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2849  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2850  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2851  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2852  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2853  000ED0  D737               	goto	L3
  2854  000ED2                     l3942:
  2855  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2856                           
  2857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2858  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2861  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2862  000EE4  0E0D               	movlw	low STR_59
  2863  000EE6  6E03               	movwf	strncmp@_r,c
  2864  000EE8  0E06               	movlw	high STR_59
  2865  000EEA  6E04               	movwf	strncmp@_r+1,c
  2866  000EEC  0E00               	movlw	0
  2867  000EEE  6E06               	movwf	strncmp@n+1,c
  2868  000EF0  0E03               	movlw	3
  2869  000EF2  6E05               	movwf	strncmp@n,c
  2870  000EF4  EC71  F018         	call	_strncmp	;wreg free
  2871  000EF8  5001               	movf	?_strncmp,w,c
  2872  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2873  000EFC  A4D8               	btfss	status,2,c
  2874  000EFE  D028               	goto	l3952
  2875                           
  2876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2877  000F00  0E03               	movlw	3
  2878  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2879  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2880  000F0A  26DE               	addwf	postinc2,f,c
  2881  000F0C  0E00               	movlw	0
  2882  000F0E  22DD               	addwfc	postdec2,f,c
  2883                           
  2884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2885  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2886  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2887  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2888  000F1C  0E02               	movlw	2
  2889  000F1E  26DE               	addwf	postinc2,f,c
  2890  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2891  000F24  0E00               	movlw	0
  2892  000F26  22DD               	addwfc	postdec2,f,c
  2893  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2894  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2895  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2896  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2897                           
  2898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2899  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2900  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2901  000F40  C08B  FFDF         	movff	_nout,indf2
  2902  000F44                     l3948:
  2903  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2904                           
  2905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2906  000F46  0E00               	movlw	0
  2907  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2908  000F4A  0E00               	movlw	0
  2909  000F4C  EFCA  F00B         	goto	L5
  2910  000F50                     l3952:
  2911  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2912                           
  2913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2914  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2917  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2918  000F62  0E0E               	movlw	low (STR_59+1)
  2919  000F64  6E03               	movwf	strncmp@_r,c
  2920  000F66  0E06               	movlw	high (STR_59+1)
  2921  000F68  6E04               	movwf	strncmp@_r+1,c
  2922  000F6A  0E00               	movlw	0
  2923  000F6C  6E06               	movwf	strncmp@n+1,c
  2924  000F6E  0E02               	movlw	2
  2925  000F70  6E05               	movwf	strncmp@n,c
  2926  000F72  EC71  F018         	call	_strncmp	;wreg free
  2927  000F76  5001               	movf	?_strncmp,w,c
  2928  000F78  1002               	iorwf	?_strncmp+1,w,c
  2929  000F7A  A4D8               	btfss	status,2,c
  2930  000F7C  D00B               	goto	l3962
  2931  000F7E  D07F               	goto	u4160
  2932  000F80                     l3956:
  2933  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2934                           
  2935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2936  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2937  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2938  000F8A  C08B  FFDE         	movff	_nout,postinc2
  2939  000F8E  C08C  FFDD         	movff	_nout+1,postdec2
  2940  000F92  D7D8               	goto	l3948
  2941  000F94                     l3962:
  2942  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2945  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2948  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2949  000FA6                     	if	0	;tblptru may be non-zero
  2950  000FA6                     	endif
  2951  000FA6                     	if	0	;tblptru may be non-zero
  2952  000FA6                     	endif
  2953  000FA6  0008               	tblrd		*
  2954  000FA8  FFFF               	dw	65535	; errata NOP
  2955  000FAA  50F5               	movf	tablat,w,c
  2956  000FAC  0A6E               	xorlw	110
  2957  000FAE  A4D8               	btfss	status,2,c
  2958  000FB0  D006               	goto	l3972
  2959                           
  2960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2961  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  000FBA  2ADE               	incf	postinc2,f,c
  2964  000FBC  D067               	goto	L14
  2965  000FBE                     l3972:
  2966  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2967                           
  2968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2969  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2972  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2973  000FD0  0E33               	movlw	low STR_69
  2974  000FD2  6E03               	movwf	strncmp@_r,c
  2975  000FD4  0E06               	movlw	high STR_69
  2976  000FD6  6E04               	movwf	strncmp@_r+1,c
  2977  000FD8  0E00               	movlw	0
  2978  000FDA  6E06               	movwf	strncmp@n+1,c
  2979  000FDC  0E02               	movlw	2
  2980  000FDE  6E05               	movwf	strncmp@n,c
  2981  000FE0  EC71  F018         	call	_strncmp	;wreg free
  2982  000FE4  5001               	movf	?_strncmp,w,c
  2983  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2984  000FE8  A4D8               	btfss	status,2,c
  2985  000FEA  D032               	goto	l3982
  2986                           
  2987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2988  000FEC  0E02               	movlw	2
  2989  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2990  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2991  000FF6  26DE               	addwf	postinc2,f,c
  2992  000FF8  0E00               	movlw	0
  2993  000FFA  22DD               	addwfc	postdec2,f,c
  2994                           
  2995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2996  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2997  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2998  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2999  001008  0E02               	movlw	2
  3000  00100A  26DE               	addwf	postinc2,f,c
  3001  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3002  001010  0E00               	movlw	0
  3003  001012  22DD               	addwfc	postdec2,f,c
  3004  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3005  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3006  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3007  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3008                           
  3009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  3010  001024  C08B  F049         	movff	_nout,??_vfpfcnvrt
  3011  001028  C08C  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  3012  00102C  0E00               	movlw	0
  3013  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  3014  001030  0EFF               	movlw	255
  3015  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3016  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  3017  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3018  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3019  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3020  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3021  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3022  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3023  00104E  D77A               	goto	l3948
  3024  001050                     l3982:
  3025  001050  FFFF               	dw	65535	; assembler added errata NOP
  3026                           
  3027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3028  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3029  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3030  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  3031  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3032  001062  0E36               	movlw	low STR_74
  3033  001064  6E03               	movwf	strncmp@_r,c
  3034  001066  0E06               	movlw	high STR_74
  3035  001068  6E04               	movwf	strncmp@_r+1,c
  3036  00106A  0E00               	movlw	0
  3037  00106C  6E06               	movwf	strncmp@n+1,c
  3038  00106E  0E02               	movlw	2
  3039  001070  6E05               	movwf	strncmp@n,c
  3040  001072  EC71  F018         	call	_strncmp	;wreg free
  3041  001076  5001               	movf	?_strncmp,w,c
  3042  001078  1002               	iorwf	?_strncmp+1,w,c
  3043  00107A  A4D8               	btfss	status,2,c
  3044  00107C  D01F               	goto	l3992
  3045  00107E                     u4160:
  3046  00107E  FFFF               	dw	65535	; assembler added errata NOP
  3047                           
  3048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3049  001080  0E02               	movlw	2
  3050  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3051  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3052  00108A  26DE               	addwf	postinc2,f,c
  3053  00108C                     L14:
  3054  00108C  FFFF               	dw	65535	; assembler added errata NOP
  3055  00108E  0E00               	movlw	0
  3056  001090  22DD               	addwfc	postdec2,f,c
  3057                           
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3059  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3060  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3061  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3062  00109E  0E02               	movlw	2
  3063  0010A0  26DE               	addwf	postinc2,f,c
  3064  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3065  0010A6  0E00               	movlw	0
  3066  0010A8  22DD               	addwfc	postdec2,f,c
  3067  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3068  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3069  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3070  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3071  0010BA  D762               	goto	l3956
  3072  0010BC                     l3992:
  3073  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  3074                           
  3075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3076  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3077  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3078  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  3079  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  3080  0010CE                     	if	0	;tblptru may be non-zero
  3081  0010CE                     	endif
  3082  0010CE                     	if	0	;tblptru may be non-zero
  3083  0010CE                     	endif
  3084  0010CE  0008               	tblrd		*
  3085  0010D0  FFFF               	dw	65535	; errata NOP
  3086  0010D2  50F5               	movf	tablat,w,c
  3087  0010D4  0A70               	xorlw	112
  3088  0010D6  A4D8               	btfss	status,2,c
  3089  0010D8  D03E               	goto	l4000
  3090                           
  3091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3092  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3093  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3094  0010E2  2ADE               	incf	postinc2,f,c
  3095  0010E4  0E00               	movlw	0
  3096  0010E6  22DD               	addwfc	postdec2,f,c
  3097                           
  3098                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3099  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3100  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3101  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3102  0010F4  0E02               	movlw	2
  3103  0010F6  26DE               	addwf	postinc2,f,c
  3104  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3105  0010FC  0E00               	movlw	0
  3106  0010FE  22DD               	addwfc	postdec2,f,c
  3107  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3108  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3109  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3110  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3111  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3112  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3113  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3114  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3115  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3116  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3117  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  3118  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  3119                           
  3120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3121  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3122  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3123  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3124  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3125  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3126  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3127  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3128  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3129  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3130  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3131  00114C  0E78               	movlw	120
  3132  00114E  6E26               	movwf	xtoa@x,c
  3133  001150  EC8E  F010         	call	_xtoa	;wreg free
  3134  001154  D1B4               	goto	L7
  3135  001156                     l4000:
  3136  001156  FFFF               	dw	65535	; assembler added errata NOP
  3137                           
  3138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3139  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3140  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3141  001160  CFDE FFF6          	movff	postinc2,tblptrl
  3142  001164  CFDD FFF7          	movff	postdec2,tblptrh
  3143  001168                     	if	0	;tblptru may be non-zero
  3144  001168                     	endif
  3145  001168                     	if	0	;tblptru may be non-zero
  3146  001168                     	endif
  3147  001168  0008               	tblrd		*
  3148  00116A  FFFF               	dw	65535	; errata NOP
  3149  00116C  50F5               	movf	tablat,w,c
  3150  00116E  0A73               	xorlw	115
  3151  001170  A4D8               	btfss	status,2,c
  3152  001172  D02A               	goto	l4008
  3153                           
  3154                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3155  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  00117C  2ADE               	incf	postinc2,f,c
  3158  00117E  0E00               	movlw	0
  3159  001180  22DD               	addwfc	postdec2,f,c
  3160                           
  3161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3162  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3163  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3164  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3165  00118E  0E02               	movlw	2
  3166  001190  26DE               	addwf	postinc2,f,c
  3167  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3168  001196  0E00               	movlw	0
  3169  001198  22DD               	addwfc	postdec2,f,c
  3170  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3171  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3172  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3173  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3174                           
  3175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3176  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3177  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3178  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3179  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3180  0011BA  EC77  F015         	call	_stoa	;wreg free
  3181  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3182  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3183  0011C6  D30F               	goto	l479
  3184  0011C8                     l4008:
  3185  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  3186                           
  3187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3188  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3189  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3190  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  3191  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3192  0011DA  0E15               	movlw	low STR_79
  3193  0011DC  6E03               	movwf	strncmp@_r,c
  3194  0011DE  0E06               	movlw	high STR_79
  3195  0011E0  6E04               	movwf	strncmp@_r+1,c
  3196  0011E2  0E00               	movlw	0
  3197  0011E4  6E06               	movwf	strncmp@n+1,c
  3198  0011E6  0E03               	movlw	3
  3199  0011E8  6E05               	movwf	strncmp@n,c
  3200  0011EA  EC71  F018         	call	_strncmp	;wreg free
  3201  0011EE  5001               	movf	?_strncmp,w,c
  3202  0011F0  1002               	iorwf	?_strncmp+1,w,c
  3203  0011F2  A4D8               	btfss	status,2,c
  3204  0011F4  D040               	goto	l4016
  3205                           
  3206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3207  0011F6  0E03               	movlw	3
  3208  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  001200  26DE               	addwf	postinc2,f,c
  3211  001202  0E00               	movlw	0
  3212  001204  22DD               	addwfc	postdec2,f,c
  3213                           
  3214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3215  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3216  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3217  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3218  001212  0E02               	movlw	2
  3219  001214  26DE               	addwf	postinc2,f,c
  3220  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3221  00121A  0E00               	movlw	0
  3222  00121C  22DD               	addwfc	postdec2,f,c
  3223  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3224  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3225  001226  50DF               	movf	indf2,w,c
  3226  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3227  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  3228  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  3229  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3230  001230                     L8:
  3231  001230  FFFF               	dw	65535	; assembler added errata NOP
  3232  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3233  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3234  001236                     L9:
  3235  001236  FFFF               	dw	65535	; assembler added errata NOP
  3236  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3237  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3238  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  3239  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  3240                           
  3241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3242  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3243  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3244  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3245  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3246  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3247  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3248  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3249  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3250  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3251  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3252  001268  ECBA  F011         	call	_utoa	;wreg free
  3253  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3254  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3255  001274  D2B8               	goto	l479
  3256  001276                     l4016:
  3257  001276  FFFF               	dw	65535	; assembler added errata NOP
  3258                           
  3259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3260  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3261  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3262  001280  CFDE F001          	movff	postinc2,strncmp@_l
  3263  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  3264  001288  0E16               	movlw	low (STR_79+1)
  3265  00128A  6E03               	movwf	strncmp@_r,c
  3266  00128C  0E06               	movlw	high (STR_79+1)
  3267  00128E  6E04               	movwf	strncmp@_r+1,c
  3268  001290  0E00               	movlw	0
  3269  001292  6E06               	movwf	strncmp@n+1,c
  3270  001294  0E02               	movlw	2
  3271  001296  6E05               	movwf	strncmp@n,c
  3272  001298  EC71  F018         	call	_strncmp	;wreg free
  3273  00129C  5001               	movf	?_strncmp,w,c
  3274  00129E  1002               	iorwf	?_strncmp+1,w,c
  3275  0012A0  B4D8               	btfsc	status,2,c
  3276  0012A2  D06B               	goto	u4230
  3277                           
  3278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3279                           
  3280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3281                           
  3282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3283  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3284  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3285  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  3286  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  3287  0012B4                     	if	0	;tblptru may be non-zero
  3288  0012B4                     	endif
  3289  0012B4                     	if	0	;tblptru may be non-zero
  3290  0012B4                     	endif
  3291  0012B4  0008               	tblrd		*
  3292  0012B6  FFFF               	dw	65535	; errata NOP
  3293  0012B8  50F5               	movf	tablat,w,c
  3294  0012BA  0A75               	xorlw	117
  3295  0012BC  A4D8               	btfss	status,2,c
  3296  0012BE  D006               	goto	l4032
  3297                           
  3298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3299  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3300  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3301  0012C8  2ADE               	incf	postinc2,f,c
  3302  0012CA  D05E               	goto	L18
  3303  0012CC                     l4032:
  3304  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3305                           
  3306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3307  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3308  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3309  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3310  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3311  0012DE  0E1E               	movlw	low (STR_1+1)
  3312  0012E0  6E03               	movwf	strncmp@_r,c
  3313  0012E2  0E06               	movlw	high (STR_1+1)
  3314  0012E4  6E04               	movwf	strncmp@_r+1,c
  3315  0012E6  0E00               	movlw	0
  3316  0012E8  6E06               	movwf	strncmp@n+1,c
  3317  0012EA  0E02               	movlw	2
  3318  0012EC  6E05               	movwf	strncmp@n,c
  3319  0012EE  EC71  F018         	call	_strncmp	;wreg free
  3320  0012F2  5001               	movf	?_strncmp,w,c
  3321  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3322  0012F6  A4D8               	btfss	status,2,c
  3323  0012F8  D029               	goto	l4040
  3324                           
  3325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3326  0012FA  0E02               	movlw	2
  3327  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3328  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3329  001304  26DE               	addwf	postinc2,f,c
  3330  001306  0E00               	movlw	0
  3331  001308  22DD               	addwfc	postdec2,f,c
  3332                           
  3333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3334  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3335  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3336  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3337  001316  0E04               	movlw	4
  3338  001318  26DE               	addwf	postinc2,f,c
  3339  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3340  00131E  0E00               	movlw	0
  3341  001320  22DD               	addwfc	postdec2,f,c
  3342  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3343  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3344  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3345  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3346  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3347  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3348  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3349  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3350  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3351  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3352  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3353  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3354  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3355  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3356  00134A  D775               	goto	L9
  3357  00134C                     l4040:
  3358  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3359                           
  3360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3361  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3362  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3363  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3364  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3365  00135E  0E3F               	movlw	low STR_94
  3366  001360  6E03               	movwf	strncmp@_r,c
  3367  001362  0E06               	movlw	high STR_94
  3368  001364  6E04               	movwf	strncmp@_r+1,c
  3369  001366  0E00               	movlw	0
  3370  001368  6E06               	movwf	strncmp@n+1,c
  3371  00136A  0E02               	movlw	2
  3372  00136C  6E05               	movwf	strncmp@n,c
  3373  00136E  EC71  F018         	call	_strncmp	;wreg free
  3374  001372  5001               	movf	?_strncmp,w,c
  3375  001374  1002               	iorwf	?_strncmp+1,w,c
  3376  001376  A4D8               	btfss	status,2,c
  3377  001378  D023               	goto	l4048
  3378  00137A                     u4230:
  3379  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3380                           
  3381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3382  00137C  0E02               	movlw	2
  3383  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3384  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3385  001386  26DE               	addwf	postinc2,f,c
  3386  001388                     L18:
  3387  001388  FFFF               	dw	65535	; assembler added errata NOP
  3388  00138A  0E00               	movlw	0
  3389  00138C  22DD               	addwfc	postdec2,f,c
  3390                           
  3391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3392  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3393  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3394  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3395  00139A  0E02               	movlw	2
  3396  00139C  26DE               	addwf	postinc2,f,c
  3397  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3398  0013A2  0E00               	movlw	0
  3399  0013A4  22DD               	addwfc	postdec2,f,c
  3400  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3401  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3402  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3403  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3404  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3405  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3406  0013BE  D738               	goto	L8
  3407  0013C0                     l4048:
  3408  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3409                           
  3410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3411  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3412  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3413  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3414  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3415  0013D2  0E19               	movlw	low STR_99
  3416  0013D4  6E03               	movwf	strncmp@_r,c
  3417  0013D6  0E06               	movlw	high STR_99
  3418  0013D8  6E04               	movwf	strncmp@_r+1,c
  3419  0013DA  0E00               	movlw	0
  3420  0013DC  6E06               	movwf	strncmp@n+1,c
  3421  0013DE  0E03               	movlw	3
  3422  0013E0  6E05               	movwf	strncmp@n,c
  3423  0013E2  EC71  F018         	call	_strncmp	;wreg free
  3424  0013E6  5001               	movf	?_strncmp,w,c
  3425  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3426  0013EA  B4D8               	btfsc	status,2,c
  3427  0013EC  D016               	goto	u4250
  3428  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3429  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3430  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3431  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3432  0013FE  0E01               	movlw	low STR_103
  3433  001400  6E03               	movwf	strncmp@_r,c
  3434  001402  0E06               	movlw	high STR_103
  3435  001404  6E04               	movwf	strncmp@_r+1,c
  3436  001406  0E00               	movlw	0
  3437  001408  6E06               	movwf	strncmp@n+1,c
  3438  00140A  0E03               	movlw	3
  3439  00140C  6E05               	movwf	strncmp@n,c
  3440  00140E  EC71  F018         	call	_strncmp	;wreg free
  3441  001412  5001               	movf	?_strncmp,w,c
  3442  001414  1002               	iorwf	?_strncmp+1,w,c
  3443  001416  A4D8               	btfss	status,2,c
  3444  001418  D058               	goto	l4062
  3445  00141A                     u4250:
  3446  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3447                           
  3448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3449  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3450  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3451  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3452  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3453  00142C  0E02               	movlw	2
  3454  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3455  001430  0E00               	movlw	0
  3456  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3457  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3458  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3459  00143C                     	if	0	;tblptru may be non-zero
  3460  00143C                     	endif
  3461  00143C                     	if	0	;tblptru may be non-zero
  3462  00143C                     	endif
  3463  00143C  0008               	tblrd		*
  3464  00143E  FFFF               	dw	65535	; errata NOP
  3465  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3466                           
  3467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3468  001444  0E03               	movlw	3
  3469  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3470  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3471  00144E  26DE               	addwf	postinc2,f,c
  3472  001450  0E00               	movlw	0
  3473  001452  22DD               	addwfc	postdec2,f,c
  3474                           
  3475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3476  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3477  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3478  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3479  001460  0E02               	movlw	2
  3480  001462  26DE               	addwf	postinc2,f,c
  3481  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3482  001468  0E00               	movlw	0
  3483  00146A  22DD               	addwfc	postdec2,f,c
  3484  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3485  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3486  001474  50DF               	movf	indf2,w,c
  3487  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3488  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3489  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3490  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3491  00147E                     L10:
  3492  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3493  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3494  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3495  001484                     L11:
  3496  001484  FFFF               	dw	65535	; assembler added errata NOP
  3497  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3498  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3499  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3500  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3501                           
  3502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3503  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3504  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3505  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3506  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3507  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3508  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3509  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3510  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3511  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3512  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3513  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3514  0014BA  EC8E  F010         	call	_xtoa	;wreg free
  3515  0014BE                     L7:
  3516  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3517  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3518  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3519  0014C8  D18E               	goto	l479
  3520  0014CA                     l4062:
  3521  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3522                           
  3523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3524  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3525  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3526  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3527  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3528  0014DC  0E1A               	movlw	low (STR_99+1)
  3529  0014DE  6E03               	movwf	strncmp@_r,c
  3530  0014E0  0E06               	movlw	high (STR_99+1)
  3531  0014E2  6E04               	movwf	strncmp@_r+1,c
  3532  0014E4  0E00               	movlw	0
  3533  0014E6  6E06               	movwf	strncmp@n+1,c
  3534  0014E8  0E02               	movlw	2
  3535  0014EA  6E05               	movwf	strncmp@n,c
  3536  0014EC  EC71  F018         	call	_strncmp	;wreg free
  3537  0014F0  5001               	movf	?_strncmp,w,c
  3538  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3539  0014F4  B4D8               	btfsc	status,2,c
  3540  0014F6  D016               	goto	u4270
  3541  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3542  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3543  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3544  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3545  001508  0E02               	movlw	low (STR_103+1)
  3546  00150A  6E03               	movwf	strncmp@_r,c
  3547  00150C  0E06               	movlw	high (STR_103+1)
  3548  00150E  6E04               	movwf	strncmp@_r+1,c
  3549  001510  0E00               	movlw	0
  3550  001512  6E06               	movwf	strncmp@n+1,c
  3551  001514  0E02               	movlw	2
  3552  001516  6E05               	movwf	strncmp@n,c
  3553  001518  EC71  F018         	call	_strncmp	;wreg free
  3554  00151C  5001               	movf	?_strncmp,w,c
  3555  00151E  1002               	iorwf	?_strncmp+1,w,c
  3556  001520  A4D8               	btfss	status,2,c
  3557  001522  D014               	goto	l4076
  3558  001524                     u4270:
  3559  001524  FFFF               	dw	65535	; assembler added errata NOP
  3560                           
  3561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3562  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3563  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3564  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3565  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3566  001536  0E01               	movlw	1
  3567  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3568  00153A  0E00               	movlw	0
  3569  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3570  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3571  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3572  001546                     	if	0	;tblptru may be non-zero
  3573  001546                     	endif
  3574  001546                     	if	0	;tblptru may be non-zero
  3575  001546                     	endif
  3576  001546  0008               	tblrd		*
  3577  001548  FFFF               	dw	65535	; errata NOP
  3578  00154A  D0DB               	goto	L26
  3579  00154C                     l4076:
  3580  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3581                           
  3582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3583  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3584  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3585  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3586  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3587  00155E                     	if	0	;tblptru may be non-zero
  3588  00155E                     	endif
  3589  00155E                     	if	0	;tblptru may be non-zero
  3590  00155E                     	endif
  3591  00155E  0008               	tblrd		*
  3592  001560  FFFF               	dw	65535	; errata NOP
  3593  001562  50F5               	movf	tablat,w,c
  3594  001564  0A78               	xorlw	120
  3595  001566  B4D8               	btfsc	status,2,c
  3596  001568  D00E               	goto	u4290
  3597  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3598  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3599  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3600  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3601  00157A                     	if	0	;tblptru may be non-zero
  3602  00157A                     	endif
  3603  00157A                     	if	0	;tblptru may be non-zero
  3604  00157A                     	endif
  3605  00157A  0008               	tblrd		*
  3606  00157C  FFFF               	dw	65535	; errata NOP
  3607  00157E  50F5               	movf	tablat,w,c
  3608  001580  0A58               	xorlw	88
  3609  001582  A4D8               	btfss	status,2,c
  3610  001584  D013               	goto	l4090
  3611  001586                     u4290:
  3612  001586  FFFF               	dw	65535	; assembler added errata NOP
  3613                           
  3614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3615  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3616  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3617  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3618  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3619  001598                     	if	0	;tblptru may be non-zero
  3620  001598                     	endif
  3621  001598                     	if	0	;tblptru may be non-zero
  3622  001598                     	endif
  3623  001598  0008               	tblrd		*
  3624  00159A  FFFF               	dw	65535	; errata NOP
  3625  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3626                           
  3627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3628  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3629  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3630  0015A8  2ADE               	incf	postinc2,f,c
  3631  0015AA  D0B4               	goto	L25
  3632  0015AC                     l4090:
  3633  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3634                           
  3635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3636  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3637  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3638  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3639  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3640  0015BE  0E42               	movlw	low STR_117
  3641  0015C0  6E03               	movwf	strncmp@_r,c
  3642  0015C2  0E06               	movlw	high STR_117
  3643  0015C4  6E04               	movwf	strncmp@_r+1,c
  3644  0015C6  0E00               	movlw	0
  3645  0015C8  6E06               	movwf	strncmp@n+1,c
  3646  0015CA  0E02               	movlw	2
  3647  0015CC  6E05               	movwf	strncmp@n,c
  3648  0015CE  EC71  F018         	call	_strncmp	;wreg free
  3649  0015D2  5001               	movf	?_strncmp,w,c
  3650  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3651  0015D6  B4D8               	btfsc	status,2,c
  3652  0015D8  D016               	goto	u4310
  3653  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3654  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3655  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3656  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3657  0015EA  0E21               	movlw	low STR_121
  3658  0015EC  6E03               	movwf	strncmp@_r,c
  3659  0015EE  0E06               	movlw	high STR_121
  3660  0015F0  6E04               	movwf	strncmp@_r+1,c
  3661  0015F2  0E00               	movlw	0
  3662  0015F4  6E06               	movwf	strncmp@n+1,c
  3663  0015F6  0E02               	movlw	2
  3664  0015F8  6E05               	movwf	strncmp@n,c
  3665  0015FA  EC71  F018         	call	_strncmp	;wreg free
  3666  0015FE  5001               	movf	?_strncmp,w,c
  3667  001600  1002               	iorwf	?_strncmp+1,w,c
  3668  001602  A4D8               	btfss	status,2,c
  3669  001604  D03E               	goto	l4104
  3670  001606                     u4310:
  3671  001606  FFFF               	dw	65535	; assembler added errata NOP
  3672                           
  3673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3674  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3675  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3676  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3677  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3678  001618  0E01               	movlw	1
  3679  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3680  00161C  0E00               	movlw	0
  3681  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3682  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3683  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3684  001628                     	if	0	;tblptru may be non-zero
  3685  001628                     	endif
  3686  001628                     	if	0	;tblptru may be non-zero
  3687  001628                     	endif
  3688  001628  0008               	tblrd		*
  3689  00162A  FFFF               	dw	65535	; errata NOP
  3690  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3691                           
  3692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3693  001630  0E02               	movlw	2
  3694  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3695  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3696  00163A  26DE               	addwf	postinc2,f,c
  3697  00163C  0E00               	movlw	0
  3698  00163E  22DD               	addwfc	postdec2,f,c
  3699                           
  3700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3701  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3702  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3703  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3704  00164C  0E04               	movlw	4
  3705  00164E  26DE               	addwf	postinc2,f,c
  3706  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3707  001654  0E00               	movlw	0
  3708  001656  22DD               	addwfc	postdec2,f,c
  3709  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3710  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3711  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3712  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3713  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3714  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3715  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3716  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3717  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3718  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3719  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3720  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3721  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3722  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3723  001680  D701               	goto	L11
  3724  001682                     l4104:
  3725  001682  FFFF               	dw	65535	; assembler added errata NOP
  3726                           
  3727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3728  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3729  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3730  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3731  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3732  001694  0E45               	movlw	low STR_126
  3733  001696  6E03               	movwf	strncmp@_r,c
  3734  001698  0E06               	movlw	high STR_126
  3735  00169A  6E04               	movwf	strncmp@_r+1,c
  3736  00169C  0E00               	movlw	0
  3737  00169E  6E06               	movwf	strncmp@n+1,c
  3738  0016A0  0E02               	movlw	2
  3739  0016A2  6E05               	movwf	strncmp@n,c
  3740  0016A4  EC71  F018         	call	_strncmp	;wreg free
  3741  0016A8  5001               	movf	?_strncmp,w,c
  3742  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3743  0016AC  B4D8               	btfsc	status,2,c
  3744  0016AE  D016               	goto	u4330
  3745  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3748  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3749  0016C0  0E24               	movlw	low STR_130
  3750  0016C2  6E03               	movwf	strncmp@_r,c
  3751  0016C4  0E06               	movlw	high STR_130
  3752  0016C6  6E04               	movwf	strncmp@_r+1,c
  3753  0016C8  0E00               	movlw	0
  3754  0016CA  6E06               	movwf	strncmp@n+1,c
  3755  0016CC  0E02               	movlw	2
  3756  0016CE  6E05               	movwf	strncmp@n,c
  3757  0016D0  EC71  F018         	call	_strncmp	;wreg free
  3758  0016D4  5001               	movf	?_strncmp,w,c
  3759  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3760  0016D8  A4D8               	btfss	status,2,c
  3761  0016DA  D038               	goto	l4118
  3762  0016DC                     u4330:
  3763  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3764                           
  3765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3766  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3767  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3768  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3769  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3770  0016EE  0E01               	movlw	1
  3771  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3772  0016F2  0E00               	movlw	0
  3773  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3774  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3775  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3776  0016FE                     	if	0	;tblptru may be non-zero
  3777  0016FE                     	endif
  3778  0016FE                     	if	0	;tblptru may be non-zero
  3779  0016FE                     	endif
  3780  0016FE  0008               	tblrd		*
  3781  001700  FFFF               	dw	65535	; errata NOP
  3782  001702                     L26:
  3783  001702  FFFF               	dw	65535	; assembler added errata NOP
  3784  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3785                           
  3786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3787  001708  0E02               	movlw	2
  3788  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3789  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3790  001712  26DE               	addwf	postinc2,f,c
  3791  001714                     L25:
  3792  001714  FFFF               	dw	65535	; assembler added errata NOP
  3793  001716  0E00               	movlw	0
  3794  001718  22DD               	addwfc	postdec2,f,c
  3795                           
  3796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3797  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3798  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3799  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3800  001726  0E02               	movlw	2
  3801  001728  26DE               	addwf	postinc2,f,c
  3802  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3803  00172E  0E00               	movlw	0
  3804  001730  22DD               	addwfc	postdec2,f,c
  3805  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3806  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3807  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3808  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3809  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3810  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3811  00174A  D699               	goto	L10
  3812  00174C                     l4118:
  3813  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3816  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3819  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3820  00175E                     	if	0	;tblptru may be non-zero
  3821  00175E                     	endif
  3822  00175E                     	if	0	;tblptru may be non-zero
  3823  00175E                     	endif
  3824  00175E  0008               	tblrd		*
  3825  001760  FFFF               	dw	65535	; errata NOP
  3826  001762  50F5               	movf	tablat,w,c
  3827  001764  0A25               	xorlw	37
  3828  001766  A4D8               	btfss	status,2,c
  3829  001768  D018               	goto	l4128
  3830                           
  3831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3832  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3833  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3834  001772  2ADE               	incf	postinc2,f,c
  3835  001774  0E00               	movlw	0
  3836  001776  22DD               	addwfc	postdec2,f,c
  3837                           
  3838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3839  001778  0E00               	movlw	0
  3840  00177A  6E02               	movwf	fputc@c+1,c
  3841  00177C  0E25               	movlw	37
  3842  00177E  6E01               	movwf	fputc@c,c
  3843  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3844  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3845  001788  EC30  F019         	call	_fputc	;wreg free
  3846  00178C                     l4124:
  3847  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3848                           
  3849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3850  00178E  0E00               	movlw	0
  3851  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3852  001792  0E01               	movlw	1
  3853  001794                     L5:
  3854  001794  FFFF               	dw	65535	; assembler added errata NOP
  3855  001796  6E43               	movwf	?_vfpfcnvrt,c
  3856  001798  D026               	goto	l479
  3857  00179A                     l4128:
  3858  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3859                           
  3860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3861  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3862  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3863  0017A4  2ADE               	incf	postinc2,f,c
  3864  0017A6  0E00               	movlw	0
  3865  0017A8  22DD               	addwfc	postdec2,f,c
  3866  0017AA  EFA2  F007         	goto	l3948
  3867  0017AE                     l4134:
  3868  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3869                           
  3870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3871  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3872  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3873  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3874  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3875  0017C0                     	if	0	;tblptru may be non-zero
  3876  0017C0                     	endif
  3877  0017C0                     	if	0	;tblptru may be non-zero
  3878  0017C0                     	endif
  3879  0017C0  0008               	tblrd		*
  3880  0017C2  FFFF               	dw	65535	; errata NOP
  3881  0017C4  50F5               	movf	tablat,w,c
  3882  0017C6  6E01               	movwf	fputc@c,c
  3883  0017C8  6A02               	clrf	fputc@c+1,c
  3884  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3885  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3886  0017D2  EC30  F019         	call	_fputc	;wreg free
  3887                           
  3888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3889  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891  0017DE  2ADE               	incf	postinc2,f,c
  3892  0017E0  0E00               	movlw	0
  3893  0017E2  22DD               	addwfc	postdec2,f,c
  3894  0017E4  D7D3               	goto	l4124
  3895  0017E6                     l479:
  3896  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3897  0017E8  0012               	return		;funcret
  3898  0017EA  FFFF               	dw	65535	; errata NOP
  3899  0017EC                     __end_of_vfpfcnvrt:
  3900                           	opt callstack 0
  3901                           
  3902 ;; *************** function _xtoa *****************
  3903 ;; Defined at:
  3904 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3907 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3908 ;;  d               8   29[COMRAM] unsigned long long 
  3909 ;;  x               1   37[COMRAM] unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  n               8   54[COMRAM] unsigned long long 
  3912 ;;  c               2   64[COMRAM] int 
  3913 ;;  i               2   62[COMRAM] int 
  3914 ;;  w               2   52[COMRAM] int 
  3915 ;;  p               2   50[COMRAM] int 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2   27[COMRAM] int 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3925 ;;      Params:        11       0       0       0       0       0       0
  3926 ;;      Locals:        20       0       0       0       0       0       0
  3927 ;;      Temps:          8       0       0       0       0       0       0
  3928 ;;      Totals:        39       0       0       0       0       0       0
  3929 ;;Total ram usage:       39 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    6
  3932 ;; This function calls:
  3933 ;;		_isalpha
  3934 ;;		_isupper
  3935 ;;		_pad
  3936 ;;		_toupper
  3937 ;; This function is called by:
  3938 ;;		_vfpfcnvrt
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text7
  3943  00211C                     __ptext7:
  3944                           	opt callstack 0
  3945  00211C                     _xtoa:
  3946                           	opt callstack 0
  3947  00211C  FFFF               	dw	65535	; assembler added errata NOP
  3948                           
  3949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3950                           
  3951                           ;incstack = 0
  3952  00211E  0100               	movlb	0	; () banked
  3953  002120  AF90               	btfss	(_prec+1)& (0+255),7,b
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3957  002122  9391               	bcf	_flags& (0+255),1,b
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3961  002124  BF90               	btfsc	(_prec+1)& (0+255),7,b
  3962  002126  D005               	goto	u3550
  3963  002128  5190               	movf	(_prec+1)& (0+255),w,b
  3964  00212A  E109               	bnz	l417
  3965  00212C  058F               	decf	_prec& (0+255),w,b
  3966  00212E  B0D8               	btfsc	status,0,c
  3967  002130  D006               	goto	l417
  3968  002132                     u3550:
  3969  002132  FFFF               	dw	65535	; assembler added errata NOP
  3970                           
  3971                           ; BSR set to: 0
  3972  002134  0E00               	movlw	0
  3973  002136  6E34               	movwf	xtoa@p+1,c
  3974  002138  0E01               	movlw	1
  3975  00213A  6E33               	movwf	xtoa@p,c
  3976  00213C  D005               	goto	l419
  3977  00213E                     l417:
  3978  00213E  FFFF               	dw	65535	; assembler added errata NOP
  3979                           
  3980                           ; BSR set to: 0
  3981  002140  C08F  F033         	movff	_prec,xtoa@p
  3982  002144  C090  F034         	movff	_prec+1,xtoa@p+1
  3983  002148                     l419:
  3984  002148  FFFF               	dw	65535	; assembler added errata NOP
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3988  00214A  C08D  F035         	movff	_width,xtoa@w
  3989  00214E  C08E  F036         	movff	_width+1,xtoa@w+1
  3990                           
  3991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3992  002152  A991               	btfss	_flags& (0+255),4,b
  3993  002154  D004               	goto	l3648
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3997  002156  0EFE               	movlw	254
  3998  002158  2635               	addwf	xtoa@w,f,c
  3999  00215A  0EFF               	movlw	255
  4000  00215C  2236               	addwfc	xtoa@w+1,f,c
  4001  00215E                     l3648:
  4002  00215E  FFFF               	dw	65535	; assembler added errata NOP
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4006  002160  C01E  F037         	movff	xtoa@d,xtoa@n
  4007  002164  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4008  002168  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4009  00216C  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4010  002170  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4011  002174  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4012  002178  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4013  00217C  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  4017  002180  0E00               	movlw	0
  4018  002182  6E40               	movwf	xtoa@i+1,c
  4019  002184  0E1F               	movlw	31
  4020  002186  6E3F               	movwf	xtoa@i,c
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  4024  002188  0E00               	movlw	0
  4025  00218A  6FB7               	movwf	(_dbuf+31)& (0+255),b
  4026                           
  4027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4028  00218C  D09D               	goto	l3684
  4029  00218E                     l3654:
  4030  00218E  FFFF               	dw	65535	; assembler added errata NOP
  4031                           
  4032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4033  002190  063F               	decf	xtoa@i,f,c
  4034  002192  A0D8               	btfss	status,0,c
  4035  002194  0640               	decf	xtoa@i+1,f,c
  4036                           
  4037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  4038  002196  0E0F               	movlw	15
  4039  002198  1437               	andwf	xtoa@n,w,c
  4040  00219A  6E41               	movwf	xtoa@c,c
  4041  00219C  6A42               	clrf	xtoa@c+1,c
  4042                           
  4043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  4044  00219E  BE42               	btfsc	xtoa@c+1,7,c
  4045  0021A0  D008               	goto	l3662
  4046  0021A2  5042               	movf	xtoa@c+1,w,c
  4047  0021A4  E104               	bnz	u3570
  4048  0021A6  0E0A               	movlw	10
  4049  0021A8  5C41               	subwf	xtoa@c,w,c
  4050  0021AA  A0D8               	btfss	status,0,c
  4051  0021AC  D002               	goto	l3662
  4052  0021AE                     u3570:
  4053  0021AE  0E57               	movlw	87
  4054  0021B0  D002               	goto	L19
  4055  0021B2                     l3662:
  4056  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  4057  0021B4  0E30               	movlw	48
  4058  0021B6                     L19:
  4059  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  4060  0021B8  2441               	addwf	xtoa@c,w,c
  4061  0021BA  6E41               	movwf	xtoa@c,c
  4062  0021BC  0E00               	movlw	0
  4063  0021BE  2042               	addwfc	xtoa@c+1,w,c
  4064  0021C0  6E42               	movwf	xtoa@c+1,c
  4065                           
  4066                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  4067  0021C2  0EBF               	movlw	191
  4068  0021C4  6E27               	movwf	??_xtoa& (0+255),c
  4069  0021C6  0EFF               	movlw	255
  4070  0021C8  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4071  0021CA  5026               	movf	xtoa@x,w,c
  4072  0021CC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4073  0021CE  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  4074  0021D0  5027               	movf	??_xtoa,w,c
  4075  0021D2  2629               	addwf	??_xtoa+2,f,c
  4076  0021D4  5028               	movf	??_xtoa+1,w,c
  4077  0021D6  222A               	addwfc	??_xtoa+3,f,c
  4078  0021D8  502A               	movf	??_xtoa+3,w,c
  4079  0021DA  E106               	bnz	u3580
  4080  0021DC  0E1A               	movlw	26
  4081  0021DE  5C29               	subwf	??_xtoa+2,w,c
  4082  0021E0  B0D8               	btfsc	status,0,c
  4083  0021E2  D002               	goto	u3580
  4084  0021E4  0E01               	movlw	1
  4085  0021E6  D002               	goto	u3590
  4086  0021E8                     u3580:
  4087  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  4088  0021EA  0E00               	movlw	0
  4089  0021EC                     u3590:
  4090  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  4091  0021EE  6E2F               	movwf	_xtoa$1137,c
  4092  0021F0  6A30               	clrf	_xtoa$1137+1,c
  4093  0021F2  502F               	movf	_xtoa$1137,w,c
  4094  0021F4  1030               	iorwf	_xtoa$1137+1,w,c
  4095  0021F6  B4D8               	btfsc	status,2,c
  4096  0021F8  D029               	goto	l3676
  4097  0021FA  0E9F               	movlw	159
  4098  0021FC  6E27               	movwf	??_xtoa& (0+255),c
  4099  0021FE  0EFF               	movlw	255
  4100  002200  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4101  002202  0E20               	movlw	32
  4102  002204  1041               	iorwf	xtoa@c,w,c
  4103  002206  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4104  002208  0E00               	movlw	0
  4105  00220A  1042               	iorwf	xtoa@c+1,w,c
  4106  00220C  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  4107  00220E  5027               	movf	??_xtoa,w,c
  4108  002210  2629               	addwf	??_xtoa+2,f,c
  4109  002212  5028               	movf	??_xtoa+1,w,c
  4110  002214  222A               	addwfc	??_xtoa+3,f,c
  4111  002216  502A               	movf	??_xtoa+3,w,c
  4112  002218  E106               	bnz	u3610
  4113  00221A  0E1A               	movlw	26
  4114  00221C  5C29               	subwf	??_xtoa+2,w,c
  4115  00221E  B0D8               	btfsc	status,0,c
  4116  002220  D002               	goto	u3610
  4117  002222  0E01               	movlw	1
  4118  002224  D002               	goto	u3620
  4119  002226                     u3610:
  4120  002226  FFFF               	dw	65535	; assembler added errata NOP
  4121  002228  0E00               	movlw	0
  4122  00222A                     u3620:
  4123  00222A  FFFF               	dw	65535	; assembler added errata NOP
  4124  00222C  6E31               	movwf	_xtoa$1138,c
  4125  00222E  6A32               	clrf	_xtoa$1138+1,c
  4126  002230  5031               	movf	_xtoa$1138,w,c
  4127  002232  1032               	iorwf	_xtoa$1138+1,w,c
  4128  002234  B4D8               	btfsc	status,2,c
  4129  002236  D00A               	goto	l3676
  4130                           
  4131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4132  002238  C041  F007         	movff	xtoa@c,toupper@c
  4133  00223C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4134  002240  EC0C  F01B         	call	_toupper	;wreg free
  4135  002244  C007  F041         	movff	?_toupper,xtoa@c
  4136  002248  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4137  00224C                     l3676:
  4138  00224C  FFFF               	dw	65535	; assembler added errata NOP
  4139                           
  4140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4141  00224E  0E98               	movlw	low _dbuf
  4142  002250  243F               	addwf	xtoa@i,w,c
  4143  002252  6ED9               	movwf	fsr2l,c
  4144  002254  0E00               	movlw	high _dbuf
  4145  002256  2040               	addwfc	xtoa@i+1,w,c
  4146  002258  6EDA               	movwf	fsr2h,c
  4147  00225A  C041  FFDF         	movff	xtoa@c,indf2
  4148                           
  4149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4150  00225E  0633               	decf	xtoa@p,f,c
  4151  002260  A0D8               	btfss	status,0,c
  4152  002262  0634               	decf	xtoa@p+1,f,c
  4153                           
  4154                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4155  002264  0635               	decf	xtoa@w,f,c
  4156  002266  A0D8               	btfss	status,0,c
  4157  002268  0636               	decf	xtoa@w+1,f,c
  4158                           
  4159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4160  00226A  C037  F027         	movff	xtoa@n,??_xtoa
  4161  00226E  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4162  002272  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4163  002276  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4164  00227A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4165  00227E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4166  002282  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4167  002286  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4168  00228A  0E05               	movlw	5
  4169  00228C  D00A               	goto	u3640
  4170  00228E                     u3645:
  4171  00228E  FFFF               	dw	65535	; assembler added errata NOP
  4172  002290  90D8               	bcf	status,0,c
  4173  002292  322E               	rrcf	??_xtoa+7,f,c
  4174  002294  322D               	rrcf	??_xtoa+6,f,c
  4175  002296  322C               	rrcf	??_xtoa+5,f,c
  4176  002298  322B               	rrcf	??_xtoa+4,f,c
  4177  00229A  322A               	rrcf	??_xtoa+3,f,c
  4178  00229C  3229               	rrcf	??_xtoa+2,f,c
  4179  00229E  3228               	rrcf	??_xtoa+1,f,c
  4180  0022A0  3227               	rrcf	??_xtoa,f,c
  4181  0022A2                     u3640:
  4182  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  4183  0022A4  2EE8               	decfsz	wreg,f,c
  4184  0022A6  D7F3               	goto	u3645
  4185  0022A8  C027  F037         	movff	??_xtoa,xtoa@n
  4186  0022AC  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4187  0022B0  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4188  0022B4  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4189  0022B8  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4190  0022BC  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4191  0022C0  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4192  0022C4  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4193  0022C8                     l3684:
  4194  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  4195                           
  4196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4197  0022CA  BE40               	btfsc	xtoa@i+1,7,c
  4198  0022CC  D022               	goto	u3690
  4199  0022CE  5040               	movf	xtoa@i+1,w,c
  4200  0022D0  E104               	bnz	u3650
  4201  0022D2  0E02               	movlw	2
  4202  0022D4  5C3F               	subwf	xtoa@i,w,c
  4203  0022D6  A0D8               	btfss	status,0,c
  4204  0022D8  D01C               	goto	u3690
  4205  0022DA                     u3650:
  4206  0022DA  5037               	movf	xtoa@n,w,c
  4207  0022DC  1038               	iorwf	xtoa@n+1,w,c
  4208  0022DE  1039               	iorwf	xtoa@n+2,w,c
  4209  0022E0  103A               	iorwf	xtoa@n+3,w,c
  4210  0022E2  103B               	iorwf	xtoa@n+4,w,c
  4211  0022E4  103C               	iorwf	xtoa@n+5,w,c
  4212  0022E6  103D               	iorwf	xtoa@n+6,w,c
  4213  0022E8  103E               	iorwf	xtoa@n+7,w,c
  4214  0022EA  A4D8               	btfss	status,2,c
  4215  0022EC  D750               	goto	l3654
  4216  0022EE  BE34               	btfsc	xtoa@p+1,7,c
  4217  0022F0  D005               	goto	u3670
  4218  0022F2  5034               	movf	xtoa@p+1,w,c
  4219  0022F4  E102               	bnz	u3671
  4220  0022F6  0433               	decf	xtoa@p,w,c
  4221  0022F8  B0D8               	btfsc	status,0,c
  4222  0022FA                     u3671:
  4223  0022FA  D749               	goto	l3654
  4224  0022FC                     u3670:
  4225  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  4226  0022FE  BE36               	btfsc	xtoa@w+1,7,c
  4227  002300  D008               	goto	u3690
  4228  002302  5036               	movf	xtoa@w+1,w,c
  4229  002304  E103               	bnz	u3680
  4230  002306  0435               	decf	xtoa@w,w,c
  4231  002308  A0D8               	btfss	status,0,c
  4232  00230A  D003               	goto	u3690
  4233  00230C                     u3680:
  4234  00230C  0100               	movlb	0	; () banked
  4235  00230E  B391               	btfsc	_flags& (0+255),1,b
  4236  002310  D73E               	goto	l3654
  4237  002312                     u3690:
  4238  002312  FFFF               	dw	65535	; assembler added errata NOP
  4239                           
  4240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4241  002314  0100               	movlb	0	; () banked
  4242  002316  A991               	btfss	_flags& (0+255),4,b
  4243  002318  D016               	goto	l3700
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4247  00231A  063F               	decf	xtoa@i,f,c
  4248  00231C  A0D8               	btfss	status,0,c
  4249  00231E  0640               	decf	xtoa@i+1,f,c
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4253  002320  0E98               	movlw	low _dbuf
  4254  002322  243F               	addwf	xtoa@i,w,c
  4255  002324  6ED9               	movwf	fsr2l,c
  4256  002326  0E00               	movlw	high _dbuf
  4257  002328  2040               	addwfc	xtoa@i+1,w,c
  4258  00232A  6EDA               	movwf	fsr2h,c
  4259  00232C  C026  FFDF         	movff	xtoa@x,indf2
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4263  002330  063F               	decf	xtoa@i,f,c
  4264  002332  A0D8               	btfss	status,0,c
  4265  002334  0640               	decf	xtoa@i+1,f,c
  4266                           
  4267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4268  002336  0E98               	movlw	low _dbuf
  4269  002338  243F               	addwf	xtoa@i,w,c
  4270  00233A  6ED9               	movwf	fsr2l,c
  4271  00233C  0E00               	movlw	high _dbuf
  4272  00233E  2040               	addwfc	xtoa@i+1,w,c
  4273  002340  6EDA               	movwf	fsr2h,c
  4274  002342  0E30               	movlw	48
  4275  002344  6EDF               	movwf	indf2,c
  4276  002346                     l3700:
  4277  002346  FFFF               	dw	65535	; assembler added errata NOP
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4281  002348  C01C  F011         	movff	xtoa@fp,pad@fp
  4282  00234C  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4283  002350  0E98               	movlw	low _dbuf
  4284  002352  243F               	addwf	xtoa@i,w,c
  4285  002354  6E13               	movwf	pad@buf,c
  4286  002356  0E00               	movlw	high _dbuf
  4287  002358  2040               	addwfc	xtoa@i+1,w,c
  4288  00235A  6E14               	movwf	pad@buf+1,c
  4289  00235C  C035  F015         	movff	xtoa@w,pad@p
  4290  002360  C036  F016         	movff	xtoa@w+1,pad@p+1
  4291  002364  EC86  F019         	call	_pad	;wreg free
  4292  002368  C011  F01C         	movff	?_pad,?_xtoa
  4293  00236C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4294  002370  0012               	return		;funcret
  4295  002372  FFFF               	dw	65535	; errata NOP
  4296  002374                     __end_of_xtoa:
  4297                           	opt callstack 0
  4298                           
  4299 ;; *************** function _toupper *****************
  4300 ;; Defined at:
  4301 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  c               2    6[COMRAM] int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2    6[COMRAM] int 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4315 ;;      Params:         2       0       0       0       0       0       0
  4316 ;;      Locals:         2       0       0       0       0       0       0
  4317 ;;      Temps:          4       0       0       0       0       0       0
  4318 ;;      Totals:         8       0       0       0       0       0       0
  4319 ;;Total ram usage:        8 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		_islower
  4324 ;; This function is called by:
  4325 ;;		_xtoa
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text8
  4330  003618                     __ptext8:
  4331                           	opt callstack 0
  4332  003618                     _toupper:
  4333                           	opt callstack 0
  4334  003618  FFFF               	dw	65535	; assembler added errata NOP
  4335                           
  4336                           ;incstack = 0
  4337  00361A  0E9F               	movlw	159
  4338  00361C  6E09               	movwf	??_toupper& (0+255),c
  4339  00361E  0EFF               	movlw	255
  4340  003620  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4341  003622  C007  F00B         	movff	toupper@c,??_toupper+2
  4342  003626  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4343  00362A  5009               	movf	??_toupper,w,c
  4344  00362C  260B               	addwf	??_toupper+2,f,c
  4345  00362E  500A               	movf	??_toupper+1,w,c
  4346  003630  220C               	addwfc	??_toupper+3,f,c
  4347  003632  500C               	movf	??_toupper+3,w,c
  4348  003634  E106               	bnz	u2850
  4349  003636  0E1A               	movlw	26
  4350  003638  5C0B               	subwf	??_toupper+2,w,c
  4351  00363A  B0D8               	btfsc	status,0,c
  4352  00363C  D002               	goto	u2850
  4353  00363E  0E01               	movlw	1
  4354  003640  D002               	goto	u2860
  4355  003642                     u2850:
  4356  003642  FFFF               	dw	65535	; assembler added errata NOP
  4357  003644  0E00               	movlw	0
  4358  003646                     u2860:
  4359  003646  FFFF               	dw	65535	; assembler added errata NOP
  4360  003648  6E0D               	movwf	_toupper$1904,c
  4361  00364A  6A0E               	clrf	_toupper$1904+1,c
  4362  00364C  500D               	movf	_toupper$1904,w,c
  4363  00364E  100E               	iorwf	_toupper$1904+1,w,c
  4364  003650  B4D8               	btfsc	status,2,c
  4365  003652  D005               	goto	l1352
  4366  003654  0E5F               	movlw	95
  4367  003656  1407               	andwf	toupper@c,w,c
  4368  003658  6E07               	movwf	?_toupper,c
  4369  00365A  6A08               	clrf	?_toupper+1,c
  4370  00365C  D005               	goto	l1357
  4371  00365E                     l1352:
  4372  00365E  FFFF               	dw	65535	; assembler added errata NOP
  4373  003660  C007  F007         	movff	toupper@c,?_toupper
  4374  003664  C008  F008         	movff	toupper@c+1,?_toupper+1
  4375  003668                     l1357:
  4376  003668  FFFF               	dw	65535	; assembler added errata NOP
  4377  00366A  0012               	return		;funcret
  4378  00366C  FFFF               	dw	65535	; errata NOP
  4379  00366E                     __end_of_toupper:
  4380                           	opt callstack 0
  4381                           
  4382 ;; *************** function _islower *****************
  4383 ;; Defined at:
  4384 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  c               2    0[COMRAM] int 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  2    0[COMRAM] int 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4398 ;;      Params:         2       0       0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0
  4400 ;;      Temps:          4       0       0       0       0       0       0
  4401 ;;      Totals:         6       0       0       0       0       0       0
  4402 ;;Total ram usage:        6 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    2
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_toupper
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text9
  4413  003974                     __ptext9:
  4414                           	opt callstack 0
  4415  003974                     _islower:
  4416                           	opt callstack 0
  4417  003974  FFFF               	dw	65535	; assembler added errata NOP
  4418                           
  4419                           ;incstack = 0
  4420  003976  0E9F               	movlw	159
  4421  003978  6E03               	movwf	??_islower& (0+255),c
  4422  00397A  0EFF               	movlw	255
  4423  00397C  6E04               	movwf	(??_islower+1)& (0+255),c
  4424  00397E  C001  F005         	movff	islower@c,??_islower+2
  4425  003982  C002  F006         	movff	islower@c+1,??_islower+3
  4426  003986  5003               	movf	??_islower,w,c
  4427  003988  2605               	addwf	??_islower+2,f,c
  4428  00398A  5004               	movf	??_islower+1,w,c
  4429  00398C  2206               	addwfc	??_islower+3,f,c
  4430  00398E  5006               	movf	??_islower+3,w,c
  4431  003990  E106               	bnz	u2740
  4432  003992  0E1A               	movlw	26
  4433  003994  5C05               	subwf	??_islower+2,w,c
  4434  003996  B0D8               	btfsc	status,0,c
  4435  003998  D002               	goto	u2740
  4436  00399A  0E01               	movlw	1
  4437  00399C  D002               	goto	u2750
  4438  00399E                     u2740:
  4439  00399E  FFFF               	dw	65535	; assembler added errata NOP
  4440  0039A0  0E00               	movlw	0
  4441  0039A2                     u2750:
  4442  0039A2  FFFF               	dw	65535	; assembler added errata NOP
  4443  0039A4  6E01               	movwf	?_islower,c
  4444  0039A6  6A02               	clrf	?_islower+1,c
  4445  0039A8  0012               	return		;funcret
  4446  0039AA  FFFF               	dw	65535	; errata NOP
  4447  0039AC                     __end_of_islower:
  4448                           	opt callstack 0
  4449                           
  4450 ;; *************** function _isupper *****************
  4451 ;; Defined at:
  4452 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  c               2    0[COMRAM] int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  2    0[COMRAM] int 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4466 ;;      Params:         2       0       0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0
  4468 ;;      Temps:          4       0       0       0       0       0       0
  4469 ;;      Totals:         6       0       0       0       0       0       0
  4470 ;;Total ram usage:        6 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    2
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_xtoa
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text10
  4481  0039AC                     __ptext10:
  4482                           	opt callstack 0
  4483  0039AC                     _isupper:
  4484                           	opt callstack 0
  4485  0039AC  FFFF               	dw	65535	; assembler added errata NOP
  4486                           
  4487                           ;incstack = 0
  4488  0039AE  0EBF               	movlw	191
  4489  0039B0  6E03               	movwf	??_isupper& (0+255),c
  4490  0039B2  0EFF               	movlw	255
  4491  0039B4  6E04               	movwf	(??_isupper+1)& (0+255),c
  4492  0039B6  C001  F005         	movff	isupper@c,??_isupper+2
  4493  0039BA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4494  0039BE  5003               	movf	??_isupper,w,c
  4495  0039C0  2605               	addwf	??_isupper+2,f,c
  4496  0039C2  5004               	movf	??_isupper+1,w,c
  4497  0039C4  2206               	addwfc	??_isupper+3,f,c
  4498  0039C6  5006               	movf	??_isupper+3,w,c
  4499  0039C8  E106               	bnz	u2810
  4500  0039CA  0E1A               	movlw	26
  4501  0039CC  5C05               	subwf	??_isupper+2,w,c
  4502  0039CE  B0D8               	btfsc	status,0,c
  4503  0039D0  D002               	goto	u2810
  4504  0039D2  0E01               	movlw	1
  4505  0039D4  D002               	goto	u2820
  4506  0039D6                     u2810:
  4507  0039D6  FFFF               	dw	65535	; assembler added errata NOP
  4508  0039D8  0E00               	movlw	0
  4509  0039DA                     u2820:
  4510  0039DA  FFFF               	dw	65535	; assembler added errata NOP
  4511  0039DC  6E01               	movwf	?_isupper,c
  4512  0039DE  6A02               	clrf	?_isupper+1,c
  4513  0039E0  0012               	return		;funcret
  4514  0039E2  FFFF               	dw	65535	; errata NOP
  4515  0039E4                     __end_of_isupper:
  4516                           	opt callstack 0
  4517                           
  4518 ;; *************** function _isalpha *****************
  4519 ;; Defined at:
  4520 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  c               2    0[COMRAM] int 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2    0[COMRAM] int 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4534 ;;      Params:         2       0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0
  4536 ;;      Temps:          4       0       0       0       0       0       0
  4537 ;;      Totals:         6       0       0       0       0       0       0
  4538 ;;Total ram usage:        6 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    2
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_xtoa
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text11
  4549  0038C2                     __ptext11:
  4550                           	opt callstack 0
  4551  0038C2                     _isalpha:
  4552                           	opt callstack 0
  4553  0038C2  FFFF               	dw	65535	; assembler added errata NOP
  4554                           
  4555                           ;incstack = 0
  4556  0038C4  0E9F               	movlw	159
  4557  0038C6  6E03               	movwf	??_isalpha& (0+255),c
  4558  0038C8  0EFF               	movlw	255
  4559  0038CA  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4560  0038CC  0E20               	movlw	32
  4561  0038CE  1001               	iorwf	isalpha@c,w,c
  4562  0038D0  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4563  0038D2  0E00               	movlw	0
  4564  0038D4  1002               	iorwf	isalpha@c+1,w,c
  4565  0038D6  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4566  0038D8  5003               	movf	??_isalpha,w,c
  4567  0038DA  2605               	addwf	??_isalpha+2,f,c
  4568  0038DC  5004               	movf	??_isalpha+1,w,c
  4569  0038DE  2206               	addwfc	??_isalpha+3,f,c
  4570  0038E0  5006               	movf	??_isalpha+3,w,c
  4571  0038E2  E106               	bnz	u2830
  4572  0038E4  0E1A               	movlw	26
  4573  0038E6  5C05               	subwf	??_isalpha+2,w,c
  4574  0038E8  B0D8               	btfsc	status,0,c
  4575  0038EA  D002               	goto	u2830
  4576  0038EC  0E01               	movlw	1
  4577  0038EE  D002               	goto	u2840
  4578  0038F0                     u2830:
  4579  0038F0  FFFF               	dw	65535	; assembler added errata NOP
  4580  0038F2  0E00               	movlw	0
  4581  0038F4                     u2840:
  4582  0038F4  FFFF               	dw	65535	; assembler added errata NOP
  4583  0038F6  6E01               	movwf	?_isalpha,c
  4584  0038F8  6A02               	clrf	?_isalpha+1,c
  4585  0038FA  0012               	return		;funcret
  4586  0038FC  FFFF               	dw	65535	; errata NOP
  4587  0038FE                     __end_of_isalpha:
  4588                           	opt callstack 0
  4589                           
  4590 ;; *************** function _utoa *****************
  4591 ;; Defined at:
  4592 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4595 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4596 ;;  d               8   29[COMRAM] unsigned long long 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  n               8   49[COMRAM] unsigned long long 
  4599 ;;  i               2   57[COMRAM] int 
  4600 ;;  w               2   47[COMRAM] int 
  4601 ;;  p               2   45[COMRAM] int 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2   27[COMRAM] int 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4611 ;;      Params:        10       0       0       0       0       0       0
  4612 ;;      Locals:        14       0       0       0       0       0       0
  4613 ;;      Temps:          8       0       0       0       0       0       0
  4614 ;;      Totals:        32       0       0       0       0       0       0
  4615 ;;Total ram usage:       32 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    6
  4618 ;; This function calls:
  4619 ;;		___lodiv
  4620 ;;		___lomod
  4621 ;;		_pad
  4622 ;; This function is called by:
  4623 ;;		_vfpfcnvrt
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text12
  4628  002374                     __ptext12:
  4629                           	opt callstack 0
  4630  002374                     _utoa:
  4631                           	opt callstack 0
  4632  002374  FFFF               	dw	65535	; assembler added errata NOP
  4633                           
  4634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4635                           
  4636                           ;incstack = 0
  4637  002376  0100               	movlb	0	; () banked
  4638  002378  AF90               	btfss	(_prec+1)& (0+255),7,b
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4642  00237A  9391               	bcf	_flags& (0+255),1,b
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4646  00237C  BF90               	btfsc	(_prec+1)& (0+255),7,b
  4647  00237E  D005               	goto	u3480
  4648  002380  5190               	movf	(_prec+1)& (0+255),w,b
  4649  002382  E109               	bnz	l402
  4650  002384  058F               	decf	_prec& (0+255),w,b
  4651  002386  B0D8               	btfsc	status,0,c
  4652  002388  D006               	goto	l402
  4653  00238A                     u3480:
  4654  00238A  FFFF               	dw	65535	; assembler added errata NOP
  4655                           
  4656                           ; BSR set to: 0
  4657  00238C  0E00               	movlw	0
  4658  00238E  6E2F               	movwf	utoa@p+1,c
  4659  002390  0E01               	movlw	1
  4660  002392  6E2E               	movwf	utoa@p,c
  4661  002394  D005               	goto	l404
  4662  002396                     l402:
  4663  002396  FFFF               	dw	65535	; assembler added errata NOP
  4664                           
  4665                           ; BSR set to: 0
  4666  002398  C08F  F02E         	movff	_prec,utoa@p
  4667  00239C  C090  F02F         	movff	_prec+1,utoa@p+1
  4668  0023A0                     l404:
  4669  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4673  0023A2  C08D  F030         	movff	_width,utoa@w
  4674  0023A6  C08E  F031         	movff	_width+1,utoa@w+1
  4675                           
  4676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4677  0023AA  C01E  F032         	movff	utoa@d,utoa@n
  4678  0023AE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4679  0023B2  C020  F034         	movff	utoa@d+2,utoa@n+2
  4680  0023B6  C021  F035         	movff	utoa@d+3,utoa@n+3
  4681  0023BA  C022  F036         	movff	utoa@d+4,utoa@n+4
  4682  0023BE  C023  F037         	movff	utoa@d+5,utoa@n+5
  4683  0023C2  C024  F038         	movff	utoa@d+6,utoa@n+6
  4684  0023C6  C025  F039         	movff	utoa@d+7,utoa@n+7
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4688  0023CA  0E00               	movlw	0
  4689  0023CC  6E3B               	movwf	utoa@i+1,c
  4690  0023CE  0E1F               	movlw	31
  4691  0023D0  6E3A               	movwf	utoa@i,c
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4695  0023D2  0E00               	movlw	0
  4696  0023D4  6FB7               	movwf	(_dbuf+31)& (0+255),b
  4697                           
  4698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4699  0023D6  D077               	goto	l3624
  4700  0023D8                     l3614:
  4701  0023D8  FFFF               	dw	65535	; assembler added errata NOP
  4702                           
  4703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4704  0023DA  063A               	decf	utoa@i,f,c
  4705  0023DC  A0D8               	btfss	status,0,c
  4706  0023DE  063B               	decf	utoa@i+1,f,c
  4707                           
  4708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4709  0023E0  0E98               	movlw	low _dbuf
  4710  0023E2  243A               	addwf	utoa@i,w,c
  4711  0023E4  6ED9               	movwf	fsr2l,c
  4712  0023E6  0E00               	movlw	high _dbuf
  4713  0023E8  203B               	addwfc	utoa@i+1,w,c
  4714  0023EA  6EDA               	movwf	fsr2h,c
  4715  0023EC  C032  F001         	movff	utoa@n,___lomod@dividend
  4716  0023F0  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4717  0023F4  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4718  0023F8  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4719  0023FC  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4720  002400  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4721  002404  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4722  002408  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4723  00240C  0E0A               	movlw	10
  4724  00240E  6E09               	movwf	___lomod@divisor,c
  4725  002410  0E00               	movlw	0
  4726  002412  6E0A               	movwf	___lomod@divisor+1,c
  4727  002414  0E00               	movlw	0
  4728  002416  6E0B               	movwf	___lomod@divisor+2,c
  4729  002418  0E00               	movlw	0
  4730  00241A  6E0C               	movwf	___lomod@divisor+3,c
  4731  00241C  0E00               	movlw	0
  4732  00241E  6E0D               	movwf	___lomod@divisor+4,c
  4733  002420  0E00               	movlw	0
  4734  002422  6E0E               	movwf	___lomod@divisor+5,c
  4735  002424  0E00               	movlw	0
  4736  002426  6E0F               	movwf	___lomod@divisor+6,c
  4737  002428  0E00               	movlw	0
  4738  00242A  6E10               	movwf	___lomod@divisor+7,c
  4739  00242C  ECD2  F018         	call	___lomod	;wreg free
  4740  002430  C001  F026         	movff	?___lomod,??_utoa
  4741  002434  C002  F027         	movff	?___lomod+1,??_utoa+1
  4742  002438  C003  F028         	movff	?___lomod+2,??_utoa+2
  4743  00243C  C004  F029         	movff	?___lomod+3,??_utoa+3
  4744  002440  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4745  002444  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4746  002448  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4747  00244C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4748  002450  5026               	movf	??_utoa,w,c
  4749  002452  0F30               	addlw	48
  4750  002454  6EDF               	movwf	indf2,c
  4751                           
  4752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4753  002456  062E               	decf	utoa@p,f,c
  4754  002458  A0D8               	btfss	status,0,c
  4755  00245A  062F               	decf	utoa@p+1,f,c
  4756                           
  4757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4758  00245C  0630               	decf	utoa@w,f,c
  4759  00245E  A0D8               	btfss	status,0,c
  4760  002460  0631               	decf	utoa@w+1,f,c
  4761                           
  4762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4763  002462  C032  F001         	movff	utoa@n,___lodiv@dividend
  4764  002466  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4765  00246A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4766  00246E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4767  002472  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4768  002476  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4769  00247A  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4770  00247E  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4771  002482  0E0A               	movlw	10
  4772  002484  6E09               	movwf	___lodiv@divisor,c
  4773  002486  0E00               	movlw	0
  4774  002488  6E0A               	movwf	___lodiv@divisor+1,c
  4775  00248A  0E00               	movlw	0
  4776  00248C  6E0B               	movwf	___lodiv@divisor+2,c
  4777  00248E  0E00               	movlw	0
  4778  002490  6E0C               	movwf	___lodiv@divisor+3,c
  4779  002492  0E00               	movlw	0
  4780  002494  6E0D               	movwf	___lodiv@divisor+4,c
  4781  002496  0E00               	movlw	0
  4782  002498  6E0E               	movwf	___lodiv@divisor+5,c
  4783  00249A  0E00               	movlw	0
  4784  00249C  6E0F               	movwf	___lodiv@divisor+6,c
  4785  00249E  0E00               	movlw	0
  4786  0024A0  6E10               	movwf	___lodiv@divisor+7,c
  4787  0024A2  EC34  F017         	call	___lodiv	;wreg free
  4788  0024A6  C001  F032         	movff	?___lodiv,utoa@n
  4789  0024AA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4790  0024AE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4791  0024B2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4792  0024B6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4793  0024BA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4794  0024BE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4795  0024C2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4796  0024C6                     l3624:
  4797  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  4798                           
  4799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4800  0024C8  503A               	movf	utoa@i,w,c
  4801  0024CA  103B               	iorwf	utoa@i+1,w,c
  4802  0024CC  B4D8               	btfsc	status,2,c
  4803  0024CE  D01C               	goto	u3530
  4804  0024D0  5032               	movf	utoa@n,w,c
  4805  0024D2  1033               	iorwf	utoa@n+1,w,c
  4806  0024D4  1034               	iorwf	utoa@n+2,w,c
  4807  0024D6  1035               	iorwf	utoa@n+3,w,c
  4808  0024D8  1036               	iorwf	utoa@n+4,w,c
  4809  0024DA  1037               	iorwf	utoa@n+5,w,c
  4810  0024DC  1038               	iorwf	utoa@n+6,w,c
  4811  0024DE  1039               	iorwf	utoa@n+7,w,c
  4812  0024E0  A4D8               	btfss	status,2,c
  4813  0024E2  D77A               	goto	l3614
  4814  0024E4  BE2F               	btfsc	utoa@p+1,7,c
  4815  0024E6  D005               	goto	u3510
  4816  0024E8  502F               	movf	utoa@p+1,w,c
  4817  0024EA  E102               	bnz	u3511
  4818  0024EC  042E               	decf	utoa@p,w,c
  4819  0024EE  B0D8               	btfsc	status,0,c
  4820  0024F0                     u3511:
  4821  0024F0  D773               	goto	l3614
  4822  0024F2                     u3510:
  4823  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  4824  0024F4  BE31               	btfsc	utoa@w+1,7,c
  4825  0024F6  D008               	goto	u3530
  4826  0024F8  5031               	movf	utoa@w+1,w,c
  4827  0024FA  E103               	bnz	u3520
  4828  0024FC  0430               	decf	utoa@w,w,c
  4829  0024FE  A0D8               	btfss	status,0,c
  4830  002500  D003               	goto	u3530
  4831  002502                     u3520:
  4832  002502  0100               	movlb	0	; () banked
  4833  002504  B391               	btfsc	_flags& (0+255),1,b
  4834  002506  D768               	goto	l3614
  4835  002508                     u3530:
  4836  002508  FFFF               	dw	65535	; assembler added errata NOP
  4837                           
  4838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4839  00250A  C01C  F011         	movff	utoa@fp,pad@fp
  4840  00250E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4841  002512  0E98               	movlw	low _dbuf
  4842  002514  243A               	addwf	utoa@i,w,c
  4843  002516  6E13               	movwf	pad@buf,c
  4844  002518  0E00               	movlw	high _dbuf
  4845  00251A  203B               	addwfc	utoa@i+1,w,c
  4846  00251C  6E14               	movwf	pad@buf+1,c
  4847  00251E  C030  F015         	movff	utoa@w,pad@p
  4848  002522  C031  F016         	movff	utoa@w+1,pad@p+1
  4849  002526  EC86  F019         	call	_pad	;wreg free
  4850  00252A  C011  F01C         	movff	?_pad,?_utoa
  4851  00252E  C012  F01D         	movff	?_pad+1,?_utoa+1
  4852  002532  0012               	return		;funcret
  4853  002534  FFFF               	dw	65535	; errata NOP
  4854  002536                     __end_of_utoa:
  4855                           	opt callstack 0
  4856                           
  4857 ;; *************** function ___lomod *****************
  4858 ;; Defined at:
  4859 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  dividend        8    0[COMRAM] unsigned long long 
  4862 ;;  divisor         8    8[COMRAM] unsigned long long 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  counter         1   16[COMRAM] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  8    0[COMRAM] unsigned long long 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4874 ;;      Params:        16       0       0       0       0       0       0
  4875 ;;      Locals:         1       0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0
  4877 ;;      Totals:        17       0       0       0       0       0       0
  4878 ;;Total ram usage:       17 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    2
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_utoa
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text13
  4889  0031A4                     __ptext13:
  4890                           	opt callstack 0
  4891  0031A4                     ___lomod:
  4892                           	opt callstack 0
  4893  0031A4  FFFF               	dw	65535	; assembler added errata NOP
  4894                           
  4895                           ;incstack = 0
  4896  0031A6  5009               	movf	___lomod@divisor,w,c
  4897  0031A8  100A               	iorwf	___lomod@divisor+1,w,c
  4898  0031AA  100B               	iorwf	___lomod@divisor+2,w,c
  4899  0031AC  100C               	iorwf	___lomod@divisor+3,w,c
  4900  0031AE  100D               	iorwf	___lomod@divisor+4,w,c
  4901  0031B0  100E               	iorwf	___lomod@divisor+5,w,c
  4902  0031B2  100F               	iorwf	___lomod@divisor+6,w,c
  4903  0031B4  1010               	iorwf	___lomod@divisor+7,w,c
  4904  0031B6  B4D8               	btfsc	status,2,c
  4905  0031B8  D040               	goto	l984
  4906  0031BA  0E01               	movlw	1
  4907  0031BC  6E11               	movwf	___lomod@counter,c
  4908  0031BE  D00B               	goto	l3414
  4909  0031C0                     l3412:
  4910  0031C0  FFFF               	dw	65535	; assembler added errata NOP
  4911  0031C2  90D8               	bcf	status,0,c
  4912  0031C4  3609               	rlcf	___lomod@divisor,f,c
  4913  0031C6  360A               	rlcf	___lomod@divisor+1,f,c
  4914  0031C8  360B               	rlcf	___lomod@divisor+2,f,c
  4915  0031CA  360C               	rlcf	___lomod@divisor+3,f,c
  4916  0031CC  360D               	rlcf	___lomod@divisor+4,f,c
  4917  0031CE  360E               	rlcf	___lomod@divisor+5,f,c
  4918  0031D0  360F               	rlcf	___lomod@divisor+6,f,c
  4919  0031D2  3610               	rlcf	___lomod@divisor+7,f,c
  4920  0031D4  2A11               	incf	___lomod@counter,f,c
  4921  0031D6                     l3414:
  4922  0031D6  FFFF               	dw	65535	; assembler added errata NOP
  4923  0031D8  AE10               	btfss	___lomod@divisor+7,7,c
  4924  0031DA  D7F2               	goto	l3412
  4925  0031DC                     u3080:
  4926  0031DC  FFFF               	dw	65535	; assembler added errata NOP
  4927  0031DE  5009               	movf	___lomod@divisor,w,c
  4928  0031E0  5C01               	subwf	___lomod@dividend,w,c
  4929  0031E2  500A               	movf	___lomod@divisor+1,w,c
  4930  0031E4  5802               	subwfb	___lomod@dividend+1,w,c
  4931  0031E6  500B               	movf	___lomod@divisor+2,w,c
  4932  0031E8  5803               	subwfb	___lomod@dividend+2,w,c
  4933  0031EA  500C               	movf	___lomod@divisor+3,w,c
  4934  0031EC  5804               	subwfb	___lomod@dividend+3,w,c
  4935  0031EE  500D               	movf	___lomod@divisor+4,w,c
  4936  0031F0  5805               	subwfb	___lomod@dividend+4,w,c
  4937  0031F2  500E               	movf	___lomod@divisor+5,w,c
  4938  0031F4  5806               	subwfb	___lomod@dividend+5,w,c
  4939  0031F6  500F               	movf	___lomod@divisor+6,w,c
  4940  0031F8  5807               	subwfb	___lomod@dividend+6,w,c
  4941  0031FA  5010               	movf	___lomod@divisor+7,w,c
  4942  0031FC  5808               	subwfb	___lomod@dividend+7,w,c
  4943  0031FE  A0D8               	btfss	status,0,c
  4944  003200  D010               	goto	l3420
  4945  003202  5009               	movf	___lomod@divisor,w,c
  4946  003204  5E01               	subwf	___lomod@dividend,f,c
  4947  003206  500A               	movf	___lomod@divisor+1,w,c
  4948  003208  5A02               	subwfb	___lomod@dividend+1,f,c
  4949  00320A  500B               	movf	___lomod@divisor+2,w,c
  4950  00320C  5A03               	subwfb	___lomod@dividend+2,f,c
  4951  00320E  500C               	movf	___lomod@divisor+3,w,c
  4952  003210  5A04               	subwfb	___lomod@dividend+3,f,c
  4953  003212  500D               	movf	___lomod@divisor+4,w,c
  4954  003214  5A05               	subwfb	___lomod@dividend+4,f,c
  4955  003216  500E               	movf	___lomod@divisor+5,w,c
  4956  003218  5A06               	subwfb	___lomod@dividend+5,f,c
  4957  00321A  500F               	movf	___lomod@divisor+6,w,c
  4958  00321C  5A07               	subwfb	___lomod@dividend+6,f,c
  4959  00321E  5010               	movf	___lomod@divisor+7,w,c
  4960  003220  5A08               	subwfb	___lomod@dividend+7,f,c
  4961  003222                     l3420:
  4962  003222  FFFF               	dw	65535	; assembler added errata NOP
  4963  003224  90D8               	bcf	status,0,c
  4964  003226  3210               	rrcf	___lomod@divisor+7,f,c
  4965  003228  320F               	rrcf	___lomod@divisor+6,f,c
  4966  00322A  320E               	rrcf	___lomod@divisor+5,f,c
  4967  00322C  320D               	rrcf	___lomod@divisor+4,f,c
  4968  00322E  320C               	rrcf	___lomod@divisor+3,f,c
  4969  003230  320B               	rrcf	___lomod@divisor+2,f,c
  4970  003232  320A               	rrcf	___lomod@divisor+1,f,c
  4971  003234  3209               	rrcf	___lomod@divisor,f,c
  4972  003236  2E11               	decfsz	___lomod@counter,f,c
  4973  003238  D7D1               	goto	u3080
  4974  00323A                     l984:
  4975  00323A  FFFF               	dw	65535	; assembler added errata NOP
  4976  00323C  C001  F001         	movff	___lomod@dividend,?___lomod
  4977  003240  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4978  003244  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4979  003248  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4980  00324C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4981  003250  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4982  003254  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4983  003258  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4984  00325C  0012               	return		;funcret
  4985  00325E  FFFF               	dw	65535	; errata NOP
  4986  003260                     __end_of___lomod:
  4987                           	opt callstack 0
  4988                           
  4989 ;; *************** function ___lodiv *****************
  4990 ;; Defined at:
  4991 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  dividend        8    0[COMRAM] unsigned long long 
  4994 ;;  divisor         8    8[COMRAM] unsigned long long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  quotient        8   16[COMRAM] unsigned long long 
  4997 ;;  counter         1   24[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  8    0[COMRAM] unsigned long long 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5007 ;;      Params:        16       0       0       0       0       0       0
  5008 ;;      Locals:         9       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0
  5010 ;;      Totals:        25       0       0       0       0       0       0
  5011 ;;Total ram usage:       25 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    2
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_utoa
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text14
  5022  002E68                     __ptext14:
  5023                           	opt callstack 0
  5024  002E68                     ___lodiv:
  5025                           	opt callstack 0
  5026  002E68  FFFF               	dw	65535	; assembler added errata NOP
  5027                           
  5028                           ;incstack = 0
  5029  002E6A  EE20  F011         	lfsr	2,___lodiv@quotient
  5030  002E6E  0E07               	movlw	7
  5031  002E70                     u3031:
  5032  002E70  6ADE               	clrf	postinc2,c
  5033  002E72  06E8               	decf	wreg,f,c
  5034  002E74  E2FD               	bc	u3031
  5035  002E76  5009               	movf	___lodiv@divisor,w,c
  5036  002E78  100A               	iorwf	___lodiv@divisor+1,w,c
  5037  002E7A  100B               	iorwf	___lodiv@divisor+2,w,c
  5038  002E7C  100C               	iorwf	___lodiv@divisor+3,w,c
  5039  002E7E  100D               	iorwf	___lodiv@divisor+4,w,c
  5040  002E80  100E               	iorwf	___lodiv@divisor+5,w,c
  5041  002E82  100F               	iorwf	___lodiv@divisor+6,w,c
  5042  002E84  1010               	iorwf	___lodiv@divisor+7,w,c
  5043  002E86  B4D8               	btfsc	status,2,c
  5044  002E88  D04A               	goto	l974
  5045  002E8A  0E01               	movlw	1
  5046  002E8C  6E19               	movwf	___lodiv@counter,c
  5047  002E8E  D00B               	goto	l3394
  5048  002E90                     l3392:
  5049  002E90  FFFF               	dw	65535	; assembler added errata NOP
  5050  002E92  90D8               	bcf	status,0,c
  5051  002E94  3609               	rlcf	___lodiv@divisor,f,c
  5052  002E96  360A               	rlcf	___lodiv@divisor+1,f,c
  5053  002E98  360B               	rlcf	___lodiv@divisor+2,f,c
  5054  002E9A  360C               	rlcf	___lodiv@divisor+3,f,c
  5055  002E9C  360D               	rlcf	___lodiv@divisor+4,f,c
  5056  002E9E  360E               	rlcf	___lodiv@divisor+5,f,c
  5057  002EA0  360F               	rlcf	___lodiv@divisor+6,f,c
  5058  002EA2  3610               	rlcf	___lodiv@divisor+7,f,c
  5059  002EA4  2A19               	incf	___lodiv@counter,f,c
  5060  002EA6                     l3394:
  5061  002EA6  FFFF               	dw	65535	; assembler added errata NOP
  5062  002EA8  AE10               	btfss	___lodiv@divisor+7,7,c
  5063  002EAA  D7F2               	goto	l3392
  5064  002EAC                     u3050:
  5065  002EAC  FFFF               	dw	65535	; assembler added errata NOP
  5066  002EAE  90D8               	bcf	status,0,c
  5067  002EB0  3611               	rlcf	___lodiv@quotient,f,c
  5068  002EB2  3612               	rlcf	___lodiv@quotient+1,f,c
  5069  002EB4  3613               	rlcf	___lodiv@quotient+2,f,c
  5070  002EB6  3614               	rlcf	___lodiv@quotient+3,f,c
  5071  002EB8  3615               	rlcf	___lodiv@quotient+4,f,c
  5072  002EBA  3616               	rlcf	___lodiv@quotient+5,f,c
  5073  002EBC  3617               	rlcf	___lodiv@quotient+6,f,c
  5074  002EBE  3618               	rlcf	___lodiv@quotient+7,f,c
  5075  002EC0  5009               	movf	___lodiv@divisor,w,c
  5076  002EC2  5C01               	subwf	___lodiv@dividend,w,c
  5077  002EC4  500A               	movf	___lodiv@divisor+1,w,c
  5078  002EC6  5802               	subwfb	___lodiv@dividend+1,w,c
  5079  002EC8  500B               	movf	___lodiv@divisor+2,w,c
  5080  002ECA  5803               	subwfb	___lodiv@dividend+2,w,c
  5081  002ECC  500C               	movf	___lodiv@divisor+3,w,c
  5082  002ECE  5804               	subwfb	___lodiv@dividend+3,w,c
  5083  002ED0  500D               	movf	___lodiv@divisor+4,w,c
  5084  002ED2  5805               	subwfb	___lodiv@dividend+4,w,c
  5085  002ED4  500E               	movf	___lodiv@divisor+5,w,c
  5086  002ED6  5806               	subwfb	___lodiv@dividend+5,w,c
  5087  002ED8  500F               	movf	___lodiv@divisor+6,w,c
  5088  002EDA  5807               	subwfb	___lodiv@dividend+6,w,c
  5089  002EDC  5010               	movf	___lodiv@divisor+7,w,c
  5090  002EDE  5808               	subwfb	___lodiv@dividend+7,w,c
  5091  002EE0  A0D8               	btfss	status,0,c
  5092  002EE2  D011               	goto	l3404
  5093  002EE4  5009               	movf	___lodiv@divisor,w,c
  5094  002EE6  5E01               	subwf	___lodiv@dividend,f,c
  5095  002EE8  500A               	movf	___lodiv@divisor+1,w,c
  5096  002EEA  5A02               	subwfb	___lodiv@dividend+1,f,c
  5097  002EEC  500B               	movf	___lodiv@divisor+2,w,c
  5098  002EEE  5A03               	subwfb	___lodiv@dividend+2,f,c
  5099  002EF0  500C               	movf	___lodiv@divisor+3,w,c
  5100  002EF2  5A04               	subwfb	___lodiv@dividend+3,f,c
  5101  002EF4  500D               	movf	___lodiv@divisor+4,w,c
  5102  002EF6  5A05               	subwfb	___lodiv@dividend+4,f,c
  5103  002EF8  500E               	movf	___lodiv@divisor+5,w,c
  5104  002EFA  5A06               	subwfb	___lodiv@dividend+5,f,c
  5105  002EFC  500F               	movf	___lodiv@divisor+6,w,c
  5106  002EFE  5A07               	subwfb	___lodiv@dividend+6,f,c
  5107  002F00  5010               	movf	___lodiv@divisor+7,w,c
  5108  002F02  5A08               	subwfb	___lodiv@dividend+7,f,c
  5109  002F04  8011               	bsf	___lodiv@quotient,0,c
  5110  002F06                     l3404:
  5111  002F06  FFFF               	dw	65535	; assembler added errata NOP
  5112  002F08  90D8               	bcf	status,0,c
  5113  002F0A  3210               	rrcf	___lodiv@divisor+7,f,c
  5114  002F0C  320F               	rrcf	___lodiv@divisor+6,f,c
  5115  002F0E  320E               	rrcf	___lodiv@divisor+5,f,c
  5116  002F10  320D               	rrcf	___lodiv@divisor+4,f,c
  5117  002F12  320C               	rrcf	___lodiv@divisor+3,f,c
  5118  002F14  320B               	rrcf	___lodiv@divisor+2,f,c
  5119  002F16  320A               	rrcf	___lodiv@divisor+1,f,c
  5120  002F18  3209               	rrcf	___lodiv@divisor,f,c
  5121  002F1A  2E19               	decfsz	___lodiv@counter,f,c
  5122  002F1C  D7C7               	goto	u3050
  5123  002F1E                     l974:
  5124  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  5125  002F20  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5126  002F24  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5127  002F28  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5128  002F2C  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5129  002F30  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5130  002F34  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5131  002F38  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5132  002F3C  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5133  002F40  0012               	return		;funcret
  5134  002F42  FFFF               	dw	65535	; errata NOP
  5135  002F44                     __end_of___lodiv:
  5136                           	opt callstack 0
  5137                           
  5138 ;; *************** function _strncmp *****************
  5139 ;; Defined at:
  5140 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5143 ;;		 -> STR_2(3), STR_1(4), 
  5144 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5145 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  5146 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  5147 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  5148 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  5149 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  5150 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  5151 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  5152 ;;  n               2    4[COMRAM] unsigned int 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5155 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  5156 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  5157 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  5158 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  5159 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  5160 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  5161 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  5162 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5163 ;;		 -> STR_2(3), STR_1(4), 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    0[COMRAM] int 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5173 ;;      Params:         6       0       0       0       0       0       0
  5174 ;;      Locals:         4       0       0       0       0       0       0
  5175 ;;      Temps:          1       0       0       0       0       0       0
  5176 ;;      Totals:        11       0       0       0       0       0       0
  5177 ;;Total ram usage:       11 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    2
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_vfpfcnvrt
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text15
  5188  0030E2                     __ptext15:
  5189                           	opt callstack 0
  5190  0030E2                     _strncmp:
  5191                           	opt callstack 0
  5192  0030E2  FFFF               	dw	65535	; assembler added errata NOP
  5193                           
  5194                           ;incstack = 0
  5195  0030E4  C001  F008         	movff	strncmp@_l,strncmp@l
  5196  0030E8  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5197  0030EC  C003  F00A         	movff	strncmp@_r,strncmp@r
  5198  0030F0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5199  0030F4  0605               	decf	strncmp@n,f,c
  5200  0030F6  A0D8               	btfss	status,0,c
  5201  0030F8  0606               	decf	strncmp@n+1,f,c
  5202  0030FA  2805               	incf	strncmp@n,w,c
  5203  0030FC  E110               	bnz	l3754
  5204  0030FE  2806               	incf	strncmp@n+1,w,c
  5205  003100  A4D8               	btfss	status,2,c
  5206  003102  D00D               	goto	l3754
  5207  003104  0E00               	movlw	0
  5208  003106  6E02               	movwf	?_strncmp+1,c
  5209  003108  0E00               	movlw	0
  5210  00310A  6E01               	movwf	?_strncmp,c
  5211  00310C  D048               	goto	l1342
  5212  00310E                     l3752:
  5213  00310E  FFFF               	dw	65535	; assembler added errata NOP
  5214  003110  4A08               	infsnz	strncmp@l,f,c
  5215  003112  2A09               	incf	strncmp@l+1,f,c
  5216  003114  4A0A               	infsnz	strncmp@r,f,c
  5217  003116  2A0B               	incf	strncmp@r+1,f,c
  5218  003118  0605               	decf	strncmp@n,f,c
  5219  00311A  A0D8               	btfss	status,0,c
  5220  00311C  0606               	decf	strncmp@n+1,f,c
  5221  00311E                     l3754:
  5222  00311E  FFFF               	dw	65535	; assembler added errata NOP
  5223  003120  C008  FFF6         	movff	strncmp@l,tblptrl
  5224  003124  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5225  003128                     	if	0	;tblptru may be non-zero
  5226  003128                     	endif
  5227  003128                     	if	0	;tblptru may be non-zero
  5228  003128                     	endif
  5229  003128  0008               	tblrd		*
  5230  00312A  FFFF               	dw	65535	; errata NOP
  5231  00312C  50F5               	movf	tablat,w,c
  5232  00312E  0900               	iorlw	0
  5233  003130  B4D8               	btfsc	status,2,c
  5234  003132  D020               	goto	u3820
  5235  003134  C00A  FFF6         	movff	strncmp@r,tblptrl
  5236  003138  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5237  00313C                     	if	0	;tblptru may be non-zero
  5238  00313C                     	endif
  5239  00313C                     	if	0	;tblptru may be non-zero
  5240  00313C                     	endif
  5241  00313C  0008               	tblrd		*
  5242  00313E  FFFF               	dw	65535	; errata NOP
  5243  003140  50F5               	movf	tablat,w,c
  5244  003142  0900               	iorlw	0
  5245  003144  B4D8               	btfsc	status,2,c
  5246  003146  D016               	goto	u3820
  5247  003148  5005               	movf	strncmp@n,w,c
  5248  00314A  1006               	iorwf	strncmp@n+1,w,c
  5249  00314C  B4D8               	btfsc	status,2,c
  5250  00314E  D012               	goto	u3820
  5251  003150  C008  FFF6         	movff	strncmp@l,tblptrl
  5252  003154  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5253  003158                     	if	0	;tblptru may be non-zero
  5254  003158                     	endif
  5255  003158                     	if	0	;tblptru may be non-zero
  5256  003158                     	endif
  5257  003158  0008               	tblrd		*
  5258  00315A  FFFF               	dw	65535	; errata NOP
  5259  00315C  CFF5 F007          	movff	tablat,??_strncmp
  5260  003160  C00A  FFF6         	movff	strncmp@r,tblptrl
  5261  003164  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5262  003168                     	if	0	;tblptru may be non-zero
  5263  003168                     	endif
  5264  003168                     	if	0	;tblptru may be non-zero
  5265  003168                     	endif
  5266  003168  0008               	tblrd		*
  5267  00316A  FFFF               	dw	65535	; errata NOP
  5268  00316C  50F5               	movf	tablat,w,c
  5269  00316E  1807               	xorwf	??_strncmp,w,c
  5270  003170  B4D8               	btfsc	status,2,c
  5271  003172  D7CD               	goto	l3752
  5272  003174                     u3820:
  5273  003174  FFFF               	dw	65535	; assembler added errata NOP
  5274  003176  C008  FFF6         	movff	strncmp@l,tblptrl
  5275  00317A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5276  00317E                     	if	0	;tblptru may be non-zero
  5277  00317E                     	endif
  5278  00317E                     	if	0	;tblptru may be non-zero
  5279  00317E                     	endif
  5280  00317E  0008               	tblrd		*
  5281  003180  FFFF               	dw	65535	; errata NOP
  5282  003182  CFF5 F007          	movff	tablat,??_strncmp
  5283  003186  C00A  FFF6         	movff	strncmp@r,tblptrl
  5284  00318A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5285  00318E                     	if	0	;tblptru may be non-zero
  5286  00318E                     	endif
  5287  00318E                     	if	0	;tblptru may be non-zero
  5288  00318E                     	endif
  5289  00318E  0008               	tblrd		*
  5290  003190  FFFF               	dw	65535	; errata NOP
  5291  003192  50F5               	movf	tablat,w,c
  5292  003194  5C07               	subwf	??_strncmp,w,c
  5293  003196  6E01               	movwf	?_strncmp,c
  5294  003198  6A02               	clrf	?_strncmp+1,c
  5295  00319A  A0D8               	btfss	status,0,c
  5296  00319C  0602               	decf	?_strncmp+1,f,c
  5297  00319E                     l1342:
  5298  00319E  FFFF               	dw	65535	; assembler added errata NOP
  5299  0031A0  0012               	return		;funcret
  5300  0031A2  FFFF               	dw	65535	; errata NOP
  5301  0031A4                     __end_of_strncmp:
  5302                           	opt callstack 0
  5303                           
  5304 ;; *************** function _stoa *****************
  5305 ;; Defined at:
  5306 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5309 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5310 ;;  s               2   11[COMRAM] PTR unsigned char 
  5311 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5314 ;;  l               2   29[COMRAM] int 
  5315 ;;  p               2   27[COMRAM] int 
  5316 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5317 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5318 ;;  w               2   23[COMRAM] int 
  5319 ;;  i               2   21[COMRAM] int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    9[COMRAM] int 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5329 ;;      Params:         4       0       0       0       0       0       0
  5330 ;;      Locals:        17       0       0       0       0       0       0
  5331 ;;      Temps:          1       0       0       0       0       0       0
  5332 ;;      Totals:        22       0       0       0       0       0       0
  5333 ;;Total ram usage:       22 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    4
  5336 ;; This function calls:
  5337 ;;		_fputc
  5338 ;;		_strlen
  5339 ;; This function is called by:
  5340 ;;		_vfpfcnvrt
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text16
  5345  002AEE                     __ptext16:
  5346                           	opt callstack 0
  5347  002AEE                     _stoa:
  5348                           	opt callstack 0
  5349  002AEE  FFFF               	dw	65535	; assembler added errata NOP
  5350                           
  5351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5352                           
  5353                           ;incstack = 0
  5354  002AF0  EE20  F0EA         	lfsr	2,stoa@F1152
  5355  002AF4  EE10  F00F         	lfsr	1,stoa@nuls
  5356  002AF8  0E06               	movlw	6
  5357  002AFA                     u3381:
  5358  002AFA  CFDB FFE3          	movff	plusw2,plusw1
  5359  002AFE  06E8               	decf	wreg,f,c
  5360  002B00  E2FC               	bc	u3381
  5361                           
  5362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5363  002B02  C00C  F01A         	movff	stoa@s,stoa@cp
  5364  002B06  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5365                           
  5366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5367  002B0A  501A               	movf	stoa@cp,w,c
  5368  002B0C  101B               	iorwf	stoa@cp+1,w,c
  5369  002B0E  A4D8               	btfss	status,2,c
  5370  002B10  D004               	goto	l3568
  5371                           
  5372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5373  002B12  0E0F               	movlw	low stoa@nuls
  5374  002B14  6E1A               	movwf	stoa@cp,c
  5375  002B16  0E00               	movlw	high stoa@nuls
  5376  002B18  6E1B               	movwf	stoa@cp+1,c
  5377  002B1A                     l3568:
  5378  002B1A  FFFF               	dw	65535	; assembler added errata NOP
  5379                           
  5380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5381  002B1C  C01A  F001         	movff	stoa@cp,strlen@s
  5382  002B20  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5383  002B24  EC0E  F01D         	call	_strlen	;wreg free
  5384  002B28  C001  F01E         	movff	?_strlen,stoa@l
  5385  002B2C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5386                           
  5387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5388  002B30  C08F  F01C         	movff	_prec,stoa@p
  5389  002B34  C090  F01D         	movff	_prec+1,stoa@p+1
  5390                           
  5391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5392  002B38  BE1D               	btfsc	stoa@p+1,7,c
  5393  002B3A  D00E               	goto	l383
  5394  002B3C  501E               	movf	stoa@l,w,c
  5395  002B3E  5C1C               	subwf	stoa@p,w,c
  5396  002B40  501D               	movf	stoa@p+1,w,c
  5397  002B42  0A80               	xorlw	128
  5398  002B44  6E0E               	movwf	??_stoa& (0+255),c
  5399  002B46  501F               	movf	stoa@l+1,w,c
  5400  002B48  0A80               	xorlw	128
  5401  002B4A  580E               	subwfb	??_stoa& (0+255),w,c
  5402  002B4C  B0D8               	btfsc	status,0,c
  5403  002B4E  D004               	goto	l383
  5404  002B50  C01C  F01E         	movff	stoa@p,stoa@l
  5405  002B54  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5406  002B58                     l383:
  5407  002B58  FFFF               	dw	65535	; assembler added errata NOP
  5408                           
  5409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5410  002B5A  C01E  F01C         	movff	stoa@l,stoa@p
  5411  002B5E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5412                           
  5413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5414  002B62  C08D  F018         	movff	_width,stoa@w
  5415  002B66  C08E  F019         	movff	_width+1,stoa@w+1
  5416                           
  5417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5418  002B6A  0100               	movlb	0	; () banked
  5419  002B6C  A191               	btfss	_flags& (0+255),0,b
  5420  002B6E  D00E               	goto	l3582
  5421  002B70  D018               	goto	u3430
  5422  002B72                     l3578:
  5423  002B72  FFFF               	dw	65535	; assembler added errata NOP
  5424                           
  5425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5426  002B74  0E00               	movlw	0
  5427  002B76  6E02               	movwf	fputc@c+1,c
  5428  002B78  0E20               	movlw	32
  5429  002B7A  6E01               	movwf	fputc@c,c
  5430  002B7C  C00A  F003         	movff	stoa@fp,fputc@fp
  5431  002B80  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5432  002B84  EC30  F019         	call	_fputc	;wreg free
  5433                           
  5434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5435  002B88  4A1E               	infsnz	stoa@l,f,c
  5436  002B8A  2A1F               	incf	stoa@l+1,f,c
  5437  002B8C                     l3582:
  5438  002B8C  FFFF               	dw	65535	; assembler added errata NOP
  5439                           
  5440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5441  002B8E  5018               	movf	stoa@w,w,c
  5442  002B90  5C1E               	subwf	stoa@l,w,c
  5443  002B92  501F               	movf	stoa@l+1,w,c
  5444  002B94  0A80               	xorlw	128
  5445  002B96  6E0E               	movwf	??_stoa& (0+255),c
  5446  002B98  5019               	movf	stoa@w+1,w,c
  5447  002B9A  0A80               	xorlw	128
  5448  002B9C  580E               	subwfb	??_stoa& (0+255),w,c
  5449  002B9E  A0D8               	btfss	status,0,c
  5450  002BA0  D7E8               	goto	l3578
  5451  002BA2                     u3430:
  5452  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  5453                           
  5454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5455  002BA4  0E00               	movlw	0
  5456  002BA6  6E17               	movwf	stoa@i+1,c
  5457  002BA8  0E00               	movlw	0
  5458  002BAA  6E16               	movwf	stoa@i,c
  5459                           
  5460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5461  002BAC  D014               	goto	l3592
  5462  002BAE                     l3586:
  5463  002BAE  FFFF               	dw	65535	; assembler added errata NOP
  5464                           
  5465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5466  002BB0  C01A  FFD9         	movff	stoa@cp,fsr2l
  5467  002BB4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5468  002BB8  50DF               	movf	indf2,w,c
  5469  002BBA  6E0E               	movwf	??_stoa& (0+255),c
  5470  002BBC  500E               	movf	??_stoa,w,c
  5471  002BBE  6E01               	movwf	fputc@c,c
  5472  002BC0  6A02               	clrf	fputc@c+1,c
  5473  002BC2  C00A  F003         	movff	stoa@fp,fputc@fp
  5474  002BC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5475  002BCA  EC30  F019         	call	_fputc	;wreg free
  5476                           
  5477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5478  002BCE  4A1A               	infsnz	stoa@cp,f,c
  5479  002BD0  2A1B               	incf	stoa@cp+1,f,c
  5480                           
  5481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5482  002BD2  4A16               	infsnz	stoa@i,f,c
  5483  002BD4  2A17               	incf	stoa@i+1,f,c
  5484  002BD6                     l3592:
  5485  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  5486                           
  5487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5488  002BD8  501C               	movf	stoa@p,w,c
  5489  002BDA  5C16               	subwf	stoa@i,w,c
  5490  002BDC  5017               	movf	stoa@i+1,w,c
  5491  002BDE  0A80               	xorlw	128
  5492  002BE0  6E0E               	movwf	??_stoa& (0+255),c
  5493  002BE2  501D               	movf	stoa@p+1,w,c
  5494  002BE4  0A80               	xorlw	128
  5495  002BE6  580E               	subwfb	??_stoa& (0+255),w,c
  5496  002BE8  A0D8               	btfss	status,0,c
  5497  002BEA  D7E1               	goto	l3586
  5498                           
  5499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5500  002BEC  0100               	movlb	0	; () banked
  5501  002BEE  B191               	btfsc	_flags& (0+255),0,b
  5502  002BF0  D00E               	goto	l3600
  5503  002BF2  D018               	goto	u3460
  5504  002BF4                     l3596:
  5505  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  5506                           
  5507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5508  002BF6  0E00               	movlw	0
  5509  002BF8  6E02               	movwf	fputc@c+1,c
  5510  002BFA  0E20               	movlw	32
  5511  002BFC  6E01               	movwf	fputc@c,c
  5512  002BFE  C00A  F003         	movff	stoa@fp,fputc@fp
  5513  002C02  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5514  002C06  EC30  F019         	call	_fputc	;wreg free
  5515                           
  5516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5517  002C0A  4A1E               	infsnz	stoa@l,f,c
  5518  002C0C  2A1F               	incf	stoa@l+1,f,c
  5519  002C0E                     l3600:
  5520  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  5521                           
  5522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5523  002C10  5018               	movf	stoa@w,w,c
  5524  002C12  5C1E               	subwf	stoa@l,w,c
  5525  002C14  501F               	movf	stoa@l+1,w,c
  5526  002C16  0A80               	xorlw	128
  5527  002C18  6E0E               	movwf	??_stoa& (0+255),c
  5528  002C1A  5019               	movf	stoa@w+1,w,c
  5529  002C1C  0A80               	xorlw	128
  5530  002C1E  580E               	subwfb	??_stoa& (0+255),w,c
  5531  002C20  A0D8               	btfss	status,0,c
  5532  002C22  D7E8               	goto	l3596
  5533  002C24                     u3460:
  5534  002C24  FFFF               	dw	65535	; assembler added errata NOP
  5535                           
  5536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5537                           
  5538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5539  002C26  C01E  F00A         	movff	stoa@l,?_stoa
  5540  002C2A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5541  002C2E  0012               	return		;funcret
  5542  002C30  FFFF               	dw	65535	; errata NOP
  5543  002C32                     __end_of_stoa:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function _otoa *****************
  5547 ;; Defined at:
  5548 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5551 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5552 ;;  d               8   29[COMRAM] unsigned long long 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  n               8   51[COMRAM] unsigned long long 
  5555 ;;  i               2   59[COMRAM] int 
  5556 ;;  w               2   49[COMRAM] int 
  5557 ;;  t               2   47[COMRAM] int 
  5558 ;;  p               2   45[COMRAM] int 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  2   27[COMRAM] int 
  5561 ;; Registers used:
  5562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5568 ;;      Params:        10       0       0       0       0       0       0
  5569 ;;      Locals:        16       0       0       0       0       0       0
  5570 ;;      Temps:          8       0       0       0       0       0       0
  5571 ;;      Totals:        34       0       0       0       0       0       0
  5572 ;;Total ram usage:       34 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    6
  5575 ;; This function calls:
  5576 ;;		_pad
  5577 ;; This function is called by:
  5578 ;;		_vfpfcnvrt
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text17
  5583  002536                     __ptext17:
  5584                           	opt callstack 0
  5585  002536                     _otoa:
  5586                           	opt callstack 0
  5587  002536  FFFF               	dw	65535	; assembler added errata NOP
  5588                           
  5589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5590                           
  5591                           ;incstack = 0
  5592  002538  0100               	movlb	0	; () banked
  5593  00253A  AF90               	btfss	(_prec+1)& (0+255),7,b
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5597  00253C  9391               	bcf	_flags& (0+255),1,b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5601  00253E  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5602  002540  D005               	goto	u3290
  5603  002542  5190               	movf	(_prec+1)& (0+255),w,b
  5604  002544  E109               	bnz	l363
  5605  002546  058F               	decf	_prec& (0+255),w,b
  5606  002548  B0D8               	btfsc	status,0,c
  5607  00254A  D006               	goto	l363
  5608  00254C                     u3290:
  5609  00254C  FFFF               	dw	65535	; assembler added errata NOP
  5610                           
  5611                           ; BSR set to: 0
  5612  00254E  0E00               	movlw	0
  5613  002550  6E2F               	movwf	otoa@p+1,c
  5614  002552  0E01               	movlw	1
  5615  002554  6E2E               	movwf	otoa@p,c
  5616  002556  D005               	goto	l365
  5617  002558                     l363:
  5618  002558  FFFF               	dw	65535	; assembler added errata NOP
  5619                           
  5620                           ; BSR set to: 0
  5621  00255A  C08F  F02E         	movff	_prec,otoa@p
  5622  00255E  C090  F02F         	movff	_prec+1,otoa@p+1
  5623  002562                     l365:
  5624  002562  FFFF               	dw	65535	; assembler added errata NOP
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5628  002564  C08D  F032         	movff	_width,otoa@w
  5629  002568  C08E  F033         	movff	_width+1,otoa@w+1
  5630                           
  5631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5632  00256C  C01E  F034         	movff	otoa@d,otoa@n
  5633  002570  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5634  002574  C020  F036         	movff	otoa@d+2,otoa@n+2
  5635  002578  C021  F037         	movff	otoa@d+3,otoa@n+3
  5636  00257C  C022  F038         	movff	otoa@d+4,otoa@n+4
  5637  002580  C023  F039         	movff	otoa@d+5,otoa@n+5
  5638  002584  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5639  002588  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5643  00258C  0E00               	movlw	0
  5644  00258E  6E3D               	movwf	otoa@i+1,c
  5645  002590  0E1F               	movlw	31
  5646  002592  6E3C               	movwf	otoa@i,c
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5650  002594  0E00               	movlw	0
  5651  002596  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5655  002598  0E00               	movlw	0
  5656  00259A  6E31               	movwf	otoa@t+1,c
  5657  00259C  0E00               	movlw	0
  5658  00259E  6E30               	movwf	otoa@t,c
  5659                           
  5660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5661  0025A0  D046               	goto	l3538
  5662  0025A2                     l3526:
  5663  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  5664                           
  5665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5666  0025A4  063C               	decf	otoa@i,f,c
  5667  0025A6  A0D8               	btfss	status,0,c
  5668  0025A8  063D               	decf	otoa@i+1,f,c
  5669                           
  5670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5671  0025AA  0E07               	movlw	7
  5672  0025AC  1434               	andwf	otoa@n,w,c
  5673  0025AE  6E30               	movwf	otoa@t,c
  5674  0025B0  6A31               	clrf	otoa@t+1,c
  5675                           
  5676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5677  0025B2  0E98               	movlw	low _dbuf
  5678  0025B4  243C               	addwf	otoa@i,w,c
  5679  0025B6  6ED9               	movwf	fsr2l,c
  5680  0025B8  0E00               	movlw	high _dbuf
  5681  0025BA  203D               	addwfc	otoa@i+1,w,c
  5682  0025BC  6EDA               	movwf	fsr2h,c
  5683  0025BE  5030               	movf	otoa@t,w,c
  5684  0025C0  0F30               	addlw	48
  5685  0025C2  6EDF               	movwf	indf2,c
  5686                           
  5687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5688  0025C4  062E               	decf	otoa@p,f,c
  5689  0025C6  A0D8               	btfss	status,0,c
  5690  0025C8  062F               	decf	otoa@p+1,f,c
  5691                           
  5692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5693  0025CA  0632               	decf	otoa@w,f,c
  5694  0025CC  A0D8               	btfss	status,0,c
  5695  0025CE  0633               	decf	otoa@w+1,f,c
  5696                           
  5697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5698  0025D0  C034  F026         	movff	otoa@n,??_otoa
  5699  0025D4  C035  F027         	movff	otoa@n+1,??_otoa+1
  5700  0025D8  C036  F028         	movff	otoa@n+2,??_otoa+2
  5701  0025DC  C037  F029         	movff	otoa@n+3,??_otoa+3
  5702  0025E0  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5703  0025E4  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5704  0025E8  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5705  0025EC  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5706  0025F0  0E04               	movlw	4
  5707  0025F2  D00A               	goto	u3300
  5708  0025F4                     u3305:
  5709  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  5710  0025F6  90D8               	bcf	status,0,c
  5711  0025F8  322D               	rrcf	??_otoa+7,f,c
  5712  0025FA  322C               	rrcf	??_otoa+6,f,c
  5713  0025FC  322B               	rrcf	??_otoa+5,f,c
  5714  0025FE  322A               	rrcf	??_otoa+4,f,c
  5715  002600  3229               	rrcf	??_otoa+3,f,c
  5716  002602  3228               	rrcf	??_otoa+2,f,c
  5717  002604  3227               	rrcf	??_otoa+1,f,c
  5718  002606  3226               	rrcf	??_otoa,f,c
  5719  002608                     u3300:
  5720  002608  FFFF               	dw	65535	; assembler added errata NOP
  5721  00260A  2EE8               	decfsz	wreg,f,c
  5722  00260C  D7F3               	goto	u3305
  5723  00260E  C026  F034         	movff	??_otoa,otoa@n
  5724  002612  C027  F035         	movff	??_otoa+1,otoa@n+1
  5725  002616  C028  F036         	movff	??_otoa+2,otoa@n+2
  5726  00261A  C029  F037         	movff	??_otoa+3,otoa@n+3
  5727  00261E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5728  002622  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5729  002626  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5730  00262A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5731  00262E                     l3538:
  5732  00262E  FFFF               	dw	65535	; assembler added errata NOP
  5733                           
  5734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5735  002630  BE3D               	btfsc	otoa@i+1,7,c
  5736  002632  D021               	goto	u3350
  5737  002634  503D               	movf	otoa@i+1,w,c
  5738  002636  E103               	bnz	u3310
  5739  002638  043C               	decf	otoa@i,w,c
  5740  00263A  A0D8               	btfss	status,0,c
  5741  00263C  D01C               	goto	u3350
  5742  00263E                     u3310:
  5743  00263E  5034               	movf	otoa@n,w,c
  5744  002640  1035               	iorwf	otoa@n+1,w,c
  5745  002642  1036               	iorwf	otoa@n+2,w,c
  5746  002644  1037               	iorwf	otoa@n+3,w,c
  5747  002646  1038               	iorwf	otoa@n+4,w,c
  5748  002648  1039               	iorwf	otoa@n+5,w,c
  5749  00264A  103A               	iorwf	otoa@n+6,w,c
  5750  00264C  103B               	iorwf	otoa@n+7,w,c
  5751  00264E  A4D8               	btfss	status,2,c
  5752  002650  D7A8               	goto	l3526
  5753  002652  BE2F               	btfsc	otoa@p+1,7,c
  5754  002654  D005               	goto	u3330
  5755  002656  502F               	movf	otoa@p+1,w,c
  5756  002658  E1A4               	bnz	l3526
  5757  00265A  042E               	decf	otoa@p,w,c
  5758  00265C  B0D8               	btfsc	status,0,c
  5759  00265E  D7A1               	goto	l3526
  5760  002660                     u3330:
  5761  002660  FFFF               	dw	65535	; assembler added errata NOP
  5762  002662  BE33               	btfsc	otoa@w+1,7,c
  5763  002664  D008               	goto	u3350
  5764  002666  5033               	movf	otoa@w+1,w,c
  5765  002668  E103               	bnz	u3340
  5766  00266A  0432               	decf	otoa@w,w,c
  5767  00266C  A0D8               	btfss	status,0,c
  5768  00266E  D003               	goto	u3350
  5769  002670                     u3340:
  5770  002670  0100               	movlb	0	; () banked
  5771  002672  B391               	btfsc	_flags& (0+255),1,b
  5772  002674  D796               	goto	l3526
  5773  002676                     u3350:
  5774  002676  FFFF               	dw	65535	; assembler added errata NOP
  5775                           
  5776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5777  002678  0100               	movlb	0	; () banked
  5778  00267A  A991               	btfss	_flags& (0+255),4,b
  5779  00267C  D012               	goto	l3556
  5780                           
  5781                           ; BSR set to: 0
  5782  00267E  5030               	movf	otoa@t,w,c
  5783  002680  1031               	iorwf	otoa@t+1,w,c
  5784  002682  B4D8               	btfsc	status,2,c
  5785  002684  D00E               	goto	l3556
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5789  002686  063C               	decf	otoa@i,f,c
  5790  002688  A0D8               	btfss	status,0,c
  5791  00268A  063D               	decf	otoa@i+1,f,c
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5795  00268C  0E98               	movlw	low _dbuf
  5796  00268E  243C               	addwf	otoa@i,w,c
  5797  002690  6ED9               	movwf	fsr2l,c
  5798  002692  0E00               	movlw	high _dbuf
  5799  002694  203D               	addwfc	otoa@i+1,w,c
  5800  002696  6EDA               	movwf	fsr2h,c
  5801  002698  0E30               	movlw	48
  5802  00269A  6EDF               	movwf	indf2,c
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5806  00269C  0632               	decf	otoa@w,f,c
  5807  00269E  A0D8               	btfss	status,0,c
  5808  0026A0  0633               	decf	otoa@w+1,f,c
  5809  0026A2                     l3556:
  5810  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5814  0026A4  C01C  F011         	movff	otoa@fp,pad@fp
  5815  0026A8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5816  0026AC  0E98               	movlw	low _dbuf
  5817  0026AE  243C               	addwf	otoa@i,w,c
  5818  0026B0  6E13               	movwf	pad@buf,c
  5819  0026B2  0E00               	movlw	high _dbuf
  5820  0026B4  203D               	addwfc	otoa@i+1,w,c
  5821  0026B6  6E14               	movwf	pad@buf+1,c
  5822  0026B8  C032  F015         	movff	otoa@w,pad@p
  5823  0026BC  C033  F016         	movff	otoa@w+1,pad@p+1
  5824  0026C0  EC86  F019         	call	_pad	;wreg free
  5825  0026C4  C011  F01C         	movff	?_pad,?_otoa
  5826  0026C8  C012  F01D         	movff	?_pad+1,?_otoa+1
  5827  0026CC  0012               	return		;funcret
  5828  0026CE  FFFF               	dw	65535	; errata NOP
  5829  0026D0                     __end_of_otoa:
  5830                           	opt callstack 0
  5831                           
  5832 ;; *************** function _dtoa *****************
  5833 ;; Defined at:
  5834 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5837 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5838 ;;  d               8   29[COMRAM] long long 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  n               8   53[COMRAM] long long 
  5841 ;;  i               2   61[COMRAM] int 
  5842 ;;  s               2   51[COMRAM] int 
  5843 ;;  w               2   49[COMRAM] int 
  5844 ;;  p               2   47[COMRAM] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  2   27[COMRAM] int 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5854 ;;      Params:        10       0       0       0       0       0       0
  5855 ;;      Locals:        18       0       0       0       0       0       0
  5856 ;;      Temps:          8       0       0       0       0       0       0
  5857 ;;      Totals:        36       0       0       0       0       0       0
  5858 ;;Total ram usage:       36 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    6
  5861 ;; This function calls:
  5862 ;;		___aodiv
  5863 ;;		___aomod
  5864 ;;		_abs
  5865 ;;		_pad
  5866 ;; This function is called by:
  5867 ;;		_vfpfcnvrt
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text18
  5872  001EB2                     __ptext18:
  5873                           	opt callstack 0
  5874  001EB2                     _dtoa:
  5875                           	opt callstack 0
  5876  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  5877                           
  5878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5879                           
  5880                           ;incstack = 0
  5881  001EB4  C01E  F036         	movff	dtoa@d,dtoa@n
  5882  001EB8  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5883  001EBC  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5884  001EC0  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5885  001EC4  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5886  001EC8  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5887  001ECC  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5888  001ED0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5889                           
  5890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5891  001ED4  AE3D               	btfss	dtoa@n+7,7,c
  5892  001ED6  D002               	goto	u3130
  5893  001ED8  0E01               	movlw	1
  5894  001EDA  D002               	goto	u3140
  5895  001EDC                     u3130:
  5896  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5897  001EDE  0E00               	movlw	0
  5898  001EE0                     u3140:
  5899  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  5900  001EE2  6E34               	movwf	dtoa@s,c
  5901  001EE4  6A35               	clrf	dtoa@s+1,c
  5902                           
  5903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5904  001EE6  5034               	movf	dtoa@s,w,c
  5905  001EE8  1035               	iorwf	dtoa@s+1,w,c
  5906  001EEA  B4D8               	btfsc	status,2,c
  5907  001EEC  D010               	goto	l3456
  5908                           
  5909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5910  001EEE  1E3D               	comf	dtoa@n+7,f,c
  5911  001EF0  1E3C               	comf	dtoa@n+6,f,c
  5912  001EF2  1E3B               	comf	dtoa@n+5,f,c
  5913  001EF4  1E3A               	comf	dtoa@n+4,f,c
  5914  001EF6  1E39               	comf	dtoa@n+3,f,c
  5915  001EF8  1E38               	comf	dtoa@n+2,f,c
  5916  001EFA  1E37               	comf	dtoa@n+1,f,c
  5917  001EFC  6C36               	negf	dtoa@n,c
  5918  001EFE  0E00               	movlw	0
  5919  001F00  2237               	addwfc	dtoa@n+1,f,c
  5920  001F02  2238               	addwfc	dtoa@n+2,f,c
  5921  001F04  2239               	addwfc	dtoa@n+3,f,c
  5922  001F06  223A               	addwfc	dtoa@n+4,f,c
  5923  001F08  223B               	addwfc	dtoa@n+5,f,c
  5924  001F0A  223C               	addwfc	dtoa@n+6,f,c
  5925  001F0C  223D               	addwfc	dtoa@n+7,f,c
  5926  001F0E                     l3456:
  5927  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  5928                           
  5929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5930  001F10  0100               	movlb	0	; () banked
  5931  001F12  AF90               	btfss	(_prec+1)& (0+255),7,b
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5935  001F14  9391               	bcf	_flags& (0+255),1,b
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5939  001F16  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5940  001F18  D005               	goto	u3170
  5941  001F1A  5190               	movf	(_prec+1)& (0+255),w,b
  5942  001F1C  E109               	bnz	l338
  5943  001F1E  058F               	decf	_prec& (0+255),w,b
  5944  001F20  B0D8               	btfsc	status,0,c
  5945  001F22  D006               	goto	l338
  5946  001F24                     u3170:
  5947  001F24  FFFF               	dw	65535	; assembler added errata NOP
  5948                           
  5949                           ; BSR set to: 0
  5950  001F26  0E00               	movlw	0
  5951  001F28  6E31               	movwf	dtoa@p+1,c
  5952  001F2A  0E01               	movlw	1
  5953  001F2C  6E30               	movwf	dtoa@p,c
  5954  001F2E  D005               	goto	l340
  5955  001F30                     l338:
  5956  001F30  FFFF               	dw	65535	; assembler added errata NOP
  5957                           
  5958                           ; BSR set to: 0
  5959  001F32  C08F  F030         	movff	_prec,dtoa@p
  5960  001F36  C090  F031         	movff	_prec+1,dtoa@p+1
  5961  001F3A                     l340:
  5962  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5966  001F3C  C08D  F032         	movff	_width,dtoa@w
  5967  001F40  C08E  F033         	movff	_width+1,dtoa@w+1
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5971  001F44  5034               	movf	dtoa@s,w,c
  5972  001F46  1035               	iorwf	dtoa@s+1,w,c
  5973  001F48  A4D8               	btfss	status,2,c
  5974  001F4A  D002               	goto	u3190
  5975                           
  5976                           ; BSR set to: 0
  5977  001F4C  A591               	btfss	_flags& (0+255),2,b
  5978  001F4E  D004               	goto	l3470
  5979  001F50                     u3190:
  5980  001F50  FFFF               	dw	65535	; assembler added errata NOP
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5984  001F52  0632               	decf	dtoa@w,f,c
  5985  001F54  A0D8               	btfss	status,0,c
  5986  001F56  0633               	decf	dtoa@w+1,f,c
  5987  001F58                     l3470:
  5988  001F58  FFFF               	dw	65535	; assembler added errata NOP
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5992  001F5A  0E00               	movlw	0
  5993  001F5C  6E3F               	movwf	dtoa@i+1,c
  5994  001F5E  0E1F               	movlw	31
  5995  001F60  6E3E               	movwf	dtoa@i,c
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5999  001F62  0E00               	movlw	0
  6000  001F64  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6001                           
  6002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6003  001F66  D07D               	goto	l3484
  6004  001F68                     l3474:
  6005  001F68  FFFF               	dw	65535	; assembler added errata NOP
  6006                           
  6007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6008  001F6A  063E               	decf	dtoa@i,f,c
  6009  001F6C  A0D8               	btfss	status,0,c
  6010  001F6E  063F               	decf	dtoa@i+1,f,c
  6011                           
  6012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6013  001F70  0E98               	movlw	low _dbuf
  6014  001F72  243E               	addwf	dtoa@i,w,c
  6015  001F74  6ED9               	movwf	fsr2l,c
  6016  001F76  0E00               	movlw	high _dbuf
  6017  001F78  203F               	addwfc	dtoa@i+1,w,c
  6018  001F7A  6EDA               	movwf	fsr2h,c
  6019  001F7C  C036  F001         	movff	dtoa@n,___aomod@dividend
  6020  001F80  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6021  001F84  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6022  001F88  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6023  001F8C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6024  001F90  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6025  001F94  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6026  001F98  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6027  001F9C  0E0A               	movlw	10
  6028  001F9E  6E09               	movwf	___aomod@divisor,c
  6029  001FA0  0E00               	movlw	0
  6030  001FA2  6E0A               	movwf	___aomod@divisor+1,c
  6031  001FA4  0E00               	movlw	0
  6032  001FA6  6E0B               	movwf	___aomod@divisor+2,c
  6033  001FA8  0E00               	movlw	0
  6034  001FAA  6E0C               	movwf	___aomod@divisor+3,c
  6035  001FAC  0E00               	movlw	0
  6036  001FAE  6E0D               	movwf	___aomod@divisor+4,c
  6037  001FB0  0E00               	movlw	0
  6038  001FB2  6E0E               	movwf	___aomod@divisor+5,c
  6039  001FB4  0E00               	movlw	0
  6040  001FB6  6E0F               	movwf	___aomod@divisor+6,c
  6041  001FB8  0E00               	movlw	0
  6042  001FBA  6E10               	movwf	___aomod@divisor+7,c
  6043  001FBC  EC19  F016         	call	___aomod	;wreg free
  6044  001FC0  C001  F026         	movff	?___aomod,??_dtoa
  6045  001FC4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6046  001FC8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6047  001FCC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6048  001FD0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6049  001FD4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6050  001FD8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6051  001FDC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6052  001FE0  C026  F013         	movff	??_dtoa,abs@a
  6053  001FE4  C028  F014         	movff	??_dtoa+2,abs@a+1
  6054  001FE8  EC7F  F01C         	call	_abs	;wreg free
  6055  001FEC  5013               	movf	?_abs,w,c
  6056  001FEE  0F30               	addlw	48
  6057  001FF0  6EDF               	movwf	indf2,c
  6058                           
  6059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  6060  001FF2  0630               	decf	dtoa@p,f,c
  6061  001FF4  A0D8               	btfss	status,0,c
  6062  001FF6  0631               	decf	dtoa@p+1,f,c
  6063                           
  6064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  6065  001FF8  0632               	decf	dtoa@w,f,c
  6066  001FFA  A0D8               	btfss	status,0,c
  6067  001FFC  0633               	decf	dtoa@w+1,f,c
  6068                           
  6069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6070  001FFE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6071  002002  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6072  002006  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6073  00200A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6074  00200E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6075  002012  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6076  002016  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6077  00201A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6078  00201E  0E0A               	movlw	10
  6079  002020  6E09               	movwf	___aodiv@divisor,c
  6080  002022  0E00               	movlw	0
  6081  002024  6E0A               	movwf	___aodiv@divisor+1,c
  6082  002026  0E00               	movlw	0
  6083  002028  6E0B               	movwf	___aodiv@divisor+2,c
  6084  00202A  0E00               	movlw	0
  6085  00202C  6E0C               	movwf	___aodiv@divisor+3,c
  6086  00202E  0E00               	movlw	0
  6087  002030  6E0D               	movwf	___aodiv@divisor+4,c
  6088  002032  0E00               	movlw	0
  6089  002034  6E0E               	movwf	___aodiv@divisor+5,c
  6090  002036  0E00               	movlw	0
  6091  002038  6E0F               	movwf	___aodiv@divisor+6,c
  6092  00203A  0E00               	movlw	0
  6093  00203C  6E10               	movwf	___aodiv@divisor+7,c
  6094  00203E  EC1B  F014         	call	___aodiv	;wreg free
  6095  002042  C001  F036         	movff	?___aodiv,dtoa@n
  6096  002046  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6097  00204A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6098  00204E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6099  002052  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6100  002056  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6101  00205A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6102  00205E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6103  002062                     l3484:
  6104  002062  FFFF               	dw	65535	; assembler added errata NOP
  6105                           
  6106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6107  002064  BE3F               	btfsc	dtoa@i+1,7,c
  6108  002066  D021               	goto	u3240
  6109  002068  503F               	movf	dtoa@i+1,w,c
  6110  00206A  E103               	bnz	u3200
  6111  00206C  043E               	decf	dtoa@i,w,c
  6112  00206E  A0D8               	btfss	status,0,c
  6113  002070  D01C               	goto	u3240
  6114  002072                     u3200:
  6115  002072  5036               	movf	dtoa@n,w,c
  6116  002074  1037               	iorwf	dtoa@n+1,w,c
  6117  002076  1038               	iorwf	dtoa@n+2,w,c
  6118  002078  1039               	iorwf	dtoa@n+3,w,c
  6119  00207A  103A               	iorwf	dtoa@n+4,w,c
  6120  00207C  103B               	iorwf	dtoa@n+5,w,c
  6121  00207E  103C               	iorwf	dtoa@n+6,w,c
  6122  002080  103D               	iorwf	dtoa@n+7,w,c
  6123  002082  A4D8               	btfss	status,2,c
  6124  002084  D771               	goto	l3474
  6125  002086  BE31               	btfsc	dtoa@p+1,7,c
  6126  002088  D005               	goto	u3220
  6127  00208A  5031               	movf	dtoa@p+1,w,c
  6128  00208C  E102               	bnz	u3221
  6129  00208E  0430               	decf	dtoa@p,w,c
  6130  002090  B0D8               	btfsc	status,0,c
  6131  002092                     u3221:
  6132  002092  D76A               	goto	l3474
  6133  002094                     u3220:
  6134  002094  FFFF               	dw	65535	; assembler added errata NOP
  6135  002096  BE33               	btfsc	dtoa@w+1,7,c
  6136  002098  D008               	goto	u3240
  6137  00209A  5033               	movf	dtoa@w+1,w,c
  6138  00209C  E103               	bnz	u3230
  6139  00209E  0432               	decf	dtoa@w,w,c
  6140  0020A0  A0D8               	btfss	status,0,c
  6141  0020A2  D003               	goto	u3240
  6142  0020A4                     u3230:
  6143  0020A4  0100               	movlb	0	; () banked
  6144  0020A6  B391               	btfsc	_flags& (0+255),1,b
  6145  0020A8  D75F               	goto	l3474
  6146  0020AA                     u3240:
  6147  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  6148                           
  6149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6150  0020AC  5034               	movf	dtoa@s,w,c
  6151  0020AE  1035               	iorwf	dtoa@s+1,w,c
  6152  0020B0  A4D8               	btfss	status,2,c
  6153  0020B2  D003               	goto	u3260
  6154  0020B4  0100               	movlb	0	; () banked
  6155  0020B6  A591               	btfss	_flags& (0+255),2,b
  6156  0020B8  D01A               	goto	l3508
  6157  0020BA                     u3260:
  6158  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  6159                           
  6160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  6161  0020BC  063E               	decf	dtoa@i,f,c
  6162  0020BE  A0D8               	btfss	status,0,c
  6163  0020C0  063F               	decf	dtoa@i+1,f,c
  6164                           
  6165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6166  0020C2  5034               	movf	dtoa@s,w,c
  6167  0020C4  1035               	iorwf	dtoa@s+1,w,c
  6168  0020C6  A4D8               	btfss	status,2,c
  6169  0020C8  D004               	goto	l3504
  6170  0020CA  0E00               	movlw	0
  6171  0020CC  6E2F               	movwf	_dtoa$1101+1,c
  6172  0020CE  0E2B               	movlw	43
  6173  0020D0  D004               	goto	L20
  6174  0020D2                     l3504:
  6175  0020D2  FFFF               	dw	65535	; assembler added errata NOP
  6176  0020D4  0E00               	movlw	0
  6177  0020D6  6E2F               	movwf	_dtoa$1101+1,c
  6178  0020D8  0E2D               	movlw	45
  6179  0020DA                     L20:
  6180  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  6181  0020DC  6E2E               	movwf	_dtoa$1101,c
  6182  0020DE  0E98               	movlw	low _dbuf
  6183  0020E0  243E               	addwf	dtoa@i,w,c
  6184  0020E2  6ED9               	movwf	fsr2l,c
  6185  0020E4  0E00               	movlw	high _dbuf
  6186  0020E6  203F               	addwfc	dtoa@i+1,w,c
  6187  0020E8  6EDA               	movwf	fsr2h,c
  6188  0020EA  C02E  FFDF         	movff	_dtoa$1101,indf2
  6189  0020EE                     l3508:
  6190  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  6191                           
  6192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6193  0020F0  C01C  F011         	movff	dtoa@fp,pad@fp
  6194  0020F4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6195  0020F8  0E98               	movlw	low _dbuf
  6196  0020FA  243E               	addwf	dtoa@i,w,c
  6197  0020FC  6E13               	movwf	pad@buf,c
  6198  0020FE  0E00               	movlw	high _dbuf
  6199  002100  203F               	addwfc	dtoa@i+1,w,c
  6200  002102  6E14               	movwf	pad@buf+1,c
  6201  002104  C032  F015         	movff	dtoa@w,pad@p
  6202  002108  C033  F016         	movff	dtoa@w+1,pad@p+1
  6203  00210C  EC86  F019         	call	_pad	;wreg free
  6204  002110  C011  F01C         	movff	?_pad,?_dtoa
  6205  002114  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6206  002118  0012               	return		;funcret
  6207  00211A  FFFF               	dw	65535	; errata NOP
  6208  00211C                     __end_of_dtoa:
  6209                           	opt callstack 0
  6210                           
  6211 ;; *************** function _abs *****************
  6212 ;; Defined at:
  6213 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  a               2   18[COMRAM] int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2   18[COMRAM] int 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6227 ;;      Params:         2       0       0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0
  6229 ;;      Temps:          2       0       0       0       0       0       0
  6230 ;;      Totals:         4       0       0       0       0       0       0
  6231 ;;Total ram usage:        4 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    2
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_dtoa
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text19
  6242  0038FE                     __ptext19:
  6243                           	opt callstack 0
  6244  0038FE                     _abs:
  6245                           	opt callstack 0
  6246  0038FE  FFFF               	dw	65535	; assembler added errata NOP
  6247                           
  6248                           ;incstack = 0
  6249  003900  BE14               	btfsc	abs@a+1,7,c
  6250  003902  D005               	goto	u2800
  6251  003904  5014               	movf	abs@a+1,w,c
  6252  003906  E111               	bnz	l1211
  6253  003908  0413               	decf	abs@a,w,c
  6254  00390A  B0D8               	btfsc	status,0,c
  6255  00390C  D00E               	goto	l1211
  6256  00390E                     u2800:
  6257  00390E  FFFF               	dw	65535	; assembler added errata NOP
  6258  003910  C013  F015         	movff	abs@a,??_abs
  6259  003914  C014  F016         	movff	abs@a+1,??_abs+1
  6260  003918  1E15               	comf	??_abs,f,c
  6261  00391A  1E16               	comf	??_abs+1,f,c
  6262  00391C  4A15               	infsnz	??_abs,f,c
  6263  00391E  2A16               	incf	??_abs+1,f,c
  6264  003920  C015  F013         	movff	??_abs,?_abs
  6265  003924  C016  F014         	movff	??_abs+1,?_abs+1
  6266  003928  D005               	goto	l1214
  6267  00392A                     l1211:
  6268  00392A  FFFF               	dw	65535	; assembler added errata NOP
  6269  00392C  C013  F013         	movff	abs@a,?_abs
  6270  003930  C014  F014         	movff	abs@a+1,?_abs+1
  6271  003934                     l1214:
  6272  003934  FFFF               	dw	65535	; assembler added errata NOP
  6273  003936  0012               	return		;funcret
  6274  003938  FFFF               	dw	65535	; errata NOP
  6275  00393A                     __end_of_abs:
  6276                           	opt callstack 0
  6277                           
  6278 ;; *************** function ___aomod *****************
  6279 ;; Defined at:
  6280 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  dividend        8    0[COMRAM] long long 
  6283 ;;  divisor         8    8[COMRAM] long long 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  sign            1   17[COMRAM] unsigned char 
  6286 ;;  counter         1   16[COMRAM] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  8    0[COMRAM] long long 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6296 ;;      Params:        16       0       0       0       0       0       0
  6297 ;;      Locals:         2       0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0
  6299 ;;      Totals:        18       0       0       0       0       0       0
  6300 ;;Total ram usage:       18 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    2
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_dtoa
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text20
  6311  002C32                     __ptext20:
  6312                           	opt callstack 0
  6313  002C32                     ___aomod:
  6314                           	opt callstack 0
  6315  002C32  FFFF               	dw	65535	; assembler added errata NOP
  6316                           
  6317                           ;incstack = 0
  6318  002C34  0E00               	movlw	0
  6319  002C36  6E12               	movwf	___aomod@sign,c
  6320  002C38  AE08               	btfss	___aomod@dividend+7,7,c
  6321  002C3A  D012               	goto	l3358
  6322  002C3C  1E08               	comf	___aomod@dividend+7,f,c
  6323  002C3E  1E07               	comf	___aomod@dividend+6,f,c
  6324  002C40  1E06               	comf	___aomod@dividend+5,f,c
  6325  002C42  1E05               	comf	___aomod@dividend+4,f,c
  6326  002C44  1E04               	comf	___aomod@dividend+3,f,c
  6327  002C46  1E03               	comf	___aomod@dividend+2,f,c
  6328  002C48  1E02               	comf	___aomod@dividend+1,f,c
  6329  002C4A  6C01               	negf	___aomod@dividend,c
  6330  002C4C  0E00               	movlw	0
  6331  002C4E  2202               	addwfc	___aomod@dividend+1,f,c
  6332  002C50  2203               	addwfc	___aomod@dividend+2,f,c
  6333  002C52  2204               	addwfc	___aomod@dividend+3,f,c
  6334  002C54  2205               	addwfc	___aomod@dividend+4,f,c
  6335  002C56  2206               	addwfc	___aomod@dividend+5,f,c
  6336  002C58  2207               	addwfc	___aomod@dividend+6,f,c
  6337  002C5A  2208               	addwfc	___aomod@dividend+7,f,c
  6338  002C5C  0E01               	movlw	1
  6339  002C5E  6E12               	movwf	___aomod@sign,c
  6340  002C60                     l3358:
  6341  002C60  FFFF               	dw	65535	; assembler added errata NOP
  6342  002C62  AE10               	btfss	___aomod@divisor+7,7,c
  6343  002C64  D010               	goto	l3362
  6344  002C66  1E10               	comf	___aomod@divisor+7,f,c
  6345  002C68  1E0F               	comf	___aomod@divisor+6,f,c
  6346  002C6A  1E0E               	comf	___aomod@divisor+5,f,c
  6347  002C6C  1E0D               	comf	___aomod@divisor+4,f,c
  6348  002C6E  1E0C               	comf	___aomod@divisor+3,f,c
  6349  002C70  1E0B               	comf	___aomod@divisor+2,f,c
  6350  002C72  1E0A               	comf	___aomod@divisor+1,f,c
  6351  002C74  6C09               	negf	___aomod@divisor,c
  6352  002C76  0E00               	movlw	0
  6353  002C78  220A               	addwfc	___aomod@divisor+1,f,c
  6354  002C7A  220B               	addwfc	___aomod@divisor+2,f,c
  6355  002C7C  220C               	addwfc	___aomod@divisor+3,f,c
  6356  002C7E  220D               	addwfc	___aomod@divisor+4,f,c
  6357  002C80  220E               	addwfc	___aomod@divisor+5,f,c
  6358  002C82  220F               	addwfc	___aomod@divisor+6,f,c
  6359  002C84  2210               	addwfc	___aomod@divisor+7,f,c
  6360  002C86                     l3362:
  6361  002C86  FFFF               	dw	65535	; assembler added errata NOP
  6362  002C88  5009               	movf	___aomod@divisor,w,c
  6363  002C8A  100A               	iorwf	___aomod@divisor+1,w,c
  6364  002C8C  100B               	iorwf	___aomod@divisor+2,w,c
  6365  002C8E  100C               	iorwf	___aomod@divisor+3,w,c
  6366  002C90  100D               	iorwf	___aomod@divisor+4,w,c
  6367  002C92  100E               	iorwf	___aomod@divisor+5,w,c
  6368  002C94  100F               	iorwf	___aomod@divisor+6,w,c
  6369  002C96  1010               	iorwf	___aomod@divisor+7,w,c
  6370  002C98  B4D8               	btfsc	status,2,c
  6371  002C9A  D040               	goto	l3378
  6372  002C9C  0E01               	movlw	1
  6373  002C9E  6E11               	movwf	___aomod@counter,c
  6374  002CA0  D00B               	goto	l3368
  6375  002CA2                     l3366:
  6376  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  6377  002CA4  90D8               	bcf	status,0,c
  6378  002CA6  3609               	rlcf	___aomod@divisor,f,c
  6379  002CA8  360A               	rlcf	___aomod@divisor+1,f,c
  6380  002CAA  360B               	rlcf	___aomod@divisor+2,f,c
  6381  002CAC  360C               	rlcf	___aomod@divisor+3,f,c
  6382  002CAE  360D               	rlcf	___aomod@divisor+4,f,c
  6383  002CB0  360E               	rlcf	___aomod@divisor+5,f,c
  6384  002CB2  360F               	rlcf	___aomod@divisor+6,f,c
  6385  002CB4  3610               	rlcf	___aomod@divisor+7,f,c
  6386  002CB6  2A11               	incf	___aomod@counter,f,c
  6387  002CB8                     l3368:
  6388  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  6389  002CBA  AE10               	btfss	___aomod@divisor+7,7,c
  6390  002CBC  D7F2               	goto	l3366
  6391  002CBE                     u3000:
  6392  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  6393  002CC0  5009               	movf	___aomod@divisor,w,c
  6394  002CC2  5C01               	subwf	___aomod@dividend,w,c
  6395  002CC4  500A               	movf	___aomod@divisor+1,w,c
  6396  002CC6  5802               	subwfb	___aomod@dividend+1,w,c
  6397  002CC8  500B               	movf	___aomod@divisor+2,w,c
  6398  002CCA  5803               	subwfb	___aomod@dividend+2,w,c
  6399  002CCC  500C               	movf	___aomod@divisor+3,w,c
  6400  002CCE  5804               	subwfb	___aomod@dividend+3,w,c
  6401  002CD0  500D               	movf	___aomod@divisor+4,w,c
  6402  002CD2  5805               	subwfb	___aomod@dividend+4,w,c
  6403  002CD4  500E               	movf	___aomod@divisor+5,w,c
  6404  002CD6  5806               	subwfb	___aomod@dividend+5,w,c
  6405  002CD8  500F               	movf	___aomod@divisor+6,w,c
  6406  002CDA  5807               	subwfb	___aomod@dividend+6,w,c
  6407  002CDC  5010               	movf	___aomod@divisor+7,w,c
  6408  002CDE  5808               	subwfb	___aomod@dividend+7,w,c
  6409  002CE0  A0D8               	btfss	status,0,c
  6410  002CE2  D010               	goto	l3374
  6411  002CE4  5009               	movf	___aomod@divisor,w,c
  6412  002CE6  5E01               	subwf	___aomod@dividend,f,c
  6413  002CE8  500A               	movf	___aomod@divisor+1,w,c
  6414  002CEA  5A02               	subwfb	___aomod@dividend+1,f,c
  6415  002CEC  500B               	movf	___aomod@divisor+2,w,c
  6416  002CEE  5A03               	subwfb	___aomod@dividend+2,f,c
  6417  002CF0  500C               	movf	___aomod@divisor+3,w,c
  6418  002CF2  5A04               	subwfb	___aomod@dividend+3,f,c
  6419  002CF4  500D               	movf	___aomod@divisor+4,w,c
  6420  002CF6  5A05               	subwfb	___aomod@dividend+4,f,c
  6421  002CF8  500E               	movf	___aomod@divisor+5,w,c
  6422  002CFA  5A06               	subwfb	___aomod@dividend+5,f,c
  6423  002CFC  500F               	movf	___aomod@divisor+6,w,c
  6424  002CFE  5A07               	subwfb	___aomod@dividend+6,f,c
  6425  002D00  5010               	movf	___aomod@divisor+7,w,c
  6426  002D02  5A08               	subwfb	___aomod@dividend+7,f,c
  6427  002D04                     l3374:
  6428  002D04  FFFF               	dw	65535	; assembler added errata NOP
  6429  002D06  90D8               	bcf	status,0,c
  6430  002D08  3210               	rrcf	___aomod@divisor+7,f,c
  6431  002D0A  320F               	rrcf	___aomod@divisor+6,f,c
  6432  002D0C  320E               	rrcf	___aomod@divisor+5,f,c
  6433  002D0E  320D               	rrcf	___aomod@divisor+4,f,c
  6434  002D10  320C               	rrcf	___aomod@divisor+3,f,c
  6435  002D12  320B               	rrcf	___aomod@divisor+2,f,c
  6436  002D14  320A               	rrcf	___aomod@divisor+1,f,c
  6437  002D16  3209               	rrcf	___aomod@divisor,f,c
  6438  002D18  2E11               	decfsz	___aomod@counter,f,c
  6439  002D1A  D7D1               	goto	u3000
  6440  002D1C                     l3378:
  6441  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  6442  002D1E  5012               	movf	___aomod@sign,w,c
  6443  002D20  B4D8               	btfsc	status,2,c
  6444  002D22  D010               	goto	l3382
  6445  002D24  1E08               	comf	___aomod@dividend+7,f,c
  6446  002D26  1E07               	comf	___aomod@dividend+6,f,c
  6447  002D28  1E06               	comf	___aomod@dividend+5,f,c
  6448  002D2A  1E05               	comf	___aomod@dividend+4,f,c
  6449  002D2C  1E04               	comf	___aomod@dividend+3,f,c
  6450  002D2E  1E03               	comf	___aomod@dividend+2,f,c
  6451  002D30  1E02               	comf	___aomod@dividend+1,f,c
  6452  002D32  6C01               	negf	___aomod@dividend,c
  6453  002D34  0E00               	movlw	0
  6454  002D36  2202               	addwfc	___aomod@dividend+1,f,c
  6455  002D38  2203               	addwfc	___aomod@dividend+2,f,c
  6456  002D3A  2204               	addwfc	___aomod@dividend+3,f,c
  6457  002D3C  2205               	addwfc	___aomod@dividend+4,f,c
  6458  002D3E  2206               	addwfc	___aomod@dividend+5,f,c
  6459  002D40  2207               	addwfc	___aomod@dividend+6,f,c
  6460  002D42  2208               	addwfc	___aomod@dividend+7,f,c
  6461  002D44                     l3382:
  6462  002D44  FFFF               	dw	65535	; assembler added errata NOP
  6463  002D46  C001  F001         	movff	___aomod@dividend,?___aomod
  6464  002D4A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6465  002D4E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6466  002D52  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6467  002D56  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6468  002D5A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6469  002D5E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6470  002D62  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6471  002D66  0012               	return		;funcret
  6472  002D68  FFFF               	dw	65535	; errata NOP
  6473  002D6A                     __end_of___aomod:
  6474                           	opt callstack 0
  6475                           
  6476 ;; *************** function ___aodiv *****************
  6477 ;; Defined at:
  6478 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  dividend        8    0[COMRAM] long long 
  6481 ;;  divisor         8    8[COMRAM] long long 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  quotient        8   18[COMRAM] long long 
  6484 ;;  sign            1   17[COMRAM] unsigned char 
  6485 ;;  counter         1   16[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  8    0[COMRAM] long long 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6495 ;;      Params:        16       0       0       0       0       0       0
  6496 ;;      Locals:        10       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0
  6498 ;;      Totals:        26       0       0       0       0       0       0
  6499 ;;Total ram usage:       26 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    2
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_dtoa
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text21
  6510  002836                     __ptext21:
  6511                           	opt callstack 0
  6512  002836                     ___aodiv:
  6513                           	opt callstack 0
  6514  002836  FFFF               	dw	65535	; assembler added errata NOP
  6515                           
  6516                           ;incstack = 0
  6517  002838  0E00               	movlw	0
  6518  00283A  6E12               	movwf	___aodiv@sign,c
  6519  00283C  AE10               	btfss	___aodiv@divisor+7,7,c
  6520  00283E  D012               	goto	l3314
  6521  002840  1E10               	comf	___aodiv@divisor+7,f,c
  6522  002842  1E0F               	comf	___aodiv@divisor+6,f,c
  6523  002844  1E0E               	comf	___aodiv@divisor+5,f,c
  6524  002846  1E0D               	comf	___aodiv@divisor+4,f,c
  6525  002848  1E0C               	comf	___aodiv@divisor+3,f,c
  6526  00284A  1E0B               	comf	___aodiv@divisor+2,f,c
  6527  00284C  1E0A               	comf	___aodiv@divisor+1,f,c
  6528  00284E  6C09               	negf	___aodiv@divisor,c
  6529  002850  0E00               	movlw	0
  6530  002852  220A               	addwfc	___aodiv@divisor+1,f,c
  6531  002854  220B               	addwfc	___aodiv@divisor+2,f,c
  6532  002856  220C               	addwfc	___aodiv@divisor+3,f,c
  6533  002858  220D               	addwfc	___aodiv@divisor+4,f,c
  6534  00285A  220E               	addwfc	___aodiv@divisor+5,f,c
  6535  00285C  220F               	addwfc	___aodiv@divisor+6,f,c
  6536  00285E  2210               	addwfc	___aodiv@divisor+7,f,c
  6537  002860  0E01               	movlw	1
  6538  002862  6E12               	movwf	___aodiv@sign,c
  6539  002864                     l3314:
  6540  002864  FFFF               	dw	65535	; assembler added errata NOP
  6541  002866  AE08               	btfss	___aodiv@dividend+7,7,c
  6542  002868  D012               	goto	l3320
  6543  00286A  1E08               	comf	___aodiv@dividend+7,f,c
  6544  00286C  1E07               	comf	___aodiv@dividend+6,f,c
  6545  00286E  1E06               	comf	___aodiv@dividend+5,f,c
  6546  002870  1E05               	comf	___aodiv@dividend+4,f,c
  6547  002872  1E04               	comf	___aodiv@dividend+3,f,c
  6548  002874  1E03               	comf	___aodiv@dividend+2,f,c
  6549  002876  1E02               	comf	___aodiv@dividend+1,f,c
  6550  002878  6C01               	negf	___aodiv@dividend,c
  6551  00287A  0E00               	movlw	0
  6552  00287C  2202               	addwfc	___aodiv@dividend+1,f,c
  6553  00287E  2203               	addwfc	___aodiv@dividend+2,f,c
  6554  002880  2204               	addwfc	___aodiv@dividend+3,f,c
  6555  002882  2205               	addwfc	___aodiv@dividend+4,f,c
  6556  002884  2206               	addwfc	___aodiv@dividend+5,f,c
  6557  002886  2207               	addwfc	___aodiv@dividend+6,f,c
  6558  002888  2208               	addwfc	___aodiv@dividend+7,f,c
  6559  00288A  0E01               	movlw	1
  6560  00288C  1A12               	xorwf	___aodiv@sign,f,c
  6561  00288E                     l3320:
  6562  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6563  002890  EE20  F013         	lfsr	2,___aodiv@quotient
  6564  002894  0E07               	movlw	7
  6565  002896                     u2921:
  6566  002896  6ADE               	clrf	postinc2,c
  6567  002898  06E8               	decf	wreg,f,c
  6568  00289A  E2FD               	bc	u2921
  6569  00289C  5009               	movf	___aodiv@divisor,w,c
  6570  00289E  100A               	iorwf	___aodiv@divisor+1,w,c
  6571  0028A0  100B               	iorwf	___aodiv@divisor+2,w,c
  6572  0028A2  100C               	iorwf	___aodiv@divisor+3,w,c
  6573  0028A4  100D               	iorwf	___aodiv@divisor+4,w,c
  6574  0028A6  100E               	iorwf	___aodiv@divisor+5,w,c
  6575  0028A8  100F               	iorwf	___aodiv@divisor+6,w,c
  6576  0028AA  1010               	iorwf	___aodiv@divisor+7,w,c
  6577  0028AC  B4D8               	btfsc	status,2,c
  6578  0028AE  D04A               	goto	l3342
  6579  0028B0  0E01               	movlw	1
  6580  0028B2  6E11               	movwf	___aodiv@counter,c
  6581  0028B4  D00B               	goto	l3328
  6582  0028B6                     l3326:
  6583  0028B6  FFFF               	dw	65535	; assembler added errata NOP
  6584  0028B8  90D8               	bcf	status,0,c
  6585  0028BA  3609               	rlcf	___aodiv@divisor,f,c
  6586  0028BC  360A               	rlcf	___aodiv@divisor+1,f,c
  6587  0028BE  360B               	rlcf	___aodiv@divisor+2,f,c
  6588  0028C0  360C               	rlcf	___aodiv@divisor+3,f,c
  6589  0028C2  360D               	rlcf	___aodiv@divisor+4,f,c
  6590  0028C4  360E               	rlcf	___aodiv@divisor+5,f,c
  6591  0028C6  360F               	rlcf	___aodiv@divisor+6,f,c
  6592  0028C8  3610               	rlcf	___aodiv@divisor+7,f,c
  6593  0028CA  2A11               	incf	___aodiv@counter,f,c
  6594  0028CC                     l3328:
  6595  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  6596  0028CE  AE10               	btfss	___aodiv@divisor+7,7,c
  6597  0028D0  D7F2               	goto	l3326
  6598  0028D2                     u2940:
  6599  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  6600  0028D4  90D8               	bcf	status,0,c
  6601  0028D6  3613               	rlcf	___aodiv@quotient,f,c
  6602  0028D8  3614               	rlcf	___aodiv@quotient+1,f,c
  6603  0028DA  3615               	rlcf	___aodiv@quotient+2,f,c
  6604  0028DC  3616               	rlcf	___aodiv@quotient+3,f,c
  6605  0028DE  3617               	rlcf	___aodiv@quotient+4,f,c
  6606  0028E0  3618               	rlcf	___aodiv@quotient+5,f,c
  6607  0028E2  3619               	rlcf	___aodiv@quotient+6,f,c
  6608  0028E4  361A               	rlcf	___aodiv@quotient+7,f,c
  6609  0028E6  5009               	movf	___aodiv@divisor,w,c
  6610  0028E8  5C01               	subwf	___aodiv@dividend,w,c
  6611  0028EA  500A               	movf	___aodiv@divisor+1,w,c
  6612  0028EC  5802               	subwfb	___aodiv@dividend+1,w,c
  6613  0028EE  500B               	movf	___aodiv@divisor+2,w,c
  6614  0028F0  5803               	subwfb	___aodiv@dividend+2,w,c
  6615  0028F2  500C               	movf	___aodiv@divisor+3,w,c
  6616  0028F4  5804               	subwfb	___aodiv@dividend+3,w,c
  6617  0028F6  500D               	movf	___aodiv@divisor+4,w,c
  6618  0028F8  5805               	subwfb	___aodiv@dividend+4,w,c
  6619  0028FA  500E               	movf	___aodiv@divisor+5,w,c
  6620  0028FC  5806               	subwfb	___aodiv@dividend+5,w,c
  6621  0028FE  500F               	movf	___aodiv@divisor+6,w,c
  6622  002900  5807               	subwfb	___aodiv@dividend+6,w,c
  6623  002902  5010               	movf	___aodiv@divisor+7,w,c
  6624  002904  5808               	subwfb	___aodiv@dividend+7,w,c
  6625  002906  A0D8               	btfss	status,0,c
  6626  002908  D011               	goto	l3338
  6627  00290A  5009               	movf	___aodiv@divisor,w,c
  6628  00290C  5E01               	subwf	___aodiv@dividend,f,c
  6629  00290E  500A               	movf	___aodiv@divisor+1,w,c
  6630  002910  5A02               	subwfb	___aodiv@dividend+1,f,c
  6631  002912  500B               	movf	___aodiv@divisor+2,w,c
  6632  002914  5A03               	subwfb	___aodiv@dividend+2,f,c
  6633  002916  500C               	movf	___aodiv@divisor+3,w,c
  6634  002918  5A04               	subwfb	___aodiv@dividend+3,f,c
  6635  00291A  500D               	movf	___aodiv@divisor+4,w,c
  6636  00291C  5A05               	subwfb	___aodiv@dividend+4,f,c
  6637  00291E  500E               	movf	___aodiv@divisor+5,w,c
  6638  002920  5A06               	subwfb	___aodiv@dividend+5,f,c
  6639  002922  500F               	movf	___aodiv@divisor+6,w,c
  6640  002924  5A07               	subwfb	___aodiv@dividend+6,f,c
  6641  002926  5010               	movf	___aodiv@divisor+7,w,c
  6642  002928  5A08               	subwfb	___aodiv@dividend+7,f,c
  6643  00292A  8013               	bsf	___aodiv@quotient,0,c
  6644  00292C                     l3338:
  6645  00292C  FFFF               	dw	65535	; assembler added errata NOP
  6646  00292E  90D8               	bcf	status,0,c
  6647  002930  3210               	rrcf	___aodiv@divisor+7,f,c
  6648  002932  320F               	rrcf	___aodiv@divisor+6,f,c
  6649  002934  320E               	rrcf	___aodiv@divisor+5,f,c
  6650  002936  320D               	rrcf	___aodiv@divisor+4,f,c
  6651  002938  320C               	rrcf	___aodiv@divisor+3,f,c
  6652  00293A  320B               	rrcf	___aodiv@divisor+2,f,c
  6653  00293C  320A               	rrcf	___aodiv@divisor+1,f,c
  6654  00293E  3209               	rrcf	___aodiv@divisor,f,c
  6655  002940  2E11               	decfsz	___aodiv@counter,f,c
  6656  002942  D7C7               	goto	u2940
  6657  002944                     l3342:
  6658  002944  FFFF               	dw	65535	; assembler added errata NOP
  6659  002946  5012               	movf	___aodiv@sign,w,c
  6660  002948  B4D8               	btfsc	status,2,c
  6661  00294A  D010               	goto	l3346
  6662  00294C  1E1A               	comf	___aodiv@quotient+7,f,c
  6663  00294E  1E19               	comf	___aodiv@quotient+6,f,c
  6664  002950  1E18               	comf	___aodiv@quotient+5,f,c
  6665  002952  1E17               	comf	___aodiv@quotient+4,f,c
  6666  002954  1E16               	comf	___aodiv@quotient+3,f,c
  6667  002956  1E15               	comf	___aodiv@quotient+2,f,c
  6668  002958  1E14               	comf	___aodiv@quotient+1,f,c
  6669  00295A  6C13               	negf	___aodiv@quotient,c
  6670  00295C  0E00               	movlw	0
  6671  00295E  2214               	addwfc	___aodiv@quotient+1,f,c
  6672  002960  2215               	addwfc	___aodiv@quotient+2,f,c
  6673  002962  2216               	addwfc	___aodiv@quotient+3,f,c
  6674  002964  2217               	addwfc	___aodiv@quotient+4,f,c
  6675  002966  2218               	addwfc	___aodiv@quotient+5,f,c
  6676  002968  2219               	addwfc	___aodiv@quotient+6,f,c
  6677  00296A  221A               	addwfc	___aodiv@quotient+7,f,c
  6678  00296C                     l3346:
  6679  00296C  FFFF               	dw	65535	; assembler added errata NOP
  6680  00296E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6681  002972  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6682  002976  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6683  00297A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6684  00297E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6685  002982  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6686  002986  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6687  00298A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6688  00298E  0012               	return		;funcret
  6689  002990  FFFF               	dw	65535	; errata NOP
  6690  002992                     __end_of___aodiv:
  6691                           	opt callstack 0
  6692                           
  6693 ;; *************** function _ctoa *****************
  6694 ;; Defined at:
  6695 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6698 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6699 ;;  c               1   29[COMRAM] unsigned char 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  w               2   30[COMRAM] int 
  6702 ;;  l               2    0        int 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  2   27[COMRAM] int 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6712 ;;      Params:         3       0       0       0       0       0       0
  6713 ;;      Locals:         2       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0
  6715 ;;      Totals:         5       0       0       0       0       0       0
  6716 ;;Total ram usage:        5 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    6
  6719 ;; This function calls:
  6720 ;;		_pad
  6721 ;; This function is called by:
  6722 ;;		_vfpfcnvrt
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text22
  6727  00366E                     __ptext22:
  6728                           	opt callstack 0
  6729  00366E                     _ctoa:
  6730                           	opt callstack 0
  6731  00366E  FFFF               	dw	65535	; assembler added errata NOP
  6732                           
  6733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6734                           
  6735                           ;incstack = 0
  6736  003670  0100               	movlb	0	; () banked
  6737  003672  518D               	movf	_width& (0+255),w,b
  6738  003674  118E               	iorwf	(_width+1)& (0+255),w,b
  6739  003676  A4D8               	btfss	status,2,c
  6740  003678  D005               	goto	l3440
  6741                           
  6742                           ; BSR set to: 0
  6743  00367A  C08D  F01F         	movff	_width,ctoa@w
  6744  00367E  C08E  F020         	movff	_width+1,ctoa@w+1
  6745  003682  D007               	goto	l3442
  6746  003684                     l3440:
  6747  003684  FFFF               	dw	65535	; assembler added errata NOP
  6748                           
  6749                           ; BSR set to: 0
  6750  003686  0EFF               	movlw	255
  6751  003688  258D               	addwf	_width& (0+255),w,b
  6752  00368A  6E1F               	movwf	ctoa@w,c
  6753  00368C  0EFF               	movlw	255
  6754  00368E  218E               	addwfc	(_width+1)& (0+255),w,b
  6755  003690  6E20               	movwf	ctoa@w+1,c
  6756  003692                     l3442:
  6757  003692  FFFF               	dw	65535	; assembler added errata NOP
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6761  003694  C01E  F098         	movff	ctoa@c,_dbuf
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6765  003698  0E00               	movlw	0
  6766  00369A  6F99               	movwf	(_dbuf+1)& (0+255),b
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6770  00369C  C01C  F011         	movff	ctoa@fp,pad@fp
  6771  0036A0  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6772  0036A4  0E98               	movlw	low _dbuf
  6773  0036A6  6E13               	movwf	pad@buf,c
  6774  0036A8  0E00               	movlw	high _dbuf
  6775  0036AA  6E14               	movwf	pad@buf+1,c
  6776  0036AC  C01F  F015         	movff	ctoa@w,pad@p
  6777  0036B0  C020  F016         	movff	ctoa@w+1,pad@p+1
  6778  0036B4  EC86  F019         	call	_pad	;wreg free
  6779  0036B8  C011  F01C         	movff	?_pad,?_ctoa
  6780  0036BC  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6781  0036C0  0012               	return		;funcret
  6782  0036C2  FFFF               	dw	65535	; errata NOP
  6783  0036C4                     __end_of_ctoa:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _pad *****************
  6787 ;; Defined at:
  6788 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6791 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6792 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6793 ;;		 -> dbuf(32), 
  6794 ;;  p               2   20[COMRAM] int 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  w               2   25[COMRAM] int 
  6797 ;;  i               2   23[COMRAM] int 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2   16[COMRAM] int 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6807 ;;      Params:         6       0       0       0       0       0       0
  6808 ;;      Locals:         4       0       0       0       0       0       0
  6809 ;;      Temps:          1       0       0       0       0       0       0
  6810 ;;      Totals:        11       0       0       0       0       0       0
  6811 ;;Total ram usage:       11 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    5
  6814 ;; This function calls:
  6815 ;;		_fputc
  6816 ;;		_fputs
  6817 ;;		_strlen
  6818 ;; This function is called by:
  6819 ;;		_ctoa
  6820 ;;		_dtoa
  6821 ;;		_otoa
  6822 ;;		_utoa
  6823 ;;		_xtoa
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text23
  6828  00330C                     __ptext23:
  6829                           	opt callstack 0
  6830  00330C                     _pad:
  6831                           	opt callstack 0
  6832  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6833                           
  6834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6835                           
  6836                           ;incstack = 0
  6837  00330E  0100               	movlb	0	; () banked
  6838  003310  A191               	btfss	_flags& (0+255),0,b
  6839  003312  D00A               	goto	l3256
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6843  003314  C013  F00A         	movff	pad@buf,fputs@s
  6844  003318  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6845  00331C  C011  F00C         	movff	pad@fp,fputs@fp
  6846  003320  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6847  003324  EC40  F01C         	call	_fputs	;wreg free
  6848  003328                     l3256:
  6849  003328  FFFF               	dw	65535	; assembler added errata NOP
  6850                           
  6851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6852  00332A  BE16               	btfsc	pad@p+1,7,c
  6853  00332C  D005               	goto	l3260
  6854  00332E  C015  F01A         	movff	pad@p,pad@w
  6855  003332  C016  F01B         	movff	pad@p+1,pad@w+1
  6856  003336  D005               	goto	l320
  6857  003338                     l3260:
  6858  003338  FFFF               	dw	65535	; assembler added errata NOP
  6859  00333A  0E00               	movlw	0
  6860  00333C  6E1B               	movwf	pad@w+1,c
  6861  00333E  0E00               	movlw	0
  6862  003340  6E1A               	movwf	pad@w,c
  6863  003342                     l320:
  6864  003342  FFFF               	dw	65535	; assembler added errata NOP
  6865                           
  6866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6867  003344  0E00               	movlw	0
  6868  003346  6E19               	movwf	pad@i+1,c
  6869  003348  0E00               	movlw	0
  6870  00334A  6E18               	movwf	pad@i,c
  6871                           
  6872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6873  00334C  D00D               	goto	l3266
  6874  00334E                     l3262:
  6875  00334E  FFFF               	dw	65535	; assembler added errata NOP
  6876                           
  6877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6878  003350  0E00               	movlw	0
  6879  003352  6E02               	movwf	fputc@c+1,c
  6880  003354  0E20               	movlw	32
  6881  003356  6E01               	movwf	fputc@c,c
  6882  003358  C011  F003         	movff	pad@fp,fputc@fp
  6883  00335C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6884  003360  EC30  F019         	call	_fputc	;wreg free
  6885                           
  6886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6887  003364  4A18               	infsnz	pad@i,f,c
  6888  003366  2A19               	incf	pad@i+1,f,c
  6889  003368                     l3266:
  6890  003368  FFFF               	dw	65535	; assembler added errata NOP
  6891                           
  6892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6893  00336A  501A               	movf	pad@w,w,c
  6894  00336C  5C18               	subwf	pad@i,w,c
  6895  00336E  5019               	movf	pad@i+1,w,c
  6896  003370  0A80               	xorlw	128
  6897  003372  6E17               	movwf	??_pad& (0+255),c
  6898  003374  501B               	movf	pad@w+1,w,c
  6899  003376  0A80               	xorlw	128
  6900  003378  5817               	subwfb	??_pad& (0+255),w,c
  6901  00337A  A0D8               	btfss	status,0,c
  6902  00337C  D7E8               	goto	l3262
  6903                           
  6904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6905  00337E  0100               	movlb	0	; () banked
  6906  003380  B191               	btfsc	_flags& (0+255),0,b
  6907  003382  D00A               	goto	l3270
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6911  003384  C013  F00A         	movff	pad@buf,fputs@s
  6912  003388  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6913  00338C  C011  F00C         	movff	pad@fp,fputs@fp
  6914  003390  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6915  003394  EC40  F01C         	call	_fputs	;wreg free
  6916  003398                     l3270:
  6917  003398  FFFF               	dw	65535	; assembler added errata NOP
  6918                           
  6919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6920  00339A  C013  F001         	movff	pad@buf,strlen@s
  6921  00339E  C014  F002         	movff	pad@buf+1,strlen@s+1
  6922  0033A2  EC0E  F01D         	call	_strlen	;wreg free
  6923  0033A6  501A               	movf	pad@w,w,c
  6924  0033A8  2401               	addwf	?_strlen,w,c
  6925  0033AA  6E11               	movwf	?_pad,c
  6926  0033AC  501B               	movf	pad@w+1,w,c
  6927  0033AE  2002               	addwfc	?_strlen+1,w,c
  6928  0033B0  6E12               	movwf	?_pad+1,c
  6929  0033B2  0012               	return		;funcret
  6930  0033B4  FFFF               	dw	65535	; errata NOP
  6931  0033B6                     __end_of_pad:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function _strlen *****************
  6935 ;; Defined at:
  6936 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6939 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6942 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  2    0[COMRAM] unsigned int 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6952 ;;      Params:         2       0       0       0       0       0       0
  6953 ;;      Locals:         2       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0
  6955 ;;      Totals:         4       0       0       0       0       0       0
  6956 ;;Total ram usage:        4 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_pad
  6963 ;;		_stoa
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text24
  6968  003A1C                     __ptext24:
  6969                           	opt callstack 0
  6970  003A1C                     _strlen:
  6971                           	opt callstack 0
  6972  003A1C  FFFF               	dw	65535	; assembler added errata NOP
  6973                           
  6974                           ;incstack = 0
  6975  003A1E  C001  F003         	movff	strlen@s,strlen@a
  6976  003A22  C002  F004         	movff	strlen@s+1,strlen@a+1
  6977  003A26  D003               	goto	l3242
  6978  003A28                     l3240:
  6979  003A28  FFFF               	dw	65535	; assembler added errata NOP
  6980  003A2A  4A01               	infsnz	strlen@s,f,c
  6981  003A2C  2A02               	incf	strlen@s+1,f,c
  6982  003A2E                     l3242:
  6983  003A2E  FFFF               	dw	65535	; assembler added errata NOP
  6984  003A30  C001  FFD9         	movff	strlen@s,fsr2l
  6985  003A34  C002  FFDA         	movff	strlen@s+1,fsr2h
  6986  003A38  50DF               	movf	indf2,w,c
  6987  003A3A  A4D8               	btfss	status,2,c
  6988  003A3C  D7F5               	goto	l3240
  6989  003A3E  5003               	movf	strlen@a,w,c
  6990  003A40  5C01               	subwf	strlen@s,w,c
  6991  003A42  6E01               	movwf	?_strlen,c
  6992  003A44  5004               	movf	strlen@a+1,w,c
  6993  003A46  5802               	subwfb	strlen@s+1,w,c
  6994  003A48  6E02               	movwf	?_strlen+1,c
  6995  003A4A  0012               	return		;funcret
  6996  003A4C  FFFF               	dw	65535	; errata NOP
  6997  003A4E                     __end_of_strlen:
  6998                           	opt callstack 0
  6999                           
  7000 ;; *************** function _fputs *****************
  7001 ;; Defined at:
  7002 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7005 ;;		 -> dbuf(32), 
  7006 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7007 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  i               2   14[COMRAM] int 
  7010 ;;  c               1   13[COMRAM] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2    9[COMRAM] int 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7020 ;;      Params:         4       0       0       0       0       0       0
  7021 ;;      Locals:         3       0       0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0
  7023 ;;      Totals:         7       0       0       0       0       0       0
  7024 ;;Total ram usage:        7 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    4
  7027 ;; This function calls:
  7028 ;;		_fputc
  7029 ;; This function is called by:
  7030 ;;		_pad
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text25
  7035  003880                     __ptext25:
  7036                           	opt callstack 0
  7037  003880                     _fputs:
  7038                           	opt callstack 0
  7039  003880  FFFF               	dw	65535	; assembler added errata NOP
  7040                           
  7041                           ;incstack = 0
  7042  003882  0E00               	movlw	0
  7043  003884  6E10               	movwf	fputs@i+1,c
  7044  003886  0E00               	movlw	0
  7045  003888  6E0F               	movwf	fputs@i,c
  7046  00388A  D00C               	goto	l3236
  7047  00388C                     l3232:
  7048  00388C  FFFF               	dw	65535	; assembler added errata NOP
  7049  00388E  C00E  F001         	movff	fputs@c,fputc@c
  7050  003892  6A02               	clrf	fputc@c+1,c
  7051  003894  C00C  F003         	movff	fputs@fp,fputc@fp
  7052  003898  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7053  00389C  EC30  F019         	call	_fputc	;wreg free
  7054  0038A0  4A0F               	infsnz	fputs@i,f,c
  7055  0038A2  2A10               	incf	fputs@i+1,f,c
  7056  0038A4                     l3236:
  7057  0038A4  FFFF               	dw	65535	; assembler added errata NOP
  7058  0038A6  500F               	movf	fputs@i,w,c
  7059  0038A8  240A               	addwf	fputs@s,w,c
  7060  0038AA  6ED9               	movwf	fsr2l,c
  7061  0038AC  5010               	movf	fputs@i+1,w,c
  7062  0038AE  200B               	addwfc	fputs@s+1,w,c
  7063  0038B0  6EDA               	movwf	fsr2h,c
  7064  0038B2  50DF               	movf	indf2,w,c
  7065  0038B4  6E0E               	movwf	fputs@c,c
  7066  0038B6  500E               	movf	fputs@c,w,c
  7067  0038B8  B4D8               	btfsc	status,2,c
  7068  0038BA  0012               	return		;funcret
  7069  0038BC  FFFF               	dw	65535	; assembler added errata NOP
  7070  0038BE  D7E6               	goto	l3232
  7071  0038C0  FFFF               	dw	65535	; errata NOP
  7072  0038C2                     __end_of_fputs:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function _fputc *****************
  7076 ;; Defined at:
  7077 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  c               2    0[COMRAM] int 
  7080 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7081 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2    0[COMRAM] int 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7093 ;;      Params:         4       0       0       0       0       0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0
  7095 ;;      Temps:          5       0       0       0       0       0       0
  7096 ;;      Totals:         9       0       0       0       0       0       0
  7097 ;;Total ram usage:        9 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    3
  7100 ;; This function calls:
  7101 ;;		_putch
  7102 ;; This function is called by:
  7103 ;;		_pad
  7104 ;;		_stoa
  7105 ;;		_vfpfcnvrt
  7106 ;;		_fputs
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text26
  7111  003260                     __ptext26:
  7112                           	opt callstack 0
  7113  003260                     _fputc:
  7114                           	opt callstack 0
  7115  003260  FFFF               	dw	65535	; assembler added errata NOP
  7116                           
  7117                           ;incstack = 0
  7118  003262  5003               	movf	fputc@fp,w,c
  7119  003264  1004               	iorwf	fputc@fp+1,w,c
  7120  003266  B4D8               	btfsc	status,2,c
  7121  003268  D004               	goto	u2690
  7122  00326A  5003               	movf	fputc@fp,w,c
  7123  00326C  1004               	iorwf	fputc@fp+1,w,c
  7124  00326E  A4D8               	btfss	status,2,c
  7125  003270  D005               	goto	l3222
  7126  003272                     u2690:
  7127  003272  FFFF               	dw	65535	; assembler added errata NOP
  7128  003274  5001               	movf	fputc@c,w,c
  7129  003276  EC98  F01D         	call	_putch
  7130  00327A  D045               	goto	l1288
  7131  00327C                     l3222:
  7132  00327C  FFFF               	dw	65535	; assembler added errata NOP
  7133  00327E  EE20 F004          	lfsr	2,4
  7134  003282  5003               	movf	fputc@fp,w,c
  7135  003284  26D9               	addwf	fsr2l,f,c
  7136  003286  5004               	movf	fputc@fp+1,w,c
  7137  003288  22DA               	addwfc	fsr2h,f,c
  7138  00328A  50DE               	movf	postinc2,w,c
  7139  00328C  10DE               	iorwf	postinc2,w,c
  7140  00328E  B4D8               	btfsc	status,2,c
  7141  003290  D016               	goto	u2710
  7142  003292  EE20 F004          	lfsr	2,4
  7143  003296  5003               	movf	fputc@fp,w,c
  7144  003298  26D9               	addwf	fsr2l,f,c
  7145  00329A  5004               	movf	fputc@fp+1,w,c
  7146  00329C  22DA               	addwfc	fsr2h,f,c
  7147  00329E  EE10 F002          	lfsr	1,2
  7148  0032A2  5003               	movf	fputc@fp,w,c
  7149  0032A4  26E1               	addwf	fsr1l,f,c
  7150  0032A6  5004               	movf	fputc@fp+1,w,c
  7151  0032A8  22E2               	addwfc	fsr1h,f,c
  7152  0032AA  50DE               	movf	postinc2,w,c
  7153  0032AC  5CE6               	subwf	postinc1,w,c
  7154  0032AE  50E6               	movf	postinc1,w,c
  7155  0032B0  0A80               	xorlw	128
  7156  0032B2  6E09               	movwf	(??_fputc+4)& (0+255),c
  7157  0032B4  50DE               	movf	postinc2,w,c
  7158  0032B6  0A80               	xorlw	128
  7159  0032B8  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7160  0032BA  B0D8               	btfsc	status,0,c
  7161  0032BC  D024               	goto	l1288
  7162  0032BE                     u2710:
  7163  0032BE  FFFF               	dw	65535	; assembler added errata NOP
  7164  0032C0  EE20 F002          	lfsr	2,2
  7165  0032C4  5003               	movf	fputc@fp,w,c
  7166  0032C6  26D9               	addwf	fsr2l,f,c
  7167  0032C8  5004               	movf	fputc@fp+1,w,c
  7168  0032CA  22DA               	addwfc	fsr2h,f,c
  7169  0032CC  CFDE F005          	movff	postinc2,??_fputc
  7170  0032D0  CFDD F006          	movff	postdec2,??_fputc+1
  7171  0032D4  C003  FFD9         	movff	fputc@fp,fsr2l
  7172  0032D8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7173  0032DC  CFDE F007          	movff	postinc2,??_fputc+2
  7174  0032E0  CFDD F008          	movff	postdec2,??_fputc+3
  7175  0032E4  5005               	movf	??_fputc,w,c
  7176  0032E6  2407               	addwf	??_fputc+2,w,c
  7177  0032E8  6ED9               	movwf	fsr2l,c
  7178  0032EA  5006               	movf	??_fputc+1,w,c
  7179  0032EC  2008               	addwfc	??_fputc+3,w,c
  7180  0032EE  6EDA               	movwf	fsr2h,c
  7181  0032F0  C001  FFDF         	movff	fputc@c,indf2
  7182  0032F4  EE20 F002          	lfsr	2,2
  7183  0032F8  5003               	movf	fputc@fp,w,c
  7184  0032FA  26D9               	addwf	fsr2l,f,c
  7185  0032FC  5004               	movf	fputc@fp+1,w,c
  7186  0032FE  22DA               	addwfc	fsr2h,f,c
  7187  003300  2ADE               	incf	postinc2,f,c
  7188  003302  0E00               	movlw	0
  7189  003304  22DD               	addwfc	postdec2,f,c
  7190  003306                     l1288:
  7191  003306  FFFF               	dw	65535	; assembler added errata NOP
  7192  003308  0012               	return		;funcret
  7193  00330A  FFFF               	dw	65535	; errata NOP
  7194  00330C                     __end_of_fputc:
  7195                           	opt callstack 0
  7196                           
  7197 ;; *************** function _putch *****************
  7198 ;; Defined at:
  7199 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  c               1    wreg     unsigned char 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  c               1    0[COMRAM] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7213 ;;      Params:         0       0       0       0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0
  7216 ;;      Totals:         0       0       0       0       0       0       0
  7217 ;;Total ram usage:        0 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    2
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_fputc
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text27
  7228  003B30                     __ptext27:
  7229                           	opt callstack 0
  7230  003B30                     _putch:
  7231                           	opt callstack 0
  7232  003B30  FFFF               	dw	65535	; assembler added errata NOP
  7233                           
  7234                           ;incstack = 0
  7235  003B32  0012               	return		;funcret
  7236  003B34  FFFF               	dw	65535	; errata NOP
  7237  003B36                     __end_of_putch:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _atoi *****************
  7241 ;; Defined at:
  7242 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7245 ;;		 -> STR_2(3), STR_1(4), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  n               2   20[COMRAM] int 
  7248 ;;  neg             2   13[COMRAM] int 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  2    7[COMRAM] int 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7258 ;;      Params:         2       0       0       0       0       0       0
  7259 ;;      Locals:         9       0       0       0       0       0       0
  7260 ;;      Temps:          4       0       0       0       0       0       0
  7261 ;;      Totals:        15       0       0       0       0       0       0
  7262 ;;Total ram usage:       15 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    3
  7265 ;; This function calls:
  7266 ;;		___wmul
  7267 ;;		_isdigit
  7268 ;;		_isspace
  7269 ;; This function is called by:
  7270 ;;		_vfpfcnvrt
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text28
  7275  0026D0                     __ptext28:
  7276                           	opt callstack 0
  7277  0026D0                     _atoi:
  7278                           	opt callstack 0
  7279  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  7280                           
  7281                           ;incstack = 0
  7282  0026D2  0E00               	movlw	0
  7283  0026D4  6E16               	movwf	atoi@n+1,c
  7284  0026D6  0E00               	movlw	0
  7285  0026D8  6E15               	movwf	atoi@n,c
  7286  0026DA  0E00               	movlw	0
  7287  0026DC  6E0F               	movwf	atoi@neg+1,c
  7288  0026DE  0E00               	movlw	0
  7289  0026E0  6E0E               	movwf	atoi@neg,c
  7290  0026E2  D003               	goto	l3708
  7291  0026E4                     l3706:
  7292  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  7293  0026E6  4A08               	infsnz	atoi@s,f,c
  7294  0026E8  2A09               	incf	atoi@s+1,f,c
  7295  0026EA                     l3708:
  7296  0026EA  FFFF               	dw	65535	; assembler added errata NOP
  7297  0026EC  0E01               	movlw	1
  7298  0026EE  6E14               	movwf	_atoi$1748,c
  7299  0026F0  C008  FFF6         	movff	atoi@s,tblptrl
  7300  0026F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7301  0026F8                     	if	0	;tblptru may be non-zero
  7302  0026F8                     	endif
  7303  0026F8                     	if	0	;tblptru may be non-zero
  7304  0026F8                     	endif
  7305  0026F8  0008               	tblrd		*
  7306  0026FA  FFFF               	dw	65535	; errata NOP
  7307  0026FC  50F5               	movf	tablat,w,c
  7308  0026FE  0A20               	xorlw	32
  7309  002700  B4D8               	btfsc	status,2,c
  7310  002702  D019               	goto	l3716
  7311  002704  0EF7               	movlw	247
  7312  002706  6E0A               	movwf	??_atoi& (0+255),c
  7313  002708  0EFF               	movlw	255
  7314  00270A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7315  00270C  C008  FFF6         	movff	atoi@s,tblptrl
  7316  002710  C009  FFF7         	movff	atoi@s+1,tblptrh
  7317  002714                     	if	0	;tblptru may be non-zero
  7318  002714                     	endif
  7319  002714                     	if	0	;tblptru may be non-zero
  7320  002714                     	endif
  7321  002714  0008               	tblrd		*
  7322  002716  FFFF               	dw	65535	; errata NOP
  7323  002718  50F5               	movf	tablat,w,c
  7324  00271A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7325  00271C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7326  00271E  500A               	movf	??_atoi,w,c
  7327  002720  260C               	addwf	??_atoi+2,f,c
  7328  002722  500B               	movf	??_atoi+1,w,c
  7329  002724  220D               	addwfc	??_atoi+3,f,c
  7330  002726  500D               	movf	??_atoi+3,w,c
  7331  002728  E104               	bnz	u3720
  7332  00272A  0E05               	movlw	5
  7333  00272C  5C0C               	subwf	??_atoi+2,w,c
  7334  00272E  A0D8               	btfss	status,0,c
  7335  002730  D002               	goto	l3716
  7336  002732                     u3720:
  7337  002732  0E00               	movlw	0
  7338  002734  6E14               	movwf	_atoi$1748,c
  7339  002736                     l3716:
  7340  002736  FFFF               	dw	65535	; assembler added errata NOP
  7341  002738  C014  F010         	movff	_atoi$1748,_atoi$1747
  7342  00273C  6A11               	clrf	_atoi$1747+1,c
  7343  00273E  5010               	movf	_atoi$1747,w,c
  7344  002740  1011               	iorwf	_atoi$1747+1,w,c
  7345  002742  B4D8               	btfsc	status,2,c
  7346  002744  D00A               	goto	l3726
  7347  002746  D7CE               	goto	l3706
  7348  002748                     l3722:
  7349  002748  FFFF               	dw	65535	; assembler added errata NOP
  7350  00274A  0E00               	movlw	0
  7351  00274C  6E0F               	movwf	atoi@neg+1,c
  7352  00274E  0E01               	movlw	1
  7353  002750  6E0E               	movwf	atoi@neg,c
  7354  002752                     l3724:
  7355  002752  FFFF               	dw	65535	; assembler added errata NOP
  7356  002754  4A08               	infsnz	atoi@s,f,c
  7357  002756  2A09               	incf	atoi@s+1,f,c
  7358  002758  D032               	goto	l3732
  7359  00275A                     l3726:
  7360  00275A  FFFF               	dw	65535	; assembler added errata NOP
  7361  00275C  C008  FFF6         	movff	atoi@s,tblptrl
  7362  002760  C009  FFF7         	movff	atoi@s+1,tblptrh
  7363  002764                     	if	0	;tblptru may be non-zero
  7364  002764                     	endif
  7365  002764                     	if	0	;tblptru may be non-zero
  7366  002764                     	endif
  7367  002764  0008               	tblrd		*
  7368  002766  FFFF               	dw	65535	; errata NOP
  7369  002768  50F5               	movf	tablat,w,c
  7370  00276A  6E0A               	movwf	??_atoi& (0+255),c
  7371  00276C  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7372                           
  7373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7374                           ; Switch size 1, requested type "simple"
  7375                           ; Number of cases is 1, Range of values is 0 to 0
  7376                           ; switch strategies available:
  7377                           ; Name         Instructions Cycles
  7378                           ; simple_byte            4     3 (average)
  7379                           ;	Chosen strategy is simple_byte
  7380  00276E  500B               	movf	??_atoi+1,w,c
  7381  002770  0A00               	xorlw	0	; case 0
  7382  002772  A4D8               	btfss	status,2,c
  7383  002774  D024               	goto	l3732
  7384                           
  7385                           ; Switch size 1, requested type "simple"
  7386                           ; Number of cases is 2, Range of values is 43 to 45
  7387                           ; switch strategies available:
  7388                           ; Name         Instructions Cycles
  7389                           ; simple_byte            7     4 (average)
  7390                           ;	Chosen strategy is simple_byte
  7391  002776  500A               	movf	??_atoi,w,c
  7392  002778  0A2B               	xorlw	43	; case 43
  7393  00277A  B4D8               	btfsc	status,2,c
  7394  00277C  D7EA               	goto	l3724
  7395  00277E  0A06               	xorlw	6	; case 45
  7396  002780  B4D8               	btfsc	status,2,c
  7397  002782  D7E2               	goto	l3722
  7398  002784  D01C               	goto	l3732
  7399  002786                     l3728:
  7400  002786  FFFF               	dw	65535	; assembler added errata NOP
  7401  002788  C015  F001         	movff	atoi@n,___wmul@multiplier
  7402  00278C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7403  002790  0E00               	movlw	0
  7404  002792  6E04               	movwf	___wmul@multiplicand+1,c
  7405  002794  0E0A               	movlw	10
  7406  002796  6E03               	movwf	___wmul@multiplicand,c
  7407  002798  EC27  F01D         	call	___wmul	;wreg free
  7408  00279C  C008  FFF6         	movff	atoi@s,tblptrl
  7409  0027A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7410  0027A4                     	if	0	;tblptru may be non-zero
  7411  0027A4                     	endif
  7412  0027A4                     	if	0	;tblptru may be non-zero
  7413  0027A4                     	endif
  7414  0027A4  0008               	tblrd		*
  7415  0027A6  FFFF               	dw	65535	; errata NOP
  7416  0027A8  50F5               	movf	tablat,w,c
  7417  0027AA  5E01               	subwf	?___wmul,f,c
  7418  0027AC  0E00               	movlw	0
  7419  0027AE  5A02               	subwfb	?___wmul+1,f,c
  7420  0027B0  0E30               	movlw	48
  7421  0027B2  2401               	addwf	?___wmul,w,c
  7422  0027B4  6E15               	movwf	atoi@n,c
  7423  0027B6  0E00               	movlw	0
  7424  0027B8  2002               	addwfc	?___wmul+1,w,c
  7425  0027BA  6E16               	movwf	atoi@n+1,c
  7426  0027BC  D7CA               	goto	l3724
  7427  0027BE                     l3732:
  7428  0027BE  FFFF               	dw	65535	; assembler added errata NOP
  7429  0027C0  0ED0               	movlw	208
  7430  0027C2  6E0A               	movwf	??_atoi& (0+255),c
  7431  0027C4  0EFF               	movlw	255
  7432  0027C6  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7433  0027C8  C008  FFF6         	movff	atoi@s,tblptrl
  7434  0027CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7435  0027D0                     	if	0	;tblptru may be non-zero
  7436  0027D0                     	endif
  7437  0027D0                     	if	0	;tblptru may be non-zero
  7438  0027D0                     	endif
  7439  0027D0  0008               	tblrd		*
  7440  0027D2  FFFF               	dw	65535	; errata NOP
  7441  0027D4  50F5               	movf	tablat,w,c
  7442  0027D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7443  0027D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7444  0027DA  500A               	movf	??_atoi,w,c
  7445  0027DC  260C               	addwf	??_atoi+2,f,c
  7446  0027DE  500B               	movf	??_atoi+1,w,c
  7447  0027E0  220D               	addwfc	??_atoi+3,f,c
  7448  0027E2  500D               	movf	??_atoi+3,w,c
  7449  0027E4  E106               	bnz	u3740
  7450  0027E6  0E0A               	movlw	10
  7451  0027E8  5C0C               	subwf	??_atoi+2,w,c
  7452  0027EA  B0D8               	btfsc	status,0,c
  7453  0027EC  D002               	goto	u3740
  7454  0027EE  0E01               	movlw	1
  7455  0027F0  D002               	goto	u3750
  7456  0027F2                     u3740:
  7457  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  7458  0027F4  0E00               	movlw	0
  7459  0027F6                     u3750:
  7460  0027F6  FFFF               	dw	65535	; assembler added errata NOP
  7461  0027F8  6E12               	movwf	_atoi$1749,c
  7462  0027FA  6A13               	clrf	_atoi$1749+1,c
  7463  0027FC  5012               	movf	_atoi$1749,w,c
  7464  0027FE  1013               	iorwf	_atoi$1749+1,w,c
  7465  002800  A4D8               	btfss	status,2,c
  7466  002802  D7C1               	goto	l3728
  7467  002804  500E               	movf	atoi@neg,w,c
  7468  002806  100F               	iorwf	atoi@neg+1,w,c
  7469  002808  A4D8               	btfss	status,2,c
  7470  00280A  D00D               	goto	l1242
  7471  00280C  C015  F00A         	movff	atoi@n,??_atoi
  7472  002810  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7473  002814  1E0A               	comf	??_atoi,f,c
  7474  002816  1E0B               	comf	??_atoi+1,f,c
  7475  002818  4A0A               	infsnz	??_atoi,f,c
  7476  00281A  2A0B               	incf	??_atoi+1,f,c
  7477  00281C  C00A  F008         	movff	??_atoi,?_atoi
  7478  002820  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7479  002824  D005               	goto	l1245
  7480  002826                     l1242:
  7481  002826  FFFF               	dw	65535	; assembler added errata NOP
  7482  002828  C015  F008         	movff	atoi@n,?_atoi
  7483  00282C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7484  002830                     l1245:
  7485  002830  FFFF               	dw	65535	; assembler added errata NOP
  7486  002832  0012               	return		;funcret
  7487  002834  FFFF               	dw	65535	; errata NOP
  7488  002836                     __end_of_atoi:
  7489                           	opt callstack 0
  7490                           
  7491 ;; *************** function _isspace *****************
  7492 ;; Defined at:
  7493 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  c               2    0[COMRAM] int 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  2    0[COMRAM] int 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7507 ;;      Params:         2       0       0       0       0       0       0
  7508 ;;      Locals:         1       0       0       0       0       0       0
  7509 ;;      Temps:          4       0       0       0       0       0       0
  7510 ;;      Totals:         7       0       0       0       0       0       0
  7511 ;;Total ram usage:        7 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    2
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_atoi
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text29
  7522  0037F8                     __ptext29:
  7523                           	opt callstack 0
  7524  0037F8                     _isspace:
  7525                           	opt callstack 0
  7526  0037F8  FFFF               	dw	65535	; assembler added errata NOP
  7527                           
  7528                           ;incstack = 0
  7529  0037FA  0E01               	movlw	1
  7530  0037FC  6E07               	movwf	_isspace$1784,c
  7531  0037FE  0E20               	movlw	32
  7532  003800  1801               	xorwf	isspace@c,w,c
  7533  003802  1002               	iorwf	isspace@c+1,w,c
  7534  003804  B4D8               	btfsc	status,2,c
  7535  003806  D014               	goto	l3432
  7536  003808  0EF7               	movlw	247
  7537  00380A  6E03               	movwf	??_isspace& (0+255),c
  7538  00380C  0EFF               	movlw	255
  7539  00380E  6E04               	movwf	(??_isspace+1)& (0+255),c
  7540  003810  C001  F005         	movff	isspace@c,??_isspace+2
  7541  003814  C002  F006         	movff	isspace@c+1,??_isspace+3
  7542  003818  5003               	movf	??_isspace,w,c
  7543  00381A  2605               	addwf	??_isspace+2,f,c
  7544  00381C  5004               	movf	??_isspace+1,w,c
  7545  00381E  2206               	addwfc	??_isspace+3,f,c
  7546  003820  5006               	movf	??_isspace+3,w,c
  7547  003822  E104               	bnz	u3110
  7548  003824  0E05               	movlw	5
  7549  003826  5C05               	subwf	??_isspace+2,w,c
  7550  003828  A0D8               	btfss	status,0,c
  7551  00382A  D002               	goto	l3432
  7552  00382C                     u3110:
  7553  00382C  0E00               	movlw	0
  7554  00382E  6E07               	movwf	_isspace$1784,c
  7555  003830                     l3432:
  7556  003830  FFFF               	dw	65535	; assembler added errata NOP
  7557  003832  C007  F001         	movff	_isspace$1784,?_isspace
  7558  003836  6A02               	clrf	?_isspace+1,c
  7559  003838  0012               	return		;funcret
  7560  00383A  FFFF               	dw	65535	; errata NOP
  7561  00383C                     __end_of_isspace:
  7562                           	opt callstack 0
  7563                           
  7564 ;; *************** function _isdigit *****************
  7565 ;; Defined at:
  7566 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  c               2    0[COMRAM] int 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  2    0[COMRAM] int 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7580 ;;      Params:         2       0       0       0       0       0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0
  7582 ;;      Temps:          4       0       0       0       0       0       0
  7583 ;;      Totals:         6       0       0       0       0       0       0
  7584 ;;Total ram usage:        6 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    2
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_vfpfcnvrt
  7591 ;;		_atoi
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text30
  7596  0039E4                     __ptext30:
  7597                           	opt callstack 0
  7598  0039E4                     _isdigit:
  7599                           	opt callstack 0
  7600  0039E4  FFFF               	dw	65535	; assembler added errata NOP
  7601                           
  7602                           ;incstack = 0
  7603  0039E6  0ED0               	movlw	208
  7604  0039E8  6E03               	movwf	??_isdigit& (0+255),c
  7605  0039EA  0EFF               	movlw	255
  7606  0039EC  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7607  0039EE  C001  F005         	movff	isdigit@c,??_isdigit+2
  7608  0039F2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7609  0039F6  5003               	movf	??_isdigit,w,c
  7610  0039F8  2605               	addwf	??_isdigit+2,f,c
  7611  0039FA  5004               	movf	??_isdigit+1,w,c
  7612  0039FC  2206               	addwfc	??_isdigit+3,f,c
  7613  0039FE  5006               	movf	??_isdigit+3,w,c
  7614  003A00  E106               	bnz	u2880
  7615  003A02  0E0A               	movlw	10
  7616  003A04  5C05               	subwf	??_isdigit+2,w,c
  7617  003A06  B0D8               	btfsc	status,0,c
  7618  003A08  D002               	goto	u2880
  7619  003A0A  0E01               	movlw	1
  7620  003A0C  D002               	goto	u2890
  7621  003A0E                     u2880:
  7622  003A0E  FFFF               	dw	65535	; assembler added errata NOP
  7623  003A10  0E00               	movlw	0
  7624  003A12                     u2890:
  7625  003A12  FFFF               	dw	65535	; assembler added errata NOP
  7626  003A14  6E01               	movwf	?_isdigit,c
  7627  003A16  6A02               	clrf	?_isdigit+1,c
  7628  003A18  0012               	return		;funcret
  7629  003A1A  FFFF               	dw	65535	; errata NOP
  7630  003A1C                     __end_of_isdigit:
  7631                           	opt callstack 0
  7632                           
  7633 ;; *************** function ___wmul *****************
  7634 ;; Defined at:
  7635 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  multiplier      2    0[COMRAM] unsigned int 
  7638 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  product         2    4[COMRAM] unsigned int 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  2    0[COMRAM] unsigned int 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0, prodl, prodh
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7650 ;;      Params:         4       0       0       0       0       0       0
  7651 ;;      Locals:         2       0       0       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0
  7653 ;;      Totals:         6       0       0       0       0       0       0
  7654 ;;Total ram usage:        6 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    2
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		_atoi
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text31
  7665  003A4E                     __ptext31:
  7666                           	opt callstack 0
  7667  003A4E                     ___wmul:
  7668                           	opt callstack 0
  7669  003A4E  FFFF               	dw	65535	; assembler added errata NOP
  7670                           
  7671                           ;incstack = 0
  7672  003A50  5001               	movf	___wmul@multiplier,w,c
  7673  003A52  0203               	mulwf	___wmul@multiplicand,c
  7674  003A54  CFF3 F005          	movff	prodl,___wmul@product
  7675  003A58  CFF4 F006          	movff	prodh,___wmul@product+1
  7676  003A5C  5001               	movf	___wmul@multiplier,w,c
  7677  003A5E  0204               	mulwf	___wmul@multiplicand+1,c
  7678  003A60  50F3               	movf	prodl,w,c
  7679  003A62  2606               	addwf	___wmul@product+1,f,c
  7680  003A64  5002               	movf	___wmul@multiplier+1,w,c
  7681  003A66  0203               	mulwf	___wmul@multiplicand,c
  7682  003A68  50F3               	movf	prodl,w,c
  7683  003A6A  2606               	addwf	___wmul@product+1,f,c
  7684  003A6C  C005  F001         	movff	___wmul@product,?___wmul
  7685  003A70  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7686  003A74  0012               	return		;funcret
  7687  003A76  FFFF               	dw	65535	; errata NOP
  7688  003A78                     __end_of___wmul:
  7689                           	opt callstack 0
  7690                           
  7691 ;; *************** function _getchar *****************
  7692 ;; Defined at:
  7693 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2   32[None  ] int 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7707 ;;      Params:         0       0       0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    4
  7714 ;; This function calls:
  7715 ;;		_fgetc
  7716 ;; This function is called by:
  7717 ;;		_int_to_char
  7718 ;;		_float_to_char
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text32
  7723  003AEE                     __ptext32:
  7724                           	opt callstack 0
  7725  003AEE                     _getchar:
  7726                           	opt callstack 0
  7727  003AEE  FFFF               	dw	65535	; assembler added errata NOP
  7728                           
  7729                           ;	Return value of _getchar is never used
  7730                           
  7731                           ;incstack = 0
  7732  003AF0  0E00               	movlw	0
  7733  003AF2  6E03               	movwf	fgetc@fp,c
  7734  003AF4  0E00               	movlw	0
  7735  003AF6  6E04               	movwf	fgetc@fp+1,c
  7736  003AF8  EC6B  F01A         	call	_fgetc	;wreg free
  7737  003AFC  0012               	return		;funcret
  7738  003AFE  FFFF               	dw	65535	; errata NOP
  7739  003B00                     __end_of_getchar:
  7740                           	opt callstack 0
  7741                           
  7742 ;; *************** function _fgetc *****************
  7743 ;; Defined at:
  7744 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7747 ;;		 -> NULL(0), 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  c               2    9[COMRAM] int 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  2    2[COMRAM] int 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7759 ;;      Params:         2       0       0       0       0       0       0
  7760 ;;      Locals:         2       0       0       0       0       0       0
  7761 ;;      Temps:          5       0       0       0       0       0       0
  7762 ;;      Totals:         9       0       0       0       0       0       0
  7763 ;;Total ram usage:        9 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    3
  7766 ;; This function calls:
  7767 ;;		_getch
  7768 ;; This function is called by:
  7769 ;;		_getchar
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text33
  7774  0034D6                     __ptext33:
  7775                           	opt callstack 0
  7776  0034D6                     _fgetc:
  7777                           	opt callstack 0
  7778  0034D6  FFFF               	dw	65535	; assembler added errata NOP
  7779                           
  7780                           ;incstack = 0
  7781  0034D8  5003               	movf	fgetc@fp,w,c
  7782  0034DA  1004               	iorwf	fgetc@fp+1,w,c
  7783  0034DC  A4D8               	btfss	status,2,c
  7784  0034DE  D013               	goto	l4166
  7785  0034E0  0100               	movlb	0	; () banked
  7786  0034E2  5195               	movf	_ungetcnt& (0+255),w,b
  7787  0034E4  B4D8               	btfsc	status,2,c
  7788  0034E6  D007               	goto	l4164
  7789                           
  7790                           ; BSR set to: 0
  7791  0034E8  0E00               	movlw	0
  7792  0034EA  6E0B               	movwf	fgetc@c+1,c
  7793  0034EC  0E00               	movlw	0
  7794  0034EE  6E0A               	movwf	fgetc@c,c
  7795  0034F0  0E00               	movlw	0
  7796  0034F2  6F95               	movwf	_ungetcnt& (0+255),b
  7797  0034F4  D02F               	goto	l4168
  7798  0034F6                     l4164:
  7799  0034F6  FFFF               	dw	65535	; assembler added errata NOP
  7800                           
  7801                           ; BSR set to: 0
  7802  0034F8  EC87  F01D         	call	_getch	;wreg free
  7803  0034FC  C001  F00A         	movff	?_getch,fgetc@c
  7804  003500  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7805  003504  D027               	goto	l4168
  7806  003506                     l4166:
  7807  003506  FFFF               	dw	65535	; assembler added errata NOP
  7808  003508  EE20 F002          	lfsr	2,2
  7809  00350C  5003               	movf	fgetc@fp,w,c
  7810  00350E  26D9               	addwf	fsr2l,f,c
  7811  003510  5004               	movf	fgetc@fp+1,w,c
  7812  003512  22DA               	addwfc	fsr2h,f,c
  7813  003514  CFDE F005          	movff	postinc2,??_fgetc
  7814  003518  CFDD F006          	movff	postdec2,??_fgetc+1
  7815  00351C  C003  FFD9         	movff	fgetc@fp,fsr2l
  7816  003520  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7817  003524  CFDE F007          	movff	postinc2,??_fgetc+2
  7818  003528  CFDD F008          	movff	postdec2,??_fgetc+3
  7819  00352C  5005               	movf	??_fgetc,w,c
  7820  00352E  2407               	addwf	??_fgetc+2,w,c
  7821  003530  6ED9               	movwf	fsr2l,c
  7822  003532  5006               	movf	??_fgetc+1,w,c
  7823  003534  2008               	addwfc	??_fgetc+3,w,c
  7824  003536  6EDA               	movwf	fsr2h,c
  7825  003538  50DF               	movf	indf2,w,c
  7826  00353A  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7827  00353C  5009               	movf	??_fgetc+4,w,c
  7828  00353E  6E0A               	movwf	fgetc@c,c
  7829  003540  6A0B               	clrf	fgetc@c+1,c
  7830  003542  EE20 F002          	lfsr	2,2
  7831  003546  5003               	movf	fgetc@fp,w,c
  7832  003548  26D9               	addwf	fsr2l,f,c
  7833  00354A  5004               	movf	fgetc@fp+1,w,c
  7834  00354C  22DA               	addwfc	fsr2h,f,c
  7835  00354E  2ADE               	incf	postinc2,f,c
  7836  003550  0E00               	movlw	0
  7837  003552  22DD               	addwfc	postdec2,f,c
  7838  003554                     l4168:
  7839  003554  FFFF               	dw	65535	; assembler added errata NOP
  7840  003556  C00A  F003         	movff	fgetc@c,?_fgetc
  7841  00355A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7842  00355E  0012               	return		;funcret
  7843  003560  FFFF               	dw	65535	; errata NOP
  7844  003562                     __end_of_fgetc:
  7845                           	opt callstack 0
  7846                           
  7847 ;; *************** function _getch *****************
  7848 ;; Defined at:
  7849 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  2    0[COMRAM] int 
  7856 ;; Registers used:
  7857 ;;		None
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7863 ;;      Params:         2       0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0
  7866 ;;      Totals:         2       0       0       0       0       0       0
  7867 ;;Total ram usage:        2 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    2
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_fgetc
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text34
  7878  003B0E                     __ptext34:
  7879                           	opt callstack 0
  7880  003B0E                     _getch:
  7881                           	opt callstack 0
  7882  003B0E  FFFF               	dw	65535	; assembler added errata NOP
  7883                           
  7884                           ;incstack = 0
  7885  003B10  6801               	setf	?_getch,c
  7886  003B12  6802               	setf	?_getch+1,c
  7887  003B14  0012               	return		;funcret
  7888  003B16  FFFF               	dw	65535	; errata NOP
  7889  003B18                     __end_of_getch:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _UARTSendString *****************
  7893 ;; Defined at:
  7894 ;;		line 65 in file "serial.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  c               2   32[BANK0 ] PTR unsigned char 
  7897 ;;		 -> int_to_char@result(10), 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  i               2   34[BANK0 ] int 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7909 ;;      Params:         0       2       0       0       0       0       0
  7910 ;;      Locals:         0       2       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0
  7912 ;;      Totals:         0       4       0       0       0       0       0
  7913 ;;Total ram usage:        4 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:    3
  7916 ;; This function calls:
  7917 ;;		_UARTSendChar
  7918 ;; This function is called by:
  7919 ;;		_read_op
  7920 ;;		_main
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text35
  7925  00383C                     __ptext35:
  7926                           	opt callstack 0
  7927  00383C                     _UARTSendString:
  7928                           	opt callstack 0
  7929  00383C  FFFF               	dw	65535	; assembler added errata NOP
  7930                           
  7931                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  7932                           
  7933                           ;incstack = 0
  7934  00383E  9E94               	bcf	3988,7,c	;volatile
  7935                           
  7936                           ;serial.c: 67:   int i = 0;
  7937  003840  0E00               	movlw	0
  7938  003842  0100               	movlb	0	; () banked
  7939  003844  6FDB               	movwf	(UARTSendString@i+1)& (0+255),b
  7940  003846  0E00               	movlw	0
  7941  003848  6FDA               	movwf	UARTSendString@i& (0+255),b
  7942                           
  7943                           ;serial.c: 68:   while (c[i] != '\0') {
  7944  00384A  D00D               	goto	l4412
  7945  00384C                     l4408:
  7946  00384C  FFFF               	dw	65535	; assembler added errata NOP
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;serial.c: 69:     UARTSendChar(c[i]);
  7950  00384E  51DA               	movf	UARTSendString@i& (0+255),w,b
  7951  003850  25D8               	addwf	UARTSendString@c& (0+255),w,b
  7952  003852  6ED9               	movwf	fsr2l,c
  7953  003854  51DB               	movf	(UARTSendString@i+1)& (0+255),w,b
  7954  003856  21D9               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7955  003858  6EDA               	movwf	fsr2h,c
  7956  00385A  50DF               	movf	indf2,w,c
  7957  00385C  EC59  F01D         	call	_UARTSendChar
  7958                           
  7959                           ;serial.c: 70:     i++;
  7960  003860  0100               	movlb	0	; () banked
  7961  003862  4BDA               	infsnz	UARTSendString@i& (0+255),f,b
  7962  003864  2BDB               	incf	(UARTSendString@i+1)& (0+255),f,b
  7963  003866                     l4412:
  7964  003866  FFFF               	dw	65535	; assembler added errata NOP
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;serial.c: 68:   while (c[i] != '\0') {
  7968  003868  51DA               	movf	UARTSendString@i& (0+255),w,b
  7969  00386A  25D8               	addwf	UARTSendString@c& (0+255),w,b
  7970  00386C  6ED9               	movwf	fsr2l,c
  7971  00386E  51DB               	movf	(UARTSendString@i+1)& (0+255),w,b
  7972  003870  21D9               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7973  003872  6EDA               	movwf	fsr2h,c
  7974  003874  50DF               	movf	indf2,w,c
  7975  003876  B4D8               	btfsc	status,2,c
  7976                           
  7977                           ; BSR set to: 0
  7978  003878  0012               	return		;funcret
  7979  00387A  FFFF               	dw	65535	; assembler added errata NOP
  7980  00387C  D7E7               	goto	l4408
  7981  00387E  FFFF               	dw	65535	; errata NOP
  7982  003880                     __end_of_UARTSendString:
  7983                           	opt callstack 0
  7984                           
  7985 ;; *************** function _UARTNewLine *****************
  7986 ;; Defined at:
  7987 ;;		line 41 in file "serial.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8001 ;;      Params:         0       0       0       0       0       0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0
  8004 ;;      Totals:         0       0       0       0       0       0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    3
  8008 ;; This function calls:
  8009 ;;		_UARTSendChar
  8010 ;; This function is called by:
  8011 ;;		_read_op
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text36
  8017  003A9E                     __ptext36:
  8018                           	opt callstack 0
  8019  003A9E                     _UARTNewLine:
  8020                           	opt callstack 0
  8021  003A9E  FFFF               	dw	65535	; assembler added errata NOP
  8022                           
  8023                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;incstack = 0
  8027  003AA0  9E94               	bcf	3988,7,c	;volatile
  8028                           
  8029                           ;serial.c: 43:   UARTSendChar(0x0a);
  8030  003AA2  0E0A               	movlw	10
  8031  003AA4  EC59  F01D         	call	_UARTSendChar
  8032                           
  8033                           ;serial.c: 44:   UARTSendChar(0x0d);
  8034  003AA8  0E0D               	movlw	13
  8035  003AAA  EC59  F01D         	call	_UARTSendChar
  8036  003AAE  0012               	return		;funcret
  8037  003AB0  FFFF               	dw	65535	; errata NOP
  8038  003AB2                     __end_of_UARTNewLine:
  8039                           	opt callstack 0
  8040                           
  8041 ;; *************** function _UARTSendChar *****************
  8042 ;; Defined at:
  8043 ;;		line 47 in file "serial.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  c               1    wreg     unsigned char 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  c               1    0[COMRAM] unsigned char 
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		wreg
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8057 ;;      Params:         0       0       0       0       0       0       0
  8058 ;;      Locals:         1       0       0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0       0       0
  8060 ;;      Totals:         1       0       0       0       0       0       0
  8061 ;;Total ram usage:        1 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:    2
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_UARTNewLine
  8068 ;;		_UARTSendString
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text37
  8073  003AB2                     __ptext37:
  8074                           	opt callstack 0
  8075  003AB2                     _UARTSendChar:
  8076                           	opt callstack 0
  8077  003AB2  FFFF               	dw	65535	; assembler added errata NOP
  8078                           
  8079                           ;incstack = 0
  8080                           ;UARTSendChar@c stored from wreg
  8081  003AB4  6E01               	movwf	UARTSendChar@c,c
  8082                           
  8083                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  8084  003AB6  9E94               	bcf	3988,7,c	;volatile
  8085  003AB8                     l175:
  8086  003AB8  FFFF               	dw	65535	; assembler added errata NOP
  8087  003ABA  A2AC               	btfss	4012,1,c	;volatile
  8088  003ABC  D7FD               	goto	l175
  8089                           
  8090                           ;serial.c: 50:   TXREG = c;
  8091  003ABE  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  8092  003AC2  0012               	return		;funcret
  8093  003AC4  FFFF               	dw	65535	; errata NOP
  8094  003AC6                     __end_of_UARTSendChar:
  8095                           	opt callstack 0
  8096                           
  8097 ;; *************** function _initialize_TX *****************
  8098 ;; Defined at:
  8099 ;;		line 23 in file "serial.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8113 ;;      Params:         0       0       0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0
  8116 ;;      Totals:         0       0       0       0       0       0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_main
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text38
  8128  003AC6                     __ptext38:
  8129                           	opt callstack 0
  8130  003AC6                     _initialize_TX:
  8131                           	opt callstack 0
  8132  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  8133                           
  8134                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  8135                           
  8136                           ;incstack = 0
  8137  003AC8  8CAC               	bsf	4012,6,c	;volatile
  8138                           
  8139                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  8140  003ACA  8AAC               	bsf	4012,5,c	;volatile
  8141                           
  8142                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  8143  003ACC  98AC               	bcf	4012,4,c	;volatile
  8144                           
  8145                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  8146  003ACE  94AC               	bcf	4012,2,c	;volatile
  8147                           
  8148                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  8149  003AD0  80AC               	bsf	4012,0,c	;volatile
  8150                           
  8151                           ;serial.c: 29:   SPBRG = 25;
  8152  003AD2  0E19               	movlw	25
  8153  003AD4  6EAF               	movwf	4015,c	;volatile
  8154  003AD6  0012               	return		;funcret
  8155  003AD8  FFFF               	dw	65535	; errata NOP
  8156  003ADA                     __end_of_initialize_TX:
  8157                           	opt callstack 0
  8158                           
  8159 ;; *************** function _initialize_RX *****************
  8160 ;; Defined at:
  8161 ;;		line 32 in file "serial.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;		None
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8175 ;;      Params:         0       0       0       0       0       0       0
  8176 ;;      Locals:         0       0       0       0       0       0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0
  8178 ;;      Totals:         0       0       0       0       0       0       0
  8179 ;;Total ram usage:        0 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    2
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_main
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text39
  8190  003ADA                     __ptext39:
  8191                           	opt callstack 0
  8192  003ADA                     _initialize_RX:
  8193                           	opt callstack 0
  8194  003ADA  FFFF               	dw	65535	; assembler added errata NOP
  8195                           
  8196                           ;serial.c: 33:   RCSTA = 0x00;
  8197                           
  8198                           ;incstack = 0
  8199  003ADC  0E00               	movlw	0
  8200  003ADE  6EAB               	movwf	4011,c	;volatile
  8201                           
  8202                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  8203  003AE0  8EAB               	bsf	4011,7,c	;volatile
  8204                           
  8205                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  8206  003AE2  8CAB               	bsf	4011,6,c	;volatile
  8207                           
  8208                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  8209  003AE4  88AB               	bsf	4011,4,c	;volatile
  8210                           
  8211                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  8212  003AE6  96AB               	bcf	4011,3,c	;volatile
  8213                           
  8214                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  8215  003AE8  80AB               	bsf	4011,0,c	;volatile
  8216  003AEA  0012               	return		;funcret
  8217  003AEC  FFFF               	dw	65535	; errata NOP
  8218  003AEE                     __end_of_initialize_RX:
  8219                           	opt callstack 0
  8220                           
  8221 ;; *************** function _get_temp *****************
  8222 ;; Defined at:
  8223 ;;		line 10 in file "temp_adc.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  temp            4   55[COMRAM] float 
  8228 ;;  real_voltage    4   51[COMRAM] float 
  8229 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  4   47[COMRAM] float 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8239 ;;      Params:         4       0       0       0       0       0       0
  8240 ;;      Locals:        10       0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0
  8242 ;;      Totals:        14       0       0       0       0       0       0
  8243 ;;Total ram usage:       14 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    4
  8246 ;; This function calls:
  8247 ;;		_ADC_Init
  8248 ;;		_ADC_Read
  8249 ;;		___flmul
  8250 ;;		___flsub
  8251 ;;		___xxtofl
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text40
  8258  003018                     __ptext40:
  8259                           	opt callstack 0
  8260  003018                     _get_temp:
  8261                           	opt callstack 0
  8262  003018  FFFF               	dw	65535	; assembler added errata NOP
  8263                           
  8264                           ;temp_adc.c: 11:   ADC_Init();
  8265                           
  8266                           ;incstack = 0
  8267  00301A  EC80  F01D         	call	_ADC_Init	;wreg free
  8268                           
  8269                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  8270  00301E  90C1               	bcf	4033,0,c	;volatile
  8271                           
  8272                           ;temp_adc.c: 13:   TRISA |= 0x01;
  8273  003020  8092               	bsf	3986,0,c	;volatile
  8274                           
  8275                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  8276  003022  0E00               	movlw	0
  8277  003024  EC62  F01B         	call	_ADC_Read
  8278  003028  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  8279  00302C  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  8280                           
  8281                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  8282  003030  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  8283  003034  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  8284  003038  6A03               	clrf	___xxtofl@val+2,c
  8285  00303A  6A04               	clrf	___xxtofl@val+3,c
  8286  00303C  0E00               	movlw	0
  8287  00303E  ECC9  F014         	call	___xxtofl
  8288  003042  C001  F00F         	movff	?___xxtofl,___flmul@b
  8289  003046  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8290  00304A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8291  00304E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8292  003052  0E9F               	movlw	159
  8293  003054  6E13               	movwf	___flmul@a,c
  8294  003056  0EAB               	movlw	171
  8295  003058  6E14               	movwf	___flmul@a+1,c
  8296  00305A  0EAD               	movlw	173
  8297  00305C  6E15               	movwf	___flmul@a+2,c
  8298  00305E  0E3B               	movlw	59
  8299  003060  6E16               	movwf	___flmul@a+3,c
  8300  003062  ECF6  F00B         	call	___flmul	;wreg free
  8301  003066  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  8302  00306A  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  8303  00306E  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  8304  003072  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  8305                           
  8306                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  8307  003076  0E00               	movlw	0
  8308  003078  6E28               	movwf	___flsub@b,c
  8309  00307A  0E00               	movlw	0
  8310  00307C  6E29               	movwf	___flsub@b+1,c
  8311  00307E  0E48               	movlw	72
  8312  003080  6E2A               	movwf	___flsub@b+2,c
  8313  003082  0E43               	movlw	67
  8314  003084  6E2B               	movwf	___flsub@b+3,c
  8315  003086  0E00               	movlw	0
  8316  003088  6E13               	movwf	___flmul@a,c
  8317  00308A  0E00               	movlw	0
  8318  00308C  6E14               	movwf	___flmul@a+1,c
  8319  00308E  0E0C               	movlw	12
  8320  003090  6E15               	movwf	___flmul@a+2,c
  8321  003092  0E42               	movlw	66
  8322  003094  6E16               	movwf	___flmul@a+3,c
  8323  003096  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  8324  00309A  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  8325  00309E  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  8326  0030A2  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  8327  0030A6  ECF6  F00B         	call	___flmul	;wreg free
  8328  0030AA  C00F  F02C         	movff	?___flmul,___flsub@a
  8329  0030AE  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  8330  0030B2  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  8331  0030B6  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  8332  0030BA  ECB3  F01B         	call	___flsub	;wreg free
  8333  0030BE  C028  F038         	movff	?___flsub,get_temp@temp
  8334  0030C2  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  8335  0030C6  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  8336  0030CA  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  8337                           
  8338                           ;temp_adc.c: 18:   return temp;
  8339  0030CE  C038  F030         	movff	get_temp@temp,?_get_temp
  8340  0030D2  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  8341  0030D6  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  8342  0030DA  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  8343  0030DE  0012               	return		;funcret
  8344  0030E0  FFFF               	dw	65535	; errata NOP
  8345  0030E2                     __end_of_get_temp:
  8346                           	opt callstack 0
  8347                           
  8348 ;; *************** function ___xxtofl *****************
  8349 ;; Defined at:
  8350 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  sign            1    wreg     unsigned char 
  8353 ;;  val             4    0[COMRAM] long 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  sign            1    8[COMRAM] unsigned char 
  8356 ;;  arg             4   10[COMRAM] unsigned long 
  8357 ;;  exp             1    9[COMRAM] unsigned char 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  4    0[COMRAM] unsigned char 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8367 ;;      Params:         4       0       0       0       0       0       0
  8368 ;;      Locals:         6       0       0       0       0       0       0
  8369 ;;      Temps:          4       0       0       0       0       0       0
  8370 ;;      Totals:        14       0       0       0       0       0       0
  8371 ;;Total ram usage:       14 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:    2
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_get_temp
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text41
  8382  002992                     __ptext41:
  8383                           	opt callstack 0
  8384  002992                     ___xxtofl:
  8385                           	opt callstack 0
  8386  002992  FFFF               	dw	65535	; assembler added errata NOP
  8387                           
  8388                           ;incstack = 0
  8389                           ;___xxtofl@sign stored from wreg
  8390  002994  6E09               	movwf	___xxtofl@sign,c
  8391  002996  5009               	movf	___xxtofl@sign,w,c
  8392  002998  A4D8               	btfss	status,2,c
  8393  00299A  AE04               	btfss	___xxtofl@val+3,7,c
  8394  00299C  D01A               	goto	l1191
  8395  00299E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8396  0029A2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8397  0029A6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8398  0029AA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8399  0029AE  1E05               	comf	??___xxtofl,f,c
  8400  0029B0  1E06               	comf	??___xxtofl+1,f,c
  8401  0029B2  1E07               	comf	??___xxtofl+2,f,c
  8402  0029B4  1E08               	comf	??___xxtofl+3,f,c
  8403  0029B6  2A05               	incf	??___xxtofl,f,c
  8404  0029B8  0E00               	movlw	0
  8405  0029BA  2206               	addwfc	??___xxtofl+1,f,c
  8406  0029BC  2207               	addwfc	??___xxtofl+2,f,c
  8407  0029BE  2208               	addwfc	??___xxtofl+3,f,c
  8408  0029C0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8409  0029C4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8410  0029C8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8411  0029CC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8412  0029D0  D009               	goto	l4602
  8413  0029D2                     l1191:
  8414  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  8415  0029D4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8416  0029D8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8417  0029DC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8418  0029E0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8419  0029E4                     l4602:
  8420  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  8421  0029E6  5001               	movf	___xxtofl@val,w,c
  8422  0029E8  1002               	iorwf	___xxtofl@val+1,w,c
  8423  0029EA  1003               	iorwf	___xxtofl@val+2,w,c
  8424  0029EC  1004               	iorwf	___xxtofl@val+3,w,c
  8425  0029EE  A4D8               	btfss	status,2,c
  8426  0029F0  D009               	goto	l4608
  8427  0029F2  0E00               	movlw	0
  8428  0029F4  6E01               	movwf	?___xxtofl,c
  8429  0029F6  0E00               	movlw	0
  8430  0029F8  6E02               	movwf	?___xxtofl+1,c
  8431  0029FA  0E00               	movlw	0
  8432  0029FC  6E03               	movwf	?___xxtofl+2,c
  8433  0029FE  0E00               	movlw	0
  8434  002A00  6E04               	movwf	?___xxtofl+3,c
  8435  002A02  D072               	goto	l1194
  8436  002A04                     l4608:
  8437  002A04  FFFF               	dw	65535	; assembler added errata NOP
  8438  002A06  0E96               	movlw	150
  8439  002A08  6E0A               	movwf	___xxtofl@exp,c
  8440  002A0A  D007               	goto	l4612
  8441  002A0C                     l4610:
  8442  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  8443  002A0E  2A0A               	incf	___xxtofl@exp,f,c
  8444  002A10  90D8               	bcf	status,0,c
  8445  002A12  320E               	rrcf	___xxtofl@arg+3,f,c
  8446  002A14  320D               	rrcf	___xxtofl@arg+2,f,c
  8447  002A16  320C               	rrcf	___xxtofl@arg+1,f,c
  8448  002A18  320B               	rrcf	___xxtofl@arg,f,c
  8449  002A1A                     l4612:
  8450  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  8451  002A1C  0E00               	movlw	0
  8452  002A1E  140B               	andwf	___xxtofl@arg,w,c
  8453  002A20  6E05               	movwf	??___xxtofl& (0+255),c
  8454  002A22  0E00               	movlw	0
  8455  002A24  140C               	andwf	___xxtofl@arg+1,w,c
  8456  002A26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8457  002A28  0E00               	movlw	0
  8458  002A2A  140D               	andwf	___xxtofl@arg+2,w,c
  8459  002A2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8460  002A2E  0EFE               	movlw	254
  8461  002A30  140E               	andwf	___xxtofl@arg+3,w,c
  8462  002A32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8463  002A34  5005               	movf	??___xxtofl,w,c
  8464  002A36  1006               	iorwf	??___xxtofl+1,w,c
  8465  002A38  1007               	iorwf	??___xxtofl+2,w,c
  8466  002A3A  1008               	iorwf	??___xxtofl+3,w,c
  8467  002A3C  B4D8               	btfsc	status,2,c
  8468  002A3E  D00E               	goto	l1198
  8469  002A40  D7E5               	goto	l4610
  8470  002A42                     l4614:
  8471  002A42  FFFF               	dw	65535	; assembler added errata NOP
  8472  002A44  2A0A               	incf	___xxtofl@exp,f,c
  8473  002A46  0E01               	movlw	1
  8474  002A48  260B               	addwf	___xxtofl@arg,f,c
  8475  002A4A  0E00               	movlw	0
  8476  002A4C  220C               	addwfc	___xxtofl@arg+1,f,c
  8477  002A4E  220D               	addwfc	___xxtofl@arg+2,f,c
  8478  002A50  220E               	addwfc	___xxtofl@arg+3,f,c
  8479  002A52  90D8               	bcf	status,0,c
  8480  002A54  320E               	rrcf	___xxtofl@arg+3,f,c
  8481  002A56  320D               	rrcf	___xxtofl@arg+2,f,c
  8482  002A58  320C               	rrcf	___xxtofl@arg+1,f,c
  8483  002A5A  320B               	rrcf	___xxtofl@arg,f,c
  8484  002A5C                     l1198:
  8485  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  8486  002A5E  0E00               	movlw	0
  8487  002A60  140B               	andwf	___xxtofl@arg,w,c
  8488  002A62  6E05               	movwf	??___xxtofl& (0+255),c
  8489  002A64  0E00               	movlw	0
  8490  002A66  140C               	andwf	___xxtofl@arg+1,w,c
  8491  002A68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8492  002A6A  0E00               	movlw	0
  8493  002A6C  140D               	andwf	___xxtofl@arg+2,w,c
  8494  002A6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8495  002A70  0EFF               	movlw	255
  8496  002A72  140E               	andwf	___xxtofl@arg+3,w,c
  8497  002A74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8498  002A76  5005               	movf	??___xxtofl,w,c
  8499  002A78  1006               	iorwf	??___xxtofl+1,w,c
  8500  002A7A  1007               	iorwf	??___xxtofl+2,w,c
  8501  002A7C  1008               	iorwf	??___xxtofl+3,w,c
  8502  002A7E  B4D8               	btfsc	status,2,c
  8503  002A80  D008               	goto	l4622
  8504  002A82  D7DF               	goto	l4614
  8505  002A84                     l4620:
  8506  002A84  FFFF               	dw	65535	; assembler added errata NOP
  8507  002A86  060A               	decf	___xxtofl@exp,f,c
  8508  002A88  90D8               	bcf	status,0,c
  8509  002A8A  360B               	rlcf	___xxtofl@arg,f,c
  8510  002A8C  360C               	rlcf	___xxtofl@arg+1,f,c
  8511  002A8E  360D               	rlcf	___xxtofl@arg+2,f,c
  8512  002A90  360E               	rlcf	___xxtofl@arg+3,f,c
  8513  002A92                     l4622:
  8514  002A92  FFFF               	dw	65535	; assembler added errata NOP
  8515  002A94  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8516  002A96  D003               	goto	u5100
  8517  002A98  0E02               	movlw	2
  8518  002A9A  600A               	cpfslt	___xxtofl@exp,c
  8519  002A9C  D7F3               	goto	l4620
  8520  002A9E                     u5100:
  8521  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  8522  002AA0  A00A               	btfss	___xxtofl@exp,0,c
  8523  002AA2  9E0D               	bcf	___xxtofl@arg+2,7,c
  8524  002AA4  90D8               	bcf	status,0,c
  8525  002AA6  320A               	rrcf	___xxtofl@exp,f,c
  8526  002AA8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8527  002AAC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8528  002AAE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8529  002AB0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8530  002AB2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8531  002AB6  6A07               	clrf	??___xxtofl+2,c
  8532  002AB8  6A06               	clrf	??___xxtofl+1,c
  8533  002ABA  6A05               	clrf	??___xxtofl,c
  8534  002ABC  5005               	movf	??___xxtofl,w,c
  8535  002ABE  120B               	iorwf	___xxtofl@arg,f,c
  8536  002AC0  5006               	movf	??___xxtofl+1,w,c
  8537  002AC2  120C               	iorwf	___xxtofl@arg+1,f,c
  8538  002AC4  5007               	movf	??___xxtofl+2,w,c
  8539  002AC6  120D               	iorwf	___xxtofl@arg+2,f,c
  8540  002AC8  5008               	movf	??___xxtofl+3,w,c
  8541  002ACA  120E               	iorwf	___xxtofl@arg+3,f,c
  8542  002ACC  5009               	movf	___xxtofl@sign,w,c
  8543  002ACE  A4D8               	btfss	status,2,c
  8544  002AD0  AE04               	btfss	___xxtofl@val+3,7,c
  8545  002AD2  D001               	goto	l4638
  8546  002AD4  8E0E               	bsf	___xxtofl@arg+3,7,c
  8547  002AD6                     l4638:
  8548  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  8549  002AD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8550  002ADC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8551  002AE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8552  002AE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8553  002AE8                     l1194:
  8554  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  8555  002AEA  0012               	return		;funcret
  8556  002AEC  FFFF               	dw	65535	; errata NOP
  8557  002AEE                     __end_of___xxtofl:
  8558                           	opt callstack 0
  8559                           
  8560 ;; *************** function ___flsub *****************
  8561 ;; Defined at:
  8562 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  b               4   39[COMRAM] unsigned char 
  8565 ;;  a               4   43[COMRAM] unsigned char 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  4   39[COMRAM] unsigned char 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8577 ;;      Params:         8       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0
  8580 ;;      Totals:         8       0       0       0       0       0       0
  8581 ;;Total ram usage:        8 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    3
  8584 ;; This function calls:
  8585 ;;		___fladd
  8586 ;; This function is called by:
  8587 ;;		_get_temp
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text42
  8592  003766                     __ptext42:
  8593                           	opt callstack 0
  8594  003766                     ___flsub:
  8595                           	opt callstack 0
  8596  003766  FFFF               	dw	65535	; assembler added errata NOP
  8597                           
  8598                           ;incstack = 0
  8599  003768  0E00               	movlw	0
  8600  00376A  1A2C               	xorwf	___flsub@a,f,c
  8601  00376C  0E00               	movlw	0
  8602  00376E  1A2D               	xorwf	___flsub@a+1,f,c
  8603  003770  0E00               	movlw	0
  8604  003772  1A2E               	xorwf	___flsub@a+2,f,c
  8605  003774  0E80               	movlw	128
  8606  003776  1A2F               	xorwf	___flsub@a+3,f,c
  8607  003778  C028  F001         	movff	___flsub@b,___fladd@b
  8608  00377C  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8609  003780  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8610  003784  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8611  003788  C02C  F005         	movff	___flsub@a,___fladd@a
  8612  00378C  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8613  003790  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8614  003794  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8615  003798  ECB7  F00D         	call	___fladd	;wreg free
  8616  00379C  C001  F028         	movff	?___fladd,?___flsub
  8617  0037A0  C002  F029         	movff	?___fladd+1,?___flsub+1
  8618  0037A4  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8619  0037A8  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8620  0037AC  0012               	return		;funcret
  8621  0037AE  FFFF               	dw	65535	; errata NOP
  8622  0037B0                     __end_of___flsub:
  8623                           	opt callstack 0
  8624                           
  8625 ;; *************** function ___fladd *****************
  8626 ;; Defined at:
  8627 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  b               4    0[COMRAM] unsigned char 
  8630 ;;  a               4    4[COMRAM] unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  grs             1   15[COMRAM] unsigned char 
  8633 ;;  bexp            1   14[COMRAM] unsigned char 
  8634 ;;  aexp            1   13[COMRAM] unsigned char 
  8635 ;;  signs           1   12[COMRAM] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  4    0[COMRAM] unsigned char 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8645 ;;      Params:         8       0       0       0       0       0       0
  8646 ;;      Locals:         4       0       0       0       0       0       0
  8647 ;;      Temps:          4       0       0       0       0       0       0
  8648 ;;      Totals:        16       0       0       0       0       0       0
  8649 ;;Total ram usage:       16 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:    2
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		___flsub
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text43
  8660  001B6E                     __ptext43:
  8661                           	opt callstack 0
  8662  001B6E                     ___fladd:
  8663                           	opt callstack 0
  8664  001B6E  FFFF               	dw	65535	; assembler added errata NOP
  8665                           
  8666                           ;incstack = 0
  8667  001B70  5004               	movf	___fladd@b+3,w,c
  8668  001B72  0B80               	andlw	128
  8669  001B74  6E0D               	movwf	___fladd@signs,c
  8670  001B76  5004               	movf	___fladd@b+3,w,c
  8671  001B78  2404               	addwf	___fladd@b+3,w,c
  8672  001B7A  6E0F               	movwf	___fladd@bexp,c
  8673  001B7C  BE03               	btfsc	___fladd@b+2,7,c
  8674  001B7E  800F               	bsf	___fladd@bexp,0,c
  8675  001B80  500F               	movf	___fladd@bexp,w,c
  8676  001B82  B4D8               	btfsc	status,2,c
  8677  001B84  D00E               	goto	l4208
  8678  001B86  280F               	incf	___fladd@bexp,w,c
  8679  001B88  A4D8               	btfss	status,2,c
  8680  001B8A  D008               	goto	l4204
  8681  001B8C  0E00               	movlw	0
  8682  001B8E  6E01               	movwf	___fladd@b,c
  8683  001B90  0E00               	movlw	0
  8684  001B92  6E02               	movwf	___fladd@b+1,c
  8685  001B94  0E00               	movlw	0
  8686  001B96  6E03               	movwf	___fladd@b+2,c
  8687  001B98  0E00               	movlw	0
  8688  001B9A  6E04               	movwf	___fladd@b+3,c
  8689  001B9C                     l4204:
  8690  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  8691  001B9E  8E03               	bsf	___fladd@b+2,7,c
  8692  001BA0  D007               	goto	L21
  8693  001BA2                     l4208:
  8694  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  8695  001BA4  0E00               	movlw	0
  8696  001BA6  6E01               	movwf	___fladd@b,c
  8697  001BA8  0E00               	movlw	0
  8698  001BAA  6E02               	movwf	___fladd@b+1,c
  8699  001BAC  0E00               	movlw	0
  8700  001BAE  6E03               	movwf	___fladd@b+2,c
  8701  001BB0                     L21:
  8702  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  8703  001BB2  0E00               	movlw	0
  8704  001BB4  6E04               	movwf	___fladd@b+3,c
  8705  001BB6  5008               	movf	___fladd@a+3,w,c
  8706  001BB8  0B80               	andlw	128
  8707  001BBA  6E0E               	movwf	___fladd@aexp,c
  8708  001BBC  500D               	movf	___fladd@signs,w,c
  8709  001BBE  180E               	xorwf	___fladd@aexp,w,c
  8710  001BC0  A4D8               	btfss	status,2,c
  8711  001BC2  8C0D               	bsf	___fladd@signs,6,c
  8712  001BC4  5008               	movf	___fladd@a+3,w,c
  8713  001BC6  2408               	addwf	___fladd@a+3,w,c
  8714  001BC8  6E0E               	movwf	___fladd@aexp,c
  8715  001BCA  BE07               	btfsc	___fladd@a+2,7,c
  8716  001BCC  800E               	bsf	___fladd@aexp,0,c
  8717  001BCE  500E               	movf	___fladd@aexp,w,c
  8718  001BD0  B4D8               	btfsc	status,2,c
  8719  001BD2  D00E               	goto	l4232
  8720  001BD4  280E               	incf	___fladd@aexp,w,c
  8721  001BD6  A4D8               	btfss	status,2,c
  8722  001BD8  D008               	goto	l4228
  8723  001BDA  0E00               	movlw	0
  8724  001BDC  6E05               	movwf	___fladd@a,c
  8725  001BDE  0E00               	movlw	0
  8726  001BE0  6E06               	movwf	___fladd@a+1,c
  8727  001BE2  0E00               	movlw	0
  8728  001BE4  6E07               	movwf	___fladd@a+2,c
  8729  001BE6  0E00               	movlw	0
  8730  001BE8  6E08               	movwf	___fladd@a+3,c
  8731  001BEA                     l4228:
  8732  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  8733  001BEC  8E07               	bsf	___fladd@a+2,7,c
  8734  001BEE  D007               	goto	L22
  8735  001BF0                     l4232:
  8736  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  8737  001BF2  0E00               	movlw	0
  8738  001BF4  6E05               	movwf	___fladd@a,c
  8739  001BF6  0E00               	movlw	0
  8740  001BF8  6E06               	movwf	___fladd@a+1,c
  8741  001BFA  0E00               	movlw	0
  8742  001BFC  6E07               	movwf	___fladd@a+2,c
  8743  001BFE                     L22:
  8744  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  8745  001C00  0E00               	movlw	0
  8746  001C02  6E08               	movwf	___fladd@a+3,c
  8747  001C04  500F               	movf	___fladd@bexp,w,c
  8748  001C06  5C0E               	subwf	___fladd@aexp,w,c
  8749  001C08  B0D8               	btfsc	status,0,c
  8750  001C0A  D023               	goto	l4270
  8751  001C0C  AC0D               	btfss	___fladd@signs,6,c
  8752  001C0E  D002               	goto	l4240
  8753  001C10  0E80               	movlw	128
  8754  001C12  1A0D               	xorwf	___fladd@signs,f,c
  8755  001C14                     l4240:
  8756  001C14  FFFF               	dw	65535	; assembler added errata NOP
  8757  001C16  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8758  001C1A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8759  001C1E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8760  001C22  C001  F010         	movff	___fladd@b,___fladd@grs
  8761  001C26  C005  F001         	movff	___fladd@a,___fladd@b
  8762  001C2A  C010  F005         	movff	___fladd@grs,___fladd@a
  8763  001C2E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8764  001C32  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8765  001C36  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8766  001C3A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8767  001C3E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8768  001C42  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8769  001C46  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8770  001C4A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8771  001C4E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8772  001C52                     l4270:
  8773  001C52  FFFF               	dw	65535	; assembler added errata NOP
  8774  001C54  0E00               	movlw	0
  8775  001C56  6E10               	movwf	___fladd@grs,c
  8776  001C58  500F               	movf	___fladd@bexp,w,c
  8777  001C5A  C00E  F009         	movff	___fladd@aexp,??___fladd
  8778  001C5E  6A0A               	clrf	(??___fladd+1)& (0+255),c
  8779  001C60  5E09               	subwf	??___fladd,f,c
  8780  001C62  0E00               	movlw	0
  8781  001C64  5A0A               	subwfb	??___fladd+1,f,c
  8782  001C66  BE0A               	btfsc	??___fladd+1,7,c
  8783  001C68  D031               	goto	l1065
  8784  001C6A  500A               	movf	??___fladd+1,w,c
  8785  001C6C  E104               	bnz	u4480
  8786  001C6E  0E1A               	movlw	26
  8787  001C70  5C09               	subwf	??___fladd,w,c
  8788  001C72  A0D8               	btfss	status,0,c
  8789  001C74  D02B               	goto	l1065
  8790  001C76                     u4480:
  8791  001C76  5001               	movf	___fladd@b,w,c
  8792  001C78  1002               	iorwf	___fladd@b+1,w,c
  8793  001C7A  1003               	iorwf	___fladd@b+2,w,c
  8794  001C7C  1004               	iorwf	___fladd@b+3,w,c
  8795  001C7E  B4D8               	btfsc	status,2,c
  8796  001C80  D002               	goto	u4490
  8797  001C82  0E01               	movlw	1
  8798  001C84  D002               	goto	u4500
  8799  001C86                     u4490:
  8800  001C86  FFFF               	dw	65535	; assembler added errata NOP
  8801  001C88  0E00               	movlw	0
  8802  001C8A                     u4500:
  8803  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  8804  001C8C  6E10               	movwf	___fladd@grs,c
  8805  001C8E  0E00               	movlw	0
  8806  001C90  6E01               	movwf	___fladd@b,c
  8807  001C92  0E00               	movlw	0
  8808  001C94  6E02               	movwf	___fladd@b+1,c
  8809  001C96  0E00               	movlw	0
  8810  001C98  6E03               	movwf	___fladd@b+2,c
  8811  001C9A  0E00               	movlw	0
  8812  001C9C  6E04               	movwf	___fladd@b+3,c
  8813  001C9E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8814  001CA2  D019               	goto	u4530
  8815  001CA4                     l1066:
  8816  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  8817  001CA6  A010               	btfss	___fladd@grs,0,c
  8818  001CA8  D005               	goto	l4282
  8819  001CAA  90D8               	bcf	status,0,c
  8820  001CAC  3010               	rrcf	___fladd@grs,w,c
  8821  001CAE  0901               	iorlw	1
  8822  001CB0  6E10               	movwf	___fladd@grs,c
  8823  001CB2  D003               	goto	l4284
  8824  001CB4                     l4282:
  8825  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  8826  001CB6  90D8               	bcf	status,0,c
  8827  001CB8  3210               	rrcf	___fladd@grs,f,c
  8828  001CBA                     l4284:
  8829  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  8830  001CBC  B001               	btfsc	___fladd@b,0,c
  8831  001CBE  8E10               	bsf	___fladd@grs,7,c
  8832  001CC0  3404               	rlcf	___fladd@b+3,w,c
  8833  001CC2  3204               	rrcf	___fladd@b+3,f,c
  8834  001CC4  3203               	rrcf	___fladd@b+2,f,c
  8835  001CC6  3202               	rrcf	___fladd@b+1,f,c
  8836  001CC8  3201               	rrcf	___fladd@b,f,c
  8837  001CCA  2A0F               	incf	___fladd@bexp,f,c
  8838  001CCC                     l1065:
  8839  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  8840  001CCE  500E               	movf	___fladd@aexp,w,c
  8841  001CD0  5C0F               	subwf	___fladd@bexp,w,c
  8842  001CD2  A0D8               	btfss	status,0,c
  8843  001CD4  D7E7               	goto	l1066
  8844  001CD6                     u4530:
  8845  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  8846  001CD8  BC0D               	btfsc	___fladd@signs,6,c
  8847  001CDA  D021               	goto	l4316
  8848  001CDC  500F               	movf	___fladd@bexp,w,c
  8849  001CDE  B4D8               	btfsc	status,2,c
  8850  001CE0  D065               	goto	u4620
  8851  001CE2  5005               	movf	___fladd@a,w,c
  8852  001CE4  2601               	addwf	___fladd@b,f,c
  8853  001CE6  5006               	movf	___fladd@a+1,w,c
  8854  001CE8  2202               	addwfc	___fladd@b+1,f,c
  8855  001CEA  5007               	movf	___fladd@a+2,w,c
  8856  001CEC  2203               	addwfc	___fladd@b+2,f,c
  8857  001CEE  5008               	movf	___fladd@a+3,w,c
  8858  001CF0  2204               	addwfc	___fladd@b+3,f,c
  8859  001CF2  A004               	btfss	___fladd@b+3,0,c
  8860  001CF4  D07B               	goto	u4660
  8861  001CF6  A010               	btfss	___fladd@grs,0,c
  8862  001CF8  D005               	goto	l4306
  8863  001CFA  90D8               	bcf	status,0,c
  8864  001CFC  3010               	rrcf	___fladd@grs,w,c
  8865  001CFE  0901               	iorlw	1
  8866  001D00  6E10               	movwf	___fladd@grs,c
  8867  001D02  D003               	goto	l4308
  8868  001D04                     l4306:
  8869  001D04  FFFF               	dw	65535	; assembler added errata NOP
  8870  001D06  90D8               	bcf	status,0,c
  8871  001D08  3210               	rrcf	___fladd@grs,f,c
  8872  001D0A                     l4308:
  8873  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  8874  001D0C  B001               	btfsc	___fladd@b,0,c
  8875  001D0E  8E10               	bsf	___fladd@grs,7,c
  8876  001D10  3404               	rlcf	___fladd@b+3,w,c
  8877  001D12  3204               	rrcf	___fladd@b+3,f,c
  8878  001D14  3203               	rrcf	___fladd@b+2,f,c
  8879  001D16  3202               	rrcf	___fladd@b+1,f,c
  8880  001D18  3201               	rrcf	___fladd@b,f,c
  8881  001D1A  2A0F               	incf	___fladd@bexp,f,c
  8882  001D1C  D067               	goto	u4660
  8883  001D1E                     l4316:
  8884  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  8885  001D20  5005               	movf	___fladd@a,w,c
  8886  001D22  5C01               	subwf	___fladd@b,w,c
  8887  001D24  5006               	movf	___fladd@a+1,w,c
  8888  001D26  5802               	subwfb	___fladd@b+1,w,c
  8889  001D28  5007               	movf	___fladd@a+2,w,c
  8890  001D2A  5803               	subwfb	___fladd@b+2,w,c
  8891  001D2C  5004               	movf	___fladd@b+3,w,c
  8892  001D2E  0A80               	xorlw	128
  8893  001D30  6E09               	movwf	??___fladd& (0+255),c
  8894  001D32  5008               	movf	___fladd@a+3,w,c
  8895  001D34  0A80               	xorlw	128
  8896  001D36  5809               	subwfb	??___fladd& (0+255),w,c
  8897  001D38  B0D8               	btfsc	status,0,c
  8898  001D3A  D025               	goto	l4326
  8899  001D3C  5001               	movf	___fladd@b,w,c
  8900  001D3E  5C05               	subwf	___fladd@a,w,c
  8901  001D40  6E09               	movwf	??___fladd& (0+255),c
  8902  001D42  5002               	movf	___fladd@b+1,w,c
  8903  001D44  5806               	subwfb	___fladd@a+1,w,c
  8904  001D46  6E0A               	movwf	(??___fladd+1)& (0+255),c
  8905  001D48  5003               	movf	___fladd@b+2,w,c
  8906  001D4A  5807               	subwfb	___fladd@a+2,w,c
  8907  001D4C  6E0B               	movwf	(??___fladd+2)& (0+255),c
  8908  001D4E  5004               	movf	___fladd@b+3,w,c
  8909  001D50  5808               	subwfb	___fladd@a+3,w,c
  8910  001D52  6E0C               	movwf	(??___fladd+3)& (0+255),c
  8911  001D54  0EFF               	movlw	255
  8912  001D56  2409               	addwf	??___fladd,w,c
  8913  001D58  6E01               	movwf	___fladd@b,c
  8914  001D5A  0EFF               	movlw	255
  8915  001D5C  200A               	addwfc	??___fladd+1,w,c
  8916  001D5E  6E02               	movwf	___fladd@b+1,c
  8917  001D60  0EFF               	movlw	255
  8918  001D62  200B               	addwfc	??___fladd+2,w,c
  8919  001D64  6E03               	movwf	___fladd@b+2,c
  8920  001D66  0EFF               	movlw	255
  8921  001D68  200C               	addwfc	??___fladd+3,w,c
  8922  001D6A  6E04               	movwf	___fladd@b+3,c
  8923  001D6C  0E80               	movlw	128
  8924  001D6E  1A0D               	xorwf	___fladd@signs,f,c
  8925  001D70  6C10               	negf	___fladd@grs,c
  8926  001D72  5010               	movf	___fladd@grs,w,c
  8927  001D74  A4D8               	btfss	status,2,c
  8928  001D76  D010               	goto	l1081
  8929  001D78  0E01               	movlw	1
  8930  001D7A  2601               	addwf	___fladd@b,f,c
  8931  001D7C  0E00               	movlw	0
  8932  001D7E  2202               	addwfc	___fladd@b+1,f,c
  8933  001D80  2203               	addwfc	___fladd@b+2,f,c
  8934  001D82  2204               	addwfc	___fladd@b+3,f,c
  8935  001D84  D009               	goto	l1081
  8936  001D86                     l4326:
  8937  001D86  FFFF               	dw	65535	; assembler added errata NOP
  8938  001D88  5005               	movf	___fladd@a,w,c
  8939  001D8A  5E01               	subwf	___fladd@b,f,c
  8940  001D8C  5006               	movf	___fladd@a+1,w,c
  8941  001D8E  5A02               	subwfb	___fladd@b+1,f,c
  8942  001D90  5007               	movf	___fladd@a+2,w,c
  8943  001D92  5A03               	subwfb	___fladd@b+2,f,c
  8944  001D94  5008               	movf	___fladd@a+3,w,c
  8945  001D96  5A04               	subwfb	___fladd@b+3,f,c
  8946  001D98                     l1081:
  8947  001D98  FFFF               	dw	65535	; assembler added errata NOP
  8948  001D9A  5001               	movf	___fladd@b,w,c
  8949  001D9C  1002               	iorwf	___fladd@b+1,w,c
  8950  001D9E  1003               	iorwf	___fladd@b+2,w,c
  8951  001DA0  1004               	iorwf	___fladd@b+3,w,c
  8952  001DA2  A4D8               	btfss	status,2,c
  8953  001DA4  D020               	goto	l4350
  8954  001DA6  5010               	movf	___fladd@grs,w,c
  8955  001DA8  A4D8               	btfss	status,2,c
  8956  001DAA  D01D               	goto	l4350
  8957  001DAC                     u4620:
  8958  001DAC  FFFF               	dw	65535	; assembler added errata NOP
  8959  001DAE  0E00               	movlw	0
  8960  001DB0  6E01               	movwf	?___fladd,c
  8961  001DB2  0E00               	movlw	0
  8962  001DB4  6E02               	movwf	?___fladd+1,c
  8963  001DB6  0E00               	movlw	0
  8964  001DB8  6E03               	movwf	?___fladd+2,c
  8965  001DBA  0E00               	movlw	0
  8966  001DBC  6E04               	movwf	?___fladd+3,c
  8967  001DBE  D076               	goto	l1073
  8968  001DC0                     l4334:
  8969  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  8970  001DC2  90D8               	bcf	status,0,c
  8971  001DC4  3601               	rlcf	___fladd@b,f,c
  8972  001DC6  3602               	rlcf	___fladd@b+1,f,c
  8973  001DC8  3603               	rlcf	___fladd@b+2,f,c
  8974  001DCA  3604               	rlcf	___fladd@b+3,f,c
  8975  001DCC  BE10               	btfsc	___fladd@grs,7,c
  8976  001DCE  8001               	bsf	___fladd@b,0,c
  8977  001DD0  A010               	btfss	___fladd@grs,0,c
  8978  001DD2  D002               	goto	l4344
  8979  001DD4  80D8               	bsf	status,0,c
  8980  001DD6  D002               	goto	L23
  8981  001DD8                     l4344:
  8982  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  8983  001DDA  90D8               	bcf	status,0,c
  8984  001DDC                     L23:
  8985  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  8986  001DDE  3610               	rlcf	___fladd@grs,f,c
  8987  001DE0  500F               	movf	___fladd@bexp,w,c
  8988  001DE2  A4D8               	btfss	status,2,c
  8989  001DE4  060F               	decf	___fladd@bexp,f,c
  8990  001DE6                     l4350:
  8991  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8992  001DE8  AE03               	btfss	___fladd@b+2,7,c
  8993  001DEA  D7EA               	goto	l4334
  8994  001DEC                     u4660:
  8995  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  8996  001DEE  0E00               	movlw	0
  8997  001DF0  6E0E               	movwf	___fladd@aexp,c
  8998  001DF2  AE10               	btfss	___fladd@grs,7,c
  8999  001DF4  D00D               	goto	l1090
  9000  001DF6  C010  F009         	movff	___fladd@grs,??___fladd
  9001  001DFA  0E7F               	movlw	127
  9002  001DFC  1609               	andwf	??___fladd,f,c
  9003  001DFE  B4D8               	btfsc	status,2,c
  9004  001E00  D004               	goto	l1091
  9005  001E02                     u4680:
  9006  001E02  FFFF               	dw	65535	; assembler added errata NOP
  9007  001E04  0E01               	movlw	1
  9008  001E06  6E0E               	movwf	___fladd@aexp,c
  9009  001E08  D003               	goto	l1090
  9010  001E0A                     l1091:
  9011  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  9012  001E0C  B001               	btfsc	___fladd@b,0,c
  9013  001E0E  D7F9               	goto	u4680
  9014  001E10                     l1090:
  9015  001E10  FFFF               	dw	65535	; assembler added errata NOP
  9016  001E12  500E               	movf	___fladd@aexp,w,c
  9017  001E14  B4D8               	btfsc	status,2,c
  9018  001E16  D020               	goto	l4370
  9019  001E18  0E01               	movlw	1
  9020  001E1A  2601               	addwf	___fladd@b,f,c
  9021  001E1C  0E00               	movlw	0
  9022  001E1E  2202               	addwfc	___fladd@b+1,f,c
  9023  001E20  2203               	addwfc	___fladd@b+2,f,c
  9024  001E22  2204               	addwfc	___fladd@b+3,f,c
  9025  001E24  A004               	btfss	___fladd@b+3,0,c
  9026  001E26  D018               	goto	l4370
  9027  001E28  C001  F009         	movff	___fladd@b,??___fladd
  9028  001E2C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9029  001E30  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9030  001E34  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9031  001E38  340C               	rlcf	??___fladd+3,w,c
  9032  001E3A  320C               	rrcf	??___fladd+3,f,c
  9033  001E3C  320B               	rrcf	??___fladd+2,f,c
  9034  001E3E  320A               	rrcf	??___fladd+1,f,c
  9035  001E40  3209               	rrcf	??___fladd,f,c
  9036  001E42  C009  F001         	movff	??___fladd,___fladd@b
  9037  001E46  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9038  001E4A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9039  001E4E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9040  001E52  280F               	incf	___fladd@bexp,w,c
  9041  001E54  A4D8               	btfss	status,2,c
  9042  001E56  2A0F               	incf	___fladd@bexp,f,c
  9043  001E58                     l4370:
  9044  001E58  FFFF               	dw	65535	; assembler added errata NOP
  9045  001E5A  280F               	incf	___fladd@bexp,w,c
  9046  001E5C  B4D8               	btfsc	status,2,c
  9047  001E5E  D003               	goto	u4740
  9048  001E60  500F               	movf	___fladd@bexp,w,c
  9049  001E62  A4D8               	btfss	status,2,c
  9050  001E64  D00E               	goto	l4378
  9051  001E66                     u4740:
  9052  001E66  FFFF               	dw	65535	; assembler added errata NOP
  9053  001E68  0E00               	movlw	0
  9054  001E6A  6E01               	movwf	___fladd@b,c
  9055  001E6C  0E00               	movlw	0
  9056  001E6E  6E02               	movwf	___fladd@b+1,c
  9057  001E70  0E00               	movlw	0
  9058  001E72  6E03               	movwf	___fladd@b+2,c
  9059  001E74  0E00               	movlw	0
  9060  001E76  6E04               	movwf	___fladd@b+3,c
  9061  001E78  500F               	movf	___fladd@bexp,w,c
  9062  001E7A  A4D8               	btfss	status,2,c
  9063  001E7C  D002               	goto	l4378
  9064  001E7E  0E00               	movlw	0
  9065  001E80  6E0D               	movwf	___fladd@signs,c
  9066  001E82                     l4378:
  9067  001E82  FFFF               	dw	65535	; assembler added errata NOP
  9068  001E84  A00F               	btfss	___fladd@bexp,0,c
  9069  001E86  D002               	goto	l4382
  9070  001E88  8E03               	bsf	___fladd@b+2,7,c
  9071  001E8A  D002               	goto	l4384
  9072  001E8C                     l4382:
  9073  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  9074  001E8E  9E03               	bcf	___fladd@b+2,7,c
  9075  001E90                     l4384:
  9076  001E90  FFFF               	dw	65535	; assembler added errata NOP
  9077  001E92  90D8               	bcf	status,0,c
  9078  001E94  300F               	rrcf	___fladd@bexp,w,c
  9079  001E96  6E04               	movwf	___fladd@b+3,c
  9080  001E98  BE0D               	btfsc	___fladd@signs,7,c
  9081  001E9A  8E04               	bsf	___fladd@b+3,7,c
  9082  001E9C  C001  F001         	movff	___fladd@b,?___fladd
  9083  001EA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9084  001EA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9085  001EA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9086  001EAC                     l1073:
  9087  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  9088  001EAE  0012               	return		;funcret
  9089  001EB0  FFFF               	dw	65535	; errata NOP
  9090  001EB2                     __end_of___fladd:
  9091                           	opt callstack 0
  9092                           
  9093 ;; *************** function ___flmul *****************
  9094 ;; Defined at:
  9095 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  b               4   14[COMRAM] unsigned char 
  9098 ;;  a               4   18[COMRAM] unsigned char 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  prod            4   33[COMRAM] struct .
  9101 ;;  grs             4   27[COMRAM] unsigned long 
  9102 ;;  temp            2   37[COMRAM] struct .
  9103 ;;  bexp            1   32[COMRAM] unsigned char 
  9104 ;;  aexp            1   31[COMRAM] unsigned char 
  9105 ;;  sign            1   26[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  4   14[COMRAM] unsigned char 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, prodl, prodh
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9115 ;;      Params:         8       0       0       0       0       0       0
  9116 ;;      Locals:        13       0       0       0       0       0       0
  9117 ;;      Temps:          4       0       0       0       0       0       0
  9118 ;;      Totals:        25       0       0       0       0       0       0
  9119 ;;Total ram usage:       25 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    2
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_get_temp
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text44
  9130  0017EC                     __ptext44:
  9131                           	opt callstack 0
  9132  0017EC                     ___flmul:
  9133                           	opt callstack 0
  9134  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  9135                           
  9136                           ;incstack = 0
  9137  0017EE  5012               	movf	___flmul@b+3,w,c
  9138  0017F0  0B80               	andlw	128
  9139  0017F2  6E1B               	movwf	___flmul@sign,c
  9140  0017F4  5012               	movf	___flmul@b+3,w,c
  9141  0017F6  2412               	addwf	___flmul@b+3,w,c
  9142  0017F8  6E21               	movwf	___flmul@bexp,c
  9143  0017FA  BE11               	btfsc	___flmul@b+2,7,c
  9144  0017FC  8021               	bsf	___flmul@bexp,0,c
  9145  0017FE  5021               	movf	___flmul@bexp,w,c
  9146  001800  B4D8               	btfsc	status,2,c
  9147  001802  D00E               	goto	l4474
  9148  001804  2821               	incf	___flmul@bexp,w,c
  9149  001806  A4D8               	btfss	status,2,c
  9150  001808  D008               	goto	l4472
  9151  00180A  0E00               	movlw	0
  9152  00180C  6E0F               	movwf	___flmul@b,c
  9153  00180E  0E00               	movlw	0
  9154  001810  6E10               	movwf	___flmul@b+1,c
  9155  001812  0E00               	movlw	0
  9156  001814  6E11               	movwf	___flmul@b+2,c
  9157  001816  0E00               	movlw	0
  9158  001818  6E12               	movwf	___flmul@b+3,c
  9159  00181A                     l4472:
  9160  00181A  FFFF               	dw	65535	; assembler added errata NOP
  9161  00181C  8E11               	bsf	___flmul@b+2,7,c
  9162  00181E  D009               	goto	l4476
  9163  001820                     l4474:
  9164  001820  FFFF               	dw	65535	; assembler added errata NOP
  9165  001822  0E00               	movlw	0
  9166  001824  6E0F               	movwf	___flmul@b,c
  9167  001826  0E00               	movlw	0
  9168  001828  6E10               	movwf	___flmul@b+1,c
  9169  00182A  0E00               	movlw	0
  9170  00182C  6E11               	movwf	___flmul@b+2,c
  9171  00182E  0E00               	movlw	0
  9172  001830  6E12               	movwf	___flmul@b+3,c
  9173  001832                     l4476:
  9174  001832  FFFF               	dw	65535	; assembler added errata NOP
  9175  001834  5016               	movf	___flmul@a+3,w,c
  9176  001836  0B80               	andlw	128
  9177  001838  1A1B               	xorwf	___flmul@sign,f,c
  9178  00183A  5016               	movf	___flmul@a+3,w,c
  9179  00183C  2416               	addwf	___flmul@a+3,w,c
  9180  00183E  6E20               	movwf	___flmul@aexp,c
  9181  001840  BE15               	btfsc	___flmul@a+2,7,c
  9182  001842  8020               	bsf	___flmul@aexp,0,c
  9183  001844  5020               	movf	___flmul@aexp,w,c
  9184  001846  B4D8               	btfsc	status,2,c
  9185  001848  D00E               	goto	l4492
  9186  00184A  2820               	incf	___flmul@aexp,w,c
  9187  00184C  A4D8               	btfss	status,2,c
  9188  00184E  D008               	goto	l4490
  9189  001850  0E00               	movlw	0
  9190  001852  6E13               	movwf	___flmul@a,c
  9191  001854  0E00               	movlw	0
  9192  001856  6E14               	movwf	___flmul@a+1,c
  9193  001858  0E00               	movlw	0
  9194  00185A  6E15               	movwf	___flmul@a+2,c
  9195  00185C  0E00               	movlw	0
  9196  00185E  6E16               	movwf	___flmul@a+3,c
  9197  001860                     l4490:
  9198  001860  FFFF               	dw	65535	; assembler added errata NOP
  9199  001862  8E15               	bsf	___flmul@a+2,7,c
  9200  001864  D009               	goto	l1150
  9201  001866                     l4492:
  9202  001866  FFFF               	dw	65535	; assembler added errata NOP
  9203  001868  0E00               	movlw	0
  9204  00186A  6E13               	movwf	___flmul@a,c
  9205  00186C  0E00               	movlw	0
  9206  00186E  6E14               	movwf	___flmul@a+1,c
  9207  001870  0E00               	movlw	0
  9208  001872  6E15               	movwf	___flmul@a+2,c
  9209  001874  0E00               	movlw	0
  9210  001876  6E16               	movwf	___flmul@a+3,c
  9211  001878                     l1150:
  9212  001878  FFFF               	dw	65535	; assembler added errata NOP
  9213  00187A  5020               	movf	___flmul@aexp,w,c
  9214  00187C  B4D8               	btfsc	status,2,c
  9215  00187E  D003               	goto	u4920
  9216  001880  5021               	movf	___flmul@bexp,w,c
  9217  001882  A4D8               	btfss	status,2,c
  9218  001884  D00A               	goto	l4500
  9219  001886                     u4920:
  9220  001886  FFFF               	dw	65535	; assembler added errata NOP
  9221  001888  0E00               	movlw	0
  9222  00188A  6E0F               	movwf	?___flmul,c
  9223  00188C  0E00               	movlw	0
  9224  00188E  6E10               	movwf	?___flmul+1,c
  9225  001890  0E00               	movlw	0
  9226  001892  6E11               	movwf	?___flmul+2,c
  9227  001894  0E00               	movlw	0
  9228  001896  6E12               	movwf	?___flmul+3,c
  9229  001898  D167               	goto	l1154
  9230  00189A                     l4500:
  9231  00189A  FFFF               	dw	65535	; assembler added errata NOP
  9232  00189C  5015               	movf	___flmul@a+2,w,c
  9233  00189E  020F               	mulwf	___flmul@b,c
  9234  0018A0  CFF3 F026          	movff	prodl,___flmul@temp
  9235  0018A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9236  0018A8  5026               	movf	___flmul@temp,w,c
  9237  0018AA  6E1C               	movwf	___flmul@grs,c
  9238  0018AC  6A1D               	clrf	___flmul@grs+1,c
  9239  0018AE  6A1E               	clrf	___flmul@grs+2,c
  9240  0018B0  6A1F               	clrf	___flmul@grs+3,c
  9241  0018B2  5027               	movf	___flmul@temp+1,w,c
  9242  0018B4  6E22               	movwf	___flmul@prod,c
  9243  0018B6  6A23               	clrf	___flmul@prod+1,c
  9244  0018B8  6A24               	clrf	___flmul@prod+2,c
  9245  0018BA  6A25               	clrf	___flmul@prod+3,c
  9246  0018BC  5014               	movf	___flmul@a+1,w,c
  9247  0018BE  0210               	mulwf	___flmul@b+1,c
  9248  0018C0  CFF3 F026          	movff	prodl,___flmul@temp
  9249  0018C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9250  0018C8  5026               	movf	___flmul@temp,w,c
  9251  0018CA  261C               	addwf	___flmul@grs,f,c
  9252  0018CC  0E00               	movlw	0
  9253  0018CE  221D               	addwfc	___flmul@grs+1,f,c
  9254  0018D0  221E               	addwfc	___flmul@grs+2,f,c
  9255  0018D2  221F               	addwfc	___flmul@grs+3,f,c
  9256  0018D4  5027               	movf	___flmul@temp+1,w,c
  9257  0018D6  2622               	addwf	___flmul@prod,f,c
  9258  0018D8  0E00               	movlw	0
  9259  0018DA  2223               	addwfc	___flmul@prod+1,f,c
  9260  0018DC  2224               	addwfc	___flmul@prod+2,f,c
  9261  0018DE  2225               	addwfc	___flmul@prod+3,f,c
  9262  0018E0  5013               	movf	___flmul@a,w,c
  9263  0018E2  0211               	mulwf	___flmul@b+2,c
  9264  0018E4  CFF3 F026          	movff	prodl,___flmul@temp
  9265  0018E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  9266  0018EC  5026               	movf	___flmul@temp,w,c
  9267  0018EE  261C               	addwf	___flmul@grs,f,c
  9268  0018F0  0E00               	movlw	0
  9269  0018F2  221D               	addwfc	___flmul@grs+1,f,c
  9270  0018F4  221E               	addwfc	___flmul@grs+2,f,c
  9271  0018F6  221F               	addwfc	___flmul@grs+3,f,c
  9272  0018F8  5027               	movf	___flmul@temp+1,w,c
  9273  0018FA  2622               	addwf	___flmul@prod,f,c
  9274  0018FC  0E00               	movlw	0
  9275  0018FE  2223               	addwfc	___flmul@prod+1,f,c
  9276  001900  2224               	addwfc	___flmul@prod+2,f,c
  9277  001902  2225               	addwfc	___flmul@prod+3,f,c
  9278  001904  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9279  001908  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9280  00190C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9281  001910  6A1C               	clrf	___flmul@grs,c
  9282  001912  5013               	movf	___flmul@a,w,c
  9283  001914  0210               	mulwf	___flmul@b+1,c
  9284  001916  CFF3 F026          	movff	prodl,___flmul@temp
  9285  00191A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9286  00191E  5026               	movf	___flmul@temp,w,c
  9287  001920  261C               	addwf	___flmul@grs,f,c
  9288  001922  5027               	movf	___flmul@temp+1,w,c
  9289  001924  221D               	addwfc	___flmul@grs+1,f,c
  9290  001926  0E00               	movlw	0
  9291  001928  221E               	addwfc	___flmul@grs+2,f,c
  9292  00192A  0E00               	movlw	0
  9293  00192C  221F               	addwfc	___flmul@grs+3,f,c
  9294  00192E  5014               	movf	___flmul@a+1,w,c
  9295  001930  020F               	mulwf	___flmul@b,c
  9296  001932  CFF3 F026          	movff	prodl,___flmul@temp
  9297  001936  CFF4 F027          	movff	prodh,___flmul@temp+1
  9298  00193A  5026               	movf	___flmul@temp,w,c
  9299  00193C  261C               	addwf	___flmul@grs,f,c
  9300  00193E  5027               	movf	___flmul@temp+1,w,c
  9301  001940  221D               	addwfc	___flmul@grs+1,f,c
  9302  001942  0E00               	movlw	0
  9303  001944  221E               	addwfc	___flmul@grs+2,f,c
  9304  001946  0E00               	movlw	0
  9305  001948  221F               	addwfc	___flmul@grs+3,f,c
  9306  00194A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9307  00194E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9308  001952  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9309  001956  6A1C               	clrf	___flmul@grs,c
  9310  001958  5013               	movf	___flmul@a,w,c
  9311  00195A  020F               	mulwf	___flmul@b,c
  9312  00195C  CFF3 F026          	movff	prodl,___flmul@temp
  9313  001960  CFF4 F027          	movff	prodh,___flmul@temp+1
  9314  001964  5026               	movf	___flmul@temp,w,c
  9315  001966  261C               	addwf	___flmul@grs,f,c
  9316  001968  5027               	movf	___flmul@temp+1,w,c
  9317  00196A  221D               	addwfc	___flmul@grs+1,f,c
  9318  00196C  0E00               	movlw	0
  9319  00196E  221E               	addwfc	___flmul@grs+2,f,c
  9320  001970  0E00               	movlw	0
  9321  001972  221F               	addwfc	___flmul@grs+3,f,c
  9322  001974  5015               	movf	___flmul@a+2,w,c
  9323  001976  0210               	mulwf	___flmul@b+1,c
  9324  001978  CFF3 F026          	movff	prodl,___flmul@temp
  9325  00197C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9326  001980  5026               	movf	___flmul@temp,w,c
  9327  001982  2622               	addwf	___flmul@prod,f,c
  9328  001984  5027               	movf	___flmul@temp+1,w,c
  9329  001986  2223               	addwfc	___flmul@prod+1,f,c
  9330  001988  0E00               	movlw	0
  9331  00198A  2224               	addwfc	___flmul@prod+2,f,c
  9332  00198C  0E00               	movlw	0
  9333  00198E  2225               	addwfc	___flmul@prod+3,f,c
  9334  001990  5014               	movf	___flmul@a+1,w,c
  9335  001992  0211               	mulwf	___flmul@b+2,c
  9336  001994  CFF3 F026          	movff	prodl,___flmul@temp
  9337  001998  CFF4 F027          	movff	prodh,___flmul@temp+1
  9338  00199C  5026               	movf	___flmul@temp,w,c
  9339  00199E  2622               	addwf	___flmul@prod,f,c
  9340  0019A0  5027               	movf	___flmul@temp+1,w,c
  9341  0019A2  2223               	addwfc	___flmul@prod+1,f,c
  9342  0019A4  0E00               	movlw	0
  9343  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  9344  0019A8  0E00               	movlw	0
  9345  0019AA  2225               	addwfc	___flmul@prod+3,f,c
  9346  0019AC  5015               	movf	___flmul@a+2,w,c
  9347  0019AE  0211               	mulwf	___flmul@b+2,c
  9348  0019B0  CFF3 F026          	movff	prodl,___flmul@temp
  9349  0019B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9350  0019B8  5026               	movf	___flmul@temp,w,c
  9351  0019BA  6E17               	movwf	??___flmul& (0+255),c
  9352  0019BC  5027               	movf	___flmul@temp+1,w,c
  9353  0019BE  6E18               	movwf	(??___flmul+1)& (0+255),c
  9354  0019C0  6A19               	clrf	(??___flmul+2)& (0+255),c
  9355  0019C2  6A1A               	clrf	(??___flmul+3)& (0+255),c
  9356  0019C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9357  0019C8  C018  F019         	movff	??___flmul+1,??___flmul+2
  9358  0019CC  C017  F018         	movff	??___flmul,??___flmul+1
  9359  0019D0  6A17               	clrf	??___flmul,c
  9360  0019D2  5017               	movf	??___flmul,w,c
  9361  0019D4  2622               	addwf	___flmul@prod,f,c
  9362  0019D6  5018               	movf	??___flmul+1,w,c
  9363  0019D8  2223               	addwfc	___flmul@prod+1,f,c
  9364  0019DA  5019               	movf	??___flmul+2,w,c
  9365  0019DC  2224               	addwfc	___flmul@prod+2,f,c
  9366  0019DE  501A               	movf	??___flmul+3,w,c
  9367  0019E0  2225               	addwfc	___flmul@prod+3,f,c
  9368  0019E2  C01C  F017         	movff	___flmul@grs,??___flmul
  9369  0019E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9370  0019EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9371  0019EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9372  0019F2  0E19               	movlw	25
  9373  0019F4  D006               	goto	u4930
  9374  0019F6                     u4935:
  9375  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  9376  0019F8  90D8               	bcf	status,0,c
  9377  0019FA  321A               	rrcf	??___flmul+3,f,c
  9378  0019FC  3219               	rrcf	??___flmul+2,f,c
  9379  0019FE  3218               	rrcf	??___flmul+1,f,c
  9380  001A00  3217               	rrcf	??___flmul,f,c
  9381  001A02                     u4930:
  9382  001A02  FFFF               	dw	65535	; assembler added errata NOP
  9383  001A04  2EE8               	decfsz	wreg,f,c
  9384  001A06  D7F7               	goto	u4935
  9385  001A08  5017               	movf	??___flmul,w,c
  9386  001A0A  2622               	addwf	___flmul@prod,f,c
  9387  001A0C  5018               	movf	??___flmul+1,w,c
  9388  001A0E  2223               	addwfc	___flmul@prod+1,f,c
  9389  001A10  5019               	movf	??___flmul+2,w,c
  9390  001A12  2224               	addwfc	___flmul@prod+2,f,c
  9391  001A14  501A               	movf	??___flmul+3,w,c
  9392  001A16  2225               	addwfc	___flmul@prod+3,f,c
  9393  001A18  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9394  001A1C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9395  001A20  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9396  001A24  6A1C               	clrf	___flmul@grs,c
  9397  001A26  5020               	movf	___flmul@aexp,w,c
  9398  001A28  C021  F017         	movff	___flmul@bexp,??___flmul
  9399  001A2C  6A18               	clrf	(??___flmul+1)& (0+255),c
  9400  001A2E  2617               	addwf	??___flmul,f,c
  9401  001A30  0E00               	movlw	0
  9402  001A32  2218               	addwfc	??___flmul+1,f,c
  9403  001A34  0E82               	movlw	130
  9404  001A36  2417               	addwf	??___flmul,w,c
  9405  001A38  6E26               	movwf	___flmul@temp,c
  9406  001A3A  0EFF               	movlw	255
  9407  001A3C  2018               	addwfc	??___flmul+1,w,c
  9408  001A3E  6E27               	movwf	___flmul@temp+1,c
  9409  001A40  D010               	goto	l4548
  9410  001A42                     l4542:
  9411  001A42  FFFF               	dw	65535	; assembler added errata NOP
  9412  001A44  90D8               	bcf	status,0,c
  9413  001A46  3622               	rlcf	___flmul@prod,f,c
  9414  001A48  3623               	rlcf	___flmul@prod+1,f,c
  9415  001A4A  3624               	rlcf	___flmul@prod+2,f,c
  9416  001A4C  3625               	rlcf	___flmul@prod+3,f,c
  9417  001A4E  BE1F               	btfsc	___flmul@grs+3,7,c
  9418  001A50  8022               	bsf	___flmul@prod,0,c
  9419  001A52  90D8               	bcf	status,0,c
  9420  001A54  361C               	rlcf	___flmul@grs,f,c
  9421  001A56  361D               	rlcf	___flmul@grs+1,f,c
  9422  001A58  361E               	rlcf	___flmul@grs+2,f,c
  9423  001A5A  361F               	rlcf	___flmul@grs+3,f,c
  9424  001A5C  0626               	decf	___flmul@temp,f,c
  9425  001A5E  A0D8               	btfss	status,0,c
  9426  001A60  0627               	decf	___flmul@temp+1,f,c
  9427  001A62                     l4548:
  9428  001A62  FFFF               	dw	65535	; assembler added errata NOP
  9429  001A64  AE24               	btfss	___flmul@prod+2,7,c
  9430  001A66  D7ED               	goto	l4542
  9431  001A68  0E00               	movlw	0
  9432  001A6A  6E20               	movwf	___flmul@aexp,c
  9433  001A6C  AE1F               	btfss	___flmul@grs+3,7,c
  9434  001A6E  D019               	goto	l1159
  9435  001A70  0EFF               	movlw	255
  9436  001A72  141C               	andwf	___flmul@grs,w,c
  9437  001A74  6E17               	movwf	??___flmul& (0+255),c
  9438  001A76  0EFF               	movlw	255
  9439  001A78  141D               	andwf	___flmul@grs+1,w,c
  9440  001A7A  6E18               	movwf	(??___flmul+1)& (0+255),c
  9441  001A7C  0EFF               	movlw	255
  9442  001A7E  141E               	andwf	___flmul@grs+2,w,c
  9443  001A80  6E19               	movwf	(??___flmul+2)& (0+255),c
  9444  001A82  0E7F               	movlw	127
  9445  001A84  141F               	andwf	___flmul@grs+3,w,c
  9446  001A86  6E1A               	movwf	(??___flmul+3)& (0+255),c
  9447  001A88  5017               	movf	??___flmul,w,c
  9448  001A8A  1018               	iorwf	??___flmul+1,w,c
  9449  001A8C  1019               	iorwf	??___flmul+2,w,c
  9450  001A8E  101A               	iorwf	??___flmul+3,w,c
  9451  001A90  B4D8               	btfsc	status,2,c
  9452  001A92  D004               	goto	l1160
  9453  001A94                     u4970:
  9454  001A94  FFFF               	dw	65535	; assembler added errata NOP
  9455  001A96  0E01               	movlw	1
  9456  001A98  6E20               	movwf	___flmul@aexp,c
  9457  001A9A  D003               	goto	l1159
  9458  001A9C                     l1160:
  9459  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9460  001A9E  B022               	btfsc	___flmul@prod,0,c
  9461  001AA0  D7F9               	goto	u4970
  9462  001AA2                     l1159:
  9463  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9464  001AA4  5020               	movf	___flmul@aexp,w,c
  9465  001AA6  B4D8               	btfsc	status,2,c
  9466  001AA8  D01F               	goto	l4568
  9467  001AAA  0E01               	movlw	1
  9468  001AAC  2622               	addwf	___flmul@prod,f,c
  9469  001AAE  0E00               	movlw	0
  9470  001AB0  2223               	addwfc	___flmul@prod+1,f,c
  9471  001AB2  2224               	addwfc	___flmul@prod+2,f,c
  9472  001AB4  2225               	addwfc	___flmul@prod+3,f,c
  9473  001AB6  A025               	btfss	___flmul@prod+3,0,c
  9474  001AB8  D017               	goto	l4568
  9475  001ABA  C022  F017         	movff	___flmul@prod,??___flmul
  9476  001ABE  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9477  001AC2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9478  001AC6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9479  001ACA  341A               	rlcf	??___flmul+3,w,c
  9480  001ACC  321A               	rrcf	??___flmul+3,f,c
  9481  001ACE  3219               	rrcf	??___flmul+2,f,c
  9482  001AD0  3218               	rrcf	??___flmul+1,f,c
  9483  001AD2  3217               	rrcf	??___flmul,f,c
  9484  001AD4  C017  F022         	movff	??___flmul,___flmul@prod
  9485  001AD8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9486  001ADC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9487  001AE0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9488  001AE4  4A26               	infsnz	___flmul@temp,f,c
  9489  001AE6  2A27               	incf	___flmul@temp+1,f,c
  9490  001AE8                     l4568:
  9491  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  9492  001AEA  BE27               	btfsc	___flmul@temp+1,7,c
  9493  001AEC  D00D               	goto	l4572
  9494  001AEE  5027               	movf	___flmul@temp+1,w,c
  9495  001AF0  E103               	bnz	u5010
  9496  001AF2  2826               	incf	___flmul@temp,w,c
  9497  001AF4  A0D8               	btfss	status,0,c
  9498  001AF6  D008               	goto	l4572
  9499  001AF8                     u5010:
  9500  001AF8  0E00               	movlw	0
  9501  001AFA  6E22               	movwf	___flmul@prod,c
  9502  001AFC  0E00               	movlw	0
  9503  001AFE  6E23               	movwf	___flmul@prod+1,c
  9504  001B00  0E80               	movlw	128
  9505  001B02  6E24               	movwf	___flmul@prod+2,c
  9506  001B04  0E7F               	movlw	127
  9507  001B06  D023               	goto	L24
  9508  001B08                     l4572:
  9509  001B08  FFFF               	dw	65535	; assembler added errata NOP
  9510  001B0A  BE27               	btfsc	___flmul@temp+1,7,c
  9511  001B0C  D005               	goto	u5020
  9512  001B0E  5027               	movf	___flmul@temp+1,w,c
  9513  001B10  E10F               	bnz	l1167
  9514  001B12  0426               	decf	___flmul@temp,w,c
  9515  001B14  B0D8               	btfsc	status,0,c
  9516  001B16  D00C               	goto	l1167
  9517  001B18                     u5020:
  9518  001B18  FFFF               	dw	65535	; assembler added errata NOP
  9519  001B1A  0E00               	movlw	0
  9520  001B1C  6E22               	movwf	___flmul@prod,c
  9521  001B1E  0E00               	movlw	0
  9522  001B20  6E23               	movwf	___flmul@prod+1,c
  9523  001B22  0E00               	movlw	0
  9524  001B24  6E24               	movwf	___flmul@prod+2,c
  9525  001B26  0E00               	movlw	0
  9526  001B28  6E25               	movwf	___flmul@prod+3,c
  9527  001B2A  0E00               	movlw	0
  9528  001B2C  6E1B               	movwf	___flmul@sign,c
  9529  001B2E  D011               	goto	l4584
  9530  001B30                     l1167:
  9531  001B30  FFFF               	dw	65535	; assembler added errata NOP
  9532  001B32  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9533  001B36  0EFF               	movlw	255
  9534  001B38  1622               	andwf	___flmul@prod,f,c
  9535  001B3A  0EFF               	movlw	255
  9536  001B3C  1623               	andwf	___flmul@prod+1,f,c
  9537  001B3E  0E7F               	movlw	127
  9538  001B40  1624               	andwf	___flmul@prod+2,f,c
  9539  001B42  0E00               	movlw	0
  9540  001B44  1625               	andwf	___flmul@prod+3,f,c
  9541  001B46  B021               	btfsc	___flmul@bexp,0,c
  9542  001B48  8E24               	bsf	___flmul@prod+2,7,c
  9543  001B4A  90D8               	bcf	status,0,c
  9544  001B4C  3021               	rrcf	___flmul@bexp,w,c
  9545  001B4E                     L24:
  9546  001B4E  FFFF               	dw	65535	; assembler added errata NOP
  9547  001B50  6E25               	movwf	___flmul@prod+3,c
  9548  001B52                     l4584:
  9549  001B52  FFFF               	dw	65535	; assembler added errata NOP
  9550  001B54  501B               	movf	___flmul@sign,w,c
  9551  001B56  1225               	iorwf	___flmul@prod+3,f,c
  9552  001B58  C022  F00F         	movff	___flmul@prod,?___flmul
  9553  001B5C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9554  001B60  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9555  001B64  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9556  001B68                     l1154:
  9557  001B68  FFFF               	dw	65535	; assembler added errata NOP
  9558  001B6A  0012               	return		;funcret
  9559  001B6C  FFFF               	dw	65535	; errata NOP
  9560  001B6E                     __end_of___flmul:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function _ADC_Read *****************
  9564 ;; Defined at:
  9565 ;;		line 28 in file "adc.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  channel         1    wreg     unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  channel         1    4[COMRAM] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  2    0[COMRAM] unsigned int 
  9572 ;; Registers used:
  9573 ;;		wreg, status,2, status,0
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9579 ;;      Params:         2       0       0       0       0       0       0
  9580 ;;      Locals:         1       0       0       0       0       0       0
  9581 ;;      Temps:          2       0       0       0       0       0       0
  9582 ;;      Totals:         5       0       0       0       0       0       0
  9583 ;;Total ram usage:        5 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    2
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_get_temp
  9590 ;; This function uses a non-reentrant model
  9591 ;;
  9592                           
  9593                           	psect	text45
  9594  0036C4                     __ptext45:
  9595                           	opt callstack 0
  9596  0036C4                     _ADC_Read:
  9597                           	opt callstack 0
  9598  0036C4  FFFF               	dw	65535	; assembler added errata NOP
  9599                           
  9600                           ;incstack = 0
  9601                           ;ADC_Read@channel stored from wreg
  9602  0036C6  6E05               	movwf	ADC_Read@channel,c
  9603                           
  9604                           ;adc.c: 29:  if(channel > 7)
  9605  0036C8  0E07               	movlw	7
  9606  0036CA  6405               	cpfsgt	ADC_Read@channel,c
  9607  0036CC  D005               	goto	l4450
  9608                           
  9609                           ;adc.c: 30:  return 0;
  9610  0036CE  0E00               	movlw	0
  9611  0036D0  6E02               	movwf	?_ADC_Read+1,c
  9612  0036D2  0E00               	movlw	0
  9613  0036D4  6E01               	movwf	?_ADC_Read,c
  9614  0036D6  D01D               	goto	l278
  9615  0036D8                     l4450:
  9616  0036D8  FFFF               	dw	65535	; assembler added errata NOP
  9617                           
  9618                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9619  0036DA  0EC5               	movlw	197
  9620  0036DC  16C2               	andwf	4034,f,c	;volatile
  9621                           
  9622                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9623  0036DE  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9624  0036E0  42E8               	rrncf	wreg,f,c
  9625  0036E2  0BF8               	andlw	248
  9626  0036E4  12C2               	iorwf	4034,f,c	;volatile
  9627                           
  9628                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9629  0036E6  0E08               	movlw	8
  9630  0036E8  6E03               	movwf	??_ADC_Read& (0+255),c
  9631  0036EA  0ECB               	movlw	203
  9632  0036EC                     u5387:
  9633  0036EC  FFFF               	dw	65535	; errata NOP
  9634  0036EE  2EE8               	decfsz	wreg,f,c
  9635  0036F0  D7FD               	bra	u5387
  9636  0036F2  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9637  0036F4  D7FB               	bra	u5387
  9638  0036F6  D000               	nop2	
  9639                           
  9640                           ;adc.c: 34:  GO_nDONE = 1;
  9641  0036F8  84C2               	bsf	4034,2,c	;volatile
  9642  0036FA                     l279:
  9643  0036FA  FFFF               	dw	65535	; assembler added errata NOP
  9644  0036FC  B4C2               	btfsc	4034,2,c	;volatile
  9645  0036FE  D7FD               	goto	l279
  9646                           
  9647                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9648  003700  50C4               	movf	4036,w,c	;volatile
  9649  003702  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9650  003704  6A03               	clrf	??_ADC_Read& (0+255),c
  9651  003706  50C3               	movf	4035,w,c	;volatile
  9652  003708  2403               	addwf	??_ADC_Read,w,c
  9653  00370A  6E01               	movwf	?_ADC_Read,c
  9654  00370C  0E00               	movlw	0
  9655  00370E  2004               	addwfc	??_ADC_Read+1,w,c
  9656  003710  6E02               	movwf	?_ADC_Read+1,c
  9657  003712                     l278:
  9658  003712  FFFF               	dw	65535	; assembler added errata NOP
  9659  003714  0012               	return		;funcret
  9660  003716  FFFF               	dw	65535	; errata NOP
  9661  003718                     __end_of_ADC_Read:
  9662                           	opt callstack 0
  9663                           
  9664 ;; *************** function _ADC_Init *****************
  9665 ;; Defined at:
  9666 ;;		line 23 in file "adc.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9680 ;;      Params:         0       0       0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    2
  9687 ;; This function calls:
  9688 ;;		Nothing
  9689 ;; This function is called by:
  9690 ;;		_get_temp
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text46
  9695  003B00                     __ptext46:
  9696                           	opt callstack 0
  9697  003B00                     _ADC_Init:
  9698                           	opt callstack 0
  9699  003B00  FFFF               	dw	65535	; assembler added errata NOP
  9700                           
  9701                           ;adc.c: 24:  ADCON0 = 0x81;
  9702                           
  9703                           ;incstack = 0
  9704  003B02  0E81               	movlw	129
  9705  003B04  6EC2               	movwf	4034,c	;volatile
  9706                           
  9707                           ;adc.c: 25:  ADCON1 = 0x80;
  9708  003B06  0E80               	movlw	128
  9709  003B08  6EC1               	movwf	4033,c	;volatile
  9710  003B0A  0012               	return		;funcret
  9711  003B0C  FFFF               	dw	65535	; errata NOP
  9712  003B0E                     __end_of_ADC_Init:
  9713                           	opt callstack 0
  9714                           
  9715 ;; *************** function ___lldiv *****************
  9716 ;; Defined at:
  9717 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  dividend        4    0[COMRAM] unsigned long 
  9720 ;;  divisor         4    4[COMRAM] unsigned long 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  quotient        4    8[COMRAM] unsigned long 
  9723 ;;  counter         1   12[COMRAM] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  4    0[COMRAM] unsigned long 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9733 ;;      Params:         8       0       0       0       0       0       0
  9734 ;;      Locals:         5       0       0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0
  9736 ;;      Totals:        13       0       0       0       0       0       0
  9737 ;;Total ram usage:       13 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    2
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_main
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text47
  9748  003446                     __ptext47:
  9749                           	opt callstack 0
  9750  003446                     ___lldiv:
  9751                           	opt callstack 0
  9752  003446  FFFF               	dw	65535	; assembler added errata NOP
  9753                           
  9754                           ;incstack = 0
  9755  003448  0E00               	movlw	0
  9756  00344A  6E09               	movwf	___lldiv@quotient,c
  9757  00344C  0E00               	movlw	0
  9758  00344E  6E0A               	movwf	___lldiv@quotient+1,c
  9759  003450  0E00               	movlw	0
  9760  003452  6E0B               	movwf	___lldiv@quotient+2,c
  9761  003454  0E00               	movlw	0
  9762  003456  6E0C               	movwf	___lldiv@quotient+3,c
  9763  003458  5005               	movf	___lldiv@divisor,w,c
  9764  00345A  1006               	iorwf	___lldiv@divisor+1,w,c
  9765  00345C  1007               	iorwf	___lldiv@divisor+2,w,c
  9766  00345E  1008               	iorwf	___lldiv@divisor+3,w,c
  9767  003460  B4D8               	btfsc	status,2,c
  9768  003462  D02E               	goto	l563
  9769  003464  0E01               	movlw	1
  9770  003466  6E0D               	movwf	___lldiv@counter,c
  9771  003468  D007               	goto	l4782
  9772  00346A                     l4780:
  9773  00346A  FFFF               	dw	65535	; assembler added errata NOP
  9774  00346C  90D8               	bcf	status,0,c
  9775  00346E  3605               	rlcf	___lldiv@divisor,f,c
  9776  003470  3606               	rlcf	___lldiv@divisor+1,f,c
  9777  003472  3607               	rlcf	___lldiv@divisor+2,f,c
  9778  003474  3608               	rlcf	___lldiv@divisor+3,f,c
  9779  003476  2A0D               	incf	___lldiv@counter,f,c
  9780  003478                     l4782:
  9781  003478  FFFF               	dw	65535	; assembler added errata NOP
  9782  00347A  AE08               	btfss	___lldiv@divisor+3,7,c
  9783  00347C  D7F6               	goto	l4780
  9784  00347E                     u5160:
  9785  00347E  FFFF               	dw	65535	; assembler added errata NOP
  9786  003480  90D8               	bcf	status,0,c
  9787  003482  3609               	rlcf	___lldiv@quotient,f,c
  9788  003484  360A               	rlcf	___lldiv@quotient+1,f,c
  9789  003486  360B               	rlcf	___lldiv@quotient+2,f,c
  9790  003488  360C               	rlcf	___lldiv@quotient+3,f,c
  9791  00348A  5005               	movf	___lldiv@divisor,w,c
  9792  00348C  5C01               	subwf	___lldiv@dividend,w,c
  9793  00348E  5006               	movf	___lldiv@divisor+1,w,c
  9794  003490  5802               	subwfb	___lldiv@dividend+1,w,c
  9795  003492  5007               	movf	___lldiv@divisor+2,w,c
  9796  003494  5803               	subwfb	___lldiv@dividend+2,w,c
  9797  003496  5008               	movf	___lldiv@divisor+3,w,c
  9798  003498  5804               	subwfb	___lldiv@dividend+3,w,c
  9799  00349A  A0D8               	btfss	status,0,c
  9800  00349C  D009               	goto	l4792
  9801  00349E  5005               	movf	___lldiv@divisor,w,c
  9802  0034A0  5E01               	subwf	___lldiv@dividend,f,c
  9803  0034A2  5006               	movf	___lldiv@divisor+1,w,c
  9804  0034A4  5A02               	subwfb	___lldiv@dividend+1,f,c
  9805  0034A6  5007               	movf	___lldiv@divisor+2,w,c
  9806  0034A8  5A03               	subwfb	___lldiv@dividend+2,f,c
  9807  0034AA  5008               	movf	___lldiv@divisor+3,w,c
  9808  0034AC  5A04               	subwfb	___lldiv@dividend+3,f,c
  9809  0034AE  8009               	bsf	___lldiv@quotient,0,c
  9810  0034B0                     l4792:
  9811  0034B0  FFFF               	dw	65535	; assembler added errata NOP
  9812  0034B2  90D8               	bcf	status,0,c
  9813  0034B4  3208               	rrcf	___lldiv@divisor+3,f,c
  9814  0034B6  3207               	rrcf	___lldiv@divisor+2,f,c
  9815  0034B8  3206               	rrcf	___lldiv@divisor+1,f,c
  9816  0034BA  3205               	rrcf	___lldiv@divisor,f,c
  9817  0034BC  2E0D               	decfsz	___lldiv@counter,f,c
  9818  0034BE  D7DF               	goto	u5160
  9819  0034C0                     l563:
  9820  0034C0  FFFF               	dw	65535	; assembler added errata NOP
  9821  0034C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9822  0034C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9823  0034CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9824  0034CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9825  0034D2  0012               	return		;funcret
  9826  0034D4  FFFF               	dw	65535	; errata NOP
  9827  0034D6                     __end_of___lldiv:
  9828                           	opt callstack 0
  9829                           
  9830 ;; *************** function ___fltol *****************
  9831 ;; Defined at:
  9832 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  f1              4   61[COMRAM] unsigned long 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  exp1            1   70[COMRAM] unsigned char 
  9837 ;;  sign1           1   69[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  4   61[COMRAM] long 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9847 ;;      Params:         4       0       0       0       0       0       0
  9848 ;;      Locals:         2       0       0       0       0       0       0
  9849 ;;      Temps:          4       0       0       0       0       0       0
  9850 ;;      Totals:        10       0       0       0       0       0       0
  9851 ;;Total ram usage:       10 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    2
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text48
  9862  002F44                     __ptext48:
  9863                           	opt callstack 0
  9864  002F44                     ___fltol:
  9865                           	opt callstack 0
  9866  002F44  FFFF               	dw	65535	; assembler added errata NOP
  9867                           
  9868                           ;incstack = 0
  9869  002F46  3440               	rlcf	___fltol@f1+2,w,c
  9870  002F48  3441               	rlcf	___fltol@f1+3,w,c
  9871  002F4A  6E47               	movwf	___fltol@exp1,c
  9872  002F4C  5047               	movf	___fltol@exp1,w,c
  9873  002F4E  A4D8               	btfss	status,2,c
  9874  002F50  D00A               	goto	l4802
  9875  002F52                     u5180:
  9876  002F52  FFFF               	dw	65535	; assembler added errata NOP
  9877  002F54  0E00               	movlw	0
  9878  002F56  6E3E               	movwf	?___fltol,c
  9879  002F58  0E00               	movlw	0
  9880  002F5A  6E3F               	movwf	?___fltol+1,c
  9881  002F5C  0E00               	movlw	0
  9882  002F5E  6E40               	movwf	?___fltol+2,c
  9883  002F60  0E00               	movlw	0
  9884  002F62  6E41               	movwf	?___fltol+3,c
  9885  002F64  D056               	goto	l833
  9886  002F66                     l4802:
  9887  002F66  FFFF               	dw	65535	; assembler added errata NOP
  9888  002F68  C03E  F042         	movff	___fltol@f1,??___fltol
  9889  002F6C  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  9890  002F70  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  9891  002F74  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  9892  002F78  0E20               	movlw	32
  9893  002F7A  D006               	goto	u5190
  9894  002F7C                     u5195:
  9895  002F7C  FFFF               	dw	65535	; assembler added errata NOP
  9896  002F7E  90D8               	bcf	status,0,c
  9897  002F80  3245               	rrcf	??___fltol+3,f,c
  9898  002F82  3244               	rrcf	??___fltol+2,f,c
  9899  002F84  3243               	rrcf	??___fltol+1,f,c
  9900  002F86  3242               	rrcf	??___fltol,f,c
  9901  002F88                     u5190:
  9902  002F88  FFFF               	dw	65535	; assembler added errata NOP
  9903  002F8A  2EE8               	decfsz	wreg,f,c
  9904  002F8C  D7F7               	goto	u5195
  9905  002F8E  5042               	movf	??___fltol,w,c
  9906  002F90  6E46               	movwf	___fltol@sign1,c
  9907  002F92  8E40               	bsf	___fltol@f1+2,7,c
  9908  002F94  0EFF               	movlw	255
  9909  002F96  163E               	andwf	___fltol@f1,f,c
  9910  002F98  0EFF               	movlw	255
  9911  002F9A  163F               	andwf	___fltol@f1+1,f,c
  9912  002F9C  0EFF               	movlw	255
  9913  002F9E  1640               	andwf	___fltol@f1+2,f,c
  9914  002FA0  0E00               	movlw	0
  9915  002FA2  1641               	andwf	___fltol@f1+3,f,c
  9916  002FA4  0E96               	movlw	150
  9917  002FA6  5E47               	subwf	___fltol@exp1,f,c
  9918  002FA8  AE47               	btfss	___fltol@exp1,7,c
  9919  002FAA  D00E               	goto	l4822
  9920  002FAC  5047               	movf	___fltol@exp1,w,c
  9921  002FAE  0A80               	xorlw	128
  9922  002FB0  0F97               	addlw	151
  9923  002FB2  A0D8               	btfss	status,0,c
  9924  002FB4  D7CE               	goto	u5180
  9925  002FB6                     l4818:
  9926  002FB6  FFFF               	dw	65535	; assembler added errata NOP
  9927  002FB8  90D8               	bcf	status,0,c
  9928  002FBA  3241               	rrcf	___fltol@f1+3,f,c
  9929  002FBC  3240               	rrcf	___fltol@f1+2,f,c
  9930  002FBE  323F               	rrcf	___fltol@f1+1,f,c
  9931  002FC0  323E               	rrcf	___fltol@f1,f,c
  9932  002FC2  3E47               	incfsz	___fltol@exp1,f,c
  9933  002FC4  D7F8               	goto	l4818
  9934  002FC6  D010               	goto	u5230
  9935  002FC8                     l4822:
  9936  002FC8  FFFF               	dw	65535	; assembler added errata NOP
  9937  002FCA  0E1F               	movlw	31
  9938  002FCC  6447               	cpfsgt	___fltol@exp1,c
  9939  002FCE  D008               	goto	l4830
  9940  002FD0  D7C0               	goto	u5180
  9941  002FD2                     l4828:
  9942  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  9943  002FD4  90D8               	bcf	status,0,c
  9944  002FD6  363E               	rlcf	___fltol@f1,f,c
  9945  002FD8  363F               	rlcf	___fltol@f1+1,f,c
  9946  002FDA  3640               	rlcf	___fltol@f1+2,f,c
  9947  002FDC  3641               	rlcf	___fltol@f1+3,f,c
  9948  002FDE  0647               	decf	___fltol@exp1,f,c
  9949  002FE0                     l4830:
  9950  002FE0  FFFF               	dw	65535	; assembler added errata NOP
  9951  002FE2  5047               	movf	___fltol@exp1,w,c
  9952  002FE4  A4D8               	btfss	status,2,c
  9953  002FE6  D7F5               	goto	l4828
  9954  002FE8                     u5230:
  9955  002FE8  FFFF               	dw	65535	; assembler added errata NOP
  9956  002FEA  5046               	movf	___fltol@sign1,w,c
  9957  002FEC  B4D8               	btfsc	status,2,c
  9958  002FEE  D008               	goto	l4836
  9959  002FF0  1E41               	comf	___fltol@f1+3,f,c
  9960  002FF2  1E40               	comf	___fltol@f1+2,f,c
  9961  002FF4  1E3F               	comf	___fltol@f1+1,f,c
  9962  002FF6  6C3E               	negf	___fltol@f1,c
  9963  002FF8  0E00               	movlw	0
  9964  002FFA  223F               	addwfc	___fltol@f1+1,f,c
  9965  002FFC  2240               	addwfc	___fltol@f1+2,f,c
  9966  002FFE  2241               	addwfc	___fltol@f1+3,f,c
  9967  003000                     l4836:
  9968  003000  FFFF               	dw	65535	; assembler added errata NOP
  9969  003002  C03E  F03E         	movff	___fltol@f1,?___fltol
  9970  003006  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  9971  00300A  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  9972  00300E  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  9973  003012                     l833:
  9974  003012  FFFF               	dw	65535	; assembler added errata NOP
  9975  003014  0012               	return		;funcret
  9976  003016  FFFF               	dw	65535	; errata NOP
  9977  003018                     __end_of___fltol:
  9978                           	opt callstack 0
  9979                           
  9980 ;; *************** function _Timer0_StartTimer *****************
  9981 ;; Defined at:
  9982 ;;		line 21 in file "timer.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  2  107[None  ] int 
  9989 ;; Registers used:
  9990 ;;		None
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9996 ;;      Params:         0       0       0       0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0
  9999 ;;      Totals:         0       0       0       0       0       0       0
 10000 ;;Total ram usage:        0 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    2
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_main
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text49
 10011  003B18                     __ptext49:
 10012                           	opt callstack 0
 10013  003B18                     _Timer0_StartTimer:
 10014                           	opt callstack 0
 10015  003B18  FFFF               	dw	65535	; assembler added errata NOP
 10016                           
 10017                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10018                           
 10019                           ;incstack = 0
 10020  003B1A  8ED5               	bsf	4053,7,c	;volatile
 10021                           
 10022                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
 10023  003B1C  0012               	return		;funcret
 10024  003B1E  FFFF               	dw	65535	; errata NOP
 10025  003B20                     __end_of_Timer0_StartTimer:
 10026                           	opt callstack 0
 10027                           
 10028 ;; *************** function _Timer0_Init *****************
 10029 ;; Defined at:
 10030 ;;		line 8 in file "timer.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10044 ;;      Params:         0       0       0       0       0       0       0
 10045 ;;      Locals:         0       0       0       0       0       0       0
 10046 ;;      Temps:          0       0       0       0       0       0       0
 10047 ;;      Totals:         0       0       0       0       0       0       0
 10048 ;;Total ram usage:        0 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    2
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_main
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text50
 10059  003A78                     __ptext50:
 10060                           	opt callstack 0
 10061  003A78                     _Timer0_Init:
 10062                           	opt callstack 0
 10063  003A78  FFFF               	dw	65535	; assembler added errata NOP
 10064                           
 10065                           ;timer.c: 9:  time_ms = 0;
 10066                           
 10067                           ;incstack = 0
 10068  003A7A  0E00               	movlw	0
 10069  003A7C  0100               	movlb	0	; () banked
 10070  003A7E  6F85               	movwf	_time_ms& (0+255),b	;volatile
 10071  003A80  0E00               	movlw	0
 10072  003A82  6F86               	movwf	(_time_ms+1)& (0+255),b	;volatile
 10073  003A84  0E00               	movlw	0
 10074  003A86  6F87               	movwf	(_time_ms+2)& (0+255),b	;volatile
 10075  003A88  0E00               	movlw	0
 10076  003A8A  6F88               	movwf	(_time_ms+3)& (0+255),b	;volatile
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 10080  003A8C  9CD5               	bcf	4053,6,c	;volatile
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;timer.c: 11:  TMR0H = 0xFF;
 10084  003A8E  68D7               	setf	4055,c	;volatile
 10085                           
 10086                           ;timer.c: 12:  TMR0L = 0x34;
 10087  003A90  0E34               	movlw	52
 10088  003A92  6ED6               	movwf	4054,c	;volatile
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 10092  003A94  94F2               	bcf	4082,2,c	;volatile
 10093                           
 10094                           ;timer.c: 14:  T0CON = 0x00;
 10095  003A96  0E00               	movlw	0
 10096  003A98  6ED5               	movwf	4053,c	;volatile
 10097                           
 10098                           ; BSR set to: 0
 10099  003A9A  0012               	return		;funcret
 10100  003A9C  FFFF               	dw	65535	; errata NOP
 10101  003A9E                     __end_of_Timer0_Init:
 10102                           	opt callstack 0
 10103                           
 10104 ;; *************** function _timingISR *****************
 10105 ;; Defined at:
 10106 ;;		line 31 in file "timer.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;		None
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0, cstack
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10120 ;;      Params:         0       0       0       0       0       0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0
 10123 ;;      Totals:         0       0       0       0       0       0       0
 10124 ;;Total ram usage:        0 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    1
 10127 ;; This function calls:
 10128 ;;		i2_Timer0_StartTimer
 10129 ;; This function is called by:
 10130 ;;		Interrupt level 2
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	intcode
 10135  000008                     __pintcode:
 10136                           	opt callstack 0
 10137  000008                     _timingISR:
 10138                           	opt callstack 0
 10139  000008  FFFF               	dw	65535	; assembler added errata NOP
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;incstack = 0
 10143  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10144                           
 10145                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 10146  00000C  B4F2               	btfsc	4082,2,c	;volatile
 10147  00000E  AAF2               	btfss	4082,5,c	;volatile
 10148  000010  D00D               	goto	i2l240
 10149                           
 10150                           ;timer.c: 33:   TMR0IF = 0;
 10151  000012  94F2               	bcf	4082,2,c	;volatile
 10152                           
 10153                           ;timer.c: 34:   time_ms++;
 10154  000014  0E01               	movlw	1
 10155  000016  0100               	movlb	0	; () banked
 10156  000018  2785               	addwf	_time_ms& (0+255),f,b	;volatile
 10157  00001A  0E00               	movlw	0
 10158  00001C  2386               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 10159  00001E  2387               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 10160  000020  2388               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;timer.c: 35:   TMR0H = 0xFF;
 10164  000022  68D7               	setf	4055,c	;volatile
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;timer.c: 36:   TMR0L = 0x34;
 10168  000024  0E34               	movlw	52
 10169  000026  6ED6               	movwf	4054,c	;volatile
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;timer.c: 37:   Timer0_StartTimer();
 10173  000028  EC90  F01D         	call	i2_Timer0_StartTimer	;wreg free
 10174  00002C                     i2l240:
 10175  00002C  FFFF               	dw	65535	; assembler added errata NOP
 10176  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10177  000030  0011               	retfie		f
 10178  000032  FFFF               	dw	65535	; errata NOP
 10179  000034                     __end_of_timingISR:
 10180                           	opt callstack 0
 10181                           
 10182 ;; *************** function i2_Timer0_StartTimer *****************
 10183 ;; Defined at:
 10184 ;;		line 21 in file "timer.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;		None
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;		None
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  2    0[None  ] int 
 10191 ;; Registers used:
 10192 ;;		None
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10198 ;;      Params:         0       0       0       0       0       0       0
 10199 ;;      Locals:         0       0       0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0
 10201 ;;      Totals:         0       0       0       0       0       0       0
 10202 ;;Total ram usage:        0 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_timingISR
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text52
 10212  003B20                     __ptext52:
 10213                           	opt callstack 0
 10214  003B20                     i2_Timer0_StartTimer:
 10215                           	opt callstack 0
 10216  003B20  FFFF               	dw	65535	; assembler added errata NOP
 10217                           
 10218                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10219                           
 10220                           ;incstack = 0
 10221  003B22  8ED5               	bsf	4053,7,c	;volatile
 10222                           
 10223                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 10224  003B24  0012               	return		;funcret
 10225  003B26  FFFF               	dw	65535	; errata NOP
 10226  003B28                     __end_ofi2_Timer0_StartTimer:
 10227                           	opt callstack 0
 10228                           
 10229                           	psect	rparam
 10230  0000                     
 10231                           	psect	temp
 10232  00007F                     btemp:
 10233                           	opt callstack 0
 10234  00007F                     	ds	1
 10235  0000                     int$flags	set	btemp
 10236  0000                     wtemp8	set	btemp+1
 10237  0000                     ttemp5	set	btemp+1
 10238  0000                     ttemp6	set	btemp+4
 10239  0000                     ttemp7	set	btemp+8
 10240                           tosu	equ	0xFFF
 10241                           tosh	equ	0xFFE
 10242                           tosl	equ	0xFFD
 10243                           stkptr	equ	0xFFC
 10244                           pclatu	equ	0xFFB
 10245                           pclath	equ	0xFFA
 10246                           pcl	equ	0xFF9
 10247                           tblptru	equ	0xFF8
 10248                           tblptrh	equ	0xFF7
 10249                           tblptrl	equ	0xFF6
 10250                           tablat	equ	0xFF5
 10251                           prodh	equ	0xFF4
 10252                           prodl	equ	0xFF3
 10253                           indf0	equ	0xFEF
 10254                           postinc0	equ	0xFEE
 10255                           postdec0	equ	0xFED
 10256                           preinc0	equ	0xFEC
 10257                           plusw0	equ	0xFEB
 10258                           fsr0h	equ	0xFEA
 10259                           fsr0l	equ	0xFE9
 10260                           wreg	equ	0xFE8
 10261                           indf1	equ	0xFE7
 10262                           postinc1	equ	0xFE6
 10263                           postdec1	equ	0xFE5
 10264                           preinc1	equ	0xFE4
 10265                           plusw1	equ	0xFE3
 10266                           fsr1h	equ	0xFE2
 10267                           fsr1l	equ	0xFE1
 10268                           bsr	equ	0xFE0
 10269                           indf2	equ	0xFDF
 10270                           postinc2	equ	0xFDE
 10271                           postdec2	equ	0xFDD
 10272                           preinc2	equ	0xFDC
 10273                           plusw2	equ	0xFDB
 10274                           fsr2h	equ	0xFDA
 10275                           fsr2l	equ	0xFD9
 10276                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     50     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1750_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_read_op
    _write_op->___lldiv
    _read_op->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_read_op
    _read_op->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  105064
                                             41 BANK0      9     9      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             3     2      1     196
                                             13 COMRAM     3     2      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_op                                              6     6      0   49628
                                            125 COMRAM     1     1      0
                                             36 BANK0      5     5      0
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49106
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       4     2      2     340
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   ___lldiv
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _write_op
     ___lldiv (ARG)

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     32      71       4       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF      14        0.0%
DATA                 0      0      EF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 20 02:55:37 2019

                                          main@stored_temp 00E4  
                                              _SSPSTATbits 000FC7  
                                      ___wmul@multiplicand 0003  
                                                      l320 3342  
                                                      l402 2396  
                                                      l340 1F3A  
                                                      l404 23A0  
                                                      l175 3AB8  
                                                      l417 213E  
                                                      l338 1F30  
                                                      l363 2558  
                                                      l419 2148  
                                                      l365 2562  
                                                      l278 3712  
                                                      l279 36FA  
                                                      l383 2B58  
                                                      l563 34C0  
                                                      l479 17E6  
                                                      l833 3012  
                                                      l974 2F1E  
                                                      l984 323A  
                                                      _abs 38FE  
                                                      _lcd 0080  
                                                      _pad 330C  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                              main@address 00E8  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     l1211 392A  
                                                     ?_abs 0013  
                                                     l1150 1878  
                                                     l1214 3934  
                                                     l1160 1A9C  
                                                     l1081 1D98  
                                                     l1073 1EAC  
                                                     l1065 1CCC  
                                                     l1154 1B68  
                                                     l1090 1E10  
                                                     l1066 1CA4  
                                                     l1242 2826  
                                                     l1091 1E0A  
                                                     l1245 2830  
                                                     l1342 319E  
                                                     l1167 1B30  
                                                     l1159 1AA2  
                                                     l1191 29D2  
                                                     l1352 365E  
                                                     l4000 1156  
                                                     l1194 2AE8  
                                                     l1357 3668  
                                                     l1198 2A5C  
                                                     l3222 327C  
                                                     l1288 3306  
                                                     l3232 388C  
                                                     l3240 3A28  
                                                     l3320 288E  
                                                     l4104 1682  
                                                     l4040 134C  
                                                     l4032 12CC  
                                                     l4016 1276  
                                                     l4008 11C8  
                                                     l3242 3A2E  
                                                     l3314 2864  
                                                     l4204 1B9C  
                                                     l3236 38A4  
                                                     l3260 3338  
                                                     l3404 2F06  
                                                     l3420 3222  
                                                     l3412 31C0  
                                                     l4124 178C  
                                                     l3270 3398  
                                                     l3262 334E  
                                                     l3326 28B6  
                                                     l3342 2944  
                                                     l3414 31D6  
                                                     l4118 174C  
                                                     l4062 14CA  
                                                     l4134 17AE  
                                                     l4240 1C14  
                                                     l4232 1BF0  
                                                     l4208 1BA2  
                                                     l3432 3830  
                                                     l3256 3328  
                                                     l3440 3684  
                                                     l3328 28CC  
                                                     l3504 20D2  
                                                     l3600 2C0E  
                                                     l4128 179A  
                                                     l4048 13C0  
                                                     l4306 1D04  
                                                     l3266 3368  
                                                     l3442 3692  
                                                     l3346 296C  
                                                     l3338 292C  
                                                     l3362 2C86  
                                                     l4090 15AC  
                                                     l4154 3578  
                                                     l4500 189A  
                                                     l4308 1D0A  
                                                     l4316 1D1E  
                                                     l4228 1BEA  
                                                     l4412 3866  
                                                     l4164 34F6  
                                                     l3508 20EE  
                                                     l3700 2346  
                                                     l4076 154C  
                                                     l4156 35A0  
                                                     l4334 1DC0  
                                                     l4350 1DE6  
                                                     l4326 1D86  
                                                     l4270 1C52  
                                                     l4166 3506  
                                                     l3382 2D44  
                                                     l3374 2D04  
                                                     l3366 2CA2  
                                                     l3358 2C60  
                                                     l3470 1F58  
                                                     l3526 25A2  
                                                     l3614 23D8  
                                                     l4344 1DD8  
                                                     l4408 384C  
                                                     l4168 3554  
                                                     l3368 2CB8  
                                                     l3456 1F0E  
                                                     l3392 2E90  
                                                     l3624 24C6  
                                                     l3800 06DE  
                                                     l4450 36D8  
                                                     l4370 1E58  
                                                     l4282 1CB4  
                                                     l4610 2A0C  
                                                     l4602 29E4  
                                                     l3722 2748  
                                                     l3706 26E4  
                                                     l3378 2D1C  
                                                     l3474 1F68  
                                                     l3538 262E  
                                                     l3394 2EA6  
                                                     l3802 0724  
                                                     l4284 1CBA  
                                                     l4620 2A84  
                                                     l4612 2A1A  
                                                     l3732 27BE  
                                                     l3724 2752  
                                                     l3716 2736  
                                                     l3708 26EA  
                                                     l3484 2062  
                                                     l3556 26A2  
                                                     l4542 1A42  
                                                     l4382 1E8C  
                                                     l4622 2A92  
                                                     l4614 2A42  
                                                     l3726 275A  
                                                     l3582 2B8C  
                                                     l3662 21B2  
                                                     l3654 218E  
                                                     l3910 0D88  
                                                     l3902 0CD8  
                                                     l3814 0796  
                                                     ?_pad 0011  
                                                     l4472 181A  
                                                     l4384 1E90  
                                                     l4608 2A04  
                                                     l3728 2786  
                                                     l3592 2BD6  
                                                     l3568 2B1A  
                                                     l3752 310E  
                                                     l3648 215E  
                                                     l3816 07B6  
                                                     l4802 2F66  
                                                     l4490 1860  
                                                     l4474 1820  
                                                     l4378 1E82  
                                                     l3586 2BAE  
                                                     l3578 2B72  
                                                     l3754 311E  
                                                     l3834 089E  
                                                     l3818 07C6  
                                                     l4572 1B08  
                                                     l4548 1A62  
                                                     l4492 1866  
                                                     l4476 1832  
                                                     l3596 2BF4  
                                                     l3676 224C  
                                                     l3684 22C8  
                                                     l3852 0988  
                                                     l3836 08BE  
                                                     l3780 06B0  
                                                     l4830 2FE0  
                                                     l4822 2FC8  
                                                     l4638 2AD6  
                                                     l3942 0ED2  
                                                     l3934 0E5E  
                                                     l3926 0DDE  
                                                     l3862 0A68  
                                                     l3838 08CE  
                                                     l4584 1B52  
                                                     l4568 1AE8  
                                                     l3952 0F50  
                                                     l3872 0AD2  
                                                     l3792 06C8  
                                                     l3784 06B8  
                                                     l3776 0698  
                                                     l4818 2FB6  
                                                     l3962 0F94  
                                                     l3882 0B4E  
                                                     l3858 0A2E  
                                                     l3778 069E  
                                                     l4682 33E8  
                                                     l4836 3000  
                                                     l4828 2FD2  
                                                     l4780 346A  
                                                     l3972 0FBE  
                                                     l3956 0F80  
                                                     l3948 0F44  
                                                     l3892 0C2E  
                                                     l3796 06D0  
                                                     l3788 06C0  
                                                     l4782 3478  
                                                     l3982 1050  
                                                     l4792 34B0  
                                                     l3992 10BC  
                                                     STR_1 061D  
                                                     STR_2 0648  
                                                     STR_3 0605  
                                                     STR_5 0605  
                                                     STR_7 0609  
                                                     STR_9 0609  
                                                     u3000 2CBE  
                                                     u3110 382C  
                                                     u3031 2E70  
                                                     u3200 2072  
                                                     u4000 0AC2  
                                                     u3130 1EDC  
                                                     u3050 2EAC  
                                                     u3220 2094  
                                                     u3140 1EE0  
                                                     u3300 2608  
                                                     u4020 0B0C  
                                                     u3221 2092  
                                                     u3230 20A4  
                                                     u3310 263E  
                                                     u4110 0E8C  
                                                     u3240 20AA  
                                                     u3080 31DC  
                                                     u4040 0BA8  
                                                     u3305 25F4  
                                                     u5010 1AF8  
                                                     u3170 1F24  
                                                     u3330 2660  
                                                     u5020 1B18  
                                                     u5100 2A9E  
                                                     u3260 20BA  
                                                     u3340 2670  
                                                     u4060 0C88  
                                                     u2710 32BE  
                                                     u3190 1F50  
                                                     u3350 2676  
                                                     u3430 2BA2  
                                                     u3510 24F2  
                                                     u4310 1606  
                                                     u4230 137A  
                                                     u3511 24F0  
                                                     u2800 390E  
                                                     u3520 2502  
                                                     u4160 107E  
                                                     u3290 254C  
                                                     u3530 2508  
                                                     u2810 39D6  
                                                     u3610 2226  
                                                     u4330 16DC  
                                                     u4250 141A  
                                                     u4500 1C8A  
                                                     u3460 2C24  
                                                     u2820 39DA  
                                                     u2740 399E  
                                                     u3620 222A  
                                                     u5140 340A  
                                                     u3381 2AFA  
                                                     u5230 2FE8  
                                                     u2830 38F0  
                                                     u2750 39A2  
                                                     u3550 2132  
                                                     u4270 1524  
                                                     u5160 347E  
                                                     u3720 2732  
                                                     u3480 238A  
                                                     u2840 38F4  
                                                     u3640 22A2  
                                                     u2921 2896  
                                                     u4530 1CD6  
                                                     u2690 3272  
                                                     u2850 3642  
                                                     u3650 22DA  
                                                     u3570 21AE  
                                                     u4290 1586  
                                                     u5180 2F52  
                                                     u4620 1DAC  
                                                     u3740 27F2  
                                                     u2940 28D2  
                                                     u3820 3174  
                                                     u2860 3646  
                                                     u3580 21E8  
                                                     u3900 0814  
                                                     u3645 228E  
                                                     u5190 2F88  
                                                     u3750 27F6  
                                                     u3670 22FC  
                                                     u3590 21EC  
                                                     u3671 22FA  
                                                     u4480 1C76  
                                                     u2880 3A0E  
                                                     u3680 230C  
                                                     u5337 3722  
                                                     u4490 1C86  
                                                     u2890 3A12  
                                                     u3690 2312  
                                                     u3930 090A  
                                                     u5195 2F7C  
                                                     u5347 3748  
                                                     u4740 1E66  
                                                     u4660 1DEC  
                                                     u3940 090E  
                                                     _RCIF 007CF5  
                                                     u5357 3758  
                                                     u3950 091C  
                                                     u5367 33C2  
                                                     u4920 1886  
                                                     u4680 1E02  
                                                     u3880 0802  
                                                     u5377 3410  
                                                     u4930 1A02  
                                                     u3890 0806  
                                                     u5387 36EC  
                                                     u3980 09E2  
                                                     u4935 19F6  
                                                     u4970 1A94  
                                                     abs@a 0013  
                                                     _dbuf 0098  
                                                     _flag 0097  
                                                     _atoi 26D0  
                                                     _ctoa 366E  
                                                     _main 2D6A  
                                                     _dtoa 1EB2  
                                                     _prec 008F  
                                                     _otoa 2536  
                                                     _nout 008B  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2AEE  
                                                     btemp 007F  
                                                     _utoa 2374  
                                                     _xtoa 211C  
                                         __end_of_ADC_Init 3B0E  
                                         __end_of_ADC_Read 3718  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                        int_to_char@result 00CA  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2992  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1EB2  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 2D6A  
                                                    STR_21 0627  
                                                    STR_14 0606  
                                                    STR_30 062A  
                                                    STR_23 0627  
                                                    STR_32 062A  
                                                    STR_41 0611  
                                                    STR_25 062D  
                                                    STR_18 060A  
                                                    STR_34 0630  
                                                    STR_27 062D  
                                                    STR_51 0639  
                                                    STR_36 0630  
                                                    STR_61 060D  
                                                    STR_46 0612  
                                                    STR_54 063C  
                                                    STR_71 0633  
                                                    STR_39 0611  
                                                    STR_56 063C  
                                                    STR_81 0615  
                                                    STR_49 0639  
                                                    STR_66 060E  
                                                    STR_74 0636  
                                                    STR_91 061E  
                                                    STR_59 060D  
                                                    STR_76 0636  
                                                    STR_69 0633  
                                                    STR_86 0616  
                                                    STR_94 063F  
                                                    STR_79 0615  
                                                    STR_96 063F  
                                          __end_of___flmul 1B6E  
                                                    ?_otoa 001C  
                                                    STR_99 0619  
                                          __end_of___flsub 37B0  
                                          __end_of___fltol 3018  
                                                    ?_stoa 000A  
                                          __end_of___lldiv 34D6  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 2F44  
                                                    ?_xtoa 001C  
                                          __end_of___lomod 3260  
                                                    i2l240 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                          __end_of_getchar 3B00  
                                                    _fgetc 34D6  
                                                    _flags 0091  
                                                    _getch 3B0E  
                                                    _errno 0089  
                                                    _fputc 3260  
                                          __end_of_isalpha 38FE  
                                                    _fputs 3880  
                                          __end_of_isdigit 3A1C  
                                          __end_of_read_op 3446  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 008D  
                                                    ctoa@c 001E  
                                                    _putch 3B30  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 39AC  
                                          __end_of_isspace 383C  
                                          __end_of_isupper 39E4  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 3618  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 31A4  
                                          __end_of_toupper 366E  
                                         ___lodiv@dividend 0001  
                                             _toupper$1904 000D  
                                          __initialization 393A  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2836  
                                             __end_of_ctoa 36C4  
                                             __end_of_main 2E68  
                                             __end_of_dtoa 211C  
                                             __end_of_otoa 26D0  
                                             __end_of_stoa 2C32  
                                             __end_of_utoa 2536  
                                             __end_of_xtoa 2374  
                                       int_to_char@the_num 00D4  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00E1  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   STR_101 0619  
                                                   STR_110 061A  
                                                   ?_fputs 000A  
                                                   STR_103 0601  
                                                   STR_105 0601  
                                                   STR_121 0621  
                                                   STR_114 0602  
                                                   STR_130 0624  
                                                   _ADRESH 000FC4  
                                                   STR_123 0621  
                                                   STR_132 0624  
                                                   STR_117 0642  
                                                   STR_126 0645  
                                                   _ADRESL 000FC3  
                                                   STR_119 0642  
                                                   STR_128 0645  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2AEE  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0010  
                                      i2_Timer0_StartTimer 3B20  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 30E2  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3A4E  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lldiv 0009  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 3960  
                                  __size_of_UARTSendString 0044  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 3A1C  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 007E  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                              read_op@mask 00E0  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 35C2  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3766  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 3966  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 3B28  
                                            __end_of_fgetc 3562  
                                            __end_of_getch 3B18  
                                            __end_of_fputc 330C  
                                            __end_of_fputs 38C2  
                                      __end_of_Timer0_Init 3A9E  
                                            __end_of_putch 3B36  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 0080  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3ADA  
                                            _initialize_TX 3AC6  
                                                  ?___wmul 0001  
                                                  ?_strlen 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 3A78  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 2836  
                                                  ___fladd 1B6E  
                                                  ___aomod 2C32  
                                                  ___flmul 17EC  
                                                  ___flsub 3766  
                                                  ___fltol 2F44  
                                                  ___lldiv 3446  
                                          __size_of___wmul 002A  
                                                  ___lodiv 2E68  
                                                  ___lomod 31A4  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 383C  
                                                  __pcinit 393A  
                                                  __ramtop 0600  
                                                  __ptext0 2D6A  
                                                  __ptext1 3718  
                                                  __ptext2 33B6  
                                                  __ptext3 37B0  
                                                  __ptext4 35C2  
                                                  __ptext5 3562  
                                                  __ptext6 064C  
                                                  __ptext7 211C  
                                                  __ptext8 3618  
                                                  __ptext9 3974  
                                                ?_write_op 000E  
                                                  _getchar 3AEE  
                                                _T0CONbits 000FD5  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 38C2  
                                                  _isdigit 39E4  
                                                  _read_op 33B6  
                                               ??___xxtofl 0005  
                                                  _islower 3974  
                                                  _isspace 37F8  
                                                  _isupper 39AC  
                                                  fgetc@fp 0003  
                                                  _time_ms 0085  
                                                  atoi@neg 000E  
                                                  _sprintf 35C2  
                                               ??_get_temp 0034  
                                                  _strncmp 30E2  
                                                  _toupper 3618  
                                     end_of_initialization 3966  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                          ___lldiv@divisor 0005  
                                        __end_of_timingISR 0034  
                                          ___lldiv@counter 000D  
                                        __end_of_vfpfcnvrt 17EC  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 3880  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                                _PORTCbits 000F82  
                                               ??_write_op 000F  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 3B18  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 000E  
                                          ?_UARTSendString 00D8  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 3A78  
                                              vfpfcnvrt@vp 0067  
                                __end_of_Timer0_StartTimer 3B20  
                                           __end_of_strlen 3A4E  
                                      start_initialization 393A  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 393A  
                                              __end_of_pad 33B6  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00EA  
                                     __end_of_UARTSendChar 3AC6  
                              __end_ofi2_Timer0_StartTimer 3B28  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 00B8  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1747 0010  
                                                _atoi$1748 0014  
                                                _atoi$1749 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1101 002E  
                                            UARTSendChar@c 0001  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lldiv 0001  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                                 _ADC_Init 3B00  
                                                 _ADC_Read 36C4  
                                        __size_of_write_op 004E  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fgetc 008C  
                                           __size_of_getch 000A  
                                                 ?_sprintf 00B8  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00D8  
                                          UARTSendString@i 00DA  
                                      __end_of_int_to_char 37F8  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _timingISR 0008  
                                                _vfpfcnvrt 064C  
                                                _xtoa$1137 002F  
                                                _xtoa$1138 0031  
                                        ___wmul@multiplier 0001  
                                             _isspace$1784 0007  
                                         main@time_elapsed 00E6  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 394E  
                                         ??_UARTSendString 007E  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3AB2  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lldiv 0090  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 00BA  
                                                 ___xxtofl 2992  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0090  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 39AC  
                                                 __ptext11 38C2  
                                                 __ptext20 2C32  
                                                 __ptext12 2374  
                                                 __ptext21 2836  
                                                 __ptext13 31A4  
                                                 __ptext30 39E4  
                                                 __ptext22 366E  
                                                 __ptext14 2E68  
                                                 __ptext31 3A4E  
                                                 __ptext23 330C  
                                                 __ptext15 30E2  
                                                 __ptext40 3018  
                                                 __ptext32 3AEE  
                                                 __ptext24 3A1C  
                                                 __ptext16 2AEE  
                                                 __ptext41 2992  
                                                 __ptext33 34D6  
                                                 __ptext25 3880  
                                                 __ptext17 2536  
                                                 __ptext50 3A78  
                                                 __ptext42 3766  
                                                 __ptext34 3B0E  
                                                 __ptext26 3260  
                                                 __ptext18 1EB2  
                                                 __ptext43 1B6E  
                                                 __ptext35 383C  
                                                 __ptext27 3B30  
                                                 __ptext19 38FE  
                                                 __ptext52 3B20  
                                                 __ptext44 17EC  
                                                 __ptext36 3A9E  
                                                 __ptext28 26D0  
                                                 __ptext45 36C4  
                                                 __ptext37 3AB2  
                                                 __ptext29 37F8  
                                                 __ptext46 3B00  
                                                 __ptext38 3AC6  
                                                 __ptext47 3446  
                                                 __ptext39 3ADA  
                                                 __ptext48 2F44  
                                                 __ptext49 3B18  
                                         __size_of_isupper 0038  
                                                 _get_temp 3018  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                          _interval_events 0093  
                                             _UARTSendChar 3AB2  
                                              _int_to_char 37B0  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 00FE  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3AEE  
                                    __end_of_initialize_TX 3ADA  
                                                stoa@F1152 00EA  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                           read_op@address 00DC  
                                                 _ungetbuf 0096  
                                                 _ungetcnt 0095  
                                                 _vfprintf 3562  
                                                 main@temp 00E2  
                                         ___aomod@dividend 0001  
                                                 _write_op 3718  
                                           _vfpfcnvrt$1152 005B  
                                           _vfpfcnvrt$1153 005D  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 read_op@i 00DD  
                                                 intlevel2 3B36  
                                                sprintf@ap 00C8  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                         ___lldiv@dividend 0001  
                                              _UARTNewLine 3A9E  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 00DF  
                                                 sprintf@f 00C2  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 00B8  
                                         ___lldiv@quotient 0009  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                             ___aomod@sign 0012  
