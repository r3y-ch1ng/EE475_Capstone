

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 27 22:58:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F452 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  003B62                     __pidataBANK0:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for stoa@F1152
   112  003B62  28                 	db	40
   113  003B63  6E                 	db	110
   114  003B64  75                 	db	117
   115  003B65  6C                 	db	108
   116  003B66  6C                 	db	108
   117  003B67  29                 	db	41
   118  003B68  00                 	db	0
   119  0000                     _TRISCbits	set	3988
   120  0000                     _TRISA	set	3986
   121  0000                     _PORTA	set	3968
   122  0000                     _PORTD	set	3971
   123  0000                     _PORTB	set	3969
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISC	set	3988
   127  0000                     _RC0	set	31760
   128  0000                     _RB5	set	31757
   129  0000                     _CCP1CON	set	4029
   130  0000                     _CCPR1L	set	4030
   131  0000                     _PR2	set	4043
   132  0000                     _T2CON	set	4042
   133  0000                     _ADRESL	set	4035
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0	set	4034
   136  0000                     _SSPBUF	set	4041
   137  0000                     _SSPCON1	set	4038
   138  0000                     _SSPSTATbits	set	4039
   139  0000                     _ADCON1	set	4033
   140  0000                     _RCREG1	set	4014
   141  0000                     _TXREG	set	4013
   142  0000                     _RCSTAbits	set	4011
   143  0000                     _RCSTA	set	4011
   144  0000                     _SPBRG	set	4015
   145  0000                     _TXSTAbits	set	4012
   146  0000                     _RCONbits	set	4048
   147  0000                     _GO_nDONE	set	32274
   148  0000                     _RCIF	set	31989
   149  0000                     _TMR2IP	set	31993
   150  0000                     _TMR2IE	set	31977
   151  0000                     _T0CON	set	4053
   152  0000                     _TMR0L	set	4054
   153  0000                     _TMR0H	set	4055
   154  0000                     _T0CONbits	set	4053
   155  0000                     _INTCON2bits	set	4081
   156  0000                     _INTCONbits	set	4082
   157  0000                     _TMR0IE	set	32661
   158  0000                     _TMR0IF	set	32658
   159                           
   160                           	psect	smallconst
   161  000600                     __psmallconst:
   162                           	opt callstack 0
   163  000600  00                 	db	0
   164  000601                     STR_3:
   165  000601  41                 	db	65	;'A'
   166  000602  64                 	db	100	;'d'
   167  000603  64                 	db	100	;'d'
   168  000604  72                 	db	114	;'r'
   169  000605  65                 	db	101	;'e'
   170  000606  73                 	db	115	;'s'
   171  000607  73                 	db	115	;'s'
   172  000608  20                 	db	32
   173  000609  00                 	db	0
   174  00060A                     STR_105:
   175  00060A  68                 	db	104	;'h'
   176  00060B  68                 	db	104	;'h'
   177  00060C  58                 	db	88	;'X'
   178  00060D  00                 	db	0
   179  00060E                     STR_5:
   180  00060E  68                 	db	104	;'h'
   181  00060F  68                 	db	104	;'h'
   182  000610  64                 	db	100	;'d'
   183  000611  00                 	db	0
   184  000612                     STR_9:
   185  000612  68                 	db	104	;'h'
   186  000613  68                 	db	104	;'h'
   187  000614  69                 	db	105	;'i'
   188  000615  00                 	db	0
   189  000616                     STR_61:
   190  000616  68                 	db	104	;'h'
   191  000617  68                 	db	104	;'h'
   192  000618  6E                 	db	110	;'n'
   193  000619  00                 	db	0
   194  00061A                     STR_41:
   195  00061A  68                 	db	104	;'h'
   196  00061B  68                 	db	104	;'h'
   197  00061C  6F                 	db	111	;'o'
   198  00061D  00                 	db	0
   199  00061E                     STR_81:
   200  00061E  68                 	db	104	;'h'
   201  00061F  68                 	db	104	;'h'
   202  000620  75                 	db	117	;'u'
   203  000621  00                 	db	0
   204  000622                     STR_101:
   205  000622  68                 	db	104	;'h'
   206  000623  68                 	db	104	;'h'
   207  000624  78                 	db	120	;'x'
   208  000625  00                 	db	0
   209  000626                     STR_1:
   210  000626  25                 	db	37
   211  000627  6C                 	db	108	;'l'
   212  000628  75                 	db	117	;'u'
   213  000629  00                 	db	0
   214  00062A                     STR_123:
   215  00062A  6C                 	db	108	;'l'
   216  00062B  58                 	db	88	;'X'
   217  00062C  00                 	db	0
   218  00062D                     STR_132:
   219  00062D  7A                 	db	122	;'z'
   220  00062E  58                 	db	88	;'X'
   221  00062F  00                 	db	0
   222  000630                     STR_23:
   223  000630  6C                 	db	108	;'l'
   224  000631  64                 	db	100	;'d'
   225  000632  00                 	db	0
   226  000633                     STR_32:
   227  000633  7A                 	db	122	;'z'
   228  000634  64                 	db	100	;'d'
   229  000635  00                 	db	0
   230  000636                     STR_27:
   231  000636  6C                 	db	108	;'l'
   232  000637  69                 	db	105	;'i'
   233  000638  00                 	db	0
   234  000639                     STR_36:
   235  000639  7A                 	db	122	;'z'
   236  00063A  69                 	db	105	;'i'
   237  00063B  00                 	db	0
   238  00063C                     STR_71:
   239  00063C  6C                 	db	108	;'l'
   240  00063D  6E                 	db	110	;'n'
   241  00063E  00                 	db	0
   242  00063F                     STR_76:
   243  00063F  7A                 	db	122	;'z'
   244  000640  6E                 	db	110	;'n'
   245  000641  00                 	db	0
   246  000642                     STR_51:
   247  000642  6C                 	db	108	;'l'
   248  000643  6F                 	db	111	;'o'
   249  000644  00                 	db	0
   250  000645                     STR_56:
   251  000645  7A                 	db	122	;'z'
   252  000646  6F                 	db	111	;'o'
   253  000647  00                 	db	0
   254  000648                     STR_96:
   255  000648  7A                 	db	122	;'z'
   256  000649  75                 	db	117	;'u'
   257  00064A  00                 	db	0
   258  00064B                     STR_119:
   259  00064B  6C                 	db	108	;'l'
   260  00064C  78                 	db	120	;'x'
   261  00064D  00                 	db	0
   262  00064E                     STR_128:
   263  00064E  7A                 	db	122	;'z'
   264  00064F  78                 	db	120	;'x'
   265  000650  00                 	db	0
   266  000651                     STR_4:
   267  000651  3A                 	db	58	;':'
   268  000652  20                 	db	32
   269  000653  00                 	db	0
   270  000654  25                 	db	37
   271  000655  64                 	db	100	;'d'
   272  000656  00                 	db	0
   273  0000                     
   274                           ; #config settings
   275  000657  00                 	db	0	; dummy byte at the end
   276  0000                     
   277                           	psect	cinit
   278  003850                     __pcinit:
   279                           	opt callstack 0
   280  003850                     start_initialization:
   281                           	opt callstack 0
   282  003850                     __initialization:
   283                           	opt callstack 0
   284                           
   285                           ; Initialize objects allocated to BANK0 (7 bytes)
   286                           ; load TBLPTR registers with __pidataBANK0
   287  003850  0E62               	movlw	low __pidataBANK0
   288  003852  6EF6               	movwf	tblptrl,c
   289  003854  0E3B               	movlw	high __pidataBANK0
   290  003856  6EF7               	movwf	tblptrh,c
   291  003858  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   292  00385A  6EF8               	movwf	tblptru,c
   293  00385C  EE00  F0EE         	lfsr	0,__pdataBANK0
   294  003860  EE10 F007          	lfsr	1,7
   295  003864                     copy_data0:
   296  003864  0009               	tblrd		*+
   297  003866  CFF5 FFEE          	movff	tablat,postinc0
   298  00386A  50E5               	movf	postdec1,w,c
   299  00386C  50E1               	movf	fsr1l,w,c
   300  00386E  E1FA               	bnz	copy_data0
   301                           
   302                           ; Clear objects allocated to BANK0 (59 bytes)
   303  003870  EE00  F080         	lfsr	0,__pbssBANK0
   304  003874  0E3B               	movlw	59
   305  003876                     clear_0:
   306  003876  6AEE               	clrf	postinc0,c
   307  003878  06E8               	decf	wreg,f,c
   308  00387A  E1FD               	bnz	clear_0
   309                           
   310                           ; Clear objects allocated to COMRAM (1 bytes)
   311  00387C  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   312  00387E                     end_of_initialization:
   313                           	opt callstack 0
   314  00387E                     __end_of__initialization:
   315                           	opt callstack 0
   316  00387E  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   317  003880  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318  003882  0E00               	movlw	low (__Lmediumconst shr (0+16))
   319  003884  6EF8               	movwf	tblptru,c
   320  003886  0100               	movlb	0
   321  003888  EFA1  F012         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324  00007E                     __pbssCOMRAM:
   325                           	opt callstack 0
   326  00007E                     _ungetcnt:
   327                           	opt callstack 0
   328  00007E                     	ds	1
   329                           
   330                           	psect	bssBANK0
   331  000080                     __pbssBANK0:
   332                           	opt callstack 0
   333  000080                     _lcd:
   334                           	opt callstack 0
   335  000080                     	ds	5
   336  000085                     _time_ms_2:
   337                           	opt callstack 0
   338  000085                     	ds	4
   339  000089                     _time_ms:
   340                           	opt callstack 0
   341  000089                     	ds	4
   342  00008D                     _errno:
   343                           	opt callstack 0
   344  00008D                     	ds	2
   345  00008F                     _nout:
   346                           	opt callstack 0
   347  00008F                     	ds	2
   348  000091                     _width:
   349                           	opt callstack 0
   350  000091                     	ds	2
   351  000093                     _prec:
   352                           	opt callstack 0
   353  000093                     	ds	2
   354  000095                     _flags:
   355                           	opt callstack 0
   356  000095                     	ds	2
   357  000097                     _interval_events:
   358                           	opt callstack 0
   359  000097                     	ds	2
   360  000099                     	ds	1
   361  00009A                     _flag:
   362                           	opt callstack 0
   363  00009A                     	ds	1
   364  00009B                     _dbuf:
   365                           	opt callstack 0
   366  00009B                     	ds	32
   367                           
   368                           	psect	dataBANK0
   369  0000EE                     __pdataBANK0:
   370                           	opt callstack 0
   371  0000EE                     stoa@F1152:
   372                           	opt callstack 0
   373  0000EE                     	ds	7
   374                           
   375                           	psect	cstackBANK0
   376  0000BB                     __pcstackBANK0:
   377                           	opt callstack 0
   378  0000BB                     ?_sprintf:
   379                           	opt callstack 0
   380  0000BB                     sprintf@s:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  0000BB                     	ds	2
   385  0000BD                     sprintf@fmt:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x2
   389  0000BD                     	ds	8
   390  0000C5                     sprintf@f:
   391                           	opt callstack 0
   392                           
   393                           ; 6 bytes @ 0xA
   394  0000C5                     	ds	6
   395  0000CB                     sprintf@ap:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x10
   399  0000CB                     	ds	2
   400  0000CD                     int_to_char@result:
   401                           	opt callstack 0
   402                           
   403                           ; 10 bytes @ 0x12
   404  0000CD                     	ds	10
   405  0000D7                     int_to_char@the_num:
   406                           	opt callstack 0
   407                           
   408                           ; 4 bytes @ 0x1C
   409  0000D7                     	ds	4
   410  0000DB                     UARTSendString@c:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0x20
   414  0000DB                     	ds	2
   415  0000DD                     ??_UARTSendString:
   416                           
   417                           ; 1 bytes @ 0x22
   418  0000DD                     	ds	2
   419  0000DF                     UARTSendString@i:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x24
   423  0000DF                     	ds	2
   424  0000E1                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x26
   427  0000E1                     	ds	2
   428  0000E3                     main@temp:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x28
   432  0000E3                     	ds	2
   433  0000E5                     main@stored_temp:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x2A
   437  0000E5                     	ds	2
   438  0000E7                     main@address:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x2C
   442  0000E7                     	ds	2
   443  0000E9                     main@i:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x2E
   447  0000E9                     	ds	2
   448  0000EB                     main@input:
   449                           	opt callstack 0
   450                           
   451                           ; 1 bytes @ 0x30
   452  0000EB                     	ds	1
   453  0000EC                     main@i_335:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x31
   457  0000EC                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000001                     __pcstackCOMRAM:
   461                           	opt callstack 0
   462  000001                     ??_UARTRecieveChar:
   463  000001                     ?_ADC_Read:
   464                           	opt callstack 0
   465  000001                     ?_strlen:
   466                           	opt callstack 0
   467  000001                     ?_isupper:
   468                           	opt callstack 0
   469  000001                     ?_isalpha:
   470                           	opt callstack 0
   471  000001                     ?_isdigit:
   472                           	opt callstack 0
   473  000001                     ?_strncmp:
   474                           	opt callstack 0
   475  000001                     ?_isspace:
   476                           	opt callstack 0
   477  000001                     ?_getch:
   478                           	opt callstack 0
   479  000001                     ?_islower:
   480                           	opt callstack 0
   481  000001                     ?___wmul:
   482                           	opt callstack 0
   483  000001                     ?___fladd:
   484                           	opt callstack 0
   485  000001                     ?___xxtofl:
   486                           	opt callstack 0
   487  000001                     ?___aodiv:
   488                           	opt callstack 0
   489  000001                     ?___aomod:
   490                           	opt callstack 0
   491  000001                     ?___lodiv:
   492                           	opt callstack 0
   493  000001                     ?___lomod:
   494                           	opt callstack 0
   495  000001                     write_op@data:
   496                           	opt callstack 0
   497  000001                     read_op@address:
   498                           	opt callstack 0
   499  000001                     UARTSendChar@c:
   500                           	opt callstack 0
   501  000001                     set_duty_cycle@lower_2:
   502                           	opt callstack 0
   503  000001                     initialize_PWM@freq:
   504                           	opt callstack 0
   505  000001                     ___wmul@multiplier:
   506                           	opt callstack 0
   507  000001                     isalpha@c:
   508                           	opt callstack 0
   509  000001                     isdigit@c:
   510                           	opt callstack 0
   511  000001                     isspace@c:
   512                           	opt callstack 0
   513  000001                     isupper@c:
   514                           	opt callstack 0
   515  000001                     fputc@c:
   516                           	opt callstack 0
   517  000001                     strlen@s:
   518                           	opt callstack 0
   519  000001                     strncmp@_l:
   520                           	opt callstack 0
   521  000001                     islower@c:
   522                           	opt callstack 0
   523  000001                     ___fladd@b:
   524                           	opt callstack 0
   525  000001                     ___xxtofl@val:
   526                           	opt callstack 0
   527  000001                     ___aodiv@dividend:
   528                           	opt callstack 0
   529  000001                     ___aomod@dividend:
   530                           	opt callstack 0
   531  000001                     ___lodiv@dividend:
   532                           	opt callstack 0
   533  000001                     ___lomod@dividend:
   534                           	opt callstack 0
   535                           
   536                           ; 8 bytes @ 0x0
   537  000001                     	ds	1
   538  000002                     write_op@address:
   539                           	opt callstack 0
   540  000002                     read_op@result:
   541                           	opt callstack 0
   542  000002                     set_duty_cycle@upper_8:
   543                           	opt callstack 0
   544                           
   545                           ; 1 bytes @ 0x1
   546  000002                     	ds	1
   547  000003                     ??_ADC_Read:
   548  000003                     ??_isupper:
   549  000003                     ??_isalpha:
   550  000003                     ??_isdigit:
   551  000003                     ??_isspace:
   552  000003                     ??_islower:
   553  000003                     ?_fgetc:
   554                           	opt callstack 0
   555  000003                     set_duty_cycle@mask:
   556                           	opt callstack 0
   557  000003                     ___wmul@multiplicand:
   558                           	opt callstack 0
   559  000003                     fputc@fp:
   560                           	opt callstack 0
   561  000003                     fgetc@fp:
   562                           	opt callstack 0
   563  000003                     strlen@a:
   564                           	opt callstack 0
   565  000003                     strncmp@_r:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x2
   569  000003                     	ds	2
   570  000005                     ??_fputc:
   571  000005                     ??_fgetc:
   572  000005                     ??___xxtofl:
   573  000005                     ADC_Read@channel:
   574                           	opt callstack 0
   575  000005                     ___wmul@product:
   576                           	opt callstack 0
   577  000005                     strncmp@n:
   578                           	opt callstack 0
   579  000005                     ___fladd@a:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x4
   583  000005                     	ds	2
   584  000007                     ??_strncmp:
   585  000007                     ?_toupper:
   586                           	opt callstack 0
   587  000007                     _isspace$1759:
   588                           	opt callstack 0
   589  000007                     toupper@c:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x6
   593  000007                     	ds	1
   594  000008                     ?_atoi:
   595                           	opt callstack 0
   596  000008                     atoi@s:
   597                           	opt callstack 0
   598  000008                     strncmp@l:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x7
   602  000008                     	ds	1
   603  000009                     ??_toupper:
   604  000009                     ??___fladd:
   605  000009                     ___xxtofl@sign:
   606                           	opt callstack 0
   607  000009                     ___aodiv@divisor:
   608                           	opt callstack 0
   609  000009                     ___aomod@divisor:
   610                           	opt callstack 0
   611  000009                     ___lodiv@divisor:
   612                           	opt callstack 0
   613  000009                     ___lomod@divisor:
   614                           	opt callstack 0
   615                           
   616                           ; 8 bytes @ 0x8
   617  000009                     	ds	1
   618  00000A                     ??_atoi:
   619  00000A                     ?_stoa:
   620                           	opt callstack 0
   621  00000A                     ___xxtofl@exp:
   622                           	opt callstack 0
   623  00000A                     stoa@fp:
   624                           	opt callstack 0
   625  00000A                     fputs@s:
   626                           	opt callstack 0
   627  00000A                     fgetc@c:
   628                           	opt callstack 0
   629  00000A                     strncmp@r:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x9
   633  00000A                     	ds	1
   634  00000B                     ___xxtofl@arg:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0xA
   638  00000B                     	ds	1
   639  00000C                     stoa@s:
   640                           	opt callstack 0
   641  00000C                     fputs@fp:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xB
   645  00000C                     	ds	1
   646  00000D                     ___fladd@signs:
   647                           	opt callstack 0
   648  00000D                     _toupper$1879:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0xC
   652  00000D                     	ds	1
   653  00000E                     ??_stoa:
   654  00000E                     ___fladd@aexp:
   655                           	opt callstack 0
   656  00000E                     fputs@c:
   657                           	opt callstack 0
   658  00000E                     atoi@neg:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0xD
   662  00000E                     	ds	1
   663  00000F                     ?___flmul:
   664                           	opt callstack 0
   665  00000F                     ___fladd@bexp:
   666                           	opt callstack 0
   667  00000F                     fputs@i:
   668                           	opt callstack 0
   669  00000F                     ___flmul@b:
   670                           	opt callstack 0
   671  00000F                     stoa@nuls:
   672                           	opt callstack 0
   673                           
   674                           ; 7 bytes @ 0xE
   675  00000F                     	ds	1
   676  000010                     ___fladd@grs:
   677                           	opt callstack 0
   678  000010                     _atoi$1722:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0xF
   682  000010                     	ds	1
   683  000011                     ?_pad:
   684                           	opt callstack 0
   685  000011                     ___aodiv@counter:
   686                           	opt callstack 0
   687  000011                     ___aomod@counter:
   688                           	opt callstack 0
   689  000011                     ___lomod@counter:
   690                           	opt callstack 0
   691  000011                     pad@fp:
   692                           	opt callstack 0
   693  000011                     ___lodiv@quotient:
   694                           	opt callstack 0
   695                           
   696                           ; 8 bytes @ 0x10
   697  000011                     	ds	1
   698  000012                     ___aodiv@sign:
   699                           	opt callstack 0
   700  000012                     ___aomod@sign:
   701                           	opt callstack 0
   702  000012                     _atoi$1724:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x11
   706  000012                     	ds	1
   707  000013                     ?_abs:
   708                           	opt callstack 0
   709  000013                     pad@buf:
   710                           	opt callstack 0
   711  000013                     abs@a:
   712                           	opt callstack 0
   713  000013                     ___flmul@a:
   714                           	opt callstack 0
   715  000013                     ___aodiv@quotient:
   716                           	opt callstack 0
   717                           
   718                           ; 8 bytes @ 0x12
   719  000013                     	ds	1
   720  000014                     _atoi$1723:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x13
   724  000014                     	ds	1
   725  000015                     ??_abs:
   726  000015                     pad@p:
   727                           	opt callstack 0
   728  000015                     atoi@n:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x14
   732  000015                     	ds	1
   733  000016                     stoa@i:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x15
   737  000016                     	ds	1
   738  000017                     ??___flmul:
   739  000017                     ??_pad:
   740                           
   741                           ; 1 bytes @ 0x16
   742  000017                     	ds	1
   743  000018                     pad@i:
   744                           	opt callstack 0
   745  000018                     stoa@w:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x17
   749  000018                     	ds	1
   750  000019                     ___lodiv@counter:
   751                           	opt callstack 0
   752                           
   753                           ; 1 bytes @ 0x18
   754  000019                     	ds	1
   755  00001A                     pad@w:
   756                           	opt callstack 0
   757  00001A                     stoa@cp:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x19
   761  00001A                     	ds	1
   762  00001B                     ___flmul@sign:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x1A
   766  00001B                     	ds	1
   767  00001C                     ?_ctoa:
   768                           	opt callstack 0
   769  00001C                     ?_dtoa:
   770                           	opt callstack 0
   771  00001C                     ?_otoa:
   772                           	opt callstack 0
   773  00001C                     ?_utoa:
   774                           	opt callstack 0
   775  00001C                     ?_xtoa:
   776                           	opt callstack 0
   777  00001C                     ctoa@fp:
   778                           	opt callstack 0
   779  00001C                     dtoa@fp:
   780                           	opt callstack 0
   781  00001C                     otoa@fp:
   782                           	opt callstack 0
   783  00001C                     stoa@p:
   784                           	opt callstack 0
   785  00001C                     utoa@fp:
   786                           	opt callstack 0
   787  00001C                     xtoa@fp:
   788                           	opt callstack 0
   789  00001C                     ___flmul@grs:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x1B
   793  00001C                     	ds	2
   794  00001E                     ctoa@c:
   795                           	opt callstack 0
   796  00001E                     stoa@l:
   797                           	opt callstack 0
   798  00001E                     dtoa@d:
   799                           	opt callstack 0
   800  00001E                     otoa@d:
   801                           	opt callstack 0
   802  00001E                     utoa@d:
   803                           	opt callstack 0
   804  00001E                     xtoa@d:
   805                           	opt callstack 0
   806                           
   807                           ; 8 bytes @ 0x1D
   808  00001E                     	ds	1
   809  00001F                     ctoa@w:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x1E
   813  00001F                     	ds	1
   814  000020                     ___flmul@aexp:
   815                           	opt callstack 0
   816                           
   817                           ; 1 bytes @ 0x1F
   818  000020                     	ds	1
   819  000021                     ___flmul@bexp:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0x20
   823  000021                     	ds	1
   824  000022                     ___flmul@prod:
   825                           	opt callstack 0
   826                           
   827                           ; 4 bytes @ 0x21
   828  000022                     	ds	4
   829  000026                     ??_dtoa:
   830  000026                     ??_otoa:
   831  000026                     ??_utoa:
   832  000026                     xtoa@x:
   833                           	opt callstack 0
   834  000026                     ___flmul@temp:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x25
   838  000026                     	ds	1
   839  000027                     ??_xtoa:
   840                           
   841                           ; 1 bytes @ 0x26
   842  000027                     	ds	1
   843  000028                     ?___flsub:
   844                           	opt callstack 0
   845  000028                     ___flsub@b:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x27
   849  000028                     	ds	4
   850  00002C                     ___flsub@a:
   851                           	opt callstack 0
   852                           
   853                           ; 4 bytes @ 0x2B
   854  00002C                     	ds	2
   855  00002E                     _dtoa$1076:
   856                           	opt callstack 0
   857  00002E                     otoa@p:
   858                           	opt callstack 0
   859  00002E                     utoa@p:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x2D
   863  00002E                     	ds	1
   864  00002F                     _xtoa$1112:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x2E
   868  00002F                     	ds	1
   869  000030                     ?_get_temp:
   870                           	opt callstack 0
   871  000030                     dtoa@p:
   872                           	opt callstack 0
   873  000030                     otoa@t:
   874                           	opt callstack 0
   875  000030                     utoa@w:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x2F
   879  000030                     	ds	1
   880  000031                     _xtoa$1113:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x30
   884  000031                     	ds	1
   885  000032                     dtoa@w:
   886                           	opt callstack 0
   887  000032                     otoa@w:
   888                           	opt callstack 0
   889  000032                     utoa@n:
   890                           	opt callstack 0
   891                           
   892                           ; 8 bytes @ 0x31
   893  000032                     	ds	1
   894  000033                     xtoa@p:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x32
   898  000033                     	ds	1
   899  000034                     dtoa@s:
   900                           	opt callstack 0
   901  000034                     get_temp@real_voltage:
   902                           	opt callstack 0
   903  000034                     otoa@n:
   904                           	opt callstack 0
   905                           
   906                           ; 8 bytes @ 0x33
   907  000034                     	ds	1
   908  000035                     xtoa@w:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x34
   912  000035                     	ds	1
   913  000036                     dtoa@n:
   914                           	opt callstack 0
   915                           
   916                           ; 8 bytes @ 0x35
   917  000036                     	ds	1
   918  000037                     xtoa@n:
   919                           	opt callstack 0
   920                           
   921                           ; 8 bytes @ 0x36
   922  000037                     	ds	1
   923  000038                     get_temp@temp:
   924                           	opt callstack 0
   925                           
   926                           ; 4 bytes @ 0x37
   927  000038                     	ds	2
   928  00003A                     utoa@i:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x39
   932  00003A                     	ds	2
   933  00003C                     get_temp@adc_voltage:
   934                           	opt callstack 0
   935  00003C                     otoa@i:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x3B
   939  00003C                     	ds	2
   940  00003E                     ?___fltol:
   941                           	opt callstack 0
   942  00003E                     dtoa@i:
   943                           	opt callstack 0
   944  00003E                     ___fltol@f1:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x3D
   948  00003E                     	ds	1
   949  00003F                     xtoa@i:
   950                           	opt callstack 0
   951                           
   952                           ; 2 bytes @ 0x3E
   953  00003F                     	ds	2
   954  000041                     xtoa@c:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x40
   958  000041                     	ds	1
   959  000042                     ??___fltol:
   960                           
   961                           ; 1 bytes @ 0x41
   962  000042                     	ds	1
   963  000043                     ?_vfpfcnvrt:
   964                           	opt callstack 0
   965  000043                     vfpfcnvrt@fp:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x42
   969  000043                     	ds	2
   970  000045                     vfpfcnvrt@fmt:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x44
   974  000045                     	ds	1
   975  000046                     ___fltol@sign1:
   976                           	opt callstack 0
   977                           
   978                           ; 1 bytes @ 0x45
   979  000046                     	ds	1
   980  000047                     ___fltol@exp1:
   981                           	opt callstack 0
   982  000047                     vfpfcnvrt@ap:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0x46
   986  000047                     	ds	2
   987  000049                     ??_vfpfcnvrt:
   988                           
   989                           ; 1 bytes @ 0x48
   990  000049                     	ds	14
   991  000057                     vfpfcnvrt@cp:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x56
   995  000057                     	ds	2
   996  000059                     vfpfcnvrt@done:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x58
  1000  000059                     	ds	2
  1001  00005B                     _vfpfcnvrt$1127:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x5A
  1005  00005B                     	ds	2
  1006  00005D                     _vfpfcnvrt$1128:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x5C
  1010  00005D                     	ds	2
  1011  00005F                     vfpfcnvrt@ll:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x5E
  1015  00005F                     	ds	8
  1016  000067                     vfpfcnvrt@vp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x66
  1020  000067                     	ds	2
  1021  000069                     vfpfcnvrt@c:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x68
  1025  000069                     	ds	1
  1026  00006A                     vfpfcnvrt@llu:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x69
  1030  00006A                     	ds	8
  1031  000072                     ?_vfprintf:
  1032                           	opt callstack 0
  1033  000072                     vfprintf@fp:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x71
  1037  000072                     	ds	2
  1038  000074                     vfprintf@fmt:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x73
  1042  000074                     	ds	2
  1043  000076                     vfprintf@ap:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x75
  1047  000076                     	ds	2
  1048  000078                     vfprintf@cfmt:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x77
  1052  000078                     	ds	2
  1053  00007A                     ?_int_to_char:
  1054                           	opt callstack 0
  1055  00007A                     int_to_char@num:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x79
  1059  00007A                     	ds	4
  1060  00007E                     
  1061                           ; 1 bytes @ 0x7D
  1062 ;;
  1063 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1064 ;;
  1065 ;; *************** function _main *****************
  1066 ;; Defined at:
  1067 ;;		line 26 in file "main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  stored_temp     2   42[BANK0 ] int 
  1072 ;;  temp            2   40[BANK0 ] int 
  1073 ;;  i               2   49[BANK0 ] int 
  1074 ;;  i               2   46[BANK0 ] int 
  1075 ;;  input           1   48[BANK0 ] unsigned char 
  1076 ;;  address         2   44[BANK0 ] int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1086 ;;      Params:         0       0       0       0       0       0       0
  1087 ;;      Locals:         0      11       0       0       0       0       0
  1088 ;;      Temps:          0       2       0       0       0       0       0
  1089 ;;      Totals:         0      13       0       0       0       0       0
  1090 ;;Total ram usage:       13 bytes
  1091 ;; Hardware stack levels required when called:   11
  1092 ;; This function calls:
  1093 ;;		_Timer0_Init
  1094 ;;		_Timer0_StartTimer
  1095 ;;		_UARTNewLine
  1096 ;;		_UARTRecieveChar
  1097 ;;		_UARTSendString
  1098 ;;		___fltol
  1099 ;;		_get_temp
  1100 ;;		_initialize_PWM
  1101 ;;		_initialize_RX
  1102 ;;		_initialize_TX
  1103 ;;		_int_to_char
  1104 ;;		_read_op
  1105 ;;		_set_duty_cycle
  1106 ;;		_write_op
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text0
  1113  002542                     __ptext0:
  1114                           	opt callstack 0
  1115  002542                     _main:
  1116                           	opt callstack 0
  1117  002542  FFFF               	dw	65535	; assembler added errata NOP
  1118                           
  1119                           ;main.c: 27:   TRISCbits.TRISC2 = 0;
  1120                           
  1121                           ;incstack = 0
  1122  002544  9494               	bcf	3988,2,c	;volatile
  1123                           
  1124                           ;main.c: 28:   TMR2IE = 1;
  1125  002546  829D               	bsf	3997,1,c	;volatile
  1126                           
  1127                           ;main.c: 29:   TMR2IP = 1;
  1128  002548  829F               	bsf	3999,1,c	;volatile
  1129                           
  1130                           ;main.c: 30:   RCONbits.IPEN = 1;
  1131  00254A  8ED0               	bsf	4048,7,c	;volatile
  1132                           
  1133                           ;main.c: 31:   initialize_PWM(0xFF);
  1134  00254C  0E00               	movlw	0
  1135  00254E  6E02               	movwf	initialize_PWM@freq+1,c
  1136  002550  6801               	setf	initialize_PWM@freq,c
  1137  002552  EC60  F01D         	call	_initialize_PWM	;wreg free
  1138                           
  1139                           ;main.c: 32:   set_duty_cycle(0xA0, 0x03);
  1140  002556  0E03               	movlw	3
  1141  002558  6E01               	movwf	set_duty_cycle@lower_2,c
  1142  00255A  0EA0               	movlw	160
  1143  00255C  EC3E  F01D         	call	_set_duty_cycle
  1144                           
  1145                           ;main.c: 33:   int address = 0;
  1146  002560  0E00               	movlw	0
  1147  002562  0100               	movlb	0	; () banked
  1148  002564  6FE8               	movwf	(main@address+1)& (0+255),b
  1149  002566  0E00               	movlw	0
  1150  002568  6FE7               	movwf	main@address& (0+255),b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 34:   Timer0_Init();
  1154  00256A  EC1A  F01D         	call	_Timer0_Init	;wreg free
  1155                           
  1156                           ;main.c: 35:   Timer0_StartTimer();
  1157  00256E  ECA9  F01D         	call	_Timer0_StartTimer	;wreg free
  1158                           
  1159                           ;main.c: 36:   initialize_TX();
  1160  002572  EC6C  F01D         	call	_initialize_TX	;wreg free
  1161                           
  1162                           ;main.c: 37:   initialize_RX();
  1163  002576  EC76  F01D         	call	_initialize_RX	;wreg free
  1164                           
  1165                           ;main.c: 38:   TRISCbits.TRISC7 = 1;
  1166  00257A  8E94               	bsf	3988,7,c	;volatile
  1167                           
  1168                           ;main.c: 39:   TRISCbits.TRISC6 = 0;
  1169  00257C  9C94               	bcf	3988,6,c	;volatile
  1170  00257E                     l5026:
  1171  00257E  FFFF               	dw	65535	; assembler added errata NOP
  1172                           
  1173                           ;main.c: 41:     char input = ' ';
  1174  002580  0E20               	movlw	32
  1175  002582  D003               	goto	L1
  1176  002584                     l5028:
  1177  002584  FFFF               	dw	65535	; assembler added errata NOP
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 43:       input = UARTRecieveChar();
  1181  002586  ECEF  F01C         	call	_UARTRecieveChar	;wreg free
  1182  00258A                     L1:
  1183  00258A  FFFF               	dw	65535	; assembler added errata NOP
  1184  00258C  0100               	movlb	0	; () banked
  1185  00258E  6FEB               	movwf	main@input& (0+255),b
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 42:     while (input < 'a' || input > 'z') {
  1189  002590  0E60               	movlw	96
  1190  002592  65EB               	cpfsgt	main@input& (0+255),b
  1191  002594  D7F7               	goto	l5028
  1192                           
  1193                           ; BSR set to: 0
  1194  002596  0E7B               	movlw	123
  1195  002598  61EB               	cpfslt	main@input& (0+255),b
  1196  00259A  D7F4               	goto	l5028
  1197  00259C  D09B               	goto	l5076
  1198  00259E                     l5034:
  1199  00259E  FFFF               	dw	65535	; assembler added errata NOP
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;main.c: 47:       for (int i = 0; i < 16; i++) {
  1203  0025A0  0E00               	movlw	0
  1204  0025A2  6FEA               	movwf	(main@i+1)& (0+255),b
  1205  0025A4  0E00               	movlw	0
  1206  0025A6  6FE9               	movwf	main@i& (0+255),b
  1207  0025A8                     l5040:
  1208  0025A8  FFFF               	dw	65535	; assembler added errata NOP
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 48:         int temp = (int) get_temp();
  1212  0025AA  EC69  F018         	call	_get_temp	;wreg free
  1213  0025AE  C030  F03E         	movff	?_get_temp,___fltol@f1
  1214  0025B2  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1215  0025B6  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1216  0025BA  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1217  0025BE  ECFF  F017         	call	___fltol	;wreg free
  1218  0025C2  C03E  F0E3         	movff	?___fltol,main@temp
  1219  0025C6  C03F  F0E4         	movff	?___fltol+1,main@temp+1
  1220                           
  1221                           ;main.c: 49:         write_op(i, temp);
  1222  0025CA  C0E3  F001         	movff	main@temp,write_op@data
  1223  0025CE  0100               	movlb	0	; () banked
  1224  0025D0  51E9               	movf	main@i& (0+255),w,b
  1225  0025D2  EC2D  F01D         	call	_write_op
  1226                           
  1227                           ;main.c: 50:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1228  0025D6  0E02               	movlw	2
  1229  0025D8  0100               	movlb	0	; () banked
  1230  0025DA  6FE2               	movwf	(??_main+1)& (0+255),b
  1231  0025DC  0E86               	movlw	134
  1232  0025DE  6FE1               	movwf	??_main& (0+255),b
  1233  0025E0  0EDA               	movlw	218
  1234  0025E2                     u5397:
  1235  0025E2  FFFF               	dw	65535	; errata NOP
  1236  0025E4  2EE8               	decfsz	wreg,f,c
  1237  0025E6  D7FD               	bra	u5397
  1238  0025E8  2FE1               	decfsz	??_main& (0+255),f,b
  1239  0025EA  D7FB               	bra	u5397
  1240  0025EC  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1241  0025EE  D7F9               	bra	u5397
  1242  0025F0  D000               	nop2	
  1243  0025F2  F000               	nop	
  1244                           
  1245                           ;main.c: 51:       }
  1246  0025F4  0100               	movlb	0	; () banked
  1247  0025F6  4BE9               	infsnz	main@i& (0+255),f,b
  1248  0025F8  2BEA               	incf	(main@i+1)& (0+255),f,b
  1249                           
  1250                           ; BSR set to: 0
  1251  0025FA  BFEA               	btfsc	(main@i+1)& (0+255),7,b
  1252  0025FC  D7D5               	goto	l5040
  1253  0025FE  51EA               	movf	(main@i+1)& (0+255),w,b
  1254  002600  E104               	bnz	u5350
  1255  002602  0E10               	movlw	16
  1256  002604  5DE9               	subwf	main@i& (0+255),w,b
  1257  002606  A0D8               	btfss	status,0,c
  1258  002608  D7CF               	goto	l5040
  1259  00260A                     u5350:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 61:       for (int i = 0; i < 16; i++) {
  1263  00260A  0E00               	movlw	0
  1264  00260C  6FED               	movwf	(main@i_335+1)& (0+255),b
  1265  00260E  0E00               	movlw	0
  1266  002610  6FEC               	movwf	main@i_335& (0+255),b
  1267  002612                     l5056:
  1268  002612  FFFF               	dw	65535	; assembler added errata NOP
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main.c: 62:         int stored_temp = read_op(i);
  1272  002614  51EC               	movf	main@i_335& (0+255),w,b
  1273  002616  EC4F  F01D         	call	_read_op
  1274  00261A  0100               	movlb	0	; () banked
  1275  00261C  6FE1               	movwf	??_main& (0+255),b
  1276  00261E  51E1               	movf	??_main& (0+255),w,b
  1277  002620  6FE5               	movwf	main@stored_temp& (0+255),b
  1278  002622  6BE6               	clrf	(main@stored_temp+1)& (0+255),b
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;main.c: 63:         address = (address + 1) % 8;
  1282  002624  0E01               	movlw	1
  1283  002626  25E7               	addwf	main@address& (0+255),w,b
  1284  002628  6FE1               	movwf	??_main& (0+255),b
  1285  00262A  0E00               	movlw	0
  1286  00262C  21E8               	addwfc	(main@address+1)& (0+255),w,b
  1287  00262E  6FE2               	movwf	(??_main+1)& (0+255),b
  1288  002630  0E07               	movlw	7
  1289  002632  15E1               	andwf	??_main& (0+255),w,b
  1290  002634  6FE7               	movwf	main@address& (0+255),b
  1291  002636  6BE8               	clrf	(main@address+1)& (0+255),b
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;main.c: 65:         TRISCbits.TRISC7 = 0;
  1295  002638  9E94               	bcf	3988,7,c	;volatile
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;main.c: 66:         UARTSendString("Address ");
  1299  00263A  0E01               	movlw	low STR_3
  1300  00263C  6FDB               	movwf	UARTSendString@c& (0+255),b
  1301  00263E  0E06               	movlw	high STR_3
  1302  002640  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1303  002642  EC7D  F01A         	call	_UARTSendString	;wreg free
  1304                           
  1305                           ;main.c: 67:         UARTSendString(int_to_char(i));
  1306  002646  C0EC  F07A         	movff	main@i_335,int_to_char@num
  1307  00264A  C0ED  F07B         	movff	main@i_335+1,int_to_char@num+1
  1308  00264E  0E00               	movlw	0
  1309  002650  BE7B               	btfsc	int_to_char@num+1,7,c
  1310  002652  0EFF               	movlw	-1
  1311  002654  6E7C               	movwf	int_to_char@num+2,c
  1312  002656  6E7D               	movwf	int_to_char@num+3,c
  1313  002658  ECC1  F01B         	call	_int_to_char	;wreg free
  1314  00265C  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1315  002660  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1316  002664  EC7D  F01A         	call	_UARTSendString	;wreg free
  1317                           
  1318                           ;main.c: 68:         UARTSendString(": ");
  1319  002668  0E51               	movlw	low STR_4
  1320  00266A  0100               	movlb	0	; () banked
  1321  00266C  6FDB               	movwf	UARTSendString@c& (0+255),b
  1322  00266E  0E06               	movlw	high STR_4
  1323  002670  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1324  002672  EC7D  F01A         	call	_UARTSendString	;wreg free
  1325                           
  1326                           ;main.c: 69:         UARTSendString(int_to_char(stored_temp));
  1327  002676  C0E5  F07A         	movff	main@stored_temp,int_to_char@num
  1328  00267A  C0E6  F07B         	movff	main@stored_temp+1,int_to_char@num+1
  1329  00267E  0E00               	movlw	0
  1330  002680  BE7B               	btfsc	int_to_char@num+1,7,c
  1331  002682  0EFF               	movlw	-1
  1332  002684  6E7C               	movwf	int_to_char@num+2,c
  1333  002686  6E7D               	movwf	int_to_char@num+3,c
  1334  002688  ECC1  F01B         	call	_int_to_char	;wreg free
  1335  00268C  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1336  002690  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1337  002694  EC7D  F01A         	call	_UARTSendString	;wreg free
  1338                           
  1339                           ;main.c: 70:         UARTNewLine();
  1340  002698  EC80  F01D         	call	_UARTNewLine	;wreg free
  1341                           
  1342                           ;main.c: 71:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1343  00269C  0E02               	movlw	2
  1344  00269E  0100               	movlb	0	; () banked
  1345  0026A0  6FE2               	movwf	(??_main+1)& (0+255),b
  1346  0026A2  0E86               	movlw	134
  1347  0026A4  6FE1               	movwf	??_main& (0+255),b
  1348  0026A6  0EDA               	movlw	218
  1349  0026A8                     u5407:
  1350  0026A8  FFFF               	dw	65535	; errata NOP
  1351  0026AA  2EE8               	decfsz	wreg,f,c
  1352  0026AC  D7FD               	bra	u5407
  1353  0026AE  2FE1               	decfsz	??_main& (0+255),f,b
  1354  0026B0  D7FB               	bra	u5407
  1355  0026B2  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1356  0026B4  D7F9               	bra	u5407
  1357  0026B6  D000               	nop2	
  1358  0026B8  F000               	nop	
  1359                           
  1360                           ;main.c: 74:       }
  1361  0026BA  0100               	movlb	0	; () banked
  1362  0026BC  4BEC               	infsnz	main@i_335& (0+255),f,b
  1363  0026BE  2BED               	incf	(main@i_335+1)& (0+255),f,b
  1364  0026C0  BFED               	btfsc	(main@i_335+1)& (0+255),7,b
  1365  0026C2  D7A7               	goto	l5056
  1366  0026C4  51ED               	movf	(main@i_335+1)& (0+255),w,b
  1367  0026C6  E104               	bnz	u5360
  1368  0026C8  0E10               	movlw	16
  1369  0026CA  5DEC               	subwf	main@i_335& (0+255),w,b
  1370  0026CC  A0D8               	btfss	status,0,c
  1371  0026CE  D7A1               	goto	l5056
  1372  0026D0                     u5360:
  1373  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  1374                           
  1375                           ;main.c: 75:       while (1);
  1376  0026D2  D7FE               	goto	u5360
  1377  0026D4                     l5076:
  1378  0026D4  FFFF               	dw	65535	; assembler added errata NOP
  1379                           
  1380                           ; BSR set to: 0
  1381  0026D6  51EB               	movf	main@input& (0+255),w,b
  1382  0026D8  6FE1               	movwf	??_main& (0+255),b
  1383  0026DA  6BE2               	clrf	(??_main+1)& (0+255),b
  1384                           
  1385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 1, Range of values is 0 to 0
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            4     3 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392  0026DC  51E2               	movf	(??_main+1)& (0+255),w,b
  1393  0026DE  0A00               	xorlw	0	; case 0
  1394  0026E0  A4D8               	btfss	status,2,c
  1395  0026E2  D74D               	goto	l5026
  1396                           
  1397                           ; BSR set to: 0
  1398                           ; Switch size 1, requested type "simple"
  1399                           ; Number of cases is 1, Range of values is 115 to 115
  1400                           ; switch strategies available:
  1401                           ; Name         Instructions Cycles
  1402                           ; simple_byte            4     3 (average)
  1403                           ;	Chosen strategy is simple_byte
  1404  0026E4  51E1               	movf	??_main& (0+255),w,b
  1405  0026E6  0A73               	xorlw	115	; case 115
  1406  0026E8  B4D8               	btfsc	status,2,c
  1407  0026EA  D759               	goto	l5034
  1408  0026EC  D748               	goto	l5026
  1409  0026EE                     __end_of_main:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _write_op *****************
  1413 ;; Defined at:
  1414 ;;		line 9 in file "drive_memory.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  address         1    wreg     unsigned char 
  1417 ;;  data            1    0[COMRAM] unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  address         1    1[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1429 ;;      Params:         1       0       0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    2
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text1
  1444  003A5A                     __ptext1:
  1445                           	opt callstack 0
  1446  003A5A                     _write_op:
  1447                           	opt callstack 0
  1448  003A5A  FFFF               	dw	65535	; assembler added errata NOP
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;incstack = 0
  1452                           ;write_op@address stored from wreg
  1453  003A5C  6E02               	movwf	write_op@address,c
  1454                           
  1455                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1456  003A5E  9094               	bcf	3988,0,c	;volatile
  1457                           
  1458                           ;drive_memory.c: 12:   TRISD = 0x00;
  1459  003A60  0E00               	movlw	0
  1460  003A62  6E95               	movwf	3989,c	;volatile
  1461                           
  1462                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1463  003A64  0EC0               	movlw	192
  1464  003A66  1693               	andwf	3987,f,c	;volatile
  1465                           
  1466                           ;drive_memory.c: 14:   PORTB = address;
  1467  003A68  C002  FF81         	movff	write_op@address,3969	;volatile
  1468                           
  1469                           ;drive_memory.c: 15:   RB5 = 0;
  1470  003A6C  9A81               	bcf	3969,5,c	;volatile
  1471                           
  1472                           ;drive_memory.c: 17:   RC0 = 1;
  1473  003A6E  8082               	bsf	3970,0,c	;volatile
  1474                           
  1475                           ;drive_memory.c: 21:   RC0 = 0;
  1476  003A70  9082               	bcf	3970,0,c	;volatile
  1477                           
  1478                           ;drive_memory.c: 23:   PORTD = data;
  1479                           
  1480                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1481  003A72  C001  FF83         	movff	write_op@data,3971	;volatile
  1482                           
  1483                           ;drive_memory.c: 26:   RC0 = 1;
  1484                           
  1485                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1486  003A76  8082               	bsf	3970,0,c	;volatile
  1487  003A78  0012               	return		;funcret
  1488  003A7A  FFFF               	dw	65535	; errata NOP
  1489  003A7C                     __end_of_write_op:
  1490                           	opt callstack 0
  1491                           
  1492 ;; *************** function _set_duty_cycle *****************
  1493 ;; Defined at:
  1494 ;;		line 18 in file "pwm.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  upper_8         1    wreg     unsigned char 
  1497 ;;  lower_2         1    0[COMRAM] unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  upper_8         1    1[COMRAM] unsigned char 
  1500 ;;  mask            1    2[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1510 ;;      Params:         1       0       0       0       0       0       0
  1511 ;;      Locals:         2       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0
  1513 ;;      Totals:         3       0       0       0       0       0       0
  1514 ;;Total ram usage:        3 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    2
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text2
  1525  003A7C                     __ptext2:
  1526                           	opt callstack 0
  1527  003A7C                     _set_duty_cycle:
  1528                           	opt callstack 0
  1529  003A7C  FFFF               	dw	65535	; assembler added errata NOP
  1530                           
  1531                           ;incstack = 0
  1532                           ;set_duty_cycle@upper_8 stored from wreg
  1533  003A7E  6E02               	movwf	set_duty_cycle@upper_8,c
  1534                           
  1535                           ;pwm.c: 19:   CCPR1L = upper_8;
  1536  003A80  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  1537                           
  1538                           ;pwm.c: 20:   char mask = 0;
  1539  003A84  0E00               	movlw	0
  1540  003A86  6E03               	movwf	set_duty_cycle@mask,c
  1541                           
  1542                           ;pwm.c: 21:   mask |= lower_2;
  1543  003A88  5001               	movf	set_duty_cycle@lower_2,w,c
  1544  003A8A  1203               	iorwf	set_duty_cycle@mask,f,c
  1545                           
  1546                           ;pwm.c: 22:   mask = mask << 4;
  1547  003A8C  3803               	swapf	set_duty_cycle@mask,w,c
  1548  003A8E  0BF0               	andlw	240
  1549  003A90  6E03               	movwf	set_duty_cycle@mask,c
  1550                           
  1551                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  1552  003A92  50BD               	movf	4029,w,c	;volatile
  1553  003A94  0BCF               	andlw	207
  1554  003A96  1003               	iorwf	set_duty_cycle@mask,w,c
  1555  003A98  6EBD               	movwf	4029,c	;volatile
  1556  003A9A  0012               	return		;funcret
  1557  003A9C  FFFF               	dw	65535	; errata NOP
  1558  003A9E                     __end_of_set_duty_cycle:
  1559                           	opt callstack 0
  1560                           
  1561 ;; *************** function _read_op *****************
  1562 ;; Defined at:
  1563 ;;		line 30 in file "drive_memory.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  address         1    wreg     unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  address         1    0[COMRAM] unsigned char 
  1568 ;;  result          1    1[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      unsigned char 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         0       0       0       0       0       0       0
  1579 ;;      Locals:         2       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:         2       0       0       0       0       0       0
  1582 ;;Total ram usage:        2 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    2
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text3
  1593  003A9E                     __ptext3:
  1594                           	opt callstack 0
  1595  003A9E                     _read_op:
  1596                           	opt callstack 0
  1597  003A9E  FFFF               	dw	65535	; assembler added errata NOP
  1598                           
  1599                           ;incstack = 0
  1600                           ;read_op@address stored from wreg
  1601  003AA0  6E01               	movwf	read_op@address,c
  1602                           
  1603                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  1604  003AA2  9094               	bcf	3988,0,c	;volatile
  1605                           
  1606                           ;drive_memory.c: 33:   TRISD = 0xFF;
  1607  003AA4  6895               	setf	3989,c	;volatile
  1608                           
  1609                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  1610  003AA6  0EC0               	movlw	192
  1611  003AA8  1693               	andwf	3987,f,c	;volatile
  1612                           
  1613                           ;drive_memory.c: 35:   PORTB = address;
  1614  003AAA  C001  FF81         	movff	read_op@address,3969	;volatile
  1615                           
  1616                           ;drive_memory.c: 36:   RB5 = 1;
  1617  003AAE  8A81               	bsf	3969,5,c	;volatile
  1618                           
  1619                           ;drive_memory.c: 38:   RC0 = 1;
  1620  003AB0  8082               	bsf	3970,0,c	;volatile
  1621                           
  1622                           ;drive_memory.c: 41:   RB5 = 0;
  1623  003AB2  9A81               	bcf	3969,5,c	;volatile
  1624                           
  1625                           ;drive_memory.c: 45:   RB5 = 1;
  1626                           
  1627                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  1628  003AB4  8A81               	bsf	3969,5,c	;volatile
  1629                           
  1630                           ;drive_memory.c: 46:   char result = PORTD;
  1631  003AB6  CF83 F002          	movff	3971,read_op@result	;volatile
  1632                           
  1633                           ;drive_memory.c: 47:   return result;
  1634  003ABA  5002               	movf	read_op@result,w,c
  1635  003ABC  0012               	return		;funcret
  1636  003ABE  FFFF               	dw	65535	; errata NOP
  1637  003AC0                     __end_of_read_op:
  1638                           	opt callstack 0
  1639                           
  1640 ;; *************** function _int_to_char *****************
  1641 ;; Defined at:
  1642 ;;		line 18 in file "lcd.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  num             4  121[COMRAM] unsigned long 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  result         10   18[BANK0 ] unsigned char [10]
  1647 ;;  the_num         4   28[BANK0 ] unsigned long 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2  121[COMRAM] PTR unsigned char 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1657 ;;      Params:         4       0       0       0       0       0       0
  1658 ;;      Locals:         0      14       0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0
  1660 ;;      Totals:         4      14       0       0       0       0       0
  1661 ;;Total ram usage:       18 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:   10
  1664 ;; This function calls:
  1665 ;;		_getchar
  1666 ;;		_sprintf
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text4
  1673  003782                     __ptext4:
  1674                           	opt callstack 0
  1675  003782                     _int_to_char:
  1676                           	opt callstack 0
  1677  003782  FFFF               	dw	65535	; assembler added errata NOP
  1678                           
  1679                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1680                           
  1681                           ;incstack = 0
  1682  003784  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  1683  003788  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  1684  00378C  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  1685  003790  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  1686                           
  1687                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1688  003794  0ECD               	movlw	low int_to_char@result
  1689  003796  0100               	movlb	0	; () banked
  1690  003798  6FBB               	movwf	sprintf@s& (0+255),b
  1691  00379A  0E00               	movlw	high int_to_char@result
  1692  00379C  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  1693  00379E  0E26               	movlw	low STR_1
  1694  0037A0  6FBD               	movwf	sprintf@fmt& (0+255),b
  1695  0037A2  0E06               	movlw	high STR_1
  1696  0037A4  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  1697  0037A6  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  1698  0037AA  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  1699  0037AE  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  1700  0037B2  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  1701  0037B6  ECF1  F01A         	call	_sprintf	;wreg free
  1702                           
  1703                           ;lcd.c: 22:   getchar();
  1704  0037BA  EC94  F01D         	call	_getchar	;wreg free
  1705                           
  1706                           ;lcd.c: 23:   return result;
  1707  0037BE  0ECD               	movlw	low int_to_char@result
  1708  0037C0  6E7A               	movwf	?_int_to_char,c
  1709  0037C2  0E00               	movlw	high int_to_char@result
  1710  0037C4  6E7B               	movwf	?_int_to_char+1,c
  1711  0037C6  0012               	return		;funcret
  1712  0037C8  FFFF               	dw	65535	; errata NOP
  1713  0037CA                     __end_of_int_to_char:
  1714                           	opt callstack 0
  1715                           
  1716 ;; *************** function _sprintf *****************
  1717 ;; Defined at:
  1718 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1721 ;;		 -> int_to_char@result(10), 
  1722 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1723 ;;		 -> STR_1(4), 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1726 ;;  ap              2   16[BANK0 ] PTR void [1]
  1727 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1728 ;;  ret             2    0        int 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    0[BANK0 ] int 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1738 ;;      Params:         0       8       0       0       0       0       0
  1739 ;;      Locals:         0      10       0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0
  1741 ;;      Totals:         0      18       0       0       0       0       0
  1742 ;;Total ram usage:       18 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    9
  1745 ;; This function calls:
  1746 ;;		_vfprintf
  1747 ;; This function is called by:
  1748 ;;		_int_to_char
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text5
  1753  0035E2                     __ptext5:
  1754                           	opt callstack 0
  1755  0035E2                     _sprintf:
  1756                           	opt callstack 0
  1757  0035E2  FFFF               	dw	65535	; assembler added errata NOP
  1758                           
  1759                           ;incstack = 0
  1760  0035E4  0EBF               	movlw	low (?_sprintf+4)
  1761  0035E6  0100               	movlb	0	; () banked
  1762  0035E8  6FCB               	movwf	sprintf@ap& (0+255),b
  1763  0035EA  0E00               	movlw	high (?_sprintf+4)
  1764  0035EC  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1765  0035EE  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  1766  0035F2  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  1767                           
  1768                           ; BSR set to: 0
  1769  0035F6  0E00               	movlw	0
  1770  0035F8  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  1771  0035FA  0E00               	movlw	0
  1772  0035FC  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  1773                           
  1774                           ; BSR set to: 0
  1775  0035FE  0E00               	movlw	0
  1776  003600  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  1777  003602  0E00               	movlw	0
  1778  003604  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  1779                           
  1780                           ; BSR set to: 0
  1781  003606  0EC5               	movlw	low sprintf@f
  1782  003608  6E72               	movwf	vfprintf@fp,c
  1783  00360A  0E00               	movlw	high sprintf@f
  1784  00360C  6E73               	movwf	vfprintf@fp+1,c
  1785  00360E  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  1786  003612  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1787  003616  0ECB               	movlw	low sprintf@ap
  1788  003618  6E76               	movwf	vfprintf@ap,c
  1789  00361A  0E00               	movlw	high sprintf@ap
  1790  00361C  6E77               	movwf	vfprintf@ap+1,c
  1791  00361E  ECC1  F01A         	call	_vfprintf	;wreg free
  1792  003622  0100               	movlb	0	; () banked
  1793  003624  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  1794  003626  25BB               	addwf	sprintf@s& (0+255),w,b
  1795  003628  6ED9               	movwf	fsr2l,c
  1796  00362A  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  1797  00362C  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1798  00362E  6EDA               	movwf	fsr2h,c
  1799  003630  0E00               	movlw	0
  1800  003632  6EDF               	movwf	indf2,c
  1801                           
  1802                           ; BSR set to: 0
  1803  003634  0012               	return		;funcret
  1804  003636  FFFF               	dw	65535	; errata NOP
  1805  003638                     __end_of_sprintf:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _vfprintf *****************
  1809 ;; Defined at:
  1810 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1813 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1814 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1815 ;;		 -> STR_2(3), STR_1(4), 
  1816 ;;  ap              2  117[COMRAM] PTR PTR void 
  1817 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1820 ;;		 -> STR_2(3), STR_1(4), 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2  113[COMRAM] int 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1830 ;;      Params:         6       0       0       0       0       0       0
  1831 ;;      Locals:         2       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0
  1833 ;;      Totals:         8       0       0       0       0       0       0
  1834 ;;Total ram usage:        8 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    8
  1837 ;; This function calls:
  1838 ;;		_vfpfcnvrt
  1839 ;; This function is called by:
  1840 ;;		_sprintf
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text6
  1845  003582                     __ptext6:
  1846                           	opt callstack 0
  1847  003582                     _vfprintf:
  1848                           	opt callstack 0
  1849  003582  FFFF               	dw	65535	; assembler added errata NOP
  1850                           
  1851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;incstack = 0
  1855  003584  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1856  003588  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1857                           
  1858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1859  00358C  0E00               	movlw	0
  1860  00358E  0100               	movlb	0	; () banked
  1861  003590  6F90               	movwf	(_nout+1)& (0+255),b
  1862  003592  0E00               	movlw	0
  1863  003594  6F8F               	movwf	_nout& (0+255),b
  1864                           
  1865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1866  003596  D014               	goto	l4244
  1867  003598                     l4242:
  1868  003598  FFFF               	dw	65535	; assembler added errata NOP
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1872  00359A  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1873  00359E  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1874  0035A2  0E78               	movlw	low vfprintf@cfmt
  1875  0035A4  6E45               	movwf	vfpfcnvrt@fmt,c
  1876  0035A6  0E00               	movlw	high vfprintf@cfmt
  1877  0035A8  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1878  0035AA  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1879  0035AE  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1880  0035B2  EC2C  F003         	call	_vfpfcnvrt	;wreg free
  1881  0035B6  5043               	movf	?_vfpfcnvrt,w,c
  1882  0035B8  0100               	movlb	0	; () banked
  1883  0035BA  278F               	addwf	_nout& (0+255),f,b
  1884  0035BC  5044               	movf	?_vfpfcnvrt+1,w,c
  1885  0035BE  2390               	addwfc	(_nout+1)& (0+255),f,b
  1886  0035C0                     l4244:
  1887  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1891  0035C2  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1892  0035C6  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1893  0035CA                     	if	0	;tblptru may be non-zero
  1894  0035CA                     	endif
  1895  0035CA                     	if	0	;tblptru may be non-zero
  1896  0035CA                     	endif
  1897  0035CA  0008               	tblrd		*
  1898  0035CC  FFFF               	dw	65535	; errata NOP
  1899  0035CE  50F5               	movf	tablat,w,c
  1900  0035D0  0900               	iorlw	0
  1901  0035D2  A4D8               	btfss	status,2,c
  1902  0035D4  D7E1               	goto	l4242
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1906  0035D6  C08F  F072         	movff	_nout,?_vfprintf
  1907  0035DA  C090  F073         	movff	_nout+1,?_vfprintf+1
  1908                           
  1909                           ; BSR set to: 0
  1910  0035DE  0012               	return		;funcret
  1911  0035E0  FFFF               	dw	65535	; errata NOP
  1912  0035E2                     __end_of_vfprintf:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _vfpfcnvrt *****************
  1916 ;; Defined at:
  1917 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1920 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1921 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1922 ;;		 -> vfprintf@cfmt(2), 
  1923 ;;  ap              2   70[COMRAM] PTR PTR void 
  1924 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  llu             8  105[COMRAM] unsigned long long 
  1927 ;;  ll              8   94[COMRAM] long long 
  1928 ;;  f               4    0        long long 
  1929 ;;  ct              3    0        unsigned char [3]
  1930 ;;  vp              2  102[COMRAM] PTR void 
  1931 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1932 ;;  done            2   88[COMRAM] int 
  1933 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1934 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1935 ;;  i               2    0        int 
  1936 ;;  c               1  104[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2   66[COMRAM] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         6       0       0       0       0       0       0
  1947 ;;      Locals:        27       0       0       0       0       0       0
  1948 ;;      Temps:         14       0       0       0       0       0       0
  1949 ;;      Totals:        47       0       0       0       0       0       0
  1950 ;;Total ram usage:       47 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    7
  1953 ;; This function calls:
  1954 ;;		_atoi
  1955 ;;		_ctoa
  1956 ;;		_dtoa
  1957 ;;		_fputc
  1958 ;;		_isdigit
  1959 ;;		_otoa
  1960 ;;		_stoa
  1961 ;;		_strncmp
  1962 ;;		_utoa
  1963 ;;		_xtoa
  1964 ;; This function is called by:
  1965 ;;		_vfprintf
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text7
  1970  000658                     __ptext7:
  1971                           	opt callstack 0
  1972  000658                     _vfpfcnvrt:
  1973                           	opt callstack 0
  1974  000658  FFFF               	dw	65535	; assembler added errata NOP
  1975                           
  1976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;incstack = 0
  1980  00065A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1981  00065E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1982  000662  CFDE FFF6          	movff	postinc2,tblptrl
  1983  000666  CFDD FFF7          	movff	postdec2,tblptrh
  1984  00066A                     	if	0	;tblptru may be non-zero
  1985  00066A                     	endif
  1986  00066A                     	if	0	;tblptru may be non-zero
  1987  00066A                     	endif
  1988  00066A  0008               	tblrd		*
  1989  00066C  FFFF               	dw	65535	; errata NOP
  1990  00066E  50F5               	movf	tablat,w,c
  1991  000670  0A25               	xorlw	37
  1992  000672  A4D8               	btfss	status,2,c
  1993  000674  EFDD  F00B         	goto	l4222
  1994                           
  1995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1996  000678  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1997  00067C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1998  000680  2ADE               	incf	postinc2,f,c
  1999  000682  0E00               	movlw	0
  2000  000684  22DD               	addwfc	postdec2,f,c
  2001                           
  2002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2003  000686  0E00               	movlw	0
  2004  000688  0100               	movlb	0	; () banked
  2005  00068A  6F92               	movwf	(_width+1)& (0+255),b
  2006  00068C  0E00               	movlw	0
  2007  00068E  6F91               	movwf	_width& (0+255),b
  2008  000690  C091  F095         	movff	_width,_flags
  2009  000694  C092  F096         	movff	_width+1,_flags+1
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2013  000698  6993               	setf	_prec& (0+255),b
  2014  00069A  6994               	setf	(_prec+1)& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  2018  00069C  0E00               	movlw	0
  2019  00069E  6E5A               	movwf	vfpfcnvrt@done+1,c
  2020  0006A0  0E00               	movlw	0
  2021  0006A2  D020               	goto	L2
  2022  0006A4                     l3864:
  2023  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  2024                           
  2025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  2026  0006A6  0100               	movlb	0	; () banked
  2027  0006A8  8195               	bsf	_flags& (0+255),0,b
  2028  0006AA                     l3866:
  2029  0006AA  FFFF               	dw	65535	; assembler added errata NOP
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  2033  0006AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2034  0006B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  0006B4  2ADE               	incf	postinc2,f,c
  2036  0006B6  0E00               	movlw	0
  2037  0006B8  22DD               	addwfc	postdec2,f,c
  2038                           
  2039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  2040  0006BA  D03A               	goto	l3890
  2041  0006BC                     l3868:
  2042  0006BC  FFFF               	dw	65535	; assembler added errata NOP
  2043                           
  2044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  2045  0006BE  0100               	movlb	0	; () banked
  2046  0006C0  8395               	bsf	_flags& (0+255),1,b
  2047  0006C2  D7F3               	goto	l3866
  2048  0006C4                     l3872:
  2049  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  2050                           
  2051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  2052  0006C6  0100               	movlb	0	; () banked
  2053  0006C8  8595               	bsf	_flags& (0+255),2,b
  2054  0006CA  D7EF               	goto	l3866
  2055  0006CC                     l3876:
  2056  0006CC  FFFF               	dw	65535	; assembler added errata NOP
  2057                           
  2058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  2059  0006CE  0100               	movlb	0	; () banked
  2060  0006D0  8795               	bsf	_flags& (0+255),3,b
  2061  0006D2  D7EB               	goto	l3866
  2062  0006D4                     l3880:
  2063  0006D4  FFFF               	dw	65535	; assembler added errata NOP
  2064                           
  2065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  2066  0006D6  0100               	movlb	0	; () banked
  2067  0006D8  8995               	bsf	_flags& (0+255),4,b
  2068  0006DA  D7E7               	goto	l3866
  2069  0006DC                     l3884:
  2070  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  2071                           
  2072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  2073  0006DE  0E00               	movlw	0
  2074  0006E0  6E5A               	movwf	vfpfcnvrt@done+1,c
  2075  0006E2  0E01               	movlw	1
  2076  0006E4                     L2:
  2077  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  2078  0006E6  6E59               	movwf	vfpfcnvrt@done,c
  2079                           
  2080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  2081  0006E8  D023               	goto	l3890
  2082  0006EA                     l3888:
  2083  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  2084  0006EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2085  0006F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2086  0006F4  CFDE FFF6          	movff	postinc2,tblptrl
  2087  0006F8  CFDD FFF7          	movff	postdec2,tblptrh
  2088  0006FC                     	if	0	;tblptru may be non-zero
  2089  0006FC                     	endif
  2090  0006FC                     	if	0	;tblptru may be non-zero
  2091  0006FC                     	endif
  2092  0006FC  0008               	tblrd		*
  2093  0006FE  FFFF               	dw	65535	; errata NOP
  2094  000700  50F5               	movf	tablat,w,c
  2095  000702  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2096  000704  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2097                           
  2098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 1, Range of values is 0 to 0
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            4     3 (average)
  2104                           ;	Chosen strategy is simple_byte
  2105  000706  504A               	movf	??_vfpfcnvrt+1,w,c
  2106  000708  0A00               	xorlw	0	; case 0
  2107  00070A  A4D8               	btfss	status,2,c
  2108  00070C  D7E7               	goto	l3884
  2109                           
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 5, Range of values is 32 to 48
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte           16     9 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116  00070E  5049               	movf	??_vfpfcnvrt,w,c
  2117  000710  0A20               	xorlw	32	; case 32
  2118  000712  B4D8               	btfsc	status,2,c
  2119  000714  D7DB               	goto	l3876
  2120  000716  0A03               	xorlw	3	; case 35
  2121  000718  B4D8               	btfsc	status,2,c
  2122  00071A  D7DC               	goto	l3880
  2123  00071C  0A08               	xorlw	8	; case 43
  2124  00071E  B4D8               	btfsc	status,2,c
  2125  000720  D7D1               	goto	l3872
  2126  000722  0A06               	xorlw	6	; case 45
  2127  000724  B4D8               	btfsc	status,2,c
  2128  000726  D7BE               	goto	l3864
  2129  000728  0A1D               	xorlw	29	; case 48
  2130  00072A  B4D8               	btfsc	status,2,c
  2131  00072C  D7C7               	goto	l3868
  2132  00072E  D7D6               	goto	l3884
  2133  000730                     l3890:
  2134  000730  FFFF               	dw	65535	; assembler added errata NOP
  2135                           
  2136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  2137  000732  5059               	movf	vfpfcnvrt@done,w,c
  2138  000734  105A               	iorwf	vfpfcnvrt@done+1,w,c
  2139  000736  B4D8               	btfsc	status,2,c
  2140  000738  D7D8               	goto	l3888
  2141                           
  2142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  2143  00073A  0100               	movlb	0	; () banked
  2144  00073C  B195               	btfsc	_flags& (0+255),0,b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  2148  00073E  9395               	bcf	_flags& (0+255),1,b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2152  000740  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2153  000744  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2154  000748  CFDE FFF6          	movff	postinc2,tblptrl
  2155  00074C  CFDD FFF7          	movff	postdec2,tblptrh
  2156  000750                     	if	0	;tblptru may be non-zero
  2157  000750                     	endif
  2158  000750                     	if	0	;tblptru may be non-zero
  2159  000750                     	endif
  2160  000750  0008               	tblrd		*
  2161  000752  FFFF               	dw	65535	; errata NOP
  2162  000754  50F5               	movf	tablat,w,c
  2163  000756  0A2A               	xorlw	42
  2164  000758  A4D8               	btfss	status,2,c
  2165  00075A  D023               	goto	l3902
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2169  00075C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  000760  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  000764  2ADE               	incf	postinc2,f,c
  2172  000766  0E00               	movlw	0
  2173  000768  22DD               	addwfc	postdec2,f,c
  2174                           
  2175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2176  00076A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2177  00076E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2178  000772  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2179  000776  0E02               	movlw	2
  2180  000778  26DE               	addwf	postinc2,f,c
  2181  00077A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2182  00077E  0E00               	movlw	0
  2183  000780  22DD               	addwfc	postdec2,f,c
  2184  000782  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2185  000786  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2186  00078A  CFDE F091          	movff	postinc2,_width
  2187  00078E  CFDD F092          	movff	postdec2,_width+1
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2191  000792  AF92               	btfss	(_width+1)& (0+255),7,b
  2192  000794  D045               	goto	u3920
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2196  000796  8195               	bsf	_flags& (0+255),0,b
  2197                           
  2198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2199  000798  6D91               	negf	_width& (0+255),b
  2200  00079A  1F92               	comf	(_width+1)& (0+255),f,b
  2201  00079C  B0D8               	btfsc	status,0,c
  2202  00079E  2B92               	incf	(_width+1)& (0+255),f,b
  2203  0007A0  D03F               	goto	u3920
  2204  0007A2                     l3902:
  2205  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2209  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211  0007AC  CFDE F008          	movff	postinc2,atoi@s
  2212  0007B0  CFDD F009          	movff	postdec2,atoi@s+1
  2213  0007B4  EC44  F014         	call	_atoi	;wreg free
  2214  0007B8  C008  F091         	movff	?_atoi,_width
  2215  0007BC  C009  F092         	movff	?_atoi+1,_width+1
  2216                           
  2217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2218  0007C0  D008               	goto	l3906
  2219  0007C2                     l3904:
  2220  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  2221                           
  2222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2223  0007C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2224  0007C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2225  0007CC  2ADE               	incf	postinc2,f,c
  2226  0007CE  0E00               	movlw	0
  2227  0007D0  22DD               	addwfc	postdec2,f,c
  2228  0007D2                     l3906:
  2229  0007D2  FFFF               	dw	65535	; assembler added errata NOP
  2230  0007D4  0ED0               	movlw	208
  2231  0007D6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2232  0007D8  0EFF               	movlw	255
  2233  0007DA  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2234  0007DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  0007E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  0007E4  CFDE FFF6          	movff	postinc2,tblptrl
  2237  0007E8  CFDD FFF7          	movff	postdec2,tblptrh
  2238  0007EC                     	if	0	;tblptru may be non-zero
  2239  0007EC                     	endif
  2240  0007EC                     	if	0	;tblptru may be non-zero
  2241  0007EC                     	endif
  2242  0007EC  0008               	tblrd		*
  2243  0007EE  FFFF               	dw	65535	; errata NOP
  2244  0007F0  50F5               	movf	tablat,w,c
  2245  0007F2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2246  0007F4  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2247  0007F6  5049               	movf	??_vfpfcnvrt,w,c
  2248  0007F8  264B               	addwf	??_vfpfcnvrt+2,f,c
  2249  0007FA  504A               	movf	??_vfpfcnvrt+1,w,c
  2250  0007FC  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2251  0007FE  504C               	movf	??_vfpfcnvrt+3,w,c
  2252  000800  E106               	bnz	u3900
  2253  000802  0E0A               	movlw	10
  2254  000804  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2255  000806  B0D8               	btfsc	status,0,c
  2256  000808  D002               	goto	u3900
  2257  00080A  0E01               	movlw	1
  2258  00080C  D002               	goto	u3910
  2259  00080E                     u3900:
  2260  00080E  FFFF               	dw	65535	; assembler added errata NOP
  2261  000810  0E00               	movlw	0
  2262  000812                     u3910:
  2263  000812  FFFF               	dw	65535	; assembler added errata NOP
  2264  000814  6E5B               	movwf	_vfpfcnvrt$1127,c
  2265  000816  6A5C               	clrf	_vfpfcnvrt$1127+1,c
  2266  000818  505B               	movf	_vfpfcnvrt$1127,w,c
  2267  00081A  105C               	iorwf	_vfpfcnvrt$1127+1,w,c
  2268  00081C  A4D8               	btfss	status,2,c
  2269  00081E  D7D1               	goto	l3904
  2270  000820                     u3920:
  2271  000820  FFFF               	dw	65535	; assembler added errata NOP
  2272                           
  2273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2274  000822  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275  000826  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276  00082A  CFDE FFF6          	movff	postinc2,tblptrl
  2277  00082E  CFDD FFF7          	movff	postdec2,tblptrh
  2278  000832                     	if	0	;tblptru may be non-zero
  2279  000832                     	endif
  2280  000832                     	if	0	;tblptru may be non-zero
  2281  000832                     	endif
  2282  000832  0008               	tblrd		*
  2283  000834  FFFF               	dw	65535	; errata NOP
  2284  000836  50F5               	movf	tablat,w,c
  2285  000838  0A2E               	xorlw	46
  2286  00083A  A4D8               	btfss	status,2,c
  2287  00083C  D075               	goto	u3970
  2288                           
  2289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2290  00083E  0E00               	movlw	0
  2291  000840  0100               	movlb	0	; () banked
  2292  000842  6F94               	movwf	(_prec+1)& (0+255),b
  2293  000844  0E00               	movlw	0
  2294  000846  6F93               	movwf	_prec& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2298  000848  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299  00084C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300  000850  2ADE               	incf	postinc2,f,c
  2301  000852  0E00               	movlw	0
  2302  000854  22DD               	addwfc	postdec2,f,c
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2306  000856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  00085A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  00085E  CFDE FFF6          	movff	postinc2,tblptrl
  2309  000862  CFDD FFF7          	movff	postdec2,tblptrh
  2310  000866                     	if	0	;tblptru may be non-zero
  2311  000866                     	endif
  2312  000866                     	if	0	;tblptru may be non-zero
  2313  000866                     	endif
  2314  000866  0008               	tblrd		*
  2315  000868  FFFF               	dw	65535	; errata NOP
  2316  00086A  50F5               	movf	tablat,w,c
  2317  00086C  0A2A               	xorlw	42
  2318  00086E  A4D8               	btfss	status,2,c
  2319  000870  D01C               	goto	l3922
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2323  000872  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  000876  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  00087A  2ADE               	incf	postinc2,f,c
  2326  00087C  0E00               	movlw	0
  2327  00087E  22DD               	addwfc	postdec2,f,c
  2328                           
  2329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2330  000880  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2331  000884  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2332  000888  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2333  00088C  0E02               	movlw	2
  2334  00088E  26DE               	addwf	postinc2,f,c
  2335  000890  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2336  000894  0E00               	movlw	0
  2337  000896  22DD               	addwfc	postdec2,f,c
  2338  000898  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2339  00089C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2340  0008A0  CFDE F093          	movff	postinc2,_prec
  2341  0008A4  CFDD F094          	movff	postdec2,_prec+1
  2342                           
  2343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2344  0008A8  D03F               	goto	u3970
  2345  0008AA                     l3922:
  2346  0008AA  FFFF               	dw	65535	; assembler added errata NOP
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2350  0008AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  0008B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  0008B4  CFDE F008          	movff	postinc2,atoi@s
  2353  0008B8  CFDD F009          	movff	postdec2,atoi@s+1
  2354  0008BC  EC44  F014         	call	_atoi	;wreg free
  2355  0008C0  C008  F093         	movff	?_atoi,_prec
  2356  0008C4  C009  F094         	movff	?_atoi+1,_prec+1
  2357                           
  2358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2359  0008C8  D008               	goto	l3926
  2360  0008CA                     l3924:
  2361  0008CA  FFFF               	dw	65535	; assembler added errata NOP
  2362                           
  2363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2364  0008CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  0008D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  0008D4  2ADE               	incf	postinc2,f,c
  2367  0008D6  0E00               	movlw	0
  2368  0008D8  22DD               	addwfc	postdec2,f,c
  2369  0008DA                     l3926:
  2370  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  2371  0008DC  0ED0               	movlw	208
  2372  0008DE  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2373  0008E0  0EFF               	movlw	255
  2374  0008E2  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2375  0008E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2376  0008E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2377  0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  2378  0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  2379  0008F4                     	if	0	;tblptru may be non-zero
  2380  0008F4                     	endif
  2381  0008F4                     	if	0	;tblptru may be non-zero
  2382  0008F4                     	endif
  2383  0008F4  0008               	tblrd		*
  2384  0008F6  FFFF               	dw	65535	; errata NOP
  2385  0008F8  50F5               	movf	tablat,w,c
  2386  0008FA  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2387  0008FC  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2388  0008FE  5049               	movf	??_vfpfcnvrt,w,c
  2389  000900  264B               	addwf	??_vfpfcnvrt+2,f,c
  2390  000902  504A               	movf	??_vfpfcnvrt+1,w,c
  2391  000904  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2392  000906  504C               	movf	??_vfpfcnvrt+3,w,c
  2393  000908  E106               	bnz	u3950
  2394  00090A  0E0A               	movlw	10
  2395  00090C  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2396  00090E  B0D8               	btfsc	status,0,c
  2397  000910  D002               	goto	u3950
  2398  000912  0E01               	movlw	1
  2399  000914  D002               	goto	u3960
  2400  000916                     u3950:
  2401  000916  FFFF               	dw	65535	; assembler added errata NOP
  2402  000918  0E00               	movlw	0
  2403  00091A                     u3960:
  2404  00091A  FFFF               	dw	65535	; assembler added errata NOP
  2405  00091C  6E5D               	movwf	_vfpfcnvrt$1128,c
  2406  00091E  6A5E               	clrf	_vfpfcnvrt$1128+1,c
  2407  000920  505D               	movf	_vfpfcnvrt$1128,w,c
  2408  000922  105E               	iorwf	_vfpfcnvrt$1128+1,w,c
  2409  000924  A4D8               	btfss	status,2,c
  2410  000926  D7D1               	goto	l3924
  2411  000928                     u3970:
  2412  000928  FFFF               	dw	65535	; assembler added errata NOP
  2413                           
  2414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2415  00092A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416  00092E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417  000932  CFDE FFF6          	movff	postinc2,tblptrl
  2418  000936  CFDD FFF7          	movff	postdec2,tblptrh
  2419  00093A                     	if	0	;tblptru may be non-zero
  2420  00093A                     	endif
  2421  00093A                     	if	0	;tblptru may be non-zero
  2422  00093A                     	endif
  2423  00093A  0008               	tblrd		*
  2424  00093C  FFFF               	dw	65535	; errata NOP
  2425  00093E  50F5               	movf	tablat,w,c
  2426  000940  0A63               	xorlw	99
  2427  000942  A4D8               	btfss	status,2,c
  2428  000944  D027               	goto	l3940
  2429                           
  2430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2431  000946  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  00094A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  00094E  2ADE               	incf	postinc2,f,c
  2434  000950  0E00               	movlw	0
  2435  000952  22DD               	addwfc	postdec2,f,c
  2436                           
  2437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2438  000954  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2439  000958  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2440  00095C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2441  000960  0E02               	movlw	2
  2442  000962  26DE               	addwf	postinc2,f,c
  2443  000964  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2444  000968  0E00               	movlw	0
  2445  00096A  22DD               	addwfc	postdec2,f,c
  2446  00096C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2447  000970  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2448  000974  50DF               	movf	indf2,w,c
  2449  000976  6E69               	movwf	vfpfcnvrt@c,c
  2450                           
  2451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2452  000978  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2453  00097C  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2454  000980  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2455  000984  EC47  F01B         	call	_ctoa	;wreg free
  2456  000988  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2457  00098C  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2458  000990  EFF9  F00B         	goto	l525
  2459  000994                     l3940:
  2460  000994  FFFF               	dw	65535	; assembler added errata NOP
  2461                           
  2462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2463  000996  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  00099A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  00099E  CFDE F001          	movff	postinc2,strncmp@_l
  2466  0009A2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2467  0009A6  0E0E               	movlw	low STR_5
  2468  0009A8  6E03               	movwf	strncmp@_r,c
  2469  0009AA  0E06               	movlw	high STR_5
  2470  0009AC  6E04               	movwf	strncmp@_r+1,c
  2471  0009AE  0E00               	movlw	0
  2472  0009B0  6E06               	movwf	strncmp@n+1,c
  2473  0009B2  0E03               	movlw	3
  2474  0009B4  6E05               	movwf	strncmp@n,c
  2475  0009B6  ECCE  F018         	call	_strncmp	;wreg free
  2476  0009BA  5001               	movf	?_strncmp,w,c
  2477  0009BC  1002               	iorwf	?_strncmp+1,w,c
  2478  0009BE  B4D8               	btfsc	status,2,c
  2479  0009C0  D016               	goto	u4000
  2480  0009C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2481  0009C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2482  0009CA  CFDE F001          	movff	postinc2,strncmp@_l
  2483  0009CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2484  0009D2  0E12               	movlw	low STR_9
  2485  0009D4  6E03               	movwf	strncmp@_r,c
  2486  0009D6  0E06               	movlw	high STR_9
  2487  0009D8  6E04               	movwf	strncmp@_r+1,c
  2488  0009DA  0E00               	movlw	0
  2489  0009DC  6E06               	movwf	strncmp@n+1,c
  2490  0009DE  0E03               	movlw	3
  2491  0009E0  6E05               	movwf	strncmp@n,c
  2492  0009E2  ECCE  F018         	call	_strncmp	;wreg free
  2493  0009E6  5001               	movf	?_strncmp,w,c
  2494  0009E8  1002               	iorwf	?_strncmp+1,w,c
  2495  0009EA  A4D8               	btfss	status,2,c
  2496  0009EC  D043               	goto	l3950
  2497  0009EE                     u4000:
  2498  0009EE  FFFF               	dw	65535	; assembler added errata NOP
  2499                           
  2500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2501  0009F0  0E03               	movlw	3
  2502  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2503  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2504  0009FA  26DE               	addwf	postinc2,f,c
  2505  0009FC  0E00               	movlw	0
  2506  0009FE  22DD               	addwfc	postdec2,f,c
  2507                           
  2508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2509  000A00  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2510  000A04  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2511  000A08  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2512  000A0C  0E02               	movlw	2
  2513  000A0E  26DE               	addwf	postinc2,f,c
  2514  000A10  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2515  000A14  0E00               	movlw	0
  2516  000A16  22DD               	addwfc	postdec2,f,c
  2517  000A18  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2518  000A1C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2519  000A20  50DF               	movf	indf2,w,c
  2520  000A22  6E5F               	movwf	vfpfcnvrt@ll,c
  2521  000A24  0E00               	movlw	0
  2522  000A26  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2523  000A28  0EFF               	movlw	-1
  2524  000A2A  6E60               	movwf	vfpfcnvrt@ll+1,c
  2525  000A2C                     L3:
  2526  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  2527  000A2E  6E61               	movwf	vfpfcnvrt@ll+2,c
  2528  000A30  6E62               	movwf	vfpfcnvrt@ll+3,c
  2529  000A32  6E63               	movwf	vfpfcnvrt@ll+4,c
  2530  000A34  6E64               	movwf	vfpfcnvrt@ll+5,c
  2531  000A36  6E65               	movwf	vfpfcnvrt@ll+6,c
  2532  000A38  6E66               	movwf	vfpfcnvrt@ll+7,c
  2533  000A3A                     l3946:
  2534  000A3A  FFFF               	dw	65535	; assembler added errata NOP
  2535                           
  2536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2537  000A3C  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2538  000A40  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2539  000A44  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2540  000A48  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2541  000A4C  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2542  000A50  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2543  000A54  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2544  000A58  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2545  000A5C  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2546  000A60  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2547  000A64  EC5F  F00F         	call	_dtoa	;wreg free
  2548  000A68  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2549  000A6C  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2550  000A70  EFF9  F00B         	goto	l525
  2551  000A74                     l3950:
  2552  000A74  FFFF               	dw	65535	; assembler added errata NOP
  2553                           
  2554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2555  000A76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2556  000A7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2557  000A7E  CFDE F001          	movff	postinc2,strncmp@_l
  2558  000A82  CFDD F002          	movff	postdec2,strncmp@_l+1
  2559  000A86  0E0F               	movlw	low (STR_5+1)
  2560  000A88  6E03               	movwf	strncmp@_r,c
  2561  000A8A  0E06               	movlw	high (STR_5+1)
  2562  000A8C  6E04               	movwf	strncmp@_r+1,c
  2563  000A8E  0E00               	movlw	0
  2564  000A90  6E06               	movwf	strncmp@n+1,c
  2565  000A92  0E02               	movlw	2
  2566  000A94  6E05               	movwf	strncmp@n,c
  2567  000A96  ECCE  F018         	call	_strncmp	;wreg free
  2568  000A9A  5001               	movf	?_strncmp,w,c
  2569  000A9C  1002               	iorwf	?_strncmp+1,w,c
  2570  000A9E  B4D8               	btfsc	status,2,c
  2571  000AA0  D016               	goto	u4020
  2572  000AA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  000AA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  000AAA  CFDE F001          	movff	postinc2,strncmp@_l
  2575  000AAE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2576  000AB2  0E13               	movlw	low (STR_9+1)
  2577  000AB4  6E03               	movwf	strncmp@_r,c
  2578  000AB6  0E06               	movlw	high (STR_9+1)
  2579  000AB8  6E04               	movwf	strncmp@_r+1,c
  2580  000ABA  0E00               	movlw	0
  2581  000ABC  6E06               	movwf	strncmp@n+1,c
  2582  000ABE  0E02               	movlw	2
  2583  000AC0  6E05               	movwf	strncmp@n,c
  2584  000AC2  ECCE  F018         	call	_strncmp	;wreg free
  2585  000AC6  5001               	movf	?_strncmp,w,c
  2586  000AC8  1002               	iorwf	?_strncmp+1,w,c
  2587  000ACA  A4D8               	btfss	status,2,c
  2588  000ACC  D008               	goto	l3960
  2589  000ACE                     u4020:
  2590  000ACE  FFFF               	dw	65535	; assembler added errata NOP
  2591                           
  2592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2593  000AD0  0E02               	movlw	2
  2594  000AD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2595  000AD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2596  000ADA  26DE               	addwf	postinc2,f,c
  2597  000ADC  D023               	goto	L13
  2598  000ADE                     l3960:
  2599  000ADE  FFFF               	dw	65535	; assembler added errata NOP
  2600                           
  2601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2602  000AE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  000AE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  000AE8  CFDE FFF6          	movff	postinc2,tblptrl
  2605  000AEC  CFDD FFF7          	movff	postdec2,tblptrh
  2606  000AF0                     	if	0	;tblptru may be non-zero
  2607  000AF0                     	endif
  2608  000AF0                     	if	0	;tblptru may be non-zero
  2609  000AF0                     	endif
  2610  000AF0  0008               	tblrd		*
  2611  000AF2  FFFF               	dw	65535	; errata NOP
  2612  000AF4  50F5               	movf	tablat,w,c
  2613  000AF6  0A64               	xorlw	100
  2614  000AF8  B4D8               	btfsc	status,2,c
  2615  000AFA  D00E               	goto	u4040
  2616  000AFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2617  000B00  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2618  000B04  CFDE FFF6          	movff	postinc2,tblptrl
  2619  000B08  CFDD FFF7          	movff	postdec2,tblptrh
  2620  000B0C                     	if	0	;tblptru may be non-zero
  2621  000B0C                     	endif
  2622  000B0C                     	if	0	;tblptru may be non-zero
  2623  000B0C                     	endif
  2624  000B0C  0008               	tblrd		*
  2625  000B0E  FFFF               	dw	65535	; errata NOP
  2626  000B10  50F5               	movf	tablat,w,c
  2627  000B12  0A69               	xorlw	105
  2628  000B14  A4D8               	btfss	status,2,c
  2629  000B16  D021               	goto	l3970
  2630  000B18                     u4040:
  2631  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2632                           
  2633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2634  000B1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  000B1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  000B22  2ADE               	incf	postinc2,f,c
  2637  000B24                     L13:
  2638  000B24  FFFF               	dw	65535	; assembler added errata NOP
  2639  000B26  0E00               	movlw	0
  2640  000B28  22DD               	addwfc	postdec2,f,c
  2641                           
  2642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2643  000B2A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2644  000B2E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2645  000B32  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2646  000B36  0E02               	movlw	2
  2647  000B38  26DE               	addwf	postinc2,f,c
  2648  000B3A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2649  000B3E  0E00               	movlw	0
  2650  000B40  22DD               	addwfc	postdec2,f,c
  2651  000B42  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2652  000B46  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2653  000B4A  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2654  000B4E  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2655  000B52  0E00               	movlw	0
  2656  000B54  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2657  000B56  0EFF               	movlw	-1
  2658  000B58  D769               	goto	L3
  2659  000B5A                     l3970:
  2660  000B5A  FFFF               	dw	65535	; assembler added errata NOP
  2661                           
  2662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2663  000B5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2664  000B60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2665  000B64  CFDE F001          	movff	postinc2,strncmp@_l
  2666  000B68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2667  000B6C  0E30               	movlw	low STR_23
  2668  000B6E  6E03               	movwf	strncmp@_r,c
  2669  000B70  0E06               	movlw	high STR_23
  2670  000B72  6E04               	movwf	strncmp@_r+1,c
  2671  000B74  0E00               	movlw	0
  2672  000B76  6E06               	movwf	strncmp@n+1,c
  2673  000B78  0E02               	movlw	2
  2674  000B7A  6E05               	movwf	strncmp@n,c
  2675  000B7C  ECCE  F018         	call	_strncmp	;wreg free
  2676  000B80  5001               	movf	?_strncmp,w,c
  2677  000B82  1002               	iorwf	?_strncmp+1,w,c
  2678  000B84  B4D8               	btfsc	status,2,c
  2679  000B86  D016               	goto	u4060
  2680  000B88  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2681  000B8C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2682  000B90  CFDE F001          	movff	postinc2,strncmp@_l
  2683  000B94  CFDD F002          	movff	postdec2,strncmp@_l+1
  2684  000B98  0E36               	movlw	low STR_27
  2685  000B9A  6E03               	movwf	strncmp@_r,c
  2686  000B9C  0E06               	movlw	high STR_27
  2687  000B9E  6E04               	movwf	strncmp@_r+1,c
  2688  000BA0  0E00               	movlw	0
  2689  000BA2  6E06               	movwf	strncmp@n+1,c
  2690  000BA4  0E02               	movlw	2
  2691  000BA6  6E05               	movwf	strncmp@n,c
  2692  000BA8  ECCE  F018         	call	_strncmp	;wreg free
  2693  000BAC  5001               	movf	?_strncmp,w,c
  2694  000BAE  1002               	iorwf	?_strncmp+1,w,c
  2695  000BB0  A4D8               	btfss	status,2,c
  2696  000BB2  D043               	goto	l3980
  2697  000BB4                     u4060:
  2698  000BB4  FFFF               	dw	65535	; assembler added errata NOP
  2699                           
  2700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2701  000BB6  0E02               	movlw	2
  2702  000BB8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2703  000BBC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2704  000BC0  26DE               	addwf	postinc2,f,c
  2705  000BC2  0E00               	movlw	0
  2706  000BC4  22DD               	addwfc	postdec2,f,c
  2707                           
  2708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2709  000BC6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2710  000BCA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2711  000BCE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2712  000BD2  0E04               	movlw	4
  2713  000BD4  26DE               	addwf	postinc2,f,c
  2714  000BD6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2715  000BDA  0E00               	movlw	0
  2716  000BDC  22DD               	addwfc	postdec2,f,c
  2717  000BDE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2718  000BE2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2719  000BE6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2720  000BEA  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2721  000BEE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2722  000BF2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2723  000BF6  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2724  000BFA  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2725  000BFE  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2726  000C02  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2727  000C06  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2728  000C08  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2729  000C0A  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2730  000C0C  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2731  000C10  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2732  000C14  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2733  000C18  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2734  000C1C  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2735  000C20  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2736  000C24  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2737  000C28  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2738  000C2C  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2739  000C30  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2740  000C34  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2741  000C38  D700               	goto	l3946
  2742  000C3A                     l3980:
  2743  000C3A  FFFF               	dw	65535	; assembler added errata NOP
  2744                           
  2745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2746  000C3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  000C40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  000C44  CFDE F001          	movff	postinc2,strncmp@_l
  2749  000C48  CFDD F002          	movff	postdec2,strncmp@_l+1
  2750  000C4C  0E33               	movlw	low STR_32
  2751  000C4E  6E03               	movwf	strncmp@_r,c
  2752  000C50  0E06               	movlw	high STR_32
  2753  000C52  6E04               	movwf	strncmp@_r+1,c
  2754  000C54  0E00               	movlw	0
  2755  000C56  6E06               	movwf	strncmp@n+1,c
  2756  000C58  0E02               	movlw	2
  2757  000C5A  6E05               	movwf	strncmp@n,c
  2758  000C5C  ECCE  F018         	call	_strncmp	;wreg free
  2759  000C60  5001               	movf	?_strncmp,w,c
  2760  000C62  1002               	iorwf	?_strncmp+1,w,c
  2761  000C64  B4D8               	btfsc	status,2,c
  2762  000C66  D016               	goto	u4080
  2763  000C68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2764  000C6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2765  000C70  CFDE F001          	movff	postinc2,strncmp@_l
  2766  000C74  CFDD F002          	movff	postdec2,strncmp@_l+1
  2767  000C78  0E39               	movlw	low STR_36
  2768  000C7A  6E03               	movwf	strncmp@_r,c
  2769  000C7C  0E06               	movlw	high STR_36
  2770  000C7E  6E04               	movwf	strncmp@_r+1,c
  2771  000C80  0E00               	movlw	0
  2772  000C82  6E06               	movwf	strncmp@n+1,c
  2773  000C84  0E02               	movlw	2
  2774  000C86  6E05               	movwf	strncmp@n,c
  2775  000C88  ECCE  F018         	call	_strncmp	;wreg free
  2776  000C8C  5001               	movf	?_strncmp,w,c
  2777  000C8E  1002               	iorwf	?_strncmp+1,w,c
  2778  000C90  A4D8               	btfss	status,2,c
  2779  000C92  D028               	goto	l3990
  2780  000C94                     u4080:
  2781  000C94  FFFF               	dw	65535	; assembler added errata NOP
  2782                           
  2783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2784  000C96  0E02               	movlw	2
  2785  000C98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  000C9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  000CA0  26DE               	addwf	postinc2,f,c
  2788  000CA2  0E00               	movlw	0
  2789  000CA4  22DD               	addwfc	postdec2,f,c
  2790                           
  2791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2792  000CA6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2793  000CAA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2794  000CAE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2795  000CB2  0E02               	movlw	2
  2796  000CB4  26DE               	addwf	postinc2,f,c
  2797  000CB6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2798  000CBA  0E00               	movlw	0
  2799  000CBC  22DD               	addwfc	postdec2,f,c
  2800  000CBE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2801  000CC2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2802  000CC6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2803  000CCA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2804  000CCE  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2805  000CD2  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2806  000CD6  6A61               	clrf	vfpfcnvrt@ll+2,c
  2807  000CD8  6A62               	clrf	vfpfcnvrt@ll+3,c
  2808  000CDA  6A63               	clrf	vfpfcnvrt@ll+4,c
  2809  000CDC  6A64               	clrf	vfpfcnvrt@ll+5,c
  2810  000CDE  6A65               	clrf	vfpfcnvrt@ll+6,c
  2811  000CE0  6A66               	clrf	vfpfcnvrt@ll+7,c
  2812  000CE2  D6AB               	goto	l3946
  2813  000CE4                     l3990:
  2814  000CE4  FFFF               	dw	65535	; assembler added errata NOP
  2815                           
  2816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2817  000CE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2818  000CEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2819  000CEE  CFDE F001          	movff	postinc2,strncmp@_l
  2820  000CF2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2821  000CF6  0E1A               	movlw	low STR_41
  2822  000CF8  6E03               	movwf	strncmp@_r,c
  2823  000CFA  0E06               	movlw	high STR_41
  2824  000CFC  6E04               	movwf	strncmp@_r+1,c
  2825  000CFE  0E00               	movlw	0
  2826  000D00  6E06               	movwf	strncmp@n+1,c
  2827  000D02  0E03               	movlw	3
  2828  000D04  6E05               	movwf	strncmp@n,c
  2829  000D06  ECCE  F018         	call	_strncmp	;wreg free
  2830  000D0A  5001               	movf	?_strncmp,w,c
  2831  000D0C  1002               	iorwf	?_strncmp+1,w,c
  2832  000D0E  A4D8               	btfss	status,2,c
  2833  000D10  D041               	goto	l3998
  2834                           
  2835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2836  000D12  0E03               	movlw	3
  2837  000D14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2838  000D18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2839  000D1C  26DE               	addwf	postinc2,f,c
  2840  000D1E  0E00               	movlw	0
  2841  000D20  22DD               	addwfc	postdec2,f,c
  2842                           
  2843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2844  000D22  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2845  000D26  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2846  000D2A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2847  000D2E  0E02               	movlw	2
  2848  000D30  26DE               	addwf	postinc2,f,c
  2849  000D32  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2850  000D36  0E00               	movlw	0
  2851  000D38  22DD               	addwfc	postdec2,f,c
  2852  000D3A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2853  000D3E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2854  000D42  50DF               	movf	indf2,w,c
  2855  000D44  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2856  000D46  504B               	movf	??_vfpfcnvrt+2,w,c
  2857  000D48  6E6A               	movwf	vfpfcnvrt@llu,c
  2858  000D4A  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2859  000D4C                     L4:
  2860  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  2861  000D4E  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2862  000D50  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2863  000D52                     L5:
  2864  000D52  FFFF               	dw	65535	; assembler added errata NOP
  2865  000D54  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2866  000D56  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2867  000D58  6A70               	clrf	vfpfcnvrt@llu+6,c
  2868  000D5A  6A71               	clrf	vfpfcnvrt@llu+7,c
  2869                           
  2870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2871  000D5C  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2872  000D60  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2873  000D64  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2874  000D68  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2875  000D6C  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2876  000D70  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2877  000D74  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2878  000D78  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2879  000D7C  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2880  000D80  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2881  000D84  EC77  F013         	call	_otoa	;wreg free
  2882  000D88  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2883  000D8C  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2884  000D90  EFF9  F00B         	goto	l525
  2885  000D94                     l3998:
  2886  000D94  FFFF               	dw	65535	; assembler added errata NOP
  2887                           
  2888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2889  000D96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2890  000D9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2891  000D9E  CFDE F001          	movff	postinc2,strncmp@_l
  2892  000DA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2893  000DA6  0E1B               	movlw	low (STR_41+1)
  2894  000DA8  6E03               	movwf	strncmp@_r,c
  2895  000DAA  0E06               	movlw	high (STR_41+1)
  2896  000DAC  6E04               	movwf	strncmp@_r+1,c
  2897  000DAE  0E00               	movlw	0
  2898  000DB0  6E06               	movwf	strncmp@n+1,c
  2899  000DB2  0E02               	movlw	2
  2900  000DB4  6E05               	movwf	strncmp@n,c
  2901  000DB6  ECCE  F018         	call	_strncmp	;wreg free
  2902  000DBA  5001               	movf	?_strncmp,w,c
  2903  000DBC  1002               	iorwf	?_strncmp+1,w,c
  2904  000DBE  B4D8               	btfsc	status,2,c
  2905  000DC0  D06B               	goto	u4130
  2906                           
  2907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2908                           
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2910                           
  2911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2912  000DC2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2913  000DC6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2914  000DCA  CFDE FFF6          	movff	postinc2,tblptrl
  2915  000DCE  CFDD FFF7          	movff	postdec2,tblptrh
  2916  000DD2                     	if	0	;tblptru may be non-zero
  2917  000DD2                     	endif
  2918  000DD2                     	if	0	;tblptru may be non-zero
  2919  000DD2                     	endif
  2920  000DD2  0008               	tblrd		*
  2921  000DD4  FFFF               	dw	65535	; errata NOP
  2922  000DD6  50F5               	movf	tablat,w,c
  2923  000DD8  0A6F               	xorlw	111
  2924  000DDA  A4D8               	btfss	status,2,c
  2925  000DDC  D006               	goto	l4014
  2926                           
  2927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2928  000DDE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2929  000DE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2930  000DE6  2ADE               	incf	postinc2,f,c
  2931  000DE8  D05E               	goto	L18
  2932  000DEA                     l4014:
  2933  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  2934                           
  2935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2936  000DEC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2937  000DF0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2938  000DF4  CFDE F001          	movff	postinc2,strncmp@_l
  2939  000DF8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2940  000DFC  0E42               	movlw	low STR_51
  2941  000DFE  6E03               	movwf	strncmp@_r,c
  2942  000E00  0E06               	movlw	high STR_51
  2943  000E02  6E04               	movwf	strncmp@_r+1,c
  2944  000E04  0E00               	movlw	0
  2945  000E06  6E06               	movwf	strncmp@n+1,c
  2946  000E08  0E02               	movlw	2
  2947  000E0A  6E05               	movwf	strncmp@n,c
  2948  000E0C  ECCE  F018         	call	_strncmp	;wreg free
  2949  000E10  5001               	movf	?_strncmp,w,c
  2950  000E12  1002               	iorwf	?_strncmp+1,w,c
  2951  000E14  A4D8               	btfss	status,2,c
  2952  000E16  D029               	goto	l4022
  2953                           
  2954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2955  000E18  0E02               	movlw	2
  2956  000E1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2957  000E1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2958  000E22  26DE               	addwf	postinc2,f,c
  2959  000E24  0E00               	movlw	0
  2960  000E26  22DD               	addwfc	postdec2,f,c
  2961                           
  2962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2963  000E28  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2964  000E2C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2965  000E30  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2966  000E34  0E04               	movlw	4
  2967  000E36  26DE               	addwf	postinc2,f,c
  2968  000E38  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2969  000E3C  0E00               	movlw	0
  2970  000E3E  22DD               	addwfc	postdec2,f,c
  2971  000E40  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2972  000E44  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2973  000E48  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2974  000E4C  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2975  000E50  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2976  000E54  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2977  000E58  504B               	movf	??_vfpfcnvrt+2,w,c
  2978  000E5A  6E6A               	movwf	vfpfcnvrt@llu,c
  2979  000E5C  504C               	movf	??_vfpfcnvrt+3,w,c
  2980  000E5E  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2981  000E60  504D               	movf	??_vfpfcnvrt+4,w,c
  2982  000E62  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2983  000E64  504E               	movf	??_vfpfcnvrt+5,w,c
  2984  000E66  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2985  000E68  D774               	goto	L5
  2986  000E6A                     l4022:
  2987  000E6A  FFFF               	dw	65535	; assembler added errata NOP
  2988                           
  2989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2990  000E6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991  000E70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992  000E74  CFDE F001          	movff	postinc2,strncmp@_l
  2993  000E78  CFDD F002          	movff	postdec2,strncmp@_l+1
  2994  000E7C  0E45               	movlw	low STR_56
  2995  000E7E  6E03               	movwf	strncmp@_r,c
  2996  000E80  0E06               	movlw	high STR_56
  2997  000E82  6E04               	movwf	strncmp@_r+1,c
  2998  000E84  0E00               	movlw	0
  2999  000E86  6E06               	movwf	strncmp@n+1,c
  3000  000E88  0E02               	movlw	2
  3001  000E8A  6E05               	movwf	strncmp@n,c
  3002  000E8C  ECCE  F018         	call	_strncmp	;wreg free
  3003  000E90  5001               	movf	?_strncmp,w,c
  3004  000E92  1002               	iorwf	?_strncmp+1,w,c
  3005  000E94  A4D8               	btfss	status,2,c
  3006  000E96  D023               	goto	l4030
  3007  000E98                     u4130:
  3008  000E98  FFFF               	dw	65535	; assembler added errata NOP
  3009                           
  3010                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  3011  000E9A  0E02               	movlw	2
  3012  000E9C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3013  000EA0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3014  000EA4  26DE               	addwf	postinc2,f,c
  3015  000EA6                     L18:
  3016  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  3017  000EA8  0E00               	movlw	0
  3018  000EAA  22DD               	addwfc	postdec2,f,c
  3019                           
  3020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3021  000EAC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3022  000EB0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3023  000EB4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3024  000EB8  0E02               	movlw	2
  3025  000EBA  26DE               	addwf	postinc2,f,c
  3026  000EBC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3027  000EC0  0E00               	movlw	0
  3028  000EC2  22DD               	addwfc	postdec2,f,c
  3029  000EC4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3030  000EC8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3031  000ECC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3032  000ED0  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3033  000ED4  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3034  000ED8  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3035  000EDC  D737               	goto	L4
  3036  000EDE                     l4030:
  3037  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  3038                           
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3040  000EE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3041  000EE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3042  000EE8  CFDE F001          	movff	postinc2,strncmp@_l
  3043  000EEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3044  000EF0  0E16               	movlw	low STR_61
  3045  000EF2  6E03               	movwf	strncmp@_r,c
  3046  000EF4  0E06               	movlw	high STR_61
  3047  000EF6  6E04               	movwf	strncmp@_r+1,c
  3048  000EF8  0E00               	movlw	0
  3049  000EFA  6E06               	movwf	strncmp@n+1,c
  3050  000EFC  0E03               	movlw	3
  3051  000EFE  6E05               	movwf	strncmp@n,c
  3052  000F00  ECCE  F018         	call	_strncmp	;wreg free
  3053  000F04  5001               	movf	?_strncmp,w,c
  3054  000F06  1002               	iorwf	?_strncmp+1,w,c
  3055  000F08  A4D8               	btfss	status,2,c
  3056  000F0A  D028               	goto	l4040
  3057                           
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  3059  000F0C  0E03               	movlw	3
  3060  000F0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3061  000F12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3062  000F16  26DE               	addwf	postinc2,f,c
  3063  000F18  0E00               	movlw	0
  3064  000F1A  22DD               	addwfc	postdec2,f,c
  3065                           
  3066                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3067  000F1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3068  000F20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3069  000F24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3070  000F28  0E02               	movlw	2
  3071  000F2A  26DE               	addwf	postinc2,f,c
  3072  000F2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3073  000F30  0E00               	movlw	0
  3074  000F32  22DD               	addwfc	postdec2,f,c
  3075  000F34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3076  000F38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3077  000F3C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3078  000F40  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3079                           
  3080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  3081  000F44  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3082  000F48  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3083  000F4C  C08F  FFDF         	movff	_nout,indf2
  3084  000F50                     l4036:
  3085  000F50  FFFF               	dw	65535	; assembler added errata NOP
  3086                           
  3087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  3088  000F52  0E00               	movlw	0
  3089  000F54  6E44               	movwf	?_vfpfcnvrt+1,c
  3090  000F56  0E00               	movlw	0
  3091  000F58  EFD0  F00B         	goto	L6
  3092  000F5C                     l4040:
  3093  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  3094                           
  3095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3096  000F5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  000F62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  000F66  CFDE F001          	movff	postinc2,strncmp@_l
  3099  000F6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3100  000F6E  0E17               	movlw	low (STR_61+1)
  3101  000F70  6E03               	movwf	strncmp@_r,c
  3102  000F72  0E06               	movlw	high (STR_61+1)
  3103  000F74  6E04               	movwf	strncmp@_r+1,c
  3104  000F76  0E00               	movlw	0
  3105  000F78  6E06               	movwf	strncmp@n+1,c
  3106  000F7A  0E02               	movlw	2
  3107  000F7C  6E05               	movwf	strncmp@n,c
  3108  000F7E  ECCE  F018         	call	_strncmp	;wreg free
  3109  000F82  5001               	movf	?_strncmp,w,c
  3110  000F84  1002               	iorwf	?_strncmp+1,w,c
  3111  000F86  A4D8               	btfss	status,2,c
  3112  000F88  D00B               	goto	l4050
  3113  000F8A  D07F               	goto	u4180
  3114  000F8C                     l4044:
  3115  000F8C  FFFF               	dw	65535	; assembler added errata NOP
  3116                           
  3117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  3118  000F8E  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3119  000F92  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3120  000F96  C08F  FFDE         	movff	_nout,postinc2
  3121  000F9A  C090  FFDD         	movff	_nout+1,postdec2
  3122  000F9E  D7D8               	goto	l4036
  3123  000FA0                     l4050:
  3124  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  3125                           
  3126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  3127  000FA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  000FA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  000FAA  CFDE FFF6          	movff	postinc2,tblptrl
  3130  000FAE  CFDD FFF7          	movff	postdec2,tblptrh
  3131  000FB2                     	if	0	;tblptru may be non-zero
  3132  000FB2                     	endif
  3133  000FB2                     	if	0	;tblptru may be non-zero
  3134  000FB2                     	endif
  3135  000FB2  0008               	tblrd		*
  3136  000FB4  FFFF               	dw	65535	; errata NOP
  3137  000FB6  50F5               	movf	tablat,w,c
  3138  000FB8  0A6E               	xorlw	110
  3139  000FBA  A4D8               	btfss	status,2,c
  3140  000FBC  D006               	goto	l4060
  3141                           
  3142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  3143  000FBE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3144  000FC2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3145  000FC6  2ADE               	incf	postinc2,f,c
  3146  000FC8  D067               	goto	L15
  3147  000FCA                     l4060:
  3148  000FCA  FFFF               	dw	65535	; assembler added errata NOP
  3149                           
  3150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  3151  000FCC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3152  000FD0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3153  000FD4  CFDE F001          	movff	postinc2,strncmp@_l
  3154  000FD8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3155  000FDC  0E3C               	movlw	low STR_71
  3156  000FDE  6E03               	movwf	strncmp@_r,c
  3157  000FE0  0E06               	movlw	high STR_71
  3158  000FE2  6E04               	movwf	strncmp@_r+1,c
  3159  000FE4  0E00               	movlw	0
  3160  000FE6  6E06               	movwf	strncmp@n+1,c
  3161  000FE8  0E02               	movlw	2
  3162  000FEA  6E05               	movwf	strncmp@n,c
  3163  000FEC  ECCE  F018         	call	_strncmp	;wreg free
  3164  000FF0  5001               	movf	?_strncmp,w,c
  3165  000FF2  1002               	iorwf	?_strncmp+1,w,c
  3166  000FF4  A4D8               	btfss	status,2,c
  3167  000FF6  D032               	goto	l4070
  3168                           
  3169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  3170  000FF8  0E02               	movlw	2
  3171  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3172  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3173  001002  26DE               	addwf	postinc2,f,c
  3174  001004  0E00               	movlw	0
  3175  001006  22DD               	addwfc	postdec2,f,c
  3176                           
  3177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  3178  001008  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3179  00100C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3180  001010  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3181  001014  0E02               	movlw	2
  3182  001016  26DE               	addwf	postinc2,f,c
  3183  001018  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3184  00101C  0E00               	movlw	0
  3185  00101E  22DD               	addwfc	postdec2,f,c
  3186  001020  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3187  001024  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3188  001028  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3189  00102C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3190                           
  3191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  3192  001030  C08F  F049         	movff	_nout,??_vfpfcnvrt
  3193  001034  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  3194  001038  0E00               	movlw	0
  3195  00103A  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  3196  00103C  0EFF               	movlw	255
  3197  00103E  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3198  001040  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  3199  001042  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3200  001046  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3201  00104A  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3202  00104E  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3203  001052  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3204  001056  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3205  00105A  D77A               	goto	l4036
  3206  00105C                     l4070:
  3207  00105C  FFFF               	dw	65535	; assembler added errata NOP
  3208                           
  3209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3210  00105E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211  001062  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212  001066  CFDE F001          	movff	postinc2,strncmp@_l
  3213  00106A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3214  00106E  0E3F               	movlw	low STR_76
  3215  001070  6E03               	movwf	strncmp@_r,c
  3216  001072  0E06               	movlw	high STR_76
  3217  001074  6E04               	movwf	strncmp@_r+1,c
  3218  001076  0E00               	movlw	0
  3219  001078  6E06               	movwf	strncmp@n+1,c
  3220  00107A  0E02               	movlw	2
  3221  00107C  6E05               	movwf	strncmp@n,c
  3222  00107E  ECCE  F018         	call	_strncmp	;wreg free
  3223  001082  5001               	movf	?_strncmp,w,c
  3224  001084  1002               	iorwf	?_strncmp+1,w,c
  3225  001086  A4D8               	btfss	status,2,c
  3226  001088  D01F               	goto	l4080
  3227  00108A                     u4180:
  3228  00108A  FFFF               	dw	65535	; assembler added errata NOP
  3229                           
  3230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3231  00108C  0E02               	movlw	2
  3232  00108E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3233  001092  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3234  001096  26DE               	addwf	postinc2,f,c
  3235  001098                     L15:
  3236  001098  FFFF               	dw	65535	; assembler added errata NOP
  3237  00109A  0E00               	movlw	0
  3238  00109C  22DD               	addwfc	postdec2,f,c
  3239                           
  3240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3241  00109E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3242  0010A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3243  0010A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3244  0010AA  0E02               	movlw	2
  3245  0010AC  26DE               	addwf	postinc2,f,c
  3246  0010AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3247  0010B2  0E00               	movlw	0
  3248  0010B4  22DD               	addwfc	postdec2,f,c
  3249  0010B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3250  0010BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3251  0010BE  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3252  0010C2  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3253  0010C6  D762               	goto	l4044
  3254  0010C8                     l4080:
  3255  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  3256                           
  3257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3258  0010CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3259  0010CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3260  0010D2  CFDE FFF6          	movff	postinc2,tblptrl
  3261  0010D6  CFDD FFF7          	movff	postdec2,tblptrh
  3262  0010DA                     	if	0	;tblptru may be non-zero
  3263  0010DA                     	endif
  3264  0010DA                     	if	0	;tblptru may be non-zero
  3265  0010DA                     	endif
  3266  0010DA  0008               	tblrd		*
  3267  0010DC  FFFF               	dw	65535	; errata NOP
  3268  0010DE  50F5               	movf	tablat,w,c
  3269  0010E0  0A70               	xorlw	112
  3270  0010E2  A4D8               	btfss	status,2,c
  3271  0010E4  D03E               	goto	l4088
  3272                           
  3273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3274  0010E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3275  0010EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3276  0010EE  2ADE               	incf	postinc2,f,c
  3277  0010F0  0E00               	movlw	0
  3278  0010F2  22DD               	addwfc	postdec2,f,c
  3279                           
  3280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3281  0010F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3282  0010F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3283  0010FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3284  001100  0E02               	movlw	2
  3285  001102  26DE               	addwf	postinc2,f,c
  3286  001104  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3287  001108  0E00               	movlw	0
  3288  00110A  22DD               	addwfc	postdec2,f,c
  3289  00110C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3290  001110  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3291  001114  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3292  001118  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3293  00111C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3294  001120  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3295  001124  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3296  001126  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3297  001128  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3298  00112A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3299  00112C  6A70               	clrf	vfpfcnvrt@llu+6,c
  3300  00112E  6A71               	clrf	vfpfcnvrt@llu+7,c
  3301                           
  3302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3303  001130  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3304  001134  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3305  001138  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3306  00113C  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3307  001140  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3308  001144  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3309  001148  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3310  00114C  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3311  001150  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3312  001154  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3313  001158  0E78               	movlw	120
  3314  00115A  6E26               	movwf	xtoa@x,c
  3315  00115C  EC94  F010         	call	_xtoa	;wreg free
  3316  001160  D1B4               	goto	L8
  3317  001162                     l4088:
  3318  001162  FFFF               	dw	65535	; assembler added errata NOP
  3319                           
  3320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3321  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3322  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3323  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  3324  001170  CFDD FFF7          	movff	postdec2,tblptrh
  3325  001174                     	if	0	;tblptru may be non-zero
  3326  001174                     	endif
  3327  001174                     	if	0	;tblptru may be non-zero
  3328  001174                     	endif
  3329  001174  0008               	tblrd		*
  3330  001176  FFFF               	dw	65535	; errata NOP
  3331  001178  50F5               	movf	tablat,w,c
  3332  00117A  0A73               	xorlw	115
  3333  00117C  A4D8               	btfss	status,2,c
  3334  00117E  D02A               	goto	l4096
  3335                           
  3336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3337  001180  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3338  001184  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3339  001188  2ADE               	incf	postinc2,f,c
  3340  00118A  0E00               	movlw	0
  3341  00118C  22DD               	addwfc	postdec2,f,c
  3342                           
  3343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3344  00118E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3345  001192  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3346  001196  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3347  00119A  0E02               	movlw	2
  3348  00119C  26DE               	addwf	postinc2,f,c
  3349  00119E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3350  0011A2  0E00               	movlw	0
  3351  0011A4  22DD               	addwfc	postdec2,f,c
  3352  0011A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3353  0011AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3354  0011AE  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3355  0011B2  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3356                           
  3357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3358  0011B6  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3359  0011BA  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3360  0011BE  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3361  0011C2  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3362  0011C6  EC53  F016         	call	_stoa	;wreg free
  3363  0011CA  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3364  0011CE  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3365  0011D2  D30F               	goto	l525
  3366  0011D4                     l4096:
  3367  0011D4  FFFF               	dw	65535	; assembler added errata NOP
  3368                           
  3369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3370  0011D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3371  0011DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3372  0011DE  CFDE F001          	movff	postinc2,strncmp@_l
  3373  0011E2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3374  0011E6  0E1E               	movlw	low STR_81
  3375  0011E8  6E03               	movwf	strncmp@_r,c
  3376  0011EA  0E06               	movlw	high STR_81
  3377  0011EC  6E04               	movwf	strncmp@_r+1,c
  3378  0011EE  0E00               	movlw	0
  3379  0011F0  6E06               	movwf	strncmp@n+1,c
  3380  0011F2  0E03               	movlw	3
  3381  0011F4  6E05               	movwf	strncmp@n,c
  3382  0011F6  ECCE  F018         	call	_strncmp	;wreg free
  3383  0011FA  5001               	movf	?_strncmp,w,c
  3384  0011FC  1002               	iorwf	?_strncmp+1,w,c
  3385  0011FE  A4D8               	btfss	status,2,c
  3386  001200  D040               	goto	l4104
  3387                           
  3388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3389  001202  0E03               	movlw	3
  3390  001204  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3391  001208  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3392  00120C  26DE               	addwf	postinc2,f,c
  3393  00120E  0E00               	movlw	0
  3394  001210  22DD               	addwfc	postdec2,f,c
  3395                           
  3396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3397  001212  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3398  001216  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3399  00121A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3400  00121E  0E02               	movlw	2
  3401  001220  26DE               	addwf	postinc2,f,c
  3402  001222  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3403  001226  0E00               	movlw	0
  3404  001228  22DD               	addwfc	postdec2,f,c
  3405  00122A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3406  00122E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3407  001232  50DF               	movf	indf2,w,c
  3408  001234  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3409  001236  504B               	movf	??_vfpfcnvrt+2,w,c
  3410  001238  6E6A               	movwf	vfpfcnvrt@llu,c
  3411  00123A  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3412  00123C                     L9:
  3413  00123C  FFFF               	dw	65535	; assembler added errata NOP
  3414  00123E  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3415  001240  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3416  001242                     L10:
  3417  001242  FFFF               	dw	65535	; assembler added errata NOP
  3418  001244  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3419  001246  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3420  001248  6A70               	clrf	vfpfcnvrt@llu+6,c
  3421  00124A  6A71               	clrf	vfpfcnvrt@llu+7,c
  3422                           
  3423                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3424  00124C  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3425  001250  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3426  001254  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3427  001258  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3428  00125C  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3429  001260  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3430  001264  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3431  001268  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3432  00126C  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3433  001270  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3434  001274  ECC0  F011         	call	_utoa	;wreg free
  3435  001278  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3436  00127C  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3437  001280  D2B8               	goto	l525
  3438  001282                     l4104:
  3439  001282  FFFF               	dw	65535	; assembler added errata NOP
  3440                           
  3441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3442  001284  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3443  001288  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3444  00128C  CFDE F001          	movff	postinc2,strncmp@_l
  3445  001290  CFDD F002          	movff	postdec2,strncmp@_l+1
  3446  001294  0E1F               	movlw	low (STR_81+1)
  3447  001296  6E03               	movwf	strncmp@_r,c
  3448  001298  0E06               	movlw	high (STR_81+1)
  3449  00129A  6E04               	movwf	strncmp@_r+1,c
  3450  00129C  0E00               	movlw	0
  3451  00129E  6E06               	movwf	strncmp@n+1,c
  3452  0012A0  0E02               	movlw	2
  3453  0012A2  6E05               	movwf	strncmp@n,c
  3454  0012A4  ECCE  F018         	call	_strncmp	;wreg free
  3455  0012A8  5001               	movf	?_strncmp,w,c
  3456  0012AA  1002               	iorwf	?_strncmp+1,w,c
  3457  0012AC  B4D8               	btfsc	status,2,c
  3458  0012AE  D06B               	goto	u4250
  3459                           
  3460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3461                           
  3462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3463                           
  3464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3465  0012B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3466  0012B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3467  0012B8  CFDE FFF6          	movff	postinc2,tblptrl
  3468  0012BC  CFDD FFF7          	movff	postdec2,tblptrh
  3469  0012C0                     	if	0	;tblptru may be non-zero
  3470  0012C0                     	endif
  3471  0012C0                     	if	0	;tblptru may be non-zero
  3472  0012C0                     	endif
  3473  0012C0  0008               	tblrd		*
  3474  0012C2  FFFF               	dw	65535	; errata NOP
  3475  0012C4  50F5               	movf	tablat,w,c
  3476  0012C6  0A75               	xorlw	117
  3477  0012C8  A4D8               	btfss	status,2,c
  3478  0012CA  D006               	goto	l4120
  3479                           
  3480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3481  0012CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3482  0012D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3483  0012D4  2ADE               	incf	postinc2,f,c
  3484  0012D6  D05E               	goto	L19
  3485  0012D8                     l4120:
  3486  0012D8  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3489  0012DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3490  0012DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3491  0012E2  CFDE F001          	movff	postinc2,strncmp@_l
  3492  0012E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3493  0012EA  0E27               	movlw	low (STR_1+1)
  3494  0012EC  6E03               	movwf	strncmp@_r,c
  3495  0012EE  0E06               	movlw	high (STR_1+1)
  3496  0012F0  6E04               	movwf	strncmp@_r+1,c
  3497  0012F2  0E00               	movlw	0
  3498  0012F4  6E06               	movwf	strncmp@n+1,c
  3499  0012F6  0E02               	movlw	2
  3500  0012F8  6E05               	movwf	strncmp@n,c
  3501  0012FA  ECCE  F018         	call	_strncmp	;wreg free
  3502  0012FE  5001               	movf	?_strncmp,w,c
  3503  001300  1002               	iorwf	?_strncmp+1,w,c
  3504  001302  A4D8               	btfss	status,2,c
  3505  001304  D029               	goto	l4128
  3506                           
  3507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3508  001306  0E02               	movlw	2
  3509  001308  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3510  00130C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3511  001310  26DE               	addwf	postinc2,f,c
  3512  001312  0E00               	movlw	0
  3513  001314  22DD               	addwfc	postdec2,f,c
  3514                           
  3515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3516  001316  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3517  00131A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3518  00131E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3519  001322  0E04               	movlw	4
  3520  001324  26DE               	addwf	postinc2,f,c
  3521  001326  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3522  00132A  0E00               	movlw	0
  3523  00132C  22DD               	addwfc	postdec2,f,c
  3524  00132E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3525  001332  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3526  001336  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3527  00133A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3528  00133E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3529  001342  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3530  001346  504B               	movf	??_vfpfcnvrt+2,w,c
  3531  001348  6E6A               	movwf	vfpfcnvrt@llu,c
  3532  00134A  504C               	movf	??_vfpfcnvrt+3,w,c
  3533  00134C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3534  00134E  504D               	movf	??_vfpfcnvrt+4,w,c
  3535  001350  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3536  001352  504E               	movf	??_vfpfcnvrt+5,w,c
  3537  001354  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3538  001356  D775               	goto	L10
  3539  001358                     l4128:
  3540  001358  FFFF               	dw	65535	; assembler added errata NOP
  3541                           
  3542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3543  00135A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3544  00135E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3545  001362  CFDE F001          	movff	postinc2,strncmp@_l
  3546  001366  CFDD F002          	movff	postdec2,strncmp@_l+1
  3547  00136A  0E48               	movlw	low STR_96
  3548  00136C  6E03               	movwf	strncmp@_r,c
  3549  00136E  0E06               	movlw	high STR_96
  3550  001370  6E04               	movwf	strncmp@_r+1,c
  3551  001372  0E00               	movlw	0
  3552  001374  6E06               	movwf	strncmp@n+1,c
  3553  001376  0E02               	movlw	2
  3554  001378  6E05               	movwf	strncmp@n,c
  3555  00137A  ECCE  F018         	call	_strncmp	;wreg free
  3556  00137E  5001               	movf	?_strncmp,w,c
  3557  001380  1002               	iorwf	?_strncmp+1,w,c
  3558  001382  A4D8               	btfss	status,2,c
  3559  001384  D023               	goto	l4136
  3560  001386                     u4250:
  3561  001386  FFFF               	dw	65535	; assembler added errata NOP
  3562                           
  3563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3564  001388  0E02               	movlw	2
  3565  00138A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3566  00138E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3567  001392  26DE               	addwf	postinc2,f,c
  3568  001394                     L19:
  3569  001394  FFFF               	dw	65535	; assembler added errata NOP
  3570  001396  0E00               	movlw	0
  3571  001398  22DD               	addwfc	postdec2,f,c
  3572                           
  3573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3574  00139A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3575  00139E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3576  0013A2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3577  0013A6  0E02               	movlw	2
  3578  0013A8  26DE               	addwf	postinc2,f,c
  3579  0013AA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3580  0013AE  0E00               	movlw	0
  3581  0013B0  22DD               	addwfc	postdec2,f,c
  3582  0013B2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3583  0013B6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3584  0013BA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3585  0013BE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3586  0013C2  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3587  0013C6  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3588  0013CA  D738               	goto	L9
  3589  0013CC                     l4136:
  3590  0013CC  FFFF               	dw	65535	; assembler added errata NOP
  3591                           
  3592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3593  0013CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3594  0013D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3595  0013D6  CFDE F001          	movff	postinc2,strncmp@_l
  3596  0013DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3597  0013DE  0E22               	movlw	low STR_101
  3598  0013E0  6E03               	movwf	strncmp@_r,c
  3599  0013E2  0E06               	movlw	high STR_101
  3600  0013E4  6E04               	movwf	strncmp@_r+1,c
  3601  0013E6  0E00               	movlw	0
  3602  0013E8  6E06               	movwf	strncmp@n+1,c
  3603  0013EA  0E03               	movlw	3
  3604  0013EC  6E05               	movwf	strncmp@n,c
  3605  0013EE  ECCE  F018         	call	_strncmp	;wreg free
  3606  0013F2  5001               	movf	?_strncmp,w,c
  3607  0013F4  1002               	iorwf	?_strncmp+1,w,c
  3608  0013F6  B4D8               	btfsc	status,2,c
  3609  0013F8  D016               	goto	u4270
  3610  0013FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3611  0013FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3612  001402  CFDE F001          	movff	postinc2,strncmp@_l
  3613  001406  CFDD F002          	movff	postdec2,strncmp@_l+1
  3614  00140A  0E0A               	movlw	low STR_105
  3615  00140C  6E03               	movwf	strncmp@_r,c
  3616  00140E  0E06               	movlw	high STR_105
  3617  001410  6E04               	movwf	strncmp@_r+1,c
  3618  001412  0E00               	movlw	0
  3619  001414  6E06               	movwf	strncmp@n+1,c
  3620  001416  0E03               	movlw	3
  3621  001418  6E05               	movwf	strncmp@n,c
  3622  00141A  ECCE  F018         	call	_strncmp	;wreg free
  3623  00141E  5001               	movf	?_strncmp,w,c
  3624  001420  1002               	iorwf	?_strncmp+1,w,c
  3625  001422  A4D8               	btfss	status,2,c
  3626  001424  D058               	goto	l4150
  3627  001426                     u4270:
  3628  001426  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3631  001428  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  00142C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  001430  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3634  001434  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3635  001438  0E02               	movlw	2
  3636  00143A  2649               	addwf	??_vfpfcnvrt,f,c
  3637  00143C  0E00               	movlw	0
  3638  00143E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3639  001440  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3640  001444  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3641  001448                     	if	0	;tblptru may be non-zero
  3642  001448                     	endif
  3643  001448                     	if	0	;tblptru may be non-zero
  3644  001448                     	endif
  3645  001448  0008               	tblrd		*
  3646  00144A  FFFF               	dw	65535	; errata NOP
  3647  00144C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3648                           
  3649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3650  001450  0E03               	movlw	3
  3651  001452  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3652  001456  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3653  00145A  26DE               	addwf	postinc2,f,c
  3654  00145C  0E00               	movlw	0
  3655  00145E  22DD               	addwfc	postdec2,f,c
  3656                           
  3657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3658  001460  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3659  001464  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3660  001468  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3661  00146C  0E02               	movlw	2
  3662  00146E  26DE               	addwf	postinc2,f,c
  3663  001470  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3664  001474  0E00               	movlw	0
  3665  001476  22DD               	addwfc	postdec2,f,c
  3666  001478  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3667  00147C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3668  001480  50DF               	movf	indf2,w,c
  3669  001482  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3670  001484  504B               	movf	??_vfpfcnvrt+2,w,c
  3671  001486  6E6A               	movwf	vfpfcnvrt@llu,c
  3672  001488  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3673  00148A                     L11:
  3674  00148A  FFFF               	dw	65535	; assembler added errata NOP
  3675  00148C  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3676  00148E  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3677  001490                     L12:
  3678  001490  FFFF               	dw	65535	; assembler added errata NOP
  3679  001492  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3680  001494  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3681  001496  6A70               	clrf	vfpfcnvrt@llu+6,c
  3682  001498  6A71               	clrf	vfpfcnvrt@llu+7,c
  3683                           
  3684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3685  00149A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3686  00149E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3687  0014A2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3688  0014A6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3689  0014AA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3690  0014AE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3691  0014B2  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3692  0014B6  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3693  0014BA  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3694  0014BE  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3695  0014C2  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3696  0014C6  EC94  F010         	call	_xtoa	;wreg free
  3697  0014CA                     L8:
  3698  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3699  0014CC  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3700  0014D0  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3701  0014D4  D18E               	goto	l525
  3702  0014D6                     l4150:
  3703  0014D6  FFFF               	dw	65535	; assembler added errata NOP
  3704                           
  3705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3706  0014D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3707  0014DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3708  0014E0  CFDE F001          	movff	postinc2,strncmp@_l
  3709  0014E4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3710  0014E8  0E23               	movlw	low (STR_101+1)
  3711  0014EA  6E03               	movwf	strncmp@_r,c
  3712  0014EC  0E06               	movlw	high (STR_101+1)
  3713  0014EE  6E04               	movwf	strncmp@_r+1,c
  3714  0014F0  0E00               	movlw	0
  3715  0014F2  6E06               	movwf	strncmp@n+1,c
  3716  0014F4  0E02               	movlw	2
  3717  0014F6  6E05               	movwf	strncmp@n,c
  3718  0014F8  ECCE  F018         	call	_strncmp	;wreg free
  3719  0014FC  5001               	movf	?_strncmp,w,c
  3720  0014FE  1002               	iorwf	?_strncmp+1,w,c
  3721  001500  B4D8               	btfsc	status,2,c
  3722  001502  D016               	goto	u4290
  3723  001504  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3724  001508  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3725  00150C  CFDE F001          	movff	postinc2,strncmp@_l
  3726  001510  CFDD F002          	movff	postdec2,strncmp@_l+1
  3727  001514  0E0B               	movlw	low (STR_105+1)
  3728  001516  6E03               	movwf	strncmp@_r,c
  3729  001518  0E06               	movlw	high (STR_105+1)
  3730  00151A  6E04               	movwf	strncmp@_r+1,c
  3731  00151C  0E00               	movlw	0
  3732  00151E  6E06               	movwf	strncmp@n+1,c
  3733  001520  0E02               	movlw	2
  3734  001522  6E05               	movwf	strncmp@n,c
  3735  001524  ECCE  F018         	call	_strncmp	;wreg free
  3736  001528  5001               	movf	?_strncmp,w,c
  3737  00152A  1002               	iorwf	?_strncmp+1,w,c
  3738  00152C  A4D8               	btfss	status,2,c
  3739  00152E  D014               	goto	l4164
  3740  001530                     u4290:
  3741  001530  FFFF               	dw	65535	; assembler added errata NOP
  3742                           
  3743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3744  001532  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3745  001536  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3746  00153A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3747  00153E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3748  001542  0E01               	movlw	1
  3749  001544  2649               	addwf	??_vfpfcnvrt,f,c
  3750  001546  0E00               	movlw	0
  3751  001548  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3752  00154A  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3753  00154E  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3754  001552                     	if	0	;tblptru may be non-zero
  3755  001552                     	endif
  3756  001552                     	if	0	;tblptru may be non-zero
  3757  001552                     	endif
  3758  001552  0008               	tblrd		*
  3759  001554  FFFF               	dw	65535	; errata NOP
  3760  001556  D0DB               	goto	L27
  3761  001558                     l4164:
  3762  001558  FFFF               	dw	65535	; assembler added errata NOP
  3763                           
  3764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3765  00155A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3766  00155E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3767  001562  CFDE FFF6          	movff	postinc2,tblptrl
  3768  001566  CFDD FFF7          	movff	postdec2,tblptrh
  3769  00156A                     	if	0	;tblptru may be non-zero
  3770  00156A                     	endif
  3771  00156A                     	if	0	;tblptru may be non-zero
  3772  00156A                     	endif
  3773  00156A  0008               	tblrd		*
  3774  00156C  FFFF               	dw	65535	; errata NOP
  3775  00156E  50F5               	movf	tablat,w,c
  3776  001570  0A78               	xorlw	120
  3777  001572  B4D8               	btfsc	status,2,c
  3778  001574  D00E               	goto	u4310
  3779  001576  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3780  00157A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3781  00157E  CFDE FFF6          	movff	postinc2,tblptrl
  3782  001582  CFDD FFF7          	movff	postdec2,tblptrh
  3783  001586                     	if	0	;tblptru may be non-zero
  3784  001586                     	endif
  3785  001586                     	if	0	;tblptru may be non-zero
  3786  001586                     	endif
  3787  001586  0008               	tblrd		*
  3788  001588  FFFF               	dw	65535	; errata NOP
  3789  00158A  50F5               	movf	tablat,w,c
  3790  00158C  0A58               	xorlw	88
  3791  00158E  A4D8               	btfss	status,2,c
  3792  001590  D013               	goto	l4178
  3793  001592                     u4310:
  3794  001592  FFFF               	dw	65535	; assembler added errata NOP
  3795                           
  3796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3797  001594  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3798  001598  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3799  00159C  CFDE FFF6          	movff	postinc2,tblptrl
  3800  0015A0  CFDD FFF7          	movff	postdec2,tblptrh
  3801  0015A4                     	if	0	;tblptru may be non-zero
  3802  0015A4                     	endif
  3803  0015A4                     	if	0	;tblptru may be non-zero
  3804  0015A4                     	endif
  3805  0015A4  0008               	tblrd		*
  3806  0015A6  FFFF               	dw	65535	; errata NOP
  3807  0015A8  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3808                           
  3809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3810  0015AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3811  0015B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3812  0015B4  2ADE               	incf	postinc2,f,c
  3813  0015B6  D0B4               	goto	L26
  3814  0015B8                     l4178:
  3815  0015B8  FFFF               	dw	65535	; assembler added errata NOP
  3816                           
  3817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3818  0015BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3819  0015BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3820  0015C2  CFDE F001          	movff	postinc2,strncmp@_l
  3821  0015C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3822  0015CA  0E4B               	movlw	low STR_119
  3823  0015CC  6E03               	movwf	strncmp@_r,c
  3824  0015CE  0E06               	movlw	high STR_119
  3825  0015D0  6E04               	movwf	strncmp@_r+1,c
  3826  0015D2  0E00               	movlw	0
  3827  0015D4  6E06               	movwf	strncmp@n+1,c
  3828  0015D6  0E02               	movlw	2
  3829  0015D8  6E05               	movwf	strncmp@n,c
  3830  0015DA  ECCE  F018         	call	_strncmp	;wreg free
  3831  0015DE  5001               	movf	?_strncmp,w,c
  3832  0015E0  1002               	iorwf	?_strncmp+1,w,c
  3833  0015E2  B4D8               	btfsc	status,2,c
  3834  0015E4  D016               	goto	u4330
  3835  0015E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3836  0015EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3837  0015EE  CFDE F001          	movff	postinc2,strncmp@_l
  3838  0015F2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3839  0015F6  0E2A               	movlw	low STR_123
  3840  0015F8  6E03               	movwf	strncmp@_r,c
  3841  0015FA  0E06               	movlw	high STR_123
  3842  0015FC  6E04               	movwf	strncmp@_r+1,c
  3843  0015FE  0E00               	movlw	0
  3844  001600  6E06               	movwf	strncmp@n+1,c
  3845  001602  0E02               	movlw	2
  3846  001604  6E05               	movwf	strncmp@n,c
  3847  001606  ECCE  F018         	call	_strncmp	;wreg free
  3848  00160A  5001               	movf	?_strncmp,w,c
  3849  00160C  1002               	iorwf	?_strncmp+1,w,c
  3850  00160E  A4D8               	btfss	status,2,c
  3851  001610  D03E               	goto	l4192
  3852  001612                     u4330:
  3853  001612  FFFF               	dw	65535	; assembler added errata NOP
  3854                           
  3855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3856  001614  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3857  001618  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3858  00161C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3859  001620  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3860  001624  0E01               	movlw	1
  3861  001626  2649               	addwf	??_vfpfcnvrt,f,c
  3862  001628  0E00               	movlw	0
  3863  00162A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3864  00162C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3865  001630  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3866  001634                     	if	0	;tblptru may be non-zero
  3867  001634                     	endif
  3868  001634                     	if	0	;tblptru may be non-zero
  3869  001634                     	endif
  3870  001634  0008               	tblrd		*
  3871  001636  FFFF               	dw	65535	; errata NOP
  3872  001638  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3873                           
  3874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3875  00163C  0E02               	movlw	2
  3876  00163E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3877  001642  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3878  001646  26DE               	addwf	postinc2,f,c
  3879  001648  0E00               	movlw	0
  3880  00164A  22DD               	addwfc	postdec2,f,c
  3881                           
  3882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3883  00164C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3884  001650  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3885  001654  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3886  001658  0E04               	movlw	4
  3887  00165A  26DE               	addwf	postinc2,f,c
  3888  00165C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3889  001660  0E00               	movlw	0
  3890  001662  22DD               	addwfc	postdec2,f,c
  3891  001664  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3892  001668  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3893  00166C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3894  001670  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3895  001674  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3896  001678  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3897  00167C  504B               	movf	??_vfpfcnvrt+2,w,c
  3898  00167E  6E6A               	movwf	vfpfcnvrt@llu,c
  3899  001680  504C               	movf	??_vfpfcnvrt+3,w,c
  3900  001682  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3901  001684  504D               	movf	??_vfpfcnvrt+4,w,c
  3902  001686  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3903  001688  504E               	movf	??_vfpfcnvrt+5,w,c
  3904  00168A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3905  00168C  D701               	goto	L12
  3906  00168E                     l4192:
  3907  00168E  FFFF               	dw	65535	; assembler added errata NOP
  3908                           
  3909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3910  001690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3911  001694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3912  001698  CFDE F001          	movff	postinc2,strncmp@_l
  3913  00169C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3914  0016A0  0E4E               	movlw	low STR_128
  3915  0016A2  6E03               	movwf	strncmp@_r,c
  3916  0016A4  0E06               	movlw	high STR_128
  3917  0016A6  6E04               	movwf	strncmp@_r+1,c
  3918  0016A8  0E00               	movlw	0
  3919  0016AA  6E06               	movwf	strncmp@n+1,c
  3920  0016AC  0E02               	movlw	2
  3921  0016AE  6E05               	movwf	strncmp@n,c
  3922  0016B0  ECCE  F018         	call	_strncmp	;wreg free
  3923  0016B4  5001               	movf	?_strncmp,w,c
  3924  0016B6  1002               	iorwf	?_strncmp+1,w,c
  3925  0016B8  B4D8               	btfsc	status,2,c
  3926  0016BA  D016               	goto	u4350
  3927  0016BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3928  0016C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3929  0016C4  CFDE F001          	movff	postinc2,strncmp@_l
  3930  0016C8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3931  0016CC  0E2D               	movlw	low STR_132
  3932  0016CE  6E03               	movwf	strncmp@_r,c
  3933  0016D0  0E06               	movlw	high STR_132
  3934  0016D2  6E04               	movwf	strncmp@_r+1,c
  3935  0016D4  0E00               	movlw	0
  3936  0016D6  6E06               	movwf	strncmp@n+1,c
  3937  0016D8  0E02               	movlw	2
  3938  0016DA  6E05               	movwf	strncmp@n,c
  3939  0016DC  ECCE  F018         	call	_strncmp	;wreg free
  3940  0016E0  5001               	movf	?_strncmp,w,c
  3941  0016E2  1002               	iorwf	?_strncmp+1,w,c
  3942  0016E4  A4D8               	btfss	status,2,c
  3943  0016E6  D038               	goto	l4206
  3944  0016E8                     u4350:
  3945  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  3946                           
  3947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3948  0016EA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3949  0016EE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3950  0016F2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3951  0016F6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3952  0016FA  0E01               	movlw	1
  3953  0016FC  2649               	addwf	??_vfpfcnvrt,f,c
  3954  0016FE  0E00               	movlw	0
  3955  001700  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3956  001702  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3957  001706  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3958  00170A                     	if	0	;tblptru may be non-zero
  3959  00170A                     	endif
  3960  00170A                     	if	0	;tblptru may be non-zero
  3961  00170A                     	endif
  3962  00170A  0008               	tblrd		*
  3963  00170C  FFFF               	dw	65535	; errata NOP
  3964  00170E                     L27:
  3965  00170E  FFFF               	dw	65535	; assembler added errata NOP
  3966  001710  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3967                           
  3968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3969  001714  0E02               	movlw	2
  3970  001716  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971  00171A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972  00171E  26DE               	addwf	postinc2,f,c
  3973  001720                     L26:
  3974  001720  FFFF               	dw	65535	; assembler added errata NOP
  3975  001722  0E00               	movlw	0
  3976  001724  22DD               	addwfc	postdec2,f,c
  3977                           
  3978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3979  001726  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3980  00172A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3981  00172E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3982  001732  0E02               	movlw	2
  3983  001734  26DE               	addwf	postinc2,f,c
  3984  001736  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3985  00173A  0E00               	movlw	0
  3986  00173C  22DD               	addwfc	postdec2,f,c
  3987  00173E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3988  001742  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3989  001746  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3990  00174A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3991  00174E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3992  001752  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3993  001756  D699               	goto	L11
  3994  001758                     l4206:
  3995  001758  FFFF               	dw	65535	; assembler added errata NOP
  3996                           
  3997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3998  00175A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3999  00175E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4000  001762  CFDE FFF6          	movff	postinc2,tblptrl
  4001  001766  CFDD FFF7          	movff	postdec2,tblptrh
  4002  00176A                     	if	0	;tblptru may be non-zero
  4003  00176A                     	endif
  4004  00176A                     	if	0	;tblptru may be non-zero
  4005  00176A                     	endif
  4006  00176A  0008               	tblrd		*
  4007  00176C  FFFF               	dw	65535	; errata NOP
  4008  00176E  50F5               	movf	tablat,w,c
  4009  001770  0A25               	xorlw	37
  4010  001772  A4D8               	btfss	status,2,c
  4011  001774  D018               	goto	l4216
  4012                           
  4013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  4014  001776  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4015  00177A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4016  00177E  2ADE               	incf	postinc2,f,c
  4017  001780  0E00               	movlw	0
  4018  001782  22DD               	addwfc	postdec2,f,c
  4019                           
  4020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  4021  001784  0E00               	movlw	0
  4022  001786  6E02               	movwf	fputc@c+1,c
  4023  001788  0E25               	movlw	37
  4024  00178A  6E01               	movwf	fputc@c,c
  4025  00178C  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4026  001790  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4027  001794  EC8D  F019         	call	_fputc	;wreg free
  4028  001798                     l4212:
  4029  001798  FFFF               	dw	65535	; assembler added errata NOP
  4030                           
  4031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  4032  00179A  0E00               	movlw	0
  4033  00179C  6E44               	movwf	?_vfpfcnvrt+1,c
  4034  00179E  0E01               	movlw	1
  4035  0017A0                     L6:
  4036  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  4037  0017A2  6E43               	movwf	?_vfpfcnvrt,c
  4038  0017A4  D026               	goto	l525
  4039  0017A6                     l4216:
  4040  0017A6  FFFF               	dw	65535	; assembler added errata NOP
  4041                           
  4042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  4043  0017A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4044  0017AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4045  0017B0  2ADE               	incf	postinc2,f,c
  4046  0017B2  0E00               	movlw	0
  4047  0017B4  22DD               	addwfc	postdec2,f,c
  4048  0017B6  EFA8  F007         	goto	l4036
  4049  0017BA                     l4222:
  4050  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  4051                           
  4052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  4053  0017BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4054  0017C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4055  0017C4  CFDE FFF6          	movff	postinc2,tblptrl
  4056  0017C8  CFDD FFF7          	movff	postdec2,tblptrh
  4057  0017CC                     	if	0	;tblptru may be non-zero
  4058  0017CC                     	endif
  4059  0017CC                     	if	0	;tblptru may be non-zero
  4060  0017CC                     	endif
  4061  0017CC  0008               	tblrd		*
  4062  0017CE  FFFF               	dw	65535	; errata NOP
  4063  0017D0  50F5               	movf	tablat,w,c
  4064  0017D2  6E01               	movwf	fputc@c,c
  4065  0017D4  6A02               	clrf	fputc@c+1,c
  4066  0017D6  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4067  0017DA  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4068  0017DE  EC8D  F019         	call	_fputc	;wreg free
  4069                           
  4070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  4071  0017E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4072  0017E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4073  0017EA  2ADE               	incf	postinc2,f,c
  4074  0017EC  0E00               	movlw	0
  4075  0017EE  22DD               	addwfc	postdec2,f,c
  4076  0017F0  D7D3               	goto	l4212
  4077  0017F2                     l525:
  4078  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  4079  0017F4  0012               	return		;funcret
  4080  0017F6  FFFF               	dw	65535	; errata NOP
  4081  0017F8                     __end_of_vfpfcnvrt:
  4082                           	opt callstack 0
  4083                           
  4084 ;; *************** function _xtoa *****************
  4085 ;; Defined at:
  4086 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4089 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4090 ;;  d               8   29[COMRAM] unsigned long long 
  4091 ;;  x               1   37[COMRAM] unsigned char 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  n               8   54[COMRAM] unsigned long long 
  4094 ;;  c               2   64[COMRAM] int 
  4095 ;;  i               2   62[COMRAM] int 
  4096 ;;  w               2   52[COMRAM] int 
  4097 ;;  p               2   50[COMRAM] int 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2   27[COMRAM] int 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4107 ;;      Params:        11       0       0       0       0       0       0
  4108 ;;      Locals:        20       0       0       0       0       0       0
  4109 ;;      Temps:          8       0       0       0       0       0       0
  4110 ;;      Totals:        39       0       0       0       0       0       0
  4111 ;;Total ram usage:       39 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    6
  4114 ;; This function calls:
  4115 ;;		_isalpha
  4116 ;;		_isupper
  4117 ;;		_pad
  4118 ;;		_toupper
  4119 ;; This function is called by:
  4120 ;;		_vfpfcnvrt
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text8
  4125  002128                     __ptext8:
  4126                           	opt callstack 0
  4127  002128                     _xtoa:
  4128                           	opt callstack 0
  4129  002128  FFFF               	dw	65535	; assembler added errata NOP
  4130                           
  4131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  4132                           
  4133                           ;incstack = 0
  4134  00212A  0100               	movlb	0	; () banked
  4135  00212C  AF94               	btfss	(_prec+1)& (0+255),7,b
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  4139  00212E  9395               	bcf	_flags& (0+255),1,b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  4143  002130  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4144  002132  D005               	goto	u3570
  4145  002134  5194               	movf	(_prec+1)& (0+255),w,b
  4146  002136  E109               	bnz	l463
  4147  002138  0593               	decf	_prec& (0+255),w,b
  4148  00213A  B0D8               	btfsc	status,0,c
  4149  00213C  D006               	goto	l463
  4150  00213E                     u3570:
  4151  00213E  FFFF               	dw	65535	; assembler added errata NOP
  4152                           
  4153                           ; BSR set to: 0
  4154  002140  0E00               	movlw	0
  4155  002142  6E34               	movwf	xtoa@p+1,c
  4156  002144  0E01               	movlw	1
  4157  002146  6E33               	movwf	xtoa@p,c
  4158  002148  D005               	goto	l465
  4159  00214A                     l463:
  4160  00214A  FFFF               	dw	65535	; assembler added errata NOP
  4161                           
  4162                           ; BSR set to: 0
  4163  00214C  C093  F033         	movff	_prec,xtoa@p
  4164  002150  C094  F034         	movff	_prec+1,xtoa@p+1
  4165  002154                     l465:
  4166  002154  FFFF               	dw	65535	; assembler added errata NOP
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  4170  002156  C091  F035         	movff	_width,xtoa@w
  4171  00215A  C092  F036         	movff	_width+1,xtoa@w+1
  4172                           
  4173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  4174  00215E  A995               	btfss	_flags& (0+255),4,b
  4175  002160  D004               	goto	l3736
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  4179  002162  0EFE               	movlw	254
  4180  002164  2635               	addwf	xtoa@w,f,c
  4181  002166  0EFF               	movlw	255
  4182  002168  2236               	addwfc	xtoa@w+1,f,c
  4183  00216A                     l3736:
  4184  00216A  FFFF               	dw	65535	; assembler added errata NOP
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4188  00216C  C01E  F037         	movff	xtoa@d,xtoa@n
  4189  002170  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4190  002174  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4191  002178  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4192  00217C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4193  002180  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4194  002184  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4195  002188  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  4199  00218C  0E00               	movlw	0
  4200  00218E  6E40               	movwf	xtoa@i+1,c
  4201  002190  0E1F               	movlw	31
  4202  002192  6E3F               	movwf	xtoa@i,c
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  4206  002194  0E00               	movlw	0
  4207  002196  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4208                           
  4209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4210  002198  D09D               	goto	l3772
  4211  00219A                     l3742:
  4212  00219A  FFFF               	dw	65535	; assembler added errata NOP
  4213                           
  4214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4215  00219C  063F               	decf	xtoa@i,f,c
  4216  00219E  A0D8               	btfss	status,0,c
  4217  0021A0  0640               	decf	xtoa@i+1,f,c
  4218                           
  4219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  4220  0021A2  0E0F               	movlw	15
  4221  0021A4  1437               	andwf	xtoa@n,w,c
  4222  0021A6  6E41               	movwf	xtoa@c,c
  4223  0021A8  6A42               	clrf	xtoa@c+1,c
  4224                           
  4225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  4226  0021AA  BE42               	btfsc	xtoa@c+1,7,c
  4227  0021AC  D008               	goto	l3750
  4228  0021AE  5042               	movf	xtoa@c+1,w,c
  4229  0021B0  E104               	bnz	u3590
  4230  0021B2  0E0A               	movlw	10
  4231  0021B4  5C41               	subwf	xtoa@c,w,c
  4232  0021B6  A0D8               	btfss	status,0,c
  4233  0021B8  D002               	goto	l3750
  4234  0021BA                     u3590:
  4235  0021BA  0E57               	movlw	87
  4236  0021BC  D002               	goto	L20
  4237  0021BE                     l3750:
  4238  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  4239  0021C0  0E30               	movlw	48
  4240  0021C2                     L20:
  4241  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  4242  0021C4  2441               	addwf	xtoa@c,w,c
  4243  0021C6  6E41               	movwf	xtoa@c,c
  4244  0021C8  0E00               	movlw	0
  4245  0021CA  2042               	addwfc	xtoa@c+1,w,c
  4246  0021CC  6E42               	movwf	xtoa@c+1,c
  4247                           
  4248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  4249  0021CE  0EBF               	movlw	191
  4250  0021D0  6E27               	movwf	??_xtoa& (0+255),c
  4251  0021D2  0EFF               	movlw	255
  4252  0021D4  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4253  0021D6  5026               	movf	xtoa@x,w,c
  4254  0021D8  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4255  0021DA  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  4256  0021DC  5027               	movf	??_xtoa,w,c
  4257  0021DE  2629               	addwf	??_xtoa+2,f,c
  4258  0021E0  5028               	movf	??_xtoa+1,w,c
  4259  0021E2  222A               	addwfc	??_xtoa+3,f,c
  4260  0021E4  502A               	movf	??_xtoa+3,w,c
  4261  0021E6  E106               	bnz	u3600
  4262  0021E8  0E1A               	movlw	26
  4263  0021EA  5C29               	subwf	??_xtoa+2,w,c
  4264  0021EC  B0D8               	btfsc	status,0,c
  4265  0021EE  D002               	goto	u3600
  4266  0021F0  0E01               	movlw	1
  4267  0021F2  D002               	goto	u3610
  4268  0021F4                     u3600:
  4269  0021F4  FFFF               	dw	65535	; assembler added errata NOP
  4270  0021F6  0E00               	movlw	0
  4271  0021F8                     u3610:
  4272  0021F8  FFFF               	dw	65535	; assembler added errata NOP
  4273  0021FA  6E2F               	movwf	_xtoa$1112,c
  4274  0021FC  6A30               	clrf	_xtoa$1112+1,c
  4275  0021FE  502F               	movf	_xtoa$1112,w,c
  4276  002200  1030               	iorwf	_xtoa$1112+1,w,c
  4277  002202  B4D8               	btfsc	status,2,c
  4278  002204  D029               	goto	l3764
  4279  002206  0E9F               	movlw	159
  4280  002208  6E27               	movwf	??_xtoa& (0+255),c
  4281  00220A  0EFF               	movlw	255
  4282  00220C  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4283  00220E  0E20               	movlw	32
  4284  002210  1041               	iorwf	xtoa@c,w,c
  4285  002212  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4286  002214  0E00               	movlw	0
  4287  002216  1042               	iorwf	xtoa@c+1,w,c
  4288  002218  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  4289  00221A  5027               	movf	??_xtoa,w,c
  4290  00221C  2629               	addwf	??_xtoa+2,f,c
  4291  00221E  5028               	movf	??_xtoa+1,w,c
  4292  002220  222A               	addwfc	??_xtoa+3,f,c
  4293  002222  502A               	movf	??_xtoa+3,w,c
  4294  002224  E106               	bnz	u3630
  4295  002226  0E1A               	movlw	26
  4296  002228  5C29               	subwf	??_xtoa+2,w,c
  4297  00222A  B0D8               	btfsc	status,0,c
  4298  00222C  D002               	goto	u3630
  4299  00222E  0E01               	movlw	1
  4300  002230  D002               	goto	u3640
  4301  002232                     u3630:
  4302  002232  FFFF               	dw	65535	; assembler added errata NOP
  4303  002234  0E00               	movlw	0
  4304  002236                     u3640:
  4305  002236  FFFF               	dw	65535	; assembler added errata NOP
  4306  002238  6E31               	movwf	_xtoa$1113,c
  4307  00223A  6A32               	clrf	_xtoa$1113+1,c
  4308  00223C  5031               	movf	_xtoa$1113,w,c
  4309  00223E  1032               	iorwf	_xtoa$1113+1,w,c
  4310  002240  B4D8               	btfsc	status,2,c
  4311  002242  D00A               	goto	l3764
  4312                           
  4313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4314  002244  C041  F007         	movff	xtoa@c,toupper@c
  4315  002248  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4316  00224C  EC1C  F01B         	call	_toupper	;wreg free
  4317  002250  C007  F041         	movff	?_toupper,xtoa@c
  4318  002254  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4319  002258                     l3764:
  4320  002258  FFFF               	dw	65535	; assembler added errata NOP
  4321                           
  4322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4323  00225A  0E9B               	movlw	low _dbuf
  4324  00225C  243F               	addwf	xtoa@i,w,c
  4325  00225E  6ED9               	movwf	fsr2l,c
  4326  002260  0E00               	movlw	high _dbuf
  4327  002262  2040               	addwfc	xtoa@i+1,w,c
  4328  002264  6EDA               	movwf	fsr2h,c
  4329  002266  C041  FFDF         	movff	xtoa@c,indf2
  4330                           
  4331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4332  00226A  0633               	decf	xtoa@p,f,c
  4333  00226C  A0D8               	btfss	status,0,c
  4334  00226E  0634               	decf	xtoa@p+1,f,c
  4335                           
  4336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4337  002270  0635               	decf	xtoa@w,f,c
  4338  002272  A0D8               	btfss	status,0,c
  4339  002274  0636               	decf	xtoa@w+1,f,c
  4340                           
  4341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4342  002276  C037  F027         	movff	xtoa@n,??_xtoa
  4343  00227A  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4344  00227E  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4345  002282  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4346  002286  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4347  00228A  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4348  00228E  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4349  002292  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4350  002296  0E05               	movlw	5
  4351  002298  D00A               	goto	u3660
  4352  00229A                     u3665:
  4353  00229A  FFFF               	dw	65535	; assembler added errata NOP
  4354  00229C  90D8               	bcf	status,0,c
  4355  00229E  322E               	rrcf	??_xtoa+7,f,c
  4356  0022A0  322D               	rrcf	??_xtoa+6,f,c
  4357  0022A2  322C               	rrcf	??_xtoa+5,f,c
  4358  0022A4  322B               	rrcf	??_xtoa+4,f,c
  4359  0022A6  322A               	rrcf	??_xtoa+3,f,c
  4360  0022A8  3229               	rrcf	??_xtoa+2,f,c
  4361  0022AA  3228               	rrcf	??_xtoa+1,f,c
  4362  0022AC  3227               	rrcf	??_xtoa,f,c
  4363  0022AE                     u3660:
  4364  0022AE  FFFF               	dw	65535	; assembler added errata NOP
  4365  0022B0  2EE8               	decfsz	wreg,f,c
  4366  0022B2  D7F3               	goto	u3665
  4367  0022B4  C027  F037         	movff	??_xtoa,xtoa@n
  4368  0022B8  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4369  0022BC  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4370  0022C0  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4371  0022C4  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4372  0022C8  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4373  0022CC  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4374  0022D0  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4375  0022D4                     l3772:
  4376  0022D4  FFFF               	dw	65535	; assembler added errata NOP
  4377                           
  4378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4379  0022D6  BE40               	btfsc	xtoa@i+1,7,c
  4380  0022D8  D022               	goto	u3710
  4381  0022DA  5040               	movf	xtoa@i+1,w,c
  4382  0022DC  E104               	bnz	u3670
  4383  0022DE  0E02               	movlw	2
  4384  0022E0  5C3F               	subwf	xtoa@i,w,c
  4385  0022E2  A0D8               	btfss	status,0,c
  4386  0022E4  D01C               	goto	u3710
  4387  0022E6                     u3670:
  4388  0022E6  5037               	movf	xtoa@n,w,c
  4389  0022E8  1038               	iorwf	xtoa@n+1,w,c
  4390  0022EA  1039               	iorwf	xtoa@n+2,w,c
  4391  0022EC  103A               	iorwf	xtoa@n+3,w,c
  4392  0022EE  103B               	iorwf	xtoa@n+4,w,c
  4393  0022F0  103C               	iorwf	xtoa@n+5,w,c
  4394  0022F2  103D               	iorwf	xtoa@n+6,w,c
  4395  0022F4  103E               	iorwf	xtoa@n+7,w,c
  4396  0022F6  A4D8               	btfss	status,2,c
  4397  0022F8  D750               	goto	l3742
  4398  0022FA  BE34               	btfsc	xtoa@p+1,7,c
  4399  0022FC  D005               	goto	u3690
  4400  0022FE  5034               	movf	xtoa@p+1,w,c
  4401  002300  E102               	bnz	u3691
  4402  002302  0433               	decf	xtoa@p,w,c
  4403  002304  B0D8               	btfsc	status,0,c
  4404  002306                     u3691:
  4405  002306  D749               	goto	l3742
  4406  002308                     u3690:
  4407  002308  FFFF               	dw	65535	; assembler added errata NOP
  4408  00230A  BE36               	btfsc	xtoa@w+1,7,c
  4409  00230C  D008               	goto	u3710
  4410  00230E  5036               	movf	xtoa@w+1,w,c
  4411  002310  E103               	bnz	u3700
  4412  002312  0435               	decf	xtoa@w,w,c
  4413  002314  A0D8               	btfss	status,0,c
  4414  002316  D003               	goto	u3710
  4415  002318                     u3700:
  4416  002318  0100               	movlb	0	; () banked
  4417  00231A  B395               	btfsc	_flags& (0+255),1,b
  4418  00231C  D73E               	goto	l3742
  4419  00231E                     u3710:
  4420  00231E  FFFF               	dw	65535	; assembler added errata NOP
  4421                           
  4422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4423  002320  0100               	movlb	0	; () banked
  4424  002322  A995               	btfss	_flags& (0+255),4,b
  4425  002324  D016               	goto	l3788
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4429  002326  063F               	decf	xtoa@i,f,c
  4430  002328  A0D8               	btfss	status,0,c
  4431  00232A  0640               	decf	xtoa@i+1,f,c
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4435  00232C  0E9B               	movlw	low _dbuf
  4436  00232E  243F               	addwf	xtoa@i,w,c
  4437  002330  6ED9               	movwf	fsr2l,c
  4438  002332  0E00               	movlw	high _dbuf
  4439  002334  2040               	addwfc	xtoa@i+1,w,c
  4440  002336  6EDA               	movwf	fsr2h,c
  4441  002338  C026  FFDF         	movff	xtoa@x,indf2
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4445  00233C  063F               	decf	xtoa@i,f,c
  4446  00233E  A0D8               	btfss	status,0,c
  4447  002340  0640               	decf	xtoa@i+1,f,c
  4448                           
  4449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4450  002342  0E9B               	movlw	low _dbuf
  4451  002344  243F               	addwf	xtoa@i,w,c
  4452  002346  6ED9               	movwf	fsr2l,c
  4453  002348  0E00               	movlw	high _dbuf
  4454  00234A  2040               	addwfc	xtoa@i+1,w,c
  4455  00234C  6EDA               	movwf	fsr2h,c
  4456  00234E  0E30               	movlw	48
  4457  002350  6EDF               	movwf	indf2,c
  4458  002352                     l3788:
  4459  002352  FFFF               	dw	65535	; assembler added errata NOP
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4463  002354  C01C  F011         	movff	xtoa@fp,pad@fp
  4464  002358  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4465  00235C  0E9B               	movlw	low _dbuf
  4466  00235E  243F               	addwf	xtoa@i,w,c
  4467  002360  6E13               	movwf	pad@buf,c
  4468  002362  0E00               	movlw	high _dbuf
  4469  002364  2040               	addwfc	xtoa@i+1,w,c
  4470  002366  6E14               	movwf	pad@buf+1,c
  4471  002368  C035  F015         	movff	xtoa@w,pad@p
  4472  00236C  C036  F016         	movff	xtoa@w+1,pad@p+1
  4473  002370  ECE3  F019         	call	_pad	;wreg free
  4474  002374  C011  F01C         	movff	?_pad,?_xtoa
  4475  002378  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4476  00237C  0012               	return		;funcret
  4477  00237E  FFFF               	dw	65535	; errata NOP
  4478  002380                     __end_of_xtoa:
  4479                           	opt callstack 0
  4480                           
  4481 ;; *************** function _toupper *****************
  4482 ;; Defined at:
  4483 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  c               2    6[COMRAM] int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2    6[COMRAM] int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4497 ;;      Params:         2       0       0       0       0       0       0
  4498 ;;      Locals:         2       0       0       0       0       0       0
  4499 ;;      Temps:          4       0       0       0       0       0       0
  4500 ;;      Totals:         8       0       0       0       0       0       0
  4501 ;;Total ram usage:        8 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    3
  4504 ;; This function calls:
  4505 ;;		_islower
  4506 ;; This function is called by:
  4507 ;;		_xtoa
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text9
  4512  003638                     __ptext9:
  4513                           	opt callstack 0
  4514  003638                     _toupper:
  4515                           	opt callstack 0
  4516  003638  FFFF               	dw	65535	; assembler added errata NOP
  4517                           
  4518                           ;incstack = 0
  4519  00363A  0E9F               	movlw	159
  4520  00363C  6E09               	movwf	??_toupper& (0+255),c
  4521  00363E  0EFF               	movlw	255
  4522  003640  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4523  003642  C007  F00B         	movff	toupper@c,??_toupper+2
  4524  003646  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4525  00364A  5009               	movf	??_toupper,w,c
  4526  00364C  260B               	addwf	??_toupper+2,f,c
  4527  00364E  500A               	movf	??_toupper+1,w,c
  4528  003650  220C               	addwfc	??_toupper+3,f,c
  4529  003652  500C               	movf	??_toupper+3,w,c
  4530  003654  E106               	bnz	u2870
  4531  003656  0E1A               	movlw	26
  4532  003658  5C0B               	subwf	??_toupper+2,w,c
  4533  00365A  B0D8               	btfsc	status,0,c
  4534  00365C  D002               	goto	u2870
  4535  00365E  0E01               	movlw	1
  4536  003660  D002               	goto	u2880
  4537  003662                     u2870:
  4538  003662  FFFF               	dw	65535	; assembler added errata NOP
  4539  003664  0E00               	movlw	0
  4540  003666                     u2880:
  4541  003666  FFFF               	dw	65535	; assembler added errata NOP
  4542  003668  6E0D               	movwf	_toupper$1879,c
  4543  00366A  6A0E               	clrf	_toupper$1879+1,c
  4544  00366C  500D               	movf	_toupper$1879,w,c
  4545  00366E  100E               	iorwf	_toupper$1879+1,w,c
  4546  003670  B4D8               	btfsc	status,2,c
  4547  003672  D005               	goto	l1398
  4548  003674  0E5F               	movlw	95
  4549  003676  1407               	andwf	toupper@c,w,c
  4550  003678  6E07               	movwf	?_toupper,c
  4551  00367A  6A08               	clrf	?_toupper+1,c
  4552  00367C  D005               	goto	l1403
  4553  00367E                     l1398:
  4554  00367E  FFFF               	dw	65535	; assembler added errata NOP
  4555  003680  C007  F007         	movff	toupper@c,?_toupper
  4556  003684  C008  F008         	movff	toupper@c+1,?_toupper+1
  4557  003688                     l1403:
  4558  003688  FFFF               	dw	65535	; assembler added errata NOP
  4559  00368A  0012               	return		;funcret
  4560  00368C  FFFF               	dw	65535	; errata NOP
  4561  00368E                     __end_of_toupper:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function _islower *****************
  4565 ;; Defined at:
  4566 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  c               2    0[COMRAM] int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  2    0[COMRAM] int 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4580 ;;      Params:         2       0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0
  4582 ;;      Temps:          4       0       0       0       0       0       0
  4583 ;;      Totals:         6       0       0       0       0       0       0
  4584 ;;Total ram usage:        6 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    2
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_toupper
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text10
  4595  003904                     __ptext10:
  4596                           	opt callstack 0
  4597  003904                     _islower:
  4598                           	opt callstack 0
  4599  003904  FFFF               	dw	65535	; assembler added errata NOP
  4600                           
  4601                           ;incstack = 0
  4602  003906  0E9F               	movlw	159
  4603  003908  6E03               	movwf	??_islower& (0+255),c
  4604  00390A  0EFF               	movlw	255
  4605  00390C  6E04               	movwf	(??_islower+1)& (0+255),c
  4606  00390E  C001  F005         	movff	islower@c,??_islower+2
  4607  003912  C002  F006         	movff	islower@c+1,??_islower+3
  4608  003916  5003               	movf	??_islower,w,c
  4609  003918  2605               	addwf	??_islower+2,f,c
  4610  00391A  5004               	movf	??_islower+1,w,c
  4611  00391C  2206               	addwfc	??_islower+3,f,c
  4612  00391E  5006               	movf	??_islower+3,w,c
  4613  003920  E106               	bnz	u2760
  4614  003922  0E1A               	movlw	26
  4615  003924  5C05               	subwf	??_islower+2,w,c
  4616  003926  B0D8               	btfsc	status,0,c
  4617  003928  D002               	goto	u2760
  4618  00392A  0E01               	movlw	1
  4619  00392C  D002               	goto	u2770
  4620  00392E                     u2760:
  4621  00392E  FFFF               	dw	65535	; assembler added errata NOP
  4622  003930  0E00               	movlw	0
  4623  003932                     u2770:
  4624  003932  FFFF               	dw	65535	; assembler added errata NOP
  4625  003934  6E01               	movwf	?_islower,c
  4626  003936  6A02               	clrf	?_islower+1,c
  4627  003938  0012               	return		;funcret
  4628  00393A  FFFF               	dw	65535	; errata NOP
  4629  00393C                     __end_of_islower:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _isupper *****************
  4633 ;; Defined at:
  4634 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  c               2    0[COMRAM] int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[COMRAM] int 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4648 ;;      Params:         2       0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0
  4650 ;;      Temps:          4       0       0       0       0       0       0
  4651 ;;      Totals:         6       0       0       0       0       0       0
  4652 ;;Total ram usage:        6 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    2
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_xtoa
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text11
  4663  00393C                     __ptext11:
  4664                           	opt callstack 0
  4665  00393C                     _isupper:
  4666                           	opt callstack 0
  4667  00393C  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ;incstack = 0
  4670  00393E  0EBF               	movlw	191
  4671  003940  6E03               	movwf	??_isupper& (0+255),c
  4672  003942  0EFF               	movlw	255
  4673  003944  6E04               	movwf	(??_isupper+1)& (0+255),c
  4674  003946  C001  F005         	movff	isupper@c,??_isupper+2
  4675  00394A  C002  F006         	movff	isupper@c+1,??_isupper+3
  4676  00394E  5003               	movf	??_isupper,w,c
  4677  003950  2605               	addwf	??_isupper+2,f,c
  4678  003952  5004               	movf	??_isupper+1,w,c
  4679  003954  2206               	addwfc	??_isupper+3,f,c
  4680  003956  5006               	movf	??_isupper+3,w,c
  4681  003958  E106               	bnz	u2830
  4682  00395A  0E1A               	movlw	26
  4683  00395C  5C05               	subwf	??_isupper+2,w,c
  4684  00395E  B0D8               	btfsc	status,0,c
  4685  003960  D002               	goto	u2830
  4686  003962  0E01               	movlw	1
  4687  003964  D002               	goto	u2840
  4688  003966                     u2830:
  4689  003966  FFFF               	dw	65535	; assembler added errata NOP
  4690  003968  0E00               	movlw	0
  4691  00396A                     u2840:
  4692  00396A  FFFF               	dw	65535	; assembler added errata NOP
  4693  00396C  6E01               	movwf	?_isupper,c
  4694  00396E  6A02               	clrf	?_isupper+1,c
  4695  003970  0012               	return		;funcret
  4696  003972  FFFF               	dw	65535	; errata NOP
  4697  003974                     __end_of_isupper:
  4698                           	opt callstack 0
  4699                           
  4700 ;; *************** function _isalpha *****************
  4701 ;; Defined at:
  4702 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  c               2    0[COMRAM] int 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  2    0[COMRAM] int 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4716 ;;      Params:         2       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0
  4718 ;;      Temps:          4       0       0       0       0       0       0
  4719 ;;      Totals:         6       0       0       0       0       0       0
  4720 ;;Total ram usage:        6 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    2
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_xtoa
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text12
  4731  00388C                     __ptext12:
  4732                           	opt callstack 0
  4733  00388C                     _isalpha:
  4734                           	opt callstack 0
  4735  00388C  FFFF               	dw	65535	; assembler added errata NOP
  4736                           
  4737                           ;incstack = 0
  4738  00388E  0E9F               	movlw	159
  4739  003890  6E03               	movwf	??_isalpha& (0+255),c
  4740  003892  0EFF               	movlw	255
  4741  003894  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4742  003896  0E20               	movlw	32
  4743  003898  1001               	iorwf	isalpha@c,w,c
  4744  00389A  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4745  00389C  0E00               	movlw	0
  4746  00389E  1002               	iorwf	isalpha@c+1,w,c
  4747  0038A0  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4748  0038A2  5003               	movf	??_isalpha,w,c
  4749  0038A4  2605               	addwf	??_isalpha+2,f,c
  4750  0038A6  5004               	movf	??_isalpha+1,w,c
  4751  0038A8  2206               	addwfc	??_isalpha+3,f,c
  4752  0038AA  5006               	movf	??_isalpha+3,w,c
  4753  0038AC  E106               	bnz	u2850
  4754  0038AE  0E1A               	movlw	26
  4755  0038B0  5C05               	subwf	??_isalpha+2,w,c
  4756  0038B2  B0D8               	btfsc	status,0,c
  4757  0038B4  D002               	goto	u2850
  4758  0038B6  0E01               	movlw	1
  4759  0038B8  D002               	goto	u2860
  4760  0038BA                     u2850:
  4761  0038BA  FFFF               	dw	65535	; assembler added errata NOP
  4762  0038BC  0E00               	movlw	0
  4763  0038BE                     u2860:
  4764  0038BE  FFFF               	dw	65535	; assembler added errata NOP
  4765  0038C0  6E01               	movwf	?_isalpha,c
  4766  0038C2  6A02               	clrf	?_isalpha+1,c
  4767  0038C4  0012               	return		;funcret
  4768  0038C6  FFFF               	dw	65535	; errata NOP
  4769  0038C8                     __end_of_isalpha:
  4770                           	opt callstack 0
  4771                           
  4772 ;; *************** function _utoa *****************
  4773 ;; Defined at:
  4774 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4777 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4778 ;;  d               8   29[COMRAM] unsigned long long 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  n               8   49[COMRAM] unsigned long long 
  4781 ;;  i               2   57[COMRAM] int 
  4782 ;;  w               2   47[COMRAM] int 
  4783 ;;  p               2   45[COMRAM] int 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2   27[COMRAM] int 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4793 ;;      Params:        10       0       0       0       0       0       0
  4794 ;;      Locals:        14       0       0       0       0       0       0
  4795 ;;      Temps:          8       0       0       0       0       0       0
  4796 ;;      Totals:        32       0       0       0       0       0       0
  4797 ;;Total ram usage:       32 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    6
  4800 ;; This function calls:
  4801 ;;		___lodiv
  4802 ;;		___lomod
  4803 ;;		_pad
  4804 ;; This function is called by:
  4805 ;;		_vfpfcnvrt
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text13
  4810  002380                     __ptext13:
  4811                           	opt callstack 0
  4812  002380                     _utoa:
  4813                           	opt callstack 0
  4814  002380  FFFF               	dw	65535	; assembler added errata NOP
  4815                           
  4816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4817                           
  4818                           ;incstack = 0
  4819  002382  0100               	movlb	0	; () banked
  4820  002384  AF94               	btfss	(_prec+1)& (0+255),7,b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4824  002386  9395               	bcf	_flags& (0+255),1,b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4828  002388  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4829  00238A  D005               	goto	u3500
  4830  00238C  5194               	movf	(_prec+1)& (0+255),w,b
  4831  00238E  E109               	bnz	l448
  4832  002390  0593               	decf	_prec& (0+255),w,b
  4833  002392  B0D8               	btfsc	status,0,c
  4834  002394  D006               	goto	l448
  4835  002396                     u3500:
  4836  002396  FFFF               	dw	65535	; assembler added errata NOP
  4837                           
  4838                           ; BSR set to: 0
  4839  002398  0E00               	movlw	0
  4840  00239A  6E2F               	movwf	utoa@p+1,c
  4841  00239C  0E01               	movlw	1
  4842  00239E  6E2E               	movwf	utoa@p,c
  4843  0023A0  D005               	goto	l450
  4844  0023A2                     l448:
  4845  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  4846                           
  4847                           ; BSR set to: 0
  4848  0023A4  C093  F02E         	movff	_prec,utoa@p
  4849  0023A8  C094  F02F         	movff	_prec+1,utoa@p+1
  4850  0023AC                     l450:
  4851  0023AC  FFFF               	dw	65535	; assembler added errata NOP
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4855  0023AE  C091  F030         	movff	_width,utoa@w
  4856  0023B2  C092  F031         	movff	_width+1,utoa@w+1
  4857                           
  4858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4859  0023B6  C01E  F032         	movff	utoa@d,utoa@n
  4860  0023BA  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4861  0023BE  C020  F034         	movff	utoa@d+2,utoa@n+2
  4862  0023C2  C021  F035         	movff	utoa@d+3,utoa@n+3
  4863  0023C6  C022  F036         	movff	utoa@d+4,utoa@n+4
  4864  0023CA  C023  F037         	movff	utoa@d+5,utoa@n+5
  4865  0023CE  C024  F038         	movff	utoa@d+6,utoa@n+6
  4866  0023D2  C025  F039         	movff	utoa@d+7,utoa@n+7
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4870  0023D6  0E00               	movlw	0
  4871  0023D8  6E3B               	movwf	utoa@i+1,c
  4872  0023DA  0E1F               	movlw	31
  4873  0023DC  6E3A               	movwf	utoa@i,c
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4877  0023DE  0E00               	movlw	0
  4878  0023E0  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4879                           
  4880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4881  0023E2  D077               	goto	l3712
  4882  0023E4                     l3702:
  4883  0023E4  FFFF               	dw	65535	; assembler added errata NOP
  4884                           
  4885                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4886  0023E6  063A               	decf	utoa@i,f,c
  4887  0023E8  A0D8               	btfss	status,0,c
  4888  0023EA  063B               	decf	utoa@i+1,f,c
  4889                           
  4890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4891  0023EC  0E9B               	movlw	low _dbuf
  4892  0023EE  243A               	addwf	utoa@i,w,c
  4893  0023F0  6ED9               	movwf	fsr2l,c
  4894  0023F2  0E00               	movlw	high _dbuf
  4895  0023F4  203B               	addwfc	utoa@i+1,w,c
  4896  0023F6  6EDA               	movwf	fsr2h,c
  4897  0023F8  C032  F001         	movff	utoa@n,___lomod@dividend
  4898  0023FC  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4899  002400  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4900  002404  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4901  002408  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4902  00240C  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4903  002410  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4904  002414  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4905  002418  0E0A               	movlw	10
  4906  00241A  6E09               	movwf	___lomod@divisor,c
  4907  00241C  0E00               	movlw	0
  4908  00241E  6E0A               	movwf	___lomod@divisor+1,c
  4909  002420  0E00               	movlw	0
  4910  002422  6E0B               	movwf	___lomod@divisor+2,c
  4911  002424  0E00               	movlw	0
  4912  002426  6E0C               	movwf	___lomod@divisor+3,c
  4913  002428  0E00               	movlw	0
  4914  00242A  6E0D               	movwf	___lomod@divisor+4,c
  4915  00242C  0E00               	movlw	0
  4916  00242E  6E0E               	movwf	___lomod@divisor+5,c
  4917  002430  0E00               	movlw	0
  4918  002432  6E0F               	movwf	___lomod@divisor+6,c
  4919  002434  0E00               	movlw	0
  4920  002436  6E10               	movwf	___lomod@divisor+7,c
  4921  002438  EC2F  F019         	call	___lomod	;wreg free
  4922  00243C  C001  F026         	movff	?___lomod,??_utoa
  4923  002440  C002  F027         	movff	?___lomod+1,??_utoa+1
  4924  002444  C003  F028         	movff	?___lomod+2,??_utoa+2
  4925  002448  C004  F029         	movff	?___lomod+3,??_utoa+3
  4926  00244C  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4927  002450  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4928  002454  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4929  002458  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4930  00245C  5026               	movf	??_utoa,w,c
  4931  00245E  0F30               	addlw	48
  4932  002460  6EDF               	movwf	indf2,c
  4933                           
  4934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4935  002462  062E               	decf	utoa@p,f,c
  4936  002464  A0D8               	btfss	status,0,c
  4937  002466  062F               	decf	utoa@p+1,f,c
  4938                           
  4939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4940  002468  0630               	decf	utoa@w,f,c
  4941  00246A  A0D8               	btfss	status,0,c
  4942  00246C  0631               	decf	utoa@w+1,f,c
  4943                           
  4944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4945  00246E  C032  F001         	movff	utoa@n,___lodiv@dividend
  4946  002472  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4947  002476  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4948  00247A  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4949  00247E  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4950  002482  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4951  002486  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4952  00248A  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4953  00248E  0E0A               	movlw	10
  4954  002490  6E09               	movwf	___lodiv@divisor,c
  4955  002492  0E00               	movlw	0
  4956  002494  6E0A               	movwf	___lodiv@divisor+1,c
  4957  002496  0E00               	movlw	0
  4958  002498  6E0B               	movwf	___lodiv@divisor+2,c
  4959  00249A  0E00               	movlw	0
  4960  00249C  6E0C               	movwf	___lodiv@divisor+3,c
  4961  00249E  0E00               	movlw	0
  4962  0024A0  6E0D               	movwf	___lodiv@divisor+4,c
  4963  0024A2  0E00               	movlw	0
  4964  0024A4  6E0E               	movwf	___lodiv@divisor+5,c
  4965  0024A6  0E00               	movlw	0
  4966  0024A8  6E0F               	movwf	___lodiv@divisor+6,c
  4967  0024AA  0E00               	movlw	0
  4968  0024AC  6E10               	movwf	___lodiv@divisor+7,c
  4969  0024AE  EC91  F017         	call	___lodiv	;wreg free
  4970  0024B2  C001  F032         	movff	?___lodiv,utoa@n
  4971  0024B6  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4972  0024BA  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4973  0024BE  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4974  0024C2  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4975  0024C6  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4976  0024CA  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4977  0024CE  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4978  0024D2                     l3712:
  4979  0024D2  FFFF               	dw	65535	; assembler added errata NOP
  4980                           
  4981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4982  0024D4  503A               	movf	utoa@i,w,c
  4983  0024D6  103B               	iorwf	utoa@i+1,w,c
  4984  0024D8  B4D8               	btfsc	status,2,c
  4985  0024DA  D01C               	goto	u3550
  4986  0024DC  5032               	movf	utoa@n,w,c
  4987  0024DE  1033               	iorwf	utoa@n+1,w,c
  4988  0024E0  1034               	iorwf	utoa@n+2,w,c
  4989  0024E2  1035               	iorwf	utoa@n+3,w,c
  4990  0024E4  1036               	iorwf	utoa@n+4,w,c
  4991  0024E6  1037               	iorwf	utoa@n+5,w,c
  4992  0024E8  1038               	iorwf	utoa@n+6,w,c
  4993  0024EA  1039               	iorwf	utoa@n+7,w,c
  4994  0024EC  A4D8               	btfss	status,2,c
  4995  0024EE  D77A               	goto	l3702
  4996  0024F0  BE2F               	btfsc	utoa@p+1,7,c
  4997  0024F2  D005               	goto	u3530
  4998  0024F4  502F               	movf	utoa@p+1,w,c
  4999  0024F6  E102               	bnz	u3531
  5000  0024F8  042E               	decf	utoa@p,w,c
  5001  0024FA  B0D8               	btfsc	status,0,c
  5002  0024FC                     u3531:
  5003  0024FC  D773               	goto	l3702
  5004  0024FE                     u3530:
  5005  0024FE  FFFF               	dw	65535	; assembler added errata NOP
  5006  002500  BE31               	btfsc	utoa@w+1,7,c
  5007  002502  D008               	goto	u3550
  5008  002504  5031               	movf	utoa@w+1,w,c
  5009  002506  E103               	bnz	u3540
  5010  002508  0430               	decf	utoa@w,w,c
  5011  00250A  A0D8               	btfss	status,0,c
  5012  00250C  D003               	goto	u3550
  5013  00250E                     u3540:
  5014  00250E  0100               	movlb	0	; () banked
  5015  002510  B395               	btfsc	_flags& (0+255),1,b
  5016  002512  D768               	goto	l3702
  5017  002514                     u3550:
  5018  002514  FFFF               	dw	65535	; assembler added errata NOP
  5019                           
  5020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  5021  002516  C01C  F011         	movff	utoa@fp,pad@fp
  5022  00251A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5023  00251E  0E9B               	movlw	low _dbuf
  5024  002520  243A               	addwf	utoa@i,w,c
  5025  002522  6E13               	movwf	pad@buf,c
  5026  002524  0E00               	movlw	high _dbuf
  5027  002526  203B               	addwfc	utoa@i+1,w,c
  5028  002528  6E14               	movwf	pad@buf+1,c
  5029  00252A  C030  F015         	movff	utoa@w,pad@p
  5030  00252E  C031  F016         	movff	utoa@w+1,pad@p+1
  5031  002532  ECE3  F019         	call	_pad	;wreg free
  5032  002536  C011  F01C         	movff	?_pad,?_utoa
  5033  00253A  C012  F01D         	movff	?_pad+1,?_utoa+1
  5034  00253E  0012               	return		;funcret
  5035  002540  FFFF               	dw	65535	; errata NOP
  5036  002542                     __end_of_utoa:
  5037                           	opt callstack 0
  5038                           
  5039 ;; *************** function ___lomod *****************
  5040 ;; Defined at:
  5041 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  dividend        8    0[COMRAM] unsigned long long 
  5044 ;;  divisor         8    8[COMRAM] unsigned long long 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  counter         1   16[COMRAM] unsigned char 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  8    0[COMRAM] unsigned long long 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5056 ;;      Params:        16       0       0       0       0       0       0
  5057 ;;      Locals:         1       0       0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0
  5059 ;;      Totals:        17       0       0       0       0       0       0
  5060 ;;Total ram usage:       17 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    2
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_utoa
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text14
  5071  00325E                     __ptext14:
  5072                           	opt callstack 0
  5073  00325E                     ___lomod:
  5074                           	opt callstack 0
  5075  00325E  FFFF               	dw	65535	; assembler added errata NOP
  5076                           
  5077                           ;incstack = 0
  5078  003260  5009               	movf	___lomod@divisor,w,c
  5079  003262  100A               	iorwf	___lomod@divisor+1,w,c
  5080  003264  100B               	iorwf	___lomod@divisor+2,w,c
  5081  003266  100C               	iorwf	___lomod@divisor+3,w,c
  5082  003268  100D               	iorwf	___lomod@divisor+4,w,c
  5083  00326A  100E               	iorwf	___lomod@divisor+5,w,c
  5084  00326C  100F               	iorwf	___lomod@divisor+6,w,c
  5085  00326E  1010               	iorwf	___lomod@divisor+7,w,c
  5086  003270  B4D8               	btfsc	status,2,c
  5087  003272  D040               	goto	l1030
  5088  003274  0E01               	movlw	1
  5089  003276  6E11               	movwf	___lomod@counter,c
  5090  003278  D00B               	goto	l3502
  5091  00327A                     l3500:
  5092  00327A  FFFF               	dw	65535	; assembler added errata NOP
  5093  00327C  90D8               	bcf	status,0,c
  5094  00327E  3609               	rlcf	___lomod@divisor,f,c
  5095  003280  360A               	rlcf	___lomod@divisor+1,f,c
  5096  003282  360B               	rlcf	___lomod@divisor+2,f,c
  5097  003284  360C               	rlcf	___lomod@divisor+3,f,c
  5098  003286  360D               	rlcf	___lomod@divisor+4,f,c
  5099  003288  360E               	rlcf	___lomod@divisor+5,f,c
  5100  00328A  360F               	rlcf	___lomod@divisor+6,f,c
  5101  00328C  3610               	rlcf	___lomod@divisor+7,f,c
  5102  00328E  2A11               	incf	___lomod@counter,f,c
  5103  003290                     l3502:
  5104  003290  FFFF               	dw	65535	; assembler added errata NOP
  5105  003292  AE10               	btfss	___lomod@divisor+7,7,c
  5106  003294  D7F2               	goto	l3500
  5107  003296                     u3100:
  5108  003296  FFFF               	dw	65535	; assembler added errata NOP
  5109  003298  5009               	movf	___lomod@divisor,w,c
  5110  00329A  5C01               	subwf	___lomod@dividend,w,c
  5111  00329C  500A               	movf	___lomod@divisor+1,w,c
  5112  00329E  5802               	subwfb	___lomod@dividend+1,w,c
  5113  0032A0  500B               	movf	___lomod@divisor+2,w,c
  5114  0032A2  5803               	subwfb	___lomod@dividend+2,w,c
  5115  0032A4  500C               	movf	___lomod@divisor+3,w,c
  5116  0032A6  5804               	subwfb	___lomod@dividend+3,w,c
  5117  0032A8  500D               	movf	___lomod@divisor+4,w,c
  5118  0032AA  5805               	subwfb	___lomod@dividend+4,w,c
  5119  0032AC  500E               	movf	___lomod@divisor+5,w,c
  5120  0032AE  5806               	subwfb	___lomod@dividend+5,w,c
  5121  0032B0  500F               	movf	___lomod@divisor+6,w,c
  5122  0032B2  5807               	subwfb	___lomod@dividend+6,w,c
  5123  0032B4  5010               	movf	___lomod@divisor+7,w,c
  5124  0032B6  5808               	subwfb	___lomod@dividend+7,w,c
  5125  0032B8  A0D8               	btfss	status,0,c
  5126  0032BA  D010               	goto	l3508
  5127  0032BC  5009               	movf	___lomod@divisor,w,c
  5128  0032BE  5E01               	subwf	___lomod@dividend,f,c
  5129  0032C0  500A               	movf	___lomod@divisor+1,w,c
  5130  0032C2  5A02               	subwfb	___lomod@dividend+1,f,c
  5131  0032C4  500B               	movf	___lomod@divisor+2,w,c
  5132  0032C6  5A03               	subwfb	___lomod@dividend+2,f,c
  5133  0032C8  500C               	movf	___lomod@divisor+3,w,c
  5134  0032CA  5A04               	subwfb	___lomod@dividend+3,f,c
  5135  0032CC  500D               	movf	___lomod@divisor+4,w,c
  5136  0032CE  5A05               	subwfb	___lomod@dividend+4,f,c
  5137  0032D0  500E               	movf	___lomod@divisor+5,w,c
  5138  0032D2  5A06               	subwfb	___lomod@dividend+5,f,c
  5139  0032D4  500F               	movf	___lomod@divisor+6,w,c
  5140  0032D6  5A07               	subwfb	___lomod@dividend+6,f,c
  5141  0032D8  5010               	movf	___lomod@divisor+7,w,c
  5142  0032DA  5A08               	subwfb	___lomod@dividend+7,f,c
  5143  0032DC                     l3508:
  5144  0032DC  FFFF               	dw	65535	; assembler added errata NOP
  5145  0032DE  90D8               	bcf	status,0,c
  5146  0032E0  3210               	rrcf	___lomod@divisor+7,f,c
  5147  0032E2  320F               	rrcf	___lomod@divisor+6,f,c
  5148  0032E4  320E               	rrcf	___lomod@divisor+5,f,c
  5149  0032E6  320D               	rrcf	___lomod@divisor+4,f,c
  5150  0032E8  320C               	rrcf	___lomod@divisor+3,f,c
  5151  0032EA  320B               	rrcf	___lomod@divisor+2,f,c
  5152  0032EC  320A               	rrcf	___lomod@divisor+1,f,c
  5153  0032EE  3209               	rrcf	___lomod@divisor,f,c
  5154  0032F0  2E11               	decfsz	___lomod@counter,f,c
  5155  0032F2  D7D1               	goto	u3100
  5156  0032F4                     l1030:
  5157  0032F4  FFFF               	dw	65535	; assembler added errata NOP
  5158  0032F6  C001  F001         	movff	___lomod@dividend,?___lomod
  5159  0032FA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5160  0032FE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5161  003302  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5162  003306  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5163  00330A  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5164  00330E  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5165  003312  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5166  003316  0012               	return		;funcret
  5167  003318  FFFF               	dw	65535	; errata NOP
  5168  00331A                     __end_of___lomod:
  5169                           	opt callstack 0
  5170                           
  5171 ;; *************** function ___lodiv *****************
  5172 ;; Defined at:
  5173 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  dividend        8    0[COMRAM] unsigned long long 
  5176 ;;  divisor         8    8[COMRAM] unsigned long long 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  quotient        8   16[COMRAM] unsigned long long 
  5179 ;;  counter         1   24[COMRAM] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  8    0[COMRAM] unsigned long long 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5189 ;;      Params:        16       0       0       0       0       0       0
  5190 ;;      Locals:         9       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0
  5192 ;;      Totals:        25       0       0       0       0       0       0
  5193 ;;Total ram usage:       25 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    2
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_utoa
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text15
  5204  002F22                     __ptext15:
  5205                           	opt callstack 0
  5206  002F22                     ___lodiv:
  5207                           	opt callstack 0
  5208  002F22  FFFF               	dw	65535	; assembler added errata NOP
  5209                           
  5210                           ;incstack = 0
  5211  002F24  EE20  F011         	lfsr	2,___lodiv@quotient
  5212  002F28  0E07               	movlw	7
  5213  002F2A                     u3051:
  5214  002F2A  6ADE               	clrf	postinc2,c
  5215  002F2C  06E8               	decf	wreg,f,c
  5216  002F2E  E2FD               	bc	u3051
  5217  002F30  5009               	movf	___lodiv@divisor,w,c
  5218  002F32  100A               	iorwf	___lodiv@divisor+1,w,c
  5219  002F34  100B               	iorwf	___lodiv@divisor+2,w,c
  5220  002F36  100C               	iorwf	___lodiv@divisor+3,w,c
  5221  002F38  100D               	iorwf	___lodiv@divisor+4,w,c
  5222  002F3A  100E               	iorwf	___lodiv@divisor+5,w,c
  5223  002F3C  100F               	iorwf	___lodiv@divisor+6,w,c
  5224  002F3E  1010               	iorwf	___lodiv@divisor+7,w,c
  5225  002F40  B4D8               	btfsc	status,2,c
  5226  002F42  D04A               	goto	l1020
  5227  002F44  0E01               	movlw	1
  5228  002F46  6E19               	movwf	___lodiv@counter,c
  5229  002F48  D00B               	goto	l3482
  5230  002F4A                     l3480:
  5231  002F4A  FFFF               	dw	65535	; assembler added errata NOP
  5232  002F4C  90D8               	bcf	status,0,c
  5233  002F4E  3609               	rlcf	___lodiv@divisor,f,c
  5234  002F50  360A               	rlcf	___lodiv@divisor+1,f,c
  5235  002F52  360B               	rlcf	___lodiv@divisor+2,f,c
  5236  002F54  360C               	rlcf	___lodiv@divisor+3,f,c
  5237  002F56  360D               	rlcf	___lodiv@divisor+4,f,c
  5238  002F58  360E               	rlcf	___lodiv@divisor+5,f,c
  5239  002F5A  360F               	rlcf	___lodiv@divisor+6,f,c
  5240  002F5C  3610               	rlcf	___lodiv@divisor+7,f,c
  5241  002F5E  2A19               	incf	___lodiv@counter,f,c
  5242  002F60                     l3482:
  5243  002F60  FFFF               	dw	65535	; assembler added errata NOP
  5244  002F62  AE10               	btfss	___lodiv@divisor+7,7,c
  5245  002F64  D7F2               	goto	l3480
  5246  002F66                     u3070:
  5247  002F66  FFFF               	dw	65535	; assembler added errata NOP
  5248  002F68  90D8               	bcf	status,0,c
  5249  002F6A  3611               	rlcf	___lodiv@quotient,f,c
  5250  002F6C  3612               	rlcf	___lodiv@quotient+1,f,c
  5251  002F6E  3613               	rlcf	___lodiv@quotient+2,f,c
  5252  002F70  3614               	rlcf	___lodiv@quotient+3,f,c
  5253  002F72  3615               	rlcf	___lodiv@quotient+4,f,c
  5254  002F74  3616               	rlcf	___lodiv@quotient+5,f,c
  5255  002F76  3617               	rlcf	___lodiv@quotient+6,f,c
  5256  002F78  3618               	rlcf	___lodiv@quotient+7,f,c
  5257  002F7A  5009               	movf	___lodiv@divisor,w,c
  5258  002F7C  5C01               	subwf	___lodiv@dividend,w,c
  5259  002F7E  500A               	movf	___lodiv@divisor+1,w,c
  5260  002F80  5802               	subwfb	___lodiv@dividend+1,w,c
  5261  002F82  500B               	movf	___lodiv@divisor+2,w,c
  5262  002F84  5803               	subwfb	___lodiv@dividend+2,w,c
  5263  002F86  500C               	movf	___lodiv@divisor+3,w,c
  5264  002F88  5804               	subwfb	___lodiv@dividend+3,w,c
  5265  002F8A  500D               	movf	___lodiv@divisor+4,w,c
  5266  002F8C  5805               	subwfb	___lodiv@dividend+4,w,c
  5267  002F8E  500E               	movf	___lodiv@divisor+5,w,c
  5268  002F90  5806               	subwfb	___lodiv@dividend+5,w,c
  5269  002F92  500F               	movf	___lodiv@divisor+6,w,c
  5270  002F94  5807               	subwfb	___lodiv@dividend+6,w,c
  5271  002F96  5010               	movf	___lodiv@divisor+7,w,c
  5272  002F98  5808               	subwfb	___lodiv@dividend+7,w,c
  5273  002F9A  A0D8               	btfss	status,0,c
  5274  002F9C  D011               	goto	l3492
  5275  002F9E  5009               	movf	___lodiv@divisor,w,c
  5276  002FA0  5E01               	subwf	___lodiv@dividend,f,c
  5277  002FA2  500A               	movf	___lodiv@divisor+1,w,c
  5278  002FA4  5A02               	subwfb	___lodiv@dividend+1,f,c
  5279  002FA6  500B               	movf	___lodiv@divisor+2,w,c
  5280  002FA8  5A03               	subwfb	___lodiv@dividend+2,f,c
  5281  002FAA  500C               	movf	___lodiv@divisor+3,w,c
  5282  002FAC  5A04               	subwfb	___lodiv@dividend+3,f,c
  5283  002FAE  500D               	movf	___lodiv@divisor+4,w,c
  5284  002FB0  5A05               	subwfb	___lodiv@dividend+4,f,c
  5285  002FB2  500E               	movf	___lodiv@divisor+5,w,c
  5286  002FB4  5A06               	subwfb	___lodiv@dividend+5,f,c
  5287  002FB6  500F               	movf	___lodiv@divisor+6,w,c
  5288  002FB8  5A07               	subwfb	___lodiv@dividend+6,f,c
  5289  002FBA  5010               	movf	___lodiv@divisor+7,w,c
  5290  002FBC  5A08               	subwfb	___lodiv@dividend+7,f,c
  5291  002FBE  8011               	bsf	___lodiv@quotient,0,c
  5292  002FC0                     l3492:
  5293  002FC0  FFFF               	dw	65535	; assembler added errata NOP
  5294  002FC2  90D8               	bcf	status,0,c
  5295  002FC4  3210               	rrcf	___lodiv@divisor+7,f,c
  5296  002FC6  320F               	rrcf	___lodiv@divisor+6,f,c
  5297  002FC8  320E               	rrcf	___lodiv@divisor+5,f,c
  5298  002FCA  320D               	rrcf	___lodiv@divisor+4,f,c
  5299  002FCC  320C               	rrcf	___lodiv@divisor+3,f,c
  5300  002FCE  320B               	rrcf	___lodiv@divisor+2,f,c
  5301  002FD0  320A               	rrcf	___lodiv@divisor+1,f,c
  5302  002FD2  3209               	rrcf	___lodiv@divisor,f,c
  5303  002FD4  2E19               	decfsz	___lodiv@counter,f,c
  5304  002FD6  D7C7               	goto	u3070
  5305  002FD8                     l1020:
  5306  002FD8  FFFF               	dw	65535	; assembler added errata NOP
  5307  002FDA  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5308  002FDE  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5309  002FE2  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5310  002FE6  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5311  002FEA  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5312  002FEE  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5313  002FF2  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5314  002FF6  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5315  002FFA  0012               	return		;funcret
  5316  002FFC  FFFF               	dw	65535	; errata NOP
  5317  002FFE                     __end_of___lodiv:
  5318                           	opt callstack 0
  5319                           
  5320 ;; *************** function _strncmp *****************
  5321 ;; Defined at:
  5322 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5325 ;;		 -> STR_2(3), STR_1(4), 
  5326 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5327 ;;		 -> STR_134(3), STR_130(3), STR_125(3), STR_121(3), 
  5328 ;;		 -> STR_116(3), STR_112(3), STR_107(4), STR_103(4), 
  5329 ;;		 -> STR_98(3), STR_93(3), STR_88(3), STR_83(4), 
  5330 ;;		 -> STR_78(3), STR_73(3), STR_68(3), STR_63(4), 
  5331 ;;		 -> STR_58(3), STR_53(3), STR_48(3), STR_43(4), 
  5332 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  5333 ;;		 -> STR_20(3), STR_16(3), STR_11(4), STR_7(4), 
  5334 ;;  n               2    4[COMRAM] unsigned int 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5337 ;;		 -> STR_134(3), STR_130(3), STR_125(3), STR_121(3), 
  5338 ;;		 -> STR_116(3), STR_112(3), STR_107(4), STR_103(4), 
  5339 ;;		 -> STR_98(3), STR_93(3), STR_88(3), STR_83(4), 
  5340 ;;		 -> STR_78(3), STR_73(3), STR_68(3), STR_63(4), 
  5341 ;;		 -> STR_58(3), STR_53(3), STR_48(3), STR_43(4), 
  5342 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  5343 ;;		 -> STR_20(3), STR_16(3), STR_11(4), STR_7(4), 
  5344 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5345 ;;		 -> STR_2(3), STR_1(4), 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  2    0[COMRAM] int 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5355 ;;      Params:         6       0       0       0       0       0       0
  5356 ;;      Locals:         4       0       0       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0       0       0
  5358 ;;      Totals:        11       0       0       0       0       0       0
  5359 ;;Total ram usage:       11 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    2
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_vfpfcnvrt
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text16
  5370  00319C                     __ptext16:
  5371                           	opt callstack 0
  5372  00319C                     _strncmp:
  5373                           	opt callstack 0
  5374  00319C  FFFF               	dw	65535	; assembler added errata NOP
  5375                           
  5376                           ;incstack = 0
  5377  00319E  C001  F008         	movff	strncmp@_l,strncmp@l
  5378  0031A2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5379  0031A6  C003  F00A         	movff	strncmp@_r,strncmp@r
  5380  0031AA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5381  0031AE  0605               	decf	strncmp@n,f,c
  5382  0031B0  A0D8               	btfss	status,0,c
  5383  0031B2  0606               	decf	strncmp@n+1,f,c
  5384  0031B4  2805               	incf	strncmp@n,w,c
  5385  0031B6  E110               	bnz	l3842
  5386  0031B8  2806               	incf	strncmp@n+1,w,c
  5387  0031BA  A4D8               	btfss	status,2,c
  5388  0031BC  D00D               	goto	l3842
  5389  0031BE  0E00               	movlw	0
  5390  0031C0  6E02               	movwf	?_strncmp+1,c
  5391  0031C2  0E00               	movlw	0
  5392  0031C4  6E01               	movwf	?_strncmp,c
  5393  0031C6  D048               	goto	l1388
  5394  0031C8                     l3840:
  5395  0031C8  FFFF               	dw	65535	; assembler added errata NOP
  5396  0031CA  4A08               	infsnz	strncmp@l,f,c
  5397  0031CC  2A09               	incf	strncmp@l+1,f,c
  5398  0031CE  4A0A               	infsnz	strncmp@r,f,c
  5399  0031D0  2A0B               	incf	strncmp@r+1,f,c
  5400  0031D2  0605               	decf	strncmp@n,f,c
  5401  0031D4  A0D8               	btfss	status,0,c
  5402  0031D6  0606               	decf	strncmp@n+1,f,c
  5403  0031D8                     l3842:
  5404  0031D8  FFFF               	dw	65535	; assembler added errata NOP
  5405  0031DA  C008  FFF6         	movff	strncmp@l,tblptrl
  5406  0031DE  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5407  0031E2                     	if	0	;tblptru may be non-zero
  5408  0031E2                     	endif
  5409  0031E2                     	if	0	;tblptru may be non-zero
  5410  0031E2                     	endif
  5411  0031E2  0008               	tblrd		*
  5412  0031E4  FFFF               	dw	65535	; errata NOP
  5413  0031E6  50F5               	movf	tablat,w,c
  5414  0031E8  0900               	iorlw	0
  5415  0031EA  B4D8               	btfsc	status,2,c
  5416  0031EC  D020               	goto	u3840
  5417  0031EE  C00A  FFF6         	movff	strncmp@r,tblptrl
  5418  0031F2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5419  0031F6                     	if	0	;tblptru may be non-zero
  5420  0031F6                     	endif
  5421  0031F6                     	if	0	;tblptru may be non-zero
  5422  0031F6                     	endif
  5423  0031F6  0008               	tblrd		*
  5424  0031F8  FFFF               	dw	65535	; errata NOP
  5425  0031FA  50F5               	movf	tablat,w,c
  5426  0031FC  0900               	iorlw	0
  5427  0031FE  B4D8               	btfsc	status,2,c
  5428  003200  D016               	goto	u3840
  5429  003202  5005               	movf	strncmp@n,w,c
  5430  003204  1006               	iorwf	strncmp@n+1,w,c
  5431  003206  B4D8               	btfsc	status,2,c
  5432  003208  D012               	goto	u3840
  5433  00320A  C008  FFF6         	movff	strncmp@l,tblptrl
  5434  00320E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5435  003212                     	if	0	;tblptru may be non-zero
  5436  003212                     	endif
  5437  003212                     	if	0	;tblptru may be non-zero
  5438  003212                     	endif
  5439  003212  0008               	tblrd		*
  5440  003214  FFFF               	dw	65535	; errata NOP
  5441  003216  CFF5 F007          	movff	tablat,??_strncmp
  5442  00321A  C00A  FFF6         	movff	strncmp@r,tblptrl
  5443  00321E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5444  003222                     	if	0	;tblptru may be non-zero
  5445  003222                     	endif
  5446  003222                     	if	0	;tblptru may be non-zero
  5447  003222                     	endif
  5448  003222  0008               	tblrd		*
  5449  003224  FFFF               	dw	65535	; errata NOP
  5450  003226  50F5               	movf	tablat,w,c
  5451  003228  1807               	xorwf	??_strncmp,w,c
  5452  00322A  B4D8               	btfsc	status,2,c
  5453  00322C  D7CD               	goto	l3840
  5454  00322E                     u3840:
  5455  00322E  FFFF               	dw	65535	; assembler added errata NOP
  5456  003230  C008  FFF6         	movff	strncmp@l,tblptrl
  5457  003234  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5458  003238                     	if	0	;tblptru may be non-zero
  5459  003238                     	endif
  5460  003238                     	if	0	;tblptru may be non-zero
  5461  003238                     	endif
  5462  003238  0008               	tblrd		*
  5463  00323A  FFFF               	dw	65535	; errata NOP
  5464  00323C  CFF5 F007          	movff	tablat,??_strncmp
  5465  003240  C00A  FFF6         	movff	strncmp@r,tblptrl
  5466  003244  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5467  003248                     	if	0	;tblptru may be non-zero
  5468  003248                     	endif
  5469  003248                     	if	0	;tblptru may be non-zero
  5470  003248                     	endif
  5471  003248  0008               	tblrd		*
  5472  00324A  FFFF               	dw	65535	; errata NOP
  5473  00324C  50F5               	movf	tablat,w,c
  5474  00324E  5C07               	subwf	??_strncmp,w,c
  5475  003250  6E01               	movwf	?_strncmp,c
  5476  003252  6A02               	clrf	?_strncmp+1,c
  5477  003254  A0D8               	btfss	status,0,c
  5478  003256  0602               	decf	?_strncmp+1,f,c
  5479  003258                     l1388:
  5480  003258  FFFF               	dw	65535	; assembler added errata NOP
  5481  00325A  0012               	return		;funcret
  5482  00325C  FFFF               	dw	65535	; errata NOP
  5483  00325E                     __end_of_strncmp:
  5484                           	opt callstack 0
  5485                           
  5486 ;; *************** function _stoa *****************
  5487 ;; Defined at:
  5488 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5491 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5492 ;;  s               2   11[COMRAM] PTR unsigned char 
  5493 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5496 ;;  l               2   29[COMRAM] int 
  5497 ;;  p               2   27[COMRAM] int 
  5498 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5499 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5500 ;;  w               2   23[COMRAM] int 
  5501 ;;  i               2   21[COMRAM] int 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  2    9[COMRAM] int 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5511 ;;      Params:         4       0       0       0       0       0       0
  5512 ;;      Locals:        17       0       0       0       0       0       0
  5513 ;;      Temps:          1       0       0       0       0       0       0
  5514 ;;      Totals:        22       0       0       0       0       0       0
  5515 ;;Total ram usage:       22 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    4
  5518 ;; This function calls:
  5519 ;;		_fputc
  5520 ;;		_strlen
  5521 ;; This function is called by:
  5522 ;;		_vfpfcnvrt
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text17
  5527  002CA6                     __ptext17:
  5528                           	opt callstack 0
  5529  002CA6                     _stoa:
  5530                           	opt callstack 0
  5531  002CA6  FFFF               	dw	65535	; assembler added errata NOP
  5532                           
  5533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5534                           
  5535                           ;incstack = 0
  5536  002CA8  EE20  F0EE         	lfsr	2,stoa@F1152
  5537  002CAC  EE10  F00F         	lfsr	1,stoa@nuls
  5538  002CB0  0E06               	movlw	6
  5539  002CB2                     u3401:
  5540  002CB2  CFDB FFE3          	movff	plusw2,plusw1
  5541  002CB6  06E8               	decf	wreg,f,c
  5542  002CB8  E2FC               	bc	u3401
  5543                           
  5544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5545  002CBA  C00C  F01A         	movff	stoa@s,stoa@cp
  5546  002CBE  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5547                           
  5548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5549  002CC2  501A               	movf	stoa@cp,w,c
  5550  002CC4  101B               	iorwf	stoa@cp+1,w,c
  5551  002CC6  A4D8               	btfss	status,2,c
  5552  002CC8  D004               	goto	l3656
  5553                           
  5554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5555  002CCA  0E0F               	movlw	low stoa@nuls
  5556  002CCC  6E1A               	movwf	stoa@cp,c
  5557  002CCE  0E00               	movlw	high stoa@nuls
  5558  002CD0  6E1B               	movwf	stoa@cp+1,c
  5559  002CD2                     l3656:
  5560  002CD2  FFFF               	dw	65535	; assembler added errata NOP
  5561                           
  5562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5563  002CD4  C01A  F001         	movff	stoa@cp,strlen@s
  5564  002CD8  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5565  002CDC  ECD6  F01C         	call	_strlen	;wreg free
  5566  002CE0  C001  F01E         	movff	?_strlen,stoa@l
  5567  002CE4  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5568                           
  5569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5570  002CE8  C093  F01C         	movff	_prec,stoa@p
  5571  002CEC  C094  F01D         	movff	_prec+1,stoa@p+1
  5572                           
  5573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5574  002CF0  BE1D               	btfsc	stoa@p+1,7,c
  5575  002CF2  D00E               	goto	l429
  5576  002CF4  501E               	movf	stoa@l,w,c
  5577  002CF6  5C1C               	subwf	stoa@p,w,c
  5578  002CF8  501D               	movf	stoa@p+1,w,c
  5579  002CFA  0A80               	xorlw	128
  5580  002CFC  6E0E               	movwf	??_stoa& (0+255),c
  5581  002CFE  501F               	movf	stoa@l+1,w,c
  5582  002D00  0A80               	xorlw	128
  5583  002D02  580E               	subwfb	??_stoa& (0+255),w,c
  5584  002D04  B0D8               	btfsc	status,0,c
  5585  002D06  D004               	goto	l429
  5586  002D08  C01C  F01E         	movff	stoa@p,stoa@l
  5587  002D0C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5588  002D10                     l429:
  5589  002D10  FFFF               	dw	65535	; assembler added errata NOP
  5590                           
  5591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5592  002D12  C01E  F01C         	movff	stoa@l,stoa@p
  5593  002D16  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5594                           
  5595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5596  002D1A  C091  F018         	movff	_width,stoa@w
  5597  002D1E  C092  F019         	movff	_width+1,stoa@w+1
  5598                           
  5599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5600  002D22  0100               	movlb	0	; () banked
  5601  002D24  A195               	btfss	_flags& (0+255),0,b
  5602  002D26  D00E               	goto	l3670
  5603  002D28  D018               	goto	u3450
  5604  002D2A                     l3666:
  5605  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  5606                           
  5607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5608  002D2C  0E00               	movlw	0
  5609  002D2E  6E02               	movwf	fputc@c+1,c
  5610  002D30  0E20               	movlw	32
  5611  002D32  6E01               	movwf	fputc@c,c
  5612  002D34  C00A  F003         	movff	stoa@fp,fputc@fp
  5613  002D38  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5614  002D3C  EC8D  F019         	call	_fputc	;wreg free
  5615                           
  5616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5617  002D40  4A1E               	infsnz	stoa@l,f,c
  5618  002D42  2A1F               	incf	stoa@l+1,f,c
  5619  002D44                     l3670:
  5620  002D44  FFFF               	dw	65535	; assembler added errata NOP
  5621                           
  5622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5623  002D46  5018               	movf	stoa@w,w,c
  5624  002D48  5C1E               	subwf	stoa@l,w,c
  5625  002D4A  501F               	movf	stoa@l+1,w,c
  5626  002D4C  0A80               	xorlw	128
  5627  002D4E  6E0E               	movwf	??_stoa& (0+255),c
  5628  002D50  5019               	movf	stoa@w+1,w,c
  5629  002D52  0A80               	xorlw	128
  5630  002D54  580E               	subwfb	??_stoa& (0+255),w,c
  5631  002D56  A0D8               	btfss	status,0,c
  5632  002D58  D7E8               	goto	l3666
  5633  002D5A                     u3450:
  5634  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  5635                           
  5636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5637  002D5C  0E00               	movlw	0
  5638  002D5E  6E17               	movwf	stoa@i+1,c
  5639  002D60  0E00               	movlw	0
  5640  002D62  6E16               	movwf	stoa@i,c
  5641                           
  5642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5643  002D64  D014               	goto	l3680
  5644  002D66                     l3674:
  5645  002D66  FFFF               	dw	65535	; assembler added errata NOP
  5646                           
  5647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5648  002D68  C01A  FFD9         	movff	stoa@cp,fsr2l
  5649  002D6C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5650  002D70  50DF               	movf	indf2,w,c
  5651  002D72  6E0E               	movwf	??_stoa& (0+255),c
  5652  002D74  500E               	movf	??_stoa,w,c
  5653  002D76  6E01               	movwf	fputc@c,c
  5654  002D78  6A02               	clrf	fputc@c+1,c
  5655  002D7A  C00A  F003         	movff	stoa@fp,fputc@fp
  5656  002D7E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5657  002D82  EC8D  F019         	call	_fputc	;wreg free
  5658                           
  5659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5660  002D86  4A1A               	infsnz	stoa@cp,f,c
  5661  002D88  2A1B               	incf	stoa@cp+1,f,c
  5662                           
  5663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5664  002D8A  4A16               	infsnz	stoa@i,f,c
  5665  002D8C  2A17               	incf	stoa@i+1,f,c
  5666  002D8E                     l3680:
  5667  002D8E  FFFF               	dw	65535	; assembler added errata NOP
  5668                           
  5669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5670  002D90  501C               	movf	stoa@p,w,c
  5671  002D92  5C16               	subwf	stoa@i,w,c
  5672  002D94  5017               	movf	stoa@i+1,w,c
  5673  002D96  0A80               	xorlw	128
  5674  002D98  6E0E               	movwf	??_stoa& (0+255),c
  5675  002D9A  501D               	movf	stoa@p+1,w,c
  5676  002D9C  0A80               	xorlw	128
  5677  002D9E  580E               	subwfb	??_stoa& (0+255),w,c
  5678  002DA0  A0D8               	btfss	status,0,c
  5679  002DA2  D7E1               	goto	l3674
  5680                           
  5681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5682  002DA4  0100               	movlb	0	; () banked
  5683  002DA6  B195               	btfsc	_flags& (0+255),0,b
  5684  002DA8  D00E               	goto	l3688
  5685  002DAA  D018               	goto	u3480
  5686  002DAC                     l3684:
  5687  002DAC  FFFF               	dw	65535	; assembler added errata NOP
  5688                           
  5689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5690  002DAE  0E00               	movlw	0
  5691  002DB0  6E02               	movwf	fputc@c+1,c
  5692  002DB2  0E20               	movlw	32
  5693  002DB4  6E01               	movwf	fputc@c,c
  5694  002DB6  C00A  F003         	movff	stoa@fp,fputc@fp
  5695  002DBA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5696  002DBE  EC8D  F019         	call	_fputc	;wreg free
  5697                           
  5698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5699  002DC2  4A1E               	infsnz	stoa@l,f,c
  5700  002DC4  2A1F               	incf	stoa@l+1,f,c
  5701  002DC6                     l3688:
  5702  002DC6  FFFF               	dw	65535	; assembler added errata NOP
  5703                           
  5704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5705  002DC8  5018               	movf	stoa@w,w,c
  5706  002DCA  5C1E               	subwf	stoa@l,w,c
  5707  002DCC  501F               	movf	stoa@l+1,w,c
  5708  002DCE  0A80               	xorlw	128
  5709  002DD0  6E0E               	movwf	??_stoa& (0+255),c
  5710  002DD2  5019               	movf	stoa@w+1,w,c
  5711  002DD4  0A80               	xorlw	128
  5712  002DD6  580E               	subwfb	??_stoa& (0+255),w,c
  5713  002DD8  A0D8               	btfss	status,0,c
  5714  002DDA  D7E8               	goto	l3684
  5715  002DDC                     u3480:
  5716  002DDC  FFFF               	dw	65535	; assembler added errata NOP
  5717                           
  5718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5719                           
  5720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5721  002DDE  C01E  F00A         	movff	stoa@l,?_stoa
  5722  002DE2  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5723  002DE6  0012               	return		;funcret
  5724  002DE8  FFFF               	dw	65535	; errata NOP
  5725  002DEA                     __end_of_stoa:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function _otoa *****************
  5729 ;; Defined at:
  5730 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5733 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5734 ;;  d               8   29[COMRAM] unsigned long long 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  n               8   51[COMRAM] unsigned long long 
  5737 ;;  i               2   59[COMRAM] int 
  5738 ;;  w               2   49[COMRAM] int 
  5739 ;;  t               2   47[COMRAM] int 
  5740 ;;  p               2   45[COMRAM] int 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2   27[COMRAM] int 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5750 ;;      Params:        10       0       0       0       0       0       0
  5751 ;;      Locals:        16       0       0       0       0       0       0
  5752 ;;      Temps:          8       0       0       0       0       0       0
  5753 ;;      Totals:        34       0       0       0       0       0       0
  5754 ;;Total ram usage:       34 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    6
  5757 ;; This function calls:
  5758 ;;		_pad
  5759 ;; This function is called by:
  5760 ;;		_vfpfcnvrt
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text18
  5765  0026EE                     __ptext18:
  5766                           	opt callstack 0
  5767  0026EE                     _otoa:
  5768                           	opt callstack 0
  5769  0026EE  FFFF               	dw	65535	; assembler added errata NOP
  5770                           
  5771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5772                           
  5773                           ;incstack = 0
  5774  0026F0  0100               	movlb	0	; () banked
  5775  0026F2  AF94               	btfss	(_prec+1)& (0+255),7,b
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5779  0026F4  9395               	bcf	_flags& (0+255),1,b
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5783  0026F6  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5784  0026F8  D005               	goto	u3310
  5785  0026FA  5194               	movf	(_prec+1)& (0+255),w,b
  5786  0026FC  E109               	bnz	l409
  5787  0026FE  0593               	decf	_prec& (0+255),w,b
  5788  002700  B0D8               	btfsc	status,0,c
  5789  002702  D006               	goto	l409
  5790  002704                     u3310:
  5791  002704  FFFF               	dw	65535	; assembler added errata NOP
  5792                           
  5793                           ; BSR set to: 0
  5794  002706  0E00               	movlw	0
  5795  002708  6E2F               	movwf	otoa@p+1,c
  5796  00270A  0E01               	movlw	1
  5797  00270C  6E2E               	movwf	otoa@p,c
  5798  00270E  D005               	goto	l411
  5799  002710                     l409:
  5800  002710  FFFF               	dw	65535	; assembler added errata NOP
  5801                           
  5802                           ; BSR set to: 0
  5803  002712  C093  F02E         	movff	_prec,otoa@p
  5804  002716  C094  F02F         	movff	_prec+1,otoa@p+1
  5805  00271A                     l411:
  5806  00271A  FFFF               	dw	65535	; assembler added errata NOP
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5810  00271C  C091  F032         	movff	_width,otoa@w
  5811  002720  C092  F033         	movff	_width+1,otoa@w+1
  5812                           
  5813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5814  002724  C01E  F034         	movff	otoa@d,otoa@n
  5815  002728  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5816  00272C  C020  F036         	movff	otoa@d+2,otoa@n+2
  5817  002730  C021  F037         	movff	otoa@d+3,otoa@n+3
  5818  002734  C022  F038         	movff	otoa@d+4,otoa@n+4
  5819  002738  C023  F039         	movff	otoa@d+5,otoa@n+5
  5820  00273C  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5821  002740  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5825  002744  0E00               	movlw	0
  5826  002746  6E3D               	movwf	otoa@i+1,c
  5827  002748  0E1F               	movlw	31
  5828  00274A  6E3C               	movwf	otoa@i,c
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5832  00274C  0E00               	movlw	0
  5833  00274E  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5837  002750  0E00               	movlw	0
  5838  002752  6E31               	movwf	otoa@t+1,c
  5839  002754  0E00               	movlw	0
  5840  002756  6E30               	movwf	otoa@t,c
  5841                           
  5842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5843  002758  D046               	goto	l3626
  5844  00275A                     l3614:
  5845  00275A  FFFF               	dw	65535	; assembler added errata NOP
  5846                           
  5847                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5848  00275C  063C               	decf	otoa@i,f,c
  5849  00275E  A0D8               	btfss	status,0,c
  5850  002760  063D               	decf	otoa@i+1,f,c
  5851                           
  5852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5853  002762  0E07               	movlw	7
  5854  002764  1434               	andwf	otoa@n,w,c
  5855  002766  6E30               	movwf	otoa@t,c
  5856  002768  6A31               	clrf	otoa@t+1,c
  5857                           
  5858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5859  00276A  0E9B               	movlw	low _dbuf
  5860  00276C  243C               	addwf	otoa@i,w,c
  5861  00276E  6ED9               	movwf	fsr2l,c
  5862  002770  0E00               	movlw	high _dbuf
  5863  002772  203D               	addwfc	otoa@i+1,w,c
  5864  002774  6EDA               	movwf	fsr2h,c
  5865  002776  5030               	movf	otoa@t,w,c
  5866  002778  0F30               	addlw	48
  5867  00277A  6EDF               	movwf	indf2,c
  5868                           
  5869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5870  00277C  062E               	decf	otoa@p,f,c
  5871  00277E  A0D8               	btfss	status,0,c
  5872  002780  062F               	decf	otoa@p+1,f,c
  5873                           
  5874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5875  002782  0632               	decf	otoa@w,f,c
  5876  002784  A0D8               	btfss	status,0,c
  5877  002786  0633               	decf	otoa@w+1,f,c
  5878                           
  5879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5880  002788  C034  F026         	movff	otoa@n,??_otoa
  5881  00278C  C035  F027         	movff	otoa@n+1,??_otoa+1
  5882  002790  C036  F028         	movff	otoa@n+2,??_otoa+2
  5883  002794  C037  F029         	movff	otoa@n+3,??_otoa+3
  5884  002798  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5885  00279C  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5886  0027A0  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5887  0027A4  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5888  0027A8  0E04               	movlw	4
  5889  0027AA  D00A               	goto	u3320
  5890  0027AC                     u3325:
  5891  0027AC  FFFF               	dw	65535	; assembler added errata NOP
  5892  0027AE  90D8               	bcf	status,0,c
  5893  0027B0  322D               	rrcf	??_otoa+7,f,c
  5894  0027B2  322C               	rrcf	??_otoa+6,f,c
  5895  0027B4  322B               	rrcf	??_otoa+5,f,c
  5896  0027B6  322A               	rrcf	??_otoa+4,f,c
  5897  0027B8  3229               	rrcf	??_otoa+3,f,c
  5898  0027BA  3228               	rrcf	??_otoa+2,f,c
  5899  0027BC  3227               	rrcf	??_otoa+1,f,c
  5900  0027BE  3226               	rrcf	??_otoa,f,c
  5901  0027C0                     u3320:
  5902  0027C0  FFFF               	dw	65535	; assembler added errata NOP
  5903  0027C2  2EE8               	decfsz	wreg,f,c
  5904  0027C4  D7F3               	goto	u3325
  5905  0027C6  C026  F034         	movff	??_otoa,otoa@n
  5906  0027CA  C027  F035         	movff	??_otoa+1,otoa@n+1
  5907  0027CE  C028  F036         	movff	??_otoa+2,otoa@n+2
  5908  0027D2  C029  F037         	movff	??_otoa+3,otoa@n+3
  5909  0027D6  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5910  0027DA  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5911  0027DE  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5912  0027E2  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5913  0027E6                     l3626:
  5914  0027E6  FFFF               	dw	65535	; assembler added errata NOP
  5915                           
  5916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5917  0027E8  BE3D               	btfsc	otoa@i+1,7,c
  5918  0027EA  D021               	goto	u3370
  5919  0027EC  503D               	movf	otoa@i+1,w,c
  5920  0027EE  E103               	bnz	u3330
  5921  0027F0  043C               	decf	otoa@i,w,c
  5922  0027F2  A0D8               	btfss	status,0,c
  5923  0027F4  D01C               	goto	u3370
  5924  0027F6                     u3330:
  5925  0027F6  5034               	movf	otoa@n,w,c
  5926  0027F8  1035               	iorwf	otoa@n+1,w,c
  5927  0027FA  1036               	iorwf	otoa@n+2,w,c
  5928  0027FC  1037               	iorwf	otoa@n+3,w,c
  5929  0027FE  1038               	iorwf	otoa@n+4,w,c
  5930  002800  1039               	iorwf	otoa@n+5,w,c
  5931  002802  103A               	iorwf	otoa@n+6,w,c
  5932  002804  103B               	iorwf	otoa@n+7,w,c
  5933  002806  A4D8               	btfss	status,2,c
  5934  002808  D7A8               	goto	l3614
  5935  00280A  BE2F               	btfsc	otoa@p+1,7,c
  5936  00280C  D005               	goto	u3350
  5937  00280E  502F               	movf	otoa@p+1,w,c
  5938  002810  E1A4               	bnz	l3614
  5939  002812  042E               	decf	otoa@p,w,c
  5940  002814  B0D8               	btfsc	status,0,c
  5941  002816  D7A1               	goto	l3614
  5942  002818                     u3350:
  5943  002818  FFFF               	dw	65535	; assembler added errata NOP
  5944  00281A  BE33               	btfsc	otoa@w+1,7,c
  5945  00281C  D008               	goto	u3370
  5946  00281E  5033               	movf	otoa@w+1,w,c
  5947  002820  E103               	bnz	u3360
  5948  002822  0432               	decf	otoa@w,w,c
  5949  002824  A0D8               	btfss	status,0,c
  5950  002826  D003               	goto	u3370
  5951  002828                     u3360:
  5952  002828  0100               	movlb	0	; () banked
  5953  00282A  B395               	btfsc	_flags& (0+255),1,b
  5954  00282C  D796               	goto	l3614
  5955  00282E                     u3370:
  5956  00282E  FFFF               	dw	65535	; assembler added errata NOP
  5957                           
  5958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5959  002830  0100               	movlb	0	; () banked
  5960  002832  A995               	btfss	_flags& (0+255),4,b
  5961  002834  D012               	goto	l3644
  5962                           
  5963                           ; BSR set to: 0
  5964  002836  5030               	movf	otoa@t,w,c
  5965  002838  1031               	iorwf	otoa@t+1,w,c
  5966  00283A  B4D8               	btfsc	status,2,c
  5967  00283C  D00E               	goto	l3644
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5971  00283E  063C               	decf	otoa@i,f,c
  5972  002840  A0D8               	btfss	status,0,c
  5973  002842  063D               	decf	otoa@i+1,f,c
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5977  002844  0E9B               	movlw	low _dbuf
  5978  002846  243C               	addwf	otoa@i,w,c
  5979  002848  6ED9               	movwf	fsr2l,c
  5980  00284A  0E00               	movlw	high _dbuf
  5981  00284C  203D               	addwfc	otoa@i+1,w,c
  5982  00284E  6EDA               	movwf	fsr2h,c
  5983  002850  0E30               	movlw	48
  5984  002852  6EDF               	movwf	indf2,c
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5988  002854  0632               	decf	otoa@w,f,c
  5989  002856  A0D8               	btfss	status,0,c
  5990  002858  0633               	decf	otoa@w+1,f,c
  5991  00285A                     l3644:
  5992  00285A  FFFF               	dw	65535	; assembler added errata NOP
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5996  00285C  C01C  F011         	movff	otoa@fp,pad@fp
  5997  002860  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5998  002864  0E9B               	movlw	low _dbuf
  5999  002866  243C               	addwf	otoa@i,w,c
  6000  002868  6E13               	movwf	pad@buf,c
  6001  00286A  0E00               	movlw	high _dbuf
  6002  00286C  203D               	addwfc	otoa@i+1,w,c
  6003  00286E  6E14               	movwf	pad@buf+1,c
  6004  002870  C032  F015         	movff	otoa@w,pad@p
  6005  002874  C033  F016         	movff	otoa@w+1,pad@p+1
  6006  002878  ECE3  F019         	call	_pad	;wreg free
  6007  00287C  C011  F01C         	movff	?_pad,?_otoa
  6008  002880  C012  F01D         	movff	?_pad+1,?_otoa+1
  6009  002884  0012               	return		;funcret
  6010  002886  FFFF               	dw	65535	; errata NOP
  6011  002888                     __end_of_otoa:
  6012                           	opt callstack 0
  6013                           
  6014 ;; *************** function _dtoa *****************
  6015 ;; Defined at:
  6016 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6019 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6020 ;;  d               8   29[COMRAM] long long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  n               8   53[COMRAM] long long 
  6023 ;;  i               2   61[COMRAM] int 
  6024 ;;  s               2   51[COMRAM] int 
  6025 ;;  w               2   49[COMRAM] int 
  6026 ;;  p               2   47[COMRAM] int 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  2   27[COMRAM] int 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:        10       0       0       0       0       0       0
  6037 ;;      Locals:        18       0       0       0       0       0       0
  6038 ;;      Temps:          8       0       0       0       0       0       0
  6039 ;;      Totals:        36       0       0       0       0       0       0
  6040 ;;Total ram usage:       36 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    6
  6043 ;; This function calls:
  6044 ;;		___aodiv
  6045 ;;		___aomod
  6046 ;;		_abs
  6047 ;;		_pad
  6048 ;; This function is called by:
  6049 ;;		_vfpfcnvrt
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text19
  6054  001EBE                     __ptext19:
  6055                           	opt callstack 0
  6056  001EBE                     _dtoa:
  6057                           	opt callstack 0
  6058  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  6059                           
  6060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6061                           
  6062                           ;incstack = 0
  6063  001EC0  C01E  F036         	movff	dtoa@d,dtoa@n
  6064  001EC4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6065  001EC8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6066  001ECC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6067  001ED0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6068  001ED4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6069  001ED8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6070  001EDC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6071                           
  6072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6073  001EE0  AE3D               	btfss	dtoa@n+7,7,c
  6074  001EE2  D002               	goto	u3150
  6075  001EE4  0E01               	movlw	1
  6076  001EE6  D002               	goto	u3160
  6077  001EE8                     u3150:
  6078  001EE8  FFFF               	dw	65535	; assembler added errata NOP
  6079  001EEA  0E00               	movlw	0
  6080  001EEC                     u3160:
  6081  001EEC  FFFF               	dw	65535	; assembler added errata NOP
  6082  001EEE  6E34               	movwf	dtoa@s,c
  6083  001EF0  6A35               	clrf	dtoa@s+1,c
  6084                           
  6085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6086  001EF2  5034               	movf	dtoa@s,w,c
  6087  001EF4  1035               	iorwf	dtoa@s+1,w,c
  6088  001EF6  B4D8               	btfsc	status,2,c
  6089  001EF8  D010               	goto	l3544
  6090                           
  6091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6092  001EFA  1E3D               	comf	dtoa@n+7,f,c
  6093  001EFC  1E3C               	comf	dtoa@n+6,f,c
  6094  001EFE  1E3B               	comf	dtoa@n+5,f,c
  6095  001F00  1E3A               	comf	dtoa@n+4,f,c
  6096  001F02  1E39               	comf	dtoa@n+3,f,c
  6097  001F04  1E38               	comf	dtoa@n+2,f,c
  6098  001F06  1E37               	comf	dtoa@n+1,f,c
  6099  001F08  6C36               	negf	dtoa@n,c
  6100  001F0A  0E00               	movlw	0
  6101  001F0C  2237               	addwfc	dtoa@n+1,f,c
  6102  001F0E  2238               	addwfc	dtoa@n+2,f,c
  6103  001F10  2239               	addwfc	dtoa@n+3,f,c
  6104  001F12  223A               	addwfc	dtoa@n+4,f,c
  6105  001F14  223B               	addwfc	dtoa@n+5,f,c
  6106  001F16  223C               	addwfc	dtoa@n+6,f,c
  6107  001F18  223D               	addwfc	dtoa@n+7,f,c
  6108  001F1A                     l3544:
  6109  001F1A  FFFF               	dw	65535	; assembler added errata NOP
  6110                           
  6111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6112  001F1C  0100               	movlb	0	; () banked
  6113  001F1E  AF94               	btfss	(_prec+1)& (0+255),7,b
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6117  001F20  9395               	bcf	_flags& (0+255),1,b
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6121  001F22  BF94               	btfsc	(_prec+1)& (0+255),7,b
  6122  001F24  D005               	goto	u3190
  6123  001F26  5194               	movf	(_prec+1)& (0+255),w,b
  6124  001F28  E109               	bnz	l384
  6125  001F2A  0593               	decf	_prec& (0+255),w,b
  6126  001F2C  B0D8               	btfsc	status,0,c
  6127  001F2E  D006               	goto	l384
  6128  001F30                     u3190:
  6129  001F30  FFFF               	dw	65535	; assembler added errata NOP
  6130                           
  6131                           ; BSR set to: 0
  6132  001F32  0E00               	movlw	0
  6133  001F34  6E31               	movwf	dtoa@p+1,c
  6134  001F36  0E01               	movlw	1
  6135  001F38  6E30               	movwf	dtoa@p,c
  6136  001F3A  D005               	goto	l386
  6137  001F3C                     l384:
  6138  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  6139                           
  6140                           ; BSR set to: 0
  6141  001F3E  C093  F030         	movff	_prec,dtoa@p
  6142  001F42  C094  F031         	movff	_prec+1,dtoa@p+1
  6143  001F46                     l386:
  6144  001F46  FFFF               	dw	65535	; assembler added errata NOP
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6148  001F48  C091  F032         	movff	_width,dtoa@w
  6149  001F4C  C092  F033         	movff	_width+1,dtoa@w+1
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6153  001F50  5034               	movf	dtoa@s,w,c
  6154  001F52  1035               	iorwf	dtoa@s+1,w,c
  6155  001F54  A4D8               	btfss	status,2,c
  6156  001F56  D002               	goto	u3210
  6157                           
  6158                           ; BSR set to: 0
  6159  001F58  A595               	btfss	_flags& (0+255),2,b
  6160  001F5A  D004               	goto	l3558
  6161  001F5C                     u3210:
  6162  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6166  001F5E  0632               	decf	dtoa@w,f,c
  6167  001F60  A0D8               	btfss	status,0,c
  6168  001F62  0633               	decf	dtoa@w+1,f,c
  6169  001F64                     l3558:
  6170  001F64  FFFF               	dw	65535	; assembler added errata NOP
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6174  001F66  0E00               	movlw	0
  6175  001F68  6E3F               	movwf	dtoa@i+1,c
  6176  001F6A  0E1F               	movlw	31
  6177  001F6C  6E3E               	movwf	dtoa@i,c
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6181  001F6E  0E00               	movlw	0
  6182  001F70  6FBA               	movwf	(_dbuf+31)& (0+255),b
  6183                           
  6184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6185  001F72  D07D               	goto	l3572
  6186  001F74                     l3562:
  6187  001F74  FFFF               	dw	65535	; assembler added errata NOP
  6188                           
  6189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6190  001F76  063E               	decf	dtoa@i,f,c
  6191  001F78  A0D8               	btfss	status,0,c
  6192  001F7A  063F               	decf	dtoa@i+1,f,c
  6193                           
  6194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6195  001F7C  0E9B               	movlw	low _dbuf
  6196  001F7E  243E               	addwf	dtoa@i,w,c
  6197  001F80  6ED9               	movwf	fsr2l,c
  6198  001F82  0E00               	movlw	high _dbuf
  6199  001F84  203F               	addwfc	dtoa@i+1,w,c
  6200  001F86  6EDA               	movwf	fsr2h,c
  6201  001F88  C036  F001         	movff	dtoa@n,___aomod@dividend
  6202  001F8C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6203  001F90  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6204  001F94  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6205  001F98  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6206  001F9C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6207  001FA0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6208  001FA4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6209  001FA8  0E0A               	movlw	10
  6210  001FAA  6E09               	movwf	___aomod@divisor,c
  6211  001FAC  0E00               	movlw	0
  6212  001FAE  6E0A               	movwf	___aomod@divisor+1,c
  6213  001FB0  0E00               	movlw	0
  6214  001FB2  6E0B               	movwf	___aomod@divisor+2,c
  6215  001FB4  0E00               	movlw	0
  6216  001FB6  6E0C               	movwf	___aomod@divisor+3,c
  6217  001FB8  0E00               	movlw	0
  6218  001FBA  6E0D               	movwf	___aomod@divisor+4,c
  6219  001FBC  0E00               	movlw	0
  6220  001FBE  6E0E               	movwf	___aomod@divisor+5,c
  6221  001FC0  0E00               	movlw	0
  6222  001FC2  6E0F               	movwf	___aomod@divisor+6,c
  6223  001FC4  0E00               	movlw	0
  6224  001FC6  6E10               	movwf	___aomod@divisor+7,c
  6225  001FC8  ECF5  F016         	call	___aomod	;wreg free
  6226  001FCC  C001  F026         	movff	?___aomod,??_dtoa
  6227  001FD0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6228  001FD4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6229  001FD8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6230  001FDC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6231  001FE0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6232  001FE4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6233  001FE8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6234  001FEC  C026  F013         	movff	??_dtoa,abs@a
  6235  001FF0  C028  F014         	movff	??_dtoa+2,abs@a+1
  6236  001FF4  EC64  F01C         	call	_abs	;wreg free
  6237  001FF8  5013               	movf	?_abs,w,c
  6238  001FFA  0F30               	addlw	48
  6239  001FFC  6EDF               	movwf	indf2,c
  6240                           
  6241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  6242  001FFE  0630               	decf	dtoa@p,f,c
  6243  002000  A0D8               	btfss	status,0,c
  6244  002002  0631               	decf	dtoa@p+1,f,c
  6245                           
  6246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  6247  002004  0632               	decf	dtoa@w,f,c
  6248  002006  A0D8               	btfss	status,0,c
  6249  002008  0633               	decf	dtoa@w+1,f,c
  6250                           
  6251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6252  00200A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6253  00200E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6254  002012  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6255  002016  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6256  00201A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6257  00201E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6258  002022  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6259  002026  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6260  00202A  0E0A               	movlw	10
  6261  00202C  6E09               	movwf	___aodiv@divisor,c
  6262  00202E  0E00               	movlw	0
  6263  002030  6E0A               	movwf	___aodiv@divisor+1,c
  6264  002032  0E00               	movlw	0
  6265  002034  6E0B               	movwf	___aodiv@divisor+2,c
  6266  002036  0E00               	movlw	0
  6267  002038  6E0C               	movwf	___aodiv@divisor+3,c
  6268  00203A  0E00               	movlw	0
  6269  00203C  6E0D               	movwf	___aodiv@divisor+4,c
  6270  00203E  0E00               	movlw	0
  6271  002040  6E0E               	movwf	___aodiv@divisor+5,c
  6272  002042  0E00               	movlw	0
  6273  002044  6E0F               	movwf	___aodiv@divisor+6,c
  6274  002046  0E00               	movlw	0
  6275  002048  6E10               	movwf	___aodiv@divisor+7,c
  6276  00204A  ECF7  F014         	call	___aodiv	;wreg free
  6277  00204E  C001  F036         	movff	?___aodiv,dtoa@n
  6278  002052  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6279  002056  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6280  00205A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6281  00205E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6282  002062  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6283  002066  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6284  00206A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6285  00206E                     l3572:
  6286  00206E  FFFF               	dw	65535	; assembler added errata NOP
  6287                           
  6288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6289  002070  BE3F               	btfsc	dtoa@i+1,7,c
  6290  002072  D021               	goto	u3260
  6291  002074  503F               	movf	dtoa@i+1,w,c
  6292  002076  E103               	bnz	u3220
  6293  002078  043E               	decf	dtoa@i,w,c
  6294  00207A  A0D8               	btfss	status,0,c
  6295  00207C  D01C               	goto	u3260
  6296  00207E                     u3220:
  6297  00207E  5036               	movf	dtoa@n,w,c
  6298  002080  1037               	iorwf	dtoa@n+1,w,c
  6299  002082  1038               	iorwf	dtoa@n+2,w,c
  6300  002084  1039               	iorwf	dtoa@n+3,w,c
  6301  002086  103A               	iorwf	dtoa@n+4,w,c
  6302  002088  103B               	iorwf	dtoa@n+5,w,c
  6303  00208A  103C               	iorwf	dtoa@n+6,w,c
  6304  00208C  103D               	iorwf	dtoa@n+7,w,c
  6305  00208E  A4D8               	btfss	status,2,c
  6306  002090  D771               	goto	l3562
  6307  002092  BE31               	btfsc	dtoa@p+1,7,c
  6308  002094  D005               	goto	u3240
  6309  002096  5031               	movf	dtoa@p+1,w,c
  6310  002098  E102               	bnz	u3241
  6311  00209A  0430               	decf	dtoa@p,w,c
  6312  00209C  B0D8               	btfsc	status,0,c
  6313  00209E                     u3241:
  6314  00209E  D76A               	goto	l3562
  6315  0020A0                     u3240:
  6316  0020A0  FFFF               	dw	65535	; assembler added errata NOP
  6317  0020A2  BE33               	btfsc	dtoa@w+1,7,c
  6318  0020A4  D008               	goto	u3260
  6319  0020A6  5033               	movf	dtoa@w+1,w,c
  6320  0020A8  E103               	bnz	u3250
  6321  0020AA  0432               	decf	dtoa@w,w,c
  6322  0020AC  A0D8               	btfss	status,0,c
  6323  0020AE  D003               	goto	u3260
  6324  0020B0                     u3250:
  6325  0020B0  0100               	movlb	0	; () banked
  6326  0020B2  B395               	btfsc	_flags& (0+255),1,b
  6327  0020B4  D75F               	goto	l3562
  6328  0020B6                     u3260:
  6329  0020B6  FFFF               	dw	65535	; assembler added errata NOP
  6330                           
  6331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6332  0020B8  5034               	movf	dtoa@s,w,c
  6333  0020BA  1035               	iorwf	dtoa@s+1,w,c
  6334  0020BC  A4D8               	btfss	status,2,c
  6335  0020BE  D003               	goto	u3280
  6336  0020C0  0100               	movlb	0	; () banked
  6337  0020C2  A595               	btfss	_flags& (0+255),2,b
  6338  0020C4  D01A               	goto	l3596
  6339  0020C6                     u3280:
  6340  0020C6  FFFF               	dw	65535	; assembler added errata NOP
  6341                           
  6342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  6343  0020C8  063E               	decf	dtoa@i,f,c
  6344  0020CA  A0D8               	btfss	status,0,c
  6345  0020CC  063F               	decf	dtoa@i+1,f,c
  6346                           
  6347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6348  0020CE  5034               	movf	dtoa@s,w,c
  6349  0020D0  1035               	iorwf	dtoa@s+1,w,c
  6350  0020D2  A4D8               	btfss	status,2,c
  6351  0020D4  D004               	goto	l3592
  6352  0020D6  0E00               	movlw	0
  6353  0020D8  6E2F               	movwf	_dtoa$1076+1,c
  6354  0020DA  0E2B               	movlw	43
  6355  0020DC  D004               	goto	L21
  6356  0020DE                     l3592:
  6357  0020DE  FFFF               	dw	65535	; assembler added errata NOP
  6358  0020E0  0E00               	movlw	0
  6359  0020E2  6E2F               	movwf	_dtoa$1076+1,c
  6360  0020E4  0E2D               	movlw	45
  6361  0020E6                     L21:
  6362  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  6363  0020E8  6E2E               	movwf	_dtoa$1076,c
  6364  0020EA  0E9B               	movlw	low _dbuf
  6365  0020EC  243E               	addwf	dtoa@i,w,c
  6366  0020EE  6ED9               	movwf	fsr2l,c
  6367  0020F0  0E00               	movlw	high _dbuf
  6368  0020F2  203F               	addwfc	dtoa@i+1,w,c
  6369  0020F4  6EDA               	movwf	fsr2h,c
  6370  0020F6  C02E  FFDF         	movff	_dtoa$1076,indf2
  6371  0020FA                     l3596:
  6372  0020FA  FFFF               	dw	65535	; assembler added errata NOP
  6373                           
  6374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6375  0020FC  C01C  F011         	movff	dtoa@fp,pad@fp
  6376  002100  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6377  002104  0E9B               	movlw	low _dbuf
  6378  002106  243E               	addwf	dtoa@i,w,c
  6379  002108  6E13               	movwf	pad@buf,c
  6380  00210A  0E00               	movlw	high _dbuf
  6381  00210C  203F               	addwfc	dtoa@i+1,w,c
  6382  00210E  6E14               	movwf	pad@buf+1,c
  6383  002110  C032  F015         	movff	dtoa@w,pad@p
  6384  002114  C033  F016         	movff	dtoa@w+1,pad@p+1
  6385  002118  ECE3  F019         	call	_pad	;wreg free
  6386  00211C  C011  F01C         	movff	?_pad,?_dtoa
  6387  002120  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6388  002124  0012               	return		;funcret
  6389  002126  FFFF               	dw	65535	; errata NOP
  6390  002128                     __end_of_dtoa:
  6391                           	opt callstack 0
  6392                           
  6393 ;; *************** function _abs *****************
  6394 ;; Defined at:
  6395 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  a               2   18[COMRAM] int 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2   18[COMRAM] int 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6409 ;;      Params:         2       0       0       0       0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0
  6411 ;;      Temps:          2       0       0       0       0       0       0
  6412 ;;      Totals:         4       0       0       0       0       0       0
  6413 ;;Total ram usage:        4 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    2
  6416 ;; This function calls:
  6417 ;;		Nothing
  6418 ;; This function is called by:
  6419 ;;		_dtoa
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text20
  6424  0038C8                     __ptext20:
  6425                           	opt callstack 0
  6426  0038C8                     _abs:
  6427                           	opt callstack 0
  6428  0038C8  FFFF               	dw	65535	; assembler added errata NOP
  6429                           
  6430                           ;incstack = 0
  6431  0038CA  BE14               	btfsc	abs@a+1,7,c
  6432  0038CC  D005               	goto	u2820
  6433  0038CE  5014               	movf	abs@a+1,w,c
  6434  0038D0  E111               	bnz	l1257
  6435  0038D2  0413               	decf	abs@a,w,c
  6436  0038D4  B0D8               	btfsc	status,0,c
  6437  0038D6  D00E               	goto	l1257
  6438  0038D8                     u2820:
  6439  0038D8  FFFF               	dw	65535	; assembler added errata NOP
  6440  0038DA  C013  F015         	movff	abs@a,??_abs
  6441  0038DE  C014  F016         	movff	abs@a+1,??_abs+1
  6442  0038E2  1E15               	comf	??_abs,f,c
  6443  0038E4  1E16               	comf	??_abs+1,f,c
  6444  0038E6  4A15               	infsnz	??_abs,f,c
  6445  0038E8  2A16               	incf	??_abs+1,f,c
  6446  0038EA  C015  F013         	movff	??_abs,?_abs
  6447  0038EE  C016  F014         	movff	??_abs+1,?_abs+1
  6448  0038F2  D005               	goto	l1260
  6449  0038F4                     l1257:
  6450  0038F4  FFFF               	dw	65535	; assembler added errata NOP
  6451  0038F6  C013  F013         	movff	abs@a,?_abs
  6452  0038FA  C014  F014         	movff	abs@a+1,?_abs+1
  6453  0038FE                     l1260:
  6454  0038FE  FFFF               	dw	65535	; assembler added errata NOP
  6455  003900  0012               	return		;funcret
  6456  003902  FFFF               	dw	65535	; errata NOP
  6457  003904                     __end_of_abs:
  6458                           	opt callstack 0
  6459                           
  6460 ;; *************** function ___aomod *****************
  6461 ;; Defined at:
  6462 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  dividend        8    0[COMRAM] long long 
  6465 ;;  divisor         8    8[COMRAM] long long 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  sign            1   17[COMRAM] unsigned char 
  6468 ;;  counter         1   16[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  8    0[COMRAM] long long 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6478 ;;      Params:        16       0       0       0       0       0       0
  6479 ;;      Locals:         2       0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0
  6481 ;;      Totals:        18       0       0       0       0       0       0
  6482 ;;Total ram usage:       18 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    2
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_dtoa
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text21
  6493  002DEA                     __ptext21:
  6494                           	opt callstack 0
  6495  002DEA                     ___aomod:
  6496                           	opt callstack 0
  6497  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  6498                           
  6499                           ;incstack = 0
  6500  002DEC  0E00               	movlw	0
  6501  002DEE  6E12               	movwf	___aomod@sign,c
  6502  002DF0  AE08               	btfss	___aomod@dividend+7,7,c
  6503  002DF2  D012               	goto	l3446
  6504  002DF4  1E08               	comf	___aomod@dividend+7,f,c
  6505  002DF6  1E07               	comf	___aomod@dividend+6,f,c
  6506  002DF8  1E06               	comf	___aomod@dividend+5,f,c
  6507  002DFA  1E05               	comf	___aomod@dividend+4,f,c
  6508  002DFC  1E04               	comf	___aomod@dividend+3,f,c
  6509  002DFE  1E03               	comf	___aomod@dividend+2,f,c
  6510  002E00  1E02               	comf	___aomod@dividend+1,f,c
  6511  002E02  6C01               	negf	___aomod@dividend,c
  6512  002E04  0E00               	movlw	0
  6513  002E06  2202               	addwfc	___aomod@dividend+1,f,c
  6514  002E08  2203               	addwfc	___aomod@dividend+2,f,c
  6515  002E0A  2204               	addwfc	___aomod@dividend+3,f,c
  6516  002E0C  2205               	addwfc	___aomod@dividend+4,f,c
  6517  002E0E  2206               	addwfc	___aomod@dividend+5,f,c
  6518  002E10  2207               	addwfc	___aomod@dividend+6,f,c
  6519  002E12  2208               	addwfc	___aomod@dividend+7,f,c
  6520  002E14  0E01               	movlw	1
  6521  002E16  6E12               	movwf	___aomod@sign,c
  6522  002E18                     l3446:
  6523  002E18  FFFF               	dw	65535	; assembler added errata NOP
  6524  002E1A  AE10               	btfss	___aomod@divisor+7,7,c
  6525  002E1C  D010               	goto	l3450
  6526  002E1E  1E10               	comf	___aomod@divisor+7,f,c
  6527  002E20  1E0F               	comf	___aomod@divisor+6,f,c
  6528  002E22  1E0E               	comf	___aomod@divisor+5,f,c
  6529  002E24  1E0D               	comf	___aomod@divisor+4,f,c
  6530  002E26  1E0C               	comf	___aomod@divisor+3,f,c
  6531  002E28  1E0B               	comf	___aomod@divisor+2,f,c
  6532  002E2A  1E0A               	comf	___aomod@divisor+1,f,c
  6533  002E2C  6C09               	negf	___aomod@divisor,c
  6534  002E2E  0E00               	movlw	0
  6535  002E30  220A               	addwfc	___aomod@divisor+1,f,c
  6536  002E32  220B               	addwfc	___aomod@divisor+2,f,c
  6537  002E34  220C               	addwfc	___aomod@divisor+3,f,c
  6538  002E36  220D               	addwfc	___aomod@divisor+4,f,c
  6539  002E38  220E               	addwfc	___aomod@divisor+5,f,c
  6540  002E3A  220F               	addwfc	___aomod@divisor+6,f,c
  6541  002E3C  2210               	addwfc	___aomod@divisor+7,f,c
  6542  002E3E                     l3450:
  6543  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  6544  002E40  5009               	movf	___aomod@divisor,w,c
  6545  002E42  100A               	iorwf	___aomod@divisor+1,w,c
  6546  002E44  100B               	iorwf	___aomod@divisor+2,w,c
  6547  002E46  100C               	iorwf	___aomod@divisor+3,w,c
  6548  002E48  100D               	iorwf	___aomod@divisor+4,w,c
  6549  002E4A  100E               	iorwf	___aomod@divisor+5,w,c
  6550  002E4C  100F               	iorwf	___aomod@divisor+6,w,c
  6551  002E4E  1010               	iorwf	___aomod@divisor+7,w,c
  6552  002E50  B4D8               	btfsc	status,2,c
  6553  002E52  D040               	goto	l3466
  6554  002E54  0E01               	movlw	1
  6555  002E56  6E11               	movwf	___aomod@counter,c
  6556  002E58  D00B               	goto	l3456
  6557  002E5A                     l3454:
  6558  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  6559  002E5C  90D8               	bcf	status,0,c
  6560  002E5E  3609               	rlcf	___aomod@divisor,f,c
  6561  002E60  360A               	rlcf	___aomod@divisor+1,f,c
  6562  002E62  360B               	rlcf	___aomod@divisor+2,f,c
  6563  002E64  360C               	rlcf	___aomod@divisor+3,f,c
  6564  002E66  360D               	rlcf	___aomod@divisor+4,f,c
  6565  002E68  360E               	rlcf	___aomod@divisor+5,f,c
  6566  002E6A  360F               	rlcf	___aomod@divisor+6,f,c
  6567  002E6C  3610               	rlcf	___aomod@divisor+7,f,c
  6568  002E6E  2A11               	incf	___aomod@counter,f,c
  6569  002E70                     l3456:
  6570  002E70  FFFF               	dw	65535	; assembler added errata NOP
  6571  002E72  AE10               	btfss	___aomod@divisor+7,7,c
  6572  002E74  D7F2               	goto	l3454
  6573  002E76                     u3020:
  6574  002E76  FFFF               	dw	65535	; assembler added errata NOP
  6575  002E78  5009               	movf	___aomod@divisor,w,c
  6576  002E7A  5C01               	subwf	___aomod@dividend,w,c
  6577  002E7C  500A               	movf	___aomod@divisor+1,w,c
  6578  002E7E  5802               	subwfb	___aomod@dividend+1,w,c
  6579  002E80  500B               	movf	___aomod@divisor+2,w,c
  6580  002E82  5803               	subwfb	___aomod@dividend+2,w,c
  6581  002E84  500C               	movf	___aomod@divisor+3,w,c
  6582  002E86  5804               	subwfb	___aomod@dividend+3,w,c
  6583  002E88  500D               	movf	___aomod@divisor+4,w,c
  6584  002E8A  5805               	subwfb	___aomod@dividend+4,w,c
  6585  002E8C  500E               	movf	___aomod@divisor+5,w,c
  6586  002E8E  5806               	subwfb	___aomod@dividend+5,w,c
  6587  002E90  500F               	movf	___aomod@divisor+6,w,c
  6588  002E92  5807               	subwfb	___aomod@dividend+6,w,c
  6589  002E94  5010               	movf	___aomod@divisor+7,w,c
  6590  002E96  5808               	subwfb	___aomod@dividend+7,w,c
  6591  002E98  A0D8               	btfss	status,0,c
  6592  002E9A  D010               	goto	l3462
  6593  002E9C  5009               	movf	___aomod@divisor,w,c
  6594  002E9E  5E01               	subwf	___aomod@dividend,f,c
  6595  002EA0  500A               	movf	___aomod@divisor+1,w,c
  6596  002EA2  5A02               	subwfb	___aomod@dividend+1,f,c
  6597  002EA4  500B               	movf	___aomod@divisor+2,w,c
  6598  002EA6  5A03               	subwfb	___aomod@dividend+2,f,c
  6599  002EA8  500C               	movf	___aomod@divisor+3,w,c
  6600  002EAA  5A04               	subwfb	___aomod@dividend+3,f,c
  6601  002EAC  500D               	movf	___aomod@divisor+4,w,c
  6602  002EAE  5A05               	subwfb	___aomod@dividend+4,f,c
  6603  002EB0  500E               	movf	___aomod@divisor+5,w,c
  6604  002EB2  5A06               	subwfb	___aomod@dividend+5,f,c
  6605  002EB4  500F               	movf	___aomod@divisor+6,w,c
  6606  002EB6  5A07               	subwfb	___aomod@dividend+6,f,c
  6607  002EB8  5010               	movf	___aomod@divisor+7,w,c
  6608  002EBA  5A08               	subwfb	___aomod@dividend+7,f,c
  6609  002EBC                     l3462:
  6610  002EBC  FFFF               	dw	65535	; assembler added errata NOP
  6611  002EBE  90D8               	bcf	status,0,c
  6612  002EC0  3210               	rrcf	___aomod@divisor+7,f,c
  6613  002EC2  320F               	rrcf	___aomod@divisor+6,f,c
  6614  002EC4  320E               	rrcf	___aomod@divisor+5,f,c
  6615  002EC6  320D               	rrcf	___aomod@divisor+4,f,c
  6616  002EC8  320C               	rrcf	___aomod@divisor+3,f,c
  6617  002ECA  320B               	rrcf	___aomod@divisor+2,f,c
  6618  002ECC  320A               	rrcf	___aomod@divisor+1,f,c
  6619  002ECE  3209               	rrcf	___aomod@divisor,f,c
  6620  002ED0  2E11               	decfsz	___aomod@counter,f,c
  6621  002ED2  D7D1               	goto	u3020
  6622  002ED4                     l3466:
  6623  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  6624  002ED6  5012               	movf	___aomod@sign,w,c
  6625  002ED8  B4D8               	btfsc	status,2,c
  6626  002EDA  D010               	goto	l3470
  6627  002EDC  1E08               	comf	___aomod@dividend+7,f,c
  6628  002EDE  1E07               	comf	___aomod@dividend+6,f,c
  6629  002EE0  1E06               	comf	___aomod@dividend+5,f,c
  6630  002EE2  1E05               	comf	___aomod@dividend+4,f,c
  6631  002EE4  1E04               	comf	___aomod@dividend+3,f,c
  6632  002EE6  1E03               	comf	___aomod@dividend+2,f,c
  6633  002EE8  1E02               	comf	___aomod@dividend+1,f,c
  6634  002EEA  6C01               	negf	___aomod@dividend,c
  6635  002EEC  0E00               	movlw	0
  6636  002EEE  2202               	addwfc	___aomod@dividend+1,f,c
  6637  002EF0  2203               	addwfc	___aomod@dividend+2,f,c
  6638  002EF2  2204               	addwfc	___aomod@dividend+3,f,c
  6639  002EF4  2205               	addwfc	___aomod@dividend+4,f,c
  6640  002EF6  2206               	addwfc	___aomod@dividend+5,f,c
  6641  002EF8  2207               	addwfc	___aomod@dividend+6,f,c
  6642  002EFA  2208               	addwfc	___aomod@dividend+7,f,c
  6643  002EFC                     l3470:
  6644  002EFC  FFFF               	dw	65535	; assembler added errata NOP
  6645  002EFE  C001  F001         	movff	___aomod@dividend,?___aomod
  6646  002F02  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6647  002F06  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6648  002F0A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6649  002F0E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6650  002F12  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6651  002F16  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6652  002F1A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6653  002F1E  0012               	return		;funcret
  6654  002F20  FFFF               	dw	65535	; errata NOP
  6655  002F22                     __end_of___aomod:
  6656                           	opt callstack 0
  6657                           
  6658 ;; *************** function ___aodiv *****************
  6659 ;; Defined at:
  6660 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  dividend        8    0[COMRAM] long long 
  6663 ;;  divisor         8    8[COMRAM] long long 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  quotient        8   18[COMRAM] long long 
  6666 ;;  sign            1   17[COMRAM] unsigned char 
  6667 ;;  counter         1   16[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  8    0[COMRAM] long long 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6677 ;;      Params:        16       0       0       0       0       0       0
  6678 ;;      Locals:        10       0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0
  6680 ;;      Totals:        26       0       0       0       0       0       0
  6681 ;;Total ram usage:       26 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    2
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_dtoa
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text22
  6692  0029EE                     __ptext22:
  6693                           	opt callstack 0
  6694  0029EE                     ___aodiv:
  6695                           	opt callstack 0
  6696  0029EE  FFFF               	dw	65535	; assembler added errata NOP
  6697                           
  6698                           ;incstack = 0
  6699  0029F0  0E00               	movlw	0
  6700  0029F2  6E12               	movwf	___aodiv@sign,c
  6701  0029F4  AE10               	btfss	___aodiv@divisor+7,7,c
  6702  0029F6  D012               	goto	l3402
  6703  0029F8  1E10               	comf	___aodiv@divisor+7,f,c
  6704  0029FA  1E0F               	comf	___aodiv@divisor+6,f,c
  6705  0029FC  1E0E               	comf	___aodiv@divisor+5,f,c
  6706  0029FE  1E0D               	comf	___aodiv@divisor+4,f,c
  6707  002A00  1E0C               	comf	___aodiv@divisor+3,f,c
  6708  002A02  1E0B               	comf	___aodiv@divisor+2,f,c
  6709  002A04  1E0A               	comf	___aodiv@divisor+1,f,c
  6710  002A06  6C09               	negf	___aodiv@divisor,c
  6711  002A08  0E00               	movlw	0
  6712  002A0A  220A               	addwfc	___aodiv@divisor+1,f,c
  6713  002A0C  220B               	addwfc	___aodiv@divisor+2,f,c
  6714  002A0E  220C               	addwfc	___aodiv@divisor+3,f,c
  6715  002A10  220D               	addwfc	___aodiv@divisor+4,f,c
  6716  002A12  220E               	addwfc	___aodiv@divisor+5,f,c
  6717  002A14  220F               	addwfc	___aodiv@divisor+6,f,c
  6718  002A16  2210               	addwfc	___aodiv@divisor+7,f,c
  6719  002A18  0E01               	movlw	1
  6720  002A1A  6E12               	movwf	___aodiv@sign,c
  6721  002A1C                     l3402:
  6722  002A1C  FFFF               	dw	65535	; assembler added errata NOP
  6723  002A1E  AE08               	btfss	___aodiv@dividend+7,7,c
  6724  002A20  D012               	goto	l3408
  6725  002A22  1E08               	comf	___aodiv@dividend+7,f,c
  6726  002A24  1E07               	comf	___aodiv@dividend+6,f,c
  6727  002A26  1E06               	comf	___aodiv@dividend+5,f,c
  6728  002A28  1E05               	comf	___aodiv@dividend+4,f,c
  6729  002A2A  1E04               	comf	___aodiv@dividend+3,f,c
  6730  002A2C  1E03               	comf	___aodiv@dividend+2,f,c
  6731  002A2E  1E02               	comf	___aodiv@dividend+1,f,c
  6732  002A30  6C01               	negf	___aodiv@dividend,c
  6733  002A32  0E00               	movlw	0
  6734  002A34  2202               	addwfc	___aodiv@dividend+1,f,c
  6735  002A36  2203               	addwfc	___aodiv@dividend+2,f,c
  6736  002A38  2204               	addwfc	___aodiv@dividend+3,f,c
  6737  002A3A  2205               	addwfc	___aodiv@dividend+4,f,c
  6738  002A3C  2206               	addwfc	___aodiv@dividend+5,f,c
  6739  002A3E  2207               	addwfc	___aodiv@dividend+6,f,c
  6740  002A40  2208               	addwfc	___aodiv@dividend+7,f,c
  6741  002A42  0E01               	movlw	1
  6742  002A44  1A12               	xorwf	___aodiv@sign,f,c
  6743  002A46                     l3408:
  6744  002A46  FFFF               	dw	65535	; assembler added errata NOP
  6745  002A48  EE20  F013         	lfsr	2,___aodiv@quotient
  6746  002A4C  0E07               	movlw	7
  6747  002A4E                     u2941:
  6748  002A4E  6ADE               	clrf	postinc2,c
  6749  002A50  06E8               	decf	wreg,f,c
  6750  002A52  E2FD               	bc	u2941
  6751  002A54  5009               	movf	___aodiv@divisor,w,c
  6752  002A56  100A               	iorwf	___aodiv@divisor+1,w,c
  6753  002A58  100B               	iorwf	___aodiv@divisor+2,w,c
  6754  002A5A  100C               	iorwf	___aodiv@divisor+3,w,c
  6755  002A5C  100D               	iorwf	___aodiv@divisor+4,w,c
  6756  002A5E  100E               	iorwf	___aodiv@divisor+5,w,c
  6757  002A60  100F               	iorwf	___aodiv@divisor+6,w,c
  6758  002A62  1010               	iorwf	___aodiv@divisor+7,w,c
  6759  002A64  B4D8               	btfsc	status,2,c
  6760  002A66  D04A               	goto	l3430
  6761  002A68  0E01               	movlw	1
  6762  002A6A  6E11               	movwf	___aodiv@counter,c
  6763  002A6C  D00B               	goto	l3416
  6764  002A6E                     l3414:
  6765  002A6E  FFFF               	dw	65535	; assembler added errata NOP
  6766  002A70  90D8               	bcf	status,0,c
  6767  002A72  3609               	rlcf	___aodiv@divisor,f,c
  6768  002A74  360A               	rlcf	___aodiv@divisor+1,f,c
  6769  002A76  360B               	rlcf	___aodiv@divisor+2,f,c
  6770  002A78  360C               	rlcf	___aodiv@divisor+3,f,c
  6771  002A7A  360D               	rlcf	___aodiv@divisor+4,f,c
  6772  002A7C  360E               	rlcf	___aodiv@divisor+5,f,c
  6773  002A7E  360F               	rlcf	___aodiv@divisor+6,f,c
  6774  002A80  3610               	rlcf	___aodiv@divisor+7,f,c
  6775  002A82  2A11               	incf	___aodiv@counter,f,c
  6776  002A84                     l3416:
  6777  002A84  FFFF               	dw	65535	; assembler added errata NOP
  6778  002A86  AE10               	btfss	___aodiv@divisor+7,7,c
  6779  002A88  D7F2               	goto	l3414
  6780  002A8A                     u2960:
  6781  002A8A  FFFF               	dw	65535	; assembler added errata NOP
  6782  002A8C  90D8               	bcf	status,0,c
  6783  002A8E  3613               	rlcf	___aodiv@quotient,f,c
  6784  002A90  3614               	rlcf	___aodiv@quotient+1,f,c
  6785  002A92  3615               	rlcf	___aodiv@quotient+2,f,c
  6786  002A94  3616               	rlcf	___aodiv@quotient+3,f,c
  6787  002A96  3617               	rlcf	___aodiv@quotient+4,f,c
  6788  002A98  3618               	rlcf	___aodiv@quotient+5,f,c
  6789  002A9A  3619               	rlcf	___aodiv@quotient+6,f,c
  6790  002A9C  361A               	rlcf	___aodiv@quotient+7,f,c
  6791  002A9E  5009               	movf	___aodiv@divisor,w,c
  6792  002AA0  5C01               	subwf	___aodiv@dividend,w,c
  6793  002AA2  500A               	movf	___aodiv@divisor+1,w,c
  6794  002AA4  5802               	subwfb	___aodiv@dividend+1,w,c
  6795  002AA6  500B               	movf	___aodiv@divisor+2,w,c
  6796  002AA8  5803               	subwfb	___aodiv@dividend+2,w,c
  6797  002AAA  500C               	movf	___aodiv@divisor+3,w,c
  6798  002AAC  5804               	subwfb	___aodiv@dividend+3,w,c
  6799  002AAE  500D               	movf	___aodiv@divisor+4,w,c
  6800  002AB0  5805               	subwfb	___aodiv@dividend+4,w,c
  6801  002AB2  500E               	movf	___aodiv@divisor+5,w,c
  6802  002AB4  5806               	subwfb	___aodiv@dividend+5,w,c
  6803  002AB6  500F               	movf	___aodiv@divisor+6,w,c
  6804  002AB8  5807               	subwfb	___aodiv@dividend+6,w,c
  6805  002ABA  5010               	movf	___aodiv@divisor+7,w,c
  6806  002ABC  5808               	subwfb	___aodiv@dividend+7,w,c
  6807  002ABE  A0D8               	btfss	status,0,c
  6808  002AC0  D011               	goto	l3426
  6809  002AC2  5009               	movf	___aodiv@divisor,w,c
  6810  002AC4  5E01               	subwf	___aodiv@dividend,f,c
  6811  002AC6  500A               	movf	___aodiv@divisor+1,w,c
  6812  002AC8  5A02               	subwfb	___aodiv@dividend+1,f,c
  6813  002ACA  500B               	movf	___aodiv@divisor+2,w,c
  6814  002ACC  5A03               	subwfb	___aodiv@dividend+2,f,c
  6815  002ACE  500C               	movf	___aodiv@divisor+3,w,c
  6816  002AD0  5A04               	subwfb	___aodiv@dividend+3,f,c
  6817  002AD2  500D               	movf	___aodiv@divisor+4,w,c
  6818  002AD4  5A05               	subwfb	___aodiv@dividend+4,f,c
  6819  002AD6  500E               	movf	___aodiv@divisor+5,w,c
  6820  002AD8  5A06               	subwfb	___aodiv@dividend+5,f,c
  6821  002ADA  500F               	movf	___aodiv@divisor+6,w,c
  6822  002ADC  5A07               	subwfb	___aodiv@dividend+6,f,c
  6823  002ADE  5010               	movf	___aodiv@divisor+7,w,c
  6824  002AE0  5A08               	subwfb	___aodiv@dividend+7,f,c
  6825  002AE2  8013               	bsf	___aodiv@quotient,0,c
  6826  002AE4                     l3426:
  6827  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  6828  002AE6  90D8               	bcf	status,0,c
  6829  002AE8  3210               	rrcf	___aodiv@divisor+7,f,c
  6830  002AEA  320F               	rrcf	___aodiv@divisor+6,f,c
  6831  002AEC  320E               	rrcf	___aodiv@divisor+5,f,c
  6832  002AEE  320D               	rrcf	___aodiv@divisor+4,f,c
  6833  002AF0  320C               	rrcf	___aodiv@divisor+3,f,c
  6834  002AF2  320B               	rrcf	___aodiv@divisor+2,f,c
  6835  002AF4  320A               	rrcf	___aodiv@divisor+1,f,c
  6836  002AF6  3209               	rrcf	___aodiv@divisor,f,c
  6837  002AF8  2E11               	decfsz	___aodiv@counter,f,c
  6838  002AFA  D7C7               	goto	u2960
  6839  002AFC                     l3430:
  6840  002AFC  FFFF               	dw	65535	; assembler added errata NOP
  6841  002AFE  5012               	movf	___aodiv@sign,w,c
  6842  002B00  B4D8               	btfsc	status,2,c
  6843  002B02  D010               	goto	l3434
  6844  002B04  1E1A               	comf	___aodiv@quotient+7,f,c
  6845  002B06  1E19               	comf	___aodiv@quotient+6,f,c
  6846  002B08  1E18               	comf	___aodiv@quotient+5,f,c
  6847  002B0A  1E17               	comf	___aodiv@quotient+4,f,c
  6848  002B0C  1E16               	comf	___aodiv@quotient+3,f,c
  6849  002B0E  1E15               	comf	___aodiv@quotient+2,f,c
  6850  002B10  1E14               	comf	___aodiv@quotient+1,f,c
  6851  002B12  6C13               	negf	___aodiv@quotient,c
  6852  002B14  0E00               	movlw	0
  6853  002B16  2214               	addwfc	___aodiv@quotient+1,f,c
  6854  002B18  2215               	addwfc	___aodiv@quotient+2,f,c
  6855  002B1A  2216               	addwfc	___aodiv@quotient+3,f,c
  6856  002B1C  2217               	addwfc	___aodiv@quotient+4,f,c
  6857  002B1E  2218               	addwfc	___aodiv@quotient+5,f,c
  6858  002B20  2219               	addwfc	___aodiv@quotient+6,f,c
  6859  002B22  221A               	addwfc	___aodiv@quotient+7,f,c
  6860  002B24                     l3434:
  6861  002B24  FFFF               	dw	65535	; assembler added errata NOP
  6862  002B26  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6863  002B2A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6864  002B2E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6865  002B32  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6866  002B36  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6867  002B3A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6868  002B3E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6869  002B42  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6870  002B46  0012               	return		;funcret
  6871  002B48  FFFF               	dw	65535	; errata NOP
  6872  002B4A                     __end_of___aodiv:
  6873                           	opt callstack 0
  6874                           
  6875 ;; *************** function _ctoa *****************
  6876 ;; Defined at:
  6877 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6880 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6881 ;;  c               1   29[COMRAM] unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  w               2   30[COMRAM] int 
  6884 ;;  l               2    0        int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  2   27[COMRAM] int 
  6887 ;; Registers used:
  6888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6894 ;;      Params:         3       0       0       0       0       0       0
  6895 ;;      Locals:         2       0       0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0
  6897 ;;      Totals:         5       0       0       0       0       0       0
  6898 ;;Total ram usage:        5 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    6
  6901 ;; This function calls:
  6902 ;;		_pad
  6903 ;; This function is called by:
  6904 ;;		_vfpfcnvrt
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text23
  6909  00368E                     __ptext23:
  6910                           	opt callstack 0
  6911  00368E                     _ctoa:
  6912                           	opt callstack 0
  6913  00368E  FFFF               	dw	65535	; assembler added errata NOP
  6914                           
  6915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6916                           
  6917                           ;incstack = 0
  6918  003690  0100               	movlb	0	; () banked
  6919  003692  5191               	movf	_width& (0+255),w,b
  6920  003694  1192               	iorwf	(_width+1)& (0+255),w,b
  6921  003696  A4D8               	btfss	status,2,c
  6922  003698  D005               	goto	l3528
  6923                           
  6924                           ; BSR set to: 0
  6925  00369A  C091  F01F         	movff	_width,ctoa@w
  6926  00369E  C092  F020         	movff	_width+1,ctoa@w+1
  6927  0036A2  D007               	goto	l3530
  6928  0036A4                     l3528:
  6929  0036A4  FFFF               	dw	65535	; assembler added errata NOP
  6930                           
  6931                           ; BSR set to: 0
  6932  0036A6  0EFF               	movlw	255
  6933  0036A8  2591               	addwf	_width& (0+255),w,b
  6934  0036AA  6E1F               	movwf	ctoa@w,c
  6935  0036AC  0EFF               	movlw	255
  6936  0036AE  2192               	addwfc	(_width+1)& (0+255),w,b
  6937  0036B0  6E20               	movwf	ctoa@w+1,c
  6938  0036B2                     l3530:
  6939  0036B2  FFFF               	dw	65535	; assembler added errata NOP
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6943  0036B4  C01E  F09B         	movff	ctoa@c,_dbuf
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6947  0036B8  0E00               	movlw	0
  6948  0036BA  6F9C               	movwf	(_dbuf+1)& (0+255),b
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6952  0036BC  C01C  F011         	movff	ctoa@fp,pad@fp
  6953  0036C0  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6954  0036C4  0E9B               	movlw	low _dbuf
  6955  0036C6  6E13               	movwf	pad@buf,c
  6956  0036C8  0E00               	movlw	high _dbuf
  6957  0036CA  6E14               	movwf	pad@buf+1,c
  6958  0036CC  C01F  F015         	movff	ctoa@w,pad@p
  6959  0036D0  C020  F016         	movff	ctoa@w+1,pad@p+1
  6960  0036D4  ECE3  F019         	call	_pad	;wreg free
  6961  0036D8  C011  F01C         	movff	?_pad,?_ctoa
  6962  0036DC  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6963  0036E0  0012               	return		;funcret
  6964  0036E2  FFFF               	dw	65535	; errata NOP
  6965  0036E4                     __end_of_ctoa:
  6966                           	opt callstack 0
  6967                           
  6968 ;; *************** function _pad *****************
  6969 ;; Defined at:
  6970 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6973 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6974 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6975 ;;		 -> dbuf(32), 
  6976 ;;  p               2   20[COMRAM] int 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  w               2   25[COMRAM] int 
  6979 ;;  i               2   23[COMRAM] int 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2   16[COMRAM] int 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6989 ;;      Params:         6       0       0       0       0       0       0
  6990 ;;      Locals:         4       0       0       0       0       0       0
  6991 ;;      Temps:          1       0       0       0       0       0       0
  6992 ;;      Totals:        11       0       0       0       0       0       0
  6993 ;;Total ram usage:       11 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    5
  6996 ;; This function calls:
  6997 ;;		_fputc
  6998 ;;		_fputs
  6999 ;;		_strlen
  7000 ;; This function is called by:
  7001 ;;		_ctoa
  7002 ;;		_dtoa
  7003 ;;		_otoa
  7004 ;;		_utoa
  7005 ;;		_xtoa
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text24
  7010  0033C6                     __ptext24:
  7011                           	opt callstack 0
  7012  0033C6                     _pad:
  7013                           	opt callstack 0
  7014  0033C6  FFFF               	dw	65535	; assembler added errata NOP
  7015                           
  7016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7017                           
  7018                           ;incstack = 0
  7019  0033C8  0100               	movlb	0	; () banked
  7020  0033CA  A195               	btfss	_flags& (0+255),0,b
  7021  0033CC  D00A               	goto	l3344
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7025  0033CE  C013  F00A         	movff	pad@buf,fputs@s
  7026  0033D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7027  0033D6  C011  F00C         	movff	pad@fp,fputs@fp
  7028  0033DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7029  0033DE  EC07  F01C         	call	_fputs	;wreg free
  7030  0033E2                     l3344:
  7031  0033E2  FFFF               	dw	65535	; assembler added errata NOP
  7032                           
  7033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7034  0033E4  BE16               	btfsc	pad@p+1,7,c
  7035  0033E6  D005               	goto	l3348
  7036  0033E8  C015  F01A         	movff	pad@p,pad@w
  7037  0033EC  C016  F01B         	movff	pad@p+1,pad@w+1
  7038  0033F0  D005               	goto	l366
  7039  0033F2                     l3348:
  7040  0033F2  FFFF               	dw	65535	; assembler added errata NOP
  7041  0033F4  0E00               	movlw	0
  7042  0033F6  6E1B               	movwf	pad@w+1,c
  7043  0033F8  0E00               	movlw	0
  7044  0033FA  6E1A               	movwf	pad@w,c
  7045  0033FC                     l366:
  7046  0033FC  FFFF               	dw	65535	; assembler added errata NOP
  7047                           
  7048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7049  0033FE  0E00               	movlw	0
  7050  003400  6E19               	movwf	pad@i+1,c
  7051  003402  0E00               	movlw	0
  7052  003404  6E18               	movwf	pad@i,c
  7053                           
  7054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7055  003406  D00D               	goto	l3354
  7056  003408                     l3350:
  7057  003408  FFFF               	dw	65535	; assembler added errata NOP
  7058                           
  7059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7060  00340A  0E00               	movlw	0
  7061  00340C  6E02               	movwf	fputc@c+1,c
  7062  00340E  0E20               	movlw	32
  7063  003410  6E01               	movwf	fputc@c,c
  7064  003412  C011  F003         	movff	pad@fp,fputc@fp
  7065  003416  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7066  00341A  EC8D  F019         	call	_fputc	;wreg free
  7067                           
  7068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7069  00341E  4A18               	infsnz	pad@i,f,c
  7070  003420  2A19               	incf	pad@i+1,f,c
  7071  003422                     l3354:
  7072  003422  FFFF               	dw	65535	; assembler added errata NOP
  7073                           
  7074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7075  003424  501A               	movf	pad@w,w,c
  7076  003426  5C18               	subwf	pad@i,w,c
  7077  003428  5019               	movf	pad@i+1,w,c
  7078  00342A  0A80               	xorlw	128
  7079  00342C  6E17               	movwf	??_pad& (0+255),c
  7080  00342E  501B               	movf	pad@w+1,w,c
  7081  003430  0A80               	xorlw	128
  7082  003432  5817               	subwfb	??_pad& (0+255),w,c
  7083  003434  A0D8               	btfss	status,0,c
  7084  003436  D7E8               	goto	l3350
  7085                           
  7086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7087  003438  0100               	movlb	0	; () banked
  7088  00343A  B195               	btfsc	_flags& (0+255),0,b
  7089  00343C  D00A               	goto	l3358
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7093  00343E  C013  F00A         	movff	pad@buf,fputs@s
  7094  003442  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7095  003446  C011  F00C         	movff	pad@fp,fputs@fp
  7096  00344A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7097  00344E  EC07  F01C         	call	_fputs	;wreg free
  7098  003452                     l3358:
  7099  003452  FFFF               	dw	65535	; assembler added errata NOP
  7100                           
  7101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7102  003454  C013  F001         	movff	pad@buf,strlen@s
  7103  003458  C014  F002         	movff	pad@buf+1,strlen@s+1
  7104  00345C  ECD6  F01C         	call	_strlen	;wreg free
  7105  003460  501A               	movf	pad@w,w,c
  7106  003462  2401               	addwf	?_strlen,w,c
  7107  003464  6E11               	movwf	?_pad,c
  7108  003466  501B               	movf	pad@w+1,w,c
  7109  003468  2002               	addwfc	?_strlen+1,w,c
  7110  00346A  6E12               	movwf	?_pad+1,c
  7111  00346C  0012               	return		;funcret
  7112  00346E  FFFF               	dw	65535	; errata NOP
  7113  003470                     __end_of_pad:
  7114                           	opt callstack 0
  7115                           
  7116 ;; *************** function _strlen *****************
  7117 ;; Defined at:
  7118 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7121 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7124 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  2    0[COMRAM] unsigned int 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7134 ;;      Params:         2       0       0       0       0       0       0
  7135 ;;      Locals:         2       0       0       0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0
  7137 ;;      Totals:         4       0       0       0       0       0       0
  7138 ;;Total ram usage:        4 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    2
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_pad
  7145 ;;		_stoa
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text25
  7150  0039AC                     __ptext25:
  7151                           	opt callstack 0
  7152  0039AC                     _strlen:
  7153                           	opt callstack 0
  7154  0039AC  FFFF               	dw	65535	; assembler added errata NOP
  7155                           
  7156                           ;incstack = 0
  7157  0039AE  C001  F003         	movff	strlen@s,strlen@a
  7158  0039B2  C002  F004         	movff	strlen@s+1,strlen@a+1
  7159  0039B6  D003               	goto	l3330
  7160  0039B8                     l3328:
  7161  0039B8  FFFF               	dw	65535	; assembler added errata NOP
  7162  0039BA  4A01               	infsnz	strlen@s,f,c
  7163  0039BC  2A02               	incf	strlen@s+1,f,c
  7164  0039BE                     l3330:
  7165  0039BE  FFFF               	dw	65535	; assembler added errata NOP
  7166  0039C0  C001  FFD9         	movff	strlen@s,fsr2l
  7167  0039C4  C002  FFDA         	movff	strlen@s+1,fsr2h
  7168  0039C8  50DF               	movf	indf2,w,c
  7169  0039CA  A4D8               	btfss	status,2,c
  7170  0039CC  D7F5               	goto	l3328
  7171  0039CE  5003               	movf	strlen@a,w,c
  7172  0039D0  5C01               	subwf	strlen@s,w,c
  7173  0039D2  6E01               	movwf	?_strlen,c
  7174  0039D4  5004               	movf	strlen@a+1,w,c
  7175  0039D6  5802               	subwfb	strlen@s+1,w,c
  7176  0039D8  6E02               	movwf	?_strlen+1,c
  7177  0039DA  0012               	return		;funcret
  7178  0039DC  FFFF               	dw	65535	; errata NOP
  7179  0039DE                     __end_of_strlen:
  7180                           	opt callstack 0
  7181                           
  7182 ;; *************** function _fputs *****************
  7183 ;; Defined at:
  7184 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7187 ;;		 -> dbuf(32), 
  7188 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7189 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  i               2   14[COMRAM] int 
  7192 ;;  c               1   13[COMRAM] unsigned char 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  2    9[COMRAM] int 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7202 ;;      Params:         4       0       0       0       0       0       0
  7203 ;;      Locals:         3       0       0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0
  7205 ;;      Totals:         7       0       0       0       0       0       0
  7206 ;;Total ram usage:        7 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    4
  7209 ;; This function calls:
  7210 ;;		_fputc
  7211 ;; This function is called by:
  7212 ;;		_pad
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text26
  7217  00380E                     __ptext26:
  7218                           	opt callstack 0
  7219  00380E                     _fputs:
  7220                           	opt callstack 0
  7221  00380E  FFFF               	dw	65535	; assembler added errata NOP
  7222                           
  7223                           ;incstack = 0
  7224  003810  0E00               	movlw	0
  7225  003812  6E10               	movwf	fputs@i+1,c
  7226  003814  0E00               	movlw	0
  7227  003816  6E0F               	movwf	fputs@i,c
  7228  003818  D00C               	goto	l3324
  7229  00381A                     l3320:
  7230  00381A  FFFF               	dw	65535	; assembler added errata NOP
  7231  00381C  C00E  F001         	movff	fputs@c,fputc@c
  7232  003820  6A02               	clrf	fputc@c+1,c
  7233  003822  C00C  F003         	movff	fputs@fp,fputc@fp
  7234  003826  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7235  00382A  EC8D  F019         	call	_fputc	;wreg free
  7236  00382E  4A0F               	infsnz	fputs@i,f,c
  7237  003830  2A10               	incf	fputs@i+1,f,c
  7238  003832                     l3324:
  7239  003832  FFFF               	dw	65535	; assembler added errata NOP
  7240  003834  500F               	movf	fputs@i,w,c
  7241  003836  240A               	addwf	fputs@s,w,c
  7242  003838  6ED9               	movwf	fsr2l,c
  7243  00383A  5010               	movf	fputs@i+1,w,c
  7244  00383C  200B               	addwfc	fputs@s+1,w,c
  7245  00383E  6EDA               	movwf	fsr2h,c
  7246  003840  50DF               	movf	indf2,w,c
  7247  003842  6E0E               	movwf	fputs@c,c
  7248  003844  500E               	movf	fputs@c,w,c
  7249  003846  B4D8               	btfsc	status,2,c
  7250  003848  0012               	return		;funcret
  7251  00384A  FFFF               	dw	65535	; assembler added errata NOP
  7252  00384C  D7E6               	goto	l3320
  7253  00384E  FFFF               	dw	65535	; errata NOP
  7254  003850                     __end_of_fputs:
  7255                           	opt callstack 0
  7256                           
  7257 ;; *************** function _fputc *****************
  7258 ;; Defined at:
  7259 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  c               2    0[COMRAM] int 
  7262 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7263 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;		None
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  2    0[COMRAM] int 
  7268 ;; Registers used:
  7269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7275 ;;      Params:         4       0       0       0       0       0       0
  7276 ;;      Locals:         0       0       0       0       0       0       0
  7277 ;;      Temps:          5       0       0       0       0       0       0
  7278 ;;      Totals:         9       0       0       0       0       0       0
  7279 ;;Total ram usage:        9 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    3
  7282 ;; This function calls:
  7283 ;;		_putch
  7284 ;; This function is called by:
  7285 ;;		_pad
  7286 ;;		_stoa
  7287 ;;		_vfpfcnvrt
  7288 ;;		_fputs
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text27
  7293  00331A                     __ptext27:
  7294                           	opt callstack 0
  7295  00331A                     _fputc:
  7296                           	opt callstack 0
  7297  00331A  FFFF               	dw	65535	; assembler added errata NOP
  7298                           
  7299                           ;incstack = 0
  7300  00331C  5003               	movf	fputc@fp,w,c
  7301  00331E  1004               	iorwf	fputc@fp+1,w,c
  7302  003320  B4D8               	btfsc	status,2,c
  7303  003322  D004               	goto	u2710
  7304  003324  5003               	movf	fputc@fp,w,c
  7305  003326  1004               	iorwf	fputc@fp+1,w,c
  7306  003328  A4D8               	btfss	status,2,c
  7307  00332A  D005               	goto	l3310
  7308  00332C                     u2710:
  7309  00332C  FFFF               	dw	65535	; assembler added errata NOP
  7310  00332E  5001               	movf	fputc@c,w,c
  7311  003330  ECB5  F01D         	call	_putch
  7312  003334  D045               	goto	l1334
  7313  003336                     l3310:
  7314  003336  FFFF               	dw	65535	; assembler added errata NOP
  7315  003338  EE20 F004          	lfsr	2,4
  7316  00333C  5003               	movf	fputc@fp,w,c
  7317  00333E  26D9               	addwf	fsr2l,f,c
  7318  003340  5004               	movf	fputc@fp+1,w,c
  7319  003342  22DA               	addwfc	fsr2h,f,c
  7320  003344  50DE               	movf	postinc2,w,c
  7321  003346  10DE               	iorwf	postinc2,w,c
  7322  003348  B4D8               	btfsc	status,2,c
  7323  00334A  D016               	goto	u2730
  7324  00334C  EE20 F004          	lfsr	2,4
  7325  003350  5003               	movf	fputc@fp,w,c
  7326  003352  26D9               	addwf	fsr2l,f,c
  7327  003354  5004               	movf	fputc@fp+1,w,c
  7328  003356  22DA               	addwfc	fsr2h,f,c
  7329  003358  EE10 F002          	lfsr	1,2
  7330  00335C  5003               	movf	fputc@fp,w,c
  7331  00335E  26E1               	addwf	fsr1l,f,c
  7332  003360  5004               	movf	fputc@fp+1,w,c
  7333  003362  22E2               	addwfc	fsr1h,f,c
  7334  003364  50DE               	movf	postinc2,w,c
  7335  003366  5CE6               	subwf	postinc1,w,c
  7336  003368  50E6               	movf	postinc1,w,c
  7337  00336A  0A80               	xorlw	128
  7338  00336C  6E09               	movwf	(??_fputc+4)& (0+255),c
  7339  00336E  50DE               	movf	postinc2,w,c
  7340  003370  0A80               	xorlw	128
  7341  003372  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7342  003374  B0D8               	btfsc	status,0,c
  7343  003376  D024               	goto	l1334
  7344  003378                     u2730:
  7345  003378  FFFF               	dw	65535	; assembler added errata NOP
  7346  00337A  EE20 F002          	lfsr	2,2
  7347  00337E  5003               	movf	fputc@fp,w,c
  7348  003380  26D9               	addwf	fsr2l,f,c
  7349  003382  5004               	movf	fputc@fp+1,w,c
  7350  003384  22DA               	addwfc	fsr2h,f,c
  7351  003386  CFDE F005          	movff	postinc2,??_fputc
  7352  00338A  CFDD F006          	movff	postdec2,??_fputc+1
  7353  00338E  C003  FFD9         	movff	fputc@fp,fsr2l
  7354  003392  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7355  003396  CFDE F007          	movff	postinc2,??_fputc+2
  7356  00339A  CFDD F008          	movff	postdec2,??_fputc+3
  7357  00339E  5005               	movf	??_fputc,w,c
  7358  0033A0  2407               	addwf	??_fputc+2,w,c
  7359  0033A2  6ED9               	movwf	fsr2l,c
  7360  0033A4  5006               	movf	??_fputc+1,w,c
  7361  0033A6  2008               	addwfc	??_fputc+3,w,c
  7362  0033A8  6EDA               	movwf	fsr2h,c
  7363  0033AA  C001  FFDF         	movff	fputc@c,indf2
  7364  0033AE  EE20 F002          	lfsr	2,2
  7365  0033B2  5003               	movf	fputc@fp,w,c
  7366  0033B4  26D9               	addwf	fsr2l,f,c
  7367  0033B6  5004               	movf	fputc@fp+1,w,c
  7368  0033B8  22DA               	addwfc	fsr2h,f,c
  7369  0033BA  2ADE               	incf	postinc2,f,c
  7370  0033BC  0E00               	movlw	0
  7371  0033BE  22DD               	addwfc	postdec2,f,c
  7372  0033C0                     l1334:
  7373  0033C0  FFFF               	dw	65535	; assembler added errata NOP
  7374  0033C2  0012               	return		;funcret
  7375  0033C4  FFFF               	dw	65535	; errata NOP
  7376  0033C6                     __end_of_fputc:
  7377                           	opt callstack 0
  7378                           
  7379 ;; *************** function _putch *****************
  7380 ;; Defined at:
  7381 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  c               1    wreg     unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  c               1    0[COMRAM] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7395 ;;      Params:         0       0       0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    2
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_fputc
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text28
  7410  003B6A                     __ptext28:
  7411                           	opt callstack 0
  7412  003B6A                     _putch:
  7413                           	opt callstack 0
  7414  003B6A  FFFF               	dw	65535	; assembler added errata NOP
  7415                           
  7416                           ;incstack = 0
  7417  003B6C  0012               	return		;funcret
  7418  003B6E  FFFF               	dw	65535	; errata NOP
  7419  003B70                     __end_of_putch:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function _atoi *****************
  7423 ;; Defined at:
  7424 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7427 ;;		 -> STR_2(3), STR_1(4), 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  n               2   20[COMRAM] int 
  7430 ;;  neg             2   13[COMRAM] int 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  2    7[COMRAM] int 
  7433 ;; Registers used:
  7434 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7440 ;;      Params:         2       0       0       0       0       0       0
  7441 ;;      Locals:         9       0       0       0       0       0       0
  7442 ;;      Temps:          4       0       0       0       0       0       0
  7443 ;;      Totals:        15       0       0       0       0       0       0
  7444 ;;Total ram usage:       15 bytes
  7445 ;; Hardware stack levels used:    1
  7446 ;; Hardware stack levels required when called:    3
  7447 ;; This function calls:
  7448 ;;		___wmul
  7449 ;;		_isdigit
  7450 ;;		_isspace
  7451 ;; This function is called by:
  7452 ;;		_vfpfcnvrt
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text29
  7457  002888                     __ptext29:
  7458                           	opt callstack 0
  7459  002888                     _atoi:
  7460                           	opt callstack 0
  7461  002888  FFFF               	dw	65535	; assembler added errata NOP
  7462                           
  7463                           ;incstack = 0
  7464  00288A  0E00               	movlw	0
  7465  00288C  6E16               	movwf	atoi@n+1,c
  7466  00288E  0E00               	movlw	0
  7467  002890  6E15               	movwf	atoi@n,c
  7468  002892  0E00               	movlw	0
  7469  002894  6E0F               	movwf	atoi@neg+1,c
  7470  002896  0E00               	movlw	0
  7471  002898  6E0E               	movwf	atoi@neg,c
  7472  00289A  D003               	goto	l3796
  7473  00289C                     l3794:
  7474  00289C  FFFF               	dw	65535	; assembler added errata NOP
  7475  00289E  4A08               	infsnz	atoi@s,f,c
  7476  0028A0  2A09               	incf	atoi@s+1,f,c
  7477  0028A2                     l3796:
  7478  0028A2  FFFF               	dw	65535	; assembler added errata NOP
  7479  0028A4  0E01               	movlw	1
  7480  0028A6  6E14               	movwf	_atoi$1723,c
  7481  0028A8  C008  FFF6         	movff	atoi@s,tblptrl
  7482  0028AC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7483  0028B0                     	if	0	;tblptru may be non-zero
  7484  0028B0                     	endif
  7485  0028B0                     	if	0	;tblptru may be non-zero
  7486  0028B0                     	endif
  7487  0028B0  0008               	tblrd		*
  7488  0028B2  FFFF               	dw	65535	; errata NOP
  7489  0028B4  50F5               	movf	tablat,w,c
  7490  0028B6  0A20               	xorlw	32
  7491  0028B8  B4D8               	btfsc	status,2,c
  7492  0028BA  D019               	goto	l3804
  7493  0028BC  0EF7               	movlw	247
  7494  0028BE  6E0A               	movwf	??_atoi& (0+255),c
  7495  0028C0  0EFF               	movlw	255
  7496  0028C2  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7497  0028C4  C008  FFF6         	movff	atoi@s,tblptrl
  7498  0028C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7499  0028CC                     	if	0	;tblptru may be non-zero
  7500  0028CC                     	endif
  7501  0028CC                     	if	0	;tblptru may be non-zero
  7502  0028CC                     	endif
  7503  0028CC  0008               	tblrd		*
  7504  0028CE  FFFF               	dw	65535	; errata NOP
  7505  0028D0  50F5               	movf	tablat,w,c
  7506  0028D2  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7507  0028D4  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7508  0028D6  500A               	movf	??_atoi,w,c
  7509  0028D8  260C               	addwf	??_atoi+2,f,c
  7510  0028DA  500B               	movf	??_atoi+1,w,c
  7511  0028DC  220D               	addwfc	??_atoi+3,f,c
  7512  0028DE  500D               	movf	??_atoi+3,w,c
  7513  0028E0  E104               	bnz	u3740
  7514  0028E2  0E05               	movlw	5
  7515  0028E4  5C0C               	subwf	??_atoi+2,w,c
  7516  0028E6  A0D8               	btfss	status,0,c
  7517  0028E8  D002               	goto	l3804
  7518  0028EA                     u3740:
  7519  0028EA  0E00               	movlw	0
  7520  0028EC  6E14               	movwf	_atoi$1723,c
  7521  0028EE                     l3804:
  7522  0028EE  FFFF               	dw	65535	; assembler added errata NOP
  7523  0028F0  C014  F010         	movff	_atoi$1723,_atoi$1722
  7524  0028F4  6A11               	clrf	_atoi$1722+1,c
  7525  0028F6  5010               	movf	_atoi$1722,w,c
  7526  0028F8  1011               	iorwf	_atoi$1722+1,w,c
  7527  0028FA  B4D8               	btfsc	status,2,c
  7528  0028FC  D00A               	goto	l3814
  7529  0028FE  D7CE               	goto	l3794
  7530  002900                     l3810:
  7531  002900  FFFF               	dw	65535	; assembler added errata NOP
  7532  002902  0E00               	movlw	0
  7533  002904  6E0F               	movwf	atoi@neg+1,c
  7534  002906  0E01               	movlw	1
  7535  002908  6E0E               	movwf	atoi@neg,c
  7536  00290A                     l3812:
  7537  00290A  FFFF               	dw	65535	; assembler added errata NOP
  7538  00290C  4A08               	infsnz	atoi@s,f,c
  7539  00290E  2A09               	incf	atoi@s+1,f,c
  7540  002910  D032               	goto	l3820
  7541  002912                     l3814:
  7542  002912  FFFF               	dw	65535	; assembler added errata NOP
  7543  002914  C008  FFF6         	movff	atoi@s,tblptrl
  7544  002918  C009  FFF7         	movff	atoi@s+1,tblptrh
  7545  00291C                     	if	0	;tblptru may be non-zero
  7546  00291C                     	endif
  7547  00291C                     	if	0	;tblptru may be non-zero
  7548  00291C                     	endif
  7549  00291C  0008               	tblrd		*
  7550  00291E  FFFF               	dw	65535	; errata NOP
  7551  002920  50F5               	movf	tablat,w,c
  7552  002922  6E0A               	movwf	??_atoi& (0+255),c
  7553  002924  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7554                           
  7555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7556                           ; Switch size 1, requested type "simple"
  7557                           ; Number of cases is 1, Range of values is 0 to 0
  7558                           ; switch strategies available:
  7559                           ; Name         Instructions Cycles
  7560                           ; simple_byte            4     3 (average)
  7561                           ;	Chosen strategy is simple_byte
  7562  002926  500B               	movf	??_atoi+1,w,c
  7563  002928  0A00               	xorlw	0	; case 0
  7564  00292A  A4D8               	btfss	status,2,c
  7565  00292C  D024               	goto	l3820
  7566                           
  7567                           ; Switch size 1, requested type "simple"
  7568                           ; Number of cases is 2, Range of values is 43 to 45
  7569                           ; switch strategies available:
  7570                           ; Name         Instructions Cycles
  7571                           ; simple_byte            7     4 (average)
  7572                           ;	Chosen strategy is simple_byte
  7573  00292E  500A               	movf	??_atoi,w,c
  7574  002930  0A2B               	xorlw	43	; case 43
  7575  002932  B4D8               	btfsc	status,2,c
  7576  002934  D7EA               	goto	l3812
  7577  002936  0A06               	xorlw	6	; case 45
  7578  002938  B4D8               	btfsc	status,2,c
  7579  00293A  D7E2               	goto	l3810
  7580  00293C  D01C               	goto	l3820
  7581  00293E                     l3816:
  7582  00293E  FFFF               	dw	65535	; assembler added errata NOP
  7583  002940  C015  F001         	movff	atoi@n,___wmul@multiplier
  7584  002944  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7585  002948  0E00               	movlw	0
  7586  00294A  6E04               	movwf	___wmul@multiplicand+1,c
  7587  00294C  0E0A               	movlw	10
  7588  00294E  6E03               	movwf	___wmul@multiplicand,c
  7589  002950  EC05  F01D         	call	___wmul	;wreg free
  7590  002954  C008  FFF6         	movff	atoi@s,tblptrl
  7591  002958  C009  FFF7         	movff	atoi@s+1,tblptrh
  7592  00295C                     	if	0	;tblptru may be non-zero
  7593  00295C                     	endif
  7594  00295C                     	if	0	;tblptru may be non-zero
  7595  00295C                     	endif
  7596  00295C  0008               	tblrd		*
  7597  00295E  FFFF               	dw	65535	; errata NOP
  7598  002960  50F5               	movf	tablat,w,c
  7599  002962  5E01               	subwf	?___wmul,f,c
  7600  002964  0E00               	movlw	0
  7601  002966  5A02               	subwfb	?___wmul+1,f,c
  7602  002968  0E30               	movlw	48
  7603  00296A  2401               	addwf	?___wmul,w,c
  7604  00296C  6E15               	movwf	atoi@n,c
  7605  00296E  0E00               	movlw	0
  7606  002970  2002               	addwfc	?___wmul+1,w,c
  7607  002972  6E16               	movwf	atoi@n+1,c
  7608  002974  D7CA               	goto	l3812
  7609  002976                     l3820:
  7610  002976  FFFF               	dw	65535	; assembler added errata NOP
  7611  002978  0ED0               	movlw	208
  7612  00297A  6E0A               	movwf	??_atoi& (0+255),c
  7613  00297C  0EFF               	movlw	255
  7614  00297E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7615  002980  C008  FFF6         	movff	atoi@s,tblptrl
  7616  002984  C009  FFF7         	movff	atoi@s+1,tblptrh
  7617  002988                     	if	0	;tblptru may be non-zero
  7618  002988                     	endif
  7619  002988                     	if	0	;tblptru may be non-zero
  7620  002988                     	endif
  7621  002988  0008               	tblrd		*
  7622  00298A  FFFF               	dw	65535	; errata NOP
  7623  00298C  50F5               	movf	tablat,w,c
  7624  00298E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7625  002990  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7626  002992  500A               	movf	??_atoi,w,c
  7627  002994  260C               	addwf	??_atoi+2,f,c
  7628  002996  500B               	movf	??_atoi+1,w,c
  7629  002998  220D               	addwfc	??_atoi+3,f,c
  7630  00299A  500D               	movf	??_atoi+3,w,c
  7631  00299C  E106               	bnz	u3760
  7632  00299E  0E0A               	movlw	10
  7633  0029A0  5C0C               	subwf	??_atoi+2,w,c
  7634  0029A2  B0D8               	btfsc	status,0,c
  7635  0029A4  D002               	goto	u3760
  7636  0029A6  0E01               	movlw	1
  7637  0029A8  D002               	goto	u3770
  7638  0029AA                     u3760:
  7639  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  7640  0029AC  0E00               	movlw	0
  7641  0029AE                     u3770:
  7642  0029AE  FFFF               	dw	65535	; assembler added errata NOP
  7643  0029B0  6E12               	movwf	_atoi$1724,c
  7644  0029B2  6A13               	clrf	_atoi$1724+1,c
  7645  0029B4  5012               	movf	_atoi$1724,w,c
  7646  0029B6  1013               	iorwf	_atoi$1724+1,w,c
  7647  0029B8  A4D8               	btfss	status,2,c
  7648  0029BA  D7C1               	goto	l3816
  7649  0029BC  500E               	movf	atoi@neg,w,c
  7650  0029BE  100F               	iorwf	atoi@neg+1,w,c
  7651  0029C0  A4D8               	btfss	status,2,c
  7652  0029C2  D00D               	goto	l1288
  7653  0029C4  C015  F00A         	movff	atoi@n,??_atoi
  7654  0029C8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7655  0029CC  1E0A               	comf	??_atoi,f,c
  7656  0029CE  1E0B               	comf	??_atoi+1,f,c
  7657  0029D0  4A0A               	infsnz	??_atoi,f,c
  7658  0029D2  2A0B               	incf	??_atoi+1,f,c
  7659  0029D4  C00A  F008         	movff	??_atoi,?_atoi
  7660  0029D8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7661  0029DC  D005               	goto	l1291
  7662  0029DE                     l1288:
  7663  0029DE  FFFF               	dw	65535	; assembler added errata NOP
  7664  0029E0  C015  F008         	movff	atoi@n,?_atoi
  7665  0029E4  C016  F009         	movff	atoi@n+1,?_atoi+1
  7666  0029E8                     l1291:
  7667  0029E8  FFFF               	dw	65535	; assembler added errata NOP
  7668  0029EA  0012               	return		;funcret
  7669  0029EC  FFFF               	dw	65535	; errata NOP
  7670  0029EE                     __end_of_atoi:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _isspace *****************
  7674 ;; Defined at:
  7675 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  c               2    0[COMRAM] int 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2    0[COMRAM] int 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7689 ;;      Params:         2       0       0       0       0       0       0
  7690 ;;      Locals:         1       0       0       0       0       0       0
  7691 ;;      Temps:          4       0       0       0       0       0       0
  7692 ;;      Totals:         7       0       0       0       0       0       0
  7693 ;;Total ram usage:        7 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    2
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_atoi
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text30
  7704  0037CA                     __ptext30:
  7705                           	opt callstack 0
  7706  0037CA                     _isspace:
  7707                           	opt callstack 0
  7708  0037CA  FFFF               	dw	65535	; assembler added errata NOP
  7709                           
  7710                           ;incstack = 0
  7711  0037CC  0E01               	movlw	1
  7712  0037CE  6E07               	movwf	_isspace$1759,c
  7713  0037D0  0E20               	movlw	32
  7714  0037D2  1801               	xorwf	isspace@c,w,c
  7715  0037D4  1002               	iorwf	isspace@c+1,w,c
  7716  0037D6  B4D8               	btfsc	status,2,c
  7717  0037D8  D014               	goto	l3520
  7718  0037DA  0EF7               	movlw	247
  7719  0037DC  6E03               	movwf	??_isspace& (0+255),c
  7720  0037DE  0EFF               	movlw	255
  7721  0037E0  6E04               	movwf	(??_isspace+1)& (0+255),c
  7722  0037E2  C001  F005         	movff	isspace@c,??_isspace+2
  7723  0037E6  C002  F006         	movff	isspace@c+1,??_isspace+3
  7724  0037EA  5003               	movf	??_isspace,w,c
  7725  0037EC  2605               	addwf	??_isspace+2,f,c
  7726  0037EE  5004               	movf	??_isspace+1,w,c
  7727  0037F0  2206               	addwfc	??_isspace+3,f,c
  7728  0037F2  5006               	movf	??_isspace+3,w,c
  7729  0037F4  E104               	bnz	u3130
  7730  0037F6  0E05               	movlw	5
  7731  0037F8  5C05               	subwf	??_isspace+2,w,c
  7732  0037FA  A0D8               	btfss	status,0,c
  7733  0037FC  D002               	goto	l3520
  7734  0037FE                     u3130:
  7735  0037FE  0E00               	movlw	0
  7736  003800  6E07               	movwf	_isspace$1759,c
  7737  003802                     l3520:
  7738  003802  FFFF               	dw	65535	; assembler added errata NOP
  7739  003804  C007  F001         	movff	_isspace$1759,?_isspace
  7740  003808  6A02               	clrf	?_isspace+1,c
  7741  00380A  0012               	return		;funcret
  7742  00380C  FFFF               	dw	65535	; errata NOP
  7743  00380E                     __end_of_isspace:
  7744                           	opt callstack 0
  7745                           
  7746 ;; *************** function _isdigit *****************
  7747 ;; Defined at:
  7748 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  c               2    0[COMRAM] int 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  2    0[COMRAM] int 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7762 ;;      Params:         2       0       0       0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0
  7764 ;;      Temps:          4       0       0       0       0       0       0
  7765 ;;      Totals:         6       0       0       0       0       0       0
  7766 ;;Total ram usage:        6 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    2
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_vfpfcnvrt
  7773 ;;		_atoi
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text31
  7778  003974                     __ptext31:
  7779                           	opt callstack 0
  7780  003974                     _isdigit:
  7781                           	opt callstack 0
  7782  003974  FFFF               	dw	65535	; assembler added errata NOP
  7783                           
  7784                           ;incstack = 0
  7785  003976  0ED0               	movlw	208
  7786  003978  6E03               	movwf	??_isdigit& (0+255),c
  7787  00397A  0EFF               	movlw	255
  7788  00397C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7789  00397E  C001  F005         	movff	isdigit@c,??_isdigit+2
  7790  003982  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7791  003986  5003               	movf	??_isdigit,w,c
  7792  003988  2605               	addwf	??_isdigit+2,f,c
  7793  00398A  5004               	movf	??_isdigit+1,w,c
  7794  00398C  2206               	addwfc	??_isdigit+3,f,c
  7795  00398E  5006               	movf	??_isdigit+3,w,c
  7796  003990  E106               	bnz	u2900
  7797  003992  0E0A               	movlw	10
  7798  003994  5C05               	subwf	??_isdigit+2,w,c
  7799  003996  B0D8               	btfsc	status,0,c
  7800  003998  D002               	goto	u2900
  7801  00399A  0E01               	movlw	1
  7802  00399C  D002               	goto	u2910
  7803  00399E                     u2900:
  7804  00399E  FFFF               	dw	65535	; assembler added errata NOP
  7805  0039A0  0E00               	movlw	0
  7806  0039A2                     u2910:
  7807  0039A2  FFFF               	dw	65535	; assembler added errata NOP
  7808  0039A4  6E01               	movwf	?_isdigit,c
  7809  0039A6  6A02               	clrf	?_isdigit+1,c
  7810  0039A8  0012               	return		;funcret
  7811  0039AA  FFFF               	dw	65535	; errata NOP
  7812  0039AC                     __end_of_isdigit:
  7813                           	opt callstack 0
  7814                           
  7815 ;; *************** function ___wmul *****************
  7816 ;; Defined at:
  7817 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  multiplier      2    0[COMRAM] unsigned int 
  7820 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  product         2    4[COMRAM] unsigned int 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2    0[COMRAM] unsigned int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0, prodl, prodh
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7832 ;;      Params:         4       0       0       0       0       0       0
  7833 ;;      Locals:         2       0       0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0
  7835 ;;      Totals:         6       0       0       0       0       0       0
  7836 ;;Total ram usage:        6 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    2
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_atoi
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text32
  7847  003A0A                     __ptext32:
  7848                           	opt callstack 0
  7849  003A0A                     ___wmul:
  7850                           	opt callstack 0
  7851  003A0A  FFFF               	dw	65535	; assembler added errata NOP
  7852                           
  7853                           ;incstack = 0
  7854  003A0C  5001               	movf	___wmul@multiplier,w,c
  7855  003A0E  0203               	mulwf	___wmul@multiplicand,c
  7856  003A10  CFF3 F005          	movff	prodl,___wmul@product
  7857  003A14  CFF4 F006          	movff	prodh,___wmul@product+1
  7858  003A18  5001               	movf	___wmul@multiplier,w,c
  7859  003A1A  0204               	mulwf	___wmul@multiplicand+1,c
  7860  003A1C  50F3               	movf	prodl,w,c
  7861  003A1E  2606               	addwf	___wmul@product+1,f,c
  7862  003A20  5002               	movf	___wmul@multiplier+1,w,c
  7863  003A22  0203               	mulwf	___wmul@multiplicand,c
  7864  003A24  50F3               	movf	prodl,w,c
  7865  003A26  2606               	addwf	___wmul@product+1,f,c
  7866  003A28  C005  F001         	movff	___wmul@product,?___wmul
  7867  003A2C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7868  003A30  0012               	return		;funcret
  7869  003A32  FFFF               	dw	65535	; errata NOP
  7870  003A34                     __end_of___wmul:
  7871                           	opt callstack 0
  7872                           
  7873 ;; *************** function _getchar *****************
  7874 ;; Defined at:
  7875 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;		None
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  2   26[None  ] int 
  7882 ;; Registers used:
  7883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7889 ;;      Params:         0       0       0       0       0       0       0
  7890 ;;      Locals:         0       0       0       0       0       0       0
  7891 ;;      Temps:          0       0       0       0       0       0       0
  7892 ;;      Totals:         0       0       0       0       0       0       0
  7893 ;;Total ram usage:        0 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    4
  7896 ;; This function calls:
  7897 ;;		_fgetc
  7898 ;; This function is called by:
  7899 ;;		_int_to_char
  7900 ;;		_float_to_char
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text33
  7905  003B28                     __ptext33:
  7906                           	opt callstack 0
  7907  003B28                     _getchar:
  7908                           	opt callstack 0
  7909  003B28  FFFF               	dw	65535	; assembler added errata NOP
  7910                           
  7911                           ;	Return value of _getchar is never used
  7912                           
  7913                           ;incstack = 0
  7914  003B2A  0E00               	movlw	0
  7915  003B2C  6E03               	movwf	fgetc@fp,c
  7916  003B2E  0E00               	movlw	0
  7917  003B30  6E04               	movwf	fgetc@fp+1,c
  7918  003B32  EC38  F01A         	call	_fgetc	;wreg free
  7919  003B36  0012               	return		;funcret
  7920  003B38  FFFF               	dw	65535	; errata NOP
  7921  003B3A                     __end_of_getchar:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function _fgetc *****************
  7925 ;; Defined at:
  7926 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7929 ;;		 -> NULL(0), 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  c               2    9[COMRAM] int 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  2    2[COMRAM] int 
  7934 ;; Registers used:
  7935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7941 ;;      Params:         2       0       0       0       0       0       0
  7942 ;;      Locals:         2       0       0       0       0       0       0
  7943 ;;      Temps:          5       0       0       0       0       0       0
  7944 ;;      Totals:         9       0       0       0       0       0       0
  7945 ;;Total ram usage:        9 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    3
  7948 ;; This function calls:
  7949 ;;		_getch
  7950 ;; This function is called by:
  7951 ;;		_getchar
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text34
  7956  003470                     __ptext34:
  7957                           	opt callstack 0
  7958  003470                     _fgetc:
  7959                           	opt callstack 0
  7960  003470  FFFF               	dw	65535	; assembler added errata NOP
  7961                           
  7962                           ;incstack = 0
  7963  003472  5003               	movf	fgetc@fp,w,c
  7964  003474  1004               	iorwf	fgetc@fp+1,w,c
  7965  003476  A4D8               	btfss	status,2,c
  7966  003478  D012               	goto	l4456
  7967  00347A  507E               	movf	_ungetcnt,w,c
  7968  00347C  B4D8               	btfsc	status,2,c
  7969  00347E  D007               	goto	l4454
  7970  003480  0E00               	movlw	0
  7971  003482  6E0B               	movwf	fgetc@c+1,c
  7972  003484  0E00               	movlw	0
  7973  003486  6E0A               	movwf	fgetc@c,c
  7974  003488  0E00               	movlw	0
  7975  00348A  6E7E               	movwf	_ungetcnt,c
  7976  00348C  D02F               	goto	l4458
  7977  00348E                     l4454:
  7978  00348E  FFFF               	dw	65535	; assembler added errata NOP
  7979  003490  ECA4  F01D         	call	_getch	;wreg free
  7980  003494  C001  F00A         	movff	?_getch,fgetc@c
  7981  003498  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7982  00349C  D027               	goto	l4458
  7983  00349E                     l4456:
  7984  00349E  FFFF               	dw	65535	; assembler added errata NOP
  7985  0034A0  EE20 F002          	lfsr	2,2
  7986  0034A4  5003               	movf	fgetc@fp,w,c
  7987  0034A6  26D9               	addwf	fsr2l,f,c
  7988  0034A8  5004               	movf	fgetc@fp+1,w,c
  7989  0034AA  22DA               	addwfc	fsr2h,f,c
  7990  0034AC  CFDE F005          	movff	postinc2,??_fgetc
  7991  0034B0  CFDD F006          	movff	postdec2,??_fgetc+1
  7992  0034B4  C003  FFD9         	movff	fgetc@fp,fsr2l
  7993  0034B8  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7994  0034BC  CFDE F007          	movff	postinc2,??_fgetc+2
  7995  0034C0  CFDD F008          	movff	postdec2,??_fgetc+3
  7996  0034C4  5005               	movf	??_fgetc,w,c
  7997  0034C6  2407               	addwf	??_fgetc+2,w,c
  7998  0034C8  6ED9               	movwf	fsr2l,c
  7999  0034CA  5006               	movf	??_fgetc+1,w,c
  8000  0034CC  2008               	addwfc	??_fgetc+3,w,c
  8001  0034CE  6EDA               	movwf	fsr2h,c
  8002  0034D0  50DF               	movf	indf2,w,c
  8003  0034D2  6E09               	movwf	(??_fgetc+4)& (0+255),c
  8004  0034D4  5009               	movf	??_fgetc+4,w,c
  8005  0034D6  6E0A               	movwf	fgetc@c,c
  8006  0034D8  6A0B               	clrf	fgetc@c+1,c
  8007  0034DA  EE20 F002          	lfsr	2,2
  8008  0034DE  5003               	movf	fgetc@fp,w,c
  8009  0034E0  26D9               	addwf	fsr2l,f,c
  8010  0034E2  5004               	movf	fgetc@fp+1,w,c
  8011  0034E4  22DA               	addwfc	fsr2h,f,c
  8012  0034E6  2ADE               	incf	postinc2,f,c
  8013  0034E8  0E00               	movlw	0
  8014  0034EA  22DD               	addwfc	postdec2,f,c
  8015  0034EC                     l4458:
  8016  0034EC  FFFF               	dw	65535	; assembler added errata NOP
  8017  0034EE  C00A  F003         	movff	fgetc@c,?_fgetc
  8018  0034F2  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  8019  0034F6  0012               	return		;funcret
  8020  0034F8  FFFF               	dw	65535	; errata NOP
  8021  0034FA                     __end_of_fgetc:
  8022                           	opt callstack 0
  8023                           
  8024 ;; *************** function _getch *****************
  8025 ;; Defined at:
  8026 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  2    0[COMRAM] int 
  8033 ;; Registers used:
  8034 ;;		None
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8040 ;;      Params:         2       0       0       0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0
  8043 ;;      Totals:         2       0       0       0       0       0       0
  8044 ;;Total ram usage:        2 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    2
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_fgetc
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text35
  8055  003B48                     __ptext35:
  8056                           	opt callstack 0
  8057  003B48                     _getch:
  8058                           	opt callstack 0
  8059  003B48  FFFF               	dw	65535	; assembler added errata NOP
  8060                           
  8061                           ;incstack = 0
  8062  003B4A  6801               	setf	?_getch,c
  8063  003B4C  6802               	setf	?_getch+1,c
  8064  003B4E  0012               	return		;funcret
  8065  003B50  FFFF               	dw	65535	; errata NOP
  8066  003B52                     __end_of_getch:
  8067                           	opt callstack 0
  8068                           
  8069 ;; *************** function _initialize_TX *****************
  8070 ;; Defined at:
  8071 ;;		line 23 in file "serial.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8085 ;;      Params:         0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    2
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text36
  8100  003AD8                     __ptext36:
  8101                           	opt callstack 0
  8102  003AD8                     _initialize_TX:
  8103                           	opt callstack 0
  8104  003AD8  FFFF               	dw	65535	; assembler added errata NOP
  8105                           
  8106                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  8107                           
  8108                           ;incstack = 0
  8109  003ADA  8CAC               	bsf	4012,6,c	;volatile
  8110                           
  8111                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  8112  003ADC  8AAC               	bsf	4012,5,c	;volatile
  8113                           
  8114                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  8115  003ADE  98AC               	bcf	4012,4,c	;volatile
  8116                           
  8117                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  8118  003AE0  94AC               	bcf	4012,2,c	;volatile
  8119                           
  8120                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  8121  003AE2  80AC               	bsf	4012,0,c	;volatile
  8122                           
  8123                           ;serial.c: 29:   SPBRG = 25;
  8124  003AE4  0E19               	movlw	25
  8125  003AE6  6EAF               	movwf	4015,c	;volatile
  8126  003AE8  0012               	return		;funcret
  8127  003AEA  FFFF               	dw	65535	; errata NOP
  8128  003AEC                     __end_of_initialize_TX:
  8129                           	opt callstack 0
  8130                           
  8131 ;; *************** function _initialize_RX *****************
  8132 ;; Defined at:
  8133 ;;		line 32 in file "serial.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;		None
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8147 ;;      Params:         0       0       0       0       0       0       0
  8148 ;;      Locals:         0       0       0       0       0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0       0
  8150 ;;      Totals:         0       0       0       0       0       0       0
  8151 ;;Total ram usage:        0 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    2
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_main
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text37
  8162  003AEC                     __ptext37:
  8163                           	opt callstack 0
  8164  003AEC                     _initialize_RX:
  8165                           	opt callstack 0
  8166  003AEC  FFFF               	dw	65535	; assembler added errata NOP
  8167                           
  8168                           ;serial.c: 33:   RCSTA = 0x00;
  8169                           
  8170                           ;incstack = 0
  8171  003AEE  0E00               	movlw	0
  8172  003AF0  6EAB               	movwf	4011,c	;volatile
  8173                           
  8174                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  8175  003AF2  8EAB               	bsf	4011,7,c	;volatile
  8176                           
  8177                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  8178  003AF4  8CAB               	bsf	4011,6,c	;volatile
  8179                           
  8180                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  8181  003AF6  88AB               	bsf	4011,4,c	;volatile
  8182                           
  8183                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  8184  003AF8  96AB               	bcf	4011,3,c	;volatile
  8185                           
  8186                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  8187  003AFA  80AB               	bsf	4011,0,c	;volatile
  8188  003AFC  0012               	return		;funcret
  8189  003AFE  FFFF               	dw	65535	; errata NOP
  8190  003B00                     __end_of_initialize_RX:
  8191                           	opt callstack 0
  8192                           
  8193 ;; *************** function _initialize_PWM *****************
  8194 ;; Defined at:
  8195 ;;		line 5 in file "pwm.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  freq            2    0[COMRAM] int 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8209 ;;      Params:         2       0       0       0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0
  8212 ;;      Totals:         2       0       0       0       0       0       0
  8213 ;;Total ram usage:        2 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    2
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_main
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text38
  8224  003AC0                     __ptext38:
  8225                           	opt callstack 0
  8226  003AC0                     _initialize_PWM:
  8227                           	opt callstack 0
  8228  003AC0  FFFF               	dw	65535	; assembler added errata NOP
  8229                           
  8230                           ;pwm.c: 6:   T2CON &= ~(0x04);
  8231                           
  8232                           ;incstack = 0
  8233  003AC2  94CA               	bcf	4042,2,c	;volatile
  8234                           
  8235                           ;pwm.c: 7:   PR2 = 0xFF;
  8236  003AC4  68CB               	setf	4043,c	;volatile
  8237                           
  8238                           ;pwm.c: 8:   CCPR1L = 0xAA;
  8239  003AC6  0EAA               	movlw	170
  8240  003AC8  6EBE               	movwf	4030,c	;volatile
  8241                           
  8242                           ;pwm.c: 9:   CCP1CON |= 0x00;
  8243  003ACA  50BD               	movf	4029,w,c	;volatile
  8244                           
  8245                           ;pwm.c: 10:   T2CON = 0x07;
  8246  003ACC  0E07               	movlw	7
  8247  003ACE  6ECA               	movwf	4042,c	;volatile
  8248                           
  8249                           ;pwm.c: 11:   CCP1CON |= 0x0C;
  8250  003AD0  0E0C               	movlw	12
  8251  003AD2  12BD               	iorwf	4029,f,c	;volatile
  8252  003AD4  0012               	return		;funcret
  8253  003AD6  FFFF               	dw	65535	; errata NOP
  8254  003AD8                     __end_of_initialize_PWM:
  8255                           	opt callstack 0
  8256                           
  8257 ;; *************** function _get_temp *****************
  8258 ;; Defined at:
  8259 ;;		line 10 in file "temp_adc.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  temp            4   55[COMRAM] float 
  8264 ;;  real_voltage    4   51[COMRAM] float 
  8265 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  4   47[COMRAM] float 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8275 ;;      Params:         4       0       0       0       0       0       0
  8276 ;;      Locals:        10       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0
  8278 ;;      Totals:        14       0       0       0       0       0       0
  8279 ;;Total ram usage:       14 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    4
  8282 ;; This function calls:
  8283 ;;		_ADC_Init
  8284 ;;		_ADC_Read
  8285 ;;		___flmul
  8286 ;;		___flsub
  8287 ;;		___xxtofl
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text39
  8294  0030D2                     __ptext39:
  8295                           	opt callstack 0
  8296  0030D2                     _get_temp:
  8297                           	opt callstack 0
  8298  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  8299                           
  8300                           ;temp_adc.c: 11:   ADC_Init();
  8301                           
  8302                           ;incstack = 0
  8303  0030D4  EC9D  F01D         	call	_ADC_Init	;wreg free
  8304                           
  8305                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  8306  0030D8  90C1               	bcf	4033,0,c	;volatile
  8307                           
  8308                           ;temp_adc.c: 13:   TRISA |= 0x01;
  8309  0030DA  8092               	bsf	3986,0,c	;volatile
  8310                           
  8311                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  8312  0030DC  0E00               	movlw	0
  8313  0030DE  EC72  F01B         	call	_ADC_Read
  8314  0030E2  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  8315  0030E6  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  8316                           
  8317                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  8318  0030EA  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  8319  0030EE  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  8320  0030F2  6A03               	clrf	___xxtofl@val+2,c
  8321  0030F4  6A04               	clrf	___xxtofl@val+3,c
  8322  0030F6  0E00               	movlw	0
  8323  0030F8  ECA5  F015         	call	___xxtofl
  8324  0030FC  C001  F00F         	movff	?___xxtofl,___flmul@b
  8325  003100  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8326  003104  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8327  003108  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8328  00310C  0E9F               	movlw	159
  8329  00310E  6E13               	movwf	___flmul@a,c
  8330  003110  0EAB               	movlw	171
  8331  003112  6E14               	movwf	___flmul@a+1,c
  8332  003114  0EAD               	movlw	173
  8333  003116  6E15               	movwf	___flmul@a+2,c
  8334  003118  0E3B               	movlw	59
  8335  00311A  6E16               	movwf	___flmul@a+3,c
  8336  00311C  ECFC  F00B         	call	___flmul	;wreg free
  8337  003120  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  8338  003124  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  8339  003128  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  8340  00312C  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  8341                           
  8342                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  8343  003130  0E00               	movlw	0
  8344  003132  6E28               	movwf	___flsub@b,c
  8345  003134  0E00               	movlw	0
  8346  003136  6E29               	movwf	___flsub@b+1,c
  8347  003138  0E48               	movlw	72
  8348  00313A  6E2A               	movwf	___flsub@b+2,c
  8349  00313C  0E43               	movlw	67
  8350  00313E  6E2B               	movwf	___flsub@b+3,c
  8351  003140  0E00               	movlw	0
  8352  003142  6E13               	movwf	___flmul@a,c
  8353  003144  0E00               	movlw	0
  8354  003146  6E14               	movwf	___flmul@a+1,c
  8355  003148  0E0C               	movlw	12
  8356  00314A  6E15               	movwf	___flmul@a+2,c
  8357  00314C  0E42               	movlw	66
  8358  00314E  6E16               	movwf	___flmul@a+3,c
  8359  003150  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  8360  003154  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  8361  003158  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  8362  00315C  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  8363  003160  ECFC  F00B         	call	___flmul	;wreg free
  8364  003164  C00F  F02C         	movff	?___flmul,___flsub@a
  8365  003168  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  8366  00316C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  8367  003170  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  8368  003174  EC9C  F01B         	call	___flsub	;wreg free
  8369  003178  C028  F038         	movff	?___flsub,get_temp@temp
  8370  00317C  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  8371  003180  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  8372  003184  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  8373                           
  8374                           ;temp_adc.c: 18:   return temp;
  8375  003188  C038  F030         	movff	get_temp@temp,?_get_temp
  8376  00318C  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  8377  003190  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  8378  003194  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  8379  003198  0012               	return		;funcret
  8380  00319A  FFFF               	dw	65535	; errata NOP
  8381  00319C                     __end_of_get_temp:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function ___xxtofl *****************
  8385 ;; Defined at:
  8386 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  sign            1    wreg     unsigned char 
  8389 ;;  val             4    0[COMRAM] long 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  sign            1    8[COMRAM] unsigned char 
  8392 ;;  arg             4   10[COMRAM] unsigned long 
  8393 ;;  exp             1    9[COMRAM] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  4    0[COMRAM] unsigned char 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8403 ;;      Params:         4       0       0       0       0       0       0
  8404 ;;      Locals:         6       0       0       0       0       0       0
  8405 ;;      Temps:          4       0       0       0       0       0       0
  8406 ;;      Totals:        14       0       0       0       0       0       0
  8407 ;;Total ram usage:       14 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    2
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_get_temp
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text40
  8418  002B4A                     __ptext40:
  8419                           	opt callstack 0
  8420  002B4A                     ___xxtofl:
  8421                           	opt callstack 0
  8422  002B4A  FFFF               	dw	65535	; assembler added errata NOP
  8423                           
  8424                           ;incstack = 0
  8425                           ;___xxtofl@sign stored from wreg
  8426  002B4C  6E09               	movwf	___xxtofl@sign,c
  8427  002B4E  5009               	movf	___xxtofl@sign,w,c
  8428  002B50  A4D8               	btfss	status,2,c
  8429  002B52  AE04               	btfss	___xxtofl@val+3,7,c
  8430  002B54  D01A               	goto	l1237
  8431  002B56  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8432  002B5A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8433  002B5E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8434  002B62  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8435  002B66  1E05               	comf	??___xxtofl,f,c
  8436  002B68  1E06               	comf	??___xxtofl+1,f,c
  8437  002B6A  1E07               	comf	??___xxtofl+2,f,c
  8438  002B6C  1E08               	comf	??___xxtofl+3,f,c
  8439  002B6E  2A05               	incf	??___xxtofl,f,c
  8440  002B70  0E00               	movlw	0
  8441  002B72  2206               	addwfc	??___xxtofl+1,f,c
  8442  002B74  2207               	addwfc	??___xxtofl+2,f,c
  8443  002B76  2208               	addwfc	??___xxtofl+3,f,c
  8444  002B78  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8445  002B7C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8446  002B80  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8447  002B84  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8448  002B88  D009               	goto	l4666
  8449  002B8A                     l1237:
  8450  002B8A  FFFF               	dw	65535	; assembler added errata NOP
  8451  002B8C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8452  002B90  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8453  002B94  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8454  002B98  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8455  002B9C                     l4666:
  8456  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  8457  002B9E  5001               	movf	___xxtofl@val,w,c
  8458  002BA0  1002               	iorwf	___xxtofl@val+1,w,c
  8459  002BA2  1003               	iorwf	___xxtofl@val+2,w,c
  8460  002BA4  1004               	iorwf	___xxtofl@val+3,w,c
  8461  002BA6  A4D8               	btfss	status,2,c
  8462  002BA8  D009               	goto	l4672
  8463  002BAA  0E00               	movlw	0
  8464  002BAC  6E01               	movwf	?___xxtofl,c
  8465  002BAE  0E00               	movlw	0
  8466  002BB0  6E02               	movwf	?___xxtofl+1,c
  8467  002BB2  0E00               	movlw	0
  8468  002BB4  6E03               	movwf	?___xxtofl+2,c
  8469  002BB6  0E00               	movlw	0
  8470  002BB8  6E04               	movwf	?___xxtofl+3,c
  8471  002BBA  D072               	goto	l1240
  8472  002BBC                     l4672:
  8473  002BBC  FFFF               	dw	65535	; assembler added errata NOP
  8474  002BBE  0E96               	movlw	150
  8475  002BC0  6E0A               	movwf	___xxtofl@exp,c
  8476  002BC2  D007               	goto	l4676
  8477  002BC4                     l4674:
  8478  002BC4  FFFF               	dw	65535	; assembler added errata NOP
  8479  002BC6  2A0A               	incf	___xxtofl@exp,f,c
  8480  002BC8  90D8               	bcf	status,0,c
  8481  002BCA  320E               	rrcf	___xxtofl@arg+3,f,c
  8482  002BCC  320D               	rrcf	___xxtofl@arg+2,f,c
  8483  002BCE  320C               	rrcf	___xxtofl@arg+1,f,c
  8484  002BD0  320B               	rrcf	___xxtofl@arg,f,c
  8485  002BD2                     l4676:
  8486  002BD2  FFFF               	dw	65535	; assembler added errata NOP
  8487  002BD4  0E00               	movlw	0
  8488  002BD6  140B               	andwf	___xxtofl@arg,w,c
  8489  002BD8  6E05               	movwf	??___xxtofl& (0+255),c
  8490  002BDA  0E00               	movlw	0
  8491  002BDC  140C               	andwf	___xxtofl@arg+1,w,c
  8492  002BDE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8493  002BE0  0E00               	movlw	0
  8494  002BE2  140D               	andwf	___xxtofl@arg+2,w,c
  8495  002BE4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8496  002BE6  0EFE               	movlw	254
  8497  002BE8  140E               	andwf	___xxtofl@arg+3,w,c
  8498  002BEA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8499  002BEC  5005               	movf	??___xxtofl,w,c
  8500  002BEE  1006               	iorwf	??___xxtofl+1,w,c
  8501  002BF0  1007               	iorwf	??___xxtofl+2,w,c
  8502  002BF2  1008               	iorwf	??___xxtofl+3,w,c
  8503  002BF4  B4D8               	btfsc	status,2,c
  8504  002BF6  D00E               	goto	l1244
  8505  002BF8  D7E5               	goto	l4674
  8506  002BFA                     l4678:
  8507  002BFA  FFFF               	dw	65535	; assembler added errata NOP
  8508  002BFC  2A0A               	incf	___xxtofl@exp,f,c
  8509  002BFE  0E01               	movlw	1
  8510  002C00  260B               	addwf	___xxtofl@arg,f,c
  8511  002C02  0E00               	movlw	0
  8512  002C04  220C               	addwfc	___xxtofl@arg+1,f,c
  8513  002C06  220D               	addwfc	___xxtofl@arg+2,f,c
  8514  002C08  220E               	addwfc	___xxtofl@arg+3,f,c
  8515  002C0A  90D8               	bcf	status,0,c
  8516  002C0C  320E               	rrcf	___xxtofl@arg+3,f,c
  8517  002C0E  320D               	rrcf	___xxtofl@arg+2,f,c
  8518  002C10  320C               	rrcf	___xxtofl@arg+1,f,c
  8519  002C12  320B               	rrcf	___xxtofl@arg,f,c
  8520  002C14                     l1244:
  8521  002C14  FFFF               	dw	65535	; assembler added errata NOP
  8522  002C16  0E00               	movlw	0
  8523  002C18  140B               	andwf	___xxtofl@arg,w,c
  8524  002C1A  6E05               	movwf	??___xxtofl& (0+255),c
  8525  002C1C  0E00               	movlw	0
  8526  002C1E  140C               	andwf	___xxtofl@arg+1,w,c
  8527  002C20  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8528  002C22  0E00               	movlw	0
  8529  002C24  140D               	andwf	___xxtofl@arg+2,w,c
  8530  002C26  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8531  002C28  0EFF               	movlw	255
  8532  002C2A  140E               	andwf	___xxtofl@arg+3,w,c
  8533  002C2C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8534  002C2E  5005               	movf	??___xxtofl,w,c
  8535  002C30  1006               	iorwf	??___xxtofl+1,w,c
  8536  002C32  1007               	iorwf	??___xxtofl+2,w,c
  8537  002C34  1008               	iorwf	??___xxtofl+3,w,c
  8538  002C36  B4D8               	btfsc	status,2,c
  8539  002C38  D008               	goto	l4686
  8540  002C3A  D7DF               	goto	l4678
  8541  002C3C                     l4684:
  8542  002C3C  FFFF               	dw	65535	; assembler added errata NOP
  8543  002C3E  060A               	decf	___xxtofl@exp,f,c
  8544  002C40  90D8               	bcf	status,0,c
  8545  002C42  360B               	rlcf	___xxtofl@arg,f,c
  8546  002C44  360C               	rlcf	___xxtofl@arg+1,f,c
  8547  002C46  360D               	rlcf	___xxtofl@arg+2,f,c
  8548  002C48  360E               	rlcf	___xxtofl@arg+3,f,c
  8549  002C4A                     l4686:
  8550  002C4A  FFFF               	dw	65535	; assembler added errata NOP
  8551  002C4C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8552  002C4E  D003               	goto	u5110
  8553  002C50  0E02               	movlw	2
  8554  002C52  600A               	cpfslt	___xxtofl@exp,c
  8555  002C54  D7F3               	goto	l4684
  8556  002C56                     u5110:
  8557  002C56  FFFF               	dw	65535	; assembler added errata NOP
  8558  002C58  A00A               	btfss	___xxtofl@exp,0,c
  8559  002C5A  9E0D               	bcf	___xxtofl@arg+2,7,c
  8560  002C5C  90D8               	bcf	status,0,c
  8561  002C5E  320A               	rrcf	___xxtofl@exp,f,c
  8562  002C60  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8563  002C64  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8564  002C66  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8565  002C68  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8566  002C6A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8567  002C6E  6A07               	clrf	??___xxtofl+2,c
  8568  002C70  6A06               	clrf	??___xxtofl+1,c
  8569  002C72  6A05               	clrf	??___xxtofl,c
  8570  002C74  5005               	movf	??___xxtofl,w,c
  8571  002C76  120B               	iorwf	___xxtofl@arg,f,c
  8572  002C78  5006               	movf	??___xxtofl+1,w,c
  8573  002C7A  120C               	iorwf	___xxtofl@arg+1,f,c
  8574  002C7C  5007               	movf	??___xxtofl+2,w,c
  8575  002C7E  120D               	iorwf	___xxtofl@arg+2,f,c
  8576  002C80  5008               	movf	??___xxtofl+3,w,c
  8577  002C82  120E               	iorwf	___xxtofl@arg+3,f,c
  8578  002C84  5009               	movf	___xxtofl@sign,w,c
  8579  002C86  A4D8               	btfss	status,2,c
  8580  002C88  AE04               	btfss	___xxtofl@val+3,7,c
  8581  002C8A  D001               	goto	l4702
  8582  002C8C  8E0E               	bsf	___xxtofl@arg+3,7,c
  8583  002C8E                     l4702:
  8584  002C8E  FFFF               	dw	65535	; assembler added errata NOP
  8585  002C90  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8586  002C94  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8587  002C98  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8588  002C9C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8589  002CA0                     l1240:
  8590  002CA0  FFFF               	dw	65535	; assembler added errata NOP
  8591  002CA2  0012               	return		;funcret
  8592  002CA4  FFFF               	dw	65535	; errata NOP
  8593  002CA6                     __end_of___xxtofl:
  8594                           	opt callstack 0
  8595                           
  8596 ;; *************** function ___flsub *****************
  8597 ;; Defined at:
  8598 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;  b               4   39[COMRAM] unsigned char 
  8601 ;;  a               4   43[COMRAM] unsigned char 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  4   39[COMRAM] unsigned char 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8613 ;;      Params:         8       0       0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0
  8616 ;;      Totals:         8       0       0       0       0       0       0
  8617 ;;Total ram usage:        8 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    3
  8620 ;; This function calls:
  8621 ;;		___fladd
  8622 ;; This function is called by:
  8623 ;;		_get_temp
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text41
  8628  003738                     __ptext41:
  8629                           	opt callstack 0
  8630  003738                     ___flsub:
  8631                           	opt callstack 0
  8632  003738  FFFF               	dw	65535	; assembler added errata NOP
  8633                           
  8634                           ;incstack = 0
  8635  00373A  0E00               	movlw	0
  8636  00373C  1A2C               	xorwf	___flsub@a,f,c
  8637  00373E  0E00               	movlw	0
  8638  003740  1A2D               	xorwf	___flsub@a+1,f,c
  8639  003742  0E00               	movlw	0
  8640  003744  1A2E               	xorwf	___flsub@a+2,f,c
  8641  003746  0E80               	movlw	128
  8642  003748  1A2F               	xorwf	___flsub@a+3,f,c
  8643  00374A  C028  F001         	movff	___flsub@b,___fladd@b
  8644  00374E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8645  003752  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8646  003756  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8647  00375A  C02C  F005         	movff	___flsub@a,___fladd@a
  8648  00375E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8649  003762  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8650  003766  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8651  00376A  ECBD  F00D         	call	___fladd	;wreg free
  8652  00376E  C001  F028         	movff	?___fladd,?___flsub
  8653  003772  C002  F029         	movff	?___fladd+1,?___flsub+1
  8654  003776  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8655  00377A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8656  00377E  0012               	return		;funcret
  8657  003780  FFFF               	dw	65535	; errata NOP
  8658  003782                     __end_of___flsub:
  8659                           	opt callstack 0
  8660                           
  8661 ;; *************** function ___fladd *****************
  8662 ;; Defined at:
  8663 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  b               4    0[COMRAM] unsigned char 
  8666 ;;  a               4    4[COMRAM] unsigned char 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  grs             1   15[COMRAM] unsigned char 
  8669 ;;  bexp            1   14[COMRAM] unsigned char 
  8670 ;;  aexp            1   13[COMRAM] unsigned char 
  8671 ;;  signs           1   12[COMRAM] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  4    0[COMRAM] unsigned char 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8681 ;;      Params:         8       0       0       0       0       0       0
  8682 ;;      Locals:         4       0       0       0       0       0       0
  8683 ;;      Temps:          4       0       0       0       0       0       0
  8684 ;;      Totals:        16       0       0       0       0       0       0
  8685 ;;Total ram usage:       16 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    2
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		___flsub
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text42
  8696  001B7A                     __ptext42:
  8697                           	opt callstack 0
  8698  001B7A                     ___fladd:
  8699                           	opt callstack 0
  8700  001B7A  FFFF               	dw	65535	; assembler added errata NOP
  8701                           
  8702                           ;incstack = 0
  8703  001B7C  5004               	movf	___fladd@b+3,w,c
  8704  001B7E  0B80               	andlw	128
  8705  001B80  6E0D               	movwf	___fladd@signs,c
  8706  001B82  5004               	movf	___fladd@b+3,w,c
  8707  001B84  2404               	addwf	___fladd@b+3,w,c
  8708  001B86  6E0F               	movwf	___fladd@bexp,c
  8709  001B88  BE03               	btfsc	___fladd@b+2,7,c
  8710  001B8A  800F               	bsf	___fladd@bexp,0,c
  8711  001B8C  500F               	movf	___fladd@bexp,w,c
  8712  001B8E  B4D8               	btfsc	status,2,c
  8713  001B90  D00E               	goto	l4262
  8714  001B92  280F               	incf	___fladd@bexp,w,c
  8715  001B94  A4D8               	btfss	status,2,c
  8716  001B96  D008               	goto	l4258
  8717  001B98  0E00               	movlw	0
  8718  001B9A  6E01               	movwf	___fladd@b,c
  8719  001B9C  0E00               	movlw	0
  8720  001B9E  6E02               	movwf	___fladd@b+1,c
  8721  001BA0  0E00               	movlw	0
  8722  001BA2  6E03               	movwf	___fladd@b+2,c
  8723  001BA4  0E00               	movlw	0
  8724  001BA6  6E04               	movwf	___fladd@b+3,c
  8725  001BA8                     l4258:
  8726  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  8727  001BAA  8E03               	bsf	___fladd@b+2,7,c
  8728  001BAC  D007               	goto	L22
  8729  001BAE                     l4262:
  8730  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  8731  001BB0  0E00               	movlw	0
  8732  001BB2  6E01               	movwf	___fladd@b,c
  8733  001BB4  0E00               	movlw	0
  8734  001BB6  6E02               	movwf	___fladd@b+1,c
  8735  001BB8  0E00               	movlw	0
  8736  001BBA  6E03               	movwf	___fladd@b+2,c
  8737  001BBC                     L22:
  8738  001BBC  FFFF               	dw	65535	; assembler added errata NOP
  8739  001BBE  0E00               	movlw	0
  8740  001BC0  6E04               	movwf	___fladd@b+3,c
  8741  001BC2  5008               	movf	___fladd@a+3,w,c
  8742  001BC4  0B80               	andlw	128
  8743  001BC6  6E0E               	movwf	___fladd@aexp,c
  8744  001BC8  500D               	movf	___fladd@signs,w,c
  8745  001BCA  180E               	xorwf	___fladd@aexp,w,c
  8746  001BCC  A4D8               	btfss	status,2,c
  8747  001BCE  8C0D               	bsf	___fladd@signs,6,c
  8748  001BD0  5008               	movf	___fladd@a+3,w,c
  8749  001BD2  2408               	addwf	___fladd@a+3,w,c
  8750  001BD4  6E0E               	movwf	___fladd@aexp,c
  8751  001BD6  BE07               	btfsc	___fladd@a+2,7,c
  8752  001BD8  800E               	bsf	___fladd@aexp,0,c
  8753  001BDA  500E               	movf	___fladd@aexp,w,c
  8754  001BDC  B4D8               	btfsc	status,2,c
  8755  001BDE  D00E               	goto	l4286
  8756  001BE0  280E               	incf	___fladd@aexp,w,c
  8757  001BE2  A4D8               	btfss	status,2,c
  8758  001BE4  D008               	goto	l4282
  8759  001BE6  0E00               	movlw	0
  8760  001BE8  6E05               	movwf	___fladd@a,c
  8761  001BEA  0E00               	movlw	0
  8762  001BEC  6E06               	movwf	___fladd@a+1,c
  8763  001BEE  0E00               	movlw	0
  8764  001BF0  6E07               	movwf	___fladd@a+2,c
  8765  001BF2  0E00               	movlw	0
  8766  001BF4  6E08               	movwf	___fladd@a+3,c
  8767  001BF6                     l4282:
  8768  001BF6  FFFF               	dw	65535	; assembler added errata NOP
  8769  001BF8  8E07               	bsf	___fladd@a+2,7,c
  8770  001BFA  D007               	goto	L23
  8771  001BFC                     l4286:
  8772  001BFC  FFFF               	dw	65535	; assembler added errata NOP
  8773  001BFE  0E00               	movlw	0
  8774  001C00  6E05               	movwf	___fladd@a,c
  8775  001C02  0E00               	movlw	0
  8776  001C04  6E06               	movwf	___fladd@a+1,c
  8777  001C06  0E00               	movlw	0
  8778  001C08  6E07               	movwf	___fladd@a+2,c
  8779  001C0A                     L23:
  8780  001C0A  FFFF               	dw	65535	; assembler added errata NOP
  8781  001C0C  0E00               	movlw	0
  8782  001C0E  6E08               	movwf	___fladd@a+3,c
  8783  001C10  500F               	movf	___fladd@bexp,w,c
  8784  001C12  5C0E               	subwf	___fladd@aexp,w,c
  8785  001C14  B0D8               	btfsc	status,0,c
  8786  001C16  D023               	goto	l4324
  8787  001C18  AC0D               	btfss	___fladd@signs,6,c
  8788  001C1A  D002               	goto	l4294
  8789  001C1C  0E80               	movlw	128
  8790  001C1E  1A0D               	xorwf	___fladd@signs,f,c
  8791  001C20                     l4294:
  8792  001C20  FFFF               	dw	65535	; assembler added errata NOP
  8793  001C22  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8794  001C26  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8795  001C2A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8796  001C2E  C001  F010         	movff	___fladd@b,___fladd@grs
  8797  001C32  C005  F001         	movff	___fladd@a,___fladd@b
  8798  001C36  C010  F005         	movff	___fladd@grs,___fladd@a
  8799  001C3A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8800  001C3E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8801  001C42  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8802  001C46  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8803  001C4A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8804  001C4E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8805  001C52  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8806  001C56  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8807  001C5A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8808  001C5E                     l4324:
  8809  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  8810  001C60  0E00               	movlw	0
  8811  001C62  6E10               	movwf	___fladd@grs,c
  8812  001C64  500F               	movf	___fladd@bexp,w,c
  8813  001C66  C00E  F009         	movff	___fladd@aexp,??___fladd
  8814  001C6A  6A0A               	clrf	(??___fladd+1)& (0+255),c
  8815  001C6C  5E09               	subwf	??___fladd,f,c
  8816  001C6E  0E00               	movlw	0
  8817  001C70  5A0A               	subwfb	??___fladd+1,f,c
  8818  001C72  BE0A               	btfsc	??___fladd+1,7,c
  8819  001C74  D031               	goto	l1111
  8820  001C76  500A               	movf	??___fladd+1,w,c
  8821  001C78  E104               	bnz	u4470
  8822  001C7A  0E1A               	movlw	26
  8823  001C7C  5C09               	subwf	??___fladd,w,c
  8824  001C7E  A0D8               	btfss	status,0,c
  8825  001C80  D02B               	goto	l1111
  8826  001C82                     u4470:
  8827  001C82  5001               	movf	___fladd@b,w,c
  8828  001C84  1002               	iorwf	___fladd@b+1,w,c
  8829  001C86  1003               	iorwf	___fladd@b+2,w,c
  8830  001C88  1004               	iorwf	___fladd@b+3,w,c
  8831  001C8A  B4D8               	btfsc	status,2,c
  8832  001C8C  D002               	goto	u4480
  8833  001C8E  0E01               	movlw	1
  8834  001C90  D002               	goto	u4490
  8835  001C92                     u4480:
  8836  001C92  FFFF               	dw	65535	; assembler added errata NOP
  8837  001C94  0E00               	movlw	0
  8838  001C96                     u4490:
  8839  001C96  FFFF               	dw	65535	; assembler added errata NOP
  8840  001C98  6E10               	movwf	___fladd@grs,c
  8841  001C9A  0E00               	movlw	0
  8842  001C9C  6E01               	movwf	___fladd@b,c
  8843  001C9E  0E00               	movlw	0
  8844  001CA0  6E02               	movwf	___fladd@b+1,c
  8845  001CA2  0E00               	movlw	0
  8846  001CA4  6E03               	movwf	___fladd@b+2,c
  8847  001CA6  0E00               	movlw	0
  8848  001CA8  6E04               	movwf	___fladd@b+3,c
  8849  001CAA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8850  001CAE  D019               	goto	u4520
  8851  001CB0                     l1112:
  8852  001CB0  FFFF               	dw	65535	; assembler added errata NOP
  8853  001CB2  A010               	btfss	___fladd@grs,0,c
  8854  001CB4  D005               	goto	l4336
  8855  001CB6  90D8               	bcf	status,0,c
  8856  001CB8  3010               	rrcf	___fladd@grs,w,c
  8857  001CBA  0901               	iorlw	1
  8858  001CBC  6E10               	movwf	___fladd@grs,c
  8859  001CBE  D003               	goto	l4338
  8860  001CC0                     l4336:
  8861  001CC0  FFFF               	dw	65535	; assembler added errata NOP
  8862  001CC2  90D8               	bcf	status,0,c
  8863  001CC4  3210               	rrcf	___fladd@grs,f,c
  8864  001CC6                     l4338:
  8865  001CC6  FFFF               	dw	65535	; assembler added errata NOP
  8866  001CC8  B001               	btfsc	___fladd@b,0,c
  8867  001CCA  8E10               	bsf	___fladd@grs,7,c
  8868  001CCC  3404               	rlcf	___fladd@b+3,w,c
  8869  001CCE  3204               	rrcf	___fladd@b+3,f,c
  8870  001CD0  3203               	rrcf	___fladd@b+2,f,c
  8871  001CD2  3202               	rrcf	___fladd@b+1,f,c
  8872  001CD4  3201               	rrcf	___fladd@b,f,c
  8873  001CD6  2A0F               	incf	___fladd@bexp,f,c
  8874  001CD8                     l1111:
  8875  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  8876  001CDA  500E               	movf	___fladd@aexp,w,c
  8877  001CDC  5C0F               	subwf	___fladd@bexp,w,c
  8878  001CDE  A0D8               	btfss	status,0,c
  8879  001CE0  D7E7               	goto	l1112
  8880  001CE2                     u4520:
  8881  001CE2  FFFF               	dw	65535	; assembler added errata NOP
  8882  001CE4  BC0D               	btfsc	___fladd@signs,6,c
  8883  001CE6  D021               	goto	l4370
  8884  001CE8  500F               	movf	___fladd@bexp,w,c
  8885  001CEA  B4D8               	btfsc	status,2,c
  8886  001CEC  D065               	goto	u4610
  8887  001CEE  5005               	movf	___fladd@a,w,c
  8888  001CF0  2601               	addwf	___fladd@b,f,c
  8889  001CF2  5006               	movf	___fladd@a+1,w,c
  8890  001CF4  2202               	addwfc	___fladd@b+1,f,c
  8891  001CF6  5007               	movf	___fladd@a+2,w,c
  8892  001CF8  2203               	addwfc	___fladd@b+2,f,c
  8893  001CFA  5008               	movf	___fladd@a+3,w,c
  8894  001CFC  2204               	addwfc	___fladd@b+3,f,c
  8895  001CFE  A004               	btfss	___fladd@b+3,0,c
  8896  001D00  D07B               	goto	u4650
  8897  001D02  A010               	btfss	___fladd@grs,0,c
  8898  001D04  D005               	goto	l4360
  8899  001D06  90D8               	bcf	status,0,c
  8900  001D08  3010               	rrcf	___fladd@grs,w,c
  8901  001D0A  0901               	iorlw	1
  8902  001D0C  6E10               	movwf	___fladd@grs,c
  8903  001D0E  D003               	goto	l4362
  8904  001D10                     l4360:
  8905  001D10  FFFF               	dw	65535	; assembler added errata NOP
  8906  001D12  90D8               	bcf	status,0,c
  8907  001D14  3210               	rrcf	___fladd@grs,f,c
  8908  001D16                     l4362:
  8909  001D16  FFFF               	dw	65535	; assembler added errata NOP
  8910  001D18  B001               	btfsc	___fladd@b,0,c
  8911  001D1A  8E10               	bsf	___fladd@grs,7,c
  8912  001D1C  3404               	rlcf	___fladd@b+3,w,c
  8913  001D1E  3204               	rrcf	___fladd@b+3,f,c
  8914  001D20  3203               	rrcf	___fladd@b+2,f,c
  8915  001D22  3202               	rrcf	___fladd@b+1,f,c
  8916  001D24  3201               	rrcf	___fladd@b,f,c
  8917  001D26  2A0F               	incf	___fladd@bexp,f,c
  8918  001D28  D067               	goto	u4650
  8919  001D2A                     l4370:
  8920  001D2A  FFFF               	dw	65535	; assembler added errata NOP
  8921  001D2C  5005               	movf	___fladd@a,w,c
  8922  001D2E  5C01               	subwf	___fladd@b,w,c
  8923  001D30  5006               	movf	___fladd@a+1,w,c
  8924  001D32  5802               	subwfb	___fladd@b+1,w,c
  8925  001D34  5007               	movf	___fladd@a+2,w,c
  8926  001D36  5803               	subwfb	___fladd@b+2,w,c
  8927  001D38  5004               	movf	___fladd@b+3,w,c
  8928  001D3A  0A80               	xorlw	128
  8929  001D3C  6E09               	movwf	??___fladd& (0+255),c
  8930  001D3E  5008               	movf	___fladd@a+3,w,c
  8931  001D40  0A80               	xorlw	128
  8932  001D42  5809               	subwfb	??___fladd& (0+255),w,c
  8933  001D44  B0D8               	btfsc	status,0,c
  8934  001D46  D025               	goto	l4380
  8935  001D48  5001               	movf	___fladd@b,w,c
  8936  001D4A  5C05               	subwf	___fladd@a,w,c
  8937  001D4C  6E09               	movwf	??___fladd& (0+255),c
  8938  001D4E  5002               	movf	___fladd@b+1,w,c
  8939  001D50  5806               	subwfb	___fladd@a+1,w,c
  8940  001D52  6E0A               	movwf	(??___fladd+1)& (0+255),c
  8941  001D54  5003               	movf	___fladd@b+2,w,c
  8942  001D56  5807               	subwfb	___fladd@a+2,w,c
  8943  001D58  6E0B               	movwf	(??___fladd+2)& (0+255),c
  8944  001D5A  5004               	movf	___fladd@b+3,w,c
  8945  001D5C  5808               	subwfb	___fladd@a+3,w,c
  8946  001D5E  6E0C               	movwf	(??___fladd+3)& (0+255),c
  8947  001D60  0EFF               	movlw	255
  8948  001D62  2409               	addwf	??___fladd,w,c
  8949  001D64  6E01               	movwf	___fladd@b,c
  8950  001D66  0EFF               	movlw	255
  8951  001D68  200A               	addwfc	??___fladd+1,w,c
  8952  001D6A  6E02               	movwf	___fladd@b+1,c
  8953  001D6C  0EFF               	movlw	255
  8954  001D6E  200B               	addwfc	??___fladd+2,w,c
  8955  001D70  6E03               	movwf	___fladd@b+2,c
  8956  001D72  0EFF               	movlw	255
  8957  001D74  200C               	addwfc	??___fladd+3,w,c
  8958  001D76  6E04               	movwf	___fladd@b+3,c
  8959  001D78  0E80               	movlw	128
  8960  001D7A  1A0D               	xorwf	___fladd@signs,f,c
  8961  001D7C  6C10               	negf	___fladd@grs,c
  8962  001D7E  5010               	movf	___fladd@grs,w,c
  8963  001D80  A4D8               	btfss	status,2,c
  8964  001D82  D010               	goto	l1127
  8965  001D84  0E01               	movlw	1
  8966  001D86  2601               	addwf	___fladd@b,f,c
  8967  001D88  0E00               	movlw	0
  8968  001D8A  2202               	addwfc	___fladd@b+1,f,c
  8969  001D8C  2203               	addwfc	___fladd@b+2,f,c
  8970  001D8E  2204               	addwfc	___fladd@b+3,f,c
  8971  001D90  D009               	goto	l1127
  8972  001D92                     l4380:
  8973  001D92  FFFF               	dw	65535	; assembler added errata NOP
  8974  001D94  5005               	movf	___fladd@a,w,c
  8975  001D96  5E01               	subwf	___fladd@b,f,c
  8976  001D98  5006               	movf	___fladd@a+1,w,c
  8977  001D9A  5A02               	subwfb	___fladd@b+1,f,c
  8978  001D9C  5007               	movf	___fladd@a+2,w,c
  8979  001D9E  5A03               	subwfb	___fladd@b+2,f,c
  8980  001DA0  5008               	movf	___fladd@a+3,w,c
  8981  001DA2  5A04               	subwfb	___fladd@b+3,f,c
  8982  001DA4                     l1127:
  8983  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  8984  001DA6  5001               	movf	___fladd@b,w,c
  8985  001DA8  1002               	iorwf	___fladd@b+1,w,c
  8986  001DAA  1003               	iorwf	___fladd@b+2,w,c
  8987  001DAC  1004               	iorwf	___fladd@b+3,w,c
  8988  001DAE  A4D8               	btfss	status,2,c
  8989  001DB0  D020               	goto	l4404
  8990  001DB2  5010               	movf	___fladd@grs,w,c
  8991  001DB4  A4D8               	btfss	status,2,c
  8992  001DB6  D01D               	goto	l4404
  8993  001DB8                     u4610:
  8994  001DB8  FFFF               	dw	65535	; assembler added errata NOP
  8995  001DBA  0E00               	movlw	0
  8996  001DBC  6E01               	movwf	?___fladd,c
  8997  001DBE  0E00               	movlw	0
  8998  001DC0  6E02               	movwf	?___fladd+1,c
  8999  001DC2  0E00               	movlw	0
  9000  001DC4  6E03               	movwf	?___fladd+2,c
  9001  001DC6  0E00               	movlw	0
  9002  001DC8  6E04               	movwf	?___fladd+3,c
  9003  001DCA  D076               	goto	l1119
  9004  001DCC                     l4388:
  9005  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  9006  001DCE  90D8               	bcf	status,0,c
  9007  001DD0  3601               	rlcf	___fladd@b,f,c
  9008  001DD2  3602               	rlcf	___fladd@b+1,f,c
  9009  001DD4  3603               	rlcf	___fladd@b+2,f,c
  9010  001DD6  3604               	rlcf	___fladd@b+3,f,c
  9011  001DD8  BE10               	btfsc	___fladd@grs,7,c
  9012  001DDA  8001               	bsf	___fladd@b,0,c
  9013  001DDC  A010               	btfss	___fladd@grs,0,c
  9014  001DDE  D002               	goto	l4398
  9015  001DE0  80D8               	bsf	status,0,c
  9016  001DE2  D002               	goto	L24
  9017  001DE4                     l4398:
  9018  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  9019  001DE6  90D8               	bcf	status,0,c
  9020  001DE8                     L24:
  9021  001DE8  FFFF               	dw	65535	; assembler added errata NOP
  9022  001DEA  3610               	rlcf	___fladd@grs,f,c
  9023  001DEC  500F               	movf	___fladd@bexp,w,c
  9024  001DEE  A4D8               	btfss	status,2,c
  9025  001DF0  060F               	decf	___fladd@bexp,f,c
  9026  001DF2                     l4404:
  9027  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  9028  001DF4  AE03               	btfss	___fladd@b+2,7,c
  9029  001DF6  D7EA               	goto	l4388
  9030  001DF8                     u4650:
  9031  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  9032  001DFA  0E00               	movlw	0
  9033  001DFC  6E0E               	movwf	___fladd@aexp,c
  9034  001DFE  AE10               	btfss	___fladd@grs,7,c
  9035  001E00  D00D               	goto	l1136
  9036  001E02  C010  F009         	movff	___fladd@grs,??___fladd
  9037  001E06  0E7F               	movlw	127
  9038  001E08  1609               	andwf	??___fladd,f,c
  9039  001E0A  B4D8               	btfsc	status,2,c
  9040  001E0C  D004               	goto	l1137
  9041  001E0E                     u4670:
  9042  001E0E  FFFF               	dw	65535	; assembler added errata NOP
  9043  001E10  0E01               	movlw	1
  9044  001E12  6E0E               	movwf	___fladd@aexp,c
  9045  001E14  D003               	goto	l1136
  9046  001E16                     l1137:
  9047  001E16  FFFF               	dw	65535	; assembler added errata NOP
  9048  001E18  B001               	btfsc	___fladd@b,0,c
  9049  001E1A  D7F9               	goto	u4670
  9050  001E1C                     l1136:
  9051  001E1C  FFFF               	dw	65535	; assembler added errata NOP
  9052  001E1E  500E               	movf	___fladd@aexp,w,c
  9053  001E20  B4D8               	btfsc	status,2,c
  9054  001E22  D020               	goto	l4424
  9055  001E24  0E01               	movlw	1
  9056  001E26  2601               	addwf	___fladd@b,f,c
  9057  001E28  0E00               	movlw	0
  9058  001E2A  2202               	addwfc	___fladd@b+1,f,c
  9059  001E2C  2203               	addwfc	___fladd@b+2,f,c
  9060  001E2E  2204               	addwfc	___fladd@b+3,f,c
  9061  001E30  A004               	btfss	___fladd@b+3,0,c
  9062  001E32  D018               	goto	l4424
  9063  001E34  C001  F009         	movff	___fladd@b,??___fladd
  9064  001E38  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9065  001E3C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9066  001E40  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9067  001E44  340C               	rlcf	??___fladd+3,w,c
  9068  001E46  320C               	rrcf	??___fladd+3,f,c
  9069  001E48  320B               	rrcf	??___fladd+2,f,c
  9070  001E4A  320A               	rrcf	??___fladd+1,f,c
  9071  001E4C  3209               	rrcf	??___fladd,f,c
  9072  001E4E  C009  F001         	movff	??___fladd,___fladd@b
  9073  001E52  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9074  001E56  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9075  001E5A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9076  001E5E  280F               	incf	___fladd@bexp,w,c
  9077  001E60  A4D8               	btfss	status,2,c
  9078  001E62  2A0F               	incf	___fladd@bexp,f,c
  9079  001E64                     l4424:
  9080  001E64  FFFF               	dw	65535	; assembler added errata NOP
  9081  001E66  280F               	incf	___fladd@bexp,w,c
  9082  001E68  B4D8               	btfsc	status,2,c
  9083  001E6A  D003               	goto	u4730
  9084  001E6C  500F               	movf	___fladd@bexp,w,c
  9085  001E6E  A4D8               	btfss	status,2,c
  9086  001E70  D00E               	goto	l4432
  9087  001E72                     u4730:
  9088  001E72  FFFF               	dw	65535	; assembler added errata NOP
  9089  001E74  0E00               	movlw	0
  9090  001E76  6E01               	movwf	___fladd@b,c
  9091  001E78  0E00               	movlw	0
  9092  001E7A  6E02               	movwf	___fladd@b+1,c
  9093  001E7C  0E00               	movlw	0
  9094  001E7E  6E03               	movwf	___fladd@b+2,c
  9095  001E80  0E00               	movlw	0
  9096  001E82  6E04               	movwf	___fladd@b+3,c
  9097  001E84  500F               	movf	___fladd@bexp,w,c
  9098  001E86  A4D8               	btfss	status,2,c
  9099  001E88  D002               	goto	l4432
  9100  001E8A  0E00               	movlw	0
  9101  001E8C  6E0D               	movwf	___fladd@signs,c
  9102  001E8E                     l4432:
  9103  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  9104  001E90  A00F               	btfss	___fladd@bexp,0,c
  9105  001E92  D002               	goto	l4436
  9106  001E94  8E03               	bsf	___fladd@b+2,7,c
  9107  001E96  D002               	goto	l4438
  9108  001E98                     l4436:
  9109  001E98  FFFF               	dw	65535	; assembler added errata NOP
  9110  001E9A  9E03               	bcf	___fladd@b+2,7,c
  9111  001E9C                     l4438:
  9112  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  9113  001E9E  90D8               	bcf	status,0,c
  9114  001EA0  300F               	rrcf	___fladd@bexp,w,c
  9115  001EA2  6E04               	movwf	___fladd@b+3,c
  9116  001EA4  BE0D               	btfsc	___fladd@signs,7,c
  9117  001EA6  8E04               	bsf	___fladd@b+3,7,c
  9118  001EA8  C001  F001         	movff	___fladd@b,?___fladd
  9119  001EAC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9120  001EB0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9121  001EB4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9122  001EB8                     l1119:
  9123  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  9124  001EBA  0012               	return		;funcret
  9125  001EBC  FFFF               	dw	65535	; errata NOP
  9126  001EBE                     __end_of___fladd:
  9127                           	opt callstack 0
  9128                           
  9129 ;; *************** function ___flmul *****************
  9130 ;; Defined at:
  9131 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  b               4   14[COMRAM] unsigned char 
  9134 ;;  a               4   18[COMRAM] unsigned char 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  prod            4   33[COMRAM] struct .
  9137 ;;  grs             4   27[COMRAM] unsigned long 
  9138 ;;  temp            2   37[COMRAM] struct .
  9139 ;;  bexp            1   32[COMRAM] unsigned char 
  9140 ;;  aexp            1   31[COMRAM] unsigned char 
  9141 ;;  sign            1   26[COMRAM] unsigned char 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  4   14[COMRAM] unsigned char 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2, status,0, prodl, prodh
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9151 ;;      Params:         8       0       0       0       0       0       0
  9152 ;;      Locals:        13       0       0       0       0       0       0
  9153 ;;      Temps:          4       0       0       0       0       0       0
  9154 ;;      Totals:        25       0       0       0       0       0       0
  9155 ;;Total ram usage:       25 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    2
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_get_temp
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text43
  9166  0017F8                     __ptext43:
  9167                           	opt callstack 0
  9168  0017F8                     ___flmul:
  9169                           	opt callstack 0
  9170  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  9171                           
  9172                           ;incstack = 0
  9173  0017FA  5012               	movf	___flmul@b+3,w,c
  9174  0017FC  0B80               	andlw	128
  9175  0017FE  6E1B               	movwf	___flmul@sign,c
  9176  001800  5012               	movf	___flmul@b+3,w,c
  9177  001802  2412               	addwf	___flmul@b+3,w,c
  9178  001804  6E21               	movwf	___flmul@bexp,c
  9179  001806  BE11               	btfsc	___flmul@b+2,7,c
  9180  001808  8021               	bsf	___flmul@bexp,0,c
  9181  00180A  5021               	movf	___flmul@bexp,w,c
  9182  00180C  B4D8               	btfsc	status,2,c
  9183  00180E  D00E               	goto	l4538
  9184  001810  2821               	incf	___flmul@bexp,w,c
  9185  001812  A4D8               	btfss	status,2,c
  9186  001814  D008               	goto	l4536
  9187  001816  0E00               	movlw	0
  9188  001818  6E0F               	movwf	___flmul@b,c
  9189  00181A  0E00               	movlw	0
  9190  00181C  6E10               	movwf	___flmul@b+1,c
  9191  00181E  0E00               	movlw	0
  9192  001820  6E11               	movwf	___flmul@b+2,c
  9193  001822  0E00               	movlw	0
  9194  001824  6E12               	movwf	___flmul@b+3,c
  9195  001826                     l4536:
  9196  001826  FFFF               	dw	65535	; assembler added errata NOP
  9197  001828  8E11               	bsf	___flmul@b+2,7,c
  9198  00182A  D009               	goto	l4540
  9199  00182C                     l4538:
  9200  00182C  FFFF               	dw	65535	; assembler added errata NOP
  9201  00182E  0E00               	movlw	0
  9202  001830  6E0F               	movwf	___flmul@b,c
  9203  001832  0E00               	movlw	0
  9204  001834  6E10               	movwf	___flmul@b+1,c
  9205  001836  0E00               	movlw	0
  9206  001838  6E11               	movwf	___flmul@b+2,c
  9207  00183A  0E00               	movlw	0
  9208  00183C  6E12               	movwf	___flmul@b+3,c
  9209  00183E                     l4540:
  9210  00183E  FFFF               	dw	65535	; assembler added errata NOP
  9211  001840  5016               	movf	___flmul@a+3,w,c
  9212  001842  0B80               	andlw	128
  9213  001844  1A1B               	xorwf	___flmul@sign,f,c
  9214  001846  5016               	movf	___flmul@a+3,w,c
  9215  001848  2416               	addwf	___flmul@a+3,w,c
  9216  00184A  6E20               	movwf	___flmul@aexp,c
  9217  00184C  BE15               	btfsc	___flmul@a+2,7,c
  9218  00184E  8020               	bsf	___flmul@aexp,0,c
  9219  001850  5020               	movf	___flmul@aexp,w,c
  9220  001852  B4D8               	btfsc	status,2,c
  9221  001854  D00E               	goto	l4556
  9222  001856  2820               	incf	___flmul@aexp,w,c
  9223  001858  A4D8               	btfss	status,2,c
  9224  00185A  D008               	goto	l4554
  9225  00185C  0E00               	movlw	0
  9226  00185E  6E13               	movwf	___flmul@a,c
  9227  001860  0E00               	movlw	0
  9228  001862  6E14               	movwf	___flmul@a+1,c
  9229  001864  0E00               	movlw	0
  9230  001866  6E15               	movwf	___flmul@a+2,c
  9231  001868  0E00               	movlw	0
  9232  00186A  6E16               	movwf	___flmul@a+3,c
  9233  00186C                     l4554:
  9234  00186C  FFFF               	dw	65535	; assembler added errata NOP
  9235  00186E  8E15               	bsf	___flmul@a+2,7,c
  9236  001870  D009               	goto	l1196
  9237  001872                     l4556:
  9238  001872  FFFF               	dw	65535	; assembler added errata NOP
  9239  001874  0E00               	movlw	0
  9240  001876  6E13               	movwf	___flmul@a,c
  9241  001878  0E00               	movlw	0
  9242  00187A  6E14               	movwf	___flmul@a+1,c
  9243  00187C  0E00               	movlw	0
  9244  00187E  6E15               	movwf	___flmul@a+2,c
  9245  001880  0E00               	movlw	0
  9246  001882  6E16               	movwf	___flmul@a+3,c
  9247  001884                     l1196:
  9248  001884  FFFF               	dw	65535	; assembler added errata NOP
  9249  001886  5020               	movf	___flmul@aexp,w,c
  9250  001888  B4D8               	btfsc	status,2,c
  9251  00188A  D003               	goto	u4930
  9252  00188C  5021               	movf	___flmul@bexp,w,c
  9253  00188E  A4D8               	btfss	status,2,c
  9254  001890  D00A               	goto	l4564
  9255  001892                     u4930:
  9256  001892  FFFF               	dw	65535	; assembler added errata NOP
  9257  001894  0E00               	movlw	0
  9258  001896  6E0F               	movwf	?___flmul,c
  9259  001898  0E00               	movlw	0
  9260  00189A  6E10               	movwf	?___flmul+1,c
  9261  00189C  0E00               	movlw	0
  9262  00189E  6E11               	movwf	?___flmul+2,c
  9263  0018A0  0E00               	movlw	0
  9264  0018A2  6E12               	movwf	?___flmul+3,c
  9265  0018A4  D167               	goto	l1200
  9266  0018A6                     l4564:
  9267  0018A6  FFFF               	dw	65535	; assembler added errata NOP
  9268  0018A8  5015               	movf	___flmul@a+2,w,c
  9269  0018AA  020F               	mulwf	___flmul@b,c
  9270  0018AC  CFF3 F026          	movff	prodl,___flmul@temp
  9271  0018B0  CFF4 F027          	movff	prodh,___flmul@temp+1
  9272  0018B4  5026               	movf	___flmul@temp,w,c
  9273  0018B6  6E1C               	movwf	___flmul@grs,c
  9274  0018B8  6A1D               	clrf	___flmul@grs+1,c
  9275  0018BA  6A1E               	clrf	___flmul@grs+2,c
  9276  0018BC  6A1F               	clrf	___flmul@grs+3,c
  9277  0018BE  5027               	movf	___flmul@temp+1,w,c
  9278  0018C0  6E22               	movwf	___flmul@prod,c
  9279  0018C2  6A23               	clrf	___flmul@prod+1,c
  9280  0018C4  6A24               	clrf	___flmul@prod+2,c
  9281  0018C6  6A25               	clrf	___flmul@prod+3,c
  9282  0018C8  5014               	movf	___flmul@a+1,w,c
  9283  0018CA  0210               	mulwf	___flmul@b+1,c
  9284  0018CC  CFF3 F026          	movff	prodl,___flmul@temp
  9285  0018D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  9286  0018D4  5026               	movf	___flmul@temp,w,c
  9287  0018D6  261C               	addwf	___flmul@grs,f,c
  9288  0018D8  0E00               	movlw	0
  9289  0018DA  221D               	addwfc	___flmul@grs+1,f,c
  9290  0018DC  221E               	addwfc	___flmul@grs+2,f,c
  9291  0018DE  221F               	addwfc	___flmul@grs+3,f,c
  9292  0018E0  5027               	movf	___flmul@temp+1,w,c
  9293  0018E2  2622               	addwf	___flmul@prod,f,c
  9294  0018E4  0E00               	movlw	0
  9295  0018E6  2223               	addwfc	___flmul@prod+1,f,c
  9296  0018E8  2224               	addwfc	___flmul@prod+2,f,c
  9297  0018EA  2225               	addwfc	___flmul@prod+3,f,c
  9298  0018EC  5013               	movf	___flmul@a,w,c
  9299  0018EE  0211               	mulwf	___flmul@b+2,c
  9300  0018F0  CFF3 F026          	movff	prodl,___flmul@temp
  9301  0018F4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9302  0018F8  5026               	movf	___flmul@temp,w,c
  9303  0018FA  261C               	addwf	___flmul@grs,f,c
  9304  0018FC  0E00               	movlw	0
  9305  0018FE  221D               	addwfc	___flmul@grs+1,f,c
  9306  001900  221E               	addwfc	___flmul@grs+2,f,c
  9307  001902  221F               	addwfc	___flmul@grs+3,f,c
  9308  001904  5027               	movf	___flmul@temp+1,w,c
  9309  001906  2622               	addwf	___flmul@prod,f,c
  9310  001908  0E00               	movlw	0
  9311  00190A  2223               	addwfc	___flmul@prod+1,f,c
  9312  00190C  2224               	addwfc	___flmul@prod+2,f,c
  9313  00190E  2225               	addwfc	___flmul@prod+3,f,c
  9314  001910  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9315  001914  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9316  001918  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9317  00191C  6A1C               	clrf	___flmul@grs,c
  9318  00191E  5013               	movf	___flmul@a,w,c
  9319  001920  0210               	mulwf	___flmul@b+1,c
  9320  001922  CFF3 F026          	movff	prodl,___flmul@temp
  9321  001926  CFF4 F027          	movff	prodh,___flmul@temp+1
  9322  00192A  5026               	movf	___flmul@temp,w,c
  9323  00192C  261C               	addwf	___flmul@grs,f,c
  9324  00192E  5027               	movf	___flmul@temp+1,w,c
  9325  001930  221D               	addwfc	___flmul@grs+1,f,c
  9326  001932  0E00               	movlw	0
  9327  001934  221E               	addwfc	___flmul@grs+2,f,c
  9328  001936  0E00               	movlw	0
  9329  001938  221F               	addwfc	___flmul@grs+3,f,c
  9330  00193A  5014               	movf	___flmul@a+1,w,c
  9331  00193C  020F               	mulwf	___flmul@b,c
  9332  00193E  CFF3 F026          	movff	prodl,___flmul@temp
  9333  001942  CFF4 F027          	movff	prodh,___flmul@temp+1
  9334  001946  5026               	movf	___flmul@temp,w,c
  9335  001948  261C               	addwf	___flmul@grs,f,c
  9336  00194A  5027               	movf	___flmul@temp+1,w,c
  9337  00194C  221D               	addwfc	___flmul@grs+1,f,c
  9338  00194E  0E00               	movlw	0
  9339  001950  221E               	addwfc	___flmul@grs+2,f,c
  9340  001952  0E00               	movlw	0
  9341  001954  221F               	addwfc	___flmul@grs+3,f,c
  9342  001956  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9343  00195A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9344  00195E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9345  001962  6A1C               	clrf	___flmul@grs,c
  9346  001964  5013               	movf	___flmul@a,w,c
  9347  001966  020F               	mulwf	___flmul@b,c
  9348  001968  CFF3 F026          	movff	prodl,___flmul@temp
  9349  00196C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9350  001970  5026               	movf	___flmul@temp,w,c
  9351  001972  261C               	addwf	___flmul@grs,f,c
  9352  001974  5027               	movf	___flmul@temp+1,w,c
  9353  001976  221D               	addwfc	___flmul@grs+1,f,c
  9354  001978  0E00               	movlw	0
  9355  00197A  221E               	addwfc	___flmul@grs+2,f,c
  9356  00197C  0E00               	movlw	0
  9357  00197E  221F               	addwfc	___flmul@grs+3,f,c
  9358  001980  5015               	movf	___flmul@a+2,w,c
  9359  001982  0210               	mulwf	___flmul@b+1,c
  9360  001984  CFF3 F026          	movff	prodl,___flmul@temp
  9361  001988  CFF4 F027          	movff	prodh,___flmul@temp+1
  9362  00198C  5026               	movf	___flmul@temp,w,c
  9363  00198E  2622               	addwf	___flmul@prod,f,c
  9364  001990  5027               	movf	___flmul@temp+1,w,c
  9365  001992  2223               	addwfc	___flmul@prod+1,f,c
  9366  001994  0E00               	movlw	0
  9367  001996  2224               	addwfc	___flmul@prod+2,f,c
  9368  001998  0E00               	movlw	0
  9369  00199A  2225               	addwfc	___flmul@prod+3,f,c
  9370  00199C  5014               	movf	___flmul@a+1,w,c
  9371  00199E  0211               	mulwf	___flmul@b+2,c
  9372  0019A0  CFF3 F026          	movff	prodl,___flmul@temp
  9373  0019A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  9374  0019A8  5026               	movf	___flmul@temp,w,c
  9375  0019AA  2622               	addwf	___flmul@prod,f,c
  9376  0019AC  5027               	movf	___flmul@temp+1,w,c
  9377  0019AE  2223               	addwfc	___flmul@prod+1,f,c
  9378  0019B0  0E00               	movlw	0
  9379  0019B2  2224               	addwfc	___flmul@prod+2,f,c
  9380  0019B4  0E00               	movlw	0
  9381  0019B6  2225               	addwfc	___flmul@prod+3,f,c
  9382  0019B8  5015               	movf	___flmul@a+2,w,c
  9383  0019BA  0211               	mulwf	___flmul@b+2,c
  9384  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  9385  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  9386  0019C4  5026               	movf	___flmul@temp,w,c
  9387  0019C6  6E17               	movwf	??___flmul& (0+255),c
  9388  0019C8  5027               	movf	___flmul@temp+1,w,c
  9389  0019CA  6E18               	movwf	(??___flmul+1)& (0+255),c
  9390  0019CC  6A19               	clrf	(??___flmul+2)& (0+255),c
  9391  0019CE  6A1A               	clrf	(??___flmul+3)& (0+255),c
  9392  0019D0  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9393  0019D4  C018  F019         	movff	??___flmul+1,??___flmul+2
  9394  0019D8  C017  F018         	movff	??___flmul,??___flmul+1
  9395  0019DC  6A17               	clrf	??___flmul,c
  9396  0019DE  5017               	movf	??___flmul,w,c
  9397  0019E0  2622               	addwf	___flmul@prod,f,c
  9398  0019E2  5018               	movf	??___flmul+1,w,c
  9399  0019E4  2223               	addwfc	___flmul@prod+1,f,c
  9400  0019E6  5019               	movf	??___flmul+2,w,c
  9401  0019E8  2224               	addwfc	___flmul@prod+2,f,c
  9402  0019EA  501A               	movf	??___flmul+3,w,c
  9403  0019EC  2225               	addwfc	___flmul@prod+3,f,c
  9404  0019EE  C01C  F017         	movff	___flmul@grs,??___flmul
  9405  0019F2  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9406  0019F6  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9407  0019FA  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9408  0019FE  0E19               	movlw	25
  9409  001A00  D006               	goto	u4940
  9410  001A02                     u4945:
  9411  001A02  FFFF               	dw	65535	; assembler added errata NOP
  9412  001A04  90D8               	bcf	status,0,c
  9413  001A06  321A               	rrcf	??___flmul+3,f,c
  9414  001A08  3219               	rrcf	??___flmul+2,f,c
  9415  001A0A  3218               	rrcf	??___flmul+1,f,c
  9416  001A0C  3217               	rrcf	??___flmul,f,c
  9417  001A0E                     u4940:
  9418  001A0E  FFFF               	dw	65535	; assembler added errata NOP
  9419  001A10  2EE8               	decfsz	wreg,f,c
  9420  001A12  D7F7               	goto	u4945
  9421  001A14  5017               	movf	??___flmul,w,c
  9422  001A16  2622               	addwf	___flmul@prod,f,c
  9423  001A18  5018               	movf	??___flmul+1,w,c
  9424  001A1A  2223               	addwfc	___flmul@prod+1,f,c
  9425  001A1C  5019               	movf	??___flmul+2,w,c
  9426  001A1E  2224               	addwfc	___flmul@prod+2,f,c
  9427  001A20  501A               	movf	??___flmul+3,w,c
  9428  001A22  2225               	addwfc	___flmul@prod+3,f,c
  9429  001A24  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9430  001A28  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9431  001A2C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9432  001A30  6A1C               	clrf	___flmul@grs,c
  9433  001A32  5020               	movf	___flmul@aexp,w,c
  9434  001A34  C021  F017         	movff	___flmul@bexp,??___flmul
  9435  001A38  6A18               	clrf	(??___flmul+1)& (0+255),c
  9436  001A3A  2617               	addwf	??___flmul,f,c
  9437  001A3C  0E00               	movlw	0
  9438  001A3E  2218               	addwfc	??___flmul+1,f,c
  9439  001A40  0E82               	movlw	130
  9440  001A42  2417               	addwf	??___flmul,w,c
  9441  001A44  6E26               	movwf	___flmul@temp,c
  9442  001A46  0EFF               	movlw	255
  9443  001A48  2018               	addwfc	??___flmul+1,w,c
  9444  001A4A  6E27               	movwf	___flmul@temp+1,c
  9445  001A4C  D010               	goto	l4612
  9446  001A4E                     l4606:
  9447  001A4E  FFFF               	dw	65535	; assembler added errata NOP
  9448  001A50  90D8               	bcf	status,0,c
  9449  001A52  3622               	rlcf	___flmul@prod,f,c
  9450  001A54  3623               	rlcf	___flmul@prod+1,f,c
  9451  001A56  3624               	rlcf	___flmul@prod+2,f,c
  9452  001A58  3625               	rlcf	___flmul@prod+3,f,c
  9453  001A5A  BE1F               	btfsc	___flmul@grs+3,7,c
  9454  001A5C  8022               	bsf	___flmul@prod,0,c
  9455  001A5E  90D8               	bcf	status,0,c
  9456  001A60  361C               	rlcf	___flmul@grs,f,c
  9457  001A62  361D               	rlcf	___flmul@grs+1,f,c
  9458  001A64  361E               	rlcf	___flmul@grs+2,f,c
  9459  001A66  361F               	rlcf	___flmul@grs+3,f,c
  9460  001A68  0626               	decf	___flmul@temp,f,c
  9461  001A6A  A0D8               	btfss	status,0,c
  9462  001A6C  0627               	decf	___flmul@temp+1,f,c
  9463  001A6E                     l4612:
  9464  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  9465  001A70  AE24               	btfss	___flmul@prod+2,7,c
  9466  001A72  D7ED               	goto	l4606
  9467  001A74  0E00               	movlw	0
  9468  001A76  6E20               	movwf	___flmul@aexp,c
  9469  001A78  AE1F               	btfss	___flmul@grs+3,7,c
  9470  001A7A  D019               	goto	l1205
  9471  001A7C  0EFF               	movlw	255
  9472  001A7E  141C               	andwf	___flmul@grs,w,c
  9473  001A80  6E17               	movwf	??___flmul& (0+255),c
  9474  001A82  0EFF               	movlw	255
  9475  001A84  141D               	andwf	___flmul@grs+1,w,c
  9476  001A86  6E18               	movwf	(??___flmul+1)& (0+255),c
  9477  001A88  0EFF               	movlw	255
  9478  001A8A  141E               	andwf	___flmul@grs+2,w,c
  9479  001A8C  6E19               	movwf	(??___flmul+2)& (0+255),c
  9480  001A8E  0E7F               	movlw	127
  9481  001A90  141F               	andwf	___flmul@grs+3,w,c
  9482  001A92  6E1A               	movwf	(??___flmul+3)& (0+255),c
  9483  001A94  5017               	movf	??___flmul,w,c
  9484  001A96  1018               	iorwf	??___flmul+1,w,c
  9485  001A98  1019               	iorwf	??___flmul+2,w,c
  9486  001A9A  101A               	iorwf	??___flmul+3,w,c
  9487  001A9C  B4D8               	btfsc	status,2,c
  9488  001A9E  D004               	goto	l1206
  9489  001AA0                     u4980:
  9490  001AA0  FFFF               	dw	65535	; assembler added errata NOP
  9491  001AA2  0E01               	movlw	1
  9492  001AA4  6E20               	movwf	___flmul@aexp,c
  9493  001AA6  D003               	goto	l1205
  9494  001AA8                     l1206:
  9495  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  9496  001AAA  B022               	btfsc	___flmul@prod,0,c
  9497  001AAC  D7F9               	goto	u4980
  9498  001AAE                     l1205:
  9499  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  9500  001AB0  5020               	movf	___flmul@aexp,w,c
  9501  001AB2  B4D8               	btfsc	status,2,c
  9502  001AB4  D01F               	goto	l4632
  9503  001AB6  0E01               	movlw	1
  9504  001AB8  2622               	addwf	___flmul@prod,f,c
  9505  001ABA  0E00               	movlw	0
  9506  001ABC  2223               	addwfc	___flmul@prod+1,f,c
  9507  001ABE  2224               	addwfc	___flmul@prod+2,f,c
  9508  001AC0  2225               	addwfc	___flmul@prod+3,f,c
  9509  001AC2  A025               	btfss	___flmul@prod+3,0,c
  9510  001AC4  D017               	goto	l4632
  9511  001AC6  C022  F017         	movff	___flmul@prod,??___flmul
  9512  001ACA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9513  001ACE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9514  001AD2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9515  001AD6  341A               	rlcf	??___flmul+3,w,c
  9516  001AD8  321A               	rrcf	??___flmul+3,f,c
  9517  001ADA  3219               	rrcf	??___flmul+2,f,c
  9518  001ADC  3218               	rrcf	??___flmul+1,f,c
  9519  001ADE  3217               	rrcf	??___flmul,f,c
  9520  001AE0  C017  F022         	movff	??___flmul,___flmul@prod
  9521  001AE4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9522  001AE8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9523  001AEC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9524  001AF0  4A26               	infsnz	___flmul@temp,f,c
  9525  001AF2  2A27               	incf	___flmul@temp+1,f,c
  9526  001AF4                     l4632:
  9527  001AF4  FFFF               	dw	65535	; assembler added errata NOP
  9528  001AF6  BE27               	btfsc	___flmul@temp+1,7,c
  9529  001AF8  D00D               	goto	l4636
  9530  001AFA  5027               	movf	___flmul@temp+1,w,c
  9531  001AFC  E103               	bnz	u5020
  9532  001AFE  2826               	incf	___flmul@temp,w,c
  9533  001B00  A0D8               	btfss	status,0,c
  9534  001B02  D008               	goto	l4636
  9535  001B04                     u5020:
  9536  001B04  0E00               	movlw	0
  9537  001B06  6E22               	movwf	___flmul@prod,c
  9538  001B08  0E00               	movlw	0
  9539  001B0A  6E23               	movwf	___flmul@prod+1,c
  9540  001B0C  0E80               	movlw	128
  9541  001B0E  6E24               	movwf	___flmul@prod+2,c
  9542  001B10  0E7F               	movlw	127
  9543  001B12  D023               	goto	L25
  9544  001B14                     l4636:
  9545  001B14  FFFF               	dw	65535	; assembler added errata NOP
  9546  001B16  BE27               	btfsc	___flmul@temp+1,7,c
  9547  001B18  D005               	goto	u5030
  9548  001B1A  5027               	movf	___flmul@temp+1,w,c
  9549  001B1C  E10F               	bnz	l1213
  9550  001B1E  0426               	decf	___flmul@temp,w,c
  9551  001B20  B0D8               	btfsc	status,0,c
  9552  001B22  D00C               	goto	l1213
  9553  001B24                     u5030:
  9554  001B24  FFFF               	dw	65535	; assembler added errata NOP
  9555  001B26  0E00               	movlw	0
  9556  001B28  6E22               	movwf	___flmul@prod,c
  9557  001B2A  0E00               	movlw	0
  9558  001B2C  6E23               	movwf	___flmul@prod+1,c
  9559  001B2E  0E00               	movlw	0
  9560  001B30  6E24               	movwf	___flmul@prod+2,c
  9561  001B32  0E00               	movlw	0
  9562  001B34  6E25               	movwf	___flmul@prod+3,c
  9563  001B36  0E00               	movlw	0
  9564  001B38  6E1B               	movwf	___flmul@sign,c
  9565  001B3A  D011               	goto	l4648
  9566  001B3C                     l1213:
  9567  001B3C  FFFF               	dw	65535	; assembler added errata NOP
  9568  001B3E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9569  001B42  0EFF               	movlw	255
  9570  001B44  1622               	andwf	___flmul@prod,f,c
  9571  001B46  0EFF               	movlw	255
  9572  001B48  1623               	andwf	___flmul@prod+1,f,c
  9573  001B4A  0E7F               	movlw	127
  9574  001B4C  1624               	andwf	___flmul@prod+2,f,c
  9575  001B4E  0E00               	movlw	0
  9576  001B50  1625               	andwf	___flmul@prod+3,f,c
  9577  001B52  B021               	btfsc	___flmul@bexp,0,c
  9578  001B54  8E24               	bsf	___flmul@prod+2,7,c
  9579  001B56  90D8               	bcf	status,0,c
  9580  001B58  3021               	rrcf	___flmul@bexp,w,c
  9581  001B5A                     L25:
  9582  001B5A  FFFF               	dw	65535	; assembler added errata NOP
  9583  001B5C  6E25               	movwf	___flmul@prod+3,c
  9584  001B5E                     l4648:
  9585  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  9586  001B60  501B               	movf	___flmul@sign,w,c
  9587  001B62  1225               	iorwf	___flmul@prod+3,f,c
  9588  001B64  C022  F00F         	movff	___flmul@prod,?___flmul
  9589  001B68  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9590  001B6C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9591  001B70  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9592  001B74                     l1200:
  9593  001B74  FFFF               	dw	65535	; assembler added errata NOP
  9594  001B76  0012               	return		;funcret
  9595  001B78  FFFF               	dw	65535	; errata NOP
  9596  001B7A                     __end_of___flmul:
  9597                           	opt callstack 0
  9598                           
  9599 ;; *************** function _ADC_Read *****************
  9600 ;; Defined at:
  9601 ;;		line 28 in file "adc.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  channel         1    wreg     unsigned char 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  channel         1    4[COMRAM] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  2    0[COMRAM] unsigned int 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9615 ;;      Params:         2       0       0       0       0       0       0
  9616 ;;      Locals:         1       0       0       0       0       0       0
  9617 ;;      Temps:          2       0       0       0       0       0       0
  9618 ;;      Totals:         5       0       0       0       0       0       0
  9619 ;;Total ram usage:        5 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    2
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_get_temp
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text44
  9630  0036E4                     __ptext44:
  9631                           	opt callstack 0
  9632  0036E4                     _ADC_Read:
  9633                           	opt callstack 0
  9634  0036E4  FFFF               	dw	65535	; assembler added errata NOP
  9635                           
  9636                           ;incstack = 0
  9637                           ;ADC_Read@channel stored from wreg
  9638  0036E6  6E05               	movwf	ADC_Read@channel,c
  9639                           
  9640                           ;adc.c: 29:  if(channel > 7)
  9641  0036E8  0E07               	movlw	7
  9642  0036EA  6405               	cpfsgt	ADC_Read@channel,c
  9643  0036EC  D005               	goto	l4514
  9644                           
  9645                           ;adc.c: 30:  return 0;
  9646  0036EE  0E00               	movlw	0
  9647  0036F0  6E02               	movwf	?_ADC_Read+1,c
  9648  0036F2  0E00               	movlw	0
  9649  0036F4  6E01               	movwf	?_ADC_Read,c
  9650  0036F6  D01D               	goto	l305
  9651  0036F8                     l4514:
  9652  0036F8  FFFF               	dw	65535	; assembler added errata NOP
  9653                           
  9654                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9655  0036FA  0EC5               	movlw	197
  9656  0036FC  16C2               	andwf	4034,f,c	;volatile
  9657                           
  9658                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9659  0036FE  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9660  003700  42E8               	rrncf	wreg,f,c
  9661  003702  0BF8               	andlw	248
  9662  003704  12C2               	iorwf	4034,f,c	;volatile
  9663                           
  9664                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9665  003706  0E08               	movlw	8
  9666  003708  6E03               	movwf	??_ADC_Read& (0+255),c
  9667  00370A  0ECB               	movlw	203
  9668  00370C                     u5417:
  9669  00370C  FFFF               	dw	65535	; errata NOP
  9670  00370E  2EE8               	decfsz	wreg,f,c
  9671  003710  D7FD               	bra	u5417
  9672  003712  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9673  003714  D7FB               	bra	u5417
  9674  003716  D000               	nop2	
  9675                           
  9676                           ;adc.c: 34:  GO_nDONE = 1;
  9677  003718  84C2               	bsf	4034,2,c	;volatile
  9678  00371A                     l306:
  9679  00371A  FFFF               	dw	65535	; assembler added errata NOP
  9680  00371C  B4C2               	btfsc	4034,2,c	;volatile
  9681  00371E  D7FD               	goto	l306
  9682                           
  9683                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9684  003720  50C4               	movf	4036,w,c	;volatile
  9685  003722  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9686  003724  6A03               	clrf	??_ADC_Read& (0+255),c
  9687  003726  50C3               	movf	4035,w,c	;volatile
  9688  003728  2403               	addwf	??_ADC_Read,w,c
  9689  00372A  6E01               	movwf	?_ADC_Read,c
  9690  00372C  0E00               	movlw	0
  9691  00372E  2004               	addwfc	??_ADC_Read+1,w,c
  9692  003730  6E02               	movwf	?_ADC_Read+1,c
  9693  003732                     l305:
  9694  003732  FFFF               	dw	65535	; assembler added errata NOP
  9695  003734  0012               	return		;funcret
  9696  003736  FFFF               	dw	65535	; errata NOP
  9697  003738                     __end_of_ADC_Read:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function _ADC_Init *****************
  9701 ;; Defined at:
  9702 ;;		line 23 in file "adc.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9716 ;;      Params:         0       0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0
  9719 ;;      Totals:         0       0       0       0       0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    2
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_get_temp
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text45
  9731  003B3A                     __ptext45:
  9732                           	opt callstack 0
  9733  003B3A                     _ADC_Init:
  9734                           	opt callstack 0
  9735  003B3A  FFFF               	dw	65535	; assembler added errata NOP
  9736                           
  9737                           ;adc.c: 24:  ADCON0 = 0x81;
  9738                           
  9739                           ;incstack = 0
  9740  003B3C  0E81               	movlw	129
  9741  003B3E  6EC2               	movwf	4034,c	;volatile
  9742                           
  9743                           ;adc.c: 25:  ADCON1 = 0x80;
  9744  003B40  0E80               	movlw	128
  9745  003B42  6EC1               	movwf	4033,c	;volatile
  9746  003B44  0012               	return		;funcret
  9747  003B46  FFFF               	dw	65535	; errata NOP
  9748  003B48                     __end_of_ADC_Init:
  9749                           	opt callstack 0
  9750                           
  9751 ;; *************** function ___fltol *****************
  9752 ;; Defined at:
  9753 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  f1              4   61[COMRAM] void 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  exp1            1   70[COMRAM] unsigned char 
  9758 ;;  sign1           1   69[COMRAM] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  4   61[COMRAM] long 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9768 ;;      Params:         4       0       0       0       0       0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0
  9770 ;;      Temps:          4       0       0       0       0       0       0
  9771 ;;      Totals:        10       0       0       0       0       0       0
  9772 ;;Total ram usage:       10 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    2
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text46
  9783  002FFE                     __ptext46:
  9784                           	opt callstack 0
  9785  002FFE                     ___fltol:
  9786                           	opt callstack 0
  9787  002FFE  FFFF               	dw	65535	; assembler added errata NOP
  9788                           
  9789                           ;incstack = 0
  9790  003000  3440               	rlcf	___fltol@f1+2,w,c
  9791  003002  3441               	rlcf	___fltol@f1+3,w,c
  9792  003004  6E47               	movwf	___fltol@exp1,c
  9793  003006  5047               	movf	___fltol@exp1,w,c
  9794  003008  A4D8               	btfss	status,2,c
  9795  00300A  D00A               	goto	l4886
  9796  00300C                     u5200:
  9797  00300C  FFFF               	dw	65535	; assembler added errata NOP
  9798  00300E  0E00               	movlw	0
  9799  003010  6E3E               	movwf	?___fltol,c
  9800  003012  0E00               	movlw	0
  9801  003014  6E3F               	movwf	?___fltol+1,c
  9802  003016  0E00               	movlw	0
  9803  003018  6E40               	movwf	?___fltol+2,c
  9804  00301A  0E00               	movlw	0
  9805  00301C  6E41               	movwf	?___fltol+3,c
  9806  00301E  D056               	goto	l879
  9807  003020                     l4886:
  9808  003020  FFFF               	dw	65535	; assembler added errata NOP
  9809  003022  C03E  F042         	movff	___fltol@f1,??___fltol
  9810  003026  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  9811  00302A  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  9812  00302E  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  9813  003032  0E20               	movlw	32
  9814  003034  D006               	goto	u5210
  9815  003036                     u5215:
  9816  003036  FFFF               	dw	65535	; assembler added errata NOP
  9817  003038  90D8               	bcf	status,0,c
  9818  00303A  3245               	rrcf	??___fltol+3,f,c
  9819  00303C  3244               	rrcf	??___fltol+2,f,c
  9820  00303E  3243               	rrcf	??___fltol+1,f,c
  9821  003040  3242               	rrcf	??___fltol,f,c
  9822  003042                     u5210:
  9823  003042  FFFF               	dw	65535	; assembler added errata NOP
  9824  003044  2EE8               	decfsz	wreg,f,c
  9825  003046  D7F7               	goto	u5215
  9826  003048  5042               	movf	??___fltol,w,c
  9827  00304A  6E46               	movwf	___fltol@sign1,c
  9828  00304C  8E40               	bsf	___fltol@f1+2,7,c
  9829  00304E  0EFF               	movlw	255
  9830  003050  163E               	andwf	___fltol@f1,f,c
  9831  003052  0EFF               	movlw	255
  9832  003054  163F               	andwf	___fltol@f1+1,f,c
  9833  003056  0EFF               	movlw	255
  9834  003058  1640               	andwf	___fltol@f1+2,f,c
  9835  00305A  0E00               	movlw	0
  9836  00305C  1641               	andwf	___fltol@f1+3,f,c
  9837  00305E  0E96               	movlw	150
  9838  003060  5E47               	subwf	___fltol@exp1,f,c
  9839  003062  AE47               	btfss	___fltol@exp1,7,c
  9840  003064  D00E               	goto	l4906
  9841  003066  5047               	movf	___fltol@exp1,w,c
  9842  003068  0A80               	xorlw	128
  9843  00306A  0F97               	addlw	151
  9844  00306C  A0D8               	btfss	status,0,c
  9845  00306E  D7CE               	goto	u5200
  9846  003070                     l4902:
  9847  003070  FFFF               	dw	65535	; assembler added errata NOP
  9848  003072  90D8               	bcf	status,0,c
  9849  003074  3241               	rrcf	___fltol@f1+3,f,c
  9850  003076  3240               	rrcf	___fltol@f1+2,f,c
  9851  003078  323F               	rrcf	___fltol@f1+1,f,c
  9852  00307A  323E               	rrcf	___fltol@f1,f,c
  9853  00307C  3E47               	incfsz	___fltol@exp1,f,c
  9854  00307E  D7F8               	goto	l4902
  9855  003080  D010               	goto	u5250
  9856  003082                     l4906:
  9857  003082  FFFF               	dw	65535	; assembler added errata NOP
  9858  003084  0E1F               	movlw	31
  9859  003086  6447               	cpfsgt	___fltol@exp1,c
  9860  003088  D008               	goto	l4914
  9861  00308A  D7C0               	goto	u5200
  9862  00308C                     l4912:
  9863  00308C  FFFF               	dw	65535	; assembler added errata NOP
  9864  00308E  90D8               	bcf	status,0,c
  9865  003090  363E               	rlcf	___fltol@f1,f,c
  9866  003092  363F               	rlcf	___fltol@f1+1,f,c
  9867  003094  3640               	rlcf	___fltol@f1+2,f,c
  9868  003096  3641               	rlcf	___fltol@f1+3,f,c
  9869  003098  0647               	decf	___fltol@exp1,f,c
  9870  00309A                     l4914:
  9871  00309A  FFFF               	dw	65535	; assembler added errata NOP
  9872  00309C  5047               	movf	___fltol@exp1,w,c
  9873  00309E  A4D8               	btfss	status,2,c
  9874  0030A0  D7F5               	goto	l4912
  9875  0030A2                     u5250:
  9876  0030A2  FFFF               	dw	65535	; assembler added errata NOP
  9877  0030A4  5046               	movf	___fltol@sign1,w,c
  9878  0030A6  B4D8               	btfsc	status,2,c
  9879  0030A8  D008               	goto	l4920
  9880  0030AA  1E41               	comf	___fltol@f1+3,f,c
  9881  0030AC  1E40               	comf	___fltol@f1+2,f,c
  9882  0030AE  1E3F               	comf	___fltol@f1+1,f,c
  9883  0030B0  6C3E               	negf	___fltol@f1,c
  9884  0030B2  0E00               	movlw	0
  9885  0030B4  223F               	addwfc	___fltol@f1+1,f,c
  9886  0030B6  2240               	addwfc	___fltol@f1+2,f,c
  9887  0030B8  2241               	addwfc	___fltol@f1+3,f,c
  9888  0030BA                     l4920:
  9889  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  9890  0030BC  C03E  F03E         	movff	___fltol@f1,?___fltol
  9891  0030C0  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  9892  0030C4  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  9893  0030C8  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  9894  0030CC                     l879:
  9895  0030CC  FFFF               	dw	65535	; assembler added errata NOP
  9896  0030CE  0012               	return		;funcret
  9897  0030D0  FFFF               	dw	65535	; errata NOP
  9898  0030D2                     __end_of___fltol:
  9899                           	opt callstack 0
  9900                           
  9901 ;; *************** function _UARTSendString *****************
  9902 ;; Defined at:
  9903 ;;		line 65 in file "serial.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  c               2   32[BANK0 ] PTR unsigned char 
  9906 ;;		 -> STR_4(3), STR_3(9), int_to_char@result(10), 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  i               2   36[BANK0 ] int 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9918 ;;      Params:         0       2       0       0       0       0       0
  9919 ;;      Locals:         0       2       0       0       0       0       0
  9920 ;;      Temps:          0       2       0       0       0       0       0
  9921 ;;      Totals:         0       6       0       0       0       0       0
  9922 ;;Total ram usage:        6 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:    3
  9925 ;; This function calls:
  9926 ;;		_UARTSendChar
  9927 ;; This function is called by:
  9928 ;;		_main
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text47
  9933  0034FA                     __ptext47:
  9934                           	opt callstack 0
  9935  0034FA                     _UARTSendString:
  9936                           	opt callstack 0
  9937  0034FA  FFFF               	dw	65535	; assembler added errata NOP
  9938                           
  9939                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  9940                           
  9941                           ;incstack = 0
  9942  0034FC  9E94               	bcf	3988,7,c	;volatile
  9943                           
  9944                           ;serial.c: 67:   int i = 0;
  9945  0034FE  0E00               	movlw	0
  9946  003500  0100               	movlb	0	; () banked
  9947  003502  6FE0               	movwf	(UARTSendString@i+1)& (0+255),b
  9948  003504  0E00               	movlw	0
  9949  003506  6FDF               	movwf	UARTSendString@i& (0+255),b
  9950                           
  9951                           ;serial.c: 68:   while (c[i] != '\0') {
  9952  003508  D01E               	goto	l4874
  9953  00350A                     l4870:
  9954  00350A  FFFF               	dw	65535	; assembler added errata NOP
  9955                           
  9956                           ;serial.c: 69:     UARTSendChar(c[i]);
  9957  00350C  0100               	movlb	0	; () banked
  9958  00350E  51DF               	movf	UARTSendString@i& (0+255),w,b
  9959  003510  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9960  003512  6FDD               	movwf	??_UARTSendString& (0+255),b
  9961  003514  51E0               	movf	(UARTSendString@i+1)& (0+255),w,b
  9962  003516  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9963  003518  6FDE               	movwf	(??_UARTSendString+1)& (0+255),b
  9964  00351A  C0DD  FFF6         	movff	??_UARTSendString,tblptrl
  9965  00351E  C0DE  FFF7         	movff	??_UARTSendString+1,tblptrh
  9966  003522  6AF8               	clrf	tblptru,c
  9967  003524  0E05               	movlw	(high __ramtop+-1)
  9968  003526  64F7               	cpfsgt	tblptrh,c
  9969  003528  D004               	bra	u5177
  9970  00352A  0008               	tblrd		*
  9971  00352C  FFFF               	dw	65535	; errata NOP
  9972  00352E  50F5               	movf	tablat,w,c
  9973  003530  D005               	bra	u5170
  9974  003532                     u5177:
  9975  003532  CFF6 FFE9          	movff	tblptrl,fsr0l
  9976  003536  CFF7 FFEA          	movff	tblptrh,fsr0h
  9977  00353A  50EF               	movf	indf0,w,c
  9978  00353C                     u5170:
  9979  00353C  EC8A  F01D         	call	_UARTSendChar
  9980                           
  9981                           ;serial.c: 70:     i++;
  9982  003540  0100               	movlb	0	; () banked
  9983  003542  4BDF               	infsnz	UARTSendString@i& (0+255),f,b
  9984  003544  2BE0               	incf	(UARTSendString@i+1)& (0+255),f,b
  9985  003546                     l4874:
  9986  003546  FFFF               	dw	65535	; assembler added errata NOP
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;serial.c: 68:   while (c[i] != '\0') {
  9990  003548  51DF               	movf	UARTSendString@i& (0+255),w,b
  9991  00354A  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9992  00354C  6FDD               	movwf	??_UARTSendString& (0+255),b
  9993  00354E  51E0               	movf	(UARTSendString@i+1)& (0+255),w,b
  9994  003550  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9995  003552  6FDE               	movwf	(??_UARTSendString+1)& (0+255),b
  9996  003554  C0DD  FFF6         	movff	??_UARTSendString,tblptrl
  9997  003558  C0DE  FFF7         	movff	??_UARTSendString+1,tblptrh
  9998  00355C  6AF8               	clrf	tblptru,c
  9999  00355E  0E05               	movlw	(high __ramtop+-1)
 10000  003560  64F7               	cpfsgt	tblptrh,c
 10001  003562  D004               	bra	u5187
 10002  003564  0008               	tblrd		*
 10003  003566  FFFF               	dw	65535	; errata NOP
 10004  003568  50F5               	movf	tablat,w,c
 10005  00356A  D005               	bra	u5180
 10006  00356C                     u5187:
 10007  00356C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10008  003570  CFF7 FFEA          	movff	tblptrh,fsr0h
 10009  003574  50EF               	movf	indf0,w,c
 10010  003576                     u5180:
 10011  003576  0900               	iorlw	0
 10012  003578  B4D8               	btfsc	status,2,c
 10013  00357A  0012               	return		;funcret
 10014  00357C  FFFF               	dw	65535	; assembler added errata NOP
 10015  00357E  D7C5               	goto	l4870
 10016  003580  FFFF               	dw	65535	; errata NOP
 10017  003582                     __end_of_UARTSendString:
 10018                           	opt callstack 0
 10019                           
 10020 ;; *************** function _UARTRecieveChar *****************
 10021 ;; Defined at:
 10022 ;;		line 53 in file "serial.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      unsigned char 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10036 ;;      Params:         0       0       0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0       0       0
 10038 ;;      Temps:          1       0       0       0       0       0       0
 10039 ;;      Totals:         1       0       0       0       0       0       0
 10040 ;;Total ram usage:        1 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    2
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_main
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text48
 10051  0039DE                     __ptext48:
 10052                           	opt callstack 0
 10053  0039DE                     _UARTRecieveChar:
 10054                           	opt callstack 0
 10055  0039DE  FFFF               	dw	65535	; assembler added errata NOP
 10056                           
 10057                           ;serial.c: 54:   while (RCIF == 0) {
 10058                           
 10059                           ;incstack = 0
 10060  0039E0  D00E               	goto	l4844
 10061  0039E2                     l209:
 10062  0039E2  FFFF               	dw	65535	; assembler added errata NOP
 10063                           
 10064                           ;serial.c: 55:     if (RCSTAbits.OERR == 1) {
 10065  0039E4  A2AB               	btfss	4011,1,c	;volatile
 10066  0039E6  D00B               	goto	l4844
 10067                           
 10068                           ;serial.c: 56:       RCSTAbits.OERR = 0;
 10069  0039E8  92AB               	bcf	4011,1,c	;volatile
 10070                           
 10071                           ;serial.c: 57:       RCSTAbits.CREN = 0;
 10072  0039EA  98AB               	bcf	4011,4,c	;volatile
 10073                           
 10074                           ;serial.c: 58:       RCSTAbits.CREN = 1;
 10075  0039EC  88AB               	bsf	4011,4,c	;volatile
 10076                           
 10077                           ;serial.c: 59:       _delay((unsigned long)((10)*(16000000/4000.0)));
 10078  0039EE  0E27               	movlw	39
 10079  0039F0  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 10080  0039F2  0EFC               	movlw	252
 10081  0039F4                     u5427:
 10082  0039F4  FFFF               	dw	65535	; errata NOP
 10083  0039F6  2EE8               	decfsz	wreg,f,c
 10084  0039F8  D7FD               	bra	u5427
 10085  0039FA  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 10086  0039FC  D7FB               	bra	u5427
 10087  0039FE                     l4844:
 10088  0039FE  FFFF               	dw	65535	; assembler added errata NOP
 10089                           
 10090                           ;serial.c: 54:   while (RCIF == 0) {
 10091  003A00  AA9E               	btfss	3998,5,c	;volatile
 10092  003A02  D7EF               	goto	l209
 10093                           
 10094                           ;serial.c: 62:   return RCREG1;
 10095  003A04  50AE               	movf	4014,w,c	;volatile
 10096  003A06  0012               	return		;funcret
 10097  003A08  FFFF               	dw	65535	; errata NOP
 10098  003A0A                     __end_of_UARTRecieveChar:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _UARTNewLine *****************
 10102 ;; Defined at:
 10103 ;;		line 41 in file "serial.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;		None
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;		None
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10117 ;;      Params:         0       0       0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    3
 10124 ;; This function calls:
 10125 ;;		_UARTSendChar
 10126 ;; This function is called by:
 10127 ;;		_main
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text49
 10132  003B00                     __ptext49:
 10133                           	opt callstack 0
 10134  003B00                     _UARTNewLine:
 10135                           	opt callstack 0
 10136  003B00  FFFF               	dw	65535	; assembler added errata NOP
 10137                           
 10138                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
 10139                           
 10140                           ;incstack = 0
 10141  003B02  9E94               	bcf	3988,7,c	;volatile
 10142                           
 10143                           ;serial.c: 43:   UARTSendChar(0x0a);
 10144  003B04  0E0A               	movlw	10
 10145  003B06  EC8A  F01D         	call	_UARTSendChar
 10146                           
 10147                           ;serial.c: 44:   UARTSendChar(0x0d);
 10148  003B0A  0E0D               	movlw	13
 10149  003B0C  EC8A  F01D         	call	_UARTSendChar
 10150  003B10  0012               	return		;funcret
 10151  003B12  FFFF               	dw	65535	; errata NOP
 10152  003B14                     __end_of_UARTNewLine:
 10153                           	opt callstack 0
 10154                           
 10155 ;; *************** function _UARTSendChar *****************
 10156 ;; Defined at:
 10157 ;;		line 47 in file "serial.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  c               1    wreg     unsigned char 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  c               1    0[COMRAM] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      void 
 10164 ;; Registers used:
 10165 ;;		wreg
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10171 ;;      Params:         0       0       0       0       0       0       0
 10172 ;;      Locals:         1       0       0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0
 10174 ;;      Totals:         1       0       0       0       0       0       0
 10175 ;;Total ram usage:        1 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    2
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_UARTNewLine
 10182 ;;		_UARTSendString
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text50
 10187  003B14                     __ptext50:
 10188                           	opt callstack 0
 10189  003B14                     _UARTSendChar:
 10190                           	opt callstack 0
 10191  003B14  FFFF               	dw	65535	; assembler added errata NOP
 10192                           
 10193                           ;incstack = 0
 10194                           ;UARTSendChar@c stored from wreg
 10195  003B16  6E01               	movwf	UARTSendChar@c,c
 10196                           
 10197                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
 10198  003B18  9E94               	bcf	3988,7,c	;volatile
 10199  003B1A                     l202:
 10200  003B1A  FFFF               	dw	65535	; assembler added errata NOP
 10201  003B1C  A2AC               	btfss	4012,1,c	;volatile
 10202  003B1E  D7FD               	goto	l202
 10203                           
 10204                           ;serial.c: 50:   TXREG = c;
 10205  003B20  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 10206  003B24  0012               	return		;funcret
 10207  003B26  FFFF               	dw	65535	; errata NOP
 10208  003B28                     __end_of_UARTSendChar:
 10209                           	opt callstack 0
 10210                           
 10211 ;; *************** function _Timer0_StartTimer *****************
 10212 ;; Defined at:
 10213 ;;		line 21 in file "timer.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  2  113[None  ] int 
 10220 ;; Registers used:
 10221 ;;		None
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10227 ;;      Params:         0       0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0       0
 10230 ;;      Totals:         0       0       0       0       0       0       0
 10231 ;;Total ram usage:        0 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    2
 10234 ;; This function calls:
 10235 ;;		Nothing
 10236 ;; This function is called by:
 10237 ;;		_main
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text51
 10242  003B52                     __ptext51:
 10243                           	opt callstack 0
 10244  003B52                     _Timer0_StartTimer:
 10245                           	opt callstack 0
 10246  003B52  FFFF               	dw	65535	; assembler added errata NOP
 10247                           
 10248                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10249                           
 10250                           ;incstack = 0
 10251  003B54  8ED5               	bsf	4053,7,c	;volatile
 10252                           
 10253                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
 10254  003B56  0012               	return		;funcret
 10255  003B58  FFFF               	dw	65535	; errata NOP
 10256  003B5A                     __end_of_Timer0_StartTimer:
 10257                           	opt callstack 0
 10258                           
 10259 ;; *************** function _Timer0_Init *****************
 10260 ;; Defined at:
 10261 ;;		line 8 in file "timer.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;		None
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;		None
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  1    wreg      void 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10275 ;;      Params:         0       0       0       0       0       0       0
 10276 ;;      Locals:         0       0       0       0       0       0       0
 10277 ;;      Temps:          0       0       0       0       0       0       0
 10278 ;;      Totals:         0       0       0       0       0       0       0
 10279 ;;Total ram usage:        0 bytes
 10280 ;; Hardware stack levels used:    1
 10281 ;; Hardware stack levels required when called:    2
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_main
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text52
 10290  003A34                     __ptext52:
 10291                           	opt callstack 0
 10292  003A34                     _Timer0_Init:
 10293                           	opt callstack 0
 10294  003A34  FFFF               	dw	65535	; assembler added errata NOP
 10295                           
 10296                           ;timer.c: 9:  time_ms = 0;
 10297                           
 10298                           ;incstack = 0
 10299  003A36  0E00               	movlw	0
 10300  003A38  0100               	movlb	0	; () banked
 10301  003A3A  6F89               	movwf	_time_ms& (0+255),b	;volatile
 10302  003A3C  0E00               	movlw	0
 10303  003A3E  6F8A               	movwf	(_time_ms+1)& (0+255),b	;volatile
 10304  003A40  0E00               	movlw	0
 10305  003A42  6F8B               	movwf	(_time_ms+2)& (0+255),b	;volatile
 10306  003A44  0E00               	movlw	0
 10307  003A46  6F8C               	movwf	(_time_ms+3)& (0+255),b	;volatile
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 10311  003A48  9CD5               	bcf	4053,6,c	;volatile
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;timer.c: 11:  TMR0H = 0xFF;
 10315  003A4A  68D7               	setf	4055,c	;volatile
 10316                           
 10317                           ;timer.c: 12:  TMR0L = 0x34;
 10318  003A4C  0E34               	movlw	52
 10319  003A4E  6ED6               	movwf	4054,c	;volatile
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 10323  003A50  94F2               	bcf	4082,2,c	;volatile
 10324                           
 10325                           ;timer.c: 14:  T0CON = 0x00;
 10326  003A52  0E00               	movlw	0
 10327  003A54  6ED5               	movwf	4053,c	;volatile
 10328                           
 10329                           ; BSR set to: 0
 10330  003A56  0012               	return		;funcret
 10331  003A58  FFFF               	dw	65535	; errata NOP
 10332  003A5A                     __end_of_Timer0_Init:
 10333                           	opt callstack 0
 10334                           
 10335 ;; *************** function _timingISR *****************
 10336 ;; Defined at:
 10337 ;;		line 31 in file "timer.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;		None
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;		None
 10342 ;; Return value:  Size  Location     Type
 10343 ;;                  1    wreg      void 
 10344 ;; Registers used:
 10345 ;;		wreg, status,2, status,0, cstack
 10346 ;; Tracked objects:
 10347 ;;		On entry : 0/0
 10348 ;;		On exit  : 0/0
 10349 ;;		Unchanged: 0/0
 10350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10351 ;;      Params:         0       0       0       0       0       0       0
 10352 ;;      Locals:         0       0       0       0       0       0       0
 10353 ;;      Temps:          0       0       0       0       0       0       0
 10354 ;;      Totals:         0       0       0       0       0       0       0
 10355 ;;Total ram usage:        0 bytes
 10356 ;; Hardware stack levels used:    1
 10357 ;; Hardware stack levels required when called:    1
 10358 ;; This function calls:
 10359 ;;		i2_Timer0_StartTimer
 10360 ;; This function is called by:
 10361 ;;		Interrupt level 2
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	intcode
 10366  000008                     __pintcode:
 10367                           	opt callstack 0
 10368  000008                     _timingISR:
 10369                           	opt callstack 0
 10370  000008  FFFF               	dw	65535	; assembler added errata NOP
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;incstack = 0
 10374  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10375                           
 10376                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 10377  00000C  B4F2               	btfsc	4082,2,c	;volatile
 10378  00000E  AAF2               	btfss	4082,5,c	;volatile
 10379  000010  D00D               	goto	i2l267
 10380                           
 10381                           ;timer.c: 33:   TMR0IF = 0;
 10382  000012  94F2               	bcf	4082,2,c	;volatile
 10383                           
 10384                           ;timer.c: 34:   time_ms++;
 10385  000014  0E01               	movlw	1
 10386  000016  0100               	movlb	0	; () banked
 10387  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
 10388  00001A  0E00               	movlw	0
 10389  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 10390  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 10391  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;timer.c: 35:   TMR0H = 0xFF;
 10395  000022  68D7               	setf	4055,c	;volatile
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;timer.c: 36:   TMR0L = 0x34;
 10399  000024  0E34               	movlw	52
 10400  000026  6ED6               	movwf	4054,c	;volatile
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;timer.c: 37:   Timer0_StartTimer();
 10404  000028  ECAD  F01D         	call	i2_Timer0_StartTimer	;wreg free
 10405  00002C                     i2l267:
 10406  00002C  FFFF               	dw	65535	; assembler added errata NOP
 10407  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10408  000030  0011               	retfie		f
 10409  000032  FFFF               	dw	65535	; errata NOP
 10410  000034                     __end_of_timingISR:
 10411                           	opt callstack 0
 10412                           
 10413 ;; *************** function i2_Timer0_StartTimer *****************
 10414 ;; Defined at:
 10415 ;;		line 21 in file "timer.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  2    0[None  ] int 
 10422 ;; Registers used:
 10423 ;;		None
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10429 ;;      Params:         0       0       0       0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0
 10432 ;;      Totals:         0       0       0       0       0       0       0
 10433 ;;Total ram usage:        0 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_timingISR
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text54
 10443  003B5A                     __ptext54:
 10444                           	opt callstack 0
 10445  003B5A                     i2_Timer0_StartTimer:
 10446                           	opt callstack 0
 10447  003B5A  FFFF               	dw	65535	; assembler added errata NOP
 10448                           
 10449                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10450                           
 10451                           ;incstack = 0
 10452  003B5C  8ED5               	bsf	4053,7,c	;volatile
 10453                           
 10454                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 10455  003B5E  0012               	return		;funcret
 10456  003B60  FFFF               	dw	65535	; errata NOP
 10457  003B62                     __end_ofi2_Timer0_StartTimer:
 10458                           	opt callstack 0
 10459                           
 10460                           	psect	rparam
 10461  0000                     
 10462                           	psect	temp
 10463  00007F                     btemp:
 10464                           	opt callstack 0
 10465  00007F                     	ds	1
 10466  0000                     int$flags	set	btemp
 10467  0000                     wtemp8	set	btemp+1
 10468  0000                     ttemp5	set	btemp+1
 10469  0000                     ttemp6	set	btemp+4
 10470  0000                     ttemp7	set	btemp+8
 10471                           tosu	equ	0xFFF
 10472                           tosh	equ	0xFFE
 10473                           tosl	equ	0xFFD
 10474                           stkptr	equ	0xFFC
 10475                           pclatu	equ	0xFFB
 10476                           pclath	equ	0xFFA
 10477                           pcl	equ	0xFF9
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           indf0	equ	0xFEF
 10485                           postinc0	equ	0xFEE
 10486                           postdec0	equ	0xFED
 10487                           preinc0	equ	0xFEC
 10488                           plusw0	equ	0xFEB
 10489                           fsr0h	equ	0xFEA
 10490                           fsr0l	equ	0xFE9
 10491                           wreg	equ	0xFE8
 10492                           indf1	equ	0xFE7
 10493                           postinc1	equ	0xFE6
 10494                           postdec1	equ	0xFE5
 10495                           preinc1	equ	0xFE4
 10496                           plusw1	equ	0xFE3
 10497                           fsr1h	equ	0xFE2
 10498                           fsr1l	equ	0xFE1
 10499                           bsr	equ	0xFE0
 10500                           indf2	equ	0xFDF
 10501                           postinc2	equ	0xFDE
 10502                           postdec2	equ	0xFDD
 10503                           preinc2	equ	0xFDC
 10504                           plusw2	equ	0xFDB
 10505                           fsr2h	equ	0xFDA
 10506                           fsr2l	equ	0xFD9
 10507                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     51     117
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[3]), STR_121(CODE[3]), 
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[4]), STR_103(CODE[4]), 
		 -> STR_98(CODE[3]), STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[4]), 
		 -> STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[3]), STR_16(CODE[3]), STR_11(CODE[4]), STR_7(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[3]), STR_121(CODE[3]), 
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[4]), STR_103(CODE[4]), 
		 -> STR_98(CODE[3]), STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[4]), 
		 -> STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[3]), STR_16(CODE[3]), STR_11(CODE[4]), STR_7(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1725_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[3]), STR_3(CODE[9]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   55469
                                             38 BANK0     13    13      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                     _set_duty_cycle
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     167
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49030
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       6     4      2     416
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
   _set_duty_cycle
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     33      75       4       91.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      14        0.0%
DATA                 0      0      F3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 27 22:58:57 2019

                                          main@stored_temp 00E5  
                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                              __CFG_OSC$HS 000000  
                                                      l202 3B1A  
                                                      l209 39E2  
                                                      l305 3732  
                                                      l306 371A  
                                                      l411 271A  
                                                      l409 2710  
                                                      l450 23AC  
                                                      l429 2D10  
                                                      l525 17F2  
                                                      l366 33FC  
                                                      l463 214A  
                                                      l384 1F3C  
                                                      l448 23A2  
                                                      l465 2154  
                                                      l386 1F46  
                                                      l879 30CC  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 38C8  
                                                      _lcd 0080  
                                                      _pad 33C6  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                              main@address 00E7  
                                         ?_UARTRecieveChar 0001  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             __CFG_LVP$OFF 000000  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     l1020 2FD8  
                                                     l1030 32F4  
                                                     l1111 1CD8  
                                                     l1200 1B74  
                                                     l1112 1CB0  
                                                     ?_abs 0013  
                                                     l1213 1B3C  
                                                     l1205 1AAE  
                                                     l1206 1AA8  
                                                     l1127 1DA4  
                                                     l1119 1EB8  
                                                     l1136 1E1C  
                                                     l1240 2CA0  
                                                     l1137 1E16  
                                                     l1403 3688  
                                                     l1244 2C14  
                                                     l1260 38FE  
                                                     l1237 2B8A  
                                                     l1334 33C0  
                                                     l1257 38F4  
                                                     l1291 29E8  
                                                     l1196 1884  
                                                     l3310 3336  
                                                     l4030 0EDE  
                                                     l4022 0E6A  
                                                     l4014 0DEA  
                                                     l1288 29DE  
                                                     l3320 381A  
                                                     l4120 12D8  
                                                     l4104 1282  
                                                     l4040 0F5C  
                                                     l3330 39BE  
                                                     l3402 2A1C  
                                                     l4050 0FA0  
                                                     l3324 3832  
                                                     l1388 3258  
                                                     l3500 327A  
                                                     l4212 1798  
                                                     l4060 0FCA  
                                                     l4044 0F8C  
                                                     l4036 0F50  
                                                     l3350 3408  
                                                     l3414 2A6E  
                                                     l3430 2AFC  
                                                     l3502 3290  
                                                     l1398 367E  
                                                     l4206 1758  
                                                     l4150 14D6  
                                                     l4070 105C  
                                                     l4222 17BA  
                                                     l3520 3802  
                                                     l3328 39B8  
                                                     l3344 33E2  
                                                     l3416 2A84  
                                                     l3408 2A46  
                                                     l4216 17A6  
                                                     l4136 13CC  
                                                     l4128 1358  
                                                     l4080 10C8  
                                                     l5040 25A8  
                                                     l3354 3422  
                                                     l3530 36B2  
                                                     l3434 2B24  
                                                     l3426 2AE4  
                                                     l3450 2E3E  
                                                     l4242 3598  
                                                     l5034 259E  
                                                     l5026 257E  
                                                     l4404 1DF2  
                                                     l4324 1C5E  
                                                     l3348 33F2  
                                                     l3508 32DC  
                                                     l4164 1558  
                                                     l4244 35C0  
                                                     l5028 2584  
                                                     l4262 1BAE  
                                                     l3358 3452  
                                                     l3470 2EFC  
                                                     l3462 2EBC  
                                                     l3454 2E5A  
                                                     l3446 2E18  
                                                     l3614 275A  
                                                     l3702 23E4  
                                                     l4432 1E8E  
                                                     l4424 1E64  
                                                     l4360 1D10  
                                                     l4336 1CC0  
                                                     l3528 36A4  
                                                     l3456 2E70  
                                                     l3544 1F1A  
                                                     l3480 2F4A  
                                                     l3712 24D2  
                                                     l4192 168E  
                                                     l4096 11D4  
                                                     l4088 1162  
                                                     l5056 2612  
                                                     l4514 36F8  
                                                     l4362 1D16  
                                                     l4370 1D2A  
                                                     l4338 1CC6  
                                                     l4282 1BF6  
                                                     l4258 1BA8  
                                                     l3810 2900  
                                                     l3466 2ED4  
                                                     l3562 1F74  
                                                     l3626 27E6  
                                                     l3482 2F60  
                                                     l4178 15B8  
                                                     l4612 1A6E  
                                                     l4540 183E  
                                                     l4436 1E98  
                                                     l4380 1D92  
                                                     l3820 2976  
                                                     l3812 290A  
                                                     l3804 28EE  
                                                     l3572 206E  
                                                     l3644 285A  
                                                     l3492 2FC0  
                                                     l5076 26D4  
                                                     l4606 1A4E  
                                                     l4438 1E9C  
                                                     l4294 1C20  
                                                     l4286 1BFC  
                                                     l4702 2C8E  
                                                     l4454 348E  
                                                     l3814 2912  
                                                     l3558 1F64  
                                                     l3670 2D44  
                                                     l3750 21BE  
                                                     l3742 219A  
                                                     l3902 07A2  
                                                     ?_pad 0011  
                                                     l4632 1AF4  
                                                     l4536 1826  
                                                     l4456 349E  
                                                     l3816 293E  
                                                     l3592 20DE  
                                                     l3680 2D8E  
                                                     l3656 2CD2  
                                                     l3840 31C8  
                                                     l3736 216A  
                                                     l3904 07C2  
                                                     l4554 186C  
                                                     l4538 182C  
                                                     l4458 34EC  
                                                     l3674 2D66  
                                                     l3666 2D2A  
                                                     l3842 31D8  
                                                     l3922 08AA  
                                                     l3906 07D2  
                                                     l4636 1B14  
                                                     l4564 18A6  
                                                     l4556 1872  
                                                     l4388 1DCC  
                                                     l3596 20FA  
                                                     l3684 2DAC  
                                                     l3764 2258  
                                                     l3772 22D4  
                                                     l3940 0994  
                                                     l3924 08CA  
                                                     l4902 3070  
                                                     l4398 1DE4  
                                                     l3950 0A74  
                                                     l3926 08DA  
                                                     l4920 30BA  
                                                     l4912 308C  
                                                     l4648 1B5E  
                                                     l4672 2BBC  
                                                     l3688 2DC6  
                                                     l3960 0ADE  
                                                     l3880 06D4  
                                                     l3872 06C4  
                                                     l3864 06A4  
                                                     l4914 309A  
                                                     l4906 3082  
                                                     l4674 2BC4  
                                                     l4666 2B9C  
                                                     l3794 289C  
                                                     l3970 0B5A  
                                                     l3946 0A3A  
                                                     l3866 06AA  
                                                     l3890 0730  
                                                     l4844 39FE  
                                                     l4684 2C3C  
                                                     l4676 2BD2  
                                                     l3796 28A2  
                                                     l3788 2352  
                                                     l3980 0C3A  
                                                     l3884 06DC  
                                                     l3876 06CC  
                                                     l3868 06BC  
                                                     l4870 350A  
                                                     l4686 2C4A  
                                                     l4678 2BFA  
                                                     l3990 0CE4  
                                                     l3888 06EA  
                                                     l4874 3546  
                                                     l4886 3020  
                                                     l3998 0D94  
                                                     STR_1 0626  
                                                     STR_2 0654  
                                                     STR_3 0601  
                                                     STR_4 0651  
                                                     STR_5 060E  
                                                     STR_7 060E  
                                                     STR_9 0612  
                                                     u3020 2E76  
                                                     u3100 3296  
                                                     u4000 09EE  
                                                     u3130 37FE  
                                                     u3210 1F5C  
                                                     u3051 2F2A  
                                                     u3220 207E  
                                                     u4020 0ACE  
                                                     u3150 1EE8  
                                                     u3310 2704  
                                                     u3070 2F66  
                                                     u3240 20A0  
                                                     u3160 1EEC  
                                                     u3320 27C0  
                                                     u4040 0B18  
                                                     u3241 209E  
                                                     u3401 2CB2  
                                                     u3250 20B0  
                                                     u3330 27F6  
                                                     u4130 0E98  
                                                     u5020 1B04  
                                                     u3260 20B6  
                                                     u3500 2396  
                                                     u4060 0BB4  
                                                     u3325 27AC  
                                                     u5030 1B24  
                                                     u5110 2C56  
                                                     u2710 332C  
                                                     u3190 1F30  
                                                     u3350 2818  
                                                     u4310 1592  
                                                     u5200 300C  
                                                     u3280 20C6  
                                                     u3360 2828  
                                                     u3600 21F4  
                                                     u4080 0C94  
                                                     u5210 3042  
                                                     u2730 3378  
                                                     u3370 282E  
                                                     u3450 2D5A  
                                                     u3530 24FE  
                                                     u3610 21F8  
                                                     u4330 1612  
                                                     u4250 1386  
                                                     u3531 24FC  
                                                     u2900 399E  
                                                     u2820 38D8  
                                                     u3540 250E  
                                                     u3700 2318  
                                                     u4180 108A  
                                                     u2910 39A2  
                                                     u3550 2514  
                                                     u2830 3966  
                                                     u3710 231E  
                                                     u3630 2232  
                                                     u4350 16E8  
                                                     u4270 1426  
                                                     u5215 3036  
                                                     u4520 1CE2  
                                                     u3480 2DDC  
                                                     u2840 396A  
                                                     u2760 392E  
                                                     u3640 2236  
                                                     u5170 353C  
                                                     u5250 30A2  
                                                     u4610 1DB8  
                                                     u2850 38BA  
                                                     u2770 3932  
                                                     u3570 213E  
                                                     u4290 1530  
                                                     u5180 3576  
                                                     u3740 28EA  
                                                     u2860 38BE  
                                                     u3660 22AE  
                                                     u3900 080E  
                                                     u2941 2A4E  
                                                     u4470 1C82  
                                                     u2870 3662  
                                                     u3670 22E6  
                                                     u3590 21BA  
                                                     u3910 0812  
                                                     u5350 260A  
                                                     u5407 26A8  
                                                     u4480 1C92  
                                                     u3760 29AA  
                                                     u2960 2A8A  
                                                     u3840 322E  
                                                     u2880 3666  
                                                     u3920 0820  
                                                     u5360 26D0  
                                                     u5177 3532  
                                                     u5417 370C  
                                                     u3665 229A  
                                                     u4730 1E72  
                                                     u4650 1DF8  
                                                     u4490 1C96  
                                                     u3770 29AE  
                                                     u3690 2308  
                                                     u5427 39F4  
                                                     u5187 356C  
                                                     u3691 2306  
                                                     _RCIF 007CF5  
                                                     u4670 1E0E  
                                                     u3950 0916  
                                                     u3960 091A  
                                                     u4930 1892  
                                                     u3970 0928  
                                                     u4940 1A0E  
                                                     u5397 25E2  
                                                     u4945 1A02  
                                                     u4980 1AA0  
                                         ??_initialize_PWM 0003  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 009B  
                                                     _flag 009A  
                                       initialize_PWM@freq 0001  
                                                     _atoi 2888  
                                                     _ctoa 368E  
                                                     _main 2542  
                                                     _dtoa 1EBE  
                                                     _prec 0093  
                                                     _otoa 26EE  
                                                     _nout 008F  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr0h 000FEA  
                                                     fsr1h 000FE2  
                                                     indf0 000FEF  
                                                     fsr2h 000FDA  
                                                     fsr0l 000FE9  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2CA6  
                                                     btemp 007F  
                                                     _utoa 2380  
                                                     _xtoa 2128  
                                         __end_of_ADC_Init 3B48  
                                         __end_of_ADC_Read 3738  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                        int_to_char@result 00CD  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                            __CFG_OSCS$OFF 000000  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2B4A  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1EBE  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 2F22  
                                                    STR_11 0612  
                                                    STR_20 0613  
                                                    STR_23 0630  
                                                    STR_16 060F  
                                                    STR_32 0633  
                                                    STR_25 0630  
                                                    STR_41 061A  
                                                    STR_34 0633  
                                                    STR_43 061A  
                                                    STR_51 0642  
                                                    STR_27 0636  
                                                    STR_36 0639  
                                                    STR_29 0636  
                                                    STR_53 0642  
                                                    STR_61 0616  
                                                    STR_38 0639  
                                                    STR_63 0616  
                                                    STR_71 063C  
                                                    STR_48 061B  
                                                    STR_56 0645  
                                                    STR_73 063C  
                                                    STR_81 061E  
                                                    STR_58 0645  
                                                    STR_83 061E  
                                                    STR_68 0617  
                                                    STR_76 063F  
                                                    STR_93 0627  
                                                    STR_78 063F  
                                                    STR_88 061F  
                                                    STR_96 0648  
                                          __end_of___flmul 1B7A  
                                                    STR_98 0648  
                                                    ?_otoa 001C  
                                          __end_of___flsub 3782  
                                          __end_of___fltol 30D2  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 2FFE  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 331A  
                                                    i2l267 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 3B3A  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 3470  
                                                    _flags 0095  
                                                    _getch 3B48  
                                                    _errno 008D  
                                                    _fputc 331A  
                                          __end_of_isalpha 38C8  
                                                    _fputs 380E  
                                          __end_of_isdigit 39AC  
                                          __end_of_read_op 3AC0  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0091  
                                                    ctoa@c 001E  
                                                    _putch 3B6A  
                                                    ctoa@w 001F  
                                                    main@i 00E9  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 393C  
                                          __end_of_isspace 380E  
                                          __end_of_isupper 3974  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 3638  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 325E  
                                          __end_of_toupper 368E  
                                         ___lodiv@dividend 0001  
                                             _toupper$1879 000D  
                                          __initialization 3850  
                                           int_to_char@num 007A  
                                             __end_of_atoi 29EE  
                                             __end_of_ctoa 36E4  
                                             __end_of_main 26EE  
                                             __end_of_dtoa 2128  
                                             __end_of_otoa 2888  
                                             __end_of_stoa 2DEA  
                                             __end_of_utoa 2542  
                                             __end_of_xtoa 2380  
                                       int_to_char@the_num 00D7  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00E1  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   STR_101 0622  
                                                   ?_fputs 000A  
                                                   STR_103 0622  
                                                   STR_112 0623  
                                                   STR_121 064B  
                                                   STR_105 060A  
                                                   STR_130 064E  
                                                   _ADRESH 000FC4  
                                                   STR_107 060A  
                                                   STR_123 062A  
                                                   STR_116 060B  
                                                   STR_132 062D  
                                                   STR_125 062A  
                                                   STR_134 062D  
                                                   _ADRESL 000FC3  
                                                   STR_119 064B  
                                                   STR_128 064E  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _TMR2IE 007CE9  
                                           __CFG_WDTPS$128 000000  
                                                   _TMR2IP 007CF9  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2CA6  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0002  
                                      i2_Timer0_StartTimer 3B5A  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 319C  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3A0A  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 3876  
                                  __size_of_UARTSendString 0088  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 39AC  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 35E2  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3A7C  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 387E  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 3B62  
                                            __end_of_fgetc 34FA  
                                            __end_of_getch 3B52  
                                            __end_of_fputc 33C6  
                                            __end_of_fputs 3850  
                                      __end_of_Timer0_Init 3A5A  
                                            __end_of_putch 3B70  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                  __size_of_set_duty_cycle 0022  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 0080  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3AEC  
                                            _initialize_TX 3AD8  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                                  ?_strlen 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                 __size_of_UARTRecieveChar 002C  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 3A34  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 29EE  
                                                  ___fladd 1B7A  
                                                  ___aomod 2DEA  
                                                  ___flmul 17F8  
                                                  ___flsub 3738  
                                                  ___fltol 2FFE  
                                          __size_of___wmul 002A  
                                                  ___lodiv 2F22  
                                                  ___lomod 325E  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 34FA  
                                                  __pcinit 3850  
                                                  __ramtop 0600  
                                                  __ptext0 2542  
                                                  __ptext1 3A5A  
                                                  __ptext2 3A7C  
                                                  __ptext3 3A9E  
                                                  __ptext4 3782  
                                                  __ptext5 35E2  
                                                  __ptext6 3582  
                                                  __ptext7 0658  
                                                  __ptext8 2128  
                                                  __ptext9 3638  
                                                ?_write_op 0001  
                                                  _getchar 3B28  
                                                _T0CONbits 000FD5  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 388C  
                                                  _isdigit 3974  
                                                  _read_op 3A9E  
                                               ??___xxtofl 0005  
                                                  _islower 3904  
                                                  _isspace 37CA  
                                                  _isupper 393C  
                                                  fgetc@fp 0003  
                                                  _time_ms 0089  
                                                  atoi@neg 000E  
                                                  _sprintf 35E2  
                                               ??_get_temp 0034  
                                                  _strncmp 319C  
                                                  _toupper 3638  
                                     end_of_initialization 387E  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                        __end_of_timingISR 0034  
                                        __end_of_vfpfcnvrt 17F8  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 3582  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                  __size_of_initialize_PWM 0018  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                           _set_duty_cycle 3A7C  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 3B52  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00DB  
                                        ??_UARTRecieveChar 0001  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 3A34  
                                              vfpfcnvrt@vp 0067  
                                   __end_of_set_duty_cycle 3A9E  
                                __end_of_Timer0_StartTimer 3B5A  
                                           __end_of_strlen 39DE  
                                      start_initialization 3850  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 3904  
                                              __end_of_pad 3470  
                                       set_duty_cycle@mask 0003  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00EE  
                                     __end_of_UARTSendChar 3B28  
                              __end_ofi2_Timer0_StartTimer 3B62  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                          ?_set_duty_cycle 0001  
                                    set_duty_cycle@lower_2 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 007E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 00BB  
                                    set_duty_cycle@upper_8 0002  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1722 0010  
                                                _atoi$1723 0014  
                                                _atoi$1724 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1076 002E  
                                            UARTSendChar@c 0001  
                                           _initialize_PWM 3AC0  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                                 _ADC_Init 3B3A  
                                                 _ADC_Read 36E4  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 00BB  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00DB  
                                          UARTSendString@i 00DF  
                                   __end_of_initialize_PWM 3AD8  
                                      __end_of_int_to_char 37CA  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 0085  
                                                _timingISR 0008  
                                                _vfpfcnvrt 0658  
                                                _xtoa$1112 002F  
                                                _xtoa$1113 0031  
                                                main@i_335 00EC  
                                        ___wmul@multiplier 0001  
                                                main@input 00EB  
                                             _isspace$1759 0007  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 3864  
                                          _UARTRecieveChar 39DE  
                                         ??_UARTSendString 00DD  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3B14  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 00BD  
                                                 ___xxtofl 2B4A  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 3904  
                                                 __ptext11 393C  
                                                 __ptext20 38C8  
                                                 __ptext12 388C  
                                                 __ptext21 2DEA  
                                                 __ptext13 2380  
                                                 __ptext30 37CA  
                                                 __ptext22 29EE  
                                                 __ptext14 325E  
                                                 __ptext31 3974  
                                                 __ptext23 368E  
                                                 __ptext15 2F22  
                                                 __ptext40 2B4A  
                                                 __ptext32 3A0A  
                                                 __ptext24 33C6  
                                                 __ptext16 319C  
                                                 __ptext41 3738  
                                                 __ptext33 3B28  
                                                 __ptext25 39AC  
                                                 __ptext17 2CA6  
                                                 __ptext50 3B14  
                                                 __ptext42 1B7A  
                                                 __ptext34 3470  
                                                 __ptext26 380E  
                                                 __ptext18 26EE  
                                                 __ptext51 3B52  
                                                 __ptext43 17F8  
                                                 __ptext35 3B48  
                                                 __ptext27 331A  
                                                 __ptext19 1EBE  
                                                 __ptext52 3A34  
                                                 __ptext44 36E4  
                                                 __ptext36 3AD8  
                                                 __ptext28 3B6A  
                                                 __ptext45 3B3A  
                                                 __ptext37 3AEC  
                                                 __ptext29 2888  
                                                 __ptext54 3B5A  
                                                 __ptext46 2FFE  
                                                 __ptext38 3AC0  
                                                 __ptext47 34FA  
                                                 __ptext39 30D2  
                                                 __ptext48 39DE  
                                                 __ptext49 3B00  
                                         __size_of_isupper 0038  
                                                 _get_temp 30D2  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                          _interval_events 0097  
                                             _UARTSendChar 3B14  
                                              _int_to_char 3782  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 01AC  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3B00  
                                    __end_of_initialize_TX 3AEC  
                                                stoa@F1152 00EE  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                           read_op@address 0001  
                                         ??_set_duty_cycle 0002  
                                                 _ungetbuf 0099  
                                                 _ungetcnt 007E  
                                                 _vfprintf 3582  
                                                 main@temp 00E3  
                                         ___aomod@dividend 0001  
                                                 _write_op 3A5A  
                                           _vfpfcnvrt$1127 005B  
                                           _vfpfcnvrt$1128 005D  
                                               _INTCONbits 000FF2  
                                  __end_of_UARTRecieveChar 3A0A  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 3B70  
                                                sprintf@ap 00CB  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                              _UARTNewLine 3B00  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 00C5  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 00BB  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                             ___aomod@sign 0012  
