

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 27 04:33:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F452 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  002F36                     __pidataBANK0:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for stoa@F1152
    99  002F36  28                 	db	40
   100  002F37  6E                 	db	110
   101  002F38  75                 	db	117
   102  002F39  6C                 	db	108
   103  002F3A  6C                 	db	108
   104  002F3B  29                 	db	41
   105  002F3C  00                 	db	0
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TRISA	set	3986
   108  0000                     _PORTA	set	3968
   109  0000                     _PORTD	set	3971
   110  0000                     _PORTB	set	3969
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISD	set	3989
   113  0000                     _TRISC	set	3988
   114  0000                     _RC0	set	31760
   115  0000                     _RB5	set	31757
   116  0000                     _CCP1CON	set	4029
   117  0000                     _CCPR1L	set	4030
   118  0000                     _PR2	set	4043
   119  0000                     _T2CON	set	4042
   120  0000                     _ADRESL	set	4035
   121  0000                     _ADRESH	set	4036
   122  0000                     _ADCON0	set	4034
   123  0000                     _SSPBUF	set	4041
   124  0000                     _SSPCON1	set	4038
   125  0000                     _SSPSTATbits	set	4039
   126  0000                     _ADCON1	set	4033
   127  0000                     _RCREG1	set	4014
   128  0000                     _TXREG	set	4013
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _RCSTA	set	4011
   131  0000                     _SPBRG	set	4015
   132  0000                     _TXSTAbits	set	4012
   133  0000                     _RCONbits	set	4048
   134  0000                     _GO_nDONE	set	32274
   135  0000                     _RCIF	set	31989
   136  0000                     _T0CON	set	4053
   137  0000                     _TMR0L	set	4054
   138  0000                     _TMR0H	set	4055
   139  0000                     _T0CONbits	set	4053
   140  0000                     _INTCON2bits	set	4081
   141  0000                     _INTCONbits	set	4082
   142  0000                     _TMR0IE	set	32661
   143  0000                     _TMR0IF	set	32658
   144                           
   145                           	psect	smallconst
   146  000600                     __psmallconst:
   147                           	opt callstack 0
   148  000600  00                 	db	0
   149  000601                     STR_103:
   150  000601  68                 	db	104	;'h'
   151  000602  68                 	db	104	;'h'
   152  000603  58                 	db	88	;'X'
   153  000604  00                 	db	0
   154  000605                     STR_3:
   155  000605  68                 	db	104	;'h'
   156  000606  68                 	db	104	;'h'
   157  000607  64                 	db	100	;'d'
   158  000608  00                 	db	0
   159  000609                     STR_7:
   160  000609  68                 	db	104	;'h'
   161  00060A  68                 	db	104	;'h'
   162  00060B  69                 	db	105	;'i'
   163  00060C  00                 	db	0
   164  00060D                     STR_59:
   165  00060D  68                 	db	104	;'h'
   166  00060E  68                 	db	104	;'h'
   167  00060F  6E                 	db	110	;'n'
   168  000610  00                 	db	0
   169  000611                     STR_39:
   170  000611  68                 	db	104	;'h'
   171  000612  68                 	db	104	;'h'
   172  000613  6F                 	db	111	;'o'
   173  000614  00                 	db	0
   174  000615                     STR_79:
   175  000615  68                 	db	104	;'h'
   176  000616  68                 	db	104	;'h'
   177  000617  75                 	db	117	;'u'
   178  000618  00                 	db	0
   179  000619                     STR_99:
   180  000619  68                 	db	104	;'h'
   181  00061A  68                 	db	104	;'h'
   182  00061B  78                 	db	120	;'x'
   183  00061C  00                 	db	0
   184  00061D                     STR_1:
   185  00061D  25                 	db	37
   186  00061E  6C                 	db	108	;'l'
   187  00061F  75                 	db	117	;'u'
   188  000620  00                 	db	0
   189  000621                     STR_121:
   190  000621  6C                 	db	108	;'l'
   191  000622  58                 	db	88	;'X'
   192  000623  00                 	db	0
   193  000624                     STR_130:
   194  000624  7A                 	db	122	;'z'
   195  000625  58                 	db	88	;'X'
   196  000626  00                 	db	0
   197  000627                     STR_21:
   198  000627  6C                 	db	108	;'l'
   199  000628  64                 	db	100	;'d'
   200  000629  00                 	db	0
   201  00062A                     STR_30:
   202  00062A  7A                 	db	122	;'z'
   203  00062B  64                 	db	100	;'d'
   204  00062C  00                 	db	0
   205  00062D                     STR_25:
   206  00062D  6C                 	db	108	;'l'
   207  00062E  69                 	db	105	;'i'
   208  00062F  00                 	db	0
   209  000630                     STR_34:
   210  000630  7A                 	db	122	;'z'
   211  000631  69                 	db	105	;'i'
   212  000632  00                 	db	0
   213  000633                     STR_69:
   214  000633  6C                 	db	108	;'l'
   215  000634  6E                 	db	110	;'n'
   216  000635  00                 	db	0
   217  000636                     STR_74:
   218  000636  7A                 	db	122	;'z'
   219  000637  6E                 	db	110	;'n'
   220  000638  00                 	db	0
   221  000639                     STR_49:
   222  000639  6C                 	db	108	;'l'
   223  00063A  6F                 	db	111	;'o'
   224  00063B  00                 	db	0
   225  00063C                     STR_54:
   226  00063C  7A                 	db	122	;'z'
   227  00063D  6F                 	db	111	;'o'
   228  00063E  00                 	db	0
   229  00063F                     STR_94:
   230  00063F  7A                 	db	122	;'z'
   231  000640  75                 	db	117	;'u'
   232  000641  00                 	db	0
   233  000642                     STR_117:
   234  000642  6C                 	db	108	;'l'
   235  000643  78                 	db	120	;'x'
   236  000644  00                 	db	0
   237  000645                     STR_126:
   238  000645  7A                 	db	122	;'z'
   239  000646  78                 	db	120	;'x'
   240  000647  00                 	db	0
   241  000648  25                 	db	37
   242  000649  64                 	db	100	;'d'
   243  00064A  00                 	db	0
   244  0000                     
   245                           ; #config settings
   246  00064B  00                 	db	0	; dummy byte at the end
   247  0000                     
   248                           	psect	cinit
   249  002CC6                     __pcinit:
   250                           	opt callstack 0
   251  002CC6                     start_initialization:
   252                           	opt callstack 0
   253  002CC6                     __initialization:
   254                           	opt callstack 0
   255                           
   256                           ; Initialize objects allocated to BANK0 (7 bytes)
   257                           ; load TBLPTR registers with __pidataBANK0
   258  002CC6  0E36               	movlw	low __pidataBANK0
   259  002CC8  6EF6               	movwf	tblptrl,c
   260  002CCA  0E2F               	movlw	high __pidataBANK0
   261  002CCC  6EF7               	movwf	tblptrh,c
   262  002CCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   263  002CD0  6EF8               	movwf	tblptru,c
   264  002CD2  EE00  F0E1         	lfsr	0,__pdataBANK0
   265  002CD6  EE10 F007          	lfsr	1,7
   266  002CDA                     copy_data0:
   267  002CDA  0009               	tblrd		*+
   268  002CDC  CFF5 FFEE          	movff	tablat,postinc0
   269  002CE0  50E5               	movf	postdec1,w,c
   270  002CE2  50E1               	movf	fsr1l,w,c
   271  002CE4  E1FA               	bnz	copy_data0
   272                           
   273                           ; Clear objects allocated to BANK0 (59 bytes)
   274  002CE6  EE00  F080         	lfsr	0,__pbssBANK0
   275  002CEA  0E3B               	movlw	59
   276  002CEC                     clear_0:
   277  002CEC  6AEE               	clrf	postinc0,c
   278  002CEE  06E8               	decf	wreg,f,c
   279  002CF0  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to COMRAM (1 bytes)
   282  002CF2  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   283  002CF4                     end_of_initialization:
   284                           	opt callstack 0
   285  002CF4                     __end_of__initialization:
   286                           	opt callstack 0
   287  002CF4  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288  002CF6  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  002CF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  002CFA  6EF8               	movwf	tblptru,c
   291  002CFC  0100               	movlb	0
   292  002CFE  EF12  F013         	goto	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMRAM
   295  00007E                     __pbssCOMRAM:
   296                           	opt callstack 0
   297  00007E                     _ungetcnt:
   298                           	opt callstack 0
   299  00007E                     	ds	1
   300                           
   301                           	psect	bssBANK0
   302  000080                     __pbssBANK0:
   303                           	opt callstack 0
   304  000080                     _lcd:
   305                           	opt callstack 0
   306  000080                     	ds	5
   307  000085                     _time_ms_2:
   308                           	opt callstack 0
   309  000085                     	ds	4
   310  000089                     _time_ms:
   311                           	opt callstack 0
   312  000089                     	ds	4
   313  00008D                     _errno:
   314                           	opt callstack 0
   315  00008D                     	ds	2
   316  00008F                     _nout:
   317                           	opt callstack 0
   318  00008F                     	ds	2
   319  000091                     _width:
   320                           	opt callstack 0
   321  000091                     	ds	2
   322  000093                     _prec:
   323                           	opt callstack 0
   324  000093                     	ds	2
   325  000095                     _flags:
   326                           	opt callstack 0
   327  000095                     	ds	2
   328  000097                     _interval_events:
   329                           	opt callstack 0
   330  000097                     	ds	2
   331  000099                     	ds	1
   332  00009A                     _flag:
   333                           	opt callstack 0
   334  00009A                     	ds	1
   335  00009B                     _dbuf:
   336                           	opt callstack 0
   337  00009B                     	ds	32
   338                           
   339                           	psect	dataBANK0
   340  0000E1                     __pdataBANK0:
   341                           	opt callstack 0
   342  0000E1                     stoa@F1152:
   343                           	opt callstack 0
   344  0000E1                     	ds	7
   345                           
   346                           	psect	cstackBANK0
   347  0000BB                     __pcstackBANK0:
   348                           	opt callstack 0
   349  0000BB                     ?_sprintf:
   350                           	opt callstack 0
   351  0000BB                     sprintf@s:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x0
   355  0000BB                     	ds	2
   356  0000BD                     sprintf@fmt:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  0000BD                     	ds	8
   361  0000C5                     sprintf@f:
   362                           	opt callstack 0
   363                           
   364                           ; 6 bytes @ 0xA
   365  0000C5                     	ds	6
   366  0000CB                     sprintf@ap:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x10
   370  0000CB                     	ds	2
   371  0000CD                     int_to_char@result:
   372                           	opt callstack 0
   373                           
   374                           ; 10 bytes @ 0x12
   375  0000CD                     	ds	10
   376  0000D7                     int_to_char@the_num:
   377                           	opt callstack 0
   378                           
   379                           ; 4 bytes @ 0x1C
   380  0000D7                     	ds	4
   381  0000DB                     UARTSendString@c:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x20
   385  0000DB                     	ds	2
   386  0000DD                     UARTSendString@i:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x22
   390  0000DD                     	ds	2
   391  0000DF                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x24
   394  0000DF                     	ds	2
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	opt callstack 0
   399  000001                     ?_strlen:
   400                           	opt callstack 0
   401  000001                     ?_isupper:
   402                           	opt callstack 0
   403  000001                     ?_isalpha:
   404                           	opt callstack 0
   405  000001                     ?_isdigit:
   406                           	opt callstack 0
   407  000001                     ?_strncmp:
   408                           	opt callstack 0
   409  000001                     ?_isspace:
   410                           	opt callstack 0
   411  000001                     ?_getch:
   412                           	opt callstack 0
   413  000001                     ?_islower:
   414                           	opt callstack 0
   415  000001                     ?___wmul:
   416                           	opt callstack 0
   417  000001                     ?___aodiv:
   418                           	opt callstack 0
   419  000001                     ?___aomod:
   420                           	opt callstack 0
   421  000001                     ?___lodiv:
   422                           	opt callstack 0
   423  000001                     ?___lomod:
   424                           	opt callstack 0
   425  000001                     write_op@data:
   426                           	opt callstack 0
   427  000001                     read_op@address:
   428                           	opt callstack 0
   429  000001                     UARTSendChar@c:
   430                           	opt callstack 0
   431  000001                     ___wmul@multiplier:
   432                           	opt callstack 0
   433  000001                     isalpha@c:
   434                           	opt callstack 0
   435  000001                     isdigit@c:
   436                           	opt callstack 0
   437  000001                     isspace@c:
   438                           	opt callstack 0
   439  000001                     isupper@c:
   440                           	opt callstack 0
   441  000001                     fputc@c:
   442                           	opt callstack 0
   443  000001                     strlen@s:
   444                           	opt callstack 0
   445  000001                     strncmp@_l:
   446                           	opt callstack 0
   447  000001                     islower@c:
   448                           	opt callstack 0
   449  000001                     ___aodiv@dividend:
   450                           	opt callstack 0
   451  000001                     ___aomod@dividend:
   452                           	opt callstack 0
   453  000001                     ___lodiv@dividend:
   454                           	opt callstack 0
   455  000001                     ___lomod@dividend:
   456                           	opt callstack 0
   457                           
   458                           ; 8 bytes @ 0x0
   459  000001                     	ds	1
   460  000002                     write_op@address:
   461                           	opt callstack 0
   462  000002                     read_op@result:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x1
   466  000002                     	ds	1
   467  000003                     ??_isupper:
   468  000003                     ??_isalpha:
   469  000003                     ??_isdigit:
   470  000003                     ??_isspace:
   471  000003                     ??_islower:
   472  000003                     ?_fgetc:
   473                           	opt callstack 0
   474  000003                     ___wmul@multiplicand:
   475                           	opt callstack 0
   476  000003                     fputc@fp:
   477                           	opt callstack 0
   478  000003                     fgetc@fp:
   479                           	opt callstack 0
   480  000003                     strlen@a:
   481                           	opt callstack 0
   482  000003                     strncmp@_r:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  000003                     	ds	2
   487  000005                     ??_fputc:
   488  000005                     ??_fgetc:
   489  000005                     ___wmul@product:
   490                           	opt callstack 0
   491  000005                     strncmp@n:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x4
   495  000005                     	ds	2
   496  000007                     ??_strncmp:
   497  000007                     ?_toupper:
   498                           	opt callstack 0
   499  000007                     _isspace$1733:
   500                           	opt callstack 0
   501  000007                     toupper@c:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x6
   505  000007                     	ds	1
   506  000008                     ?_atoi:
   507                           	opt callstack 0
   508  000008                     atoi@s:
   509                           	opt callstack 0
   510  000008                     strncmp@l:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x7
   514  000008                     	ds	1
   515  000009                     ??_toupper:
   516  000009                     ___aodiv@divisor:
   517                           	opt callstack 0
   518  000009                     ___aomod@divisor:
   519                           	opt callstack 0
   520  000009                     ___lodiv@divisor:
   521                           	opt callstack 0
   522  000009                     ___lomod@divisor:
   523                           	opt callstack 0
   524                           
   525                           ; 8 bytes @ 0x8
   526  000009                     	ds	1
   527  00000A                     ??_atoi:
   528  00000A                     ?_stoa:
   529                           	opt callstack 0
   530  00000A                     stoa@fp:
   531                           	opt callstack 0
   532  00000A                     fputs@s:
   533                           	opt callstack 0
   534  00000A                     fgetc@c:
   535                           	opt callstack 0
   536  00000A                     strncmp@r:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x9
   540  00000A                     	ds	2
   541  00000C                     stoa@s:
   542                           	opt callstack 0
   543  00000C                     fputs@fp:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0xB
   547  00000C                     	ds	1
   548  00000D                     _toupper$1853:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0xC
   552  00000D                     	ds	1
   553  00000E                     ??_stoa:
   554  00000E                     fputs@c:
   555                           	opt callstack 0
   556  00000E                     atoi@neg:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0xD
   560  00000E                     	ds	1
   561  00000F                     fputs@i:
   562                           	opt callstack 0
   563  00000F                     stoa@nuls:
   564                           	opt callstack 0
   565                           
   566                           ; 7 bytes @ 0xE
   567  00000F                     	ds	1
   568  000010                     _atoi$1696:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0xF
   572  000010                     	ds	1
   573  000011                     ?_pad:
   574                           	opt callstack 0
   575  000011                     ___aodiv@counter:
   576                           	opt callstack 0
   577  000011                     ___aomod@counter:
   578                           	opt callstack 0
   579  000011                     ___lomod@counter:
   580                           	opt callstack 0
   581  000011                     pad@fp:
   582                           	opt callstack 0
   583  000011                     ___lodiv@quotient:
   584                           	opt callstack 0
   585                           
   586                           ; 8 bytes @ 0x10
   587  000011                     	ds	1
   588  000012                     ___aodiv@sign:
   589                           	opt callstack 0
   590  000012                     ___aomod@sign:
   591                           	opt callstack 0
   592  000012                     _atoi$1698:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x11
   596  000012                     	ds	1
   597  000013                     ?_abs:
   598                           	opt callstack 0
   599  000013                     pad@buf:
   600                           	opt callstack 0
   601  000013                     abs@a:
   602                           	opt callstack 0
   603  000013                     ___aodiv@quotient:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x12
   607  000013                     	ds	1
   608  000014                     _atoi$1697:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x13
   612  000014                     	ds	1
   613  000015                     ??_abs:
   614  000015                     pad@p:
   615                           	opt callstack 0
   616  000015                     atoi@n:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x14
   620  000015                     	ds	1
   621  000016                     stoa@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x15
   625  000016                     	ds	1
   626  000017                     ??_pad:
   627                           
   628                           ; 1 bytes @ 0x16
   629  000017                     	ds	1
   630  000018                     pad@i:
   631                           	opt callstack 0
   632  000018                     stoa@w:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x17
   636  000018                     	ds	1
   637  000019                     ___lodiv@counter:
   638                           	opt callstack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  000019                     	ds	1
   642  00001A                     pad@w:
   643                           	opt callstack 0
   644  00001A                     stoa@cp:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x19
   648  00001A                     	ds	2
   649  00001C                     ?_ctoa:
   650                           	opt callstack 0
   651  00001C                     ?_dtoa:
   652                           	opt callstack 0
   653  00001C                     ?_otoa:
   654                           	opt callstack 0
   655  00001C                     ?_utoa:
   656                           	opt callstack 0
   657  00001C                     ?_xtoa:
   658                           	opt callstack 0
   659  00001C                     ctoa@fp:
   660                           	opt callstack 0
   661  00001C                     dtoa@fp:
   662                           	opt callstack 0
   663  00001C                     otoa@fp:
   664                           	opt callstack 0
   665  00001C                     stoa@p:
   666                           	opt callstack 0
   667  00001C                     utoa@fp:
   668                           	opt callstack 0
   669  00001C                     xtoa@fp:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x1B
   673  00001C                     	ds	2
   674  00001E                     ctoa@c:
   675                           	opt callstack 0
   676  00001E                     stoa@l:
   677                           	opt callstack 0
   678  00001E                     dtoa@d:
   679                           	opt callstack 0
   680  00001E                     otoa@d:
   681                           	opt callstack 0
   682  00001E                     utoa@d:
   683                           	opt callstack 0
   684  00001E                     xtoa@d:
   685                           	opt callstack 0
   686                           
   687                           ; 8 bytes @ 0x1D
   688  00001E                     	ds	1
   689  00001F                     ctoa@w:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x1E
   693  00001F                     	ds	7
   694  000026                     ??_dtoa:
   695  000026                     ??_otoa:
   696  000026                     ??_utoa:
   697  000026                     xtoa@x:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x25
   701  000026                     	ds	1
   702  000027                     ??_xtoa:
   703                           
   704                           ; 1 bytes @ 0x26
   705  000027                     	ds	7
   706  00002E                     _dtoa$1050:
   707                           	opt callstack 0
   708  00002E                     otoa@p:
   709                           	opt callstack 0
   710  00002E                     utoa@p:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x2D
   714  00002E                     	ds	1
   715  00002F                     _xtoa$1086:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x2E
   719  00002F                     	ds	1
   720  000030                     dtoa@p:
   721                           	opt callstack 0
   722  000030                     otoa@t:
   723                           	opt callstack 0
   724  000030                     utoa@w:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x2F
   728  000030                     	ds	1
   729  000031                     _xtoa$1087:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x30
   733  000031                     	ds	1
   734  000032                     dtoa@w:
   735                           	opt callstack 0
   736  000032                     otoa@w:
   737                           	opt callstack 0
   738  000032                     utoa@n:
   739                           	opt callstack 0
   740                           
   741                           ; 8 bytes @ 0x31
   742  000032                     	ds	1
   743  000033                     xtoa@p:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x32
   747  000033                     	ds	1
   748  000034                     dtoa@s:
   749                           	opt callstack 0
   750  000034                     otoa@n:
   751                           	opt callstack 0
   752                           
   753                           ; 8 bytes @ 0x33
   754  000034                     	ds	1
   755  000035                     xtoa@w:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x34
   759  000035                     	ds	1
   760  000036                     dtoa@n:
   761                           	opt callstack 0
   762                           
   763                           ; 8 bytes @ 0x35
   764  000036                     	ds	1
   765  000037                     xtoa@n:
   766                           	opt callstack 0
   767                           
   768                           ; 8 bytes @ 0x36
   769  000037                     	ds	3
   770  00003A                     utoa@i:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x39
   774  00003A                     	ds	2
   775  00003C                     otoa@i:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x3B
   779  00003C                     	ds	2
   780  00003E                     dtoa@i:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x3D
   784  00003E                     	ds	1
   785  00003F                     xtoa@i:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x3E
   789  00003F                     	ds	2
   790  000041                     xtoa@c:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x40
   794  000041                     	ds	2
   795  000043                     ?_vfpfcnvrt:
   796                           	opt callstack 0
   797  000043                     vfpfcnvrt@fp:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x42
   801  000043                     	ds	2
   802  000045                     vfpfcnvrt@fmt:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x44
   806  000045                     	ds	2
   807  000047                     vfpfcnvrt@ap:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x46
   811  000047                     	ds	2
   812  000049                     ??_vfpfcnvrt:
   813                           
   814                           ; 1 bytes @ 0x48
   815  000049                     	ds	14
   816  000057                     vfpfcnvrt@cp:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x56
   820  000057                     	ds	2
   821  000059                     vfpfcnvrt@done:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x58
   825  000059                     	ds	2
   826  00005B                     _vfpfcnvrt$1101:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x5A
   830  00005B                     	ds	2
   831  00005D                     _vfpfcnvrt$1102:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x5C
   835  00005D                     	ds	2
   836  00005F                     vfpfcnvrt@ll:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x5E
   840  00005F                     	ds	8
   841  000067                     vfpfcnvrt@vp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x66
   845  000067                     	ds	2
   846  000069                     vfpfcnvrt@c:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x68
   850  000069                     	ds	1
   851  00006A                     vfpfcnvrt@llu:
   852                           	opt callstack 0
   853                           
   854                           ; 8 bytes @ 0x69
   855  00006A                     	ds	8
   856  000072                     ?_vfprintf:
   857                           	opt callstack 0
   858  000072                     vfprintf@fp:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x71
   862  000072                     	ds	2
   863  000074                     vfprintf@fmt:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x73
   867  000074                     	ds	2
   868  000076                     vfprintf@ap:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x75
   872  000076                     	ds	2
   873  000078                     vfprintf@cfmt:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x77
   877  000078                     	ds	2
   878  00007A                     ?_int_to_char:
   879                           	opt callstack 0
   880  00007A                     int_to_char@num:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0x79
   884  00007A                     	ds	4
   885  00007E                     
   886                           ; 1 bytes @ 0x7D
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 60 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0
   908 ;;      Temps:          0       2       0       0       0       0       0
   909 ;;      Totals:         0       2       0       0       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels required when called:   11
   912 ;; This function calls:
   913 ;;		_UARTNewLine
   914 ;;		_UARTSendString
   915 ;;		_initialize_RX
   916 ;;		_initialize_TX
   917 ;;		_int_to_char
   918 ;;		_read_op
   919 ;;		_write_op
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926  002624                     __ptext0:
   927                           	opt callstack 0
   928  002624                     _main:
   929                           	opt callstack 0
   930  002624  FFFF               	dw	65535	; assembler added errata NOP
   931                           
   932                           ;main.c: 61:  INTCONbits.RBIE = 0;
   933                           
   934                           ;incstack = 0
   935  002626  96F2               	bcf	4082,3,c	;volatile
   936                           
   937                           ;main.c: 62:  INTCON2bits.RBPU = 1;
   938  002628  8EF1               	bsf	4081,7,c	;volatile
   939                           
   940                           ;main.c: 64:  initialize_TX();
   941  00262A  EC61  F017         	call	_initialize_TX	;wreg free
   942                           
   943                           ;main.c: 65:  initialize_RX();
   944  00262E  EC6B  F017         	call	_initialize_RX	;wreg free
   945                           
   946                           ;main.c: 66:  TRISCbits.TRISC7 = 1;
   947  002632  8E94               	bsf	3988,7,c	;volatile
   948                           
   949                           ;main.c: 67:  TRISCbits.TRISC6 = 0;
   950  002634  9C94               	bcf	3988,6,c	;volatile
   951                           
   952                           ;main.c: 68:  TRISCbits.TRISC7 = 0;
   953  002636  9E94               	bcf	3988,7,c	;volatile
   954  002638                     l3910:
   955  002638  FFFF               	dw	65535	; assembler added errata NOP
   956                           
   957                           ;main.c: 70:    write_op(3, 3);
   958  00263A  0E03               	movlw	3
   959  00263C  6E01               	movwf	write_op@data,c
   960  00263E  0E03               	movlw	3
   961  002640  EC3F  F017         	call	_write_op
   962                           
   963                           ;main.c: 71:    _delay((unsigned long)((1000)*(16000000/4000.0)));
   964  002644  0E10               	movlw	16
   965  002646  0100               	movlb	0	; () banked
   966  002648  6FE0               	movwf	(??_main+1)& (0+255),b
   967  00264A  0E3B               	movlw	59
   968  00264C  6FDF               	movwf	??_main& (0+255),b
   969  00264E  0E99               	movlw	153
   970  002650                     u3737:
   971  002650  FFFF               	dw	65535	; errata NOP
   972  002652  2EE8               	decfsz	wreg,f,c
   973  002654  D7FD               	bra	u3737
   974  002656  2FDF               	decfsz	??_main& (0+255),f,b
   975  002658  D7FB               	bra	u3737
   976  00265A  2FE0               	decfsz	(??_main+1)& (0+255),f,b
   977  00265C  D7F9               	bra	u3737
   978  00265E  F000               	nop	
   979                           
   980                           ;main.c: 72:    write_op(2, 2);
   981  002660  0E02               	movlw	2
   982  002662  6E01               	movwf	write_op@data,c
   983  002664  0E02               	movlw	2
   984  002666  EC3F  F017         	call	_write_op
   985                           
   986                           ;main.c: 73:    UARTSendString(int_to_char(read_op(3)));
   987  00266A  0E03               	movlw	3
   988  00266C  EC50  F017         	call	_read_op
   989  002670  0100               	movlb	0	; () banked
   990  002672  6FDF               	movwf	??_main& (0+255),b
   991  002674  51DF               	movf	??_main& (0+255),w,b
   992  002676  6E7A               	movwf	int_to_char@num,c
   993  002678  6A7B               	clrf	int_to_char@num+1,c
   994  00267A  6A7C               	clrf	int_to_char@num+2,c
   995  00267C  6A7D               	clrf	int_to_char@num+3,c
   996  00267E  ECDA  F015         	call	_int_to_char	;wreg free
   997  002682  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
   998  002686  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
   999  00268A  EC20  F016         	call	_UARTSendString	;wreg free
  1000                           
  1001                           ;main.c: 74:    UARTNewLine();
  1002  00268E  EC75  F017         	call	_UARTNewLine	;wreg free
  1003                           
  1004                           ;main.c: 75:    _delay((unsigned long)((1000)*(16000000/4000.0)));
  1005  002692  0E10               	movlw	16
  1006  002694  0100               	movlb	0	; () banked
  1007  002696  6FE0               	movwf	(??_main+1)& (0+255),b
  1008  002698  0E3B               	movlw	59
  1009  00269A  6FDF               	movwf	??_main& (0+255),b
  1010  00269C  0E99               	movlw	153
  1011  00269E                     u3747:
  1012  00269E  FFFF               	dw	65535	; errata NOP
  1013  0026A0  2EE8               	decfsz	wreg,f,c
  1014  0026A2  D7FD               	bra	u3747
  1015  0026A4  2FDF               	decfsz	??_main& (0+255),f,b
  1016  0026A6  D7FB               	bra	u3747
  1017  0026A8  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1018  0026AA  D7F9               	bra	u3747
  1019  0026AC  F000               	nop	
  1020                           
  1021                           ;main.c: 76:   UARTSendString(int_to_char(read_op(2)));
  1022  0026AE  0E02               	movlw	2
  1023  0026B0  EC50  F017         	call	_read_op
  1024  0026B4  0100               	movlb	0	; () banked
  1025  0026B6  6FDF               	movwf	??_main& (0+255),b
  1026  0026B8  51DF               	movf	??_main& (0+255),w,b
  1027  0026BA  6E7A               	movwf	int_to_char@num,c
  1028  0026BC  6A7B               	clrf	int_to_char@num+1,c
  1029  0026BE  6A7C               	clrf	int_to_char@num+2,c
  1030  0026C0  6A7D               	clrf	int_to_char@num+3,c
  1031  0026C2  ECDA  F015         	call	_int_to_char	;wreg free
  1032  0026C6  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1033  0026CA  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1034  0026CE  EC20  F016         	call	_UARTSendString	;wreg free
  1035                           
  1036                           ;main.c: 77:   UARTNewLine();
  1037  0026D2  EC75  F017         	call	_UARTNewLine	;wreg free
  1038                           
  1039                           ;main.c: 78:   _delay((unsigned long)((1000)*(16000000/4000.0)));
  1040  0026D6  0E10               	movlw	16
  1041  0026D8  0100               	movlb	0	; () banked
  1042  0026DA  6FE0               	movwf	(??_main+1)& (0+255),b
  1043  0026DC  0E3B               	movlw	59
  1044  0026DE  6FDF               	movwf	??_main& (0+255),b
  1045  0026E0  0E99               	movlw	153
  1046  0026E2                     u3757:
  1047  0026E2  FFFF               	dw	65535	; errata NOP
  1048  0026E4  2EE8               	decfsz	wreg,f,c
  1049  0026E6  D7FD               	bra	u3757
  1050  0026E8  2FDF               	decfsz	??_main& (0+255),f,b
  1051  0026EA  D7FB               	bra	u3757
  1052  0026EC  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1053  0026EE  D7F9               	bra	u3757
  1054  0026F0  F000               	nop	
  1055  0026F2  D7A2               	goto	l3910
  1056  0026F4                     __end_of_main:
  1057                           	opt callstack 0
  1058                           
  1059 ;; *************** function _write_op *****************
  1060 ;; Defined at:
  1061 ;;		line 9 in file "drive_memory.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  address         1    wreg     unsigned char 
  1064 ;;  data            1    0[COMRAM] unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  address         1    1[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1076 ;;      Params:         1       0       0       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0
  1079 ;;      Totals:         2       0       0       0       0       0       0
  1080 ;;Total ram usage:        2 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    2
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text1
  1091  002E7E                     __ptext1:
  1092                           	opt callstack 0
  1093  002E7E                     _write_op:
  1094                           	opt callstack 0
  1095  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  1096                           
  1097                           ;incstack = 0
  1098                           ;write_op@address stored from wreg
  1099  002E80  6E02               	movwf	write_op@address,c
  1100                           
  1101                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1102  002E82  9094               	bcf	3988,0,c	;volatile
  1103                           
  1104                           ;drive_memory.c: 12:   TRISD = 0x00;
  1105  002E84  0E00               	movlw	0
  1106  002E86  6E95               	movwf	3989,c	;volatile
  1107                           
  1108                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1109  002E88  0EC0               	movlw	192
  1110  002E8A  1693               	andwf	3987,f,c	;volatile
  1111                           
  1112                           ;drive_memory.c: 14:   PORTB = address;
  1113  002E8C  C002  FF81         	movff	write_op@address,3969	;volatile
  1114                           
  1115                           ;drive_memory.c: 15:   RB5 = 0;
  1116  002E90  9A81               	bcf	3969,5,c	;volatile
  1117                           
  1118                           ;drive_memory.c: 17:   RC0 = 1;
  1119  002E92  8082               	bsf	3970,0,c	;volatile
  1120                           
  1121                           ;drive_memory.c: 21:   RC0 = 0;
  1122  002E94  9082               	bcf	3970,0,c	;volatile
  1123                           
  1124                           ;drive_memory.c: 23:   PORTD = data;
  1125                           
  1126                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1127  002E96  C001  FF83         	movff	write_op@data,3971	;volatile
  1128                           
  1129                           ;drive_memory.c: 26:   RC0 = 1;
  1130                           
  1131                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1132  002E9A  8082               	bsf	3970,0,c	;volatile
  1133  002E9C  0012               	return		;funcret
  1134  002E9E  FFFF               	dw	65535	; errata NOP
  1135  002EA0                     __end_of_write_op:
  1136                           	opt callstack 0
  1137                           
  1138 ;; *************** function _read_op *****************
  1139 ;; Defined at:
  1140 ;;		line 30 in file "drive_memory.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  address         1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  address         1    0[COMRAM] unsigned char 
  1145 ;;  result          1    1[COMRAM] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      unsigned char 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1155 ;;      Params:         0       0       0       0       0       0       0
  1156 ;;      Locals:         2       0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0
  1158 ;;      Totals:         2       0       0       0       0       0       0
  1159 ;;Total ram usage:        2 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text2
  1170  002EA0                     __ptext2:
  1171                           	opt callstack 0
  1172  002EA0                     _read_op:
  1173                           	opt callstack 0
  1174  002EA0  FFFF               	dw	65535	; assembler added errata NOP
  1175                           
  1176                           ;incstack = 0
  1177                           ;read_op@address stored from wreg
  1178  002EA2  6E01               	movwf	read_op@address,c
  1179                           
  1180                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  1181  002EA4  9094               	bcf	3988,0,c	;volatile
  1182                           
  1183                           ;drive_memory.c: 33:   TRISD = 0xFF;
  1184  002EA6  6895               	setf	3989,c	;volatile
  1185                           
  1186                           ;drive_memory.c: 34:   TRISB &= ~(0x3f);
  1187  002EA8  0EC0               	movlw	192
  1188  002EAA  1693               	andwf	3987,f,c	;volatile
  1189                           
  1190                           ;drive_memory.c: 35:   PORTB = address;
  1191  002EAC  C001  FF81         	movff	read_op@address,3969	;volatile
  1192                           
  1193                           ;drive_memory.c: 36:   RB5 = 1;
  1194  002EB0  8A81               	bsf	3969,5,c	;volatile
  1195                           
  1196                           ;drive_memory.c: 38:   RC0 = 1;
  1197  002EB2  8082               	bsf	3970,0,c	;volatile
  1198                           
  1199                           ;drive_memory.c: 40:   RB5 = 0;
  1200  002EB4  9A81               	bcf	3969,5,c	;volatile
  1201                           
  1202                           ;drive_memory.c: 44:   RB5 = 1;
  1203                           
  1204                           ;drive_memory.c: 41:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  1205  002EB6  8A81               	bsf	3969,5,c	;volatile
  1206                           
  1207                           ;drive_memory.c: 46:   char result = PORTD;
  1208  002EB8  CF83 F002          	movff	3971,read_op@result	;volatile
  1209                           
  1210                           ;drive_memory.c: 47:   return result;
  1211  002EBC  5002               	movf	read_op@result,w,c
  1212  002EBE  0012               	return		;funcret
  1213  002EC0  FFFF               	dw	65535	; errata NOP
  1214  002EC2                     __end_of_read_op:
  1215                           	opt callstack 0
  1216                           
  1217 ;; *************** function _int_to_char *****************
  1218 ;; Defined at:
  1219 ;;		line 18 in file "lcd.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  num             4  121[COMRAM] unsigned long 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  result         10   18[BANK0 ] unsigned char [10]
  1224 ;;  the_num         4   28[BANK0 ] unsigned long 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2  121[COMRAM] PTR unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1234 ;;      Params:         4       0       0       0       0       0       0
  1235 ;;      Locals:         0      14       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0
  1237 ;;      Totals:         4      14       0       0       0       0       0
  1238 ;;Total ram usage:       18 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:   10
  1241 ;; This function calls:
  1242 ;;		_getchar
  1243 ;;		_sprintf
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text3
  1250  002BB4                     __ptext3:
  1251                           	opt callstack 0
  1252  002BB4                     _int_to_char:
  1253                           	opt callstack 0
  1254  002BB4  FFFF               	dw	65535	; assembler added errata NOP
  1255                           
  1256                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1257                           
  1258                           ;incstack = 0
  1259  002BB6  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  1260  002BBA  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  1261  002BBE  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  1262  002BC2  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  1263                           
  1264                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1265  002BC6  0ECD               	movlw	low int_to_char@result
  1266  002BC8  0100               	movlb	0	; () banked
  1267  002BCA  6FBB               	movwf	sprintf@s& (0+255),b
  1268  002BCC  0E00               	movlw	high int_to_char@result
  1269  002BCE  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  1270  002BD0  0E1D               	movlw	low STR_1
  1271  002BD2  6FBD               	movwf	sprintf@fmt& (0+255),b
  1272  002BD4  0E06               	movlw	high STR_1
  1273  002BD6  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  1274  002BD8  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  1275  002BDC  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  1276  002BE0  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  1277  002BE4  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  1278  002BE8  EC59  F015         	call	_sprintf	;wreg free
  1279                           
  1280                           ;lcd.c: 22:   getchar();
  1281  002BEC  EC89  F017         	call	_getchar	;wreg free
  1282                           
  1283                           ;lcd.c: 23:   return result;
  1284  002BF0  0ECD               	movlw	low int_to_char@result
  1285  002BF2  6E7A               	movwf	?_int_to_char,c
  1286  002BF4  0E00               	movlw	high int_to_char@result
  1287  002BF6  6E7B               	movwf	?_int_to_char+1,c
  1288  002BF8  0012               	return		;funcret
  1289  002BFA  FFFF               	dw	65535	; errata NOP
  1290  002BFC                     __end_of_int_to_char:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function _sprintf *****************
  1294 ;; Defined at:
  1295 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1298 ;;		 -> int_to_char@result(10), 
  1299 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1300 ;;		 -> STR_1(4), 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1303 ;;  ap              2   16[BANK0 ] PTR void [1]
  1304 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1305 ;;  ret             2    0        int 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  2    0[BANK0 ] int 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1315 ;;      Params:         0       8       0       0       0       0       0
  1316 ;;      Locals:         0      10       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0
  1318 ;;      Totals:         0      18       0       0       0       0       0
  1319 ;;Total ram usage:       18 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    9
  1322 ;; This function calls:
  1323 ;;		_vfprintf
  1324 ;; This function is called by:
  1325 ;;		_int_to_char
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text4
  1330  002AB2                     __ptext4:
  1331                           	opt callstack 0
  1332  002AB2                     _sprintf:
  1333                           	opt callstack 0
  1334  002AB2  FFFF               	dw	65535	; assembler added errata NOP
  1335                           
  1336                           ;incstack = 0
  1337  002AB4  0EBF               	movlw	low (?_sprintf+4)
  1338  002AB6  0100               	movlb	0	; () banked
  1339  002AB8  6FCB               	movwf	sprintf@ap& (0+255),b
  1340  002ABA  0E00               	movlw	high (?_sprintf+4)
  1341  002ABC  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1342  002ABE  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  1343  002AC2  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  1344                           
  1345                           ; BSR set to: 0
  1346  002AC6  0E00               	movlw	0
  1347  002AC8  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  1348  002ACA  0E00               	movlw	0
  1349  002ACC  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  1350                           
  1351                           ; BSR set to: 0
  1352  002ACE  0E00               	movlw	0
  1353  002AD0  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  1354  002AD2  0E00               	movlw	0
  1355  002AD4  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358  002AD6  0EC5               	movlw	low sprintf@f
  1359  002AD8  6E72               	movwf	vfprintf@fp,c
  1360  002ADA  0E00               	movlw	high sprintf@f
  1361  002ADC  6E73               	movwf	vfprintf@fp+1,c
  1362  002ADE  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  1363  002AE2  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1364  002AE6  0ECB               	movlw	low sprintf@ap
  1365  002AE8  6E76               	movwf	vfprintf@ap,c
  1366  002AEA  0E00               	movlw	high sprintf@ap
  1367  002AEC  6E77               	movwf	vfprintf@ap+1,c
  1368  002AEE  EC29  F015         	call	_vfprintf	;wreg free
  1369  002AF2  0100               	movlb	0	; () banked
  1370  002AF4  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  1371  002AF6  25BB               	addwf	sprintf@s& (0+255),w,b
  1372  002AF8  6ED9               	movwf	fsr2l,c
  1373  002AFA  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  1374  002AFC  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1375  002AFE  6EDA               	movwf	fsr2h,c
  1376  002B00  0E00               	movlw	0
  1377  002B02  6EDF               	movwf	indf2,c
  1378                           
  1379                           ; BSR set to: 0
  1380  002B04  0012               	return		;funcret
  1381  002B06  FFFF               	dw	65535	; errata NOP
  1382  002B08                     __end_of_sprintf:
  1383                           	opt callstack 0
  1384                           
  1385 ;; *************** function _vfprintf *****************
  1386 ;; Defined at:
  1387 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1390 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1391 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1392 ;;		 -> STR_2(3), STR_1(4), 
  1393 ;;  ap              2  117[COMRAM] PTR PTR void 
  1394 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1397 ;;		 -> STR_2(3), STR_1(4), 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  2  113[COMRAM] int 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1407 ;;      Params:         6       0       0       0       0       0       0
  1408 ;;      Locals:         2       0       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0
  1410 ;;      Totals:         8       0       0       0       0       0       0
  1411 ;;Total ram usage:        8 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    8
  1414 ;; This function calls:
  1415 ;;		_vfpfcnvrt
  1416 ;; This function is called by:
  1417 ;;		_sprintf
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text5
  1422  002A52                     __ptext5:
  1423                           	opt callstack 0
  1424  002A52                     _vfprintf:
  1425                           	opt callstack 0
  1426  002A52  FFFF               	dw	65535	; assembler added errata NOP
  1427                           
  1428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;incstack = 0
  1432  002A54  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1433  002A58  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1434                           
  1435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1436  002A5C  0E00               	movlw	0
  1437  002A5E  0100               	movlb	0	; () banked
  1438  002A60  6F90               	movwf	(_nout+1)& (0+255),b
  1439  002A62  0E00               	movlw	0
  1440  002A64  6F8F               	movwf	_nout& (0+255),b
  1441                           
  1442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1443  002A66  D014               	goto	l3680
  1444  002A68                     l3678:
  1445  002A68  FFFF               	dw	65535	; assembler added errata NOP
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1449  002A6A  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1450  002A6E  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1451  002A72  0E78               	movlw	low vfprintf@cfmt
  1452  002A74  6E45               	movwf	vfpfcnvrt@fmt,c
  1453  002A76  0E00               	movlw	high vfprintf@cfmt
  1454  002A78  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1455  002A7A  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1456  002A7E  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1457  002A82  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1458  002A86  5043               	movf	?_vfpfcnvrt,w,c
  1459  002A88  0100               	movlb	0	; () banked
  1460  002A8A  278F               	addwf	_nout& (0+255),f,b
  1461  002A8C  5044               	movf	?_vfpfcnvrt+1,w,c
  1462  002A8E  2390               	addwfc	(_nout+1)& (0+255),f,b
  1463  002A90                     l3680:
  1464  002A90  FFFF               	dw	65535	; assembler added errata NOP
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1468  002A92  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1469  002A96  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1470  002A9A                     	if	0	;tblptru may be non-zero
  1471  002A9A                     	endif
  1472  002A9A                     	if	0	;tblptru may be non-zero
  1473  002A9A                     	endif
  1474  002A9A  0008               	tblrd		*
  1475  002A9C  FFFF               	dw	65535	; errata NOP
  1476  002A9E  50F5               	movf	tablat,w,c
  1477  002AA0  0900               	iorlw	0
  1478  002AA2  A4D8               	btfss	status,2,c
  1479  002AA4  D7E1               	goto	l3678
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1483  002AA6  C08F  F072         	movff	_nout,?_vfprintf
  1484  002AAA  C090  F073         	movff	_nout+1,?_vfprintf+1
  1485                           
  1486                           ; BSR set to: 0
  1487  002AAE  0012               	return		;funcret
  1488  002AB0  FFFF               	dw	65535	; errata NOP
  1489  002AB2                     __end_of_vfprintf:
  1490                           	opt callstack 0
  1491                           
  1492 ;; *************** function _vfpfcnvrt *****************
  1493 ;; Defined at:
  1494 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1497 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1498 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1499 ;;		 -> vfprintf@cfmt(2), 
  1500 ;;  ap              2   70[COMRAM] PTR PTR void 
  1501 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  llu             8  105[COMRAM] unsigned long long 
  1504 ;;  ll              8   94[COMRAM] long long 
  1505 ;;  f               4    0        long long 
  1506 ;;  ct              3    0        unsigned char [3]
  1507 ;;  vp              2  102[COMRAM] PTR void 
  1508 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1509 ;;  done            2   88[COMRAM] int 
  1510 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1511 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1512 ;;  i               2    0        int 
  1513 ;;  c               1  104[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2   66[COMRAM] int 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         6       0       0       0       0       0       0
  1524 ;;      Locals:        27       0       0       0       0       0       0
  1525 ;;      Temps:         14       0       0       0       0       0       0
  1526 ;;      Totals:        47       0       0       0       0       0       0
  1527 ;;Total ram usage:       47 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    7
  1530 ;; This function calls:
  1531 ;;		_atoi
  1532 ;;		_ctoa
  1533 ;;		_dtoa
  1534 ;;		_fputc
  1535 ;;		_isdigit
  1536 ;;		_otoa
  1537 ;;		_stoa
  1538 ;;		_strncmp
  1539 ;;		_utoa
  1540 ;;		_xtoa
  1541 ;; This function is called by:
  1542 ;;		_vfprintf
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text6
  1547  00064C                     __ptext6:
  1548                           	opt callstack 0
  1549  00064C                     _vfpfcnvrt:
  1550                           	opt callstack 0
  1551  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1552                           
  1553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;incstack = 0
  1557  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1560  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1561  00065E                     	if	0	;tblptru may be non-zero
  1562  00065E                     	endif
  1563  00065E                     	if	0	;tblptru may be non-zero
  1564  00065E                     	endif
  1565  00065E  0008               	tblrd		*
  1566  000660  FFFF               	dw	65535	; errata NOP
  1567  000662  50F5               	movf	tablat,w,c
  1568  000664  0A25               	xorlw	37
  1569  000666  A4D8               	btfss	status,2,c
  1570  000668  EFD7  F00B         	goto	l3658
  1571                           
  1572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1573  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1574  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1575  000674  2ADE               	incf	postinc2,f,c
  1576  000676  0E00               	movlw	0
  1577  000678  22DD               	addwfc	postdec2,f,c
  1578                           
  1579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1580  00067A  0E00               	movlw	0
  1581  00067C  0100               	movlb	0	; () banked
  1582  00067E  6F92               	movwf	(_width+1)& (0+255),b
  1583  000680  0E00               	movlw	0
  1584  000682  6F91               	movwf	_width& (0+255),b
  1585  000684  C091  F095         	movff	_width,_flags
  1586  000688  C092  F096         	movff	_width+1,_flags+1
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1590  00068C  6993               	setf	_prec& (0+255),b
  1591  00068E  6994               	setf	(_prec+1)& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1595  000690  0E00               	movlw	0
  1596  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1597  000694  0E00               	movlw	0
  1598  000696  D020               	goto	L1
  1599  000698                     l3300:
  1600  000698  FFFF               	dw	65535	; assembler added errata NOP
  1601                           
  1602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1603  00069A  0100               	movlb	0	; () banked
  1604  00069C  8195               	bsf	_flags& (0+255),0,b
  1605  00069E                     l3302:
  1606  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1610  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  0006A8  2ADE               	incf	postinc2,f,c
  1613  0006AA  0E00               	movlw	0
  1614  0006AC  22DD               	addwfc	postdec2,f,c
  1615                           
  1616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1617  0006AE  D03A               	goto	l3326
  1618  0006B0                     l3304:
  1619  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1620                           
  1621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1622  0006B2  0100               	movlb	0	; () banked
  1623  0006B4  8395               	bsf	_flags& (0+255),1,b
  1624  0006B6  D7F3               	goto	l3302
  1625  0006B8                     l3308:
  1626  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1627                           
  1628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1629  0006BA  0100               	movlb	0	; () banked
  1630  0006BC  8595               	bsf	_flags& (0+255),2,b
  1631  0006BE  D7EF               	goto	l3302
  1632  0006C0                     l3312:
  1633  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1634                           
  1635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1636  0006C2  0100               	movlb	0	; () banked
  1637  0006C4  8795               	bsf	_flags& (0+255),3,b
  1638  0006C6  D7EB               	goto	l3302
  1639  0006C8                     l3316:
  1640  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1641                           
  1642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1643  0006CA  0100               	movlb	0	; () banked
  1644  0006CC  8995               	bsf	_flags& (0+255),4,b
  1645  0006CE  D7E7               	goto	l3302
  1646  0006D0                     l3320:
  1647  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1648                           
  1649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1650  0006D2  0E00               	movlw	0
  1651  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1652  0006D6  0E01               	movlw	1
  1653  0006D8                     L1:
  1654  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1655  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1656                           
  1657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1658  0006DC  D023               	goto	l3326
  1659  0006DE                     l3324:
  1660  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1661  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1662  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1663  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1664  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1665  0006F0                     	if	0	;tblptru may be non-zero
  1666  0006F0                     	endif
  1667  0006F0                     	if	0	;tblptru may be non-zero
  1668  0006F0                     	endif
  1669  0006F0  0008               	tblrd		*
  1670  0006F2  FFFF               	dw	65535	; errata NOP
  1671  0006F4  50F5               	movf	tablat,w,c
  1672  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1673  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1674                           
  1675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1676                           ; Switch size 1, requested type "simple"
  1677                           ; Number of cases is 1, Range of values is 0 to 0
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte            4     3 (average)
  1681                           ;	Chosen strategy is simple_byte
  1682  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1683  0006FC  0A00               	xorlw	0	; case 0
  1684  0006FE  A4D8               	btfss	status,2,c
  1685  000700  D7E7               	goto	l3320
  1686                           
  1687                           ; Switch size 1, requested type "simple"
  1688                           ; Number of cases is 5, Range of values is 32 to 48
  1689                           ; switch strategies available:
  1690                           ; Name         Instructions Cycles
  1691                           ; simple_byte           16     9 (average)
  1692                           ;	Chosen strategy is simple_byte
  1693  000702  5049               	movf	??_vfpfcnvrt,w,c
  1694  000704  0A20               	xorlw	32	; case 32
  1695  000706  B4D8               	btfsc	status,2,c
  1696  000708  D7DB               	goto	l3312
  1697  00070A  0A03               	xorlw	3	; case 35
  1698  00070C  B4D8               	btfsc	status,2,c
  1699  00070E  D7DC               	goto	l3316
  1700  000710  0A08               	xorlw	8	; case 43
  1701  000712  B4D8               	btfsc	status,2,c
  1702  000714  D7D1               	goto	l3308
  1703  000716  0A06               	xorlw	6	; case 45
  1704  000718  B4D8               	btfsc	status,2,c
  1705  00071A  D7BE               	goto	l3300
  1706  00071C  0A1D               	xorlw	29	; case 48
  1707  00071E  B4D8               	btfsc	status,2,c
  1708  000720  D7C7               	goto	l3304
  1709  000722  D7D6               	goto	l3320
  1710  000724                     l3326:
  1711  000724  FFFF               	dw	65535	; assembler added errata NOP
  1712                           
  1713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1714  000726  5059               	movf	vfpfcnvrt@done,w,c
  1715  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1716  00072A  B4D8               	btfsc	status,2,c
  1717  00072C  D7D8               	goto	l3324
  1718                           
  1719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1720  00072E  0100               	movlb	0	; () banked
  1721  000730  B195               	btfsc	_flags& (0+255),0,b
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1725  000732  9395               	bcf	_flags& (0+255),1,b
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1729  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1730  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1731  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1732  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1733  000744                     	if	0	;tblptru may be non-zero
  1734  000744                     	endif
  1735  000744                     	if	0	;tblptru may be non-zero
  1736  000744                     	endif
  1737  000744  0008               	tblrd		*
  1738  000746  FFFF               	dw	65535	; errata NOP
  1739  000748  50F5               	movf	tablat,w,c
  1740  00074A  0A2A               	xorlw	42
  1741  00074C  A4D8               	btfss	status,2,c
  1742  00074E  D023               	goto	l3338
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1746  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748  000758  2ADE               	incf	postinc2,f,c
  1749  00075A  0E00               	movlw	0
  1750  00075C  22DD               	addwfc	postdec2,f,c
  1751                           
  1752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1753  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1754  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1755  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1756  00076A  0E02               	movlw	2
  1757  00076C  26DE               	addwf	postinc2,f,c
  1758  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1759  000772  0E00               	movlw	0
  1760  000774  22DD               	addwfc	postdec2,f,c
  1761  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1762  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1763  00077E  CFDE F091          	movff	postinc2,_width
  1764  000782  CFDD F092          	movff	postdec2,_width+1
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  1768  000786  AF92               	btfss	(_width+1)& (0+255),7,b
  1769  000788  D045               	goto	u3110
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  1773  00078A  8195               	bsf	_flags& (0+255),0,b
  1774                           
  1775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  1776  00078C  6D91               	negf	_width& (0+255),b
  1777  00078E  1F92               	comf	(_width+1)& (0+255),f,b
  1778  000790  B0D8               	btfsc	status,0,c
  1779  000792  2B92               	incf	(_width+1)& (0+255),f,b
  1780  000794  D03F               	goto	u3110
  1781  000796                     l3338:
  1782  000796  FFFF               	dw	65535	; assembler added errata NOP
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  1786  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  0007A0  CFDE F008          	movff	postinc2,atoi@s
  1789  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  1790  0007A8  EC05  F010         	call	_atoi	;wreg free
  1791  0007AC  C008  F091         	movff	?_atoi,_width
  1792  0007B0  C009  F092         	movff	?_atoi+1,_width+1
  1793                           
  1794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1795  0007B4  D008               	goto	l3342
  1796  0007B6                     l3340:
  1797  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  1798                           
  1799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  1800  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  0007C0  2ADE               	incf	postinc2,f,c
  1803  0007C2  0E00               	movlw	0
  1804  0007C4  22DD               	addwfc	postdec2,f,c
  1805  0007C6                     l3342:
  1806  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  1807  0007C8  0ED0               	movlw	208
  1808  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1809  0007CC  0EFF               	movlw	255
  1810  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1811  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  1814  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  1815  0007E0                     	if	0	;tblptru may be non-zero
  1816  0007E0                     	endif
  1817  0007E0                     	if	0	;tblptru may be non-zero
  1818  0007E0                     	endif
  1819  0007E0  0008               	tblrd		*
  1820  0007E2  FFFF               	dw	65535	; errata NOP
  1821  0007E4  50F5               	movf	tablat,w,c
  1822  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1823  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1824  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  1825  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  1826  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  1827  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1828  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  1829  0007F4  E106               	bnz	u3090
  1830  0007F6  0E0A               	movlw	10
  1831  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1832  0007FA  B0D8               	btfsc	status,0,c
  1833  0007FC  D002               	goto	u3090
  1834  0007FE  0E01               	movlw	1
  1835  000800  D002               	goto	u3100
  1836  000802                     u3090:
  1837  000802  FFFF               	dw	65535	; assembler added errata NOP
  1838  000804  0E00               	movlw	0
  1839  000806                     u3100:
  1840  000806  FFFF               	dw	65535	; assembler added errata NOP
  1841  000808  6E5B               	movwf	_vfpfcnvrt$1101,c
  1842  00080A  6A5C               	clrf	_vfpfcnvrt$1101+1,c
  1843  00080C  505B               	movf	_vfpfcnvrt$1101,w,c
  1844  00080E  105C               	iorwf	_vfpfcnvrt$1101+1,w,c
  1845  000810  A4D8               	btfss	status,2,c
  1846  000812  D7D1               	goto	l3340
  1847  000814                     u3110:
  1848  000814  FFFF               	dw	65535	; assembler added errata NOP
  1849                           
  1850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1851  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1854  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1855  000826                     	if	0	;tblptru may be non-zero
  1856  000826                     	endif
  1857  000826                     	if	0	;tblptru may be non-zero
  1858  000826                     	endif
  1859  000826  0008               	tblrd		*
  1860  000828  FFFF               	dw	65535	; errata NOP
  1861  00082A  50F5               	movf	tablat,w,c
  1862  00082C  0A2E               	xorlw	46
  1863  00082E  A4D8               	btfss	status,2,c
  1864  000830  D075               	goto	u3160
  1865                           
  1866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1867  000832  0E00               	movlw	0
  1868  000834  0100               	movlb	0	; () banked
  1869  000836  6F94               	movwf	(_prec+1)& (0+255),b
  1870  000838  0E00               	movlw	0
  1871  00083A  6F93               	movwf	_prec& (0+255),b
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1875  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877  000844  2ADE               	incf	postinc2,f,c
  1878  000846  0E00               	movlw	0
  1879  000848  22DD               	addwfc	postdec2,f,c
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1883  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1884  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1885  000852  CFDE FFF6          	movff	postinc2,tblptrl
  1886  000856  CFDD FFF7          	movff	postdec2,tblptrh
  1887  00085A                     	if	0	;tblptru may be non-zero
  1888  00085A                     	endif
  1889  00085A                     	if	0	;tblptru may be non-zero
  1890  00085A                     	endif
  1891  00085A  0008               	tblrd		*
  1892  00085C  FFFF               	dw	65535	; errata NOP
  1893  00085E  50F5               	movf	tablat,w,c
  1894  000860  0A2A               	xorlw	42
  1895  000862  A4D8               	btfss	status,2,c
  1896  000864  D01C               	goto	l3358
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1900  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1901  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1902  00086E  2ADE               	incf	postinc2,f,c
  1903  000870  0E00               	movlw	0
  1904  000872  22DD               	addwfc	postdec2,f,c
  1905                           
  1906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1907  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1908  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1909  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1910  000880  0E02               	movlw	2
  1911  000882  26DE               	addwf	postinc2,f,c
  1912  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1913  000888  0E00               	movlw	0
  1914  00088A  22DD               	addwfc	postdec2,f,c
  1915  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1916  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1917  000894  CFDE F093          	movff	postinc2,_prec
  1918  000898  CFDD F094          	movff	postdec2,_prec+1
  1919                           
  1920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1921  00089C  D03F               	goto	u3160
  1922  00089E                     l3358:
  1923  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1927  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929  0008A8  CFDE F008          	movff	postinc2,atoi@s
  1930  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  1931  0008B0  EC05  F010         	call	_atoi	;wreg free
  1932  0008B4  C008  F093         	movff	?_atoi,_prec
  1933  0008B8  C009  F094         	movff	?_atoi+1,_prec+1
  1934                           
  1935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1936  0008BC  D008               	goto	l3362
  1937  0008BE                     l3360:
  1938  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1939                           
  1940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1941  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943  0008C8  2ADE               	incf	postinc2,f,c
  1944  0008CA  0E00               	movlw	0
  1945  0008CC  22DD               	addwfc	postdec2,f,c
  1946  0008CE                     l3362:
  1947  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1948  0008D0  0ED0               	movlw	208
  1949  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1950  0008D4  0EFF               	movlw	255
  1951  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1952  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1955  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1956  0008E8                     	if	0	;tblptru may be non-zero
  1957  0008E8                     	endif
  1958  0008E8                     	if	0	;tblptru may be non-zero
  1959  0008E8                     	endif
  1960  0008E8  0008               	tblrd		*
  1961  0008EA  FFFF               	dw	65535	; errata NOP
  1962  0008EC  50F5               	movf	tablat,w,c
  1963  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1964  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1965  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  1966  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  1967  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  1968  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1969  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  1970  0008FC  E106               	bnz	u3140
  1971  0008FE  0E0A               	movlw	10
  1972  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1973  000902  B0D8               	btfsc	status,0,c
  1974  000904  D002               	goto	u3140
  1975  000906  0E01               	movlw	1
  1976  000908  D002               	goto	u3150
  1977  00090A                     u3140:
  1978  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1979  00090C  0E00               	movlw	0
  1980  00090E                     u3150:
  1981  00090E  FFFF               	dw	65535	; assembler added errata NOP
  1982  000910  6E5D               	movwf	_vfpfcnvrt$1102,c
  1983  000912  6A5E               	clrf	_vfpfcnvrt$1102+1,c
  1984  000914  505D               	movf	_vfpfcnvrt$1102,w,c
  1985  000916  105E               	iorwf	_vfpfcnvrt$1102+1,w,c
  1986  000918  A4D8               	btfss	status,2,c
  1987  00091A  D7D1               	goto	l3360
  1988  00091C                     u3160:
  1989  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1990                           
  1991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  1992  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1993  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1994  000926  CFDE FFF6          	movff	postinc2,tblptrl
  1995  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  1996  00092E                     	if	0	;tblptru may be non-zero
  1997  00092E                     	endif
  1998  00092E                     	if	0	;tblptru may be non-zero
  1999  00092E                     	endif
  2000  00092E  0008               	tblrd		*
  2001  000930  FFFF               	dw	65535	; errata NOP
  2002  000932  50F5               	movf	tablat,w,c
  2003  000934  0A63               	xorlw	99
  2004  000936  A4D8               	btfss	status,2,c
  2005  000938  D027               	goto	l3376
  2006                           
  2007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2008  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2009  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2010  000942  2ADE               	incf	postinc2,f,c
  2011  000944  0E00               	movlw	0
  2012  000946  22DD               	addwfc	postdec2,f,c
  2013                           
  2014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2015  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2016  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2017  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2018  000954  0E02               	movlw	2
  2019  000956  26DE               	addwf	postinc2,f,c
  2020  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2021  00095C  0E00               	movlw	0
  2022  00095E  22DD               	addwfc	postdec2,f,c
  2023  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2024  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2025  000968  50DF               	movf	indf2,w,c
  2026  00096A  6E69               	movwf	vfpfcnvrt@c,c
  2027                           
  2028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2029  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2030  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2031  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2032  000978  ECAF  F015         	call	_ctoa	;wreg free
  2033  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2034  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2035  000984  EFF3  F00B         	goto	l497
  2036  000988                     l3376:
  2037  000988  FFFF               	dw	65535	; assembler added errata NOP
  2038                           
  2039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2040  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2041  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2042  000992  CFDE F001          	movff	postinc2,strncmp@_l
  2043  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  2044  00099A  0E05               	movlw	low STR_3
  2045  00099C  6E03               	movwf	strncmp@_r,c
  2046  00099E  0E06               	movlw	high STR_3
  2047  0009A0  6E04               	movwf	strncmp@_r+1,c
  2048  0009A2  0E00               	movlw	0
  2049  0009A4  6E06               	movwf	strncmp@n+1,c
  2050  0009A6  0E03               	movlw	3
  2051  0009A8  6E05               	movwf	strncmp@n,c
  2052  0009AA  EC7A  F013         	call	_strncmp	;wreg free
  2053  0009AE  5001               	movf	?_strncmp,w,c
  2054  0009B0  1002               	iorwf	?_strncmp+1,w,c
  2055  0009B2  B4D8               	btfsc	status,2,c
  2056  0009B4  D016               	goto	u3190
  2057  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2058  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2059  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  2060  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2061  0009C6  0E09               	movlw	low STR_7
  2062  0009C8  6E03               	movwf	strncmp@_r,c
  2063  0009CA  0E06               	movlw	high STR_7
  2064  0009CC  6E04               	movwf	strncmp@_r+1,c
  2065  0009CE  0E00               	movlw	0
  2066  0009D0  6E06               	movwf	strncmp@n+1,c
  2067  0009D2  0E03               	movlw	3
  2068  0009D4  6E05               	movwf	strncmp@n,c
  2069  0009D6  EC7A  F013         	call	_strncmp	;wreg free
  2070  0009DA  5001               	movf	?_strncmp,w,c
  2071  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2072  0009DE  A4D8               	btfss	status,2,c
  2073  0009E0  D043               	goto	l3386
  2074  0009E2                     u3190:
  2075  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2076                           
  2077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2078  0009E4  0E03               	movlw	3
  2079  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2080  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2081  0009EE  26DE               	addwf	postinc2,f,c
  2082  0009F0  0E00               	movlw	0
  2083  0009F2  22DD               	addwfc	postdec2,f,c
  2084                           
  2085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2086  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2087  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2088  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2089  000A00  0E02               	movlw	2
  2090  000A02  26DE               	addwf	postinc2,f,c
  2091  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2092  000A08  0E00               	movlw	0
  2093  000A0A  22DD               	addwfc	postdec2,f,c
  2094  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2095  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2096  000A14  50DF               	movf	indf2,w,c
  2097  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2098  000A18  0E00               	movlw	0
  2099  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2100  000A1C  0EFF               	movlw	-1
  2101  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2102  000A20                     L2:
  2103  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2104  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2105  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2106  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2107  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2108  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2109  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2110  000A2E                     l3382:
  2111  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2112                           
  2113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2114  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2115  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2116  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2117  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2118  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2119  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2120  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2121  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2122  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2123  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2124  000A58  ECF6  F00B         	call	_dtoa	;wreg free
  2125  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2126  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2127  000A64  EFF3  F00B         	goto	l497
  2128  000A68                     l3386:
  2129  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2130                           
  2131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2132  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2133  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2134  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2135  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2136  000A7A  0E06               	movlw	low (STR_3+1)
  2137  000A7C  6E03               	movwf	strncmp@_r,c
  2138  000A7E  0E06               	movlw	high (STR_3+1)
  2139  000A80  6E04               	movwf	strncmp@_r+1,c
  2140  000A82  0E00               	movlw	0
  2141  000A84  6E06               	movwf	strncmp@n+1,c
  2142  000A86  0E02               	movlw	2
  2143  000A88  6E05               	movwf	strncmp@n,c
  2144  000A8A  EC7A  F013         	call	_strncmp	;wreg free
  2145  000A8E  5001               	movf	?_strncmp,w,c
  2146  000A90  1002               	iorwf	?_strncmp+1,w,c
  2147  000A92  B4D8               	btfsc	status,2,c
  2148  000A94  D016               	goto	u3210
  2149  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2152  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2153  000AA6  0E0A               	movlw	low (STR_7+1)
  2154  000AA8  6E03               	movwf	strncmp@_r,c
  2155  000AAA  0E06               	movlw	high (STR_7+1)
  2156  000AAC  6E04               	movwf	strncmp@_r+1,c
  2157  000AAE  0E00               	movlw	0
  2158  000AB0  6E06               	movwf	strncmp@n+1,c
  2159  000AB2  0E02               	movlw	2
  2160  000AB4  6E05               	movwf	strncmp@n,c
  2161  000AB6  EC7A  F013         	call	_strncmp	;wreg free
  2162  000ABA  5001               	movf	?_strncmp,w,c
  2163  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2164  000ABE  A4D8               	btfss	status,2,c
  2165  000AC0  D008               	goto	l3396
  2166  000AC2                     u3210:
  2167  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2168                           
  2169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2170  000AC4  0E02               	movlw	2
  2171  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2172  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2173  000ACE  26DE               	addwf	postinc2,f,c
  2174  000AD0  D023               	goto	L12
  2175  000AD2                     l3396:
  2176  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2177                           
  2178                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2179  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2182  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2183  000AE4                     	if	0	;tblptru may be non-zero
  2184  000AE4                     	endif
  2185  000AE4                     	if	0	;tblptru may be non-zero
  2186  000AE4                     	endif
  2187  000AE4  0008               	tblrd		*
  2188  000AE6  FFFF               	dw	65535	; errata NOP
  2189  000AE8  50F5               	movf	tablat,w,c
  2190  000AEA  0A64               	xorlw	100
  2191  000AEC  B4D8               	btfsc	status,2,c
  2192  000AEE  D00E               	goto	u3230
  2193  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2194  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2195  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2196  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2197  000B00                     	if	0	;tblptru may be non-zero
  2198  000B00                     	endif
  2199  000B00                     	if	0	;tblptru may be non-zero
  2200  000B00                     	endif
  2201  000B00  0008               	tblrd		*
  2202  000B02  FFFF               	dw	65535	; errata NOP
  2203  000B04  50F5               	movf	tablat,w,c
  2204  000B06  0A69               	xorlw	105
  2205  000B08  A4D8               	btfss	status,2,c
  2206  000B0A  D021               	goto	l3406
  2207  000B0C                     u3230:
  2208  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2211  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2212  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2213  000B16  2ADE               	incf	postinc2,f,c
  2214  000B18                     L12:
  2215  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2216  000B1A  0E00               	movlw	0
  2217  000B1C  22DD               	addwfc	postdec2,f,c
  2218                           
  2219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2220  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2221  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2222  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2223  000B2A  0E02               	movlw	2
  2224  000B2C  26DE               	addwf	postinc2,f,c
  2225  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2226  000B32  0E00               	movlw	0
  2227  000B34  22DD               	addwfc	postdec2,f,c
  2228  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2229  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2230  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2231  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2232  000B46  0E00               	movlw	0
  2233  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2234  000B4A  0EFF               	movlw	-1
  2235  000B4C  D769               	goto	L2
  2236  000B4E                     l3406:
  2237  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2238                           
  2239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2240  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2243  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2244  000B60  0E27               	movlw	low STR_21
  2245  000B62  6E03               	movwf	strncmp@_r,c
  2246  000B64  0E06               	movlw	high STR_21
  2247  000B66  6E04               	movwf	strncmp@_r+1,c
  2248  000B68  0E00               	movlw	0
  2249  000B6A  6E06               	movwf	strncmp@n+1,c
  2250  000B6C  0E02               	movlw	2
  2251  000B6E  6E05               	movwf	strncmp@n,c
  2252  000B70  EC7A  F013         	call	_strncmp	;wreg free
  2253  000B74  5001               	movf	?_strncmp,w,c
  2254  000B76  1002               	iorwf	?_strncmp+1,w,c
  2255  000B78  B4D8               	btfsc	status,2,c
  2256  000B7A  D016               	goto	u3250
  2257  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2260  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2261  000B8C  0E2D               	movlw	low STR_25
  2262  000B8E  6E03               	movwf	strncmp@_r,c
  2263  000B90  0E06               	movlw	high STR_25
  2264  000B92  6E04               	movwf	strncmp@_r+1,c
  2265  000B94  0E00               	movlw	0
  2266  000B96  6E06               	movwf	strncmp@n+1,c
  2267  000B98  0E02               	movlw	2
  2268  000B9A  6E05               	movwf	strncmp@n,c
  2269  000B9C  EC7A  F013         	call	_strncmp	;wreg free
  2270  000BA0  5001               	movf	?_strncmp,w,c
  2271  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2272  000BA4  A4D8               	btfss	status,2,c
  2273  000BA6  D043               	goto	l3416
  2274  000BA8                     u3250:
  2275  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2276                           
  2277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2278  000BAA  0E02               	movlw	2
  2279  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2280  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2281  000BB4  26DE               	addwf	postinc2,f,c
  2282  000BB6  0E00               	movlw	0
  2283  000BB8  22DD               	addwfc	postdec2,f,c
  2284                           
  2285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2286  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2287  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2288  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2289  000BC6  0E04               	movlw	4
  2290  000BC8  26DE               	addwf	postinc2,f,c
  2291  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2292  000BCE  0E00               	movlw	0
  2293  000BD0  22DD               	addwfc	postdec2,f,c
  2294  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2295  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2296  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2297  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2298  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2299  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2300  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2301  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2302  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2303  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2304  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2305  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2306  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2307  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2308  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2309  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2310  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2311  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2312  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2313  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2314  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2315  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2316  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2317  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2318  000C2C  D700               	goto	l3382
  2319  000C2E                     l3416:
  2320  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2321                           
  2322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2323  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2326  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2327  000C40  0E2A               	movlw	low STR_30
  2328  000C42  6E03               	movwf	strncmp@_r,c
  2329  000C44  0E06               	movlw	high STR_30
  2330  000C46  6E04               	movwf	strncmp@_r+1,c
  2331  000C48  0E00               	movlw	0
  2332  000C4A  6E06               	movwf	strncmp@n+1,c
  2333  000C4C  0E02               	movlw	2
  2334  000C4E  6E05               	movwf	strncmp@n,c
  2335  000C50  EC7A  F013         	call	_strncmp	;wreg free
  2336  000C54  5001               	movf	?_strncmp,w,c
  2337  000C56  1002               	iorwf	?_strncmp+1,w,c
  2338  000C58  B4D8               	btfsc	status,2,c
  2339  000C5A  D016               	goto	u3270
  2340  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2343  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2344  000C6C  0E30               	movlw	low STR_34
  2345  000C6E  6E03               	movwf	strncmp@_r,c
  2346  000C70  0E06               	movlw	high STR_34
  2347  000C72  6E04               	movwf	strncmp@_r+1,c
  2348  000C74  0E00               	movlw	0
  2349  000C76  6E06               	movwf	strncmp@n+1,c
  2350  000C78  0E02               	movlw	2
  2351  000C7A  6E05               	movwf	strncmp@n,c
  2352  000C7C  EC7A  F013         	call	_strncmp	;wreg free
  2353  000C80  5001               	movf	?_strncmp,w,c
  2354  000C82  1002               	iorwf	?_strncmp+1,w,c
  2355  000C84  A4D8               	btfss	status,2,c
  2356  000C86  D028               	goto	l3426
  2357  000C88                     u3270:
  2358  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2359                           
  2360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2361  000C8A  0E02               	movlw	2
  2362  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  000C94  26DE               	addwf	postinc2,f,c
  2365  000C96  0E00               	movlw	0
  2366  000C98  22DD               	addwfc	postdec2,f,c
  2367                           
  2368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2369  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2370  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2371  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2372  000CA6  0E02               	movlw	2
  2373  000CA8  26DE               	addwf	postinc2,f,c
  2374  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2375  000CAE  0E00               	movlw	0
  2376  000CB0  22DD               	addwfc	postdec2,f,c
  2377  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2378  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2379  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2380  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2381  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2382  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2383  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2384  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2385  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2386  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2387  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2388  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2389  000CD6  D6AB               	goto	l3382
  2390  000CD8                     l3426:
  2391  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2392                           
  2393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2394  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2395  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2396  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2397  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2398  000CEA  0E11               	movlw	low STR_39
  2399  000CEC  6E03               	movwf	strncmp@_r,c
  2400  000CEE  0E06               	movlw	high STR_39
  2401  000CF0  6E04               	movwf	strncmp@_r+1,c
  2402  000CF2  0E00               	movlw	0
  2403  000CF4  6E06               	movwf	strncmp@n+1,c
  2404  000CF6  0E03               	movlw	3
  2405  000CF8  6E05               	movwf	strncmp@n,c
  2406  000CFA  EC7A  F013         	call	_strncmp	;wreg free
  2407  000CFE  5001               	movf	?_strncmp,w,c
  2408  000D00  1002               	iorwf	?_strncmp+1,w,c
  2409  000D02  A4D8               	btfss	status,2,c
  2410  000D04  D041               	goto	l3434
  2411                           
  2412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2413  000D06  0E03               	movlw	3
  2414  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2415  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2416  000D10  26DE               	addwf	postinc2,f,c
  2417  000D12  0E00               	movlw	0
  2418  000D14  22DD               	addwfc	postdec2,f,c
  2419                           
  2420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2421  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2422  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2423  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2424  000D22  0E02               	movlw	2
  2425  000D24  26DE               	addwf	postinc2,f,c
  2426  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2427  000D2A  0E00               	movlw	0
  2428  000D2C  22DD               	addwfc	postdec2,f,c
  2429  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2430  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2431  000D36  50DF               	movf	indf2,w,c
  2432  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2433  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2434  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2435  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2436  000D40                     L3:
  2437  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2438  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2439  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2440  000D46                     L4:
  2441  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2442  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2443  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2444  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2445  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2446                           
  2447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2448  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2449  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2450  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2451  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2452  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2453  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2454  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2455  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2456  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2457  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2458  000D78  EC38  F00F         	call	_otoa	;wreg free
  2459  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2460  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2461  000D84  EFF3  F00B         	goto	l497
  2462  000D88                     l3434:
  2463  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2464                           
  2465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2466  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2469  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2470  000D9A  0E12               	movlw	low (STR_39+1)
  2471  000D9C  6E03               	movwf	strncmp@_r,c
  2472  000D9E  0E06               	movlw	high (STR_39+1)
  2473  000DA0  6E04               	movwf	strncmp@_r+1,c
  2474  000DA2  0E00               	movlw	0
  2475  000DA4  6E06               	movwf	strncmp@n+1,c
  2476  000DA6  0E02               	movlw	2
  2477  000DA8  6E05               	movwf	strncmp@n,c
  2478  000DAA  EC7A  F013         	call	_strncmp	;wreg free
  2479  000DAE  5001               	movf	?_strncmp,w,c
  2480  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2481  000DB2  B4D8               	btfsc	status,2,c
  2482  000DB4  D06B               	goto	u3320
  2483                           
  2484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2485                           
  2486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2487                           
  2488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2489  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2492  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2493  000DC6                     	if	0	;tblptru may be non-zero
  2494  000DC6                     	endif
  2495  000DC6                     	if	0	;tblptru may be non-zero
  2496  000DC6                     	endif
  2497  000DC6  0008               	tblrd		*
  2498  000DC8  FFFF               	dw	65535	; errata NOP
  2499  000DCA  50F5               	movf	tablat,w,c
  2500  000DCC  0A6F               	xorlw	111
  2501  000DCE  A4D8               	btfss	status,2,c
  2502  000DD0  D006               	goto	l3450
  2503                           
  2504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2505  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2506  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2507  000DDA  2ADE               	incf	postinc2,f,c
  2508  000DDC  D05E               	goto	L17
  2509  000DDE                     l3450:
  2510  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2511                           
  2512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2513  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2514  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2515  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2516  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2517  000DF0  0E39               	movlw	low STR_49
  2518  000DF2  6E03               	movwf	strncmp@_r,c
  2519  000DF4  0E06               	movlw	high STR_49
  2520  000DF6  6E04               	movwf	strncmp@_r+1,c
  2521  000DF8  0E00               	movlw	0
  2522  000DFA  6E06               	movwf	strncmp@n+1,c
  2523  000DFC  0E02               	movlw	2
  2524  000DFE  6E05               	movwf	strncmp@n,c
  2525  000E00  EC7A  F013         	call	_strncmp	;wreg free
  2526  000E04  5001               	movf	?_strncmp,w,c
  2527  000E06  1002               	iorwf	?_strncmp+1,w,c
  2528  000E08  A4D8               	btfss	status,2,c
  2529  000E0A  D029               	goto	l3458
  2530                           
  2531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2532  000E0C  0E02               	movlw	2
  2533  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2534  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2535  000E16  26DE               	addwf	postinc2,f,c
  2536  000E18  0E00               	movlw	0
  2537  000E1A  22DD               	addwfc	postdec2,f,c
  2538                           
  2539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2540  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2541  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2542  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2543  000E28  0E04               	movlw	4
  2544  000E2A  26DE               	addwf	postinc2,f,c
  2545  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2546  000E30  0E00               	movlw	0
  2547  000E32  22DD               	addwfc	postdec2,f,c
  2548  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2549  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2550  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2551  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2552  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2553  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2554  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2555  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2556  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2557  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2558  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2559  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2560  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2561  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2562  000E5C  D774               	goto	L4
  2563  000E5E                     l3458:
  2564  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2565                           
  2566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2567  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2568  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2569  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2570  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2571  000E70  0E3C               	movlw	low STR_54
  2572  000E72  6E03               	movwf	strncmp@_r,c
  2573  000E74  0E06               	movlw	high STR_54
  2574  000E76  6E04               	movwf	strncmp@_r+1,c
  2575  000E78  0E00               	movlw	0
  2576  000E7A  6E06               	movwf	strncmp@n+1,c
  2577  000E7C  0E02               	movlw	2
  2578  000E7E  6E05               	movwf	strncmp@n,c
  2579  000E80  EC7A  F013         	call	_strncmp	;wreg free
  2580  000E84  5001               	movf	?_strncmp,w,c
  2581  000E86  1002               	iorwf	?_strncmp+1,w,c
  2582  000E88  A4D8               	btfss	status,2,c
  2583  000E8A  D023               	goto	l3466
  2584  000E8C                     u3320:
  2585  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2586                           
  2587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2588  000E8E  0E02               	movlw	2
  2589  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2590  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2591  000E98  26DE               	addwf	postinc2,f,c
  2592  000E9A                     L17:
  2593  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2594  000E9C  0E00               	movlw	0
  2595  000E9E  22DD               	addwfc	postdec2,f,c
  2596                           
  2597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2598  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2599  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2600  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2601  000EAC  0E02               	movlw	2
  2602  000EAE  26DE               	addwf	postinc2,f,c
  2603  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2604  000EB4  0E00               	movlw	0
  2605  000EB6  22DD               	addwfc	postdec2,f,c
  2606  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2607  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2608  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2609  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2610  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2611  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2612  000ED0  D737               	goto	L3
  2613  000ED2                     l3466:
  2614  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2615                           
  2616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2617  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2618  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2619  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2620  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2621  000EE4  0E0D               	movlw	low STR_59
  2622  000EE6  6E03               	movwf	strncmp@_r,c
  2623  000EE8  0E06               	movlw	high STR_59
  2624  000EEA  6E04               	movwf	strncmp@_r+1,c
  2625  000EEC  0E00               	movlw	0
  2626  000EEE  6E06               	movwf	strncmp@n+1,c
  2627  000EF0  0E03               	movlw	3
  2628  000EF2  6E05               	movwf	strncmp@n,c
  2629  000EF4  EC7A  F013         	call	_strncmp	;wreg free
  2630  000EF8  5001               	movf	?_strncmp,w,c
  2631  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2632  000EFC  A4D8               	btfss	status,2,c
  2633  000EFE  D028               	goto	l3476
  2634                           
  2635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2636  000F00  0E03               	movlw	3
  2637  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2638  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2639  000F0A  26DE               	addwf	postinc2,f,c
  2640  000F0C  0E00               	movlw	0
  2641  000F0E  22DD               	addwfc	postdec2,f,c
  2642                           
  2643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2644  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2645  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2646  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2647  000F1C  0E02               	movlw	2
  2648  000F1E  26DE               	addwf	postinc2,f,c
  2649  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2650  000F24  0E00               	movlw	0
  2651  000F26  22DD               	addwfc	postdec2,f,c
  2652  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2653  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2654  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2655  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2656                           
  2657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2658  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2659  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2660  000F40  C08F  FFDF         	movff	_nout,indf2
  2661  000F44                     l3472:
  2662  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2663                           
  2664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2665  000F46  0E00               	movlw	0
  2666  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2667  000F4A  0E00               	movlw	0
  2668  000F4C  EFCA  F00B         	goto	L5
  2669  000F50                     l3476:
  2670  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2671                           
  2672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2673  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2674  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2675  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2676  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2677  000F62  0E0E               	movlw	low (STR_59+1)
  2678  000F64  6E03               	movwf	strncmp@_r,c
  2679  000F66  0E06               	movlw	high (STR_59+1)
  2680  000F68  6E04               	movwf	strncmp@_r+1,c
  2681  000F6A  0E00               	movlw	0
  2682  000F6C  6E06               	movwf	strncmp@n+1,c
  2683  000F6E  0E02               	movlw	2
  2684  000F70  6E05               	movwf	strncmp@n,c
  2685  000F72  EC7A  F013         	call	_strncmp	;wreg free
  2686  000F76  5001               	movf	?_strncmp,w,c
  2687  000F78  1002               	iorwf	?_strncmp+1,w,c
  2688  000F7A  A4D8               	btfss	status,2,c
  2689  000F7C  D00B               	goto	l3486
  2690  000F7E  D07F               	goto	u3370
  2691  000F80                     l3480:
  2692  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2693                           
  2694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2695  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2696  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2697  000F8A  C08F  FFDE         	movff	_nout,postinc2
  2698  000F8E  C090  FFDD         	movff	_nout+1,postdec2
  2699  000F92  D7D8               	goto	l3472
  2700  000F94                     l3486:
  2701  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2702                           
  2703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2704  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2705  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2706  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2707  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2708  000FA6                     	if	0	;tblptru may be non-zero
  2709  000FA6                     	endif
  2710  000FA6                     	if	0	;tblptru may be non-zero
  2711  000FA6                     	endif
  2712  000FA6  0008               	tblrd		*
  2713  000FA8  FFFF               	dw	65535	; errata NOP
  2714  000FAA  50F5               	movf	tablat,w,c
  2715  000FAC  0A6E               	xorlw	110
  2716  000FAE  A4D8               	btfss	status,2,c
  2717  000FB0  D006               	goto	l3496
  2718                           
  2719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2720  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  000FBA  2ADE               	incf	postinc2,f,c
  2723  000FBC  D067               	goto	L14
  2724  000FBE                     l3496:
  2725  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2726                           
  2727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2728  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2729  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2730  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2731  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2732  000FD0  0E33               	movlw	low STR_69
  2733  000FD2  6E03               	movwf	strncmp@_r,c
  2734  000FD4  0E06               	movlw	high STR_69
  2735  000FD6  6E04               	movwf	strncmp@_r+1,c
  2736  000FD8  0E00               	movlw	0
  2737  000FDA  6E06               	movwf	strncmp@n+1,c
  2738  000FDC  0E02               	movlw	2
  2739  000FDE  6E05               	movwf	strncmp@n,c
  2740  000FE0  EC7A  F013         	call	_strncmp	;wreg free
  2741  000FE4  5001               	movf	?_strncmp,w,c
  2742  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2743  000FE8  A4D8               	btfss	status,2,c
  2744  000FEA  D032               	goto	l3506
  2745                           
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2747  000FEC  0E02               	movlw	2
  2748  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2749  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2750  000FF6  26DE               	addwf	postinc2,f,c
  2751  000FF8  0E00               	movlw	0
  2752  000FFA  22DD               	addwfc	postdec2,f,c
  2753                           
  2754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2755  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2756  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2757  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2758  001008  0E02               	movlw	2
  2759  00100A  26DE               	addwf	postinc2,f,c
  2760  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2761  001010  0E00               	movlw	0
  2762  001012  22DD               	addwfc	postdec2,f,c
  2763  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2764  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2765  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2766  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2767                           
  2768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2769  001024  C08F  F049         	movff	_nout,??_vfpfcnvrt
  2770  001028  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2771  00102C  0E00               	movlw	0
  2772  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2773  001030  0EFF               	movlw	255
  2774  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2775  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2776  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2777  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2778  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2779  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2780  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2781  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2782  00104E  D77A               	goto	l3472
  2783  001050                     l3506:
  2784  001050  FFFF               	dw	65535	; assembler added errata NOP
  2785                           
  2786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2787  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2788  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2789  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  2790  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2791  001062  0E36               	movlw	low STR_74
  2792  001064  6E03               	movwf	strncmp@_r,c
  2793  001066  0E06               	movlw	high STR_74
  2794  001068  6E04               	movwf	strncmp@_r+1,c
  2795  00106A  0E00               	movlw	0
  2796  00106C  6E06               	movwf	strncmp@n+1,c
  2797  00106E  0E02               	movlw	2
  2798  001070  6E05               	movwf	strncmp@n,c
  2799  001072  EC7A  F013         	call	_strncmp	;wreg free
  2800  001076  5001               	movf	?_strncmp,w,c
  2801  001078  1002               	iorwf	?_strncmp+1,w,c
  2802  00107A  A4D8               	btfss	status,2,c
  2803  00107C  D01F               	goto	l3516
  2804  00107E                     u3370:
  2805  00107E  FFFF               	dw	65535	; assembler added errata NOP
  2806                           
  2807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  2808  001080  0E02               	movlw	2
  2809  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811  00108A  26DE               	addwf	postinc2,f,c
  2812  00108C                     L14:
  2813  00108C  FFFF               	dw	65535	; assembler added errata NOP
  2814  00108E  0E00               	movlw	0
  2815  001090  22DD               	addwfc	postdec2,f,c
  2816                           
  2817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2818  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2819  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2820  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2821  00109E  0E02               	movlw	2
  2822  0010A0  26DE               	addwf	postinc2,f,c
  2823  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2824  0010A6  0E00               	movlw	0
  2825  0010A8  22DD               	addwfc	postdec2,f,c
  2826  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2827  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2828  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2829  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2830  0010BA  D762               	goto	l3480
  2831  0010BC                     l3516:
  2832  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2833                           
  2834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  2835  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  2838  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  2839  0010CE                     	if	0	;tblptru may be non-zero
  2840  0010CE                     	endif
  2841  0010CE                     	if	0	;tblptru may be non-zero
  2842  0010CE                     	endif
  2843  0010CE  0008               	tblrd		*
  2844  0010D0  FFFF               	dw	65535	; errata NOP
  2845  0010D2  50F5               	movf	tablat,w,c
  2846  0010D4  0A70               	xorlw	112
  2847  0010D6  A4D8               	btfss	status,2,c
  2848  0010D8  D03E               	goto	l3524
  2849                           
  2850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  2851  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853  0010E2  2ADE               	incf	postinc2,f,c
  2854  0010E4  0E00               	movlw	0
  2855  0010E6  22DD               	addwfc	postdec2,f,c
  2856                           
  2857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2858  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2859  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2860  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2861  0010F4  0E02               	movlw	2
  2862  0010F6  26DE               	addwf	postinc2,f,c
  2863  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2864  0010FC  0E00               	movlw	0
  2865  0010FE  22DD               	addwfc	postdec2,f,c
  2866  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2867  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2868  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2869  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2870  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2871  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2872  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2873  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2874  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2875  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2876  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  2877  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  2878                           
  2879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  2880  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2881  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2882  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2883  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2884  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2885  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2886  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2887  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2888  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2889  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2890  00114C  0E78               	movlw	120
  2891  00114E  6E26               	movwf	xtoa@x,c
  2892  001150  EC2B  F00D         	call	_xtoa	;wreg free
  2893  001154  D1B4               	goto	L7
  2894  001156                     l3524:
  2895  001156  FFFF               	dw	65535	; assembler added errata NOP
  2896                           
  2897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  2898  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2899  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2900  001160  CFDE FFF6          	movff	postinc2,tblptrl
  2901  001164  CFDD FFF7          	movff	postdec2,tblptrh
  2902  001168                     	if	0	;tblptru may be non-zero
  2903  001168                     	endif
  2904  001168                     	if	0	;tblptru may be non-zero
  2905  001168                     	endif
  2906  001168  0008               	tblrd		*
  2907  00116A  FFFF               	dw	65535	; errata NOP
  2908  00116C  50F5               	movf	tablat,w,c
  2909  00116E  0A73               	xorlw	115
  2910  001170  A4D8               	btfss	status,2,c
  2911  001172  D02A               	goto	l3532
  2912                           
  2913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  2914  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  00117C  2ADE               	incf	postinc2,f,c
  2917  00117E  0E00               	movlw	0
  2918  001180  22DD               	addwfc	postdec2,f,c
  2919                           
  2920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  2921  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2922  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2923  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2924  00118E  0E02               	movlw	2
  2925  001190  26DE               	addwf	postinc2,f,c
  2926  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2927  001196  0E00               	movlw	0
  2928  001198  22DD               	addwfc	postdec2,f,c
  2929  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2930  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2931  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  2932  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  2933                           
  2934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  2935  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2936  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2937  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2938  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2939  0011BA  EC66  F011         	call	_stoa	;wreg free
  2940  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2941  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2942  0011C6  D30F               	goto	l497
  2943  0011C8                     l3532:
  2944  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  2945                           
  2946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2947  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2948  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2949  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  2950  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2951  0011DA  0E15               	movlw	low STR_79
  2952  0011DC  6E03               	movwf	strncmp@_r,c
  2953  0011DE  0E06               	movlw	high STR_79
  2954  0011E0  6E04               	movwf	strncmp@_r+1,c
  2955  0011E2  0E00               	movlw	0
  2956  0011E4  6E06               	movwf	strncmp@n+1,c
  2957  0011E6  0E03               	movlw	3
  2958  0011E8  6E05               	movwf	strncmp@n,c
  2959  0011EA  EC7A  F013         	call	_strncmp	;wreg free
  2960  0011EE  5001               	movf	?_strncmp,w,c
  2961  0011F0  1002               	iorwf	?_strncmp+1,w,c
  2962  0011F2  A4D8               	btfss	status,2,c
  2963  0011F4  D040               	goto	l3540
  2964                           
  2965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  2966  0011F6  0E03               	movlw	3
  2967  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2968  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2969  001200  26DE               	addwf	postinc2,f,c
  2970  001202  0E00               	movlw	0
  2971  001204  22DD               	addwfc	postdec2,f,c
  2972                           
  2973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2974  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2975  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2976  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2977  001212  0E02               	movlw	2
  2978  001214  26DE               	addwf	postinc2,f,c
  2979  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2980  00121A  0E00               	movlw	0
  2981  00121C  22DD               	addwfc	postdec2,f,c
  2982  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2983  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2984  001226  50DF               	movf	indf2,w,c
  2985  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2986  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  2987  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  2988  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2989  001230                     L8:
  2990  001230  FFFF               	dw	65535	; assembler added errata NOP
  2991  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2992  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2993  001236                     L9:
  2994  001236  FFFF               	dw	65535	; assembler added errata NOP
  2995  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2996  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2997  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2998  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2999                           
  3000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3001  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3002  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3003  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3004  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3005  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3006  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3007  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3008  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3009  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3010  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3011  001268  EC57  F00E         	call	_utoa	;wreg free
  3012  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3013  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3014  001274  D2B8               	goto	l497
  3015  001276                     l3540:
  3016  001276  FFFF               	dw	65535	; assembler added errata NOP
  3017                           
  3018                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3019  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3020  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3021  001280  CFDE F001          	movff	postinc2,strncmp@_l
  3022  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  3023  001288  0E16               	movlw	low (STR_79+1)
  3024  00128A  6E03               	movwf	strncmp@_r,c
  3025  00128C  0E06               	movlw	high (STR_79+1)
  3026  00128E  6E04               	movwf	strncmp@_r+1,c
  3027  001290  0E00               	movlw	0
  3028  001292  6E06               	movwf	strncmp@n+1,c
  3029  001294  0E02               	movlw	2
  3030  001296  6E05               	movwf	strncmp@n,c
  3031  001298  EC7A  F013         	call	_strncmp	;wreg free
  3032  00129C  5001               	movf	?_strncmp,w,c
  3033  00129E  1002               	iorwf	?_strncmp+1,w,c
  3034  0012A0  B4D8               	btfsc	status,2,c
  3035  0012A2  D06B               	goto	u3440
  3036                           
  3037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3038                           
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3040                           
  3041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3042  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3043  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3044  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  3045  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  3046  0012B4                     	if	0	;tblptru may be non-zero
  3047  0012B4                     	endif
  3048  0012B4                     	if	0	;tblptru may be non-zero
  3049  0012B4                     	endif
  3050  0012B4  0008               	tblrd		*
  3051  0012B6  FFFF               	dw	65535	; errata NOP
  3052  0012B8  50F5               	movf	tablat,w,c
  3053  0012BA  0A75               	xorlw	117
  3054  0012BC  A4D8               	btfss	status,2,c
  3055  0012BE  D006               	goto	l3556
  3056                           
  3057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3058  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3059  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3060  0012C8  2ADE               	incf	postinc2,f,c
  3061  0012CA  D05E               	goto	L18
  3062  0012CC                     l3556:
  3063  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3064                           
  3065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3066  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3067  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3068  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3069  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3070  0012DE  0E1E               	movlw	low (STR_1+1)
  3071  0012E0  6E03               	movwf	strncmp@_r,c
  3072  0012E2  0E06               	movlw	high (STR_1+1)
  3073  0012E4  6E04               	movwf	strncmp@_r+1,c
  3074  0012E6  0E00               	movlw	0
  3075  0012E8  6E06               	movwf	strncmp@n+1,c
  3076  0012EA  0E02               	movlw	2
  3077  0012EC  6E05               	movwf	strncmp@n,c
  3078  0012EE  EC7A  F013         	call	_strncmp	;wreg free
  3079  0012F2  5001               	movf	?_strncmp,w,c
  3080  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3081  0012F6  A4D8               	btfss	status,2,c
  3082  0012F8  D029               	goto	l3564
  3083                           
  3084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3085  0012FA  0E02               	movlw	2
  3086  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3087  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3088  001304  26DE               	addwf	postinc2,f,c
  3089  001306  0E00               	movlw	0
  3090  001308  22DD               	addwfc	postdec2,f,c
  3091                           
  3092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3093  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3094  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3095  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3096  001316  0E04               	movlw	4
  3097  001318  26DE               	addwf	postinc2,f,c
  3098  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3099  00131E  0E00               	movlw	0
  3100  001320  22DD               	addwfc	postdec2,f,c
  3101  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3102  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3103  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3104  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3105  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3106  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3107  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3108  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3109  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3110  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3111  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3112  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3113  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3114  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3115  00134A  D775               	goto	L9
  3116  00134C                     l3564:
  3117  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3118                           
  3119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3120  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3123  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3124  00135E  0E3F               	movlw	low STR_94
  3125  001360  6E03               	movwf	strncmp@_r,c
  3126  001362  0E06               	movlw	high STR_94
  3127  001364  6E04               	movwf	strncmp@_r+1,c
  3128  001366  0E00               	movlw	0
  3129  001368  6E06               	movwf	strncmp@n+1,c
  3130  00136A  0E02               	movlw	2
  3131  00136C  6E05               	movwf	strncmp@n,c
  3132  00136E  EC7A  F013         	call	_strncmp	;wreg free
  3133  001372  5001               	movf	?_strncmp,w,c
  3134  001374  1002               	iorwf	?_strncmp+1,w,c
  3135  001376  A4D8               	btfss	status,2,c
  3136  001378  D023               	goto	l3572
  3137  00137A                     u3440:
  3138  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3139                           
  3140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3141  00137C  0E02               	movlw	2
  3142  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3143  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3144  001386  26DE               	addwf	postinc2,f,c
  3145  001388                     L18:
  3146  001388  FFFF               	dw	65535	; assembler added errata NOP
  3147  00138A  0E00               	movlw	0
  3148  00138C  22DD               	addwfc	postdec2,f,c
  3149                           
  3150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3151  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3152  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3153  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3154  00139A  0E02               	movlw	2
  3155  00139C  26DE               	addwf	postinc2,f,c
  3156  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3157  0013A2  0E00               	movlw	0
  3158  0013A4  22DD               	addwfc	postdec2,f,c
  3159  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3160  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3161  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3162  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3163  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3164  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3165  0013BE  D738               	goto	L8
  3166  0013C0                     l3572:
  3167  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3168                           
  3169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3170  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3171  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3172  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3173  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3174  0013D2  0E19               	movlw	low STR_99
  3175  0013D4  6E03               	movwf	strncmp@_r,c
  3176  0013D6  0E06               	movlw	high STR_99
  3177  0013D8  6E04               	movwf	strncmp@_r+1,c
  3178  0013DA  0E00               	movlw	0
  3179  0013DC  6E06               	movwf	strncmp@n+1,c
  3180  0013DE  0E03               	movlw	3
  3181  0013E0  6E05               	movwf	strncmp@n,c
  3182  0013E2  EC7A  F013         	call	_strncmp	;wreg free
  3183  0013E6  5001               	movf	?_strncmp,w,c
  3184  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3185  0013EA  B4D8               	btfsc	status,2,c
  3186  0013EC  D016               	goto	u3460
  3187  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3188  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3189  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3190  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3191  0013FE  0E01               	movlw	low STR_103
  3192  001400  6E03               	movwf	strncmp@_r,c
  3193  001402  0E06               	movlw	high STR_103
  3194  001404  6E04               	movwf	strncmp@_r+1,c
  3195  001406  0E00               	movlw	0
  3196  001408  6E06               	movwf	strncmp@n+1,c
  3197  00140A  0E03               	movlw	3
  3198  00140C  6E05               	movwf	strncmp@n,c
  3199  00140E  EC7A  F013         	call	_strncmp	;wreg free
  3200  001412  5001               	movf	?_strncmp,w,c
  3201  001414  1002               	iorwf	?_strncmp+1,w,c
  3202  001416  A4D8               	btfss	status,2,c
  3203  001418  D058               	goto	l3586
  3204  00141A                     u3460:
  3205  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3206                           
  3207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3208  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3211  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3212  00142C  0E02               	movlw	2
  3213  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3214  001430  0E00               	movlw	0
  3215  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3216  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3217  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3218  00143C                     	if	0	;tblptru may be non-zero
  3219  00143C                     	endif
  3220  00143C                     	if	0	;tblptru may be non-zero
  3221  00143C                     	endif
  3222  00143C  0008               	tblrd		*
  3223  00143E  FFFF               	dw	65535	; errata NOP
  3224  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3225                           
  3226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3227  001444  0E03               	movlw	3
  3228  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  00144E  26DE               	addwf	postinc2,f,c
  3231  001450  0E00               	movlw	0
  3232  001452  22DD               	addwfc	postdec2,f,c
  3233                           
  3234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3235  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3236  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3237  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3238  001460  0E02               	movlw	2
  3239  001462  26DE               	addwf	postinc2,f,c
  3240  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3241  001468  0E00               	movlw	0
  3242  00146A  22DD               	addwfc	postdec2,f,c
  3243  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3244  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3245  001474  50DF               	movf	indf2,w,c
  3246  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3247  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3248  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3249  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3250  00147E                     L10:
  3251  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3252  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3253  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3254  001484                     L11:
  3255  001484  FFFF               	dw	65535	; assembler added errata NOP
  3256  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3257  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3258  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3259  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3260                           
  3261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3262  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3263  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3264  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3265  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3266  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3267  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3268  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3269  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3270  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3271  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3272  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3273  0014BA  EC2B  F00D         	call	_xtoa	;wreg free
  3274  0014BE                     L7:
  3275  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3276  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3277  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3278  0014C8  D18E               	goto	l497
  3279  0014CA                     l3586:
  3280  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3281                           
  3282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3283  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3284  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3285  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3286  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3287  0014DC  0E1A               	movlw	low (STR_99+1)
  3288  0014DE  6E03               	movwf	strncmp@_r,c
  3289  0014E0  0E06               	movlw	high (STR_99+1)
  3290  0014E2  6E04               	movwf	strncmp@_r+1,c
  3291  0014E4  0E00               	movlw	0
  3292  0014E6  6E06               	movwf	strncmp@n+1,c
  3293  0014E8  0E02               	movlw	2
  3294  0014EA  6E05               	movwf	strncmp@n,c
  3295  0014EC  EC7A  F013         	call	_strncmp	;wreg free
  3296  0014F0  5001               	movf	?_strncmp,w,c
  3297  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3298  0014F4  B4D8               	btfsc	status,2,c
  3299  0014F6  D016               	goto	u3480
  3300  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3301  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3302  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3303  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3304  001508  0E02               	movlw	low (STR_103+1)
  3305  00150A  6E03               	movwf	strncmp@_r,c
  3306  00150C  0E06               	movlw	high (STR_103+1)
  3307  00150E  6E04               	movwf	strncmp@_r+1,c
  3308  001510  0E00               	movlw	0
  3309  001512  6E06               	movwf	strncmp@n+1,c
  3310  001514  0E02               	movlw	2
  3311  001516  6E05               	movwf	strncmp@n,c
  3312  001518  EC7A  F013         	call	_strncmp	;wreg free
  3313  00151C  5001               	movf	?_strncmp,w,c
  3314  00151E  1002               	iorwf	?_strncmp+1,w,c
  3315  001520  A4D8               	btfss	status,2,c
  3316  001522  D014               	goto	l3600
  3317  001524                     u3480:
  3318  001524  FFFF               	dw	65535	; assembler added errata NOP
  3319                           
  3320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3321  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3322  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3323  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3324  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3325  001536  0E01               	movlw	1
  3326  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3327  00153A  0E00               	movlw	0
  3328  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3329  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3330  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3331  001546                     	if	0	;tblptru may be non-zero
  3332  001546                     	endif
  3333  001546                     	if	0	;tblptru may be non-zero
  3334  001546                     	endif
  3335  001546  0008               	tblrd		*
  3336  001548  FFFF               	dw	65535	; errata NOP
  3337  00154A  D0DB               	goto	L22
  3338  00154C                     l3600:
  3339  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3340                           
  3341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3342  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3343  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3344  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3345  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3346  00155E                     	if	0	;tblptru may be non-zero
  3347  00155E                     	endif
  3348  00155E                     	if	0	;tblptru may be non-zero
  3349  00155E                     	endif
  3350  00155E  0008               	tblrd		*
  3351  001560  FFFF               	dw	65535	; errata NOP
  3352  001562  50F5               	movf	tablat,w,c
  3353  001564  0A78               	xorlw	120
  3354  001566  B4D8               	btfsc	status,2,c
  3355  001568  D00E               	goto	u3500
  3356  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3357  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3358  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3359  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3360  00157A                     	if	0	;tblptru may be non-zero
  3361  00157A                     	endif
  3362  00157A                     	if	0	;tblptru may be non-zero
  3363  00157A                     	endif
  3364  00157A  0008               	tblrd		*
  3365  00157C  FFFF               	dw	65535	; errata NOP
  3366  00157E  50F5               	movf	tablat,w,c
  3367  001580  0A58               	xorlw	88
  3368  001582  A4D8               	btfss	status,2,c
  3369  001584  D013               	goto	l3614
  3370  001586                     u3500:
  3371  001586  FFFF               	dw	65535	; assembler added errata NOP
  3372                           
  3373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3374  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3375  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3376  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3377  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3378  001598                     	if	0	;tblptru may be non-zero
  3379  001598                     	endif
  3380  001598                     	if	0	;tblptru may be non-zero
  3381  001598                     	endif
  3382  001598  0008               	tblrd		*
  3383  00159A  FFFF               	dw	65535	; errata NOP
  3384  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3385                           
  3386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3387  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389  0015A8  2ADE               	incf	postinc2,f,c
  3390  0015AA  D0B4               	goto	L21
  3391  0015AC                     l3614:
  3392  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3393                           
  3394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3395  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3396  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3397  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3398  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3399  0015BE  0E42               	movlw	low STR_117
  3400  0015C0  6E03               	movwf	strncmp@_r,c
  3401  0015C2  0E06               	movlw	high STR_117
  3402  0015C4  6E04               	movwf	strncmp@_r+1,c
  3403  0015C6  0E00               	movlw	0
  3404  0015C8  6E06               	movwf	strncmp@n+1,c
  3405  0015CA  0E02               	movlw	2
  3406  0015CC  6E05               	movwf	strncmp@n,c
  3407  0015CE  EC7A  F013         	call	_strncmp	;wreg free
  3408  0015D2  5001               	movf	?_strncmp,w,c
  3409  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3410  0015D6  B4D8               	btfsc	status,2,c
  3411  0015D8  D016               	goto	u3520
  3412  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3413  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3414  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3415  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3416  0015EA  0E21               	movlw	low STR_121
  3417  0015EC  6E03               	movwf	strncmp@_r,c
  3418  0015EE  0E06               	movlw	high STR_121
  3419  0015F0  6E04               	movwf	strncmp@_r+1,c
  3420  0015F2  0E00               	movlw	0
  3421  0015F4  6E06               	movwf	strncmp@n+1,c
  3422  0015F6  0E02               	movlw	2
  3423  0015F8  6E05               	movwf	strncmp@n,c
  3424  0015FA  EC7A  F013         	call	_strncmp	;wreg free
  3425  0015FE  5001               	movf	?_strncmp,w,c
  3426  001600  1002               	iorwf	?_strncmp+1,w,c
  3427  001602  A4D8               	btfss	status,2,c
  3428  001604  D03E               	goto	l3628
  3429  001606                     u3520:
  3430  001606  FFFF               	dw	65535	; assembler added errata NOP
  3431                           
  3432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3433  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3434  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3435  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3436  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3437  001618  0E01               	movlw	1
  3438  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3439  00161C  0E00               	movlw	0
  3440  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3441  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3442  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3443  001628                     	if	0	;tblptru may be non-zero
  3444  001628                     	endif
  3445  001628                     	if	0	;tblptru may be non-zero
  3446  001628                     	endif
  3447  001628  0008               	tblrd		*
  3448  00162A  FFFF               	dw	65535	; errata NOP
  3449  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3450                           
  3451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3452  001630  0E02               	movlw	2
  3453  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3454  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3455  00163A  26DE               	addwf	postinc2,f,c
  3456  00163C  0E00               	movlw	0
  3457  00163E  22DD               	addwfc	postdec2,f,c
  3458                           
  3459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3460  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3461  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3462  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3463  00164C  0E04               	movlw	4
  3464  00164E  26DE               	addwf	postinc2,f,c
  3465  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3466  001654  0E00               	movlw	0
  3467  001656  22DD               	addwfc	postdec2,f,c
  3468  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3469  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3470  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3471  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3472  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3473  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3474  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3475  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3476  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3477  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3478  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3479  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3480  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3481  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3482  001680  D701               	goto	L11
  3483  001682                     l3628:
  3484  001682  FFFF               	dw	65535	; assembler added errata NOP
  3485                           
  3486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3487  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3490  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3491  001694  0E45               	movlw	low STR_126
  3492  001696  6E03               	movwf	strncmp@_r,c
  3493  001698  0E06               	movlw	high STR_126
  3494  00169A  6E04               	movwf	strncmp@_r+1,c
  3495  00169C  0E00               	movlw	0
  3496  00169E  6E06               	movwf	strncmp@n+1,c
  3497  0016A0  0E02               	movlw	2
  3498  0016A2  6E05               	movwf	strncmp@n,c
  3499  0016A4  EC7A  F013         	call	_strncmp	;wreg free
  3500  0016A8  5001               	movf	?_strncmp,w,c
  3501  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3502  0016AC  B4D8               	btfsc	status,2,c
  3503  0016AE  D016               	goto	u3540
  3504  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3505  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3507  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3508  0016C0  0E24               	movlw	low STR_130
  3509  0016C2  6E03               	movwf	strncmp@_r,c
  3510  0016C4  0E06               	movlw	high STR_130
  3511  0016C6  6E04               	movwf	strncmp@_r+1,c
  3512  0016C8  0E00               	movlw	0
  3513  0016CA  6E06               	movwf	strncmp@n+1,c
  3514  0016CC  0E02               	movlw	2
  3515  0016CE  6E05               	movwf	strncmp@n,c
  3516  0016D0  EC7A  F013         	call	_strncmp	;wreg free
  3517  0016D4  5001               	movf	?_strncmp,w,c
  3518  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3519  0016D8  A4D8               	btfss	status,2,c
  3520  0016DA  D038               	goto	l3642
  3521  0016DC                     u3540:
  3522  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3523                           
  3524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3525  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3526  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3527  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3528  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3529  0016EE  0E01               	movlw	1
  3530  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3531  0016F2  0E00               	movlw	0
  3532  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3533  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3534  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3535  0016FE                     	if	0	;tblptru may be non-zero
  3536  0016FE                     	endif
  3537  0016FE                     	if	0	;tblptru may be non-zero
  3538  0016FE                     	endif
  3539  0016FE  0008               	tblrd		*
  3540  001700  FFFF               	dw	65535	; errata NOP
  3541  001702                     L22:
  3542  001702  FFFF               	dw	65535	; assembler added errata NOP
  3543  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3544                           
  3545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3546  001708  0E02               	movlw	2
  3547  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3548  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3549  001712  26DE               	addwf	postinc2,f,c
  3550  001714                     L21:
  3551  001714  FFFF               	dw	65535	; assembler added errata NOP
  3552  001716  0E00               	movlw	0
  3553  001718  22DD               	addwfc	postdec2,f,c
  3554                           
  3555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3556  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3557  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3558  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3559  001726  0E02               	movlw	2
  3560  001728  26DE               	addwf	postinc2,f,c
  3561  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3562  00172E  0E00               	movlw	0
  3563  001730  22DD               	addwfc	postdec2,f,c
  3564  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3565  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3566  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3567  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3568  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3569  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3570  00174A  D699               	goto	L10
  3571  00174C                     l3642:
  3572  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3575  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3578  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3579  00175E                     	if	0	;tblptru may be non-zero
  3580  00175E                     	endif
  3581  00175E                     	if	0	;tblptru may be non-zero
  3582  00175E                     	endif
  3583  00175E  0008               	tblrd		*
  3584  001760  FFFF               	dw	65535	; errata NOP
  3585  001762  50F5               	movf	tablat,w,c
  3586  001764  0A25               	xorlw	37
  3587  001766  A4D8               	btfss	status,2,c
  3588  001768  D018               	goto	l3652
  3589                           
  3590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3591  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3592  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3593  001772  2ADE               	incf	postinc2,f,c
  3594  001774  0E00               	movlw	0
  3595  001776  22DD               	addwfc	postdec2,f,c
  3596                           
  3597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3598  001778  0E00               	movlw	0
  3599  00177A  6E02               	movwf	fputc@c+1,c
  3600  00177C  0E25               	movlw	37
  3601  00177E  6E01               	movwf	fputc@c,c
  3602  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3603  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3604  001788  EC39  F014         	call	_fputc	;wreg free
  3605  00178C                     l3648:
  3606  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3607                           
  3608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3609  00178E  0E00               	movlw	0
  3610  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3611  001792  0E01               	movlw	1
  3612  001794                     L5:
  3613  001794  FFFF               	dw	65535	; assembler added errata NOP
  3614  001796  6E43               	movwf	?_vfpfcnvrt,c
  3615  001798  D026               	goto	l497
  3616  00179A                     l3652:
  3617  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3618                           
  3619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3620  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3621  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3622  0017A4  2ADE               	incf	postinc2,f,c
  3623  0017A6  0E00               	movlw	0
  3624  0017A8  22DD               	addwfc	postdec2,f,c
  3625  0017AA  EFA2  F007         	goto	l3472
  3626  0017AE                     l3658:
  3627  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3628                           
  3629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3630  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3631  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3632  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3633  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3634  0017C0                     	if	0	;tblptru may be non-zero
  3635  0017C0                     	endif
  3636  0017C0                     	if	0	;tblptru may be non-zero
  3637  0017C0                     	endif
  3638  0017C0  0008               	tblrd		*
  3639  0017C2  FFFF               	dw	65535	; errata NOP
  3640  0017C4  50F5               	movf	tablat,w,c
  3641  0017C6  6E01               	movwf	fputc@c,c
  3642  0017C8  6A02               	clrf	fputc@c+1,c
  3643  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3644  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3645  0017D2  EC39  F014         	call	_fputc	;wreg free
  3646                           
  3647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3648  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  0017DE  2ADE               	incf	postinc2,f,c
  3651  0017E0  0E00               	movlw	0
  3652  0017E2  22DD               	addwfc	postdec2,f,c
  3653  0017E4  D7D3               	goto	l3648
  3654  0017E6                     l497:
  3655  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3656  0017E8  0012               	return		;funcret
  3657  0017EA  FFFF               	dw	65535	; errata NOP
  3658  0017EC                     __end_of_vfpfcnvrt:
  3659                           	opt callstack 0
  3660                           
  3661 ;; *************** function _xtoa *****************
  3662 ;; Defined at:
  3663 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3666 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3667 ;;  d               8   29[COMRAM] unsigned long long 
  3668 ;;  x               1   37[COMRAM] unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  n               8   54[COMRAM] unsigned long long 
  3671 ;;  c               2   64[COMRAM] int 
  3672 ;;  i               2   62[COMRAM] int 
  3673 ;;  w               2   52[COMRAM] int 
  3674 ;;  p               2   50[COMRAM] int 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  2   27[COMRAM] int 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3684 ;;      Params:        11       0       0       0       0       0       0
  3685 ;;      Locals:        20       0       0       0       0       0       0
  3686 ;;      Temps:          8       0       0       0       0       0       0
  3687 ;;      Totals:        39       0       0       0       0       0       0
  3688 ;;Total ram usage:       39 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    6
  3691 ;; This function calls:
  3692 ;;		_isalpha
  3693 ;;		_isupper
  3694 ;;		_pad
  3695 ;;		_toupper
  3696 ;; This function is called by:
  3697 ;;		_vfpfcnvrt
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text7
  3702  001A56                     __ptext7:
  3703                           	opt callstack 0
  3704  001A56                     _xtoa:
  3705                           	opt callstack 0
  3706  001A56  FFFF               	dw	65535	; assembler added errata NOP
  3707                           
  3708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3709                           
  3710                           ;incstack = 0
  3711  001A58  0100               	movlb	0	; () banked
  3712  001A5A  AF94               	btfss	(_prec+1)& (0+255),7,b
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3716  001A5C  9395               	bcf	_flags& (0+255),1,b
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3720  001A5E  BF94               	btfsc	(_prec+1)& (0+255),7,b
  3721  001A60  D005               	goto	u2760
  3722  001A62  5194               	movf	(_prec+1)& (0+255),w,b
  3723  001A64  E109               	bnz	l435
  3724  001A66  0593               	decf	_prec& (0+255),w,b
  3725  001A68  B0D8               	btfsc	status,0,c
  3726  001A6A  D006               	goto	l435
  3727  001A6C                     u2760:
  3728  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  3729                           
  3730                           ; BSR set to: 0
  3731  001A6E  0E00               	movlw	0
  3732  001A70  6E34               	movwf	xtoa@p+1,c
  3733  001A72  0E01               	movlw	1
  3734  001A74  6E33               	movwf	xtoa@p,c
  3735  001A76  D005               	goto	l437
  3736  001A78                     l435:
  3737  001A78  FFFF               	dw	65535	; assembler added errata NOP
  3738                           
  3739                           ; BSR set to: 0
  3740  001A7A  C093  F033         	movff	_prec,xtoa@p
  3741  001A7E  C094  F034         	movff	_prec+1,xtoa@p+1
  3742  001A82                     l437:
  3743  001A82  FFFF               	dw	65535	; assembler added errata NOP
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3747  001A84  C091  F035         	movff	_width,xtoa@w
  3748  001A88  C092  F036         	movff	_width+1,xtoa@w+1
  3749                           
  3750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3751  001A8C  A995               	btfss	_flags& (0+255),4,b
  3752  001A8E  D004               	goto	l3172
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3756  001A90  0EFE               	movlw	254
  3757  001A92  2635               	addwf	xtoa@w,f,c
  3758  001A94  0EFF               	movlw	255
  3759  001A96  2236               	addwfc	xtoa@w+1,f,c
  3760  001A98                     l3172:
  3761  001A98  FFFF               	dw	65535	; assembler added errata NOP
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3765  001A9A  C01E  F037         	movff	xtoa@d,xtoa@n
  3766  001A9E  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3767  001AA2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3768  001AA6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3769  001AAA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3770  001AAE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3771  001AB2  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3772  001AB6  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3776  001ABA  0E00               	movlw	0
  3777  001ABC  6E40               	movwf	xtoa@i+1,c
  3778  001ABE  0E1F               	movlw	31
  3779  001AC0  6E3F               	movwf	xtoa@i,c
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3783  001AC2  0E00               	movlw	0
  3784  001AC4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  3785                           
  3786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3787  001AC6  D09D               	goto	l3208
  3788  001AC8                     l3178:
  3789  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  3790                           
  3791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3792  001ACA  063F               	decf	xtoa@i,f,c
  3793  001ACC  A0D8               	btfss	status,0,c
  3794  001ACE  0640               	decf	xtoa@i+1,f,c
  3795                           
  3796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3797  001AD0  0E0F               	movlw	15
  3798  001AD2  1437               	andwf	xtoa@n,w,c
  3799  001AD4  6E41               	movwf	xtoa@c,c
  3800  001AD6  6A42               	clrf	xtoa@c+1,c
  3801                           
  3802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3803  001AD8  BE42               	btfsc	xtoa@c+1,7,c
  3804  001ADA  D008               	goto	l3186
  3805  001ADC  5042               	movf	xtoa@c+1,w,c
  3806  001ADE  E104               	bnz	u2780
  3807  001AE0  0E0A               	movlw	10
  3808  001AE2  5C41               	subwf	xtoa@c,w,c
  3809  001AE4  A0D8               	btfss	status,0,c
  3810  001AE6  D002               	goto	l3186
  3811  001AE8                     u2780:
  3812  001AE8  0E57               	movlw	87
  3813  001AEA  D002               	goto	L19
  3814  001AEC                     l3186:
  3815  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  3816  001AEE  0E30               	movlw	48
  3817  001AF0                     L19:
  3818  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  3819  001AF2  2441               	addwf	xtoa@c,w,c
  3820  001AF4  6E41               	movwf	xtoa@c,c
  3821  001AF6  0E00               	movlw	0
  3822  001AF8  2042               	addwfc	xtoa@c+1,w,c
  3823  001AFA  6E42               	movwf	xtoa@c+1,c
  3824                           
  3825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3826  001AFC  0EBF               	movlw	191
  3827  001AFE  6E27               	movwf	??_xtoa& (0+255),c
  3828  001B00  0EFF               	movlw	255
  3829  001B02  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3830  001B04  5026               	movf	xtoa@x,w,c
  3831  001B06  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3832  001B08  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3833  001B0A  5027               	movf	??_xtoa,w,c
  3834  001B0C  2629               	addwf	??_xtoa+2,f,c
  3835  001B0E  5028               	movf	??_xtoa+1,w,c
  3836  001B10  222A               	addwfc	??_xtoa+3,f,c
  3837  001B12  502A               	movf	??_xtoa+3,w,c
  3838  001B14  E106               	bnz	u2790
  3839  001B16  0E1A               	movlw	26
  3840  001B18  5C29               	subwf	??_xtoa+2,w,c
  3841  001B1A  B0D8               	btfsc	status,0,c
  3842  001B1C  D002               	goto	u2790
  3843  001B1E  0E01               	movlw	1
  3844  001B20  D002               	goto	u2800
  3845  001B22                     u2790:
  3846  001B22  FFFF               	dw	65535	; assembler added errata NOP
  3847  001B24  0E00               	movlw	0
  3848  001B26                     u2800:
  3849  001B26  FFFF               	dw	65535	; assembler added errata NOP
  3850  001B28  6E2F               	movwf	_xtoa$1086,c
  3851  001B2A  6A30               	clrf	_xtoa$1086+1,c
  3852  001B2C  502F               	movf	_xtoa$1086,w,c
  3853  001B2E  1030               	iorwf	_xtoa$1086+1,w,c
  3854  001B30  B4D8               	btfsc	status,2,c
  3855  001B32  D029               	goto	l3200
  3856  001B34  0E9F               	movlw	159
  3857  001B36  6E27               	movwf	??_xtoa& (0+255),c
  3858  001B38  0EFF               	movlw	255
  3859  001B3A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3860  001B3C  0E20               	movlw	32
  3861  001B3E  1041               	iorwf	xtoa@c,w,c
  3862  001B40  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3863  001B42  0E00               	movlw	0
  3864  001B44  1042               	iorwf	xtoa@c+1,w,c
  3865  001B46  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3866  001B48  5027               	movf	??_xtoa,w,c
  3867  001B4A  2629               	addwf	??_xtoa+2,f,c
  3868  001B4C  5028               	movf	??_xtoa+1,w,c
  3869  001B4E  222A               	addwfc	??_xtoa+3,f,c
  3870  001B50  502A               	movf	??_xtoa+3,w,c
  3871  001B52  E106               	bnz	u2820
  3872  001B54  0E1A               	movlw	26
  3873  001B56  5C29               	subwf	??_xtoa+2,w,c
  3874  001B58  B0D8               	btfsc	status,0,c
  3875  001B5A  D002               	goto	u2820
  3876  001B5C  0E01               	movlw	1
  3877  001B5E  D002               	goto	u2830
  3878  001B60                     u2820:
  3879  001B60  FFFF               	dw	65535	; assembler added errata NOP
  3880  001B62  0E00               	movlw	0
  3881  001B64                     u2830:
  3882  001B64  FFFF               	dw	65535	; assembler added errata NOP
  3883  001B66  6E31               	movwf	_xtoa$1087,c
  3884  001B68  6A32               	clrf	_xtoa$1087+1,c
  3885  001B6A  5031               	movf	_xtoa$1087,w,c
  3886  001B6C  1032               	iorwf	_xtoa$1087+1,w,c
  3887  001B6E  B4D8               	btfsc	status,2,c
  3888  001B70  D00A               	goto	l3200
  3889                           
  3890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  3891  001B72  C041  F007         	movff	xtoa@c,toupper@c
  3892  001B76  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3893  001B7A  EC84  F015         	call	_toupper	;wreg free
  3894  001B7E  C007  F041         	movff	?_toupper,xtoa@c
  3895  001B82  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3896  001B86                     l3200:
  3897  001B86  FFFF               	dw	65535	; assembler added errata NOP
  3898                           
  3899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  3900  001B88  0E9B               	movlw	low _dbuf
  3901  001B8A  243F               	addwf	xtoa@i,w,c
  3902  001B8C  6ED9               	movwf	fsr2l,c
  3903  001B8E  0E00               	movlw	high _dbuf
  3904  001B90  2040               	addwfc	xtoa@i+1,w,c
  3905  001B92  6EDA               	movwf	fsr2h,c
  3906  001B94  C041  FFDF         	movff	xtoa@c,indf2
  3907                           
  3908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3909  001B98  0633               	decf	xtoa@p,f,c
  3910  001B9A  A0D8               	btfss	status,0,c
  3911  001B9C  0634               	decf	xtoa@p+1,f,c
  3912                           
  3913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3914  001B9E  0635               	decf	xtoa@w,f,c
  3915  001BA0  A0D8               	btfss	status,0,c
  3916  001BA2  0636               	decf	xtoa@w+1,f,c
  3917                           
  3918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  3919  001BA4  C037  F027         	movff	xtoa@n,??_xtoa
  3920  001BA8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3921  001BAC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3922  001BB0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3923  001BB4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3924  001BB8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3925  001BBC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3926  001BC0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3927  001BC4  0E05               	movlw	5
  3928  001BC6  D00A               	goto	u2850
  3929  001BC8                     u2855:
  3930  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  3931  001BCA  90D8               	bcf	status,0,c
  3932  001BCC  322E               	rrcf	??_xtoa+7,f,c
  3933  001BCE  322D               	rrcf	??_xtoa+6,f,c
  3934  001BD0  322C               	rrcf	??_xtoa+5,f,c
  3935  001BD2  322B               	rrcf	??_xtoa+4,f,c
  3936  001BD4  322A               	rrcf	??_xtoa+3,f,c
  3937  001BD6  3229               	rrcf	??_xtoa+2,f,c
  3938  001BD8  3228               	rrcf	??_xtoa+1,f,c
  3939  001BDA  3227               	rrcf	??_xtoa,f,c
  3940  001BDC                     u2850:
  3941  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  3942  001BDE  2EE8               	decfsz	wreg,f,c
  3943  001BE0  D7F3               	goto	u2855
  3944  001BE2  C027  F037         	movff	??_xtoa,xtoa@n
  3945  001BE6  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3946  001BEA  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3947  001BEE  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3948  001BF2  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3949  001BF6  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3950  001BFA  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3951  001BFE  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3952  001C02                     l3208:
  3953  001C02  FFFF               	dw	65535	; assembler added errata NOP
  3954                           
  3955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3956  001C04  BE40               	btfsc	xtoa@i+1,7,c
  3957  001C06  D022               	goto	u2900
  3958  001C08  5040               	movf	xtoa@i+1,w,c
  3959  001C0A  E104               	bnz	u2860
  3960  001C0C  0E02               	movlw	2
  3961  001C0E  5C3F               	subwf	xtoa@i,w,c
  3962  001C10  A0D8               	btfss	status,0,c
  3963  001C12  D01C               	goto	u2900
  3964  001C14                     u2860:
  3965  001C14  5037               	movf	xtoa@n,w,c
  3966  001C16  1038               	iorwf	xtoa@n+1,w,c
  3967  001C18  1039               	iorwf	xtoa@n+2,w,c
  3968  001C1A  103A               	iorwf	xtoa@n+3,w,c
  3969  001C1C  103B               	iorwf	xtoa@n+4,w,c
  3970  001C1E  103C               	iorwf	xtoa@n+5,w,c
  3971  001C20  103D               	iorwf	xtoa@n+6,w,c
  3972  001C22  103E               	iorwf	xtoa@n+7,w,c
  3973  001C24  A4D8               	btfss	status,2,c
  3974  001C26  D750               	goto	l3178
  3975  001C28  BE34               	btfsc	xtoa@p+1,7,c
  3976  001C2A  D005               	goto	u2880
  3977  001C2C  5034               	movf	xtoa@p+1,w,c
  3978  001C2E  E102               	bnz	u2881
  3979  001C30  0433               	decf	xtoa@p,w,c
  3980  001C32  B0D8               	btfsc	status,0,c
  3981  001C34                     u2881:
  3982  001C34  D749               	goto	l3178
  3983  001C36                     u2880:
  3984  001C36  FFFF               	dw	65535	; assembler added errata NOP
  3985  001C38  BE36               	btfsc	xtoa@w+1,7,c
  3986  001C3A  D008               	goto	u2900
  3987  001C3C  5036               	movf	xtoa@w+1,w,c
  3988  001C3E  E103               	bnz	u2890
  3989  001C40  0435               	decf	xtoa@w,w,c
  3990  001C42  A0D8               	btfss	status,0,c
  3991  001C44  D003               	goto	u2900
  3992  001C46                     u2890:
  3993  001C46  0100               	movlb	0	; () banked
  3994  001C48  B395               	btfsc	_flags& (0+255),1,b
  3995  001C4A  D73E               	goto	l3178
  3996  001C4C                     u2900:
  3997  001C4C  FFFF               	dw	65535	; assembler added errata NOP
  3998                           
  3999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4000  001C4E  0100               	movlb	0	; () banked
  4001  001C50  A995               	btfss	_flags& (0+255),4,b
  4002  001C52  D016               	goto	l3224
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4006  001C54  063F               	decf	xtoa@i,f,c
  4007  001C56  A0D8               	btfss	status,0,c
  4008  001C58  0640               	decf	xtoa@i+1,f,c
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4012  001C5A  0E9B               	movlw	low _dbuf
  4013  001C5C  243F               	addwf	xtoa@i,w,c
  4014  001C5E  6ED9               	movwf	fsr2l,c
  4015  001C60  0E00               	movlw	high _dbuf
  4016  001C62  2040               	addwfc	xtoa@i+1,w,c
  4017  001C64  6EDA               	movwf	fsr2h,c
  4018  001C66  C026  FFDF         	movff	xtoa@x,indf2
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4022  001C6A  063F               	decf	xtoa@i,f,c
  4023  001C6C  A0D8               	btfss	status,0,c
  4024  001C6E  0640               	decf	xtoa@i+1,f,c
  4025                           
  4026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4027  001C70  0E9B               	movlw	low _dbuf
  4028  001C72  243F               	addwf	xtoa@i,w,c
  4029  001C74  6ED9               	movwf	fsr2l,c
  4030  001C76  0E00               	movlw	high _dbuf
  4031  001C78  2040               	addwfc	xtoa@i+1,w,c
  4032  001C7A  6EDA               	movwf	fsr2h,c
  4033  001C7C  0E30               	movlw	48
  4034  001C7E  6EDF               	movwf	indf2,c
  4035  001C80                     l3224:
  4036  001C80  FFFF               	dw	65535	; assembler added errata NOP
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4040  001C82  C01C  F011         	movff	xtoa@fp,pad@fp
  4041  001C86  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4042  001C8A  0E9B               	movlw	low _dbuf
  4043  001C8C  243F               	addwf	xtoa@i,w,c
  4044  001C8E  6E13               	movwf	pad@buf,c
  4045  001C90  0E00               	movlw	high _dbuf
  4046  001C92  2040               	addwfc	xtoa@i+1,w,c
  4047  001C94  6E14               	movwf	pad@buf+1,c
  4048  001C96  C035  F015         	movff	xtoa@w,pad@p
  4049  001C9A  C036  F016         	movff	xtoa@w+1,pad@p+1
  4050  001C9E  EC8F  F014         	call	_pad	;wreg free
  4051  001CA2  C011  F01C         	movff	?_pad,?_xtoa
  4052  001CA6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4053  001CAA  0012               	return		;funcret
  4054  001CAC  FFFF               	dw	65535	; errata NOP
  4055  001CAE                     __end_of_xtoa:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function _toupper *****************
  4059 ;; Defined at:
  4060 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  c               2    6[COMRAM] int 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2    6[COMRAM] int 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4074 ;;      Params:         2       0       0       0       0       0       0
  4075 ;;      Locals:         2       0       0       0       0       0       0
  4076 ;;      Temps:          4       0       0       0       0       0       0
  4077 ;;      Totals:         8       0       0       0       0       0       0
  4078 ;;Total ram usage:        8 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    3
  4081 ;; This function calls:
  4082 ;;		_islower
  4083 ;; This function is called by:
  4084 ;;		_xtoa
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text8
  4089  002B08                     __ptext8:
  4090                           	opt callstack 0
  4091  002B08                     _toupper:
  4092                           	opt callstack 0
  4093  002B08  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ;incstack = 0
  4096  002B0A  0E9F               	movlw	159
  4097  002B0C  6E09               	movwf	??_toupper& (0+255),c
  4098  002B0E  0EFF               	movlw	255
  4099  002B10  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4100  002B12  C007  F00B         	movff	toupper@c,??_toupper+2
  4101  002B16  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4102  002B1A  5009               	movf	??_toupper,w,c
  4103  002B1C  260B               	addwf	??_toupper+2,f,c
  4104  002B1E  500A               	movf	??_toupper+1,w,c
  4105  002B20  220C               	addwfc	??_toupper+3,f,c
  4106  002B22  500C               	movf	??_toupper+3,w,c
  4107  002B24  E106               	bnz	u2060
  4108  002B26  0E1A               	movlw	26
  4109  002B28  5C0B               	subwf	??_toupper+2,w,c
  4110  002B2A  B0D8               	btfsc	status,0,c
  4111  002B2C  D002               	goto	u2060
  4112  002B2E  0E01               	movlw	1
  4113  002B30  D002               	goto	u2070
  4114  002B32                     u2060:
  4115  002B32  FFFF               	dw	65535	; assembler added errata NOP
  4116  002B34  0E00               	movlw	0
  4117  002B36                     u2070:
  4118  002B36  FFFF               	dw	65535	; assembler added errata NOP
  4119  002B38  6E0D               	movwf	_toupper$1853,c
  4120  002B3A  6A0E               	clrf	_toupper$1853+1,c
  4121  002B3C  500D               	movf	_toupper$1853,w,c
  4122  002B3E  100E               	iorwf	_toupper$1853+1,w,c
  4123  002B40  B4D8               	btfsc	status,2,c
  4124  002B42  D005               	goto	l1370
  4125  002B44  0E5F               	movlw	95
  4126  002B46  1407               	andwf	toupper@c,w,c
  4127  002B48  6E07               	movwf	?_toupper,c
  4128  002B4A  6A08               	clrf	?_toupper+1,c
  4129  002B4C  D005               	goto	l1375
  4130  002B4E                     l1370:
  4131  002B4E  FFFF               	dw	65535	; assembler added errata NOP
  4132  002B50  C007  F007         	movff	toupper@c,?_toupper
  4133  002B54  C008  F008         	movff	toupper@c+1,?_toupper+1
  4134  002B58                     l1375:
  4135  002B58  FFFF               	dw	65535	; assembler added errata NOP
  4136  002B5A  0012               	return		;funcret
  4137  002B5C  FFFF               	dw	65535	; errata NOP
  4138  002B5E                     __end_of_toupper:
  4139                           	opt callstack 0
  4140                           
  4141 ;; *************** function _islower *****************
  4142 ;; Defined at:
  4143 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  c               2    0[COMRAM] int 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[COMRAM] int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4157 ;;      Params:         2       0       0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0
  4159 ;;      Temps:          4       0       0       0       0       0       0
  4160 ;;      Totals:         6       0       0       0       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_toupper
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text9
  4172  002D7A                     __ptext9:
  4173                           	opt callstack 0
  4174  002D7A                     _islower:
  4175                           	opt callstack 0
  4176  002D7A  FFFF               	dw	65535	; assembler added errata NOP
  4177                           
  4178                           ;incstack = 0
  4179  002D7C  0E9F               	movlw	159
  4180  002D7E  6E03               	movwf	??_islower& (0+255),c
  4181  002D80  0EFF               	movlw	255
  4182  002D82  6E04               	movwf	(??_islower+1)& (0+255),c
  4183  002D84  C001  F005         	movff	islower@c,??_islower+2
  4184  002D88  C002  F006         	movff	islower@c+1,??_islower+3
  4185  002D8C  5003               	movf	??_islower,w,c
  4186  002D8E  2605               	addwf	??_islower+2,f,c
  4187  002D90  5004               	movf	??_islower+1,w,c
  4188  002D92  2206               	addwfc	??_islower+3,f,c
  4189  002D94  5006               	movf	??_islower+3,w,c
  4190  002D96  E106               	bnz	u1950
  4191  002D98  0E1A               	movlw	26
  4192  002D9A  5C05               	subwf	??_islower+2,w,c
  4193  002D9C  B0D8               	btfsc	status,0,c
  4194  002D9E  D002               	goto	u1950
  4195  002DA0  0E01               	movlw	1
  4196  002DA2  D002               	goto	u1960
  4197  002DA4                     u1950:
  4198  002DA4  FFFF               	dw	65535	; assembler added errata NOP
  4199  002DA6  0E00               	movlw	0
  4200  002DA8                     u1960:
  4201  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  4202  002DAA  6E01               	movwf	?_islower,c
  4203  002DAC  6A02               	clrf	?_islower+1,c
  4204  002DAE  0012               	return		;funcret
  4205  002DB0  FFFF               	dw	65535	; errata NOP
  4206  002DB2                     __end_of_islower:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _isupper *****************
  4210 ;; Defined at:
  4211 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  c               2    0[COMRAM] int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    0[COMRAM] int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4225 ;;      Params:         2       0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0
  4227 ;;      Temps:          4       0       0       0       0       0       0
  4228 ;;      Totals:         6       0       0       0       0       0       0
  4229 ;;Total ram usage:        6 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    2
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_xtoa
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text10
  4240  002DB2                     __ptext10:
  4241                           	opt callstack 0
  4242  002DB2                     _isupper:
  4243                           	opt callstack 0
  4244  002DB2  FFFF               	dw	65535	; assembler added errata NOP
  4245                           
  4246                           ;incstack = 0
  4247  002DB4  0EBF               	movlw	191
  4248  002DB6  6E03               	movwf	??_isupper& (0+255),c
  4249  002DB8  0EFF               	movlw	255
  4250  002DBA  6E04               	movwf	(??_isupper+1)& (0+255),c
  4251  002DBC  C001  F005         	movff	isupper@c,??_isupper+2
  4252  002DC0  C002  F006         	movff	isupper@c+1,??_isupper+3
  4253  002DC4  5003               	movf	??_isupper,w,c
  4254  002DC6  2605               	addwf	??_isupper+2,f,c
  4255  002DC8  5004               	movf	??_isupper+1,w,c
  4256  002DCA  2206               	addwfc	??_isupper+3,f,c
  4257  002DCC  5006               	movf	??_isupper+3,w,c
  4258  002DCE  E106               	bnz	u2020
  4259  002DD0  0E1A               	movlw	26
  4260  002DD2  5C05               	subwf	??_isupper+2,w,c
  4261  002DD4  B0D8               	btfsc	status,0,c
  4262  002DD6  D002               	goto	u2020
  4263  002DD8  0E01               	movlw	1
  4264  002DDA  D002               	goto	u2030
  4265  002DDC                     u2020:
  4266  002DDC  FFFF               	dw	65535	; assembler added errata NOP
  4267  002DDE  0E00               	movlw	0
  4268  002DE0                     u2030:
  4269  002DE0  FFFF               	dw	65535	; assembler added errata NOP
  4270  002DE2  6E01               	movwf	?_isupper,c
  4271  002DE4  6A02               	clrf	?_isupper+1,c
  4272  002DE6  0012               	return		;funcret
  4273  002DE8  FFFF               	dw	65535	; errata NOP
  4274  002DEA                     __end_of_isupper:
  4275                           	opt callstack 0
  4276                           
  4277 ;; *************** function _isalpha *****************
  4278 ;; Defined at:
  4279 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  c               2    0[COMRAM] int 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2    0[COMRAM] int 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4293 ;;      Params:         2       0       0       0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0
  4295 ;;      Temps:          4       0       0       0       0       0       0
  4296 ;;      Totals:         6       0       0       0       0       0       0
  4297 ;;Total ram usage:        6 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    2
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_xtoa
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text11
  4308  002D02                     __ptext11:
  4309                           	opt callstack 0
  4310  002D02                     _isalpha:
  4311                           	opt callstack 0
  4312  002D02  FFFF               	dw	65535	; assembler added errata NOP
  4313                           
  4314                           ;incstack = 0
  4315  002D04  0E9F               	movlw	159
  4316  002D06  6E03               	movwf	??_isalpha& (0+255),c
  4317  002D08  0EFF               	movlw	255
  4318  002D0A  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4319  002D0C  0E20               	movlw	32
  4320  002D0E  1001               	iorwf	isalpha@c,w,c
  4321  002D10  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4322  002D12  0E00               	movlw	0
  4323  002D14  1002               	iorwf	isalpha@c+1,w,c
  4324  002D16  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4325  002D18  5003               	movf	??_isalpha,w,c
  4326  002D1A  2605               	addwf	??_isalpha+2,f,c
  4327  002D1C  5004               	movf	??_isalpha+1,w,c
  4328  002D1E  2206               	addwfc	??_isalpha+3,f,c
  4329  002D20  5006               	movf	??_isalpha+3,w,c
  4330  002D22  E106               	bnz	u2040
  4331  002D24  0E1A               	movlw	26
  4332  002D26  5C05               	subwf	??_isalpha+2,w,c
  4333  002D28  B0D8               	btfsc	status,0,c
  4334  002D2A  D002               	goto	u2040
  4335  002D2C  0E01               	movlw	1
  4336  002D2E  D002               	goto	u2050
  4337  002D30                     u2040:
  4338  002D30  FFFF               	dw	65535	; assembler added errata NOP
  4339  002D32  0E00               	movlw	0
  4340  002D34                     u2050:
  4341  002D34  FFFF               	dw	65535	; assembler added errata NOP
  4342  002D36  6E01               	movwf	?_isalpha,c
  4343  002D38  6A02               	clrf	?_isalpha+1,c
  4344  002D3A  0012               	return		;funcret
  4345  002D3C  FFFF               	dw	65535	; errata NOP
  4346  002D3E                     __end_of_isalpha:
  4347                           	opt callstack 0
  4348                           
  4349 ;; *************** function _utoa *****************
  4350 ;; Defined at:
  4351 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4354 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4355 ;;  d               8   29[COMRAM] unsigned long long 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  n               8   49[COMRAM] unsigned long long 
  4358 ;;  i               2   57[COMRAM] int 
  4359 ;;  w               2   47[COMRAM] int 
  4360 ;;  p               2   45[COMRAM] int 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   27[COMRAM] int 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:        10       0       0       0       0       0       0
  4371 ;;      Locals:        14       0       0       0       0       0       0
  4372 ;;      Temps:          8       0       0       0       0       0       0
  4373 ;;      Totals:        32       0       0       0       0       0       0
  4374 ;;Total ram usage:       32 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    6
  4377 ;; This function calls:
  4378 ;;		___lodiv
  4379 ;;		___lomod
  4380 ;;		_pad
  4381 ;; This function is called by:
  4382 ;;		_vfpfcnvrt
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text12
  4387  001CAE                     __ptext12:
  4388                           	opt callstack 0
  4389  001CAE                     _utoa:
  4390                           	opt callstack 0
  4391  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  4392                           
  4393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4394                           
  4395                           ;incstack = 0
  4396  001CB0  0100               	movlb	0	; () banked
  4397  001CB2  AF94               	btfss	(_prec+1)& (0+255),7,b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4401  001CB4  9395               	bcf	_flags& (0+255),1,b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4405  001CB6  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4406  001CB8  D005               	goto	u2690
  4407  001CBA  5194               	movf	(_prec+1)& (0+255),w,b
  4408  001CBC  E109               	bnz	l420
  4409  001CBE  0593               	decf	_prec& (0+255),w,b
  4410  001CC0  B0D8               	btfsc	status,0,c
  4411  001CC2  D006               	goto	l420
  4412  001CC4                     u2690:
  4413  001CC4  FFFF               	dw	65535	; assembler added errata NOP
  4414                           
  4415                           ; BSR set to: 0
  4416  001CC6  0E00               	movlw	0
  4417  001CC8  6E2F               	movwf	utoa@p+1,c
  4418  001CCA  0E01               	movlw	1
  4419  001CCC  6E2E               	movwf	utoa@p,c
  4420  001CCE  D005               	goto	l422
  4421  001CD0                     l420:
  4422  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  4423                           
  4424                           ; BSR set to: 0
  4425  001CD2  C093  F02E         	movff	_prec,utoa@p
  4426  001CD6  C094  F02F         	movff	_prec+1,utoa@p+1
  4427  001CDA                     l422:
  4428  001CDA  FFFF               	dw	65535	; assembler added errata NOP
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4432  001CDC  C091  F030         	movff	_width,utoa@w
  4433  001CE0  C092  F031         	movff	_width+1,utoa@w+1
  4434                           
  4435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4436  001CE4  C01E  F032         	movff	utoa@d,utoa@n
  4437  001CE8  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4438  001CEC  C020  F034         	movff	utoa@d+2,utoa@n+2
  4439  001CF0  C021  F035         	movff	utoa@d+3,utoa@n+3
  4440  001CF4  C022  F036         	movff	utoa@d+4,utoa@n+4
  4441  001CF8  C023  F037         	movff	utoa@d+5,utoa@n+5
  4442  001CFC  C024  F038         	movff	utoa@d+6,utoa@n+6
  4443  001D00  C025  F039         	movff	utoa@d+7,utoa@n+7
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4447  001D04  0E00               	movlw	0
  4448  001D06  6E3B               	movwf	utoa@i+1,c
  4449  001D08  0E1F               	movlw	31
  4450  001D0A  6E3A               	movwf	utoa@i,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4454  001D0C  0E00               	movlw	0
  4455  001D0E  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4456                           
  4457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4458  001D10  D077               	goto	l3148
  4459  001D12                     l3138:
  4460  001D12  FFFF               	dw	65535	; assembler added errata NOP
  4461                           
  4462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4463  001D14  063A               	decf	utoa@i,f,c
  4464  001D16  A0D8               	btfss	status,0,c
  4465  001D18  063B               	decf	utoa@i+1,f,c
  4466                           
  4467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4468  001D1A  0E9B               	movlw	low _dbuf
  4469  001D1C  243A               	addwf	utoa@i,w,c
  4470  001D1E  6ED9               	movwf	fsr2l,c
  4471  001D20  0E00               	movlw	high _dbuf
  4472  001D22  203B               	addwfc	utoa@i+1,w,c
  4473  001D24  6EDA               	movwf	fsr2h,c
  4474  001D26  C032  F001         	movff	utoa@n,___lomod@dividend
  4475  001D2A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4476  001D2E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4477  001D32  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4478  001D36  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4479  001D3A  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4480  001D3E  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4481  001D42  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4482  001D46  0E0A               	movlw	10
  4483  001D48  6E09               	movwf	___lomod@divisor,c
  4484  001D4A  0E00               	movlw	0
  4485  001D4C  6E0A               	movwf	___lomod@divisor+1,c
  4486  001D4E  0E00               	movlw	0
  4487  001D50  6E0B               	movwf	___lomod@divisor+2,c
  4488  001D52  0E00               	movlw	0
  4489  001D54  6E0C               	movwf	___lomod@divisor+3,c
  4490  001D56  0E00               	movlw	0
  4491  001D58  6E0D               	movwf	___lomod@divisor+4,c
  4492  001D5A  0E00               	movlw	0
  4493  001D5C  6E0E               	movwf	___lomod@divisor+5,c
  4494  001D5E  0E00               	movlw	0
  4495  001D60  6E0F               	movwf	___lomod@divisor+6,c
  4496  001D62  0E00               	movlw	0
  4497  001D64  6E10               	movwf	___lomod@divisor+7,c
  4498  001D66  ECDB  F013         	call	___lomod	;wreg free
  4499  001D6A  C001  F026         	movff	?___lomod,??_utoa
  4500  001D6E  C002  F027         	movff	?___lomod+1,??_utoa+1
  4501  001D72  C003  F028         	movff	?___lomod+2,??_utoa+2
  4502  001D76  C004  F029         	movff	?___lomod+3,??_utoa+3
  4503  001D7A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4504  001D7E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4505  001D82  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4506  001D86  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4507  001D8A  5026               	movf	??_utoa,w,c
  4508  001D8C  0F30               	addlw	48
  4509  001D8E  6EDF               	movwf	indf2,c
  4510                           
  4511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4512  001D90  062E               	decf	utoa@p,f,c
  4513  001D92  A0D8               	btfss	status,0,c
  4514  001D94  062F               	decf	utoa@p+1,f,c
  4515                           
  4516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4517  001D96  0630               	decf	utoa@w,f,c
  4518  001D98  A0D8               	btfss	status,0,c
  4519  001D9A  0631               	decf	utoa@w+1,f,c
  4520                           
  4521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4522  001D9C  C032  F001         	movff	utoa@n,___lodiv@dividend
  4523  001DA0  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4524  001DA4  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4525  001DA8  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4526  001DAC  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4527  001DB0  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4528  001DB4  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4529  001DB8  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4530  001DBC  0E0A               	movlw	10
  4531  001DBE  6E09               	movwf	___lodiv@divisor,c
  4532  001DC0  0E00               	movlw	0
  4533  001DC2  6E0A               	movwf	___lodiv@divisor+1,c
  4534  001DC4  0E00               	movlw	0
  4535  001DC6  6E0B               	movwf	___lodiv@divisor+2,c
  4536  001DC8  0E00               	movlw	0
  4537  001DCA  6E0C               	movwf	___lodiv@divisor+3,c
  4538  001DCC  0E00               	movlw	0
  4539  001DCE  6E0D               	movwf	___lodiv@divisor+4,c
  4540  001DD0  0E00               	movlw	0
  4541  001DD2  6E0E               	movwf	___lodiv@divisor+5,c
  4542  001DD4  0E00               	movlw	0
  4543  001DD6  6E0F               	movwf	___lodiv@divisor+6,c
  4544  001DD8  0E00               	movlw	0
  4545  001DDA  6E10               	movwf	___lodiv@divisor+7,c
  4546  001DDC  ECA4  F012         	call	___lodiv	;wreg free
  4547  001DE0  C001  F032         	movff	?___lodiv,utoa@n
  4548  001DE4  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4549  001DE8  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4550  001DEC  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4551  001DF0  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4552  001DF4  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4553  001DF8  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4554  001DFC  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4555  001E00                     l3148:
  4556  001E00  FFFF               	dw	65535	; assembler added errata NOP
  4557                           
  4558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4559  001E02  503A               	movf	utoa@i,w,c
  4560  001E04  103B               	iorwf	utoa@i+1,w,c
  4561  001E06  B4D8               	btfsc	status,2,c
  4562  001E08  D01C               	goto	u2740
  4563  001E0A  5032               	movf	utoa@n,w,c
  4564  001E0C  1033               	iorwf	utoa@n+1,w,c
  4565  001E0E  1034               	iorwf	utoa@n+2,w,c
  4566  001E10  1035               	iorwf	utoa@n+3,w,c
  4567  001E12  1036               	iorwf	utoa@n+4,w,c
  4568  001E14  1037               	iorwf	utoa@n+5,w,c
  4569  001E16  1038               	iorwf	utoa@n+6,w,c
  4570  001E18  1039               	iorwf	utoa@n+7,w,c
  4571  001E1A  A4D8               	btfss	status,2,c
  4572  001E1C  D77A               	goto	l3138
  4573  001E1E  BE2F               	btfsc	utoa@p+1,7,c
  4574  001E20  D005               	goto	u2720
  4575  001E22  502F               	movf	utoa@p+1,w,c
  4576  001E24  E102               	bnz	u2721
  4577  001E26  042E               	decf	utoa@p,w,c
  4578  001E28  B0D8               	btfsc	status,0,c
  4579  001E2A                     u2721:
  4580  001E2A  D773               	goto	l3138
  4581  001E2C                     u2720:
  4582  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  4583  001E2E  BE31               	btfsc	utoa@w+1,7,c
  4584  001E30  D008               	goto	u2740
  4585  001E32  5031               	movf	utoa@w+1,w,c
  4586  001E34  E103               	bnz	u2730
  4587  001E36  0430               	decf	utoa@w,w,c
  4588  001E38  A0D8               	btfss	status,0,c
  4589  001E3A  D003               	goto	u2740
  4590  001E3C                     u2730:
  4591  001E3C  0100               	movlb	0	; () banked
  4592  001E3E  B395               	btfsc	_flags& (0+255),1,b
  4593  001E40  D768               	goto	l3138
  4594  001E42                     u2740:
  4595  001E42  FFFF               	dw	65535	; assembler added errata NOP
  4596                           
  4597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4598  001E44  C01C  F011         	movff	utoa@fp,pad@fp
  4599  001E48  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4600  001E4C  0E9B               	movlw	low _dbuf
  4601  001E4E  243A               	addwf	utoa@i,w,c
  4602  001E50  6E13               	movwf	pad@buf,c
  4603  001E52  0E00               	movlw	high _dbuf
  4604  001E54  203B               	addwfc	utoa@i+1,w,c
  4605  001E56  6E14               	movwf	pad@buf+1,c
  4606  001E58  C030  F015         	movff	utoa@w,pad@p
  4607  001E5C  C031  F016         	movff	utoa@w+1,pad@p+1
  4608  001E60  EC8F  F014         	call	_pad	;wreg free
  4609  001E64  C011  F01C         	movff	?_pad,?_utoa
  4610  001E68  C012  F01D         	movff	?_pad+1,?_utoa+1
  4611  001E6C  0012               	return		;funcret
  4612  001E6E  FFFF               	dw	65535	; errata NOP
  4613  001E70                     __end_of_utoa:
  4614                           	opt callstack 0
  4615                           
  4616 ;; *************** function ___lomod *****************
  4617 ;; Defined at:
  4618 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  dividend        8    0[COMRAM] unsigned long long 
  4621 ;;  divisor         8    8[COMRAM] unsigned long long 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  counter         1   16[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  8    0[COMRAM] unsigned long long 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4633 ;;      Params:        16       0       0       0       0       0       0
  4634 ;;      Locals:         1       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0
  4636 ;;      Totals:        17       0       0       0       0       0       0
  4637 ;;Total ram usage:       17 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    2
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_utoa
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text13
  4648  0027B6                     __ptext13:
  4649                           	opt callstack 0
  4650  0027B6                     ___lomod:
  4651                           	opt callstack 0
  4652  0027B6  FFFF               	dw	65535	; assembler added errata NOP
  4653                           
  4654                           ;incstack = 0
  4655  0027B8  5009               	movf	___lomod@divisor,w,c
  4656  0027BA  100A               	iorwf	___lomod@divisor+1,w,c
  4657  0027BC  100B               	iorwf	___lomod@divisor+2,w,c
  4658  0027BE  100C               	iorwf	___lomod@divisor+3,w,c
  4659  0027C0  100D               	iorwf	___lomod@divisor+4,w,c
  4660  0027C2  100E               	iorwf	___lomod@divisor+5,w,c
  4661  0027C4  100F               	iorwf	___lomod@divisor+6,w,c
  4662  0027C6  1010               	iorwf	___lomod@divisor+7,w,c
  4663  0027C8  B4D8               	btfsc	status,2,c
  4664  0027CA  D040               	goto	l1002
  4665  0027CC  0E01               	movlw	1
  4666  0027CE  6E11               	movwf	___lomod@counter,c
  4667  0027D0  D00B               	goto	l2938
  4668  0027D2                     l2936:
  4669  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  4670  0027D4  90D8               	bcf	status,0,c
  4671  0027D6  3609               	rlcf	___lomod@divisor,f,c
  4672  0027D8  360A               	rlcf	___lomod@divisor+1,f,c
  4673  0027DA  360B               	rlcf	___lomod@divisor+2,f,c
  4674  0027DC  360C               	rlcf	___lomod@divisor+3,f,c
  4675  0027DE  360D               	rlcf	___lomod@divisor+4,f,c
  4676  0027E0  360E               	rlcf	___lomod@divisor+5,f,c
  4677  0027E2  360F               	rlcf	___lomod@divisor+6,f,c
  4678  0027E4  3610               	rlcf	___lomod@divisor+7,f,c
  4679  0027E6  2A11               	incf	___lomod@counter,f,c
  4680  0027E8                     l2938:
  4681  0027E8  FFFF               	dw	65535	; assembler added errata NOP
  4682  0027EA  AE10               	btfss	___lomod@divisor+7,7,c
  4683  0027EC  D7F2               	goto	l2936
  4684  0027EE                     u2290:
  4685  0027EE  FFFF               	dw	65535	; assembler added errata NOP
  4686  0027F0  5009               	movf	___lomod@divisor,w,c
  4687  0027F2  5C01               	subwf	___lomod@dividend,w,c
  4688  0027F4  500A               	movf	___lomod@divisor+1,w,c
  4689  0027F6  5802               	subwfb	___lomod@dividend+1,w,c
  4690  0027F8  500B               	movf	___lomod@divisor+2,w,c
  4691  0027FA  5803               	subwfb	___lomod@dividend+2,w,c
  4692  0027FC  500C               	movf	___lomod@divisor+3,w,c
  4693  0027FE  5804               	subwfb	___lomod@dividend+3,w,c
  4694  002800  500D               	movf	___lomod@divisor+4,w,c
  4695  002802  5805               	subwfb	___lomod@dividend+4,w,c
  4696  002804  500E               	movf	___lomod@divisor+5,w,c
  4697  002806  5806               	subwfb	___lomod@dividend+5,w,c
  4698  002808  500F               	movf	___lomod@divisor+6,w,c
  4699  00280A  5807               	subwfb	___lomod@dividend+6,w,c
  4700  00280C  5010               	movf	___lomod@divisor+7,w,c
  4701  00280E  5808               	subwfb	___lomod@dividend+7,w,c
  4702  002810  A0D8               	btfss	status,0,c
  4703  002812  D010               	goto	l2944
  4704  002814  5009               	movf	___lomod@divisor,w,c
  4705  002816  5E01               	subwf	___lomod@dividend,f,c
  4706  002818  500A               	movf	___lomod@divisor+1,w,c
  4707  00281A  5A02               	subwfb	___lomod@dividend+1,f,c
  4708  00281C  500B               	movf	___lomod@divisor+2,w,c
  4709  00281E  5A03               	subwfb	___lomod@dividend+2,f,c
  4710  002820  500C               	movf	___lomod@divisor+3,w,c
  4711  002822  5A04               	subwfb	___lomod@dividend+3,f,c
  4712  002824  500D               	movf	___lomod@divisor+4,w,c
  4713  002826  5A05               	subwfb	___lomod@dividend+4,f,c
  4714  002828  500E               	movf	___lomod@divisor+5,w,c
  4715  00282A  5A06               	subwfb	___lomod@dividend+5,f,c
  4716  00282C  500F               	movf	___lomod@divisor+6,w,c
  4717  00282E  5A07               	subwfb	___lomod@dividend+6,f,c
  4718  002830  5010               	movf	___lomod@divisor+7,w,c
  4719  002832  5A08               	subwfb	___lomod@dividend+7,f,c
  4720  002834                     l2944:
  4721  002834  FFFF               	dw	65535	; assembler added errata NOP
  4722  002836  90D8               	bcf	status,0,c
  4723  002838  3210               	rrcf	___lomod@divisor+7,f,c
  4724  00283A  320F               	rrcf	___lomod@divisor+6,f,c
  4725  00283C  320E               	rrcf	___lomod@divisor+5,f,c
  4726  00283E  320D               	rrcf	___lomod@divisor+4,f,c
  4727  002840  320C               	rrcf	___lomod@divisor+3,f,c
  4728  002842  320B               	rrcf	___lomod@divisor+2,f,c
  4729  002844  320A               	rrcf	___lomod@divisor+1,f,c
  4730  002846  3209               	rrcf	___lomod@divisor,f,c
  4731  002848  2E11               	decfsz	___lomod@counter,f,c
  4732  00284A  D7D1               	goto	u2290
  4733  00284C                     l1002:
  4734  00284C  FFFF               	dw	65535	; assembler added errata NOP
  4735  00284E  C001  F001         	movff	___lomod@dividend,?___lomod
  4736  002852  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4737  002856  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4738  00285A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4739  00285E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4740  002862  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4741  002866  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4742  00286A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4743  00286E  0012               	return		;funcret
  4744  002870  FFFF               	dw	65535	; errata NOP
  4745  002872                     __end_of___lomod:
  4746                           	opt callstack 0
  4747                           
  4748 ;; *************** function ___lodiv *****************
  4749 ;; Defined at:
  4750 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  dividend        8    0[COMRAM] unsigned long long 
  4753 ;;  divisor         8    8[COMRAM] unsigned long long 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  quotient        8   16[COMRAM] unsigned long long 
  4756 ;;  counter         1   24[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  8    0[COMRAM] unsigned long long 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4766 ;;      Params:        16       0       0       0       0       0       0
  4767 ;;      Locals:         9       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0
  4769 ;;      Totals:        25       0       0       0       0       0       0
  4770 ;;Total ram usage:       25 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_utoa
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text14
  4781  002548                     __ptext14:
  4782                           	opt callstack 0
  4783  002548                     ___lodiv:
  4784                           	opt callstack 0
  4785  002548  FFFF               	dw	65535	; assembler added errata NOP
  4786                           
  4787                           ;incstack = 0
  4788  00254A  EE20  F011         	lfsr	2,___lodiv@quotient
  4789  00254E  0E07               	movlw	7
  4790  002550                     u2241:
  4791  002550  6ADE               	clrf	postinc2,c
  4792  002552  06E8               	decf	wreg,f,c
  4793  002554  E2FD               	bc	u2241
  4794  002556  5009               	movf	___lodiv@divisor,w,c
  4795  002558  100A               	iorwf	___lodiv@divisor+1,w,c
  4796  00255A  100B               	iorwf	___lodiv@divisor+2,w,c
  4797  00255C  100C               	iorwf	___lodiv@divisor+3,w,c
  4798  00255E  100D               	iorwf	___lodiv@divisor+4,w,c
  4799  002560  100E               	iorwf	___lodiv@divisor+5,w,c
  4800  002562  100F               	iorwf	___lodiv@divisor+6,w,c
  4801  002564  1010               	iorwf	___lodiv@divisor+7,w,c
  4802  002566  B4D8               	btfsc	status,2,c
  4803  002568  D04A               	goto	l992
  4804  00256A  0E01               	movlw	1
  4805  00256C  6E19               	movwf	___lodiv@counter,c
  4806  00256E  D00B               	goto	l2918
  4807  002570                     l2916:
  4808  002570  FFFF               	dw	65535	; assembler added errata NOP
  4809  002572  90D8               	bcf	status,0,c
  4810  002574  3609               	rlcf	___lodiv@divisor,f,c
  4811  002576  360A               	rlcf	___lodiv@divisor+1,f,c
  4812  002578  360B               	rlcf	___lodiv@divisor+2,f,c
  4813  00257A  360C               	rlcf	___lodiv@divisor+3,f,c
  4814  00257C  360D               	rlcf	___lodiv@divisor+4,f,c
  4815  00257E  360E               	rlcf	___lodiv@divisor+5,f,c
  4816  002580  360F               	rlcf	___lodiv@divisor+6,f,c
  4817  002582  3610               	rlcf	___lodiv@divisor+7,f,c
  4818  002584  2A19               	incf	___lodiv@counter,f,c
  4819  002586                     l2918:
  4820  002586  FFFF               	dw	65535	; assembler added errata NOP
  4821  002588  AE10               	btfss	___lodiv@divisor+7,7,c
  4822  00258A  D7F2               	goto	l2916
  4823  00258C                     u2260:
  4824  00258C  FFFF               	dw	65535	; assembler added errata NOP
  4825  00258E  90D8               	bcf	status,0,c
  4826  002590  3611               	rlcf	___lodiv@quotient,f,c
  4827  002592  3612               	rlcf	___lodiv@quotient+1,f,c
  4828  002594  3613               	rlcf	___lodiv@quotient+2,f,c
  4829  002596  3614               	rlcf	___lodiv@quotient+3,f,c
  4830  002598  3615               	rlcf	___lodiv@quotient+4,f,c
  4831  00259A  3616               	rlcf	___lodiv@quotient+5,f,c
  4832  00259C  3617               	rlcf	___lodiv@quotient+6,f,c
  4833  00259E  3618               	rlcf	___lodiv@quotient+7,f,c
  4834  0025A0  5009               	movf	___lodiv@divisor,w,c
  4835  0025A2  5C01               	subwf	___lodiv@dividend,w,c
  4836  0025A4  500A               	movf	___lodiv@divisor+1,w,c
  4837  0025A6  5802               	subwfb	___lodiv@dividend+1,w,c
  4838  0025A8  500B               	movf	___lodiv@divisor+2,w,c
  4839  0025AA  5803               	subwfb	___lodiv@dividend+2,w,c
  4840  0025AC  500C               	movf	___lodiv@divisor+3,w,c
  4841  0025AE  5804               	subwfb	___lodiv@dividend+3,w,c
  4842  0025B0  500D               	movf	___lodiv@divisor+4,w,c
  4843  0025B2  5805               	subwfb	___lodiv@dividend+4,w,c
  4844  0025B4  500E               	movf	___lodiv@divisor+5,w,c
  4845  0025B6  5806               	subwfb	___lodiv@dividend+5,w,c
  4846  0025B8  500F               	movf	___lodiv@divisor+6,w,c
  4847  0025BA  5807               	subwfb	___lodiv@dividend+6,w,c
  4848  0025BC  5010               	movf	___lodiv@divisor+7,w,c
  4849  0025BE  5808               	subwfb	___lodiv@dividend+7,w,c
  4850  0025C0  A0D8               	btfss	status,0,c
  4851  0025C2  D011               	goto	l2928
  4852  0025C4  5009               	movf	___lodiv@divisor,w,c
  4853  0025C6  5E01               	subwf	___lodiv@dividend,f,c
  4854  0025C8  500A               	movf	___lodiv@divisor+1,w,c
  4855  0025CA  5A02               	subwfb	___lodiv@dividend+1,f,c
  4856  0025CC  500B               	movf	___lodiv@divisor+2,w,c
  4857  0025CE  5A03               	subwfb	___lodiv@dividend+2,f,c
  4858  0025D0  500C               	movf	___lodiv@divisor+3,w,c
  4859  0025D2  5A04               	subwfb	___lodiv@dividend+3,f,c
  4860  0025D4  500D               	movf	___lodiv@divisor+4,w,c
  4861  0025D6  5A05               	subwfb	___lodiv@dividend+4,f,c
  4862  0025D8  500E               	movf	___lodiv@divisor+5,w,c
  4863  0025DA  5A06               	subwfb	___lodiv@dividend+5,f,c
  4864  0025DC  500F               	movf	___lodiv@divisor+6,w,c
  4865  0025DE  5A07               	subwfb	___lodiv@dividend+6,f,c
  4866  0025E0  5010               	movf	___lodiv@divisor+7,w,c
  4867  0025E2  5A08               	subwfb	___lodiv@dividend+7,f,c
  4868  0025E4  8011               	bsf	___lodiv@quotient,0,c
  4869  0025E6                     l2928:
  4870  0025E6  FFFF               	dw	65535	; assembler added errata NOP
  4871  0025E8  90D8               	bcf	status,0,c
  4872  0025EA  3210               	rrcf	___lodiv@divisor+7,f,c
  4873  0025EC  320F               	rrcf	___lodiv@divisor+6,f,c
  4874  0025EE  320E               	rrcf	___lodiv@divisor+5,f,c
  4875  0025F0  320D               	rrcf	___lodiv@divisor+4,f,c
  4876  0025F2  320C               	rrcf	___lodiv@divisor+3,f,c
  4877  0025F4  320B               	rrcf	___lodiv@divisor+2,f,c
  4878  0025F6  320A               	rrcf	___lodiv@divisor+1,f,c
  4879  0025F8  3209               	rrcf	___lodiv@divisor,f,c
  4880  0025FA  2E19               	decfsz	___lodiv@counter,f,c
  4881  0025FC  D7C7               	goto	u2260
  4882  0025FE                     l992:
  4883  0025FE  FFFF               	dw	65535	; assembler added errata NOP
  4884  002600  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4885  002604  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4886  002608  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4887  00260C  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4888  002610  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4889  002614  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4890  002618  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4891  00261C  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4892  002620  0012               	return		;funcret
  4893  002622  FFFF               	dw	65535	; errata NOP
  4894  002624                     __end_of___lodiv:
  4895                           	opt callstack 0
  4896                           
  4897 ;; *************** function _strncmp *****************
  4898 ;; Defined at:
  4899 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4902 ;;		 -> STR_2(3), STR_1(4), 
  4903 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4904 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4905 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4906 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4907 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4908 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4909 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4910 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4911 ;;  n               2    4[COMRAM] unsigned int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4914 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4915 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4916 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4917 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4918 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4919 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4920 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4921 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4922 ;;		 -> STR_2(3), STR_1(4), 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  2    0[COMRAM] int 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4932 ;;      Params:         6       0       0       0       0       0       0
  4933 ;;      Locals:         4       0       0       0       0       0       0
  4934 ;;      Temps:          1       0       0       0       0       0       0
  4935 ;;      Totals:        11       0       0       0       0       0       0
  4936 ;;Total ram usage:       11 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    2
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_vfpfcnvrt
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text15
  4947  0026F4                     __ptext15:
  4948                           	opt callstack 0
  4949  0026F4                     _strncmp:
  4950                           	opt callstack 0
  4951  0026F4  FFFF               	dw	65535	; assembler added errata NOP
  4952                           
  4953                           ;incstack = 0
  4954  0026F6  C001  F008         	movff	strncmp@_l,strncmp@l
  4955  0026FA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4956  0026FE  C003  F00A         	movff	strncmp@_r,strncmp@r
  4957  002702  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4958  002706  0605               	decf	strncmp@n,f,c
  4959  002708  A0D8               	btfss	status,0,c
  4960  00270A  0606               	decf	strncmp@n+1,f,c
  4961  00270C  2805               	incf	strncmp@n,w,c
  4962  00270E  E110               	bnz	l3278
  4963  002710  2806               	incf	strncmp@n+1,w,c
  4964  002712  A4D8               	btfss	status,2,c
  4965  002714  D00D               	goto	l3278
  4966  002716  0E00               	movlw	0
  4967  002718  6E02               	movwf	?_strncmp+1,c
  4968  00271A  0E00               	movlw	0
  4969  00271C  6E01               	movwf	?_strncmp,c
  4970  00271E  D048               	goto	l1360
  4971  002720                     l3276:
  4972  002720  FFFF               	dw	65535	; assembler added errata NOP
  4973  002722  4A08               	infsnz	strncmp@l,f,c
  4974  002724  2A09               	incf	strncmp@l+1,f,c
  4975  002726  4A0A               	infsnz	strncmp@r,f,c
  4976  002728  2A0B               	incf	strncmp@r+1,f,c
  4977  00272A  0605               	decf	strncmp@n,f,c
  4978  00272C  A0D8               	btfss	status,0,c
  4979  00272E  0606               	decf	strncmp@n+1,f,c
  4980  002730                     l3278:
  4981  002730  FFFF               	dw	65535	; assembler added errata NOP
  4982  002732  C008  FFF6         	movff	strncmp@l,tblptrl
  4983  002736  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4984  00273A                     	if	0	;tblptru may be non-zero
  4985  00273A                     	endif
  4986  00273A                     	if	0	;tblptru may be non-zero
  4987  00273A                     	endif
  4988  00273A  0008               	tblrd		*
  4989  00273C  FFFF               	dw	65535	; errata NOP
  4990  00273E  50F5               	movf	tablat,w,c
  4991  002740  0900               	iorlw	0
  4992  002742  B4D8               	btfsc	status,2,c
  4993  002744  D020               	goto	u3030
  4994  002746  C00A  FFF6         	movff	strncmp@r,tblptrl
  4995  00274A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4996  00274E                     	if	0	;tblptru may be non-zero
  4997  00274E                     	endif
  4998  00274E                     	if	0	;tblptru may be non-zero
  4999  00274E                     	endif
  5000  00274E  0008               	tblrd		*
  5001  002750  FFFF               	dw	65535	; errata NOP
  5002  002752  50F5               	movf	tablat,w,c
  5003  002754  0900               	iorlw	0
  5004  002756  B4D8               	btfsc	status,2,c
  5005  002758  D016               	goto	u3030
  5006  00275A  5005               	movf	strncmp@n,w,c
  5007  00275C  1006               	iorwf	strncmp@n+1,w,c
  5008  00275E  B4D8               	btfsc	status,2,c
  5009  002760  D012               	goto	u3030
  5010  002762  C008  FFF6         	movff	strncmp@l,tblptrl
  5011  002766  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5012  00276A                     	if	0	;tblptru may be non-zero
  5013  00276A                     	endif
  5014  00276A                     	if	0	;tblptru may be non-zero
  5015  00276A                     	endif
  5016  00276A  0008               	tblrd		*
  5017  00276C  FFFF               	dw	65535	; errata NOP
  5018  00276E  CFF5 F007          	movff	tablat,??_strncmp
  5019  002772  C00A  FFF6         	movff	strncmp@r,tblptrl
  5020  002776  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5021  00277A                     	if	0	;tblptru may be non-zero
  5022  00277A                     	endif
  5023  00277A                     	if	0	;tblptru may be non-zero
  5024  00277A                     	endif
  5025  00277A  0008               	tblrd		*
  5026  00277C  FFFF               	dw	65535	; errata NOP
  5027  00277E  50F5               	movf	tablat,w,c
  5028  002780  1807               	xorwf	??_strncmp,w,c
  5029  002782  B4D8               	btfsc	status,2,c
  5030  002784  D7CD               	goto	l3276
  5031  002786                     u3030:
  5032  002786  FFFF               	dw	65535	; assembler added errata NOP
  5033  002788  C008  FFF6         	movff	strncmp@l,tblptrl
  5034  00278C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5035  002790                     	if	0	;tblptru may be non-zero
  5036  002790                     	endif
  5037  002790                     	if	0	;tblptru may be non-zero
  5038  002790                     	endif
  5039  002790  0008               	tblrd		*
  5040  002792  FFFF               	dw	65535	; errata NOP
  5041  002794  CFF5 F007          	movff	tablat,??_strncmp
  5042  002798  C00A  FFF6         	movff	strncmp@r,tblptrl
  5043  00279C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5044  0027A0                     	if	0	;tblptru may be non-zero
  5045  0027A0                     	endif
  5046  0027A0                     	if	0	;tblptru may be non-zero
  5047  0027A0                     	endif
  5048  0027A0  0008               	tblrd		*
  5049  0027A2  FFFF               	dw	65535	; errata NOP
  5050  0027A4  50F5               	movf	tablat,w,c
  5051  0027A6  5C07               	subwf	??_strncmp,w,c
  5052  0027A8  6E01               	movwf	?_strncmp,c
  5053  0027AA  6A02               	clrf	?_strncmp+1,c
  5054  0027AC  A0D8               	btfss	status,0,c
  5055  0027AE  0602               	decf	?_strncmp+1,f,c
  5056  0027B0                     l1360:
  5057  0027B0  FFFF               	dw	65535	; assembler added errata NOP
  5058  0027B2  0012               	return		;funcret
  5059  0027B4  FFFF               	dw	65535	; errata NOP
  5060  0027B6                     __end_of_strncmp:
  5061                           	opt callstack 0
  5062                           
  5063 ;; *************** function _stoa *****************
  5064 ;; Defined at:
  5065 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5068 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5069 ;;  s               2   11[COMRAM] PTR unsigned char 
  5070 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5073 ;;  l               2   29[COMRAM] int 
  5074 ;;  p               2   27[COMRAM] int 
  5075 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5076 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5077 ;;  w               2   23[COMRAM] int 
  5078 ;;  i               2   21[COMRAM] int 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    9[COMRAM] int 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5088 ;;      Params:         4       0       0       0       0       0       0
  5089 ;;      Locals:        17       0       0       0       0       0       0
  5090 ;;      Temps:          1       0       0       0       0       0       0
  5091 ;;      Totals:        22       0       0       0       0       0       0
  5092 ;;Total ram usage:       22 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    4
  5095 ;; This function calls:
  5096 ;;		_fputc
  5097 ;;		_strlen
  5098 ;; This function is called by:
  5099 ;;		_vfpfcnvrt
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text16
  5104  0022CC                     __ptext16:
  5105                           	opt callstack 0
  5106  0022CC                     _stoa:
  5107                           	opt callstack 0
  5108  0022CC  FFFF               	dw	65535	; assembler added errata NOP
  5109                           
  5110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5111                           
  5112                           ;incstack = 0
  5113  0022CE  EE20  F0E1         	lfsr	2,stoa@F1152
  5114  0022D2  EE10  F00F         	lfsr	1,stoa@nuls
  5115  0022D6  0E06               	movlw	6
  5116  0022D8                     u2591:
  5117  0022D8  CFDB FFE3          	movff	plusw2,plusw1
  5118  0022DC  06E8               	decf	wreg,f,c
  5119  0022DE  E2FC               	bc	u2591
  5120                           
  5121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5122  0022E0  C00C  F01A         	movff	stoa@s,stoa@cp
  5123  0022E4  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5124                           
  5125                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5126  0022E8  501A               	movf	stoa@cp,w,c
  5127  0022EA  101B               	iorwf	stoa@cp+1,w,c
  5128  0022EC  A4D8               	btfss	status,2,c
  5129  0022EE  D004               	goto	l3092
  5130                           
  5131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5132  0022F0  0E0F               	movlw	low stoa@nuls
  5133  0022F2  6E1A               	movwf	stoa@cp,c
  5134  0022F4  0E00               	movlw	high stoa@nuls
  5135  0022F6  6E1B               	movwf	stoa@cp+1,c
  5136  0022F8                     l3092:
  5137  0022F8  FFFF               	dw	65535	; assembler added errata NOP
  5138                           
  5139                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5140  0022FA  C01A  F001         	movff	stoa@cp,strlen@s
  5141  0022FE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5142  002302  EC11  F017         	call	_strlen	;wreg free
  5143  002306  C001  F01E         	movff	?_strlen,stoa@l
  5144  00230A  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5145                           
  5146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5147  00230E  C093  F01C         	movff	_prec,stoa@p
  5148  002312  C094  F01D         	movff	_prec+1,stoa@p+1
  5149                           
  5150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5151  002316  BE1D               	btfsc	stoa@p+1,7,c
  5152  002318  D00E               	goto	l401
  5153  00231A  501E               	movf	stoa@l,w,c
  5154  00231C  5C1C               	subwf	stoa@p,w,c
  5155  00231E  501D               	movf	stoa@p+1,w,c
  5156  002320  0A80               	xorlw	128
  5157  002322  6E0E               	movwf	??_stoa& (0+255),c
  5158  002324  501F               	movf	stoa@l+1,w,c
  5159  002326  0A80               	xorlw	128
  5160  002328  580E               	subwfb	??_stoa& (0+255),w,c
  5161  00232A  B0D8               	btfsc	status,0,c
  5162  00232C  D004               	goto	l401
  5163  00232E  C01C  F01E         	movff	stoa@p,stoa@l
  5164  002332  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5165  002336                     l401:
  5166  002336  FFFF               	dw	65535	; assembler added errata NOP
  5167                           
  5168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5169  002338  C01E  F01C         	movff	stoa@l,stoa@p
  5170  00233C  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5171                           
  5172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5173  002340  C091  F018         	movff	_width,stoa@w
  5174  002344  C092  F019         	movff	_width+1,stoa@w+1
  5175                           
  5176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5177  002348  0100               	movlb	0	; () banked
  5178  00234A  A195               	btfss	_flags& (0+255),0,b
  5179  00234C  D00E               	goto	l3106
  5180  00234E  D018               	goto	u2640
  5181  002350                     l3102:
  5182  002350  FFFF               	dw	65535	; assembler added errata NOP
  5183                           
  5184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5185  002352  0E00               	movlw	0
  5186  002354  6E02               	movwf	fputc@c+1,c
  5187  002356  0E20               	movlw	32
  5188  002358  6E01               	movwf	fputc@c,c
  5189  00235A  C00A  F003         	movff	stoa@fp,fputc@fp
  5190  00235E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5191  002362  EC39  F014         	call	_fputc	;wreg free
  5192                           
  5193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5194  002366  4A1E               	infsnz	stoa@l,f,c
  5195  002368  2A1F               	incf	stoa@l+1,f,c
  5196  00236A                     l3106:
  5197  00236A  FFFF               	dw	65535	; assembler added errata NOP
  5198                           
  5199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5200  00236C  5018               	movf	stoa@w,w,c
  5201  00236E  5C1E               	subwf	stoa@l,w,c
  5202  002370  501F               	movf	stoa@l+1,w,c
  5203  002372  0A80               	xorlw	128
  5204  002374  6E0E               	movwf	??_stoa& (0+255),c
  5205  002376  5019               	movf	stoa@w+1,w,c
  5206  002378  0A80               	xorlw	128
  5207  00237A  580E               	subwfb	??_stoa& (0+255),w,c
  5208  00237C  A0D8               	btfss	status,0,c
  5209  00237E  D7E8               	goto	l3102
  5210  002380                     u2640:
  5211  002380  FFFF               	dw	65535	; assembler added errata NOP
  5212                           
  5213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5214  002382  0E00               	movlw	0
  5215  002384  6E17               	movwf	stoa@i+1,c
  5216  002386  0E00               	movlw	0
  5217  002388  6E16               	movwf	stoa@i,c
  5218                           
  5219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5220  00238A  D014               	goto	l3116
  5221  00238C                     l3110:
  5222  00238C  FFFF               	dw	65535	; assembler added errata NOP
  5223                           
  5224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5225  00238E  C01A  FFD9         	movff	stoa@cp,fsr2l
  5226  002392  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5227  002396  50DF               	movf	indf2,w,c
  5228  002398  6E0E               	movwf	??_stoa& (0+255),c
  5229  00239A  500E               	movf	??_stoa,w,c
  5230  00239C  6E01               	movwf	fputc@c,c
  5231  00239E  6A02               	clrf	fputc@c+1,c
  5232  0023A0  C00A  F003         	movff	stoa@fp,fputc@fp
  5233  0023A4  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5234  0023A8  EC39  F014         	call	_fputc	;wreg free
  5235                           
  5236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5237  0023AC  4A1A               	infsnz	stoa@cp,f,c
  5238  0023AE  2A1B               	incf	stoa@cp+1,f,c
  5239                           
  5240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5241  0023B0  4A16               	infsnz	stoa@i,f,c
  5242  0023B2  2A17               	incf	stoa@i+1,f,c
  5243  0023B4                     l3116:
  5244  0023B4  FFFF               	dw	65535	; assembler added errata NOP
  5245                           
  5246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5247  0023B6  501C               	movf	stoa@p,w,c
  5248  0023B8  5C16               	subwf	stoa@i,w,c
  5249  0023BA  5017               	movf	stoa@i+1,w,c
  5250  0023BC  0A80               	xorlw	128
  5251  0023BE  6E0E               	movwf	??_stoa& (0+255),c
  5252  0023C0  501D               	movf	stoa@p+1,w,c
  5253  0023C2  0A80               	xorlw	128
  5254  0023C4  580E               	subwfb	??_stoa& (0+255),w,c
  5255  0023C6  A0D8               	btfss	status,0,c
  5256  0023C8  D7E1               	goto	l3110
  5257                           
  5258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5259  0023CA  0100               	movlb	0	; () banked
  5260  0023CC  B195               	btfsc	_flags& (0+255),0,b
  5261  0023CE  D00E               	goto	l3124
  5262  0023D0  D018               	goto	u2670
  5263  0023D2                     l3120:
  5264  0023D2  FFFF               	dw	65535	; assembler added errata NOP
  5265                           
  5266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5267  0023D4  0E00               	movlw	0
  5268  0023D6  6E02               	movwf	fputc@c+1,c
  5269  0023D8  0E20               	movlw	32
  5270  0023DA  6E01               	movwf	fputc@c,c
  5271  0023DC  C00A  F003         	movff	stoa@fp,fputc@fp
  5272  0023E0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5273  0023E4  EC39  F014         	call	_fputc	;wreg free
  5274                           
  5275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5276  0023E8  4A1E               	infsnz	stoa@l,f,c
  5277  0023EA  2A1F               	incf	stoa@l+1,f,c
  5278  0023EC                     l3124:
  5279  0023EC  FFFF               	dw	65535	; assembler added errata NOP
  5280                           
  5281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5282  0023EE  5018               	movf	stoa@w,w,c
  5283  0023F0  5C1E               	subwf	stoa@l,w,c
  5284  0023F2  501F               	movf	stoa@l+1,w,c
  5285  0023F4  0A80               	xorlw	128
  5286  0023F6  6E0E               	movwf	??_stoa& (0+255),c
  5287  0023F8  5019               	movf	stoa@w+1,w,c
  5288  0023FA  0A80               	xorlw	128
  5289  0023FC  580E               	subwfb	??_stoa& (0+255),w,c
  5290  0023FE  A0D8               	btfss	status,0,c
  5291  002400  D7E8               	goto	l3120
  5292  002402                     u2670:
  5293  002402  FFFF               	dw	65535	; assembler added errata NOP
  5294                           
  5295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5296                           
  5297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5298  002404  C01E  F00A         	movff	stoa@l,?_stoa
  5299  002408  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5300  00240C  0012               	return		;funcret
  5301  00240E  FFFF               	dw	65535	; errata NOP
  5302  002410                     __end_of_stoa:
  5303                           	opt callstack 0
  5304                           
  5305 ;; *************** function _otoa *****************
  5306 ;; Defined at:
  5307 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5310 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5311 ;;  d               8   29[COMRAM] unsigned long long 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  n               8   51[COMRAM] unsigned long long 
  5314 ;;  i               2   59[COMRAM] int 
  5315 ;;  w               2   49[COMRAM] int 
  5316 ;;  t               2   47[COMRAM] int 
  5317 ;;  p               2   45[COMRAM] int 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  2   27[COMRAM] int 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5327 ;;      Params:        10       0       0       0       0       0       0
  5328 ;;      Locals:        16       0       0       0       0       0       0
  5329 ;;      Temps:          8       0       0       0       0       0       0
  5330 ;;      Totals:        34       0       0       0       0       0       0
  5331 ;;Total ram usage:       34 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    6
  5334 ;; This function calls:
  5335 ;;		_pad
  5336 ;; This function is called by:
  5337 ;;		_vfpfcnvrt
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text17
  5342  001E70                     __ptext17:
  5343                           	opt callstack 0
  5344  001E70                     _otoa:
  5345                           	opt callstack 0
  5346  001E70  FFFF               	dw	65535	; assembler added errata NOP
  5347                           
  5348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5349                           
  5350                           ;incstack = 0
  5351  001E72  0100               	movlb	0	; () banked
  5352  001E74  AF94               	btfss	(_prec+1)& (0+255),7,b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5356  001E76  9395               	bcf	_flags& (0+255),1,b
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5360  001E78  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5361  001E7A  D005               	goto	u2500
  5362  001E7C  5194               	movf	(_prec+1)& (0+255),w,b
  5363  001E7E  E109               	bnz	l381
  5364  001E80  0593               	decf	_prec& (0+255),w,b
  5365  001E82  B0D8               	btfsc	status,0,c
  5366  001E84  D006               	goto	l381
  5367  001E86                     u2500:
  5368  001E86  FFFF               	dw	65535	; assembler added errata NOP
  5369                           
  5370                           ; BSR set to: 0
  5371  001E88  0E00               	movlw	0
  5372  001E8A  6E2F               	movwf	otoa@p+1,c
  5373  001E8C  0E01               	movlw	1
  5374  001E8E  6E2E               	movwf	otoa@p,c
  5375  001E90  D005               	goto	l383
  5376  001E92                     l381:
  5377  001E92  FFFF               	dw	65535	; assembler added errata NOP
  5378                           
  5379                           ; BSR set to: 0
  5380  001E94  C093  F02E         	movff	_prec,otoa@p
  5381  001E98  C094  F02F         	movff	_prec+1,otoa@p+1
  5382  001E9C                     l383:
  5383  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5387  001E9E  C091  F032         	movff	_width,otoa@w
  5388  001EA2  C092  F033         	movff	_width+1,otoa@w+1
  5389                           
  5390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5391  001EA6  C01E  F034         	movff	otoa@d,otoa@n
  5392  001EAA  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5393  001EAE  C020  F036         	movff	otoa@d+2,otoa@n+2
  5394  001EB2  C021  F037         	movff	otoa@d+3,otoa@n+3
  5395  001EB6  C022  F038         	movff	otoa@d+4,otoa@n+4
  5396  001EBA  C023  F039         	movff	otoa@d+5,otoa@n+5
  5397  001EBE  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5398  001EC2  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5402  001EC6  0E00               	movlw	0
  5403  001EC8  6E3D               	movwf	otoa@i+1,c
  5404  001ECA  0E1F               	movlw	31
  5405  001ECC  6E3C               	movwf	otoa@i,c
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5409  001ECE  0E00               	movlw	0
  5410  001ED0  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5414  001ED2  0E00               	movlw	0
  5415  001ED4  6E31               	movwf	otoa@t+1,c
  5416  001ED6  0E00               	movlw	0
  5417  001ED8  6E30               	movwf	otoa@t,c
  5418                           
  5419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5420  001EDA  D046               	goto	l3062
  5421  001EDC                     l3050:
  5422  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5423                           
  5424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5425  001EDE  063C               	decf	otoa@i,f,c
  5426  001EE0  A0D8               	btfss	status,0,c
  5427  001EE2  063D               	decf	otoa@i+1,f,c
  5428                           
  5429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5430  001EE4  0E07               	movlw	7
  5431  001EE6  1434               	andwf	otoa@n,w,c
  5432  001EE8  6E30               	movwf	otoa@t,c
  5433  001EEA  6A31               	clrf	otoa@t+1,c
  5434                           
  5435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5436  001EEC  0E9B               	movlw	low _dbuf
  5437  001EEE  243C               	addwf	otoa@i,w,c
  5438  001EF0  6ED9               	movwf	fsr2l,c
  5439  001EF2  0E00               	movlw	high _dbuf
  5440  001EF4  203D               	addwfc	otoa@i+1,w,c
  5441  001EF6  6EDA               	movwf	fsr2h,c
  5442  001EF8  5030               	movf	otoa@t,w,c
  5443  001EFA  0F30               	addlw	48
  5444  001EFC  6EDF               	movwf	indf2,c
  5445                           
  5446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5447  001EFE  062E               	decf	otoa@p,f,c
  5448  001F00  A0D8               	btfss	status,0,c
  5449  001F02  062F               	decf	otoa@p+1,f,c
  5450                           
  5451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5452  001F04  0632               	decf	otoa@w,f,c
  5453  001F06  A0D8               	btfss	status,0,c
  5454  001F08  0633               	decf	otoa@w+1,f,c
  5455                           
  5456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5457  001F0A  C034  F026         	movff	otoa@n,??_otoa
  5458  001F0E  C035  F027         	movff	otoa@n+1,??_otoa+1
  5459  001F12  C036  F028         	movff	otoa@n+2,??_otoa+2
  5460  001F16  C037  F029         	movff	otoa@n+3,??_otoa+3
  5461  001F1A  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5462  001F1E  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5463  001F22  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5464  001F26  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5465  001F2A  0E04               	movlw	4
  5466  001F2C  D00A               	goto	u2510
  5467  001F2E                     u2515:
  5468  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  5469  001F30  90D8               	bcf	status,0,c
  5470  001F32  322D               	rrcf	??_otoa+7,f,c
  5471  001F34  322C               	rrcf	??_otoa+6,f,c
  5472  001F36  322B               	rrcf	??_otoa+5,f,c
  5473  001F38  322A               	rrcf	??_otoa+4,f,c
  5474  001F3A  3229               	rrcf	??_otoa+3,f,c
  5475  001F3C  3228               	rrcf	??_otoa+2,f,c
  5476  001F3E  3227               	rrcf	??_otoa+1,f,c
  5477  001F40  3226               	rrcf	??_otoa,f,c
  5478  001F42                     u2510:
  5479  001F42  FFFF               	dw	65535	; assembler added errata NOP
  5480  001F44  2EE8               	decfsz	wreg,f,c
  5481  001F46  D7F3               	goto	u2515
  5482  001F48  C026  F034         	movff	??_otoa,otoa@n
  5483  001F4C  C027  F035         	movff	??_otoa+1,otoa@n+1
  5484  001F50  C028  F036         	movff	??_otoa+2,otoa@n+2
  5485  001F54  C029  F037         	movff	??_otoa+3,otoa@n+3
  5486  001F58  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5487  001F5C  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5488  001F60  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5489  001F64  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5490  001F68                     l3062:
  5491  001F68  FFFF               	dw	65535	; assembler added errata NOP
  5492                           
  5493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5494  001F6A  BE3D               	btfsc	otoa@i+1,7,c
  5495  001F6C  D021               	goto	u2560
  5496  001F6E  503D               	movf	otoa@i+1,w,c
  5497  001F70  E103               	bnz	u2520
  5498  001F72  043C               	decf	otoa@i,w,c
  5499  001F74  A0D8               	btfss	status,0,c
  5500  001F76  D01C               	goto	u2560
  5501  001F78                     u2520:
  5502  001F78  5034               	movf	otoa@n,w,c
  5503  001F7A  1035               	iorwf	otoa@n+1,w,c
  5504  001F7C  1036               	iorwf	otoa@n+2,w,c
  5505  001F7E  1037               	iorwf	otoa@n+3,w,c
  5506  001F80  1038               	iorwf	otoa@n+4,w,c
  5507  001F82  1039               	iorwf	otoa@n+5,w,c
  5508  001F84  103A               	iorwf	otoa@n+6,w,c
  5509  001F86  103B               	iorwf	otoa@n+7,w,c
  5510  001F88  A4D8               	btfss	status,2,c
  5511  001F8A  D7A8               	goto	l3050
  5512  001F8C  BE2F               	btfsc	otoa@p+1,7,c
  5513  001F8E  D005               	goto	u2540
  5514  001F90  502F               	movf	otoa@p+1,w,c
  5515  001F92  E1A4               	bnz	l3050
  5516  001F94  042E               	decf	otoa@p,w,c
  5517  001F96  B0D8               	btfsc	status,0,c
  5518  001F98  D7A1               	goto	l3050
  5519  001F9A                     u2540:
  5520  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  5521  001F9C  BE33               	btfsc	otoa@w+1,7,c
  5522  001F9E  D008               	goto	u2560
  5523  001FA0  5033               	movf	otoa@w+1,w,c
  5524  001FA2  E103               	bnz	u2550
  5525  001FA4  0432               	decf	otoa@w,w,c
  5526  001FA6  A0D8               	btfss	status,0,c
  5527  001FA8  D003               	goto	u2560
  5528  001FAA                     u2550:
  5529  001FAA  0100               	movlb	0	; () banked
  5530  001FAC  B395               	btfsc	_flags& (0+255),1,b
  5531  001FAE  D796               	goto	l3050
  5532  001FB0                     u2560:
  5533  001FB0  FFFF               	dw	65535	; assembler added errata NOP
  5534                           
  5535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5536  001FB2  0100               	movlb	0	; () banked
  5537  001FB4  A995               	btfss	_flags& (0+255),4,b
  5538  001FB6  D012               	goto	l3080
  5539                           
  5540                           ; BSR set to: 0
  5541  001FB8  5030               	movf	otoa@t,w,c
  5542  001FBA  1031               	iorwf	otoa@t+1,w,c
  5543  001FBC  B4D8               	btfsc	status,2,c
  5544  001FBE  D00E               	goto	l3080
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5548  001FC0  063C               	decf	otoa@i,f,c
  5549  001FC2  A0D8               	btfss	status,0,c
  5550  001FC4  063D               	decf	otoa@i+1,f,c
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5554  001FC6  0E9B               	movlw	low _dbuf
  5555  001FC8  243C               	addwf	otoa@i,w,c
  5556  001FCA  6ED9               	movwf	fsr2l,c
  5557  001FCC  0E00               	movlw	high _dbuf
  5558  001FCE  203D               	addwfc	otoa@i+1,w,c
  5559  001FD0  6EDA               	movwf	fsr2h,c
  5560  001FD2  0E30               	movlw	48
  5561  001FD4  6EDF               	movwf	indf2,c
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5565  001FD6  0632               	decf	otoa@w,f,c
  5566  001FD8  A0D8               	btfss	status,0,c
  5567  001FDA  0633               	decf	otoa@w+1,f,c
  5568  001FDC                     l3080:
  5569  001FDC  FFFF               	dw	65535	; assembler added errata NOP
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5573  001FDE  C01C  F011         	movff	otoa@fp,pad@fp
  5574  001FE2  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5575  001FE6  0E9B               	movlw	low _dbuf
  5576  001FE8  243C               	addwf	otoa@i,w,c
  5577  001FEA  6E13               	movwf	pad@buf,c
  5578  001FEC  0E00               	movlw	high _dbuf
  5579  001FEE  203D               	addwfc	otoa@i+1,w,c
  5580  001FF0  6E14               	movwf	pad@buf+1,c
  5581  001FF2  C032  F015         	movff	otoa@w,pad@p
  5582  001FF6  C033  F016         	movff	otoa@w+1,pad@p+1
  5583  001FFA  EC8F  F014         	call	_pad	;wreg free
  5584  001FFE  C011  F01C         	movff	?_pad,?_otoa
  5585  002002  C012  F01D         	movff	?_pad+1,?_otoa+1
  5586  002006  0012               	return		;funcret
  5587  002008  FFFF               	dw	65535	; errata NOP
  5588  00200A                     __end_of_otoa:
  5589                           	opt callstack 0
  5590                           
  5591 ;; *************** function _dtoa *****************
  5592 ;; Defined at:
  5593 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5596 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5597 ;;  d               8   29[COMRAM] long long 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  n               8   53[COMRAM] long long 
  5600 ;;  i               2   61[COMRAM] int 
  5601 ;;  s               2   51[COMRAM] int 
  5602 ;;  w               2   49[COMRAM] int 
  5603 ;;  p               2   47[COMRAM] int 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  2   27[COMRAM] int 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5613 ;;      Params:        10       0       0       0       0       0       0
  5614 ;;      Locals:        18       0       0       0       0       0       0
  5615 ;;      Temps:          8       0       0       0       0       0       0
  5616 ;;      Totals:        36       0       0       0       0       0       0
  5617 ;;Total ram usage:       36 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    6
  5620 ;; This function calls:
  5621 ;;		___aodiv
  5622 ;;		___aomod
  5623 ;;		_abs
  5624 ;;		_pad
  5625 ;; This function is called by:
  5626 ;;		_vfpfcnvrt
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text18
  5631  0017EC                     __ptext18:
  5632                           	opt callstack 0
  5633  0017EC                     _dtoa:
  5634                           	opt callstack 0
  5635  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  5636                           
  5637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5638                           
  5639                           ;incstack = 0
  5640  0017EE  C01E  F036         	movff	dtoa@d,dtoa@n
  5641  0017F2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5642  0017F6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5643  0017FA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5644  0017FE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5645  001802  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5646  001806  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5647  00180A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5648                           
  5649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5650  00180E  AE3D               	btfss	dtoa@n+7,7,c
  5651  001810  D002               	goto	u2340
  5652  001812  0E01               	movlw	1
  5653  001814  D002               	goto	u2350
  5654  001816                     u2340:
  5655  001816  FFFF               	dw	65535	; assembler added errata NOP
  5656  001818  0E00               	movlw	0
  5657  00181A                     u2350:
  5658  00181A  FFFF               	dw	65535	; assembler added errata NOP
  5659  00181C  6E34               	movwf	dtoa@s,c
  5660  00181E  6A35               	clrf	dtoa@s+1,c
  5661                           
  5662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5663  001820  5034               	movf	dtoa@s,w,c
  5664  001822  1035               	iorwf	dtoa@s+1,w,c
  5665  001824  B4D8               	btfsc	status,2,c
  5666  001826  D010               	goto	l2980
  5667                           
  5668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5669  001828  1E3D               	comf	dtoa@n+7,f,c
  5670  00182A  1E3C               	comf	dtoa@n+6,f,c
  5671  00182C  1E3B               	comf	dtoa@n+5,f,c
  5672  00182E  1E3A               	comf	dtoa@n+4,f,c
  5673  001830  1E39               	comf	dtoa@n+3,f,c
  5674  001832  1E38               	comf	dtoa@n+2,f,c
  5675  001834  1E37               	comf	dtoa@n+1,f,c
  5676  001836  6C36               	negf	dtoa@n,c
  5677  001838  0E00               	movlw	0
  5678  00183A  2237               	addwfc	dtoa@n+1,f,c
  5679  00183C  2238               	addwfc	dtoa@n+2,f,c
  5680  00183E  2239               	addwfc	dtoa@n+3,f,c
  5681  001840  223A               	addwfc	dtoa@n+4,f,c
  5682  001842  223B               	addwfc	dtoa@n+5,f,c
  5683  001844  223C               	addwfc	dtoa@n+6,f,c
  5684  001846  223D               	addwfc	dtoa@n+7,f,c
  5685  001848                     l2980:
  5686  001848  FFFF               	dw	65535	; assembler added errata NOP
  5687                           
  5688                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5689  00184A  0100               	movlb	0	; () banked
  5690  00184C  AF94               	btfss	(_prec+1)& (0+255),7,b
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5694  00184E  9395               	bcf	_flags& (0+255),1,b
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5698  001850  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5699  001852  D005               	goto	u2380
  5700  001854  5194               	movf	(_prec+1)& (0+255),w,b
  5701  001856  E109               	bnz	l356
  5702  001858  0593               	decf	_prec& (0+255),w,b
  5703  00185A  B0D8               	btfsc	status,0,c
  5704  00185C  D006               	goto	l356
  5705  00185E                     u2380:
  5706  00185E  FFFF               	dw	65535	; assembler added errata NOP
  5707                           
  5708                           ; BSR set to: 0
  5709  001860  0E00               	movlw	0
  5710  001862  6E31               	movwf	dtoa@p+1,c
  5711  001864  0E01               	movlw	1
  5712  001866  6E30               	movwf	dtoa@p,c
  5713  001868  D005               	goto	l358
  5714  00186A                     l356:
  5715  00186A  FFFF               	dw	65535	; assembler added errata NOP
  5716                           
  5717                           ; BSR set to: 0
  5718  00186C  C093  F030         	movff	_prec,dtoa@p
  5719  001870  C094  F031         	movff	_prec+1,dtoa@p+1
  5720  001874                     l358:
  5721  001874  FFFF               	dw	65535	; assembler added errata NOP
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5725  001876  C091  F032         	movff	_width,dtoa@w
  5726  00187A  C092  F033         	movff	_width+1,dtoa@w+1
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5730  00187E  5034               	movf	dtoa@s,w,c
  5731  001880  1035               	iorwf	dtoa@s+1,w,c
  5732  001882  A4D8               	btfss	status,2,c
  5733  001884  D002               	goto	u2400
  5734                           
  5735                           ; BSR set to: 0
  5736  001886  A595               	btfss	_flags& (0+255),2,b
  5737  001888  D004               	goto	l2994
  5738  00188A                     u2400:
  5739  00188A  FFFF               	dw	65535	; assembler added errata NOP
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5743  00188C  0632               	decf	dtoa@w,f,c
  5744  00188E  A0D8               	btfss	status,0,c
  5745  001890  0633               	decf	dtoa@w+1,f,c
  5746  001892                     l2994:
  5747  001892  FFFF               	dw	65535	; assembler added errata NOP
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5751  001894  0E00               	movlw	0
  5752  001896  6E3F               	movwf	dtoa@i+1,c
  5753  001898  0E1F               	movlw	31
  5754  00189A  6E3E               	movwf	dtoa@i,c
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5758  00189C  0E00               	movlw	0
  5759  00189E  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5760                           
  5761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5762  0018A0  D07D               	goto	l3008
  5763  0018A2                     l2998:
  5764  0018A2  FFFF               	dw	65535	; assembler added errata NOP
  5765                           
  5766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5767  0018A4  063E               	decf	dtoa@i,f,c
  5768  0018A6  A0D8               	btfss	status,0,c
  5769  0018A8  063F               	decf	dtoa@i+1,f,c
  5770                           
  5771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5772  0018AA  0E9B               	movlw	low _dbuf
  5773  0018AC  243E               	addwf	dtoa@i,w,c
  5774  0018AE  6ED9               	movwf	fsr2l,c
  5775  0018B0  0E00               	movlw	high _dbuf
  5776  0018B2  203F               	addwfc	dtoa@i+1,w,c
  5777  0018B4  6EDA               	movwf	fsr2h,c
  5778  0018B6  C036  F001         	movff	dtoa@n,___aomod@dividend
  5779  0018BA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5780  0018BE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5781  0018C2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5782  0018C6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5783  0018CA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5784  0018CE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5785  0018D2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5786  0018D6  0E0A               	movlw	10
  5787  0018D8  6E09               	movwf	___aomod@divisor,c
  5788  0018DA  0E00               	movlw	0
  5789  0018DC  6E0A               	movwf	___aomod@divisor+1,c
  5790  0018DE  0E00               	movlw	0
  5791  0018E0  6E0B               	movwf	___aomod@divisor+2,c
  5792  0018E2  0E00               	movlw	0
  5793  0018E4  6E0C               	movwf	___aomod@divisor+3,c
  5794  0018E6  0E00               	movlw	0
  5795  0018E8  6E0D               	movwf	___aomod@divisor+4,c
  5796  0018EA  0E00               	movlw	0
  5797  0018EC  6E0E               	movwf	___aomod@divisor+5,c
  5798  0018EE  0E00               	movlw	0
  5799  0018F0  6E0F               	movwf	___aomod@divisor+6,c
  5800  0018F2  0E00               	movlw	0
  5801  0018F4  6E10               	movwf	___aomod@divisor+7,c
  5802  0018F6  EC08  F012         	call	___aomod	;wreg free
  5803  0018FA  C001  F026         	movff	?___aomod,??_dtoa
  5804  0018FE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5805  001902  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5806  001906  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5807  00190A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5808  00190E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5809  001912  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5810  001916  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5811  00191A  C026  F013         	movff	??_dtoa,abs@a
  5812  00191E  C028  F014         	movff	??_dtoa+2,abs@a+1
  5813  001922  EC9F  F016         	call	_abs	;wreg free
  5814  001926  5013               	movf	?_abs,w,c
  5815  001928  0F30               	addlw	48
  5816  00192A  6EDF               	movwf	indf2,c
  5817                           
  5818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5819  00192C  0630               	decf	dtoa@p,f,c
  5820  00192E  A0D8               	btfss	status,0,c
  5821  001930  0631               	decf	dtoa@p+1,f,c
  5822                           
  5823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5824  001932  0632               	decf	dtoa@w,f,c
  5825  001934  A0D8               	btfss	status,0,c
  5826  001936  0633               	decf	dtoa@w+1,f,c
  5827                           
  5828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5829  001938  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5830  00193C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5831  001940  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5832  001944  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5833  001948  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5834  00194C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5835  001950  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5836  001954  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5837  001958  0E0A               	movlw	10
  5838  00195A  6E09               	movwf	___aodiv@divisor,c
  5839  00195C  0E00               	movlw	0
  5840  00195E  6E0A               	movwf	___aodiv@divisor+1,c
  5841  001960  0E00               	movlw	0
  5842  001962  6E0B               	movwf	___aodiv@divisor+2,c
  5843  001964  0E00               	movlw	0
  5844  001966  6E0C               	movwf	___aodiv@divisor+3,c
  5845  001968  0E00               	movlw	0
  5846  00196A  6E0D               	movwf	___aodiv@divisor+4,c
  5847  00196C  0E00               	movlw	0
  5848  00196E  6E0E               	movwf	___aodiv@divisor+5,c
  5849  001970  0E00               	movlw	0
  5850  001972  6E0F               	movwf	___aodiv@divisor+6,c
  5851  001974  0E00               	movlw	0
  5852  001976  6E10               	movwf	___aodiv@divisor+7,c
  5853  001978  ECB8  F010         	call	___aodiv	;wreg free
  5854  00197C  C001  F036         	movff	?___aodiv,dtoa@n
  5855  001980  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5856  001984  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5857  001988  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5858  00198C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5859  001990  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5860  001994  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5861  001998  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5862  00199C                     l3008:
  5863  00199C  FFFF               	dw	65535	; assembler added errata NOP
  5864                           
  5865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5866  00199E  BE3F               	btfsc	dtoa@i+1,7,c
  5867  0019A0  D021               	goto	u2450
  5868  0019A2  503F               	movf	dtoa@i+1,w,c
  5869  0019A4  E103               	bnz	u2410
  5870  0019A6  043E               	decf	dtoa@i,w,c
  5871  0019A8  A0D8               	btfss	status,0,c
  5872  0019AA  D01C               	goto	u2450
  5873  0019AC                     u2410:
  5874  0019AC  5036               	movf	dtoa@n,w,c
  5875  0019AE  1037               	iorwf	dtoa@n+1,w,c
  5876  0019B0  1038               	iorwf	dtoa@n+2,w,c
  5877  0019B2  1039               	iorwf	dtoa@n+3,w,c
  5878  0019B4  103A               	iorwf	dtoa@n+4,w,c
  5879  0019B6  103B               	iorwf	dtoa@n+5,w,c
  5880  0019B8  103C               	iorwf	dtoa@n+6,w,c
  5881  0019BA  103D               	iorwf	dtoa@n+7,w,c
  5882  0019BC  A4D8               	btfss	status,2,c
  5883  0019BE  D771               	goto	l2998
  5884  0019C0  BE31               	btfsc	dtoa@p+1,7,c
  5885  0019C2  D005               	goto	u2430
  5886  0019C4  5031               	movf	dtoa@p+1,w,c
  5887  0019C6  E102               	bnz	u2431
  5888  0019C8  0430               	decf	dtoa@p,w,c
  5889  0019CA  B0D8               	btfsc	status,0,c
  5890  0019CC                     u2431:
  5891  0019CC  D76A               	goto	l2998
  5892  0019CE                     u2430:
  5893  0019CE  FFFF               	dw	65535	; assembler added errata NOP
  5894  0019D0  BE33               	btfsc	dtoa@w+1,7,c
  5895  0019D2  D008               	goto	u2450
  5896  0019D4  5033               	movf	dtoa@w+1,w,c
  5897  0019D6  E103               	bnz	u2440
  5898  0019D8  0432               	decf	dtoa@w,w,c
  5899  0019DA  A0D8               	btfss	status,0,c
  5900  0019DC  D003               	goto	u2450
  5901  0019DE                     u2440:
  5902  0019DE  0100               	movlb	0	; () banked
  5903  0019E0  B395               	btfsc	_flags& (0+255),1,b
  5904  0019E2  D75F               	goto	l2998
  5905  0019E4                     u2450:
  5906  0019E4  FFFF               	dw	65535	; assembler added errata NOP
  5907                           
  5908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5909  0019E6  5034               	movf	dtoa@s,w,c
  5910  0019E8  1035               	iorwf	dtoa@s+1,w,c
  5911  0019EA  A4D8               	btfss	status,2,c
  5912  0019EC  D003               	goto	u2470
  5913  0019EE  0100               	movlb	0	; () banked
  5914  0019F0  A595               	btfss	_flags& (0+255),2,b
  5915  0019F2  D01A               	goto	l3032
  5916  0019F4                     u2470:
  5917  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  5918                           
  5919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5920  0019F6  063E               	decf	dtoa@i,f,c
  5921  0019F8  A0D8               	btfss	status,0,c
  5922  0019FA  063F               	decf	dtoa@i+1,f,c
  5923                           
  5924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5925  0019FC  5034               	movf	dtoa@s,w,c
  5926  0019FE  1035               	iorwf	dtoa@s+1,w,c
  5927  001A00  A4D8               	btfss	status,2,c
  5928  001A02  D004               	goto	l3028
  5929  001A04  0E00               	movlw	0
  5930  001A06  6E2F               	movwf	_dtoa$1050+1,c
  5931  001A08  0E2B               	movlw	43
  5932  001A0A  D004               	goto	L20
  5933  001A0C                     l3028:
  5934  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  5935  001A0E  0E00               	movlw	0
  5936  001A10  6E2F               	movwf	_dtoa$1050+1,c
  5937  001A12  0E2D               	movlw	45
  5938  001A14                     L20:
  5939  001A14  FFFF               	dw	65535	; assembler added errata NOP
  5940  001A16  6E2E               	movwf	_dtoa$1050,c
  5941  001A18  0E9B               	movlw	low _dbuf
  5942  001A1A  243E               	addwf	dtoa@i,w,c
  5943  001A1C  6ED9               	movwf	fsr2l,c
  5944  001A1E  0E00               	movlw	high _dbuf
  5945  001A20  203F               	addwfc	dtoa@i+1,w,c
  5946  001A22  6EDA               	movwf	fsr2h,c
  5947  001A24  C02E  FFDF         	movff	_dtoa$1050,indf2
  5948  001A28                     l3032:
  5949  001A28  FFFF               	dw	65535	; assembler added errata NOP
  5950                           
  5951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5952  001A2A  C01C  F011         	movff	dtoa@fp,pad@fp
  5953  001A2E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5954  001A32  0E9B               	movlw	low _dbuf
  5955  001A34  243E               	addwf	dtoa@i,w,c
  5956  001A36  6E13               	movwf	pad@buf,c
  5957  001A38  0E00               	movlw	high _dbuf
  5958  001A3A  203F               	addwfc	dtoa@i+1,w,c
  5959  001A3C  6E14               	movwf	pad@buf+1,c
  5960  001A3E  C032  F015         	movff	dtoa@w,pad@p
  5961  001A42  C033  F016         	movff	dtoa@w+1,pad@p+1
  5962  001A46  EC8F  F014         	call	_pad	;wreg free
  5963  001A4A  C011  F01C         	movff	?_pad,?_dtoa
  5964  001A4E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5965  001A52  0012               	return		;funcret
  5966  001A54  FFFF               	dw	65535	; errata NOP
  5967  001A56                     __end_of_dtoa:
  5968                           	opt callstack 0
  5969                           
  5970 ;; *************** function _abs *****************
  5971 ;; Defined at:
  5972 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  a               2   18[COMRAM] int 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  2   18[COMRAM] int 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5986 ;;      Params:         2       0       0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0
  5988 ;;      Temps:          2       0       0       0       0       0       0
  5989 ;;      Totals:         4       0       0       0       0       0       0
  5990 ;;Total ram usage:        4 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    2
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_dtoa
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text19
  6001  002D3E                     __ptext19:
  6002                           	opt callstack 0
  6003  002D3E                     _abs:
  6004                           	opt callstack 0
  6005  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  6006                           
  6007                           ;incstack = 0
  6008  002D40  BE14               	btfsc	abs@a+1,7,c
  6009  002D42  D005               	goto	u2010
  6010  002D44  5014               	movf	abs@a+1,w,c
  6011  002D46  E111               	bnz	l1229
  6012  002D48  0413               	decf	abs@a,w,c
  6013  002D4A  B0D8               	btfsc	status,0,c
  6014  002D4C  D00E               	goto	l1229
  6015  002D4E                     u2010:
  6016  002D4E  FFFF               	dw	65535	; assembler added errata NOP
  6017  002D50  C013  F015         	movff	abs@a,??_abs
  6018  002D54  C014  F016         	movff	abs@a+1,??_abs+1
  6019  002D58  1E15               	comf	??_abs,f,c
  6020  002D5A  1E16               	comf	??_abs+1,f,c
  6021  002D5C  4A15               	infsnz	??_abs,f,c
  6022  002D5E  2A16               	incf	??_abs+1,f,c
  6023  002D60  C015  F013         	movff	??_abs,?_abs
  6024  002D64  C016  F014         	movff	??_abs+1,?_abs+1
  6025  002D68  D005               	goto	l1232
  6026  002D6A                     l1229:
  6027  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  6028  002D6C  C013  F013         	movff	abs@a,?_abs
  6029  002D70  C014  F014         	movff	abs@a+1,?_abs+1
  6030  002D74                     l1232:
  6031  002D74  FFFF               	dw	65535	; assembler added errata NOP
  6032  002D76  0012               	return		;funcret
  6033  002D78  FFFF               	dw	65535	; errata NOP
  6034  002D7A                     __end_of_abs:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function ___aomod *****************
  6038 ;; Defined at:
  6039 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  dividend        8    0[COMRAM] long long 
  6042 ;;  divisor         8    8[COMRAM] long long 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  sign            1   17[COMRAM] unsigned char 
  6045 ;;  counter         1   16[COMRAM] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  8    0[COMRAM] long long 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6055 ;;      Params:        16       0       0       0       0       0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0
  6058 ;;      Totals:        18       0       0       0       0       0       0
  6059 ;;Total ram usage:       18 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    2
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_dtoa
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text20
  6070  002410                     __ptext20:
  6071                           	opt callstack 0
  6072  002410                     ___aomod:
  6073                           	opt callstack 0
  6074  002410  FFFF               	dw	65535	; assembler added errata NOP
  6075                           
  6076                           ;incstack = 0
  6077  002412  0E00               	movlw	0
  6078  002414  6E12               	movwf	___aomod@sign,c
  6079  002416  AE08               	btfss	___aomod@dividend+7,7,c
  6080  002418  D012               	goto	l2882
  6081  00241A  1E08               	comf	___aomod@dividend+7,f,c
  6082  00241C  1E07               	comf	___aomod@dividend+6,f,c
  6083  00241E  1E06               	comf	___aomod@dividend+5,f,c
  6084  002420  1E05               	comf	___aomod@dividend+4,f,c
  6085  002422  1E04               	comf	___aomod@dividend+3,f,c
  6086  002424  1E03               	comf	___aomod@dividend+2,f,c
  6087  002426  1E02               	comf	___aomod@dividend+1,f,c
  6088  002428  6C01               	negf	___aomod@dividend,c
  6089  00242A  0E00               	movlw	0
  6090  00242C  2202               	addwfc	___aomod@dividend+1,f,c
  6091  00242E  2203               	addwfc	___aomod@dividend+2,f,c
  6092  002430  2204               	addwfc	___aomod@dividend+3,f,c
  6093  002432  2205               	addwfc	___aomod@dividend+4,f,c
  6094  002434  2206               	addwfc	___aomod@dividend+5,f,c
  6095  002436  2207               	addwfc	___aomod@dividend+6,f,c
  6096  002438  2208               	addwfc	___aomod@dividend+7,f,c
  6097  00243A  0E01               	movlw	1
  6098  00243C  6E12               	movwf	___aomod@sign,c
  6099  00243E                     l2882:
  6100  00243E  FFFF               	dw	65535	; assembler added errata NOP
  6101  002440  AE10               	btfss	___aomod@divisor+7,7,c
  6102  002442  D010               	goto	l2886
  6103  002444  1E10               	comf	___aomod@divisor+7,f,c
  6104  002446  1E0F               	comf	___aomod@divisor+6,f,c
  6105  002448  1E0E               	comf	___aomod@divisor+5,f,c
  6106  00244A  1E0D               	comf	___aomod@divisor+4,f,c
  6107  00244C  1E0C               	comf	___aomod@divisor+3,f,c
  6108  00244E  1E0B               	comf	___aomod@divisor+2,f,c
  6109  002450  1E0A               	comf	___aomod@divisor+1,f,c
  6110  002452  6C09               	negf	___aomod@divisor,c
  6111  002454  0E00               	movlw	0
  6112  002456  220A               	addwfc	___aomod@divisor+1,f,c
  6113  002458  220B               	addwfc	___aomod@divisor+2,f,c
  6114  00245A  220C               	addwfc	___aomod@divisor+3,f,c
  6115  00245C  220D               	addwfc	___aomod@divisor+4,f,c
  6116  00245E  220E               	addwfc	___aomod@divisor+5,f,c
  6117  002460  220F               	addwfc	___aomod@divisor+6,f,c
  6118  002462  2210               	addwfc	___aomod@divisor+7,f,c
  6119  002464                     l2886:
  6120  002464  FFFF               	dw	65535	; assembler added errata NOP
  6121  002466  5009               	movf	___aomod@divisor,w,c
  6122  002468  100A               	iorwf	___aomod@divisor+1,w,c
  6123  00246A  100B               	iorwf	___aomod@divisor+2,w,c
  6124  00246C  100C               	iorwf	___aomod@divisor+3,w,c
  6125  00246E  100D               	iorwf	___aomod@divisor+4,w,c
  6126  002470  100E               	iorwf	___aomod@divisor+5,w,c
  6127  002472  100F               	iorwf	___aomod@divisor+6,w,c
  6128  002474  1010               	iorwf	___aomod@divisor+7,w,c
  6129  002476  B4D8               	btfsc	status,2,c
  6130  002478  D040               	goto	l2902
  6131  00247A  0E01               	movlw	1
  6132  00247C  6E11               	movwf	___aomod@counter,c
  6133  00247E  D00B               	goto	l2892
  6134  002480                     l2890:
  6135  002480  FFFF               	dw	65535	; assembler added errata NOP
  6136  002482  90D8               	bcf	status,0,c
  6137  002484  3609               	rlcf	___aomod@divisor,f,c
  6138  002486  360A               	rlcf	___aomod@divisor+1,f,c
  6139  002488  360B               	rlcf	___aomod@divisor+2,f,c
  6140  00248A  360C               	rlcf	___aomod@divisor+3,f,c
  6141  00248C  360D               	rlcf	___aomod@divisor+4,f,c
  6142  00248E  360E               	rlcf	___aomod@divisor+5,f,c
  6143  002490  360F               	rlcf	___aomod@divisor+6,f,c
  6144  002492  3610               	rlcf	___aomod@divisor+7,f,c
  6145  002494  2A11               	incf	___aomod@counter,f,c
  6146  002496                     l2892:
  6147  002496  FFFF               	dw	65535	; assembler added errata NOP
  6148  002498  AE10               	btfss	___aomod@divisor+7,7,c
  6149  00249A  D7F2               	goto	l2890
  6150  00249C                     u2210:
  6151  00249C  FFFF               	dw	65535	; assembler added errata NOP
  6152  00249E  5009               	movf	___aomod@divisor,w,c
  6153  0024A0  5C01               	subwf	___aomod@dividend,w,c
  6154  0024A2  500A               	movf	___aomod@divisor+1,w,c
  6155  0024A4  5802               	subwfb	___aomod@dividend+1,w,c
  6156  0024A6  500B               	movf	___aomod@divisor+2,w,c
  6157  0024A8  5803               	subwfb	___aomod@dividend+2,w,c
  6158  0024AA  500C               	movf	___aomod@divisor+3,w,c
  6159  0024AC  5804               	subwfb	___aomod@dividend+3,w,c
  6160  0024AE  500D               	movf	___aomod@divisor+4,w,c
  6161  0024B0  5805               	subwfb	___aomod@dividend+4,w,c
  6162  0024B2  500E               	movf	___aomod@divisor+5,w,c
  6163  0024B4  5806               	subwfb	___aomod@dividend+5,w,c
  6164  0024B6  500F               	movf	___aomod@divisor+6,w,c
  6165  0024B8  5807               	subwfb	___aomod@dividend+6,w,c
  6166  0024BA  5010               	movf	___aomod@divisor+7,w,c
  6167  0024BC  5808               	subwfb	___aomod@dividend+7,w,c
  6168  0024BE  A0D8               	btfss	status,0,c
  6169  0024C0  D010               	goto	l2898
  6170  0024C2  5009               	movf	___aomod@divisor,w,c
  6171  0024C4  5E01               	subwf	___aomod@dividend,f,c
  6172  0024C6  500A               	movf	___aomod@divisor+1,w,c
  6173  0024C8  5A02               	subwfb	___aomod@dividend+1,f,c
  6174  0024CA  500B               	movf	___aomod@divisor+2,w,c
  6175  0024CC  5A03               	subwfb	___aomod@dividend+2,f,c
  6176  0024CE  500C               	movf	___aomod@divisor+3,w,c
  6177  0024D0  5A04               	subwfb	___aomod@dividend+3,f,c
  6178  0024D2  500D               	movf	___aomod@divisor+4,w,c
  6179  0024D4  5A05               	subwfb	___aomod@dividend+4,f,c
  6180  0024D6  500E               	movf	___aomod@divisor+5,w,c
  6181  0024D8  5A06               	subwfb	___aomod@dividend+5,f,c
  6182  0024DA  500F               	movf	___aomod@divisor+6,w,c
  6183  0024DC  5A07               	subwfb	___aomod@dividend+6,f,c
  6184  0024DE  5010               	movf	___aomod@divisor+7,w,c
  6185  0024E0  5A08               	subwfb	___aomod@dividend+7,f,c
  6186  0024E2                     l2898:
  6187  0024E2  FFFF               	dw	65535	; assembler added errata NOP
  6188  0024E4  90D8               	bcf	status,0,c
  6189  0024E6  3210               	rrcf	___aomod@divisor+7,f,c
  6190  0024E8  320F               	rrcf	___aomod@divisor+6,f,c
  6191  0024EA  320E               	rrcf	___aomod@divisor+5,f,c
  6192  0024EC  320D               	rrcf	___aomod@divisor+4,f,c
  6193  0024EE  320C               	rrcf	___aomod@divisor+3,f,c
  6194  0024F0  320B               	rrcf	___aomod@divisor+2,f,c
  6195  0024F2  320A               	rrcf	___aomod@divisor+1,f,c
  6196  0024F4  3209               	rrcf	___aomod@divisor,f,c
  6197  0024F6  2E11               	decfsz	___aomod@counter,f,c
  6198  0024F8  D7D1               	goto	u2210
  6199  0024FA                     l2902:
  6200  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  6201  0024FC  5012               	movf	___aomod@sign,w,c
  6202  0024FE  B4D8               	btfsc	status,2,c
  6203  002500  D010               	goto	l2906
  6204  002502  1E08               	comf	___aomod@dividend+7,f,c
  6205  002504  1E07               	comf	___aomod@dividend+6,f,c
  6206  002506  1E06               	comf	___aomod@dividend+5,f,c
  6207  002508  1E05               	comf	___aomod@dividend+4,f,c
  6208  00250A  1E04               	comf	___aomod@dividend+3,f,c
  6209  00250C  1E03               	comf	___aomod@dividend+2,f,c
  6210  00250E  1E02               	comf	___aomod@dividend+1,f,c
  6211  002510  6C01               	negf	___aomod@dividend,c
  6212  002512  0E00               	movlw	0
  6213  002514  2202               	addwfc	___aomod@dividend+1,f,c
  6214  002516  2203               	addwfc	___aomod@dividend+2,f,c
  6215  002518  2204               	addwfc	___aomod@dividend+3,f,c
  6216  00251A  2205               	addwfc	___aomod@dividend+4,f,c
  6217  00251C  2206               	addwfc	___aomod@dividend+5,f,c
  6218  00251E  2207               	addwfc	___aomod@dividend+6,f,c
  6219  002520  2208               	addwfc	___aomod@dividend+7,f,c
  6220  002522                     l2906:
  6221  002522  FFFF               	dw	65535	; assembler added errata NOP
  6222  002524  C001  F001         	movff	___aomod@dividend,?___aomod
  6223  002528  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6224  00252C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6225  002530  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6226  002534  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6227  002538  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6228  00253C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6229  002540  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6230  002544  0012               	return		;funcret
  6231  002546  FFFF               	dw	65535	; errata NOP
  6232  002548                     __end_of___aomod:
  6233                           	opt callstack 0
  6234                           
  6235 ;; *************** function ___aodiv *****************
  6236 ;; Defined at:
  6237 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  dividend        8    0[COMRAM] long long 
  6240 ;;  divisor         8    8[COMRAM] long long 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  quotient        8   18[COMRAM] long long 
  6243 ;;  sign            1   17[COMRAM] unsigned char 
  6244 ;;  counter         1   16[COMRAM] unsigned char 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  8    0[COMRAM] long long 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6254 ;;      Params:        16       0       0       0       0       0       0
  6255 ;;      Locals:        10       0       0       0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0
  6257 ;;      Totals:        26       0       0       0       0       0       0
  6258 ;;Total ram usage:       26 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    2
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_dtoa
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text21
  6269  002170                     __ptext21:
  6270                           	opt callstack 0
  6271  002170                     ___aodiv:
  6272                           	opt callstack 0
  6273  002170  FFFF               	dw	65535	; assembler added errata NOP
  6274                           
  6275                           ;incstack = 0
  6276  002172  0E00               	movlw	0
  6277  002174  6E12               	movwf	___aodiv@sign,c
  6278  002176  AE10               	btfss	___aodiv@divisor+7,7,c
  6279  002178  D012               	goto	l2838
  6280  00217A  1E10               	comf	___aodiv@divisor+7,f,c
  6281  00217C  1E0F               	comf	___aodiv@divisor+6,f,c
  6282  00217E  1E0E               	comf	___aodiv@divisor+5,f,c
  6283  002180  1E0D               	comf	___aodiv@divisor+4,f,c
  6284  002182  1E0C               	comf	___aodiv@divisor+3,f,c
  6285  002184  1E0B               	comf	___aodiv@divisor+2,f,c
  6286  002186  1E0A               	comf	___aodiv@divisor+1,f,c
  6287  002188  6C09               	negf	___aodiv@divisor,c
  6288  00218A  0E00               	movlw	0
  6289  00218C  220A               	addwfc	___aodiv@divisor+1,f,c
  6290  00218E  220B               	addwfc	___aodiv@divisor+2,f,c
  6291  002190  220C               	addwfc	___aodiv@divisor+3,f,c
  6292  002192  220D               	addwfc	___aodiv@divisor+4,f,c
  6293  002194  220E               	addwfc	___aodiv@divisor+5,f,c
  6294  002196  220F               	addwfc	___aodiv@divisor+6,f,c
  6295  002198  2210               	addwfc	___aodiv@divisor+7,f,c
  6296  00219A  0E01               	movlw	1
  6297  00219C  6E12               	movwf	___aodiv@sign,c
  6298  00219E                     l2838:
  6299  00219E  FFFF               	dw	65535	; assembler added errata NOP
  6300  0021A0  AE08               	btfss	___aodiv@dividend+7,7,c
  6301  0021A2  D012               	goto	l2844
  6302  0021A4  1E08               	comf	___aodiv@dividend+7,f,c
  6303  0021A6  1E07               	comf	___aodiv@dividend+6,f,c
  6304  0021A8  1E06               	comf	___aodiv@dividend+5,f,c
  6305  0021AA  1E05               	comf	___aodiv@dividend+4,f,c
  6306  0021AC  1E04               	comf	___aodiv@dividend+3,f,c
  6307  0021AE  1E03               	comf	___aodiv@dividend+2,f,c
  6308  0021B0  1E02               	comf	___aodiv@dividend+1,f,c
  6309  0021B2  6C01               	negf	___aodiv@dividend,c
  6310  0021B4  0E00               	movlw	0
  6311  0021B6  2202               	addwfc	___aodiv@dividend+1,f,c
  6312  0021B8  2203               	addwfc	___aodiv@dividend+2,f,c
  6313  0021BA  2204               	addwfc	___aodiv@dividend+3,f,c
  6314  0021BC  2205               	addwfc	___aodiv@dividend+4,f,c
  6315  0021BE  2206               	addwfc	___aodiv@dividend+5,f,c
  6316  0021C0  2207               	addwfc	___aodiv@dividend+6,f,c
  6317  0021C2  2208               	addwfc	___aodiv@dividend+7,f,c
  6318  0021C4  0E01               	movlw	1
  6319  0021C6  1A12               	xorwf	___aodiv@sign,f,c
  6320  0021C8                     l2844:
  6321  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  6322  0021CA  EE20  F013         	lfsr	2,___aodiv@quotient
  6323  0021CE  0E07               	movlw	7
  6324  0021D0                     u2131:
  6325  0021D0  6ADE               	clrf	postinc2,c
  6326  0021D2  06E8               	decf	wreg,f,c
  6327  0021D4  E2FD               	bc	u2131
  6328  0021D6  5009               	movf	___aodiv@divisor,w,c
  6329  0021D8  100A               	iorwf	___aodiv@divisor+1,w,c
  6330  0021DA  100B               	iorwf	___aodiv@divisor+2,w,c
  6331  0021DC  100C               	iorwf	___aodiv@divisor+3,w,c
  6332  0021DE  100D               	iorwf	___aodiv@divisor+4,w,c
  6333  0021E0  100E               	iorwf	___aodiv@divisor+5,w,c
  6334  0021E2  100F               	iorwf	___aodiv@divisor+6,w,c
  6335  0021E4  1010               	iorwf	___aodiv@divisor+7,w,c
  6336  0021E6  B4D8               	btfsc	status,2,c
  6337  0021E8  D04A               	goto	l2866
  6338  0021EA  0E01               	movlw	1
  6339  0021EC  6E11               	movwf	___aodiv@counter,c
  6340  0021EE  D00B               	goto	l2852
  6341  0021F0                     l2850:
  6342  0021F0  FFFF               	dw	65535	; assembler added errata NOP
  6343  0021F2  90D8               	bcf	status,0,c
  6344  0021F4  3609               	rlcf	___aodiv@divisor,f,c
  6345  0021F6  360A               	rlcf	___aodiv@divisor+1,f,c
  6346  0021F8  360B               	rlcf	___aodiv@divisor+2,f,c
  6347  0021FA  360C               	rlcf	___aodiv@divisor+3,f,c
  6348  0021FC  360D               	rlcf	___aodiv@divisor+4,f,c
  6349  0021FE  360E               	rlcf	___aodiv@divisor+5,f,c
  6350  002200  360F               	rlcf	___aodiv@divisor+6,f,c
  6351  002202  3610               	rlcf	___aodiv@divisor+7,f,c
  6352  002204  2A11               	incf	___aodiv@counter,f,c
  6353  002206                     l2852:
  6354  002206  FFFF               	dw	65535	; assembler added errata NOP
  6355  002208  AE10               	btfss	___aodiv@divisor+7,7,c
  6356  00220A  D7F2               	goto	l2850
  6357  00220C                     u2150:
  6358  00220C  FFFF               	dw	65535	; assembler added errata NOP
  6359  00220E  90D8               	bcf	status,0,c
  6360  002210  3613               	rlcf	___aodiv@quotient,f,c
  6361  002212  3614               	rlcf	___aodiv@quotient+1,f,c
  6362  002214  3615               	rlcf	___aodiv@quotient+2,f,c
  6363  002216  3616               	rlcf	___aodiv@quotient+3,f,c
  6364  002218  3617               	rlcf	___aodiv@quotient+4,f,c
  6365  00221A  3618               	rlcf	___aodiv@quotient+5,f,c
  6366  00221C  3619               	rlcf	___aodiv@quotient+6,f,c
  6367  00221E  361A               	rlcf	___aodiv@quotient+7,f,c
  6368  002220  5009               	movf	___aodiv@divisor,w,c
  6369  002222  5C01               	subwf	___aodiv@dividend,w,c
  6370  002224  500A               	movf	___aodiv@divisor+1,w,c
  6371  002226  5802               	subwfb	___aodiv@dividend+1,w,c
  6372  002228  500B               	movf	___aodiv@divisor+2,w,c
  6373  00222A  5803               	subwfb	___aodiv@dividend+2,w,c
  6374  00222C  500C               	movf	___aodiv@divisor+3,w,c
  6375  00222E  5804               	subwfb	___aodiv@dividend+3,w,c
  6376  002230  500D               	movf	___aodiv@divisor+4,w,c
  6377  002232  5805               	subwfb	___aodiv@dividend+4,w,c
  6378  002234  500E               	movf	___aodiv@divisor+5,w,c
  6379  002236  5806               	subwfb	___aodiv@dividend+5,w,c
  6380  002238  500F               	movf	___aodiv@divisor+6,w,c
  6381  00223A  5807               	subwfb	___aodiv@dividend+6,w,c
  6382  00223C  5010               	movf	___aodiv@divisor+7,w,c
  6383  00223E  5808               	subwfb	___aodiv@dividend+7,w,c
  6384  002240  A0D8               	btfss	status,0,c
  6385  002242  D011               	goto	l2862
  6386  002244  5009               	movf	___aodiv@divisor,w,c
  6387  002246  5E01               	subwf	___aodiv@dividend,f,c
  6388  002248  500A               	movf	___aodiv@divisor+1,w,c
  6389  00224A  5A02               	subwfb	___aodiv@dividend+1,f,c
  6390  00224C  500B               	movf	___aodiv@divisor+2,w,c
  6391  00224E  5A03               	subwfb	___aodiv@dividend+2,f,c
  6392  002250  500C               	movf	___aodiv@divisor+3,w,c
  6393  002252  5A04               	subwfb	___aodiv@dividend+3,f,c
  6394  002254  500D               	movf	___aodiv@divisor+4,w,c
  6395  002256  5A05               	subwfb	___aodiv@dividend+4,f,c
  6396  002258  500E               	movf	___aodiv@divisor+5,w,c
  6397  00225A  5A06               	subwfb	___aodiv@dividend+5,f,c
  6398  00225C  500F               	movf	___aodiv@divisor+6,w,c
  6399  00225E  5A07               	subwfb	___aodiv@dividend+6,f,c
  6400  002260  5010               	movf	___aodiv@divisor+7,w,c
  6401  002262  5A08               	subwfb	___aodiv@dividend+7,f,c
  6402  002264  8013               	bsf	___aodiv@quotient,0,c
  6403  002266                     l2862:
  6404  002266  FFFF               	dw	65535	; assembler added errata NOP
  6405  002268  90D8               	bcf	status,0,c
  6406  00226A  3210               	rrcf	___aodiv@divisor+7,f,c
  6407  00226C  320F               	rrcf	___aodiv@divisor+6,f,c
  6408  00226E  320E               	rrcf	___aodiv@divisor+5,f,c
  6409  002270  320D               	rrcf	___aodiv@divisor+4,f,c
  6410  002272  320C               	rrcf	___aodiv@divisor+3,f,c
  6411  002274  320B               	rrcf	___aodiv@divisor+2,f,c
  6412  002276  320A               	rrcf	___aodiv@divisor+1,f,c
  6413  002278  3209               	rrcf	___aodiv@divisor,f,c
  6414  00227A  2E11               	decfsz	___aodiv@counter,f,c
  6415  00227C  D7C7               	goto	u2150
  6416  00227E                     l2866:
  6417  00227E  FFFF               	dw	65535	; assembler added errata NOP
  6418  002280  5012               	movf	___aodiv@sign,w,c
  6419  002282  B4D8               	btfsc	status,2,c
  6420  002284  D010               	goto	l2870
  6421  002286  1E1A               	comf	___aodiv@quotient+7,f,c
  6422  002288  1E19               	comf	___aodiv@quotient+6,f,c
  6423  00228A  1E18               	comf	___aodiv@quotient+5,f,c
  6424  00228C  1E17               	comf	___aodiv@quotient+4,f,c
  6425  00228E  1E16               	comf	___aodiv@quotient+3,f,c
  6426  002290  1E15               	comf	___aodiv@quotient+2,f,c
  6427  002292  1E14               	comf	___aodiv@quotient+1,f,c
  6428  002294  6C13               	negf	___aodiv@quotient,c
  6429  002296  0E00               	movlw	0
  6430  002298  2214               	addwfc	___aodiv@quotient+1,f,c
  6431  00229A  2215               	addwfc	___aodiv@quotient+2,f,c
  6432  00229C  2216               	addwfc	___aodiv@quotient+3,f,c
  6433  00229E  2217               	addwfc	___aodiv@quotient+4,f,c
  6434  0022A0  2218               	addwfc	___aodiv@quotient+5,f,c
  6435  0022A2  2219               	addwfc	___aodiv@quotient+6,f,c
  6436  0022A4  221A               	addwfc	___aodiv@quotient+7,f,c
  6437  0022A6                     l2870:
  6438  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  6439  0022A8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6440  0022AC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6441  0022B0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6442  0022B4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6443  0022B8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6444  0022BC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6445  0022C0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6446  0022C4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6447  0022C8  0012               	return		;funcret
  6448  0022CA  FFFF               	dw	65535	; errata NOP
  6449  0022CC                     __end_of___aodiv:
  6450                           	opt callstack 0
  6451                           
  6452 ;; *************** function _ctoa *****************
  6453 ;; Defined at:
  6454 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6457 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6458 ;;  c               1   29[COMRAM] unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  w               2   30[COMRAM] int 
  6461 ;;  l               2    0        int 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  2   27[COMRAM] int 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6471 ;;      Params:         3       0       0       0       0       0       0
  6472 ;;      Locals:         2       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0
  6474 ;;      Totals:         5       0       0       0       0       0       0
  6475 ;;Total ram usage:        5 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    6
  6478 ;; This function calls:
  6479 ;;		_pad
  6480 ;; This function is called by:
  6481 ;;		_vfpfcnvrt
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text22
  6486  002B5E                     __ptext22:
  6487                           	opt callstack 0
  6488  002B5E                     _ctoa:
  6489                           	opt callstack 0
  6490  002B5E  FFFF               	dw	65535	; assembler added errata NOP
  6491                           
  6492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6493                           
  6494                           ;incstack = 0
  6495  002B60  0100               	movlb	0	; () banked
  6496  002B62  5191               	movf	_width& (0+255),w,b
  6497  002B64  1192               	iorwf	(_width+1)& (0+255),w,b
  6498  002B66  A4D8               	btfss	status,2,c
  6499  002B68  D005               	goto	l2964
  6500                           
  6501                           ; BSR set to: 0
  6502  002B6A  C091  F01F         	movff	_width,ctoa@w
  6503  002B6E  C092  F020         	movff	_width+1,ctoa@w+1
  6504  002B72  D007               	goto	l2966
  6505  002B74                     l2964:
  6506  002B74  FFFF               	dw	65535	; assembler added errata NOP
  6507                           
  6508                           ; BSR set to: 0
  6509  002B76  0EFF               	movlw	255
  6510  002B78  2591               	addwf	_width& (0+255),w,b
  6511  002B7A  6E1F               	movwf	ctoa@w,c
  6512  002B7C  0EFF               	movlw	255
  6513  002B7E  2192               	addwfc	(_width+1)& (0+255),w,b
  6514  002B80  6E20               	movwf	ctoa@w+1,c
  6515  002B82                     l2966:
  6516  002B82  FFFF               	dw	65535	; assembler added errata NOP
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6520  002B84  C01E  F09B         	movff	ctoa@c,_dbuf
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6524  002B88  0E00               	movlw	0
  6525  002B8A  6F9C               	movwf	(_dbuf+1)& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6529  002B8C  C01C  F011         	movff	ctoa@fp,pad@fp
  6530  002B90  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6531  002B94  0E9B               	movlw	low _dbuf
  6532  002B96  6E13               	movwf	pad@buf,c
  6533  002B98  0E00               	movlw	high _dbuf
  6534  002B9A  6E14               	movwf	pad@buf+1,c
  6535  002B9C  C01F  F015         	movff	ctoa@w,pad@p
  6536  002BA0  C020  F016         	movff	ctoa@w+1,pad@p+1
  6537  002BA4  EC8F  F014         	call	_pad	;wreg free
  6538  002BA8  C011  F01C         	movff	?_pad,?_ctoa
  6539  002BAC  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6540  002BB0  0012               	return		;funcret
  6541  002BB2  FFFF               	dw	65535	; errata NOP
  6542  002BB4                     __end_of_ctoa:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function _pad *****************
  6546 ;; Defined at:
  6547 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6550 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6551 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6552 ;;		 -> dbuf(32), 
  6553 ;;  p               2   20[COMRAM] int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  w               2   25[COMRAM] int 
  6556 ;;  i               2   23[COMRAM] int 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  2   16[COMRAM] int 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6566 ;;      Params:         6       0       0       0       0       0       0
  6567 ;;      Locals:         4       0       0       0       0       0       0
  6568 ;;      Temps:          1       0       0       0       0       0       0
  6569 ;;      Totals:        11       0       0       0       0       0       0
  6570 ;;Total ram usage:       11 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    5
  6573 ;; This function calls:
  6574 ;;		_fputc
  6575 ;;		_fputs
  6576 ;;		_strlen
  6577 ;; This function is called by:
  6578 ;;		_ctoa
  6579 ;;		_dtoa
  6580 ;;		_otoa
  6581 ;;		_utoa
  6582 ;;		_xtoa
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text23
  6587  00291E                     __ptext23:
  6588                           	opt callstack 0
  6589  00291E                     _pad:
  6590                           	opt callstack 0
  6591  00291E  FFFF               	dw	65535	; assembler added errata NOP
  6592                           
  6593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6594                           
  6595                           ;incstack = 0
  6596  002920  0100               	movlb	0	; () banked
  6597  002922  A195               	btfss	_flags& (0+255),0,b
  6598  002924  D00A               	goto	l2780
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6602  002926  C013  F00A         	movff	pad@buf,fputs@s
  6603  00292A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6604  00292E  C011  F00C         	movff	pad@fp,fputs@fp
  6605  002932  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6606  002936  EC42  F016         	call	_fputs	;wreg free
  6607  00293A                     l2780:
  6608  00293A  FFFF               	dw	65535	; assembler added errata NOP
  6609                           
  6610                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6611  00293C  BE16               	btfsc	pad@p+1,7,c
  6612  00293E  D005               	goto	l2784
  6613  002940  C015  F01A         	movff	pad@p,pad@w
  6614  002944  C016  F01B         	movff	pad@p+1,pad@w+1
  6615  002948  D005               	goto	l338
  6616  00294A                     l2784:
  6617  00294A  FFFF               	dw	65535	; assembler added errata NOP
  6618  00294C  0E00               	movlw	0
  6619  00294E  6E1B               	movwf	pad@w+1,c
  6620  002950  0E00               	movlw	0
  6621  002952  6E1A               	movwf	pad@w,c
  6622  002954                     l338:
  6623  002954  FFFF               	dw	65535	; assembler added errata NOP
  6624                           
  6625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6626  002956  0E00               	movlw	0
  6627  002958  6E19               	movwf	pad@i+1,c
  6628  00295A  0E00               	movlw	0
  6629  00295C  6E18               	movwf	pad@i,c
  6630                           
  6631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6632  00295E  D00D               	goto	l2790
  6633  002960                     l2786:
  6634  002960  FFFF               	dw	65535	; assembler added errata NOP
  6635                           
  6636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6637  002962  0E00               	movlw	0
  6638  002964  6E02               	movwf	fputc@c+1,c
  6639  002966  0E20               	movlw	32
  6640  002968  6E01               	movwf	fputc@c,c
  6641  00296A  C011  F003         	movff	pad@fp,fputc@fp
  6642  00296E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6643  002972  EC39  F014         	call	_fputc	;wreg free
  6644                           
  6645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6646  002976  4A18               	infsnz	pad@i,f,c
  6647  002978  2A19               	incf	pad@i+1,f,c
  6648  00297A                     l2790:
  6649  00297A  FFFF               	dw	65535	; assembler added errata NOP
  6650                           
  6651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6652  00297C  501A               	movf	pad@w,w,c
  6653  00297E  5C18               	subwf	pad@i,w,c
  6654  002980  5019               	movf	pad@i+1,w,c
  6655  002982  0A80               	xorlw	128
  6656  002984  6E17               	movwf	??_pad& (0+255),c
  6657  002986  501B               	movf	pad@w+1,w,c
  6658  002988  0A80               	xorlw	128
  6659  00298A  5817               	subwfb	??_pad& (0+255),w,c
  6660  00298C  A0D8               	btfss	status,0,c
  6661  00298E  D7E8               	goto	l2786
  6662                           
  6663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6664  002990  0100               	movlb	0	; () banked
  6665  002992  B195               	btfsc	_flags& (0+255),0,b
  6666  002994  D00A               	goto	l2794
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6670  002996  C013  F00A         	movff	pad@buf,fputs@s
  6671  00299A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6672  00299E  C011  F00C         	movff	pad@fp,fputs@fp
  6673  0029A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6674  0029A6  EC42  F016         	call	_fputs	;wreg free
  6675  0029AA                     l2794:
  6676  0029AA  FFFF               	dw	65535	; assembler added errata NOP
  6677                           
  6678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6679  0029AC  C013  F001         	movff	pad@buf,strlen@s
  6680  0029B0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6681  0029B4  EC11  F017         	call	_strlen	;wreg free
  6682  0029B8  501A               	movf	pad@w,w,c
  6683  0029BA  2401               	addwf	?_strlen,w,c
  6684  0029BC  6E11               	movwf	?_pad,c
  6685  0029BE  501B               	movf	pad@w+1,w,c
  6686  0029C0  2002               	addwfc	?_strlen+1,w,c
  6687  0029C2  6E12               	movwf	?_pad+1,c
  6688  0029C4  0012               	return		;funcret
  6689  0029C6  FFFF               	dw	65535	; errata NOP
  6690  0029C8                     __end_of_pad:
  6691                           	opt callstack 0
  6692                           
  6693 ;; *************** function _strlen *****************
  6694 ;; Defined at:
  6695 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6698 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6701 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  2    0[COMRAM] unsigned int 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6711 ;;      Params:         2       0       0       0       0       0       0
  6712 ;;      Locals:         2       0       0       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0
  6714 ;;      Totals:         4       0       0       0       0       0       0
  6715 ;;Total ram usage:        4 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    2
  6718 ;; This function calls:
  6719 ;;		Nothing
  6720 ;; This function is called by:
  6721 ;;		_pad
  6722 ;;		_stoa
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text24
  6727  002E22                     __ptext24:
  6728                           	opt callstack 0
  6729  002E22                     _strlen:
  6730                           	opt callstack 0
  6731  002E22  FFFF               	dw	65535	; assembler added errata NOP
  6732                           
  6733                           ;incstack = 0
  6734  002E24  C001  F003         	movff	strlen@s,strlen@a
  6735  002E28  C002  F004         	movff	strlen@s+1,strlen@a+1
  6736  002E2C  D003               	goto	l2766
  6737  002E2E                     l2764:
  6738  002E2E  FFFF               	dw	65535	; assembler added errata NOP
  6739  002E30  4A01               	infsnz	strlen@s,f,c
  6740  002E32  2A02               	incf	strlen@s+1,f,c
  6741  002E34                     l2766:
  6742  002E34  FFFF               	dw	65535	; assembler added errata NOP
  6743  002E36  C001  FFD9         	movff	strlen@s,fsr2l
  6744  002E3A  C002  FFDA         	movff	strlen@s+1,fsr2h
  6745  002E3E  50DF               	movf	indf2,w,c
  6746  002E40  A4D8               	btfss	status,2,c
  6747  002E42  D7F5               	goto	l2764
  6748  002E44  5003               	movf	strlen@a,w,c
  6749  002E46  5C01               	subwf	strlen@s,w,c
  6750  002E48  6E01               	movwf	?_strlen,c
  6751  002E4A  5004               	movf	strlen@a+1,w,c
  6752  002E4C  5802               	subwfb	strlen@s+1,w,c
  6753  002E4E  6E02               	movwf	?_strlen+1,c
  6754  002E50  0012               	return		;funcret
  6755  002E52  FFFF               	dw	65535	; errata NOP
  6756  002E54                     __end_of_strlen:
  6757                           	opt callstack 0
  6758                           
  6759 ;; *************** function _fputs *****************
  6760 ;; Defined at:
  6761 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6764 ;;		 -> dbuf(32), 
  6765 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6766 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  i               2   14[COMRAM] int 
  6769 ;;  c               1   13[COMRAM] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  2    9[COMRAM] int 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6779 ;;      Params:         4       0       0       0       0       0       0
  6780 ;;      Locals:         3       0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0
  6782 ;;      Totals:         7       0       0       0       0       0       0
  6783 ;;Total ram usage:        7 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    4
  6786 ;; This function calls:
  6787 ;;		_fputc
  6788 ;; This function is called by:
  6789 ;;		_pad
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text25
  6794  002C84                     __ptext25:
  6795                           	opt callstack 0
  6796  002C84                     _fputs:
  6797                           	opt callstack 0
  6798  002C84  FFFF               	dw	65535	; assembler added errata NOP
  6799                           
  6800                           ;incstack = 0
  6801  002C86  0E00               	movlw	0
  6802  002C88  6E10               	movwf	fputs@i+1,c
  6803  002C8A  0E00               	movlw	0
  6804  002C8C  6E0F               	movwf	fputs@i,c
  6805  002C8E  D00C               	goto	l2760
  6806  002C90                     l2756:
  6807  002C90  FFFF               	dw	65535	; assembler added errata NOP
  6808  002C92  C00E  F001         	movff	fputs@c,fputc@c
  6809  002C96  6A02               	clrf	fputc@c+1,c
  6810  002C98  C00C  F003         	movff	fputs@fp,fputc@fp
  6811  002C9C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6812  002CA0  EC39  F014         	call	_fputc	;wreg free
  6813  002CA4  4A0F               	infsnz	fputs@i,f,c
  6814  002CA6  2A10               	incf	fputs@i+1,f,c
  6815  002CA8                     l2760:
  6816  002CA8  FFFF               	dw	65535	; assembler added errata NOP
  6817  002CAA  500F               	movf	fputs@i,w,c
  6818  002CAC  240A               	addwf	fputs@s,w,c
  6819  002CAE  6ED9               	movwf	fsr2l,c
  6820  002CB0  5010               	movf	fputs@i+1,w,c
  6821  002CB2  200B               	addwfc	fputs@s+1,w,c
  6822  002CB4  6EDA               	movwf	fsr2h,c
  6823  002CB6  50DF               	movf	indf2,w,c
  6824  002CB8  6E0E               	movwf	fputs@c,c
  6825  002CBA  500E               	movf	fputs@c,w,c
  6826  002CBC  B4D8               	btfsc	status,2,c
  6827  002CBE  0012               	return		;funcret
  6828  002CC0  FFFF               	dw	65535	; assembler added errata NOP
  6829  002CC2  D7E6               	goto	l2756
  6830  002CC4  FFFF               	dw	65535	; errata NOP
  6831  002CC6                     __end_of_fputs:
  6832                           	opt callstack 0
  6833                           
  6834 ;; *************** function _fputc *****************
  6835 ;; Defined at:
  6836 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  c               2    0[COMRAM] int 
  6839 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6840 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  2    0[COMRAM] int 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6852 ;;      Params:         4       0       0       0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0
  6854 ;;      Temps:          5       0       0       0       0       0       0
  6855 ;;      Totals:         9       0       0       0       0       0       0
  6856 ;;Total ram usage:        9 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    3
  6859 ;; This function calls:
  6860 ;;		_putch
  6861 ;; This function is called by:
  6862 ;;		_pad
  6863 ;;		_stoa
  6864 ;;		_vfpfcnvrt
  6865 ;;		_fputs
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text26
  6870  002872                     __ptext26:
  6871                           	opt callstack 0
  6872  002872                     _fputc:
  6873                           	opt callstack 0
  6874  002872  FFFF               	dw	65535	; assembler added errata NOP
  6875                           
  6876                           ;incstack = 0
  6877  002874  5003               	movf	fputc@fp,w,c
  6878  002876  1004               	iorwf	fputc@fp+1,w,c
  6879  002878  B4D8               	btfsc	status,2,c
  6880  00287A  D004               	goto	u1900
  6881  00287C  5003               	movf	fputc@fp,w,c
  6882  00287E  1004               	iorwf	fputc@fp+1,w,c
  6883  002880  A4D8               	btfss	status,2,c
  6884  002882  D005               	goto	l2746
  6885  002884                     u1900:
  6886  002884  FFFF               	dw	65535	; assembler added errata NOP
  6887  002886  5001               	movf	fputc@c,w,c
  6888  002888  EC9F  F017         	call	_putch
  6889  00288C  D045               	goto	l1306
  6890  00288E                     l2746:
  6891  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6892  002890  EE20 F004          	lfsr	2,4
  6893  002894  5003               	movf	fputc@fp,w,c
  6894  002896  26D9               	addwf	fsr2l,f,c
  6895  002898  5004               	movf	fputc@fp+1,w,c
  6896  00289A  22DA               	addwfc	fsr2h,f,c
  6897  00289C  50DE               	movf	postinc2,w,c
  6898  00289E  10DE               	iorwf	postinc2,w,c
  6899  0028A0  B4D8               	btfsc	status,2,c
  6900  0028A2  D016               	goto	u1920
  6901  0028A4  EE20 F004          	lfsr	2,4
  6902  0028A8  5003               	movf	fputc@fp,w,c
  6903  0028AA  26D9               	addwf	fsr2l,f,c
  6904  0028AC  5004               	movf	fputc@fp+1,w,c
  6905  0028AE  22DA               	addwfc	fsr2h,f,c
  6906  0028B0  EE10 F002          	lfsr	1,2
  6907  0028B4  5003               	movf	fputc@fp,w,c
  6908  0028B6  26E1               	addwf	fsr1l,f,c
  6909  0028B8  5004               	movf	fputc@fp+1,w,c
  6910  0028BA  22E2               	addwfc	fsr1h,f,c
  6911  0028BC  50DE               	movf	postinc2,w,c
  6912  0028BE  5CE6               	subwf	postinc1,w,c
  6913  0028C0  50E6               	movf	postinc1,w,c
  6914  0028C2  0A80               	xorlw	128
  6915  0028C4  6E09               	movwf	(??_fputc+4)& (0+255),c
  6916  0028C6  50DE               	movf	postinc2,w,c
  6917  0028C8  0A80               	xorlw	128
  6918  0028CA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6919  0028CC  B0D8               	btfsc	status,0,c
  6920  0028CE  D024               	goto	l1306
  6921  0028D0                     u1920:
  6922  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  6923  0028D2  EE20 F002          	lfsr	2,2
  6924  0028D6  5003               	movf	fputc@fp,w,c
  6925  0028D8  26D9               	addwf	fsr2l,f,c
  6926  0028DA  5004               	movf	fputc@fp+1,w,c
  6927  0028DC  22DA               	addwfc	fsr2h,f,c
  6928  0028DE  CFDE F005          	movff	postinc2,??_fputc
  6929  0028E2  CFDD F006          	movff	postdec2,??_fputc+1
  6930  0028E6  C003  FFD9         	movff	fputc@fp,fsr2l
  6931  0028EA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6932  0028EE  CFDE F007          	movff	postinc2,??_fputc+2
  6933  0028F2  CFDD F008          	movff	postdec2,??_fputc+3
  6934  0028F6  5005               	movf	??_fputc,w,c
  6935  0028F8  2407               	addwf	??_fputc+2,w,c
  6936  0028FA  6ED9               	movwf	fsr2l,c
  6937  0028FC  5006               	movf	??_fputc+1,w,c
  6938  0028FE  2008               	addwfc	??_fputc+3,w,c
  6939  002900  6EDA               	movwf	fsr2h,c
  6940  002902  C001  FFDF         	movff	fputc@c,indf2
  6941  002906  EE20 F002          	lfsr	2,2
  6942  00290A  5003               	movf	fputc@fp,w,c
  6943  00290C  26D9               	addwf	fsr2l,f,c
  6944  00290E  5004               	movf	fputc@fp+1,w,c
  6945  002910  22DA               	addwfc	fsr2h,f,c
  6946  002912  2ADE               	incf	postinc2,f,c
  6947  002914  0E00               	movlw	0
  6948  002916  22DD               	addwfc	postdec2,f,c
  6949  002918                     l1306:
  6950  002918  FFFF               	dw	65535	; assembler added errata NOP
  6951  00291A  0012               	return		;funcret
  6952  00291C  FFFF               	dw	65535	; errata NOP
  6953  00291E                     __end_of_fputc:
  6954                           	opt callstack 0
  6955                           
  6956 ;; *************** function _putch *****************
  6957 ;; Defined at:
  6958 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  c               1    wreg     unsigned char 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  c               1    0[COMRAM] unsigned char 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6972 ;;      Params:         0       0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    2
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_fputc
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text27
  6987  002F3E                     __ptext27:
  6988                           	opt callstack 0
  6989  002F3E                     _putch:
  6990                           	opt callstack 0
  6991  002F3E  FFFF               	dw	65535	; assembler added errata NOP
  6992                           
  6993                           ;incstack = 0
  6994  002F40  0012               	return		;funcret
  6995  002F42  FFFF               	dw	65535	; errata NOP
  6996  002F44                     __end_of_putch:
  6997                           	opt callstack 0
  6998                           
  6999 ;; *************** function _atoi *****************
  7000 ;; Defined at:
  7001 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7004 ;;		 -> STR_2(3), STR_1(4), 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  n               2   20[COMRAM] int 
  7007 ;;  neg             2   13[COMRAM] int 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  2    7[COMRAM] int 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7017 ;;      Params:         2       0       0       0       0       0       0
  7018 ;;      Locals:         9       0       0       0       0       0       0
  7019 ;;      Temps:          4       0       0       0       0       0       0
  7020 ;;      Totals:        15       0       0       0       0       0       0
  7021 ;;Total ram usage:       15 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    3
  7024 ;; This function calls:
  7025 ;;		___wmul
  7026 ;;		_isdigit
  7027 ;;		_isspace
  7028 ;; This function is called by:
  7029 ;;		_vfpfcnvrt
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text28
  7034  00200A                     __ptext28:
  7035                           	opt callstack 0
  7036  00200A                     _atoi:
  7037                           	opt callstack 0
  7038  00200A  FFFF               	dw	65535	; assembler added errata NOP
  7039                           
  7040                           ;incstack = 0
  7041  00200C  0E00               	movlw	0
  7042  00200E  6E16               	movwf	atoi@n+1,c
  7043  002010  0E00               	movlw	0
  7044  002012  6E15               	movwf	atoi@n,c
  7045  002014  0E00               	movlw	0
  7046  002016  6E0F               	movwf	atoi@neg+1,c
  7047  002018  0E00               	movlw	0
  7048  00201A  6E0E               	movwf	atoi@neg,c
  7049  00201C  D003               	goto	l3232
  7050  00201E                     l3230:
  7051  00201E  FFFF               	dw	65535	; assembler added errata NOP
  7052  002020  4A08               	infsnz	atoi@s,f,c
  7053  002022  2A09               	incf	atoi@s+1,f,c
  7054  002024                     l3232:
  7055  002024  FFFF               	dw	65535	; assembler added errata NOP
  7056  002026  0E01               	movlw	1
  7057  002028  6E14               	movwf	_atoi$1697,c
  7058  00202A  C008  FFF6         	movff	atoi@s,tblptrl
  7059  00202E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7060  002032                     	if	0	;tblptru may be non-zero
  7061  002032                     	endif
  7062  002032                     	if	0	;tblptru may be non-zero
  7063  002032                     	endif
  7064  002032  0008               	tblrd		*
  7065  002034  FFFF               	dw	65535	; errata NOP
  7066  002036  50F5               	movf	tablat,w,c
  7067  002038  0A20               	xorlw	32
  7068  00203A  B4D8               	btfsc	status,2,c
  7069  00203C  D019               	goto	l3240
  7070  00203E  0EF7               	movlw	247
  7071  002040  6E0A               	movwf	??_atoi& (0+255),c
  7072  002042  0EFF               	movlw	255
  7073  002044  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7074  002046  C008  FFF6         	movff	atoi@s,tblptrl
  7075  00204A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7076  00204E                     	if	0	;tblptru may be non-zero
  7077  00204E                     	endif
  7078  00204E                     	if	0	;tblptru may be non-zero
  7079  00204E                     	endif
  7080  00204E  0008               	tblrd		*
  7081  002050  FFFF               	dw	65535	; errata NOP
  7082  002052  50F5               	movf	tablat,w,c
  7083  002054  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7084  002056  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7085  002058  500A               	movf	??_atoi,w,c
  7086  00205A  260C               	addwf	??_atoi+2,f,c
  7087  00205C  500B               	movf	??_atoi+1,w,c
  7088  00205E  220D               	addwfc	??_atoi+3,f,c
  7089  002060  500D               	movf	??_atoi+3,w,c
  7090  002062  E104               	bnz	u2930
  7091  002064  0E05               	movlw	5
  7092  002066  5C0C               	subwf	??_atoi+2,w,c
  7093  002068  A0D8               	btfss	status,0,c
  7094  00206A  D002               	goto	l3240
  7095  00206C                     u2930:
  7096  00206C  0E00               	movlw	0
  7097  00206E  6E14               	movwf	_atoi$1697,c
  7098  002070                     l3240:
  7099  002070  FFFF               	dw	65535	; assembler added errata NOP
  7100  002072  C014  F010         	movff	_atoi$1697,_atoi$1696
  7101  002076  6A11               	clrf	_atoi$1696+1,c
  7102  002078  5010               	movf	_atoi$1696,w,c
  7103  00207A  1011               	iorwf	_atoi$1696+1,w,c
  7104  00207C  B4D8               	btfsc	status,2,c
  7105  00207E  D00A               	goto	l3250
  7106  002080  D7CE               	goto	l3230
  7107  002082                     l3246:
  7108  002082  FFFF               	dw	65535	; assembler added errata NOP
  7109  002084  0E00               	movlw	0
  7110  002086  6E0F               	movwf	atoi@neg+1,c
  7111  002088  0E01               	movlw	1
  7112  00208A  6E0E               	movwf	atoi@neg,c
  7113  00208C                     l3248:
  7114  00208C  FFFF               	dw	65535	; assembler added errata NOP
  7115  00208E  4A08               	infsnz	atoi@s,f,c
  7116  002090  2A09               	incf	atoi@s+1,f,c
  7117  002092  D032               	goto	l3256
  7118  002094                     l3250:
  7119  002094  FFFF               	dw	65535	; assembler added errata NOP
  7120  002096  C008  FFF6         	movff	atoi@s,tblptrl
  7121  00209A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7122  00209E                     	if	0	;tblptru may be non-zero
  7123  00209E                     	endif
  7124  00209E                     	if	0	;tblptru may be non-zero
  7125  00209E                     	endif
  7126  00209E  0008               	tblrd		*
  7127  0020A0  FFFF               	dw	65535	; errata NOP
  7128  0020A2  50F5               	movf	tablat,w,c
  7129  0020A4  6E0A               	movwf	??_atoi& (0+255),c
  7130  0020A6  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7131                           
  7132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7133                           ; Switch size 1, requested type "simple"
  7134                           ; Number of cases is 1, Range of values is 0 to 0
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte            4     3 (average)
  7138                           ;	Chosen strategy is simple_byte
  7139  0020A8  500B               	movf	??_atoi+1,w,c
  7140  0020AA  0A00               	xorlw	0	; case 0
  7141  0020AC  A4D8               	btfss	status,2,c
  7142  0020AE  D024               	goto	l3256
  7143                           
  7144                           ; Switch size 1, requested type "simple"
  7145                           ; Number of cases is 2, Range of values is 43 to 45
  7146                           ; switch strategies available:
  7147                           ; Name         Instructions Cycles
  7148                           ; simple_byte            7     4 (average)
  7149                           ;	Chosen strategy is simple_byte
  7150  0020B0  500A               	movf	??_atoi,w,c
  7151  0020B2  0A2B               	xorlw	43	; case 43
  7152  0020B4  B4D8               	btfsc	status,2,c
  7153  0020B6  D7EA               	goto	l3248
  7154  0020B8  0A06               	xorlw	6	; case 45
  7155  0020BA  B4D8               	btfsc	status,2,c
  7156  0020BC  D7E2               	goto	l3246
  7157  0020BE  D01C               	goto	l3256
  7158  0020C0                     l3252:
  7159  0020C0  FFFF               	dw	65535	; assembler added errata NOP
  7160  0020C2  C015  F001         	movff	atoi@n,___wmul@multiplier
  7161  0020C6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7162  0020CA  0E00               	movlw	0
  7163  0020CC  6E04               	movwf	___wmul@multiplicand+1,c
  7164  0020CE  0E0A               	movlw	10
  7165  0020D0  6E03               	movwf	___wmul@multiplicand,c
  7166  0020D2  EC2A  F017         	call	___wmul	;wreg free
  7167  0020D6  C008  FFF6         	movff	atoi@s,tblptrl
  7168  0020DA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7169  0020DE                     	if	0	;tblptru may be non-zero
  7170  0020DE                     	endif
  7171  0020DE                     	if	0	;tblptru may be non-zero
  7172  0020DE                     	endif
  7173  0020DE  0008               	tblrd		*
  7174  0020E0  FFFF               	dw	65535	; errata NOP
  7175  0020E2  50F5               	movf	tablat,w,c
  7176  0020E4  5E01               	subwf	?___wmul,f,c
  7177  0020E6  0E00               	movlw	0
  7178  0020E8  5A02               	subwfb	?___wmul+1,f,c
  7179  0020EA  0E30               	movlw	48
  7180  0020EC  2401               	addwf	?___wmul,w,c
  7181  0020EE  6E15               	movwf	atoi@n,c
  7182  0020F0  0E00               	movlw	0
  7183  0020F2  2002               	addwfc	?___wmul+1,w,c
  7184  0020F4  6E16               	movwf	atoi@n+1,c
  7185  0020F6  D7CA               	goto	l3248
  7186  0020F8                     l3256:
  7187  0020F8  FFFF               	dw	65535	; assembler added errata NOP
  7188  0020FA  0ED0               	movlw	208
  7189  0020FC  6E0A               	movwf	??_atoi& (0+255),c
  7190  0020FE  0EFF               	movlw	255
  7191  002100  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7192  002102  C008  FFF6         	movff	atoi@s,tblptrl
  7193  002106  C009  FFF7         	movff	atoi@s+1,tblptrh
  7194  00210A                     	if	0	;tblptru may be non-zero
  7195  00210A                     	endif
  7196  00210A                     	if	0	;tblptru may be non-zero
  7197  00210A                     	endif
  7198  00210A  0008               	tblrd		*
  7199  00210C  FFFF               	dw	65535	; errata NOP
  7200  00210E  50F5               	movf	tablat,w,c
  7201  002110  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7202  002112  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7203  002114  500A               	movf	??_atoi,w,c
  7204  002116  260C               	addwf	??_atoi+2,f,c
  7205  002118  500B               	movf	??_atoi+1,w,c
  7206  00211A  220D               	addwfc	??_atoi+3,f,c
  7207  00211C  500D               	movf	??_atoi+3,w,c
  7208  00211E  E106               	bnz	u2950
  7209  002120  0E0A               	movlw	10
  7210  002122  5C0C               	subwf	??_atoi+2,w,c
  7211  002124  B0D8               	btfsc	status,0,c
  7212  002126  D002               	goto	u2950
  7213  002128  0E01               	movlw	1
  7214  00212A  D002               	goto	u2960
  7215  00212C                     u2950:
  7216  00212C  FFFF               	dw	65535	; assembler added errata NOP
  7217  00212E  0E00               	movlw	0
  7218  002130                     u2960:
  7219  002130  FFFF               	dw	65535	; assembler added errata NOP
  7220  002132  6E12               	movwf	_atoi$1698,c
  7221  002134  6A13               	clrf	_atoi$1698+1,c
  7222  002136  5012               	movf	_atoi$1698,w,c
  7223  002138  1013               	iorwf	_atoi$1698+1,w,c
  7224  00213A  A4D8               	btfss	status,2,c
  7225  00213C  D7C1               	goto	l3252
  7226  00213E  500E               	movf	atoi@neg,w,c
  7227  002140  100F               	iorwf	atoi@neg+1,w,c
  7228  002142  A4D8               	btfss	status,2,c
  7229  002144  D00D               	goto	l1260
  7230  002146  C015  F00A         	movff	atoi@n,??_atoi
  7231  00214A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7232  00214E  1E0A               	comf	??_atoi,f,c
  7233  002150  1E0B               	comf	??_atoi+1,f,c
  7234  002152  4A0A               	infsnz	??_atoi,f,c
  7235  002154  2A0B               	incf	??_atoi+1,f,c
  7236  002156  C00A  F008         	movff	??_atoi,?_atoi
  7237  00215A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7238  00215E  D005               	goto	l1263
  7239  002160                     l1260:
  7240  002160  FFFF               	dw	65535	; assembler added errata NOP
  7241  002162  C015  F008         	movff	atoi@n,?_atoi
  7242  002166  C016  F009         	movff	atoi@n+1,?_atoi+1
  7243  00216A                     l1263:
  7244  00216A  FFFF               	dw	65535	; assembler added errata NOP
  7245  00216C  0012               	return		;funcret
  7246  00216E  FFFF               	dw	65535	; errata NOP
  7247  002170                     __end_of_atoi:
  7248                           	opt callstack 0
  7249                           
  7250 ;; *************** function _isspace *****************
  7251 ;; Defined at:
  7252 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  c               2    0[COMRAM] int 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  2    0[COMRAM] int 
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7266 ;;      Params:         2       0       0       0       0       0       0
  7267 ;;      Locals:         1       0       0       0       0       0       0
  7268 ;;      Temps:          4       0       0       0       0       0       0
  7269 ;;      Totals:         7       0       0       0       0       0       0
  7270 ;;Total ram usage:        7 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    2
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_atoi
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text29
  7281  002BFC                     __ptext29:
  7282                           	opt callstack 0
  7283  002BFC                     _isspace:
  7284                           	opt callstack 0
  7285  002BFC  FFFF               	dw	65535	; assembler added errata NOP
  7286                           
  7287                           ;incstack = 0
  7288  002BFE  0E01               	movlw	1
  7289  002C00  6E07               	movwf	_isspace$1733,c
  7290  002C02  0E20               	movlw	32
  7291  002C04  1801               	xorwf	isspace@c,w,c
  7292  002C06  1002               	iorwf	isspace@c+1,w,c
  7293  002C08  B4D8               	btfsc	status,2,c
  7294  002C0A  D014               	goto	l2956
  7295  002C0C  0EF7               	movlw	247
  7296  002C0E  6E03               	movwf	??_isspace& (0+255),c
  7297  002C10  0EFF               	movlw	255
  7298  002C12  6E04               	movwf	(??_isspace+1)& (0+255),c
  7299  002C14  C001  F005         	movff	isspace@c,??_isspace+2
  7300  002C18  C002  F006         	movff	isspace@c+1,??_isspace+3
  7301  002C1C  5003               	movf	??_isspace,w,c
  7302  002C1E  2605               	addwf	??_isspace+2,f,c
  7303  002C20  5004               	movf	??_isspace+1,w,c
  7304  002C22  2206               	addwfc	??_isspace+3,f,c
  7305  002C24  5006               	movf	??_isspace+3,w,c
  7306  002C26  E104               	bnz	u2320
  7307  002C28  0E05               	movlw	5
  7308  002C2A  5C05               	subwf	??_isspace+2,w,c
  7309  002C2C  A0D8               	btfss	status,0,c
  7310  002C2E  D002               	goto	l2956
  7311  002C30                     u2320:
  7312  002C30  0E00               	movlw	0
  7313  002C32  6E07               	movwf	_isspace$1733,c
  7314  002C34                     l2956:
  7315  002C34  FFFF               	dw	65535	; assembler added errata NOP
  7316  002C36  C007  F001         	movff	_isspace$1733,?_isspace
  7317  002C3A  6A02               	clrf	?_isspace+1,c
  7318  002C3C  0012               	return		;funcret
  7319  002C3E  FFFF               	dw	65535	; errata NOP
  7320  002C40                     __end_of_isspace:
  7321                           	opt callstack 0
  7322                           
  7323 ;; *************** function _isdigit *****************
  7324 ;; Defined at:
  7325 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  c               2    0[COMRAM] int 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  2    0[COMRAM] int 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7339 ;;      Params:         2       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0
  7341 ;;      Temps:          4       0       0       0       0       0       0
  7342 ;;      Totals:         6       0       0       0       0       0       0
  7343 ;;Total ram usage:        6 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    2
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_vfpfcnvrt
  7350 ;;		_atoi
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text30
  7355  002DEA                     __ptext30:
  7356                           	opt callstack 0
  7357  002DEA                     _isdigit:
  7358                           	opt callstack 0
  7359  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  7360                           
  7361                           ;incstack = 0
  7362  002DEC  0ED0               	movlw	208
  7363  002DEE  6E03               	movwf	??_isdigit& (0+255),c
  7364  002DF0  0EFF               	movlw	255
  7365  002DF2  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7366  002DF4  C001  F005         	movff	isdigit@c,??_isdigit+2
  7367  002DF8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7368  002DFC  5003               	movf	??_isdigit,w,c
  7369  002DFE  2605               	addwf	??_isdigit+2,f,c
  7370  002E00  5004               	movf	??_isdigit+1,w,c
  7371  002E02  2206               	addwfc	??_isdigit+3,f,c
  7372  002E04  5006               	movf	??_isdigit+3,w,c
  7373  002E06  E106               	bnz	u2090
  7374  002E08  0E0A               	movlw	10
  7375  002E0A  5C05               	subwf	??_isdigit+2,w,c
  7376  002E0C  B0D8               	btfsc	status,0,c
  7377  002E0E  D002               	goto	u2090
  7378  002E10  0E01               	movlw	1
  7379  002E12  D002               	goto	u2100
  7380  002E14                     u2090:
  7381  002E14  FFFF               	dw	65535	; assembler added errata NOP
  7382  002E16  0E00               	movlw	0
  7383  002E18                     u2100:
  7384  002E18  FFFF               	dw	65535	; assembler added errata NOP
  7385  002E1A  6E01               	movwf	?_isdigit,c
  7386  002E1C  6A02               	clrf	?_isdigit+1,c
  7387  002E1E  0012               	return		;funcret
  7388  002E20  FFFF               	dw	65535	; errata NOP
  7389  002E22                     __end_of_isdigit:
  7390                           	opt callstack 0
  7391                           
  7392 ;; *************** function ___wmul *****************
  7393 ;; Defined at:
  7394 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  multiplier      2    0[COMRAM] unsigned int 
  7397 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  product         2    4[COMRAM] unsigned int 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  2    0[COMRAM] unsigned int 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0, prodl, prodh
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7409 ;;      Params:         4       0       0       0       0       0       0
  7410 ;;      Locals:         2       0       0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0
  7412 ;;      Totals:         6       0       0       0       0       0       0
  7413 ;;Total ram usage:        6 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    2
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_atoi
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text31
  7424  002E54                     __ptext31:
  7425                           	opt callstack 0
  7426  002E54                     ___wmul:
  7427                           	opt callstack 0
  7428  002E54  FFFF               	dw	65535	; assembler added errata NOP
  7429                           
  7430                           ;incstack = 0
  7431  002E56  5001               	movf	___wmul@multiplier,w,c
  7432  002E58  0203               	mulwf	___wmul@multiplicand,c
  7433  002E5A  CFF3 F005          	movff	prodl,___wmul@product
  7434  002E5E  CFF4 F006          	movff	prodh,___wmul@product+1
  7435  002E62  5001               	movf	___wmul@multiplier,w,c
  7436  002E64  0204               	mulwf	___wmul@multiplicand+1,c
  7437  002E66  50F3               	movf	prodl,w,c
  7438  002E68  2606               	addwf	___wmul@product+1,f,c
  7439  002E6A  5002               	movf	___wmul@multiplier+1,w,c
  7440  002E6C  0203               	mulwf	___wmul@multiplicand,c
  7441  002E6E  50F3               	movf	prodl,w,c
  7442  002E70  2606               	addwf	___wmul@product+1,f,c
  7443  002E72  C005  F001         	movff	___wmul@product,?___wmul
  7444  002E76  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7445  002E7A  0012               	return		;funcret
  7446  002E7C  FFFF               	dw	65535	; errata NOP
  7447  002E7E                     __end_of___wmul:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function _getchar *****************
  7451 ;; Defined at:
  7452 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;		None
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  2   26[None  ] int 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7466 ;;      Params:         0       0       0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0
  7469 ;;      Totals:         0       0       0       0       0       0       0
  7470 ;;Total ram usage:        0 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    4
  7473 ;; This function calls:
  7474 ;;		_fgetc
  7475 ;; This function is called by:
  7476 ;;		_int_to_char
  7477 ;;		_float_to_char
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text32
  7482  002F12                     __ptext32:
  7483                           	opt callstack 0
  7484  002F12                     _getchar:
  7485                           	opt callstack 0
  7486  002F12  FFFF               	dw	65535	; assembler added errata NOP
  7487                           
  7488                           ;	Return value of _getchar is never used
  7489                           
  7490                           ;incstack = 0
  7491  002F14  0E00               	movlw	0
  7492  002F16  6E03               	movwf	fgetc@fp,c
  7493  002F18  0E00               	movlw	0
  7494  002F1A  6E04               	movwf	fgetc@fp+1,c
  7495  002F1C  ECE4  F014         	call	_fgetc	;wreg free
  7496  002F20  0012               	return		;funcret
  7497  002F22  FFFF               	dw	65535	; errata NOP
  7498  002F24                     __end_of_getchar:
  7499                           	opt callstack 0
  7500                           
  7501 ;; *************** function _fgetc *****************
  7502 ;; Defined at:
  7503 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7506 ;;		 -> NULL(0), 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  c               2    9[COMRAM] int 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  2    2[COMRAM] int 
  7511 ;; Registers used:
  7512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7518 ;;      Params:         2       0       0       0       0       0       0
  7519 ;;      Locals:         2       0       0       0       0       0       0
  7520 ;;      Temps:          5       0       0       0       0       0       0
  7521 ;;      Totals:         9       0       0       0       0       0       0
  7522 ;;Total ram usage:        9 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:    3
  7525 ;; This function calls:
  7526 ;;		_getch
  7527 ;; This function is called by:
  7528 ;;		_getchar
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text33
  7533  0029C8                     __ptext33:
  7534                           	opt callstack 0
  7535  0029C8                     _fgetc:
  7536                           	opt callstack 0
  7537  0029C8  FFFF               	dw	65535	; assembler added errata NOP
  7538                           
  7539                           ;incstack = 0
  7540  0029CA  5003               	movf	fgetc@fp,w,c
  7541  0029CC  1004               	iorwf	fgetc@fp+1,w,c
  7542  0029CE  A4D8               	btfss	status,2,c
  7543  0029D0  D012               	goto	l3690
  7544  0029D2  507E               	movf	_ungetcnt,w,c
  7545  0029D4  B4D8               	btfsc	status,2,c
  7546  0029D6  D007               	goto	l3688
  7547  0029D8  0E00               	movlw	0
  7548  0029DA  6E0B               	movwf	fgetc@c+1,c
  7549  0029DC  0E00               	movlw	0
  7550  0029DE  6E0A               	movwf	fgetc@c,c
  7551  0029E0  0E00               	movlw	0
  7552  0029E2  6E7E               	movwf	_ungetcnt,c
  7553  0029E4  D02F               	goto	l3692
  7554  0029E6                     l3688:
  7555  0029E6  FFFF               	dw	65535	; assembler added errata NOP
  7556  0029E8  EC92  F017         	call	_getch	;wreg free
  7557  0029EC  C001  F00A         	movff	?_getch,fgetc@c
  7558  0029F0  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7559  0029F4  D027               	goto	l3692
  7560  0029F6                     l3690:
  7561  0029F6  FFFF               	dw	65535	; assembler added errata NOP
  7562  0029F8  EE20 F002          	lfsr	2,2
  7563  0029FC  5003               	movf	fgetc@fp,w,c
  7564  0029FE  26D9               	addwf	fsr2l,f,c
  7565  002A00  5004               	movf	fgetc@fp+1,w,c
  7566  002A02  22DA               	addwfc	fsr2h,f,c
  7567  002A04  CFDE F005          	movff	postinc2,??_fgetc
  7568  002A08  CFDD F006          	movff	postdec2,??_fgetc+1
  7569  002A0C  C003  FFD9         	movff	fgetc@fp,fsr2l
  7570  002A10  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7571  002A14  CFDE F007          	movff	postinc2,??_fgetc+2
  7572  002A18  CFDD F008          	movff	postdec2,??_fgetc+3
  7573  002A1C  5005               	movf	??_fgetc,w,c
  7574  002A1E  2407               	addwf	??_fgetc+2,w,c
  7575  002A20  6ED9               	movwf	fsr2l,c
  7576  002A22  5006               	movf	??_fgetc+1,w,c
  7577  002A24  2008               	addwfc	??_fgetc+3,w,c
  7578  002A26  6EDA               	movwf	fsr2h,c
  7579  002A28  50DF               	movf	indf2,w,c
  7580  002A2A  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7581  002A2C  5009               	movf	??_fgetc+4,w,c
  7582  002A2E  6E0A               	movwf	fgetc@c,c
  7583  002A30  6A0B               	clrf	fgetc@c+1,c
  7584  002A32  EE20 F002          	lfsr	2,2
  7585  002A36  5003               	movf	fgetc@fp,w,c
  7586  002A38  26D9               	addwf	fsr2l,f,c
  7587  002A3A  5004               	movf	fgetc@fp+1,w,c
  7588  002A3C  22DA               	addwfc	fsr2h,f,c
  7589  002A3E  2ADE               	incf	postinc2,f,c
  7590  002A40  0E00               	movlw	0
  7591  002A42  22DD               	addwfc	postdec2,f,c
  7592  002A44                     l3692:
  7593  002A44  FFFF               	dw	65535	; assembler added errata NOP
  7594  002A46  C00A  F003         	movff	fgetc@c,?_fgetc
  7595  002A4A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7596  002A4E  0012               	return		;funcret
  7597  002A50  FFFF               	dw	65535	; errata NOP
  7598  002A52                     __end_of_fgetc:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _getch *****************
  7602 ;; Defined at:
  7603 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2    0[COMRAM] int 
  7610 ;; Registers used:
  7611 ;;		None
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7617 ;;      Params:         2       0       0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0
  7620 ;;      Totals:         2       0       0       0       0       0       0
  7621 ;;Total ram usage:        2 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    2
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_fgetc
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text34
  7632  002F24                     __ptext34:
  7633                           	opt callstack 0
  7634  002F24                     _getch:
  7635                           	opt callstack 0
  7636  002F24  FFFF               	dw	65535	; assembler added errata NOP
  7637                           
  7638                           ;incstack = 0
  7639  002F26  6801               	setf	?_getch,c
  7640  002F28  6802               	setf	?_getch+1,c
  7641  002F2A  0012               	return		;funcret
  7642  002F2C  FFFF               	dw	65535	; errata NOP
  7643  002F2E                     __end_of_getch:
  7644                           	opt callstack 0
  7645                           
  7646 ;; *************** function _initialize_TX *****************
  7647 ;; Defined at:
  7648 ;;		line 23 in file "serial.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;		None
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         0       0       0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0
  7665 ;;      Totals:         0       0       0       0       0       0       0
  7666 ;;Total ram usage:        0 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    2
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_main
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text35
  7677  002EC2                     __ptext35:
  7678                           	opt callstack 0
  7679  002EC2                     _initialize_TX:
  7680                           	opt callstack 0
  7681  002EC2  FFFF               	dw	65535	; assembler added errata NOP
  7682                           
  7683                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7684                           
  7685                           ;incstack = 0
  7686  002EC4  8CAC               	bsf	4012,6,c	;volatile
  7687                           
  7688                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7689  002EC6  8AAC               	bsf	4012,5,c	;volatile
  7690                           
  7691                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7692  002EC8  98AC               	bcf	4012,4,c	;volatile
  7693                           
  7694                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7695  002ECA  94AC               	bcf	4012,2,c	;volatile
  7696                           
  7697                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7698  002ECC  80AC               	bsf	4012,0,c	;volatile
  7699                           
  7700                           ;serial.c: 29:   SPBRG = 25;
  7701  002ECE  0E19               	movlw	25
  7702  002ED0  6EAF               	movwf	4015,c	;volatile
  7703  002ED2  0012               	return		;funcret
  7704  002ED4  FFFF               	dw	65535	; errata NOP
  7705  002ED6                     __end_of_initialize_TX:
  7706                           	opt callstack 0
  7707                           
  7708 ;; *************** function _initialize_RX *****************
  7709 ;; Defined at:
  7710 ;;		line 32 in file "serial.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, status,2
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7724 ;;      Params:         0       0       0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:    2
  7731 ;; This function calls:
  7732 ;;		Nothing
  7733 ;; This function is called by:
  7734 ;;		_main
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text36
  7739  002ED6                     __ptext36:
  7740                           	opt callstack 0
  7741  002ED6                     _initialize_RX:
  7742                           	opt callstack 0
  7743  002ED6  FFFF               	dw	65535	; assembler added errata NOP
  7744                           
  7745                           ;serial.c: 33:   RCSTA = 0x00;
  7746                           
  7747                           ;incstack = 0
  7748  002ED8  0E00               	movlw	0
  7749  002EDA  6EAB               	movwf	4011,c	;volatile
  7750                           
  7751                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7752  002EDC  8EAB               	bsf	4011,7,c	;volatile
  7753                           
  7754                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7755  002EDE  8CAB               	bsf	4011,6,c	;volatile
  7756                           
  7757                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7758  002EE0  88AB               	bsf	4011,4,c	;volatile
  7759                           
  7760                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7761  002EE2  96AB               	bcf	4011,3,c	;volatile
  7762                           
  7763                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7764  002EE4  80AB               	bsf	4011,0,c	;volatile
  7765  002EE6  0012               	return		;funcret
  7766  002EE8  FFFF               	dw	65535	; errata NOP
  7767  002EEA                     __end_of_initialize_RX:
  7768                           	opt callstack 0
  7769                           
  7770 ;; *************** function _UARTSendString *****************
  7771 ;; Defined at:
  7772 ;;		line 65 in file "serial.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  c               2   32[BANK0 ] PTR unsigned char 
  7775 ;;		 -> int_to_char@result(10), 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  i               2   34[BANK0 ] int 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7787 ;;      Params:         0       2       0       0       0       0       0
  7788 ;;      Locals:         0       2       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0
  7790 ;;      Totals:         0       4       0       0       0       0       0
  7791 ;;Total ram usage:        4 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    3
  7794 ;; This function calls:
  7795 ;;		_UARTSendChar
  7796 ;; This function is called by:
  7797 ;;		_main
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text37
  7802  002C40                     __ptext37:
  7803                           	opt callstack 0
  7804  002C40                     _UARTSendString:
  7805                           	opt callstack 0
  7806  002C40  FFFF               	dw	65535	; assembler added errata NOP
  7807                           
  7808                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  7809                           
  7810                           ;incstack = 0
  7811  002C42  9E94               	bcf	3988,7,c	;volatile
  7812                           
  7813                           ;serial.c: 67:   int i = 0;
  7814  002C44  0E00               	movlw	0
  7815  002C46  0100               	movlb	0	; () banked
  7816  002C48  6FDE               	movwf	(UARTSendString@i+1)& (0+255),b
  7817  002C4A  0E00               	movlw	0
  7818  002C4C  6FDD               	movwf	UARTSendString@i& (0+255),b
  7819                           
  7820                           ;serial.c: 68:   while (c[i] != '\0') {
  7821  002C4E  D00D               	goto	l3810
  7822  002C50                     l3806:
  7823  002C50  FFFF               	dw	65535	; assembler added errata NOP
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;serial.c: 69:     UARTSendChar(c[i]);
  7827  002C52  51DD               	movf	UARTSendString@i& (0+255),w,b
  7828  002C54  25DB               	addwf	UARTSendString@c& (0+255),w,b
  7829  002C56  6ED9               	movwf	fsr2l,c
  7830  002C58  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  7831  002C5A  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7832  002C5C  6EDA               	movwf	fsr2h,c
  7833  002C5E  50DF               	movf	indf2,w,c
  7834  002C60  EC7F  F017         	call	_UARTSendChar
  7835                           
  7836                           ;serial.c: 70:     i++;
  7837  002C64  0100               	movlb	0	; () banked
  7838  002C66  4BDD               	infsnz	UARTSendString@i& (0+255),f,b
  7839  002C68  2BDE               	incf	(UARTSendString@i+1)& (0+255),f,b
  7840  002C6A                     l3810:
  7841  002C6A  FFFF               	dw	65535	; assembler added errata NOP
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;serial.c: 68:   while (c[i] != '\0') {
  7845  002C6C  51DD               	movf	UARTSendString@i& (0+255),w,b
  7846  002C6E  25DB               	addwf	UARTSendString@c& (0+255),w,b
  7847  002C70  6ED9               	movwf	fsr2l,c
  7848  002C72  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  7849  002C74  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7850  002C76  6EDA               	movwf	fsr2h,c
  7851  002C78  50DF               	movf	indf2,w,c
  7852  002C7A  B4D8               	btfsc	status,2,c
  7853                           
  7854                           ; BSR set to: 0
  7855  002C7C  0012               	return		;funcret
  7856  002C7E  FFFF               	dw	65535	; assembler added errata NOP
  7857  002C80  D7E7               	goto	l3806
  7858  002C82  FFFF               	dw	65535	; errata NOP
  7859  002C84                     __end_of_UARTSendString:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _UARTNewLine *****************
  7863 ;; Defined at:
  7864 ;;		line 41 in file "serial.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7878 ;;      Params:         0       0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    3
  7885 ;; This function calls:
  7886 ;;		_UARTSendChar
  7887 ;; This function is called by:
  7888 ;;		_main
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text38
  7893  002EEA                     __ptext38:
  7894                           	opt callstack 0
  7895  002EEA                     _UARTNewLine:
  7896                           	opt callstack 0
  7897  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  7898                           
  7899                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;incstack = 0
  7903  002EEC  9E94               	bcf	3988,7,c	;volatile
  7904                           
  7905                           ;serial.c: 43:   UARTSendChar(0x0a);
  7906  002EEE  0E0A               	movlw	10
  7907  002EF0  EC7F  F017         	call	_UARTSendChar
  7908                           
  7909                           ;serial.c: 44:   UARTSendChar(0x0d);
  7910  002EF4  0E0D               	movlw	13
  7911  002EF6  EC7F  F017         	call	_UARTSendChar
  7912  002EFA  0012               	return		;funcret
  7913  002EFC  FFFF               	dw	65535	; errata NOP
  7914  002EFE                     __end_of_UARTNewLine:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function _UARTSendChar *****************
  7918 ;; Defined at:
  7919 ;;		line 47 in file "serial.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  c               1    wreg     unsigned char 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  c               1    0[COMRAM] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7933 ;;      Params:         0       0       0       0       0       0       0
  7934 ;;      Locals:         1       0       0       0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0
  7936 ;;      Totals:         1       0       0       0       0       0       0
  7937 ;;Total ram usage:        1 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    2
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_UARTNewLine
  7944 ;;		_UARTSendString
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text39
  7949  002EFE                     __ptext39:
  7950                           	opt callstack 0
  7951  002EFE                     _UARTSendChar:
  7952                           	opt callstack 0
  7953  002EFE  FFFF               	dw	65535	; assembler added errata NOP
  7954                           
  7955                           ;incstack = 0
  7956                           ;UARTSendChar@c stored from wreg
  7957  002F00  6E01               	movwf	UARTSendChar@c,c
  7958                           
  7959                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  7960  002F02  9E94               	bcf	3988,7,c	;volatile
  7961  002F04                     l174:
  7962  002F04  FFFF               	dw	65535	; assembler added errata NOP
  7963  002F06  A2AC               	btfss	4012,1,c	;volatile
  7964  002F08  D7FD               	goto	l174
  7965                           
  7966                           ;serial.c: 50:   TXREG = c;
  7967  002F0A  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  7968  002F0E  0012               	return		;funcret
  7969  002F10  FFFF               	dw	65535	; errata NOP
  7970  002F12                     __end_of_UARTSendChar:
  7971                           	opt callstack 0
  7972                           
  7973 ;; *************** function _timingISR *****************
  7974 ;; Defined at:
  7975 ;;		line 31 in file "timer.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7989 ;;      Params:         0       0       0       0       0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0
  7992 ;;      Totals:         0       0       0       0       0       0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:    1
  7996 ;; This function calls:
  7997 ;;		_Timer0_StartTimer
  7998 ;; This function is called by:
  7999 ;;		Interrupt level 2
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	intcode
  8004  000008                     __pintcode:
  8005                           	opt callstack 0
  8006  000008                     _timingISR:
  8007                           	opt callstack 0
  8008  000008  FFFF               	dw	65535	; assembler added errata NOP
  8009                           
  8010                           ;incstack = 0
  8011  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8012                           
  8013                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  8014  00000C  B4F2               	btfsc	4082,2,c	;volatile
  8015  00000E  AAF2               	btfss	4082,5,c	;volatile
  8016  000010  D00D               	goto	i2l239
  8017                           
  8018                           ;timer.c: 33:   TMR0IF = 0;
  8019  000012  94F2               	bcf	4082,2,c	;volatile
  8020                           
  8021                           ;timer.c: 34:   time_ms++;
  8022  000014  0E01               	movlw	1
  8023  000016  0100               	movlb	0	; () banked
  8024  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
  8025  00001A  0E00               	movlw	0
  8026  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  8027  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  8028  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;timer.c: 35:   TMR0H = 0xFF;
  8032  000022  68D7               	setf	4055,c	;volatile
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;timer.c: 36:   TMR0L = 0x34;
  8036  000024  0E34               	movlw	52
  8037  000026  6ED6               	movwf	4054,c	;volatile
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;timer.c: 37:   Timer0_StartTimer();
  8041  000028  EC97  F017         	call	_Timer0_StartTimer	;wreg free
  8042  00002C                     i2l239:
  8043  00002C  FFFF               	dw	65535	; assembler added errata NOP
  8044  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8045  000030  0011               	retfie		f
  8046  000032  FFFF               	dw	65535	; errata NOP
  8047  000034                     __end_of_timingISR:
  8048                           	opt callstack 0
  8049                           
  8050 ;; *************** function _Timer0_StartTimer *****************
  8051 ;; Defined at:
  8052 ;;		line 21 in file "timer.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  2  229[None  ] int 
  8059 ;; Registers used:
  8060 ;;		None
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8066 ;;      Params:         0       0       0       0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_timingISR
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text41
  8080  002F2E                     __ptext41:
  8081                           	opt callstack 0
  8082  002F2E                     _Timer0_StartTimer:
  8083                           	opt callstack 0
  8084  002F2E  FFFF               	dw	65535	; assembler added errata NOP
  8085                           
  8086                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  8087                           
  8088                           ;incstack = 0
  8089  002F30  8ED5               	bsf	4053,7,c	;volatile
  8090                           
  8091                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  8092  002F32  0012               	return		;funcret
  8093  002F34  FFFF               	dw	65535	; errata NOP
  8094  002F36                     __end_of_Timer0_StartTimer:
  8095                           	opt callstack 0
  8096                           
  8097                           	psect	rparam
  8098  0000                     
  8099                           	psect	temp
  8100  00007F                     btemp:
  8101                           	opt callstack 0
  8102  00007F                     	ds	1
  8103  0000                     int$flags	set	btemp
  8104  0000                     wtemp8	set	btemp+1
  8105  0000                     ttemp5	set	btemp+1
  8106  0000                     ttemp6	set	btemp+4
  8107  0000                     ttemp7	set	btemp+8
  8108                           tosu	equ	0xFFF
  8109                           tosh	equ	0xFFE
  8110                           tosl	equ	0xFFD
  8111                           stkptr	equ	0xFFC
  8112                           pclatu	equ	0xFFB
  8113                           pclath	equ	0xFFA
  8114                           pcl	equ	0xFF9
  8115                           tblptru	equ	0xFF8
  8116                           tblptrh	equ	0xFF7
  8117                           tblptrl	equ	0xFF6
  8118                           tablat	equ	0xFF5
  8119                           prodh	equ	0xFF4
  8120                           prodl	equ	0xFF3
  8121                           indf0	equ	0xFEF
  8122                           postinc0	equ	0xFEE
  8123                           postdec0	equ	0xFED
  8124                           preinc0	equ	0xFEC
  8125                           plusw0	equ	0xFEB
  8126                           fsr0h	equ	0xFEA
  8127                           fsr0l	equ	0xFE9
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           postinc1	equ	0xFE6
  8131                           postdec1	equ	0xFE5
  8132                           preinc1	equ	0xFE4
  8133                           plusw1	equ	0xFE3
  8134                           fsr1h	equ	0xFE2
  8135                           fsr1l	equ	0xFE1
  8136                           bsr	equ	0xFE0
  8137                           indf2	equ	0xFDF
  8138                           postinc2	equ	0xFDE
  8139                           postdec2	equ	0xFDD
  8140                           preinc2	equ	0xFDC
  8141                           plusw2	equ	0xFDB
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     38     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1699_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49542
                                             36 BANK0      2     2      0
                        _UARTNewLine
                     _UARTSendString
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_op                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49030
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _read_op (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     264
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
                            _read_op (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                  _Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) _Timer0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _read_op (ARG)
       _sprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op (ARG)
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _read_op (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
   _write_op

 _timingISR (ROOT)
   _Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     26      68       4       81.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6      14        0.0%
DATA                 0      0      E6      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 27 04:33:02 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                              __CFG_OSC$HS 000000  
                                                      l401 2336  
                                                      l420 1CD0  
                                                      l174 2F04  
                                                      l422 1CDA  
                                                      l338 2954  
                                                      l435 1A78  
                                                      l356 186A  
                                                      l381 1E92  
                                                      l437 1A82  
                                                      l358 1874  
                                                      l383 1E9C  
                                                      l497 17E6  
                                                      l992 25FE  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 2D3E  
                                                      _lcd 0080  
                                                      _pad 291E  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             __CFG_LVP$OFF 000000  
                                             __CFG_WDT$OFF 000000  
                                                     l1002 284C  
                                                     ?_abs 0013  
                                                     l1232 2D74  
                                                     l1306 2918  
                                                     l1260 2160  
                                                     l1229 2D6A  
                                                     l3110 238C  
                                                     l3102 2350  
                                                     l1263 216A  
                                                     l3032 1A28  
                                                     l3008 199C  
                                                     l3120 23D2  
                                                     l1360 27B0  
                                                     l3200 1B86  
                                                     l3050 1EDC  
                                                     l3106 236A  
                                                     l1370 2B4E  
                                                     l3028 1A0C  
                                                     l3124 23EC  
                                                     l3116 23B4  
                                                     l3300 0698  
                                                     l3230 201E  
                                                     l3062 1F68  
                                                     l3302 069E  
                                                     l1375 2B58  
                                                     l3240 2070  
                                                     l3232 2024  
                                                     l3080 1FDC  
                                                     l3224 1C80  
                                                     l3208 1C02  
                                                     l3320 06D0  
                                                     l3312 06C0  
                                                     l3304 06B0  
                                                     l3250 2094  
                                                     l3138 1D12  
                                                     l3252 20C0  
                                                     l3092 22F8  
                                                     l3148 1E00  
                                                     l3172 1A98  
                                                     l3340 07B6  
                                                     l3324 06DE  
                                                     l3316 06C8  
                                                     l3308 06B8  
                                                     l3246 2082  
                                                     l3406 0B4E  
                                                     l3342 07C6  
                                                     l3326 0724  
                                                     l3256 20F8  
                                                     l3248 208C  
                                                     l3600 154C  
                                                     l3416 0C2E  
                                                     l3360 08BE  
                                                     l3186 1AEC  
                                                     l3178 1AC8  
                                                     l3506 1050  
                                                     l3450 0DDE  
                                                     l3434 0D88  
                                                     l3426 0CD8  
                                                     l3362 08CE  
                                                     l3338 0796  
                                                     l3276 2720  
                                                     l3540 1276  
                                                     l3532 11C8  
                                                     l3524 1156  
                                                     l3516 10BC  
                                                     l2902 24FA  
                                                     l3278 2730  
                                                     l3614 15AC  
                                                     l3382 0A2E  
                                                     l3358 089E  
                                                     l2760 2CA8  
                                                     l3480 0F80  
                                                     l3472 0F44  
                                                     l3376 0988  
                                                     l3810 2C6A  
                                                     l2746 288E  
                                                     l2850 21F0  
                                                     l2906 2522  
                                                     l3642 174C  
                                                     l3466 0ED2  
                                                     l3458 0E5E  
                                                     l3386 0A68  
                                                     l2756 2C90  
                                                     l2764 2E2E  
                                                     l2780 293A  
                                                     l2852 2206  
                                                     l2844 21C8  
                                                     l2916 2570  
                                                     l3652 179A  
                                                     l3628 1682  
                                                     l3572 13C0  
                                                     l3564 134C  
                                                     l3556 12CC  
                                                     l3476 0F50  
                                                     l3396 0AD2  
                                                     l3806 2C50  
                                                     l2766 2E34  
                                                     l2790 297A  
                                                     l2870 22A6  
                                                     l2862 2266  
                                                     l2838 219E  
                                                     l2918 2586  
                                                     l3486 0F94  
                                                     l3910 2638  
                                                     ?_pad 0011  
                                                     l2784 294A  
                                                     l2928 25E6  
                                                     l2944 2834  
                                                     l2936 27D2  
                                                     l3648 178C  
                                                     l3496 0FBE  
                                                     l3680 2A90  
                                                     l3690 29F6  
                                                     l2794 29AA  
                                                     l2786 2960  
                                                     l2866 227E  
                                                     l2890 2480  
                                                     l2882 243E  
                                                     l2938 27E8  
                                                     l3586 14CA  
                                                     l3658 17AE  
                                                     l3692 2A44  
                                                     l2956 2C34  
                                                     l2964 2B74  
                                                     l2892 2496  
                                                     l2980 1848  
                                                     l2966 2B82  
                                                     l2886 2464  
                                                     l3678 2A68  
                                                     l3688 29E6  
                                                     l2898 24E2  
                                                     l2994 1892  
                                                     l2998 18A2  
                                                     STR_1 061D  
                                                     STR_2 0648  
                                                     STR_3 0605  
                                                     STR_5 0605  
                                                     STR_7 0609  
                                                     STR_9 0609  
                                                     u2010 2D4E  
                                                     u2100 2E18  
                                                     u2020 2DDC  
                                                     u2030 2DE0  
                                                     u2040 2D30  
                                                     u2210 249C  
                                                     u2050 2D34  
                                                     u2131 21D0  
                                                     u2060 2B32  
                                                     u3100 0806  
                                                     u2150 220C  
                                                     u3030 2786  
                                                     u2070 2B36  
                                                     u3110 0814  
                                                     u2320 2C30  
                                                     u2400 188A  
                                                     u2241 2550  
                                                     u2090 2E14  
                                                     u2410 19AC  
                                                     u3210 0AC2  
                                                     u2340 1816  
                                                     u2500 1E86  
                                                     u2260 258C  
                                                     u3140 090A  
                                                     u2430 19CE  
                                                     u2350 181A  
                                                     u2510 1F42  
                                                     u3230 0B0C  
                                                     u3150 090E  
                                                     u2431 19CC  
                                                     u2440 19DE  
                                                     u2520 1F78  
                                                     u3320 0E8C  
                                                     u3160 091C  
                                                     u2450 19E4  
                                                     u2290 27EE  
                                                     u3250 0BA8  
                                                     u3090 0802  
                                                     u2515 1F2E  
                                                     u1900 2884  
                                                     u2380 185E  
                                                     u2540 1F9A  
                                                     u3500 1586  
                                                     u2470 19F4  
                                                     u2550 1FAA  
                                                     u3270 0C88  
                                                     u3190 09E2  
                                                     u1920 28D0  
                                                     u2560 1FB0  
                                                     u2640 2380  
                                                     u2720 1E2C  
                                                     u2800 1B26  
                                                     u3520 1606  
                                                     u3440 137A  
                                                     u2721 1E2A  
                                                     u2730 1E3C  
                                                     u3370 107E  
                                                     u2740 1E42  
                                                     u2900 1C4C  
                                                     u2820 1B60  
                                                     u3540 16DC  
                                                     u3460 141A  
                                                     u2670 2402  
                                                     u1950 2DA4  
                                                     u2830 1B64  
                                                     u2591 22D8  
                                                     u1960 2DA8  
                                                     u2760 1A6C  
                                                     u3480 1524  
                                                     u2930 206C  
                                                     u2690 1CC4  
                                                     u2850 1BDC  
                                                     u2860 1C14  
                                                     u2780 1AE8  
                                                     u2950 212C  
                                                     u2790 1B22  
                                                     u2855 1BC8  
                                                     u2960 2130  
                                                     u2880 1C36  
                                                     u2881 1C34  
                                                     u3737 2650  
                                                     u2890 1C46  
                                                     u3747 269E  
                                                     _RCIF 007CF5  
                                                     u3757 26E2  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 009B  
                                                     _flag 009A  
                                                     _atoi 200A  
                                                     _ctoa 2B5E  
                                                     _main 2624  
                                                     _dtoa 17EC  
                                                     _prec 0093  
                                                     _otoa 1E70  
                                                     _nout 008F  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 22CC  
                                                     btemp 007F  
                                                     _utoa 1CAE  
                                                     _xtoa 1A56  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                        int_to_char@result 00CD  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                            __CFG_OSCS$OFF 000000  
                                          __end_of___aodiv 22CC  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 2548  
                                                    STR_21 0627  
                                                    STR_14 0606  
                                                    STR_30 062A  
                                                    STR_23 0627  
                                                    STR_32 062A  
                                                    STR_41 0611  
                                                    STR_25 062D  
                                                    STR_18 060A  
                                                    STR_34 0630  
                                                    STR_27 062D  
                                                    STR_51 0639  
                                                    STR_36 0630  
                                                    STR_61 060D  
                                                    STR_46 0612  
                                                    STR_54 063C  
                                                    STR_71 0633  
                                                    STR_39 0611  
                                                    STR_56 063C  
                                                    STR_81 0615  
                                                    STR_49 0639  
                                                    STR_66 060E  
                                                    STR_74 0636  
                                                    STR_91 061E  
                                                    STR_59 060D  
                                                    STR_76 0636  
                                                    STR_69 0633  
                                                    STR_86 0616  
                                                    STR_94 063F  
                                                    STR_79 0615  
                                                    STR_96 063F  
                                                    ?_otoa 001C  
                                                    STR_99 0619  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 2624  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 2872  
                                                    i2l239 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 2F24  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 29C8  
                                                    _flags 0095  
                                                    _getch 2F24  
                                                    _errno 008D  
                                                    _fputc 2872  
                                          __end_of_isalpha 2D3E  
                                                    _fputs 2C84  
                                          __end_of_isdigit 2E22  
                                          __end_of_read_op 2EC2  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0091  
                                                    ctoa@c 001E  
                                                    _putch 2F3E  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 2DB2  
                                          __end_of_isspace 2C40  
                                          __end_of_isupper 2DEA  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 2B08  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 27B6  
                                          __end_of_toupper 2B5E  
                                         ___lodiv@dividend 0001  
                                             _toupper$1853 000D  
                                          __initialization 2CC6  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2170  
                                             __end_of_ctoa 2BB4  
                                             __end_of_main 26F4  
                                             __end_of_dtoa 1A56  
                                             __end_of_otoa 200A  
                                             __end_of_stoa 2410  
                                             __end_of_utoa 1E70  
                                             __end_of_xtoa 1CAE  
                                       int_to_char@the_num 00D7  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00DF  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   STR_101 0619  
                                                   STR_110 061A  
                                                   ?_fputs 000A  
                                                   STR_103 0601  
                                                   STR_105 0601  
                                                   STR_121 0621  
                                                   STR_114 0602  
                                                   STR_130 0624  
                                                   _ADRESH 000FC4  
                                                   STR_123 0621  
                                                   STR_132 0624  
                                                   STR_117 0642  
                                                   STR_126 0645  
                                                   _ADRESL 000FC3  
                                                   STR_119 0642  
                                                   STR_128 0645  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                           __CFG_WDTPS$128 000000  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                          write_op@address 0002  
                                             vfprintf@cfmt 0078  
                                                ??___aodiv 0011  
                                                ??___aomod 0011  
                                                   ___wmul 2E54  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   clear_0 2CEC  
                                  __size_of_UARTSendString 0044  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 2E22  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 2AB2  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                         __end_of_write_op 2EA0  
                                               __accesstop 0080  
                                  __end_of__initialization 2CF4  
                                            ___rparam_used 000001  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 2F36  
                                            __end_of_fgetc 2A52  
                                            __end_of_getch 2F2E  
                                            __end_of_fputc 291E  
                                            __end_of_fputs 2CC6  
                                            __end_of_putch 2F44  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 0080  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 2ED6  
                                            _initialize_TX 2EC2  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                                  ?_strlen 0001  
                                       __size_of_timingISR 002C  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 2170  
                                                  ___aomod 2410  
                                          __size_of___wmul 002A  
                                                  ___lodiv 2548  
                                                  ___lomod 27B6  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 2C40  
                                                  __pcinit 2CC6  
                                                  __ramtop 0600  
                                                  __ptext0 2624  
                                                  __ptext1 2E7E  
                                                  __ptext2 2EA0  
                                                  __ptext3 2BB4  
                                                  __ptext4 2AB2  
                                                  __ptext5 2A52  
                                                  __ptext6 064C  
                                                  __ptext7 1A56  
                                                  __ptext8 2B08  
                                                  __ptext9 2D7A  
                                                ?_write_op 0001  
                                                  _getchar 2F12  
                                                _T0CONbits 000FD5  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 2D02  
                                                  _isdigit 2DEA  
                                                  _read_op 2EA0  
                                                  _islower 2D7A  
                                                  _isspace 2BFC  
                                                  _isupper 2DB2  
                                                  fgetc@fp 0003  
                                                  _time_ms 0089  
                                                  atoi@neg 000E  
                                                  _sprintf 2AB2  
                                                  _strncmp 26F4  
                                                  _toupper 2B08  
                                     end_of_initialization 2CF4  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                        __end_of_timingISR 0034  
                                        __end_of_vfpfcnvrt 17EC  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 2C84  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 2F2E  
                                       ?_Timer0_StartTimer 0001  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00DB  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 2E7E  
                                              vfpfcnvrt@vp 0067  
                                __end_of_Timer0_StartTimer 2F36  
                                           __end_of_strlen 2E54  
                                      start_initialization 2CC6  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 2D7A  
                                              __end_of_pad 29C8  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00E1  
                                     __end_of_UARTSendChar 2F12  
                                                 ??_strlen 0003  
                                              __pbssCOMRAM 007E  
                                            __pcstackBANK0 00BB  
                                         ___aodiv@dividend 0001  
                                            ??_int_to_char 007E  
                                                _atoi$1696 0010  
                                                _atoi$1697 0014  
                                                _atoi$1698 0012  
                                                _dtoa$1050 002E  
                                            UARTSendChar@c 0001  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 00BB  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00DB  
                                          UARTSendString@i 00DD  
                                      __end_of_int_to_char 2BFC  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 0085  
                                                _timingISR 0008  
                                                _vfpfcnvrt 064C  
                                                _xtoa$1086 002F  
                                                _xtoa$1087 0031  
                                        ___wmul@multiplier 0001  
                                             _isspace$1733 0007  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 2CDA  
                                         ??_UARTSendString 007E  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 2EFE  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___aomod 0138  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 00BD  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 2DB2  
                                                 __ptext11 2D02  
                                                 __ptext20 2410  
                                                 __ptext12 1CAE  
                                                 __ptext21 2170  
                                                 __ptext13 27B6  
                                                 __ptext30 2DEA  
                                                 __ptext22 2B5E  
                                                 __ptext14 2548  
                                                 __ptext31 2E54  
                                                 __ptext23 291E  
                                                 __ptext15 26F4  
                                                 __ptext32 2F12  
                                                 __ptext24 2E22  
                                                 __ptext16 22CC  
                                                 __ptext41 2F2E  
                                                 __ptext33 29C8  
                                                 __ptext25 2C84  
                                                 __ptext17 1E70  
                                                 __ptext34 2F24  
                                                 __ptext26 2872  
                                                 __ptext18 17EC  
                                                 __ptext35 2EC2  
                                                 __ptext27 2F3E  
                                                 __ptext19 2D3E  
                                                 __ptext36 2ED6  
                                                 __ptext28 200A  
                                                 __ptext37 2C40  
                                                 __ptext29 2BFC  
                                                 __ptext38 2EEA  
                                                 __ptext39 2EFE  
                                         __size_of_isupper 0038  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                          _interval_events 0097  
                                             _UARTSendChar 2EFE  
                                              _int_to_char 2BB4  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 00D0  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 2EEA  
                                    __end_of_initialize_TX 2ED6  
                                                stoa@F1152 00E1  
                                                 int$flags 007F  
                                           read_op@address 0001  
                                                 _ungetbuf 0099  
                                                 _ungetcnt 007E  
                                                 _vfprintf 2A52  
                                         ___aomod@dividend 0001  
                                                 _write_op 2E7E  
                                           _vfpfcnvrt$1101 005B  
                                           _vfpfcnvrt$1102 005D  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 2F44  
                                                sprintf@ap 00CB  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                              _UARTNewLine 2EEA  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 00C5  
                                                 sprintf@s 00BB  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                             ___aodiv@sign 0012  
                                             ___aomod@sign 0012  
