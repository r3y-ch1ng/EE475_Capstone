

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar  1 01:39:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F452 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  000050                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for stoa@F1152
   119  000050  28                 	db	40
   120  000051  6E                 	db	110
   121  000052  75                 	db	117
   122  000053  6C                 	db	108
   123  000054  6C                 	db	108
   124  000055  29                 	db	41
   125  000056  00                 	db	0
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TRISA	set	3986
   128  0000                     _PORTA	set	3968
   129  0000                     _PORTD	set	3971
   130  0000                     _PORTB	set	3969
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISC	set	3988
   134  0000                     _RC0	set	31760
   135  0000                     _RB5	set	31757
   136  0000                     _CCP1CON	set	4029
   137  0000                     _CCPR1L	set	4030
   138  0000                     _PR2	set	4043
   139  0000                     _T2CON	set	4042
   140  0000                     _ADRESL	set	4035
   141  0000                     _ADRESH	set	4036
   142  0000                     _ADCON0	set	4034
   143  0000                     _SSPBUF	set	4041
   144  0000                     _SSPCON1	set	4038
   145  0000                     _SSPSTATbits	set	4039
   146  0000                     _ADCON1	set	4033
   147  0000                     _RCREG1	set	4014
   148  0000                     _TXREG	set	4013
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _RCSTA	set	4011
   151  0000                     _SPBRG	set	4015
   152  0000                     _TXSTAbits	set	4012
   153  0000                     _RCONbits	set	4048
   154  0000                     _GO_nDONE	set	32274
   155  0000                     _RCIF	set	31989
   156  0000                     _TMR2IP	set	31993
   157  0000                     _TMR2IE	set	31977
   158  0000                     _T0CON	set	4053
   159  0000                     _TMR0L	set	4054
   160  0000                     _TMR0H	set	4055
   161  0000                     _T0CONbits	set	4053
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _TMR0IE	set	32661
   165  0000                     _TMR0IF	set	32658
   166                           
   167                           	psect	smallconst
   168  000600                     __psmallconst:
   169                           	opt callstack 0
   170  000600  00                 	db	0
   171  000601                     STR_3:
   172  000601  52                 	db	82	;'R'
   173  000602  65                 	db	101	;'e'
   174  000603  61                 	db	97	;'a'
   175  000604  64                 	db	100	;'d'
   176  000605  79                 	db	121	;'y'
   177  000606  20                 	db	32
   178  000607  66                 	db	102	;'f'
   179  000608  6F                 	db	111	;'o'
   180  000609  72                 	db	114	;'r'
   181  00060A  20                 	db	32
   182  00060B  65                 	db	101	;'e'
   183  00060C  76                 	db	118	;'v'
   184  00060D  65                 	db	101	;'e'
   185  00060E  6E                 	db	110	;'n'
   186  00060F  20                 	db	32
   187  000610  61                 	db	97	;'a'
   188  000611  64                 	db	100	;'d'
   189  000612  64                 	db	100	;'d'
   190  000613  72                 	db	114	;'r'
   191  000614  65                 	db	101	;'e'
   192  000615  73                 	db	115	;'s'
   193  000616  73                 	db	115	;'s'
   194  000617  20                 	db	32
   195  000618  69                 	db	105	;'i'
   196  000619  6E                 	db	110	;'n'
   197  00061A  70                 	db	112	;'p'
   198  00061B  75                 	db	117	;'u'
   199  00061C  74                 	db	116	;'t'
   200  00061D  00                 	db	0
   201  00061E                     STR_10:
   202  00061E  44                 	db	68	;'D'
   203  00061F  6F                 	db	111	;'o'
   204  000620  6E                 	db	110	;'n'
   205  000621  65                 	db	101	;'e'
   206  000622  20                 	db	32
   207  000623  72                 	db	114	;'r'
   208  000624  65                 	db	101	;'e'
   209  000625  61                 	db	97	;'a'
   210  000626  64                 	db	100	;'d'
   211  000627  69                 	db	105	;'i'
   212  000628  6E                 	db	110	;'n'
   213  000629  67                 	db	103	;'g'
   214  00062A  20                 	db	32
   215  00062B  66                 	db	102	;'f'
   216  00062C  72                 	db	114	;'r'
   217  00062D  6F                 	db	111	;'o'
   218  00062E  6D                 	db	109	;'m'
   219  00062F  20                 	db	32
   220  000630  6D                 	db	109	;'m'
   221  000631  65                 	db	101	;'e'
   222  000632  6D                 	db	109	;'m'
   223  000633  6F                 	db	111	;'o'
   224  000634  72                 	db	114	;'r'
   225  000635  79                 	db	121	;'y'
   226  000636  2E                 	db	46
   227  000637  00                 	db	0
   228  000638                     STR_4:
   229  000638  54                 	db	84	;'T'
   230  000639  65                 	db	101	;'e'
   231  00063A  6D                 	db	109	;'m'
   232  00063B  70                 	db	112	;'p'
   233  00063C  65                 	db	101	;'e'
   234  00063D  72                 	db	114	;'r'
   235  00063E  61                 	db	97	;'a'
   236  00063F  74                 	db	116	;'t'
   237  000640  75                 	db	117	;'u'
   238  000641  72                 	db	114	;'r'
   239  000642  65                 	db	101	;'e'
   240  000643  20                 	db	32
   241  000644  61                 	db	97	;'a'
   242  000645  74                 	db	116	;'t'
   243  000646  20                 	db	32
   244  000647  61                 	db	97	;'a'
   245  000648  64                 	db	100	;'d'
   246  000649  64                 	db	100	;'d'
   247  00064A  72                 	db	114	;'r'
   248  00064B  65                 	db	101	;'e'
   249  00064C  73                 	db	115	;'s'
   250  00064D  73                 	db	115	;'s'
   251  00064E  20                 	db	32
   252  00064F  00                 	db	0
   253  000650                     STR_15:
   254  000650  44                 	db	68	;'D'
   255  000651  6F                 	db	111	;'o'
   256  000652  6E                 	db	110	;'n'
   257  000653  65                 	db	101	;'e'
   258  000654  20                 	db	32
   259  000655  77                 	db	119	;'w'
   260  000656  72                 	db	114	;'r'
   261  000657  69                 	db	105	;'i'
   262  000658  74                 	db	116	;'t'
   263  000659  69                 	db	105	;'i'
   264  00065A  6E                 	db	110	;'n'
   265  00065B  67                 	db	103	;'g'
   266  00065C  20                 	db	32
   267  00065D  74                 	db	116	;'t'
   268  00065E  6F                 	db	111	;'o'
   269  00065F  20                 	db	32
   270  000660  6D                 	db	109	;'m'
   271  000661  65                 	db	101	;'e'
   272  000662  6D                 	db	109	;'m'
   273  000663  6F                 	db	111	;'o'
   274  000664  72                 	db	114	;'r'
   275  000665  79                 	db	121	;'y'
   276  000666  2E                 	db	46
   277  000667  00                 	db	0
   278  000668                     STR_7:
   279  000668  54                 	db	84	;'T'
   280  000669  69                 	db	105	;'i'
   281  00066A  6D                 	db	109	;'m'
   282  00066B  65                 	db	101	;'e'
   283  00066C  20                 	db	32
   284  00066D  61                 	db	97	;'a'
   285  00066E  74                 	db	116	;'t'
   286  00066F  20                 	db	32
   287  000670  61                 	db	97	;'a'
   288  000671  64                 	db	100	;'d'
   289  000672  64                 	db	100	;'d'
   290  000673  72                 	db	114	;'r'
   291  000674  65                 	db	101	;'e'
   292  000675  73                 	db	115	;'s'
   293  000676  73                 	db	115	;'s'
   294  000677  20                 	db	32
   295  000678  00                 	db	0
   296  000679                     STR_12:
   297  000679  20                 	db	32
   298  00067A  74                 	db	116	;'t'
   299  00067B  6F                 	db	111	;'o'
   300  00067C  20                 	db	32
   301  00067D  61                 	db	97	;'a'
   302  00067E  64                 	db	100	;'d'
   303  00067F  64                 	db	100	;'d'
   304  000680  72                 	db	114	;'r'
   305  000681  65                 	db	101	;'e'
   306  000682  73                 	db	115	;'s'
   307  000683  73                 	db	115	;'s'
   308  000684  20                 	db	32
   309  000685  00                 	db	0
   310  000686                     STR_6:
   311  000686  20                 	db	32
   312  000687  64                 	db	100	;'d'
   313  000688  65                 	db	101	;'e'
   314  000689  67                 	db	103	;'g'
   315  00068A  72                 	db	114	;'r'
   316  00068B  65                 	db	101	;'e'
   317  00068C  65                 	db	101	;'e'
   318  00068D  73                 	db	115	;'s'
   319  00068E  20                 	db	32
   320  00068F  43                 	db	67	;'C'
   321  000690  20                 	db	32
   322  000691  00                 	db	0
   323  000692                     STR_11:
   324  000692  57                 	db	87	;'W'
   325  000693  72                 	db	114	;'r'
   326  000694  69                 	db	105	;'i'
   327  000695  74                 	db	116	;'t'
   328  000696  69                 	db	105	;'i'
   329  000697  6E                 	db	110	;'n'
   330  000698  67                 	db	103	;'g'
   331  000699  20                 	db	32
   332  00069A  00                 	db	0
   333  00069B                     STR_9:
   334  00069B  20                 	db	32
   335  00069C  6D                 	db	109	;'m'
   336  00069D  69                 	db	105	;'i'
   337  00069E  6E                 	db	110	;'n'
   338  00069F  75                 	db	117	;'u'
   339  0006A0  74                 	db	116	;'t'
   340  0006A1  65                 	db	101	;'e'
   341  0006A2  73                 	db	115	;'s'
   342  0006A3  00                 	db	0
   343  0006A4                     STR_116:
   344  0006A4  68                 	db	104	;'h'
   345  0006A5  68                 	db	104	;'h'
   346  0006A6  58                 	db	88	;'X'
   347  0006A7  00                 	db	0
   348  0006A8                     STR_16:
   349  0006A8  68                 	db	104	;'h'
   350  0006A9  68                 	db	104	;'h'
   351  0006AA  64                 	db	100	;'d'
   352  0006AB  00                 	db	0
   353  0006AC                     STR_20:
   354  0006AC  68                 	db	104	;'h'
   355  0006AD  68                 	db	104	;'h'
   356  0006AE  69                 	db	105	;'i'
   357  0006AF  00                 	db	0
   358  0006B0                     STR_72:
   359  0006B0  68                 	db	104	;'h'
   360  0006B1  68                 	db	104	;'h'
   361  0006B2  6E                 	db	110	;'n'
   362  0006B3  00                 	db	0
   363  0006B4                     STR_52:
   364  0006B4  68                 	db	104	;'h'
   365  0006B5  68                 	db	104	;'h'
   366  0006B6  6F                 	db	111	;'o'
   367  0006B7  00                 	db	0
   368  0006B8                     STR_92:
   369  0006B8  68                 	db	104	;'h'
   370  0006B9  68                 	db	104	;'h'
   371  0006BA  75                 	db	117	;'u'
   372  0006BB  00                 	db	0
   373  0006BC                     STR_112:
   374  0006BC  68                 	db	104	;'h'
   375  0006BD  68                 	db	104	;'h'
   376  0006BE  78                 	db	120	;'x'
   377  0006BF  00                 	db	0
   378  0006C0                     STR_1:
   379  0006C0  25                 	db	37
   380  0006C1  6C                 	db	108	;'l'
   381  0006C2  75                 	db	117	;'u'
   382  0006C3  00                 	db	0
   383  0006C4                     STR_134:
   384  0006C4  6C                 	db	108	;'l'
   385  0006C5  58                 	db	88	;'X'
   386  0006C6  00                 	db	0
   387  0006C7                     STR_143:
   388  0006C7  7A                 	db	122	;'z'
   389  0006C8  58                 	db	88	;'X'
   390  0006C9  00                 	db	0
   391  0006CA                     STR_34:
   392  0006CA  6C                 	db	108	;'l'
   393  0006CB  64                 	db	100	;'d'
   394  0006CC  00                 	db	0
   395  0006CD                     STR_43:
   396  0006CD  7A                 	db	122	;'z'
   397  0006CE  64                 	db	100	;'d'
   398  0006CF  00                 	db	0
   399  0006D0                     STR_38:
   400  0006D0  6C                 	db	108	;'l'
   401  0006D1  69                 	db	105	;'i'
   402  0006D2  00                 	db	0
   403  0006D3                     STR_47:
   404  0006D3  7A                 	db	122	;'z'
   405  0006D4  69                 	db	105	;'i'
   406  0006D5  00                 	db	0
   407  0006D6                     STR_82:
   408  0006D6  6C                 	db	108	;'l'
   409  0006D7  6E                 	db	110	;'n'
   410  0006D8  00                 	db	0
   411  0006D9                     STR_87:
   412  0006D9  7A                 	db	122	;'z'
   413  0006DA  6E                 	db	110	;'n'
   414  0006DB  00                 	db	0
   415  0006DC                     STR_62:
   416  0006DC  6C                 	db	108	;'l'
   417  0006DD  6F                 	db	111	;'o'
   418  0006DE  00                 	db	0
   419  0006DF                     STR_67:
   420  0006DF  7A                 	db	122	;'z'
   421  0006E0  6F                 	db	111	;'o'
   422  0006E1  00                 	db	0
   423  0006E2                     STR_107:
   424  0006E2  7A                 	db	122	;'z'
   425  0006E3  75                 	db	117	;'u'
   426  0006E4  00                 	db	0
   427  0006E5                     STR_130:
   428  0006E5  6C                 	db	108	;'l'
   429  0006E6  78                 	db	120	;'x'
   430  0006E7  00                 	db	0
   431  0006E8                     STR_139:
   432  0006E8  7A                 	db	122	;'z'
   433  0006E9  78                 	db	120	;'x'
   434  0006EA  00                 	db	0
   435  0006EB                     STR_5:
   436  0006EB  3A                 	db	58	;':'
   437  0006EC  20                 	db	32
   438  0006ED  00                 	db	0
   439  0006EE  25                 	db	37
   440  0006EF  64                 	db	100	;'d'
   441  0006F0  00                 	db	0
   442  0000                     
   443                           ; #config settings
   444  0006F1  00                 	db	0	; dummy byte at the end
   445  0000                     
   446                           	psect	cinit
   447  003CC4                     __pcinit:
   448                           	opt callstack 0
   449  003CC4                     start_initialization:
   450                           	opt callstack 0
   451  003CC4                     __initialization:
   452                           	opt callstack 0
   453                           
   454                           ; Initialize objects allocated to BANK0 (7 bytes)
   455                           ; load TBLPTR registers with __pidataBANK0
   456  003CC4  0E50               	movlw	low __pidataBANK0
   457  003CC6  6EF6               	movwf	tblptrl,c
   458  003CC8  0E00               	movlw	high __pidataBANK0
   459  003CCA  6EF7               	movwf	tblptrh,c
   460  003CCC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   461  003CCE  6EF8               	movwf	tblptru,c
   462  003CD0  EE00  F0F5         	lfsr	0,__pdataBANK0
   463  003CD4  EE10 F007          	lfsr	1,7
   464  003CD8                     copy_data0:
   465  003CD8  0009               	tblrd		*+
   466  003CDA  CFF5 FFEE          	movff	tablat,postinc0
   467  003CDE  50E5               	movf	postdec1,w,c
   468  003CE0  50E1               	movf	fsr1l,w,c
   469  003CE2  E1FA               	bnz	copy_data0
   470                           
   471                           ; Clear objects allocated to BANK0 (58 bytes)
   472  003CE4  EE00  F0BB         	lfsr	0,__pbssBANK0
   473  003CE8  0E3A               	movlw	58
   474  003CEA                     clear_0:
   475  003CEA  6AEE               	clrf	postinc0,c
   476  003CEC  06E8               	decf	wreg,f,c
   477  003CEE  E1FD               	bnz	clear_0
   478                           
   479                           ; Clear objects allocated to COMRAM (1 bytes)
   480  003CF0  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   481  003CF2                     end_of_initialization:
   482                           	opt callstack 0
   483  003CF2                     __end_of__initialization:
   484                           	opt callstack 0
   485  003CF2  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   486  003CF4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   487  003CF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   488  003CF8  6EF8               	movwf	tblptru,c
   489  003CFA  0100               	movlb	0
   490  003CFC  EF0D  F012         	goto	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMRAM
   493  00007E                     __pbssCOMRAM:
   494                           	opt callstack 0
   495  00007E                     _ungetcnt:
   496                           	opt callstack 0
   497  00007E                     	ds	1
   498                           
   499                           	psect	bssBANK0
   500  0000BB                     __pbssBANK0:
   501                           	opt callstack 0
   502  0000BB                     _lcd:
   503                           	opt callstack 0
   504  0000BB                     	ds	5
   505  0000C0                     _time_ms_2:
   506                           	opt callstack 0
   507  0000C0                     	ds	4
   508  0000C4                     _time_ms:
   509                           	opt callstack 0
   510  0000C4                     	ds	4
   511  0000C8                     _errno:
   512                           	opt callstack 0
   513  0000C8                     	ds	2
   514  0000CA                     _nout:
   515                           	opt callstack 0
   516  0000CA                     	ds	2
   517  0000CC                     _width:
   518                           	opt callstack 0
   519  0000CC                     	ds	2
   520  0000CE                     _prec:
   521                           	opt callstack 0
   522  0000CE                     	ds	2
   523  0000D0                     _flags:
   524                           	opt callstack 0
   525  0000D0                     	ds	2
   526  0000D2                     _address:
   527                           	opt callstack 0
   528  0000D2                     	ds	2
   529  0000D4                     	ds	1
   530  0000D5                     _dbuf:
   531                           	opt callstack 0
   532  0000D5                     	ds	32
   533                           
   534                           	psect	dataBANK0
   535  0000F5                     __pdataBANK0:
   536                           	opt callstack 0
   537  0000F5                     stoa@F1152:
   538                           	opt callstack 0
   539  0000F5                     	ds	7
   540                           
   541                           	psect	cstackBANK0
   542  000080                     __pcstackBANK0:
   543                           	opt callstack 0
   544  000080                     ?_sprintf:
   545                           	opt callstack 0
   546  000080                     sprintf@s:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x0
   550  000080                     	ds	2
   551  000082                     sprintf@fmt:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x2
   555  000082                     	ds	8
   556  00008A                     sprintf@f:
   557                           	opt callstack 0
   558                           
   559                           ; 6 bytes @ 0xA
   560  00008A                     	ds	6
   561  000090                     sprintf@ap:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x10
   565  000090                     	ds	2
   566  000092                     int_to_char@result:
   567                           	opt callstack 0
   568                           
   569                           ; 10 bytes @ 0x12
   570  000092                     	ds	10
   571  00009C                     int_to_char@the_num:
   572                           	opt callstack 0
   573                           
   574                           ; 4 bytes @ 0x1C
   575  00009C                     	ds	4
   576  0000A0                     UARTSendString@c:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x20
   580  0000A0                     	ds	2
   581  0000A2                     ??_UARTSendString:
   582                           
   583                           ; 1 bytes @ 0x22
   584  0000A2                     	ds	2
   585  0000A4                     UARTSendString@i:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x24
   589  0000A4                     	ds	2
   590  0000A6                     ??_write_SRAM:
   591  0000A6                     read_SRAM@address:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x26
   595  0000A6                     	ds	2
   596  0000A8                     ??_read_SRAM:
   597  0000A8                     _write_SRAM$2154:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x28
   601  0000A8                     	ds	2
   602  0000AA                     read_SRAM@stored_temp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x2A
   606  0000AA                     	ds	2
   607  0000AC                     read_SRAM@time_elapsed:
   608                           	opt callstack 0
   609  0000AC                     _write_SRAM$2155:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x2C
   613  0000AC                     	ds	4
   614  0000B0                     write_SRAM@temperature:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x30
   618  0000B0                     	ds	2
   619  0000B2                     write_SRAM@curr_time:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x32
   623  0000B2                     	ds	2
   624  0000B4                     ??_main:
   625                           
   626                           ; 1 bytes @ 0x34
   627  0000B4                     	ds	2
   628  0000B6                     main@input_address:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x36
   632  0000B6                     	ds	2
   633  0000B8                     main@temp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x38
   637  0000B8                     	ds	2
   638  0000BA                     main@input:
   639                           	opt callstack 0
   640                           
   641                           ; 1 bytes @ 0x3A
   642  0000BA                     	ds	1
   643                           
   644                           	psect	cstackCOMRAM
   645  000001                     __pcstackCOMRAM:
   646                           	opt callstack 0
   647  000001                     ??_UARTRecieveChar:
   648  000001                     ?_ADC_Read:
   649                           	opt callstack 0
   650  000001                     ?_strlen:
   651                           	opt callstack 0
   652  000001                     ?_isupper:
   653                           	opt callstack 0
   654  000001                     ?_isalpha:
   655                           	opt callstack 0
   656  000001                     ?_isdigit:
   657                           	opt callstack 0
   658  000001                     ?_strncmp:
   659                           	opt callstack 0
   660  000001                     ?_isspace:
   661                           	opt callstack 0
   662  000001                     ?_getch:
   663                           	opt callstack 0
   664  000001                     ?_islower:
   665                           	opt callstack 0
   666  000001                     ?___wmul:
   667                           	opt callstack 0
   668  000001                     ?_ReadTime:
   669                           	opt callstack 0
   670  000001                     ?___fladd:
   671                           	opt callstack 0
   672  000001                     ?___xxtofl:
   673                           	opt callstack 0
   674  000001                     ?___aodiv:
   675                           	opt callstack 0
   676  000001                     ?___aomod:
   677                           	opt callstack 0
   678  000001                     ?___lodiv:
   679                           	opt callstack 0
   680  000001                     ?___lomod:
   681                           	opt callstack 0
   682  000001                     write_op@data:
   683                           	opt callstack 0
   684  000001                     read_op@address:
   685                           	opt callstack 0
   686  000001                     UARTSendChar@c:
   687                           	opt callstack 0
   688  000001                     set_duty_cycle@lower_2:
   689                           	opt callstack 0
   690  000001                     initialize_PWM@freq:
   691                           	opt callstack 0
   692  000001                     ___wmul@multiplier:
   693                           	opt callstack 0
   694  000001                     isalpha@c:
   695                           	opt callstack 0
   696  000001                     isdigit@c:
   697                           	opt callstack 0
   698  000001                     isspace@c:
   699                           	opt callstack 0
   700  000001                     isupper@c:
   701                           	opt callstack 0
   702  000001                     fputc@c:
   703                           	opt callstack 0
   704  000001                     strlen@s:
   705                           	opt callstack 0
   706  000001                     strncmp@_l:
   707                           	opt callstack 0
   708  000001                     islower@c:
   709                           	opt callstack 0
   710  000001                     ___fladd@b:
   711                           	opt callstack 0
   712  000001                     ___xxtofl@val:
   713                           	opt callstack 0
   714  000001                     ___aodiv@dividend:
   715                           	opt callstack 0
   716  000001                     ___aomod@dividend:
   717                           	opt callstack 0
   718  000001                     ___lodiv@dividend:
   719                           	opt callstack 0
   720  000001                     ___lomod@dividend:
   721                           	opt callstack 0
   722                           
   723                           ; 8 bytes @ 0x0
   724  000001                     	ds	1
   725  000002                     write_op@address:
   726                           	opt callstack 0
   727  000002                     read_op@result:
   728                           	opt callstack 0
   729  000002                     set_duty_cycle@upper_8:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     ??_ADC_Read:
   735  000003                     ??_isupper:
   736  000003                     ??_isalpha:
   737  000003                     ??_isdigit:
   738  000003                     ??_isspace:
   739  000003                     ??_islower:
   740  000003                     ?_fgetc:
   741                           	opt callstack 0
   742  000003                     set_duty_cycle@mask:
   743                           	opt callstack 0
   744  000003                     ___wmul@multiplicand:
   745                           	opt callstack 0
   746  000003                     fputc@fp:
   747                           	opt callstack 0
   748  000003                     fgetc@fp:
   749                           	opt callstack 0
   750  000003                     strlen@a:
   751                           	opt callstack 0
   752  000003                     strncmp@_r:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000003                     	ds	2
   757  000005                     ??_fputc:
   758  000005                     ??_fgetc:
   759  000005                     ??___xxtofl:
   760  000005                     ?___lldiv:
   761                           	opt callstack 0
   762  000005                     ADC_Read@channel:
   763                           	opt callstack 0
   764  000005                     ___wmul@product:
   765                           	opt callstack 0
   766  000005                     strncmp@n:
   767                           	opt callstack 0
   768  000005                     ___lldiv@dividend:
   769                           	opt callstack 0
   770  000005                     ___fladd@a:
   771                           	opt callstack 0
   772                           
   773                           ; 4 bytes @ 0x4
   774  000005                     	ds	2
   775  000007                     ??_strncmp:
   776  000007                     ?_toupper:
   777                           	opt callstack 0
   778  000007                     _isspace$1758:
   779                           	opt callstack 0
   780  000007                     toupper@c:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x6
   784  000007                     	ds	1
   785  000008                     ?_atoi:
   786                           	opt callstack 0
   787  000008                     atoi@s:
   788                           	opt callstack 0
   789  000008                     strncmp@l:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x7
   793  000008                     	ds	1
   794  000009                     ??_toupper:
   795  000009                     ??___fladd:
   796  000009                     ___xxtofl@sign:
   797                           	opt callstack 0
   798  000009                     ___lldiv@divisor:
   799                           	opt callstack 0
   800  000009                     ___aodiv@divisor:
   801                           	opt callstack 0
   802  000009                     ___aomod@divisor:
   803                           	opt callstack 0
   804  000009                     ___lodiv@divisor:
   805                           	opt callstack 0
   806  000009                     ___lomod@divisor:
   807                           	opt callstack 0
   808                           
   809                           ; 8 bytes @ 0x8
   810  000009                     	ds	1
   811  00000A                     ??_atoi:
   812  00000A                     ?_stoa:
   813                           	opt callstack 0
   814  00000A                     ___xxtofl@exp:
   815                           	opt callstack 0
   816  00000A                     stoa@fp:
   817                           	opt callstack 0
   818  00000A                     fputs@s:
   819                           	opt callstack 0
   820  00000A                     fgetc@c:
   821                           	opt callstack 0
   822  00000A                     strncmp@r:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x9
   826  00000A                     	ds	1
   827  00000B                     ___xxtofl@arg:
   828                           	opt callstack 0
   829                           
   830                           ; 4 bytes @ 0xA
   831  00000B                     	ds	1
   832  00000C                     stoa@s:
   833                           	opt callstack 0
   834  00000C                     fputs@fp:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0xB
   838  00000C                     	ds	1
   839  00000D                     ___fladd@signs:
   840                           	opt callstack 0
   841  00000D                     _toupper$1878:
   842                           	opt callstack 0
   843  00000D                     ___lldiv@quotient:
   844                           	opt callstack 0
   845                           
   846                           ; 4 bytes @ 0xC
   847  00000D                     	ds	1
   848  00000E                     ??_stoa:
   849  00000E                     ___fladd@aexp:
   850                           	opt callstack 0
   851  00000E                     fputs@c:
   852                           	opt callstack 0
   853  00000E                     atoi@neg:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0xD
   857  00000E                     	ds	1
   858  00000F                     ?___flmul:
   859                           	opt callstack 0
   860  00000F                     ___fladd@bexp:
   861                           	opt callstack 0
   862  00000F                     fputs@i:
   863                           	opt callstack 0
   864  00000F                     ___flmul@b:
   865                           	opt callstack 0
   866  00000F                     stoa@nuls:
   867                           	opt callstack 0
   868                           
   869                           ; 7 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	opt callstack 0
   873  000010                     _atoi$1721:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	opt callstack 0
   880  000011                     ___lldiv@counter:
   881                           	opt callstack 0
   882  000011                     ___aodiv@counter:
   883                           	opt callstack 0
   884  000011                     ___aomod@counter:
   885                           	opt callstack 0
   886  000011                     ___lomod@counter:
   887                           	opt callstack 0
   888  000011                     pad@fp:
   889                           	opt callstack 0
   890  000011                     ___lodiv@quotient:
   891                           	opt callstack 0
   892                           
   893                           ; 8 bytes @ 0x10
   894  000011                     	ds	1
   895  000012                     ___aodiv@sign:
   896                           	opt callstack 0
   897  000012                     ___aomod@sign:
   898                           	opt callstack 0
   899  000012                     _atoi$1723:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903  000012                     	ds	1
   904  000013                     ?_abs:
   905                           	opt callstack 0
   906  000013                     pad@buf:
   907                           	opt callstack 0
   908  000013                     abs@a:
   909                           	opt callstack 0
   910  000013                     ___flmul@a:
   911                           	opt callstack 0
   912  000013                     ___aodiv@quotient:
   913                           	opt callstack 0
   914                           
   915                           ; 8 bytes @ 0x12
   916  000013                     	ds	1
   917  000014                     _atoi$1722:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x13
   921  000014                     	ds	1
   922  000015                     ??_abs:
   923  000015                     pad@p:
   924                           	opt callstack 0
   925  000015                     atoi@n:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x14
   929  000015                     	ds	1
   930  000016                     stoa@i:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x15
   934  000016                     	ds	1
   935  000017                     ??___flmul:
   936  000017                     ??_pad:
   937                           
   938                           ; 1 bytes @ 0x16
   939  000017                     	ds	1
   940  000018                     pad@i:
   941                           	opt callstack 0
   942  000018                     stoa@w:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x17
   946  000018                     	ds	1
   947  000019                     ___lodiv@counter:
   948                           	opt callstack 0
   949                           
   950                           ; 1 bytes @ 0x18
   951  000019                     	ds	1
   952  00001A                     pad@w:
   953                           	opt callstack 0
   954  00001A                     stoa@cp:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x19
   958  00001A                     	ds	1
   959  00001B                     ___flmul@sign:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0x1A
   963  00001B                     	ds	1
   964  00001C                     ?_ctoa:
   965                           	opt callstack 0
   966  00001C                     ?_dtoa:
   967                           	opt callstack 0
   968  00001C                     ?_otoa:
   969                           	opt callstack 0
   970  00001C                     ?_utoa:
   971                           	opt callstack 0
   972  00001C                     ?_xtoa:
   973                           	opt callstack 0
   974  00001C                     ctoa@fp:
   975                           	opt callstack 0
   976  00001C                     dtoa@fp:
   977                           	opt callstack 0
   978  00001C                     otoa@fp:
   979                           	opt callstack 0
   980  00001C                     stoa@p:
   981                           	opt callstack 0
   982  00001C                     utoa@fp:
   983                           	opt callstack 0
   984  00001C                     xtoa@fp:
   985                           	opt callstack 0
   986  00001C                     ___flmul@grs:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x1B
   990  00001C                     	ds	2
   991  00001E                     ctoa@c:
   992                           	opt callstack 0
   993  00001E                     stoa@l:
   994                           	opt callstack 0
   995  00001E                     dtoa@d:
   996                           	opt callstack 0
   997  00001E                     otoa@d:
   998                           	opt callstack 0
   999  00001E                     utoa@d:
  1000                           	opt callstack 0
  1001  00001E                     xtoa@d:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x1D
  1005  00001E                     	ds	1
  1006  00001F                     ctoa@w:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1E
  1010  00001F                     	ds	1
  1011  000020                     ___flmul@aexp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015  000020                     	ds	1
  1016  000021                     ___flmul@bexp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x20
  1020  000021                     	ds	1
  1021  000022                     ___flmul@prod:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x21
  1025  000022                     	ds	4
  1026  000026                     ??_dtoa:
  1027  000026                     ??_otoa:
  1028  000026                     ??_utoa:
  1029  000026                     xtoa@x:
  1030                           	opt callstack 0
  1031  000026                     ___flmul@temp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x25
  1035  000026                     	ds	1
  1036  000027                     ??_xtoa:
  1037                           
  1038                           ; 1 bytes @ 0x26
  1039  000027                     	ds	1
  1040  000028                     ?___flsub:
  1041                           	opt callstack 0
  1042  000028                     ___flsub@b:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x27
  1046  000028                     	ds	4
  1047  00002C                     ___flsub@a:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x2B
  1051  00002C                     	ds	2
  1052  00002E                     _dtoa$1075:
  1053                           	opt callstack 0
  1054  00002E                     otoa@p:
  1055                           	opt callstack 0
  1056  00002E                     utoa@p:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x2D
  1060  00002E                     	ds	1
  1061  00002F                     _xtoa$1111:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x2E
  1065  00002F                     	ds	1
  1066  000030                     ?_get_temp:
  1067                           	opt callstack 0
  1068  000030                     dtoa@p:
  1069                           	opt callstack 0
  1070  000030                     otoa@t:
  1071                           	opt callstack 0
  1072  000030                     utoa@w:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x2F
  1076  000030                     	ds	1
  1077  000031                     _xtoa$1112:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x30
  1081  000031                     	ds	1
  1082  000032                     dtoa@w:
  1083                           	opt callstack 0
  1084  000032                     otoa@w:
  1085                           	opt callstack 0
  1086  000032                     utoa@n:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x31
  1090  000032                     	ds	1
  1091  000033                     xtoa@p:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x32
  1095  000033                     	ds	1
  1096  000034                     dtoa@s:
  1097                           	opt callstack 0
  1098  000034                     get_temp@real_voltage:
  1099                           	opt callstack 0
  1100  000034                     otoa@n:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x33
  1104  000034                     	ds	1
  1105  000035                     xtoa@w:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x34
  1109  000035                     	ds	1
  1110  000036                     dtoa@n:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 8 bytes @ 0x35
  1114  000036                     	ds	1
  1115  000037                     xtoa@n:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x36
  1119  000037                     	ds	1
  1120  000038                     get_temp@temp:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x37
  1124  000038                     	ds	2
  1125  00003A                     utoa@i:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x39
  1129  00003A                     	ds	2
  1130  00003C                     get_temp@adc_voltage:
  1131                           	opt callstack 0
  1132  00003C                     otoa@i:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x3B
  1136  00003C                     	ds	2
  1137  00003E                     ?___fltol:
  1138                           	opt callstack 0
  1139  00003E                     dtoa@i:
  1140                           	opt callstack 0
  1141  00003E                     ___fltol@f1:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3D
  1145  00003E                     	ds	1
  1146  00003F                     xtoa@i:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3E
  1150  00003F                     	ds	2
  1151  000041                     xtoa@c:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x40
  1155  000041                     	ds	1
  1156  000042                     ??___fltol:
  1157                           
  1158                           ; 1 bytes @ 0x41
  1159  000042                     	ds	1
  1160  000043                     ?_vfpfcnvrt:
  1161                           	opt callstack 0
  1162  000043                     vfpfcnvrt@fp:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x42
  1166  000043                     	ds	2
  1167  000045                     vfpfcnvrt@fmt:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x44
  1171  000045                     	ds	1
  1172  000046                     ___fltol@sign1:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x45
  1176  000046                     	ds	1
  1177  000047                     ___fltol@exp1:
  1178                           	opt callstack 0
  1179  000047                     vfpfcnvrt@ap:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x46
  1183  000047                     	ds	2
  1184  000049                     ??_vfpfcnvrt:
  1185                           
  1186                           ; 1 bytes @ 0x48
  1187  000049                     	ds	14
  1188  000057                     vfpfcnvrt@cp:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x56
  1192  000057                     	ds	2
  1193  000059                     vfpfcnvrt@done:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x58
  1197  000059                     	ds	2
  1198  00005B                     _vfpfcnvrt$1126:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x5A
  1202  00005B                     	ds	2
  1203  00005D                     _vfpfcnvrt$1127:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x5C
  1207  00005D                     	ds	2
  1208  00005F                     vfpfcnvrt@ll:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x5E
  1212  00005F                     	ds	8
  1213  000067                     vfpfcnvrt@vp:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x66
  1217  000067                     	ds	2
  1218  000069                     vfpfcnvrt@c:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x68
  1222  000069                     	ds	1
  1223  00006A                     vfpfcnvrt@llu:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x69
  1227  00006A                     	ds	8
  1228  000072                     ?_vfprintf:
  1229                           	opt callstack 0
  1230  000072                     vfprintf@fp:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x71
  1234  000072                     	ds	2
  1235  000074                     vfprintf@fmt:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x73
  1239  000074                     	ds	2
  1240  000076                     vfprintf@ap:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x75
  1244  000076                     	ds	2
  1245  000078                     vfprintf@cfmt:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x77
  1249  000078                     	ds	2
  1250  00007A                     ?_int_to_char:
  1251                           	opt callstack 0
  1252  00007A                     int_to_char@num:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x79
  1256  00007A                     	ds	4
  1257  00007E                     
  1258                           ; 1 bytes @ 0x7D
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 27 in file "main.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  temp            2   56[BANK0 ] int 
  1269 ;;  input_addres    2   54[BANK0 ] int 
  1270 ;;  input           1   58[BANK0 ] unsigned char 
  1271 ;;  temperature     2    0        int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:         0       5       0       0       0       0       0
  1283 ;;      Temps:          0       2       0       0       0       0       0
  1284 ;;      Totals:         0       7       0       0       0       0       0
  1285 ;;Total ram usage:        7 bytes
  1286 ;; Hardware stack levels required when called:   12
  1287 ;; This function calls:
  1288 ;;		_Timer0_Init
  1289 ;;		_Timer0_StartTimer
  1290 ;;		_UARTNewLine
  1291 ;;		_UARTRecieveChar
  1292 ;;		_UARTSendString
  1293 ;;		___fltol
  1294 ;;		_get_temp
  1295 ;;		_initialize_PWM
  1296 ;;		_initialize_RX
  1297 ;;		_initialize_TX
  1298 ;;		_int_to_char
  1299 ;;		_interrupt_disable
  1300 ;;		_interrupt_enable
  1301 ;;		_read_SRAM
  1302 ;;		_set_duty_cycle
  1303 ;;		_write_SRAM
  1304 ;; This function is called by:
  1305 ;;		Startup code after reset
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text0
  1310  00241A                     __ptext0:
  1311                           	opt callstack 0
  1312  00241A                     _main:
  1313                           	opt callstack 0
  1314  00241A  FFFF               	dw	65535	; assembler added errata NOP
  1315                           
  1316                           ;main.c: 28:   interrupt_enable();
  1317                           
  1318                           ;incstack = 0
  1319  00241C  ECE2  F01F         	call	_interrupt_enable	;wreg free
  1320                           
  1321                           ;main.c: 29:   TRISCbits.TRISC2 = 0;
  1322  002420  9494               	bcf	3988,2,c	;volatile
  1323                           
  1324                           ;main.c: 30:   TMR2IE = 1;
  1325  002422  829D               	bsf	3997,1,c	;volatile
  1326                           
  1327                           ;main.c: 31:   TMR2IP = 1;
  1328  002424  829F               	bsf	3999,1,c	;volatile
  1329                           
  1330                           ;main.c: 32:   int temperature;;main.c: 33:   Timer0_Init();
  1331  002426  EC54  F01F         	call	_Timer0_Init	;wreg free
  1332                           
  1333                           ;main.c: 34:   Timer0_StartTimer();
  1334  00242A  EC20  F000         	call	_Timer0_StartTimer	;wreg free
  1335                           
  1336                           ;main.c: 35:   initialize_TX();
  1337  00242E  ECC5  F01F         	call	_initialize_TX	;wreg free
  1338                           
  1339                           ;main.c: 36:   initialize_RX();
  1340  002432  ECCF  F01F         	call	_initialize_RX	;wreg free
  1341                           
  1342                           ;main.c: 37:   TRISCbits.TRISC7 = 1;
  1343  002436  8E94               	bsf	3988,7,c	;volatile
  1344                           
  1345                           ;main.c: 38:   TRISCbits.TRISC6 = 0;
  1346  002438  9C94               	bcf	3988,6,c	;volatile
  1347  00243A                     l5300:
  1348  00243A  FFFF               	dw	65535	; assembler added errata NOP
  1349                           
  1350                           ;main.c: 40:     TRISCbits.TRISC7 = 1;
  1351  00243C  8E94               	bsf	3988,7,c	;volatile
  1352                           
  1353                           ;main.c: 41:     char input = ' ';
  1354  00243E  0E20               	movlw	32
  1355  002440  D003               	goto	L1
  1356  002442                     l5304:
  1357  002442  FFFF               	dw	65535	; assembler added errata NOP
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 43:      input = UARTRecieveChar();
  1361  002444  EC29  F01F         	call	_UARTRecieveChar	;wreg free
  1362  002448                     L1:
  1363  002448  FFFF               	dw	65535	; assembler added errata NOP
  1364  00244A  0100               	movlb	0	; () banked
  1365  00244C  6FBA               	movwf	main@input& (0+255),b
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;main.c: 42:     while (input < 'a' || input > 'z') {
  1369  00244E  0E60               	movlw	96
  1370  002450  65BA               	cpfsgt	main@input& (0+255),b
  1371  002452  D7F7               	goto	l5304
  1372                           
  1373                           ; BSR set to: 0
  1374  002454  0E7B               	movlw	123
  1375  002456  61BA               	cpfslt	main@input& (0+255),b
  1376  002458  D7F4               	goto	l5304
  1377  00245A  D0BF               	goto	l5374
  1378  00245C                     l5310:
  1379  00245C  FFFF               	dw	65535	; assembler added errata NOP
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 47:       write_SRAM();
  1383  00245E  EC00  F013         	call	_write_SRAM	;wreg free
  1384                           
  1385                           ;main.c: 48:       break;
  1386  002462  D7EB               	goto	l5300
  1387  002464                     l163:
  1388  002464  FFFF               	dw	65535	; assembler added errata NOP
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;main.c: 50:       TRISCbits.TRISC7 = 0;
  1392  002466  9E94               	bcf	3988,7,c	;volatile
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 51:       UARTSendString("Ready for even address input");
  1396  002468  0E01               	movlw	low STR_3
  1397  00246A  6FA0               	movwf	UARTSendString@c& (0+255),b
  1398  00246C  0E06               	movlw	high STR_3
  1399  00246E  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1400  002470  ECB7  F01C         	call	_UARTSendString	;wreg free
  1401                           
  1402                           ;main.c: 52:       UARTNewLine();
  1403  002474  ECB1  F01F         	call	_UARTNewLine	;wreg free
  1404                           
  1405                           ;main.c: 53:       input = ' ';
  1406  002478  0E20               	movlw	32
  1407  00247A  D003               	goto	L2
  1408  00247C                     l5318:
  1409  00247C  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 55:         input = UARTRecieveChar();
  1413  00247E  EC29  F01F         	call	_UARTRecieveChar	;wreg free
  1414  002482                     L2:
  1415  002482  FFFF               	dw	65535	; assembler added errata NOP
  1416  002484  0100               	movlb	0	; () banked
  1417  002486  6FBA               	movwf	main@input& (0+255),b
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 54:       while (input < '0' || input > '9') {
  1421  002488  0E2F               	movlw	47
  1422  00248A  65BA               	cpfsgt	main@input& (0+255),b
  1423  00248C  D7F7               	goto	l5318
  1424                           
  1425                           ; BSR set to: 0
  1426  00248E  0E3A               	movlw	58
  1427  002490  61BA               	cpfslt	main@input& (0+255),b
  1428  002492  D7F4               	goto	l5318
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 57:       int input_address = input & 0xF;
  1432  002494  C0BA  F0B4         	movff	main@input,??_main
  1433  002498  0E0F               	movlw	15
  1434  00249A  17B4               	andwf	??_main& (0+255),f,b
  1435  00249C  51B4               	movf	??_main& (0+255),w,b
  1436  00249E  6FB6               	movwf	main@input_address& (0+255),b
  1437  0024A0  6BB7               	clrf	(main@input_address+1)& (0+255),b
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 58:       read_SRAM(input_address);
  1441  0024A2  C0B6  F0A6         	movff	main@input_address,read_SRAM@address
  1442  0024A6  C0B7  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1443  0024AA  ECEB  F018         	call	_read_SRAM	;wreg free
  1444                           
  1445                           ;main.c: 59:       break;
  1446  0024AE  D7C5               	goto	l5300
  1447  0024B0                     l5328:
  1448  0024B0  FFFF               	dw	65535	; assembler added errata NOP
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 61:       interrupt_enable();
  1452  0024B2  ECE2  F01F         	call	_interrupt_enable	;wreg free
  1453                           
  1454                           ;main.c: 62:       interrupt_disable();
  1455  0024B6  ECF1  F01F         	call	_interrupt_disable	;wreg free
  1456                           
  1457                           ;main.c: 63:       TRISCbits.TRISC2 = 0;
  1458  0024BA  9494               	bcf	3988,2,c	;volatile
  1459                           
  1460                           ;main.c: 64:       TMR2IE = 1;
  1461  0024BC  829D               	bsf	3997,1,c	;volatile
  1462                           
  1463                           ;main.c: 65:       TMR2IP = 1;
  1464  0024BE  829F               	bsf	3999,1,c	;volatile
  1465                           
  1466                           ;main.c: 66:       Timer0_Init();
  1467  0024C0  EC54  F01F         	call	_Timer0_Init	;wreg free
  1468                           
  1469                           ;main.c: 67:       Timer0_StartTimer();
  1470  0024C4  EC20  F000         	call	_Timer0_StartTimer	;wreg free
  1471                           
  1472                           ;main.c: 68:       initialize_TX();
  1473  0024C8  ECC5  F01F         	call	_initialize_TX	;wreg free
  1474                           
  1475                           ;main.c: 69:       initialize_RX();
  1476  0024CC  ECCF  F01F         	call	_initialize_RX	;wreg free
  1477                           
  1478                           ;main.c: 70:       TRISCbits.TRISC7 = 1;
  1479  0024D0  8E94               	bsf	3988,7,c	;volatile
  1480                           
  1481                           ;main.c: 71:       TRISCbits.TRISC6 = 0;
  1482  0024D2  9C94               	bcf	3988,6,c	;volatile
  1483                           
  1484                           ;main.c: 72:       initialize_PWM(0xFF);
  1485  0024D4  0E00               	movlw	0
  1486  0024D6  6E02               	movwf	initialize_PWM@freq+1,c
  1487  0024D8  6801               	setf	initialize_PWM@freq,c
  1488  0024DA  EC9A  F01F         	call	_initialize_PWM	;wreg free
  1489                           
  1490                           ;main.c: 73:       set_duty_cycle(0x00, 0x00);
  1491  0024DE  0E00               	movlw	0
  1492  0024E0  6E01               	movwf	set_duty_cycle@lower_2,c
  1493  0024E2  0E00               	movlw	0
  1494  0024E4  EC78  F01F         	call	_set_duty_cycle
  1495  0024E8                     l5348:
  1496  0024E8  FFFF               	dw	65535	; assembler added errata NOP
  1497                           
  1498                           ;main.c: 75:         int temp = (int) get_temp();
  1499  0024EA  EC5B  F01A         	call	_get_temp	;wreg free
  1500  0024EE  C030  F03E         	movff	?_get_temp,___fltol@f1
  1501  0024F2  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1502  0024F6  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1503  0024FA  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1504  0024FE  ECF1  F019         	call	___fltol	;wreg free
  1505  002502  C03E  F0B8         	movff	?___fltol,main@temp
  1506  002506  C03F  F0B9         	movff	?___fltol+1,main@temp+1
  1507                           
  1508                           ;main.c: 76:         UARTSendString(int_to_char(temp));
  1509  00250A  C0B8  F07A         	movff	main@temp,int_to_char@num
  1510  00250E  C0B9  F07B         	movff	main@temp+1,int_to_char@num+1
  1511  002512  0E00               	movlw	0
  1512  002514  BE7B               	btfsc	int_to_char@num+1,7,c
  1513  002516  0EFF               	movlw	-1
  1514  002518  6E7C               	movwf	int_to_char@num+2,c
  1515  00251A  6E7D               	movwf	int_to_char@num+3,c
  1516  00251C  ECFB  F01D         	call	_int_to_char	;wreg free
  1517  002520  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1518  002524  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1519  002528  ECB7  F01C         	call	_UARTSendString	;wreg free
  1520                           
  1521                           ;main.c: 77:         if (temp < 30) set_duty_cycle(0x00, 0x00);
  1522  00252C  0100               	movlb	0	; () banked
  1523  00252E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1524  002530  D006               	goto	u5470
  1525  002532  51B9               	movf	(main@temp+1)& (0+255),w,b
  1526  002534  E10B               	bnz	l5356
  1527  002536  0E1E               	movlw	30
  1528  002538  5DB8               	subwf	main@temp& (0+255),w,b
  1529  00253A  B0D8               	btfsc	status,0,c
  1530  00253C  D007               	goto	l5356
  1531  00253E                     u5470:
  1532  00253E  FFFF               	dw	65535	; assembler added errata NOP
  1533                           
  1534                           ; BSR set to: 0
  1535  002540  0E00               	movlw	0
  1536  002542  6E01               	movwf	set_duty_cycle@lower_2,c
  1537  002544  0E00               	movlw	0
  1538  002546  EC78  F01F         	call	_set_duty_cycle
  1539  00254A  D036               	goto	l5370
  1540  00254C                     l5356:
  1541  00254C  FFFF               	dw	65535	; assembler added errata NOP
  1542                           
  1543                           ; BSR set to: 0
  1544  00254E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1545  002550  D006               	goto	u5480
  1546  002552  51B9               	movf	(main@temp+1)& (0+255),w,b
  1547  002554  E10B               	bnz	l5360
  1548  002556  0E32               	movlw	50
  1549  002558  5DB8               	subwf	main@temp& (0+255),w,b
  1550  00255A  B0D8               	btfsc	status,0,c
  1551  00255C  D007               	goto	l5360
  1552  00255E                     u5480:
  1553  00255E  FFFF               	dw	65535	; assembler added errata NOP
  1554                           
  1555                           ; BSR set to: 0
  1556  002560  0E03               	movlw	3
  1557  002562  6E01               	movwf	set_duty_cycle@lower_2,c
  1558  002564  0E0F               	movlw	15
  1559  002566  EC78  F01F         	call	_set_duty_cycle
  1560  00256A  D026               	goto	l5370
  1561  00256C                     l5360:
  1562  00256C  FFFF               	dw	65535	; assembler added errata NOP
  1563                           
  1564                           ; BSR set to: 0
  1565  00256E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1566  002570  D006               	goto	u5490
  1567  002572  51B9               	movf	(main@temp+1)& (0+255),w,b
  1568  002574  E10B               	bnz	l5364
  1569  002576  0E46               	movlw	70
  1570  002578  5DB8               	subwf	main@temp& (0+255),w,b
  1571  00257A  B0D8               	btfsc	status,0,c
  1572  00257C  D007               	goto	l5364
  1573  00257E                     u5490:
  1574  00257E  FFFF               	dw	65535	; assembler added errata NOP
  1575                           
  1576                           ; BSR set to: 0
  1577  002580  0E03               	movlw	3
  1578  002582  6E01               	movwf	set_duty_cycle@lower_2,c
  1579  002584  0E5F               	movlw	95
  1580  002586  EC78  F01F         	call	_set_duty_cycle
  1581  00258A  D016               	goto	l5370
  1582  00258C                     l5364:
  1583  00258C  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ; BSR set to: 0
  1586  00258E  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1587  002590  D006               	goto	u5500
  1588  002592  51B9               	movf	(main@temp+1)& (0+255),w,b
  1589  002594  E10B               	bnz	l5368
  1590  002596  0E64               	movlw	100
  1591  002598  5DB8               	subwf	main@temp& (0+255),w,b
  1592  00259A  B0D8               	btfsc	status,0,c
  1593  00259C  D007               	goto	l5368
  1594  00259E                     u5500:
  1595  00259E  FFFF               	dw	65535	; assembler added errata NOP
  1596                           
  1597                           ; BSR set to: 0
  1598  0025A0  0E03               	movlw	3
  1599  0025A2  6E01               	movwf	set_duty_cycle@lower_2,c
  1600  0025A4  0EF2               	movlw	242
  1601  0025A6  EC78  F01F         	call	_set_duty_cycle
  1602  0025AA  D006               	goto	l5370
  1603  0025AC                     l5368:
  1604  0025AC  FFFF               	dw	65535	; assembler added errata NOP
  1605                           
  1606                           ; BSR set to: 0
  1607  0025AE  0E03               	movlw	3
  1608  0025B0  6E01               	movwf	set_duty_cycle@lower_2,c
  1609  0025B2  0EFF               	movlw	255
  1610  0025B4  EC78  F01F         	call	_set_duty_cycle
  1611  0025B8                     l5370:
  1612  0025B8  FFFF               	dw	65535	; assembler added errata NOP
  1613                           
  1614                           ;main.c: 82:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1615  0025BA  0E02               	movlw	2
  1616  0025BC  0100               	movlb	0	; () banked
  1617  0025BE  6FB5               	movwf	(??_main+1)& (0+255),b
  1618  0025C0  0E86               	movlw	134
  1619  0025C2  6FB4               	movwf	??_main& (0+255),b
  1620  0025C4  0EDA               	movlw	218
  1621  0025C6                     u5537:
  1622  0025C6  FFFF               	dw	65535	; errata NOP
  1623  0025C8  2EE8               	decfsz	wreg,f,c
  1624  0025CA  D7FD               	bra	u5537
  1625  0025CC  2FB4               	decfsz	??_main& (0+255),f,b
  1626  0025CE  D7FB               	bra	u5537
  1627  0025D0  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1628  0025D2  D7F9               	bra	u5537
  1629  0025D4  D000               	nop2	
  1630  0025D6  F000               	nop	
  1631  0025D8  D787               	goto	l5348
  1632  0025DA                     l5374:
  1633  0025DA  FFFF               	dw	65535	; assembler added errata NOP
  1634                           
  1635                           ; BSR set to: 0
  1636  0025DC  51BA               	movf	main@input& (0+255),w,b
  1637  0025DE  6FB4               	movwf	??_main& (0+255),b
  1638  0025E0  6BB5               	clrf	(??_main+1)& (0+255),b
  1639                           
  1640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 1, Range of values is 0 to 0
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            4     3 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  0025E2  51B5               	movf	(??_main+1)& (0+255),w,b
  1648  0025E4  0A00               	xorlw	0	; case 0
  1649  0025E6  A4D8               	btfss	status,2,c
  1650  0025E8  D728               	goto	l5300
  1651                           
  1652                           ; BSR set to: 0
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 3, Range of values is 114 to 120
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           10     6 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659  0025EA  51B4               	movf	??_main& (0+255),w,b
  1660  0025EC  0A72               	xorlw	114	; case 114
  1661  0025EE  B4D8               	btfsc	status,2,c
  1662  0025F0  D739               	goto	l163
  1663  0025F2  0A01               	xorlw	1	; case 115
  1664  0025F4  B4D8               	btfsc	status,2,c
  1665  0025F6  D732               	goto	l5310
  1666  0025F8  0A0B               	xorlw	11	; case 120
  1667  0025FA  B4D8               	btfsc	status,2,c
  1668  0025FC  D759               	goto	l5328
  1669  0025FE  D71D               	goto	l5300
  1670  002600                     __end_of_main:
  1671                           	opt callstack 0
  1672                           
  1673 ;; *************** function _write_SRAM *****************
  1674 ;; Defined at:
  1675 ;;		line 112 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  curr_time       2   50[BANK0 ] int 
  1680 ;;  temperature     2   48[BANK0 ] int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         0      12       0       0       0       0       0
  1692 ;;      Temps:          0       2       0       0       0       0       0
  1693 ;;      Totals:         0      14       0       0       0       0       0
  1694 ;;Total ram usage:       14 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:   11
  1697 ;; This function calls:
  1698 ;;		_ReadTime
  1699 ;;		_Timer0_StartTimer
  1700 ;;		_Timer0_StopTimer
  1701 ;;		_UARTNewLine
  1702 ;;		_UARTSendString
  1703 ;;		___fltol
  1704 ;;		___lldiv
  1705 ;;		_get_temp
  1706 ;;		_int_to_char
  1707 ;;		_write_op
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text1
  1714  002600                     __ptext1:
  1715                           	opt callstack 0
  1716  002600                     _write_SRAM:
  1717                           	opt callstack 0
  1718  002600  FFFF               	dw	65535	; assembler added errata NOP
  1719                           
  1720                           ;main.c: 113:   TRISCbits.TRISC7 = 0;
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;incstack = 0
  1724  002602  9E94               	bcf	3988,7,c	;volatile
  1725                           
  1726                           ;main.c: 114:   int temperature = (int) get_temp();
  1727  002604  EC5B  F01A         	call	_get_temp	;wreg free
  1728  002608  C030  F03E         	movff	?_get_temp,___fltol@f1
  1729  00260C  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1730  002610  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1731  002614  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1732  002618  ECF1  F019         	call	___fltol	;wreg free
  1733  00261C  C03E  F0B0         	movff	?___fltol,write_SRAM@temperature
  1734  002620  C03F  F0B1         	movff	?___fltol+1,write_SRAM@temperature+1
  1735                           
  1736                           ;main.c: 115:   Timer0_StopTimer();
  1737  002624  EC1C  F000         	call	_Timer0_StopTimer	;wreg free
  1738                           
  1739                           ;main.c: 116:   int curr_time = (int) (ReadTime()/60/100/60);
  1740  002628  0E3C               	movlw	60
  1741  00262A  6E09               	movwf	___lldiv@divisor,c
  1742  00262C  0E00               	movlw	0
  1743  00262E  6E0A               	movwf	___lldiv@divisor+1,c
  1744  002630  0E00               	movlw	0
  1745  002632  6E0B               	movwf	___lldiv@divisor+2,c
  1746  002634  0E00               	movlw	0
  1747  002636  6E0C               	movwf	___lldiv@divisor+3,c
  1748  002638  ECA6  F01F         	call	_ReadTime	;wreg free
  1749  00263C  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1750  002640  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1751  002644  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1752  002648  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1753  00264C  EC2A  F01C         	call	___lldiv	;wreg free
  1754  002650  C005  F0A8         	movff	?___lldiv,_write_SRAM$2154
  1755  002654  C006  F0A9         	movff	?___lldiv+1,_write_SRAM$2154+1
  1756  002658  C007  F0AA         	movff	?___lldiv+2,_write_SRAM$2154+2
  1757  00265C  C008  F0AB         	movff	?___lldiv+3,_write_SRAM$2154+3
  1758                           
  1759                           ;main.c: 116:   int curr_time = (int) (ReadTime()/60/100/60);
  1760  002660  0E64               	movlw	100
  1761  002662  6E09               	movwf	___lldiv@divisor,c
  1762  002664  0E00               	movlw	0
  1763  002666  6E0A               	movwf	___lldiv@divisor+1,c
  1764  002668  0E00               	movlw	0
  1765  00266A  6E0B               	movwf	___lldiv@divisor+2,c
  1766  00266C  0E00               	movlw	0
  1767  00266E  6E0C               	movwf	___lldiv@divisor+3,c
  1768  002670  C0A8  F005         	movff	_write_SRAM$2154,___lldiv@dividend
  1769  002674  C0A9  F006         	movff	_write_SRAM$2154+1,___lldiv@dividend+1
  1770  002678  C0AA  F007         	movff	_write_SRAM$2154+2,___lldiv@dividend+2
  1771  00267C  C0AB  F008         	movff	_write_SRAM$2154+3,___lldiv@dividend+3
  1772  002680  EC2A  F01C         	call	___lldiv	;wreg free
  1773  002684  C005  F0AC         	movff	?___lldiv,_write_SRAM$2155
  1774  002688  C006  F0AD         	movff	?___lldiv+1,_write_SRAM$2155+1
  1775  00268C  C007  F0AE         	movff	?___lldiv+2,_write_SRAM$2155+2
  1776  002690  C008  F0AF         	movff	?___lldiv+3,_write_SRAM$2155+3
  1777                           
  1778                           ;main.c: 116:   int curr_time = (int) (ReadTime()/60/100/60);
  1779  002694  C0AC  F005         	movff	_write_SRAM$2155,___lldiv@dividend
  1780  002698  C0AD  F006         	movff	_write_SRAM$2155+1,___lldiv@dividend+1
  1781  00269C  C0AE  F007         	movff	_write_SRAM$2155+2,___lldiv@dividend+2
  1782  0026A0  C0AF  F008         	movff	_write_SRAM$2155+3,___lldiv@dividend+3
  1783  0026A4  0E3C               	movlw	60
  1784  0026A6  6E09               	movwf	___lldiv@divisor,c
  1785  0026A8  0E00               	movlw	0
  1786  0026AA  6E0A               	movwf	___lldiv@divisor+1,c
  1787  0026AC  0E00               	movlw	0
  1788  0026AE  6E0B               	movwf	___lldiv@divisor+2,c
  1789  0026B0  0E00               	movlw	0
  1790  0026B2  6E0C               	movwf	___lldiv@divisor+3,c
  1791  0026B4  EC2A  F01C         	call	___lldiv	;wreg free
  1792  0026B8  C005  F0B2         	movff	?___lldiv,write_SRAM@curr_time
  1793  0026BC  C006  F0B3         	movff	?___lldiv+1,write_SRAM@curr_time+1
  1794                           
  1795                           ;main.c: 117:   Timer0_StartTimer();
  1796  0026C0  EC20  F000         	call	_Timer0_StartTimer	;wreg free
  1797                           
  1798                           ;main.c: 118:   UARTSendString("Writing ");
  1799  0026C4  0E92               	movlw	low STR_11
  1800  0026C6  0100               	movlb	0	; () banked
  1801  0026C8  6FA0               	movwf	UARTSendString@c& (0+255),b
  1802  0026CA  0E06               	movlw	high STR_11
  1803  0026CC  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1804  0026CE  ECB7  F01C         	call	_UARTSendString	;wreg free
  1805                           
  1806                           ;main.c: 119:   UARTSendString(int_to_char(temperature));
  1807  0026D2  C0B0  F07A         	movff	write_SRAM@temperature,int_to_char@num
  1808  0026D6  C0B1  F07B         	movff	write_SRAM@temperature+1,int_to_char@num+1
  1809  0026DA  0E00               	movlw	0
  1810  0026DC  BE7B               	btfsc	int_to_char@num+1,7,c
  1811  0026DE  0EFF               	movlw	-1
  1812  0026E0  6E7C               	movwf	int_to_char@num+2,c
  1813  0026E2  6E7D               	movwf	int_to_char@num+3,c
  1814  0026E4  ECFB  F01D         	call	_int_to_char	;wreg free
  1815  0026E8  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1816  0026EC  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1817  0026F0  ECB7  F01C         	call	_UARTSendString	;wreg free
  1818                           
  1819                           ;main.c: 120:   UARTSendString(" to address ");
  1820  0026F4  0E79               	movlw	low STR_12
  1821  0026F6  0100               	movlb	0	; () banked
  1822  0026F8  6FA0               	movwf	UARTSendString@c& (0+255),b
  1823  0026FA  0E06               	movlw	high STR_12
  1824  0026FC  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1825  0026FE  ECB7  F01C         	call	_UARTSendString	;wreg free
  1826                           
  1827                           ;main.c: 121:   UARTSendString(int_to_char(address));
  1828  002702  C0D2  F07A         	movff	_address,int_to_char@num
  1829  002706  C0D3  F07B         	movff	_address+1,int_to_char@num+1
  1830  00270A  0E00               	movlw	0
  1831  00270C  BE7B               	btfsc	int_to_char@num+1,7,c
  1832  00270E  0EFF               	movlw	-1
  1833  002710  6E7C               	movwf	int_to_char@num+2,c
  1834  002712  6E7D               	movwf	int_to_char@num+3,c
  1835  002714  ECFB  F01D         	call	_int_to_char	;wreg free
  1836  002718  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1837  00271C  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1838  002720  ECB7  F01C         	call	_UARTSendString	;wreg free
  1839                           
  1840                           ;main.c: 122:   UARTNewLine();
  1841  002724  ECB1  F01F         	call	_UARTNewLine	;wreg free
  1842                           
  1843                           ;main.c: 123:   write_op(address, temperature);
  1844  002728  C0B0  F001         	movff	write_SRAM@temperature,write_op@data
  1845  00272C  0100               	movlb	0	; () banked
  1846  00272E  51D2               	movf	_address& (0+255),w,b
  1847  002730  EC67  F01F         	call	_write_op
  1848                           
  1849                           ;main.c: 124:   UARTSendString("Writing ");
  1850  002734  0E92               	movlw	low STR_11
  1851  002736  0100               	movlb	0	; () banked
  1852  002738  6FA0               	movwf	UARTSendString@c& (0+255),b
  1853  00273A  0E06               	movlw	high STR_11
  1854  00273C  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1855  00273E  ECB7  F01C         	call	_UARTSendString	;wreg free
  1856                           
  1857                           ;main.c: 125:   UARTSendString(int_to_char(curr_time));
  1858  002742  C0B2  F07A         	movff	write_SRAM@curr_time,int_to_char@num
  1859  002746  C0B3  F07B         	movff	write_SRAM@curr_time+1,int_to_char@num+1
  1860  00274A  0E00               	movlw	0
  1861  00274C  BE7B               	btfsc	int_to_char@num+1,7,c
  1862  00274E  0EFF               	movlw	-1
  1863  002750  6E7C               	movwf	int_to_char@num+2,c
  1864  002752  6E7D               	movwf	int_to_char@num+3,c
  1865  002754  ECFB  F01D         	call	_int_to_char	;wreg free
  1866  002758  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1867  00275C  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1868  002760  ECB7  F01C         	call	_UARTSendString	;wreg free
  1869                           
  1870                           ;main.c: 126:   UARTSendString(" to address ");
  1871  002764  0E79               	movlw	low STR_12
  1872  002766  0100               	movlb	0	; () banked
  1873  002768  6FA0               	movwf	UARTSendString@c& (0+255),b
  1874  00276A  0E06               	movlw	high STR_12
  1875  00276C  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1876  00276E  ECB7  F01C         	call	_UARTSendString	;wreg free
  1877                           
  1878                           ;main.c: 127:   UARTSendString(int_to_char(address + 1));
  1879  002772  0E01               	movlw	1
  1880  002774  0100               	movlb	0	; () banked
  1881  002776  25D2               	addwf	_address& (0+255),w,b
  1882  002778  6FA6               	movwf	??_write_SRAM& (0+255),b
  1883  00277A  0E00               	movlw	0
  1884  00277C  21D3               	addwfc	(_address+1)& (0+255),w,b
  1885  00277E  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1886  002780  C0A6  F07A         	movff	??_write_SRAM,int_to_char@num
  1887  002784  C0A7  F07B         	movff	??_write_SRAM+1,int_to_char@num+1
  1888  002788  0E00               	movlw	0
  1889  00278A  BE7B               	btfsc	int_to_char@num+1,7,c
  1890  00278C  0EFF               	movlw	-1
  1891  00278E  6E7C               	movwf	int_to_char@num+2,c
  1892  002790  6E7D               	movwf	int_to_char@num+3,c
  1893  002792  ECFB  F01D         	call	_int_to_char	;wreg free
  1894  002796  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1895  00279A  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1896  00279E  ECB7  F01C         	call	_UARTSendString	;wreg free
  1897                           
  1898                           ;main.c: 128:   UARTNewLine();
  1899  0027A2  ECB1  F01F         	call	_UARTNewLine	;wreg free
  1900                           
  1901                           ;main.c: 129:   write_op(address + 1, curr_time);
  1902  0027A6  C0B2  F001         	movff	write_SRAM@curr_time,write_op@data
  1903  0027AA  0100               	movlb	0	; () banked
  1904  0027AC  29D2               	incf	_address& (0+255),w,b
  1905  0027AE  EC67  F01F         	call	_write_op
  1906                           
  1907                           ;main.c: 130:   address = (address + 2) % 16;
  1908  0027B2  0E02               	movlw	2
  1909  0027B4  0100               	movlb	0	; () banked
  1910  0027B6  25D2               	addwf	_address& (0+255),w,b
  1911  0027B8  6FA6               	movwf	??_write_SRAM& (0+255),b
  1912  0027BA  0E00               	movlw	0
  1913  0027BC  21D3               	addwfc	(_address+1)& (0+255),w,b
  1914  0027BE  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1915  0027C0  0E0F               	movlw	15
  1916  0027C2  15A6               	andwf	??_write_SRAM& (0+255),w,b
  1917  0027C4  6FD2               	movwf	_address& (0+255),b
  1918  0027C6  6BD3               	clrf	(_address+1)& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;main.c: 131:   UARTSendString("Done writing to memory.");
  1922  0027C8  0E50               	movlw	low STR_15
  1923  0027CA  6FA0               	movwf	UARTSendString@c& (0+255),b
  1924  0027CC  0E06               	movlw	high STR_15
  1925  0027CE  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1926  0027D0  ECB7  F01C         	call	_UARTSendString	;wreg free
  1927                           
  1928                           ;main.c: 132:   UARTNewLine();
  1929  0027D4  ECB1  F01F         	call	_UARTNewLine	;wreg free
  1930                           
  1931                           ;main.c: 133:   UARTNewLine();
  1932  0027D8  ECB1  F01F         	call	_UARTNewLine	;wreg free
  1933  0027DC  0012               	return		;funcret
  1934  0027DE  FFFF               	dw	65535	; errata NOP
  1935  0027E0                     __end_of_write_SRAM:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _write_op *****************
  1939 ;; Defined at:
  1940 ;;		line 9 in file "drive_memory.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  address         1    wreg     unsigned char 
  1943 ;;  data            1    0[COMRAM] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  address         1    1[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         1       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0
  1958 ;;      Totals:         2       0       0       0       0       0       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_write_SRAM
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text2
  1970  003ECE                     __ptext2:
  1971                           	opt callstack 0
  1972  003ECE                     _write_op:
  1973                           	opt callstack 0
  1974  003ECE  FFFF               	dw	65535	; assembler added errata NOP
  1975                           
  1976                           ;incstack = 0
  1977                           ;write_op@address stored from wreg
  1978  003ED0  6E02               	movwf	write_op@address,c
  1979                           
  1980                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1981  003ED2  9094               	bcf	3988,0,c	;volatile
  1982                           
  1983                           ;drive_memory.c: 12:   TRISD = 0x00;
  1984  003ED4  0E00               	movlw	0
  1985  003ED6  6E95               	movwf	3989,c	;volatile
  1986                           
  1987                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1988  003ED8  0EC0               	movlw	192
  1989  003EDA  1693               	andwf	3987,f,c	;volatile
  1990                           
  1991                           ;drive_memory.c: 14:   PORTB = address;
  1992  003EDC  C002  FF81         	movff	write_op@address,3969	;volatile
  1993                           
  1994                           ;drive_memory.c: 15:   RB5 = 0;
  1995  003EE0  9A81               	bcf	3969,5,c	;volatile
  1996                           
  1997                           ;drive_memory.c: 17:   RC0 = 1;
  1998  003EE2  8082               	bsf	3970,0,c	;volatile
  1999                           
  2000                           ;drive_memory.c: 21:   RC0 = 0;
  2001  003EE4  9082               	bcf	3970,0,c	;volatile
  2002                           
  2003                           ;drive_memory.c: 23:   PORTD = data;
  2004                           
  2005                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  2006  003EE6  C001  FF83         	movff	write_op@data,3971	;volatile
  2007                           
  2008                           ;drive_memory.c: 26:   RC0 = 1;
  2009                           
  2010                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  2011  003EEA  8082               	bsf	3970,0,c	;volatile
  2012  003EEC  0012               	return		;funcret
  2013  003EEE  FFFF               	dw	65535	; errata NOP
  2014  003EF0                     __end_of_write_op:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function _get_temp *****************
  2018 ;; Defined at:
  2019 ;;		line 10 in file "temp_adc.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  temp            4   55[COMRAM] float 
  2024 ;;  real_voltage    4   51[COMRAM] float 
  2025 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  4   47[COMRAM] float 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2035 ;;      Params:         4       0       0       0       0       0       0
  2036 ;;      Locals:        10       0       0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0
  2038 ;;      Totals:        14       0       0       0       0       0       0
  2039 ;;Total ram usage:       14 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    4
  2042 ;; This function calls:
  2043 ;;		_ADC_Init
  2044 ;;		_ADC_Read
  2045 ;;		___flmul
  2046 ;;		___flsub
  2047 ;;		___xxtofl
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;;		_write_SRAM
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text3
  2055  0034B6                     __ptext3:
  2056                           	opt callstack 0
  2057  0034B6                     _get_temp:
  2058                           	opt callstack 0
  2059  0034B6  FFFF               	dw	65535	; assembler added errata NOP
  2060                           
  2061                           ;temp_adc.c: 11:   ADC_Init();
  2062                           
  2063                           ;incstack = 0
  2064  0034B8  ECEA  F01F         	call	_ADC_Init	;wreg free
  2065                           
  2066                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  2067  0034BC  90C1               	bcf	4033,0,c	;volatile
  2068                           
  2069                           ;temp_adc.c: 13:   TRISA |= 0x01;
  2070  0034BE  8092               	bsf	3986,0,c	;volatile
  2071                           
  2072                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  2073  0034C0  0E00               	movlw	0
  2074  0034C2  ECAC  F01D         	call	_ADC_Read
  2075  0034C6  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  2076  0034CA  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  2077                           
  2078                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  2079  0034CE  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  2080  0034D2  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  2081  0034D6  6A03               	clrf	___xxtofl@val+2,c
  2082  0034D8  6A04               	clrf	___xxtofl@val+3,c
  2083  0034DA  0E00               	movlw	0
  2084  0034DC  EC51  F016         	call	___xxtofl
  2085  0034E0  C001  F00F         	movff	?___xxtofl,___flmul@b
  2086  0034E4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2087  0034E8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2088  0034EC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2089  0034F0  0E9F               	movlw	159
  2090  0034F2  6E13               	movwf	___flmul@a,c
  2091  0034F4  0EAB               	movlw	171
  2092  0034F6  6E14               	movwf	___flmul@a+1,c
  2093  0034F8  0EAD               	movlw	173
  2094  0034FA  6E15               	movwf	___flmul@a+2,c
  2095  0034FC  0E3B               	movlw	59
  2096  0034FE  6E16               	movwf	___flmul@a+3,c
  2097  003500  EC49  F00C         	call	___flmul	;wreg free
  2098  003504  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  2099  003508  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  2100  00350C  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  2101  003510  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  2102                           
  2103                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  2104  003514  0E00               	movlw	0
  2105  003516  6E28               	movwf	___flsub@b,c
  2106  003518  0E00               	movlw	0
  2107  00351A  6E29               	movwf	___flsub@b+1,c
  2108  00351C  0E48               	movlw	72
  2109  00351E  6E2A               	movwf	___flsub@b+2,c
  2110  003520  0E43               	movlw	67
  2111  003522  6E2B               	movwf	___flsub@b+3,c
  2112  003524  0E00               	movlw	0
  2113  003526  6E13               	movwf	___flmul@a,c
  2114  003528  0E00               	movlw	0
  2115  00352A  6E14               	movwf	___flmul@a+1,c
  2116  00352C  0E0C               	movlw	12
  2117  00352E  6E15               	movwf	___flmul@a+2,c
  2118  003530  0E42               	movlw	66
  2119  003532  6E16               	movwf	___flmul@a+3,c
  2120  003534  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  2121  003538  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  2122  00353C  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  2123  003540  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  2124  003544  EC49  F00C         	call	___flmul	;wreg free
  2125  003548  C00F  F02C         	movff	?___flmul,___flsub@a
  2126  00354C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2127  003550  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2128  003554  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2129  003558  ECD6  F01D         	call	___flsub	;wreg free
  2130  00355C  C028  F038         	movff	?___flsub,get_temp@temp
  2131  003560  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  2132  003564  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  2133  003568  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  2134                           
  2135                           ;temp_adc.c: 18:   return temp;
  2136  00356C  C038  F030         	movff	get_temp@temp,?_get_temp
  2137  003570  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  2138  003574  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  2139  003578  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  2140  00357C  0012               	return		;funcret
  2141  00357E  FFFF               	dw	65535	; errata NOP
  2142  003580                     __end_of_get_temp:
  2143                           	opt callstack 0
  2144                           
  2145 ;; *************** function ___xxtofl *****************
  2146 ;; Defined at:
  2147 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  sign            1    wreg     unsigned char 
  2150 ;;  val             4    0[COMRAM] long 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  sign            1    8[COMRAM] unsigned char 
  2153 ;;  arg             4   10[COMRAM] unsigned long 
  2154 ;;  exp             1    9[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  4    0[COMRAM] unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         4       0       0       0       0       0       0
  2165 ;;      Locals:         6       0       0       0       0       0       0
  2166 ;;      Temps:          4       0       0       0       0       0       0
  2167 ;;      Totals:        14       0       0       0       0       0       0
  2168 ;;Total ram usage:       14 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_get_temp
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text4
  2179  002CA2                     __ptext4:
  2180                           	opt callstack 0
  2181  002CA2                     ___xxtofl:
  2182                           	opt callstack 0
  2183  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  2184                           
  2185                           ;incstack = 0
  2186                           ;___xxtofl@sign stored from wreg
  2187  002CA4  6E09               	movwf	___xxtofl@sign,c
  2188  002CA6  5009               	movf	___xxtofl@sign,w,c
  2189  002CA8  A4D8               	btfss	status,2,c
  2190  002CAA  AE04               	btfss	___xxtofl@val+3,7,c
  2191  002CAC  D01A               	goto	l1265
  2192  002CAE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2193  002CB2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2194  002CB6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2195  002CBA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2196  002CBE  1E05               	comf	??___xxtofl,f,c
  2197  002CC0  1E06               	comf	??___xxtofl+1,f,c
  2198  002CC2  1E07               	comf	??___xxtofl+2,f,c
  2199  002CC4  1E08               	comf	??___xxtofl+3,f,c
  2200  002CC6  2A05               	incf	??___xxtofl,f,c
  2201  002CC8  0E00               	movlw	0
  2202  002CCA  2206               	addwfc	??___xxtofl+1,f,c
  2203  002CCC  2207               	addwfc	??___xxtofl+2,f,c
  2204  002CCE  2208               	addwfc	??___xxtofl+3,f,c
  2205  002CD0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2206  002CD4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2207  002CD8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2208  002CDC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2209  002CE0  D009               	goto	l4808
  2210  002CE2                     l1265:
  2211  002CE2  FFFF               	dw	65535	; assembler added errata NOP
  2212  002CE4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2213  002CE8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2214  002CEC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2215  002CF0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2216  002CF4                     l4808:
  2217  002CF4  FFFF               	dw	65535	; assembler added errata NOP
  2218  002CF6  5001               	movf	___xxtofl@val,w,c
  2219  002CF8  1002               	iorwf	___xxtofl@val+1,w,c
  2220  002CFA  1003               	iorwf	___xxtofl@val+2,w,c
  2221  002CFC  1004               	iorwf	___xxtofl@val+3,w,c
  2222  002CFE  A4D8               	btfss	status,2,c
  2223  002D00  D009               	goto	l4814
  2224  002D02  0E00               	movlw	0
  2225  002D04  6E01               	movwf	?___xxtofl,c
  2226  002D06  0E00               	movlw	0
  2227  002D08  6E02               	movwf	?___xxtofl+1,c
  2228  002D0A  0E00               	movlw	0
  2229  002D0C  6E03               	movwf	?___xxtofl+2,c
  2230  002D0E  0E00               	movlw	0
  2231  002D10  6E04               	movwf	?___xxtofl+3,c
  2232  002D12  D072               	goto	l1268
  2233  002D14                     l4814:
  2234  002D14  FFFF               	dw	65535	; assembler added errata NOP
  2235  002D16  0E96               	movlw	150
  2236  002D18  6E0A               	movwf	___xxtofl@exp,c
  2237  002D1A  D007               	goto	l4818
  2238  002D1C                     l4816:
  2239  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  2240  002D1E  2A0A               	incf	___xxtofl@exp,f,c
  2241  002D20  90D8               	bcf	status,0,c
  2242  002D22  320E               	rrcf	___xxtofl@arg+3,f,c
  2243  002D24  320D               	rrcf	___xxtofl@arg+2,f,c
  2244  002D26  320C               	rrcf	___xxtofl@arg+1,f,c
  2245  002D28  320B               	rrcf	___xxtofl@arg,f,c
  2246  002D2A                     l4818:
  2247  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  2248  002D2C  0E00               	movlw	0
  2249  002D2E  140B               	andwf	___xxtofl@arg,w,c
  2250  002D30  6E05               	movwf	??___xxtofl& (0+255),c
  2251  002D32  0E00               	movlw	0
  2252  002D34  140C               	andwf	___xxtofl@arg+1,w,c
  2253  002D36  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2254  002D38  0E00               	movlw	0
  2255  002D3A  140D               	andwf	___xxtofl@arg+2,w,c
  2256  002D3C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2257  002D3E  0EFE               	movlw	254
  2258  002D40  140E               	andwf	___xxtofl@arg+3,w,c
  2259  002D42  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2260  002D44  5005               	movf	??___xxtofl,w,c
  2261  002D46  1006               	iorwf	??___xxtofl+1,w,c
  2262  002D48  1007               	iorwf	??___xxtofl+2,w,c
  2263  002D4A  1008               	iorwf	??___xxtofl+3,w,c
  2264  002D4C  B4D8               	btfsc	status,2,c
  2265  002D4E  D00E               	goto	l1272
  2266  002D50  D7E5               	goto	l4816
  2267  002D52                     l4820:
  2268  002D52  FFFF               	dw	65535	; assembler added errata NOP
  2269  002D54  2A0A               	incf	___xxtofl@exp,f,c
  2270  002D56  0E01               	movlw	1
  2271  002D58  260B               	addwf	___xxtofl@arg,f,c
  2272  002D5A  0E00               	movlw	0
  2273  002D5C  220C               	addwfc	___xxtofl@arg+1,f,c
  2274  002D5E  220D               	addwfc	___xxtofl@arg+2,f,c
  2275  002D60  220E               	addwfc	___xxtofl@arg+3,f,c
  2276  002D62  90D8               	bcf	status,0,c
  2277  002D64  320E               	rrcf	___xxtofl@arg+3,f,c
  2278  002D66  320D               	rrcf	___xxtofl@arg+2,f,c
  2279  002D68  320C               	rrcf	___xxtofl@arg+1,f,c
  2280  002D6A  320B               	rrcf	___xxtofl@arg,f,c
  2281  002D6C                     l1272:
  2282  002D6C  FFFF               	dw	65535	; assembler added errata NOP
  2283  002D6E  0E00               	movlw	0
  2284  002D70  140B               	andwf	___xxtofl@arg,w,c
  2285  002D72  6E05               	movwf	??___xxtofl& (0+255),c
  2286  002D74  0E00               	movlw	0
  2287  002D76  140C               	andwf	___xxtofl@arg+1,w,c
  2288  002D78  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2289  002D7A  0E00               	movlw	0
  2290  002D7C  140D               	andwf	___xxtofl@arg+2,w,c
  2291  002D7E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2292  002D80  0EFF               	movlw	255
  2293  002D82  140E               	andwf	___xxtofl@arg+3,w,c
  2294  002D84  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2295  002D86  5005               	movf	??___xxtofl,w,c
  2296  002D88  1006               	iorwf	??___xxtofl+1,w,c
  2297  002D8A  1007               	iorwf	??___xxtofl+2,w,c
  2298  002D8C  1008               	iorwf	??___xxtofl+3,w,c
  2299  002D8E  B4D8               	btfsc	status,2,c
  2300  002D90  D008               	goto	l4828
  2301  002D92  D7DF               	goto	l4820
  2302  002D94                     l4826:
  2303  002D94  FFFF               	dw	65535	; assembler added errata NOP
  2304  002D96  060A               	decf	___xxtofl@exp,f,c
  2305  002D98  90D8               	bcf	status,0,c
  2306  002D9A  360B               	rlcf	___xxtofl@arg,f,c
  2307  002D9C  360C               	rlcf	___xxtofl@arg+1,f,c
  2308  002D9E  360D               	rlcf	___xxtofl@arg+2,f,c
  2309  002DA0  360E               	rlcf	___xxtofl@arg+3,f,c
  2310  002DA2                     l4828:
  2311  002DA2  FFFF               	dw	65535	; assembler added errata NOP
  2312  002DA4  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2313  002DA6  D003               	goto	u5140
  2314  002DA8  0E02               	movlw	2
  2315  002DAA  600A               	cpfslt	___xxtofl@exp,c
  2316  002DAC  D7F3               	goto	l4826
  2317  002DAE                     u5140:
  2318  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  2319  002DB0  A00A               	btfss	___xxtofl@exp,0,c
  2320  002DB2  9E0D               	bcf	___xxtofl@arg+2,7,c
  2321  002DB4  90D8               	bcf	status,0,c
  2322  002DB6  320A               	rrcf	___xxtofl@exp,f,c
  2323  002DB8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2324  002DBC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2325  002DBE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2326  002DC0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2327  002DC2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2328  002DC6  6A07               	clrf	??___xxtofl+2,c
  2329  002DC8  6A06               	clrf	??___xxtofl+1,c
  2330  002DCA  6A05               	clrf	??___xxtofl,c
  2331  002DCC  5005               	movf	??___xxtofl,w,c
  2332  002DCE  120B               	iorwf	___xxtofl@arg,f,c
  2333  002DD0  5006               	movf	??___xxtofl+1,w,c
  2334  002DD2  120C               	iorwf	___xxtofl@arg+1,f,c
  2335  002DD4  5007               	movf	??___xxtofl+2,w,c
  2336  002DD6  120D               	iorwf	___xxtofl@arg+2,f,c
  2337  002DD8  5008               	movf	??___xxtofl+3,w,c
  2338  002DDA  120E               	iorwf	___xxtofl@arg+3,f,c
  2339  002DDC  5009               	movf	___xxtofl@sign,w,c
  2340  002DDE  A4D8               	btfss	status,2,c
  2341  002DE0  AE04               	btfss	___xxtofl@val+3,7,c
  2342  002DE2  D001               	goto	l4844
  2343  002DE4  8E0E               	bsf	___xxtofl@arg+3,7,c
  2344  002DE6                     l4844:
  2345  002DE6  FFFF               	dw	65535	; assembler added errata NOP
  2346  002DE8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2347  002DEC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2348  002DF0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2349  002DF4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2350  002DF8                     l1268:
  2351  002DF8  FFFF               	dw	65535	; assembler added errata NOP
  2352  002DFA  0012               	return		;funcret
  2353  002DFC  FFFF               	dw	65535	; errata NOP
  2354  002DFE                     __end_of___xxtofl:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function ___flsub *****************
  2358 ;; Defined at:
  2359 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  b               4   39[COMRAM] unsigned char 
  2362 ;;  a               4   43[COMRAM] unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  4   39[COMRAM] unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         8       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         8       0       0       0       0       0       0
  2378 ;;Total ram usage:        8 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		___fladd
  2383 ;; This function is called by:
  2384 ;;		_get_temp
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text5
  2389  003BAC                     __ptext5:
  2390                           	opt callstack 0
  2391  003BAC                     ___flsub:
  2392                           	opt callstack 0
  2393  003BAC  FFFF               	dw	65535	; assembler added errata NOP
  2394                           
  2395                           ;incstack = 0
  2396  003BAE  0E00               	movlw	0
  2397  003BB0  1A2C               	xorwf	___flsub@a,f,c
  2398  003BB2  0E00               	movlw	0
  2399  003BB4  1A2D               	xorwf	___flsub@a+1,f,c
  2400  003BB6  0E00               	movlw	0
  2401  003BB8  1A2E               	xorwf	___flsub@a+2,f,c
  2402  003BBA  0E80               	movlw	128
  2403  003BBC  1A2F               	xorwf	___flsub@a+3,f,c
  2404  003BBE  C028  F001         	movff	___flsub@b,___fladd@b
  2405  003BC2  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  2406  003BC6  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  2407  003BCA  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  2408  003BCE  C02C  F005         	movff	___flsub@a,___fladd@a
  2409  003BD2  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  2410  003BD6  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  2411  003BDA  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  2412  003BDE  EC0A  F00E         	call	___fladd	;wreg free
  2413  003BE2  C001  F028         	movff	?___fladd,?___flsub
  2414  003BE6  C002  F029         	movff	?___fladd+1,?___flsub+1
  2415  003BEA  C003  F02A         	movff	?___fladd+2,?___flsub+2
  2416  003BEE  C004  F02B         	movff	?___fladd+3,?___flsub+3
  2417  003BF2  0012               	return		;funcret
  2418  003BF4  FFFF               	dw	65535	; errata NOP
  2419  003BF6                     __end_of___flsub:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function ___fladd *****************
  2423 ;; Defined at:
  2424 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  b               4    0[COMRAM] unsigned char 
  2427 ;;  a               4    4[COMRAM] unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  grs             1   15[COMRAM] unsigned char 
  2430 ;;  bexp            1   14[COMRAM] unsigned char 
  2431 ;;  aexp            1   13[COMRAM] unsigned char 
  2432 ;;  signs           1   12[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  4    0[COMRAM] unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         8       0       0       0       0       0       0
  2443 ;;      Locals:         4       0       0       0       0       0       0
  2444 ;;      Temps:          4       0       0       0       0       0       0
  2445 ;;      Totals:        16       0       0       0       0       0       0
  2446 ;;Total ram usage:       16 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		___flsub
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text6
  2457  001C14                     __ptext6:
  2458                           	opt callstack 0
  2459  001C14                     ___fladd:
  2460                           	opt callstack 0
  2461  001C14  FFFF               	dw	65535	; assembler added errata NOP
  2462                           
  2463                           ;incstack = 0
  2464  001C16  5004               	movf	___fladd@b+3,w,c
  2465  001C18  0B80               	andlw	128
  2466  001C1A  6E0D               	movwf	___fladd@signs,c
  2467  001C1C  5004               	movf	___fladd@b+3,w,c
  2468  001C1E  2404               	addwf	___fladd@b+3,w,c
  2469  001C20  6E0F               	movwf	___fladd@bexp,c
  2470  001C22  BE03               	btfsc	___fladd@b+2,7,c
  2471  001C24  800F               	bsf	___fladd@bexp,0,c
  2472  001C26  500F               	movf	___fladd@bexp,w,c
  2473  001C28  B4D8               	btfsc	status,2,c
  2474  001C2A  D00E               	goto	l4428
  2475  001C2C  280F               	incf	___fladd@bexp,w,c
  2476  001C2E  A4D8               	btfss	status,2,c
  2477  001C30  D008               	goto	l4424
  2478  001C32  0E00               	movlw	0
  2479  001C34  6E01               	movwf	___fladd@b,c
  2480  001C36  0E00               	movlw	0
  2481  001C38  6E02               	movwf	___fladd@b+1,c
  2482  001C3A  0E00               	movlw	0
  2483  001C3C  6E03               	movwf	___fladd@b+2,c
  2484  001C3E  0E00               	movlw	0
  2485  001C40  6E04               	movwf	___fladd@b+3,c
  2486  001C42                     l4424:
  2487  001C42  FFFF               	dw	65535	; assembler added errata NOP
  2488  001C44  8E03               	bsf	___fladd@b+2,7,c
  2489  001C46  D007               	goto	L3
  2490  001C48                     l4428:
  2491  001C48  FFFF               	dw	65535	; assembler added errata NOP
  2492  001C4A  0E00               	movlw	0
  2493  001C4C  6E01               	movwf	___fladd@b,c
  2494  001C4E  0E00               	movlw	0
  2495  001C50  6E02               	movwf	___fladd@b+1,c
  2496  001C52  0E00               	movlw	0
  2497  001C54  6E03               	movwf	___fladd@b+2,c
  2498  001C56                     L3:
  2499  001C56  FFFF               	dw	65535	; assembler added errata NOP
  2500  001C58  0E00               	movlw	0
  2501  001C5A  6E04               	movwf	___fladd@b+3,c
  2502  001C5C  5008               	movf	___fladd@a+3,w,c
  2503  001C5E  0B80               	andlw	128
  2504  001C60  6E0E               	movwf	___fladd@aexp,c
  2505  001C62  500D               	movf	___fladd@signs,w,c
  2506  001C64  180E               	xorwf	___fladd@aexp,w,c
  2507  001C66  A4D8               	btfss	status,2,c
  2508  001C68  8C0D               	bsf	___fladd@signs,6,c
  2509  001C6A  5008               	movf	___fladd@a+3,w,c
  2510  001C6C  2408               	addwf	___fladd@a+3,w,c
  2511  001C6E  6E0E               	movwf	___fladd@aexp,c
  2512  001C70  BE07               	btfsc	___fladd@a+2,7,c
  2513  001C72  800E               	bsf	___fladd@aexp,0,c
  2514  001C74  500E               	movf	___fladd@aexp,w,c
  2515  001C76  B4D8               	btfsc	status,2,c
  2516  001C78  D00E               	goto	l4452
  2517  001C7A  280E               	incf	___fladd@aexp,w,c
  2518  001C7C  A4D8               	btfss	status,2,c
  2519  001C7E  D008               	goto	l4448
  2520  001C80  0E00               	movlw	0
  2521  001C82  6E05               	movwf	___fladd@a,c
  2522  001C84  0E00               	movlw	0
  2523  001C86  6E06               	movwf	___fladd@a+1,c
  2524  001C88  0E00               	movlw	0
  2525  001C8A  6E07               	movwf	___fladd@a+2,c
  2526  001C8C  0E00               	movlw	0
  2527  001C8E  6E08               	movwf	___fladd@a+3,c
  2528  001C90                     l4448:
  2529  001C90  FFFF               	dw	65535	; assembler added errata NOP
  2530  001C92  8E07               	bsf	___fladd@a+2,7,c
  2531  001C94  D007               	goto	L4
  2532  001C96                     l4452:
  2533  001C96  FFFF               	dw	65535	; assembler added errata NOP
  2534  001C98  0E00               	movlw	0
  2535  001C9A  6E05               	movwf	___fladd@a,c
  2536  001C9C  0E00               	movlw	0
  2537  001C9E  6E06               	movwf	___fladd@a+1,c
  2538  001CA0  0E00               	movlw	0
  2539  001CA2  6E07               	movwf	___fladd@a+2,c
  2540  001CA4                     L4:
  2541  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  2542  001CA6  0E00               	movlw	0
  2543  001CA8  6E08               	movwf	___fladd@a+3,c
  2544  001CAA  500F               	movf	___fladd@bexp,w,c
  2545  001CAC  5C0E               	subwf	___fladd@aexp,w,c
  2546  001CAE  B0D8               	btfsc	status,0,c
  2547  001CB0  D023               	goto	l4490
  2548  001CB2  AC0D               	btfss	___fladd@signs,6,c
  2549  001CB4  D002               	goto	l4460
  2550  001CB6  0E80               	movlw	128
  2551  001CB8  1A0D               	xorwf	___fladd@signs,f,c
  2552  001CBA                     l4460:
  2553  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  2554  001CBC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2555  001CC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2556  001CC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2557  001CC8  C001  F010         	movff	___fladd@b,___fladd@grs
  2558  001CCC  C005  F001         	movff	___fladd@a,___fladd@b
  2559  001CD0  C010  F005         	movff	___fladd@grs,___fladd@a
  2560  001CD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2561  001CD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2562  001CDC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2563  001CE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2564  001CE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2565  001CE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2566  001CEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2567  001CF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2568  001CF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2569  001CF8                     l4490:
  2570  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  2571  001CFA  0E00               	movlw	0
  2572  001CFC  6E10               	movwf	___fladd@grs,c
  2573  001CFE  500F               	movf	___fladd@bexp,w,c
  2574  001D00  C00E  F009         	movff	___fladd@aexp,??___fladd
  2575  001D04  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2576  001D06  5E09               	subwf	??___fladd,f,c
  2577  001D08  0E00               	movlw	0
  2578  001D0A  5A0A               	subwfb	??___fladd+1,f,c
  2579  001D0C  BE0A               	btfsc	??___fladd+1,7,c
  2580  001D0E  D031               	goto	l1139
  2581  001D10  500A               	movf	??___fladd+1,w,c
  2582  001D12  E104               	bnz	u4540
  2583  001D14  0E1A               	movlw	26
  2584  001D16  5C09               	subwf	??___fladd,w,c
  2585  001D18  A0D8               	btfss	status,0,c
  2586  001D1A  D02B               	goto	l1139
  2587  001D1C                     u4540:
  2588  001D1C  5001               	movf	___fladd@b,w,c
  2589  001D1E  1002               	iorwf	___fladd@b+1,w,c
  2590  001D20  1003               	iorwf	___fladd@b+2,w,c
  2591  001D22  1004               	iorwf	___fladd@b+3,w,c
  2592  001D24  B4D8               	btfsc	status,2,c
  2593  001D26  D002               	goto	u4550
  2594  001D28  0E01               	movlw	1
  2595  001D2A  D002               	goto	u4560
  2596  001D2C                     u4550:
  2597  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  2598  001D2E  0E00               	movlw	0
  2599  001D30                     u4560:
  2600  001D30  FFFF               	dw	65535	; assembler added errata NOP
  2601  001D32  6E10               	movwf	___fladd@grs,c
  2602  001D34  0E00               	movlw	0
  2603  001D36  6E01               	movwf	___fladd@b,c
  2604  001D38  0E00               	movlw	0
  2605  001D3A  6E02               	movwf	___fladd@b+1,c
  2606  001D3C  0E00               	movlw	0
  2607  001D3E  6E03               	movwf	___fladd@b+2,c
  2608  001D40  0E00               	movlw	0
  2609  001D42  6E04               	movwf	___fladd@b+3,c
  2610  001D44  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2611  001D48  D019               	goto	u4590
  2612  001D4A                     l1140:
  2613  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  2614  001D4C  A010               	btfss	___fladd@grs,0,c
  2615  001D4E  D005               	goto	l4502
  2616  001D50  90D8               	bcf	status,0,c
  2617  001D52  3010               	rrcf	___fladd@grs,w,c
  2618  001D54  0901               	iorlw	1
  2619  001D56  6E10               	movwf	___fladd@grs,c
  2620  001D58  D003               	goto	l4504
  2621  001D5A                     l4502:
  2622  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  2623  001D5C  90D8               	bcf	status,0,c
  2624  001D5E  3210               	rrcf	___fladd@grs,f,c
  2625  001D60                     l4504:
  2626  001D60  FFFF               	dw	65535	; assembler added errata NOP
  2627  001D62  B001               	btfsc	___fladd@b,0,c
  2628  001D64  8E10               	bsf	___fladd@grs,7,c
  2629  001D66  3404               	rlcf	___fladd@b+3,w,c
  2630  001D68  3204               	rrcf	___fladd@b+3,f,c
  2631  001D6A  3203               	rrcf	___fladd@b+2,f,c
  2632  001D6C  3202               	rrcf	___fladd@b+1,f,c
  2633  001D6E  3201               	rrcf	___fladd@b,f,c
  2634  001D70  2A0F               	incf	___fladd@bexp,f,c
  2635  001D72                     l1139:
  2636  001D72  FFFF               	dw	65535	; assembler added errata NOP
  2637  001D74  500E               	movf	___fladd@aexp,w,c
  2638  001D76  5C0F               	subwf	___fladd@bexp,w,c
  2639  001D78  A0D8               	btfss	status,0,c
  2640  001D7A  D7E7               	goto	l1140
  2641  001D7C                     u4590:
  2642  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  2643  001D7E  BC0D               	btfsc	___fladd@signs,6,c
  2644  001D80  D021               	goto	l4536
  2645  001D82  500F               	movf	___fladd@bexp,w,c
  2646  001D84  B4D8               	btfsc	status,2,c
  2647  001D86  D065               	goto	u4680
  2648  001D88  5005               	movf	___fladd@a,w,c
  2649  001D8A  2601               	addwf	___fladd@b,f,c
  2650  001D8C  5006               	movf	___fladd@a+1,w,c
  2651  001D8E  2202               	addwfc	___fladd@b+1,f,c
  2652  001D90  5007               	movf	___fladd@a+2,w,c
  2653  001D92  2203               	addwfc	___fladd@b+2,f,c
  2654  001D94  5008               	movf	___fladd@a+3,w,c
  2655  001D96  2204               	addwfc	___fladd@b+3,f,c
  2656  001D98  A004               	btfss	___fladd@b+3,0,c
  2657  001D9A  D07B               	goto	u4720
  2658  001D9C  A010               	btfss	___fladd@grs,0,c
  2659  001D9E  D005               	goto	l4526
  2660  001DA0  90D8               	bcf	status,0,c
  2661  001DA2  3010               	rrcf	___fladd@grs,w,c
  2662  001DA4  0901               	iorlw	1
  2663  001DA6  6E10               	movwf	___fladd@grs,c
  2664  001DA8  D003               	goto	l4528
  2665  001DAA                     l4526:
  2666  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  2667  001DAC  90D8               	bcf	status,0,c
  2668  001DAE  3210               	rrcf	___fladd@grs,f,c
  2669  001DB0                     l4528:
  2670  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  2671  001DB2  B001               	btfsc	___fladd@b,0,c
  2672  001DB4  8E10               	bsf	___fladd@grs,7,c
  2673  001DB6  3404               	rlcf	___fladd@b+3,w,c
  2674  001DB8  3204               	rrcf	___fladd@b+3,f,c
  2675  001DBA  3203               	rrcf	___fladd@b+2,f,c
  2676  001DBC  3202               	rrcf	___fladd@b+1,f,c
  2677  001DBE  3201               	rrcf	___fladd@b,f,c
  2678  001DC0  2A0F               	incf	___fladd@bexp,f,c
  2679  001DC2  D067               	goto	u4720
  2680  001DC4                     l4536:
  2681  001DC4  FFFF               	dw	65535	; assembler added errata NOP
  2682  001DC6  5005               	movf	___fladd@a,w,c
  2683  001DC8  5C01               	subwf	___fladd@b,w,c
  2684  001DCA  5006               	movf	___fladd@a+1,w,c
  2685  001DCC  5802               	subwfb	___fladd@b+1,w,c
  2686  001DCE  5007               	movf	___fladd@a+2,w,c
  2687  001DD0  5803               	subwfb	___fladd@b+2,w,c
  2688  001DD2  5004               	movf	___fladd@b+3,w,c
  2689  001DD4  0A80               	xorlw	128
  2690  001DD6  6E09               	movwf	??___fladd& (0+255),c
  2691  001DD8  5008               	movf	___fladd@a+3,w,c
  2692  001DDA  0A80               	xorlw	128
  2693  001DDC  5809               	subwfb	??___fladd& (0+255),w,c
  2694  001DDE  B0D8               	btfsc	status,0,c
  2695  001DE0  D025               	goto	l4546
  2696  001DE2  5001               	movf	___fladd@b,w,c
  2697  001DE4  5C05               	subwf	___fladd@a,w,c
  2698  001DE6  6E09               	movwf	??___fladd& (0+255),c
  2699  001DE8  5002               	movf	___fladd@b+1,w,c
  2700  001DEA  5806               	subwfb	___fladd@a+1,w,c
  2701  001DEC  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2702  001DEE  5003               	movf	___fladd@b+2,w,c
  2703  001DF0  5807               	subwfb	___fladd@a+2,w,c
  2704  001DF2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2705  001DF4  5004               	movf	___fladd@b+3,w,c
  2706  001DF6  5808               	subwfb	___fladd@a+3,w,c
  2707  001DF8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2708  001DFA  0EFF               	movlw	255
  2709  001DFC  2409               	addwf	??___fladd,w,c
  2710  001DFE  6E01               	movwf	___fladd@b,c
  2711  001E00  0EFF               	movlw	255
  2712  001E02  200A               	addwfc	??___fladd+1,w,c
  2713  001E04  6E02               	movwf	___fladd@b+1,c
  2714  001E06  0EFF               	movlw	255
  2715  001E08  200B               	addwfc	??___fladd+2,w,c
  2716  001E0A  6E03               	movwf	___fladd@b+2,c
  2717  001E0C  0EFF               	movlw	255
  2718  001E0E  200C               	addwfc	??___fladd+3,w,c
  2719  001E10  6E04               	movwf	___fladd@b+3,c
  2720  001E12  0E80               	movlw	128
  2721  001E14  1A0D               	xorwf	___fladd@signs,f,c
  2722  001E16  6C10               	negf	___fladd@grs,c
  2723  001E18  5010               	movf	___fladd@grs,w,c
  2724  001E1A  A4D8               	btfss	status,2,c
  2725  001E1C  D010               	goto	l1155
  2726  001E1E  0E01               	movlw	1
  2727  001E20  2601               	addwf	___fladd@b,f,c
  2728  001E22  0E00               	movlw	0
  2729  001E24  2202               	addwfc	___fladd@b+1,f,c
  2730  001E26  2203               	addwfc	___fladd@b+2,f,c
  2731  001E28  2204               	addwfc	___fladd@b+3,f,c
  2732  001E2A  D009               	goto	l1155
  2733  001E2C                     l4546:
  2734  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  2735  001E2E  5005               	movf	___fladd@a,w,c
  2736  001E30  5E01               	subwf	___fladd@b,f,c
  2737  001E32  5006               	movf	___fladd@a+1,w,c
  2738  001E34  5A02               	subwfb	___fladd@b+1,f,c
  2739  001E36  5007               	movf	___fladd@a+2,w,c
  2740  001E38  5A03               	subwfb	___fladd@b+2,f,c
  2741  001E3A  5008               	movf	___fladd@a+3,w,c
  2742  001E3C  5A04               	subwfb	___fladd@b+3,f,c
  2743  001E3E                     l1155:
  2744  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  2745  001E40  5001               	movf	___fladd@b,w,c
  2746  001E42  1002               	iorwf	___fladd@b+1,w,c
  2747  001E44  1003               	iorwf	___fladd@b+2,w,c
  2748  001E46  1004               	iorwf	___fladd@b+3,w,c
  2749  001E48  A4D8               	btfss	status,2,c
  2750  001E4A  D020               	goto	l4570
  2751  001E4C  5010               	movf	___fladd@grs,w,c
  2752  001E4E  A4D8               	btfss	status,2,c
  2753  001E50  D01D               	goto	l4570
  2754  001E52                     u4680:
  2755  001E52  FFFF               	dw	65535	; assembler added errata NOP
  2756  001E54  0E00               	movlw	0
  2757  001E56  6E01               	movwf	?___fladd,c
  2758  001E58  0E00               	movlw	0
  2759  001E5A  6E02               	movwf	?___fladd+1,c
  2760  001E5C  0E00               	movlw	0
  2761  001E5E  6E03               	movwf	?___fladd+2,c
  2762  001E60  0E00               	movlw	0
  2763  001E62  6E04               	movwf	?___fladd+3,c
  2764  001E64  D076               	goto	l1147
  2765  001E66                     l4554:
  2766  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2767  001E68  90D8               	bcf	status,0,c
  2768  001E6A  3601               	rlcf	___fladd@b,f,c
  2769  001E6C  3602               	rlcf	___fladd@b+1,f,c
  2770  001E6E  3603               	rlcf	___fladd@b+2,f,c
  2771  001E70  3604               	rlcf	___fladd@b+3,f,c
  2772  001E72  BE10               	btfsc	___fladd@grs,7,c
  2773  001E74  8001               	bsf	___fladd@b,0,c
  2774  001E76  A010               	btfss	___fladd@grs,0,c
  2775  001E78  D002               	goto	l4564
  2776  001E7A  80D8               	bsf	status,0,c
  2777  001E7C  D002               	goto	L5
  2778  001E7E                     l4564:
  2779  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  2780  001E80  90D8               	bcf	status,0,c
  2781  001E82                     L5:
  2782  001E82  FFFF               	dw	65535	; assembler added errata NOP
  2783  001E84  3610               	rlcf	___fladd@grs,f,c
  2784  001E86  500F               	movf	___fladd@bexp,w,c
  2785  001E88  A4D8               	btfss	status,2,c
  2786  001E8A  060F               	decf	___fladd@bexp,f,c
  2787  001E8C                     l4570:
  2788  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2789  001E8E  AE03               	btfss	___fladd@b+2,7,c
  2790  001E90  D7EA               	goto	l4554
  2791  001E92                     u4720:
  2792  001E92  FFFF               	dw	65535	; assembler added errata NOP
  2793  001E94  0E00               	movlw	0
  2794  001E96  6E0E               	movwf	___fladd@aexp,c
  2795  001E98  AE10               	btfss	___fladd@grs,7,c
  2796  001E9A  D00D               	goto	l1164
  2797  001E9C  C010  F009         	movff	___fladd@grs,??___fladd
  2798  001EA0  0E7F               	movlw	127
  2799  001EA2  1609               	andwf	??___fladd,f,c
  2800  001EA4  B4D8               	btfsc	status,2,c
  2801  001EA6  D004               	goto	l1165
  2802  001EA8                     u4740:
  2803  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  2804  001EAA  0E01               	movlw	1
  2805  001EAC  6E0E               	movwf	___fladd@aexp,c
  2806  001EAE  D003               	goto	l1164
  2807  001EB0                     l1165:
  2808  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  2809  001EB2  B001               	btfsc	___fladd@b,0,c
  2810  001EB4  D7F9               	goto	u4740
  2811  001EB6                     l1164:
  2812  001EB6  FFFF               	dw	65535	; assembler added errata NOP
  2813  001EB8  500E               	movf	___fladd@aexp,w,c
  2814  001EBA  B4D8               	btfsc	status,2,c
  2815  001EBC  D020               	goto	l4590
  2816  001EBE  0E01               	movlw	1
  2817  001EC0  2601               	addwf	___fladd@b,f,c
  2818  001EC2  0E00               	movlw	0
  2819  001EC4  2202               	addwfc	___fladd@b+1,f,c
  2820  001EC6  2203               	addwfc	___fladd@b+2,f,c
  2821  001EC8  2204               	addwfc	___fladd@b+3,f,c
  2822  001ECA  A004               	btfss	___fladd@b+3,0,c
  2823  001ECC  D018               	goto	l4590
  2824  001ECE  C001  F009         	movff	___fladd@b,??___fladd
  2825  001ED2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2826  001ED6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2827  001EDA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2828  001EDE  340C               	rlcf	??___fladd+3,w,c
  2829  001EE0  320C               	rrcf	??___fladd+3,f,c
  2830  001EE2  320B               	rrcf	??___fladd+2,f,c
  2831  001EE4  320A               	rrcf	??___fladd+1,f,c
  2832  001EE6  3209               	rrcf	??___fladd,f,c
  2833  001EE8  C009  F001         	movff	??___fladd,___fladd@b
  2834  001EEC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2835  001EF0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2836  001EF4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2837  001EF8  280F               	incf	___fladd@bexp,w,c
  2838  001EFA  A4D8               	btfss	status,2,c
  2839  001EFC  2A0F               	incf	___fladd@bexp,f,c
  2840  001EFE                     l4590:
  2841  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  2842  001F00  280F               	incf	___fladd@bexp,w,c
  2843  001F02  B4D8               	btfsc	status,2,c
  2844  001F04  D003               	goto	u4800
  2845  001F06  500F               	movf	___fladd@bexp,w,c
  2846  001F08  A4D8               	btfss	status,2,c
  2847  001F0A  D00E               	goto	l4598
  2848  001F0C                     u4800:
  2849  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2850  001F0E  0E00               	movlw	0
  2851  001F10  6E01               	movwf	___fladd@b,c
  2852  001F12  0E00               	movlw	0
  2853  001F14  6E02               	movwf	___fladd@b+1,c
  2854  001F16  0E00               	movlw	0
  2855  001F18  6E03               	movwf	___fladd@b+2,c
  2856  001F1A  0E00               	movlw	0
  2857  001F1C  6E04               	movwf	___fladd@b+3,c
  2858  001F1E  500F               	movf	___fladd@bexp,w,c
  2859  001F20  A4D8               	btfss	status,2,c
  2860  001F22  D002               	goto	l4598
  2861  001F24  0E00               	movlw	0
  2862  001F26  6E0D               	movwf	___fladd@signs,c
  2863  001F28                     l4598:
  2864  001F28  FFFF               	dw	65535	; assembler added errata NOP
  2865  001F2A  A00F               	btfss	___fladd@bexp,0,c
  2866  001F2C  D002               	goto	l4602
  2867  001F2E  8E03               	bsf	___fladd@b+2,7,c
  2868  001F30  D002               	goto	l4604
  2869  001F32                     l4602:
  2870  001F32  FFFF               	dw	65535	; assembler added errata NOP
  2871  001F34  9E03               	bcf	___fladd@b+2,7,c
  2872  001F36                     l4604:
  2873  001F36  FFFF               	dw	65535	; assembler added errata NOP
  2874  001F38  90D8               	bcf	status,0,c
  2875  001F3A  300F               	rrcf	___fladd@bexp,w,c
  2876  001F3C  6E04               	movwf	___fladd@b+3,c
  2877  001F3E  BE0D               	btfsc	___fladd@signs,7,c
  2878  001F40  8E04               	bsf	___fladd@b+3,7,c
  2879  001F42  C001  F001         	movff	___fladd@b,?___fladd
  2880  001F46  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2881  001F4A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2882  001F4E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2883  001F52                     l1147:
  2884  001F52  FFFF               	dw	65535	; assembler added errata NOP
  2885  001F54  0012               	return		;funcret
  2886  001F56  FFFF               	dw	65535	; errata NOP
  2887  001F58                     __end_of___fladd:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function ___flmul *****************
  2891 ;; Defined at:
  2892 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  b               4   14[COMRAM] unsigned char 
  2895 ;;  a               4   18[COMRAM] unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  prod            4   33[COMRAM] struct .
  2898 ;;  grs             4   27[COMRAM] unsigned long 
  2899 ;;  temp            2   37[COMRAM] struct .
  2900 ;;  bexp            1   32[COMRAM] unsigned char 
  2901 ;;  aexp            1   31[COMRAM] unsigned char 
  2902 ;;  sign            1   26[COMRAM] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  4   14[COMRAM] unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, prodl, prodh
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         8       0       0       0       0       0       0
  2913 ;;      Locals:        13       0       0       0       0       0       0
  2914 ;;      Temps:          4       0       0       0       0       0       0
  2915 ;;      Totals:        25       0       0       0       0       0       0
  2916 ;;Total ram usage:       25 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_get_temp
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text7
  2927  001892                     __ptext7:
  2928                           	opt callstack 0
  2929  001892                     ___flmul:
  2930                           	opt callstack 0
  2931  001892  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ;incstack = 0
  2934  001894  5012               	movf	___flmul@b+3,w,c
  2935  001896  0B80               	andlw	128
  2936  001898  6E1B               	movwf	___flmul@sign,c
  2937  00189A  5012               	movf	___flmul@b+3,w,c
  2938  00189C  2412               	addwf	___flmul@b+3,w,c
  2939  00189E  6E21               	movwf	___flmul@bexp,c
  2940  0018A0  BE11               	btfsc	___flmul@b+2,7,c
  2941  0018A2  8021               	bsf	___flmul@bexp,0,c
  2942  0018A4  5021               	movf	___flmul@bexp,w,c
  2943  0018A6  B4D8               	btfsc	status,2,c
  2944  0018A8  D00E               	goto	l4680
  2945  0018AA  2821               	incf	___flmul@bexp,w,c
  2946  0018AC  A4D8               	btfss	status,2,c
  2947  0018AE  D008               	goto	l4678
  2948  0018B0  0E00               	movlw	0
  2949  0018B2  6E0F               	movwf	___flmul@b,c
  2950  0018B4  0E00               	movlw	0
  2951  0018B6  6E10               	movwf	___flmul@b+1,c
  2952  0018B8  0E00               	movlw	0
  2953  0018BA  6E11               	movwf	___flmul@b+2,c
  2954  0018BC  0E00               	movlw	0
  2955  0018BE  6E12               	movwf	___flmul@b+3,c
  2956  0018C0                     l4678:
  2957  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  2958  0018C2  8E11               	bsf	___flmul@b+2,7,c
  2959  0018C4  D009               	goto	l4682
  2960  0018C6                     l4680:
  2961  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  2962  0018C8  0E00               	movlw	0
  2963  0018CA  6E0F               	movwf	___flmul@b,c
  2964  0018CC  0E00               	movlw	0
  2965  0018CE  6E10               	movwf	___flmul@b+1,c
  2966  0018D0  0E00               	movlw	0
  2967  0018D2  6E11               	movwf	___flmul@b+2,c
  2968  0018D4  0E00               	movlw	0
  2969  0018D6  6E12               	movwf	___flmul@b+3,c
  2970  0018D8                     l4682:
  2971  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  2972  0018DA  5016               	movf	___flmul@a+3,w,c
  2973  0018DC  0B80               	andlw	128
  2974  0018DE  1A1B               	xorwf	___flmul@sign,f,c
  2975  0018E0  5016               	movf	___flmul@a+3,w,c
  2976  0018E2  2416               	addwf	___flmul@a+3,w,c
  2977  0018E4  6E20               	movwf	___flmul@aexp,c
  2978  0018E6  BE15               	btfsc	___flmul@a+2,7,c
  2979  0018E8  8020               	bsf	___flmul@aexp,0,c
  2980  0018EA  5020               	movf	___flmul@aexp,w,c
  2981  0018EC  B4D8               	btfsc	status,2,c
  2982  0018EE  D00E               	goto	l4698
  2983  0018F0  2820               	incf	___flmul@aexp,w,c
  2984  0018F2  A4D8               	btfss	status,2,c
  2985  0018F4  D008               	goto	l4696
  2986  0018F6  0E00               	movlw	0
  2987  0018F8  6E13               	movwf	___flmul@a,c
  2988  0018FA  0E00               	movlw	0
  2989  0018FC  6E14               	movwf	___flmul@a+1,c
  2990  0018FE  0E00               	movlw	0
  2991  001900  6E15               	movwf	___flmul@a+2,c
  2992  001902  0E00               	movlw	0
  2993  001904  6E16               	movwf	___flmul@a+3,c
  2994  001906                     l4696:
  2995  001906  FFFF               	dw	65535	; assembler added errata NOP
  2996  001908  8E15               	bsf	___flmul@a+2,7,c
  2997  00190A  D009               	goto	l1224
  2998  00190C                     l4698:
  2999  00190C  FFFF               	dw	65535	; assembler added errata NOP
  3000  00190E  0E00               	movlw	0
  3001  001910  6E13               	movwf	___flmul@a,c
  3002  001912  0E00               	movlw	0
  3003  001914  6E14               	movwf	___flmul@a+1,c
  3004  001916  0E00               	movlw	0
  3005  001918  6E15               	movwf	___flmul@a+2,c
  3006  00191A  0E00               	movlw	0
  3007  00191C  6E16               	movwf	___flmul@a+3,c
  3008  00191E                     l1224:
  3009  00191E  FFFF               	dw	65535	; assembler added errata NOP
  3010  001920  5020               	movf	___flmul@aexp,w,c
  3011  001922  B4D8               	btfsc	status,2,c
  3012  001924  D003               	goto	u4960
  3013  001926  5021               	movf	___flmul@bexp,w,c
  3014  001928  A4D8               	btfss	status,2,c
  3015  00192A  D00A               	goto	l4706
  3016  00192C                     u4960:
  3017  00192C  FFFF               	dw	65535	; assembler added errata NOP
  3018  00192E  0E00               	movlw	0
  3019  001930  6E0F               	movwf	?___flmul,c
  3020  001932  0E00               	movlw	0
  3021  001934  6E10               	movwf	?___flmul+1,c
  3022  001936  0E00               	movlw	0
  3023  001938  6E11               	movwf	?___flmul+2,c
  3024  00193A  0E00               	movlw	0
  3025  00193C  6E12               	movwf	?___flmul+3,c
  3026  00193E  D167               	goto	l1228
  3027  001940                     l4706:
  3028  001940  FFFF               	dw	65535	; assembler added errata NOP
  3029  001942  5015               	movf	___flmul@a+2,w,c
  3030  001944  020F               	mulwf	___flmul@b,c
  3031  001946  CFF3 F026          	movff	prodl,___flmul@temp
  3032  00194A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3033  00194E  5026               	movf	___flmul@temp,w,c
  3034  001950  6E1C               	movwf	___flmul@grs,c
  3035  001952  6A1D               	clrf	___flmul@grs+1,c
  3036  001954  6A1E               	clrf	___flmul@grs+2,c
  3037  001956  6A1F               	clrf	___flmul@grs+3,c
  3038  001958  5027               	movf	___flmul@temp+1,w,c
  3039  00195A  6E22               	movwf	___flmul@prod,c
  3040  00195C  6A23               	clrf	___flmul@prod+1,c
  3041  00195E  6A24               	clrf	___flmul@prod+2,c
  3042  001960  6A25               	clrf	___flmul@prod+3,c
  3043  001962  5014               	movf	___flmul@a+1,w,c
  3044  001964  0210               	mulwf	___flmul@b+1,c
  3045  001966  CFF3 F026          	movff	prodl,___flmul@temp
  3046  00196A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3047  00196E  5026               	movf	___flmul@temp,w,c
  3048  001970  261C               	addwf	___flmul@grs,f,c
  3049  001972  0E00               	movlw	0
  3050  001974  221D               	addwfc	___flmul@grs+1,f,c
  3051  001976  221E               	addwfc	___flmul@grs+2,f,c
  3052  001978  221F               	addwfc	___flmul@grs+3,f,c
  3053  00197A  5027               	movf	___flmul@temp+1,w,c
  3054  00197C  2622               	addwf	___flmul@prod,f,c
  3055  00197E  0E00               	movlw	0
  3056  001980  2223               	addwfc	___flmul@prod+1,f,c
  3057  001982  2224               	addwfc	___flmul@prod+2,f,c
  3058  001984  2225               	addwfc	___flmul@prod+3,f,c
  3059  001986  5013               	movf	___flmul@a,w,c
  3060  001988  0211               	mulwf	___flmul@b+2,c
  3061  00198A  CFF3 F026          	movff	prodl,___flmul@temp
  3062  00198E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3063  001992  5026               	movf	___flmul@temp,w,c
  3064  001994  261C               	addwf	___flmul@grs,f,c
  3065  001996  0E00               	movlw	0
  3066  001998  221D               	addwfc	___flmul@grs+1,f,c
  3067  00199A  221E               	addwfc	___flmul@grs+2,f,c
  3068  00199C  221F               	addwfc	___flmul@grs+3,f,c
  3069  00199E  5027               	movf	___flmul@temp+1,w,c
  3070  0019A0  2622               	addwf	___flmul@prod,f,c
  3071  0019A2  0E00               	movlw	0
  3072  0019A4  2223               	addwfc	___flmul@prod+1,f,c
  3073  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  3074  0019A8  2225               	addwfc	___flmul@prod+3,f,c
  3075  0019AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3076  0019AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3077  0019B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3078  0019B6  6A1C               	clrf	___flmul@grs,c
  3079  0019B8  5013               	movf	___flmul@a,w,c
  3080  0019BA  0210               	mulwf	___flmul@b+1,c
  3081  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  3082  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3083  0019C4  5026               	movf	___flmul@temp,w,c
  3084  0019C6  261C               	addwf	___flmul@grs,f,c
  3085  0019C8  5027               	movf	___flmul@temp+1,w,c
  3086  0019CA  221D               	addwfc	___flmul@grs+1,f,c
  3087  0019CC  0E00               	movlw	0
  3088  0019CE  221E               	addwfc	___flmul@grs+2,f,c
  3089  0019D0  0E00               	movlw	0
  3090  0019D2  221F               	addwfc	___flmul@grs+3,f,c
  3091  0019D4  5014               	movf	___flmul@a+1,w,c
  3092  0019D6  020F               	mulwf	___flmul@b,c
  3093  0019D8  CFF3 F026          	movff	prodl,___flmul@temp
  3094  0019DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3095  0019E0  5026               	movf	___flmul@temp,w,c
  3096  0019E2  261C               	addwf	___flmul@grs,f,c
  3097  0019E4  5027               	movf	___flmul@temp+1,w,c
  3098  0019E6  221D               	addwfc	___flmul@grs+1,f,c
  3099  0019E8  0E00               	movlw	0
  3100  0019EA  221E               	addwfc	___flmul@grs+2,f,c
  3101  0019EC  0E00               	movlw	0
  3102  0019EE  221F               	addwfc	___flmul@grs+3,f,c
  3103  0019F0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3104  0019F4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3105  0019F8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3106  0019FC  6A1C               	clrf	___flmul@grs,c
  3107  0019FE  5013               	movf	___flmul@a,w,c
  3108  001A00  020F               	mulwf	___flmul@b,c
  3109  001A02  CFF3 F026          	movff	prodl,___flmul@temp
  3110  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3111  001A0A  5026               	movf	___flmul@temp,w,c
  3112  001A0C  261C               	addwf	___flmul@grs,f,c
  3113  001A0E  5027               	movf	___flmul@temp+1,w,c
  3114  001A10  221D               	addwfc	___flmul@grs+1,f,c
  3115  001A12  0E00               	movlw	0
  3116  001A14  221E               	addwfc	___flmul@grs+2,f,c
  3117  001A16  0E00               	movlw	0
  3118  001A18  221F               	addwfc	___flmul@grs+3,f,c
  3119  001A1A  5015               	movf	___flmul@a+2,w,c
  3120  001A1C  0210               	mulwf	___flmul@b+1,c
  3121  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
  3122  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3123  001A26  5026               	movf	___flmul@temp,w,c
  3124  001A28  2622               	addwf	___flmul@prod,f,c
  3125  001A2A  5027               	movf	___flmul@temp+1,w,c
  3126  001A2C  2223               	addwfc	___flmul@prod+1,f,c
  3127  001A2E  0E00               	movlw	0
  3128  001A30  2224               	addwfc	___flmul@prod+2,f,c
  3129  001A32  0E00               	movlw	0
  3130  001A34  2225               	addwfc	___flmul@prod+3,f,c
  3131  001A36  5014               	movf	___flmul@a+1,w,c
  3132  001A38  0211               	mulwf	___flmul@b+2,c
  3133  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
  3134  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3135  001A42  5026               	movf	___flmul@temp,w,c
  3136  001A44  2622               	addwf	___flmul@prod,f,c
  3137  001A46  5027               	movf	___flmul@temp+1,w,c
  3138  001A48  2223               	addwfc	___flmul@prod+1,f,c
  3139  001A4A  0E00               	movlw	0
  3140  001A4C  2224               	addwfc	___flmul@prod+2,f,c
  3141  001A4E  0E00               	movlw	0
  3142  001A50  2225               	addwfc	___flmul@prod+3,f,c
  3143  001A52  5015               	movf	___flmul@a+2,w,c
  3144  001A54  0211               	mulwf	___flmul@b+2,c
  3145  001A56  CFF3 F026          	movff	prodl,___flmul@temp
  3146  001A5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3147  001A5E  5026               	movf	___flmul@temp,w,c
  3148  001A60  6E17               	movwf	??___flmul& (0+255),c
  3149  001A62  5027               	movf	___flmul@temp+1,w,c
  3150  001A64  6E18               	movwf	(??___flmul+1)& (0+255),c
  3151  001A66  6A19               	clrf	(??___flmul+2)& (0+255),c
  3152  001A68  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3153  001A6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3154  001A6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  3155  001A72  C017  F018         	movff	??___flmul,??___flmul+1
  3156  001A76  6A17               	clrf	??___flmul,c
  3157  001A78  5017               	movf	??___flmul,w,c
  3158  001A7A  2622               	addwf	___flmul@prod,f,c
  3159  001A7C  5018               	movf	??___flmul+1,w,c
  3160  001A7E  2223               	addwfc	___flmul@prod+1,f,c
  3161  001A80  5019               	movf	??___flmul+2,w,c
  3162  001A82  2224               	addwfc	___flmul@prod+2,f,c
  3163  001A84  501A               	movf	??___flmul+3,w,c
  3164  001A86  2225               	addwfc	___flmul@prod+3,f,c
  3165  001A88  C01C  F017         	movff	___flmul@grs,??___flmul
  3166  001A8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3167  001A90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3168  001A94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3169  001A98  0E19               	movlw	25
  3170  001A9A  D006               	goto	u4970
  3171  001A9C                     u4975:
  3172  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3173  001A9E  90D8               	bcf	status,0,c
  3174  001AA0  321A               	rrcf	??___flmul+3,f,c
  3175  001AA2  3219               	rrcf	??___flmul+2,f,c
  3176  001AA4  3218               	rrcf	??___flmul+1,f,c
  3177  001AA6  3217               	rrcf	??___flmul,f,c
  3178  001AA8                     u4970:
  3179  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  3180  001AAA  2EE8               	decfsz	wreg,f,c
  3181  001AAC  D7F7               	goto	u4975
  3182  001AAE  5017               	movf	??___flmul,w,c
  3183  001AB0  2622               	addwf	___flmul@prod,f,c
  3184  001AB2  5018               	movf	??___flmul+1,w,c
  3185  001AB4  2223               	addwfc	___flmul@prod+1,f,c
  3186  001AB6  5019               	movf	??___flmul+2,w,c
  3187  001AB8  2224               	addwfc	___flmul@prod+2,f,c
  3188  001ABA  501A               	movf	??___flmul+3,w,c
  3189  001ABC  2225               	addwfc	___flmul@prod+3,f,c
  3190  001ABE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3191  001AC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3192  001AC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3193  001ACA  6A1C               	clrf	___flmul@grs,c
  3194  001ACC  5020               	movf	___flmul@aexp,w,c
  3195  001ACE  C021  F017         	movff	___flmul@bexp,??___flmul
  3196  001AD2  6A18               	clrf	(??___flmul+1)& (0+255),c
  3197  001AD4  2617               	addwf	??___flmul,f,c
  3198  001AD6  0E00               	movlw	0
  3199  001AD8  2218               	addwfc	??___flmul+1,f,c
  3200  001ADA  0E82               	movlw	130
  3201  001ADC  2417               	addwf	??___flmul,w,c
  3202  001ADE  6E26               	movwf	___flmul@temp,c
  3203  001AE0  0EFF               	movlw	255
  3204  001AE2  2018               	addwfc	??___flmul+1,w,c
  3205  001AE4  6E27               	movwf	___flmul@temp+1,c
  3206  001AE6  D010               	goto	l4754
  3207  001AE8                     l4748:
  3208  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  3209  001AEA  90D8               	bcf	status,0,c
  3210  001AEC  3622               	rlcf	___flmul@prod,f,c
  3211  001AEE  3623               	rlcf	___flmul@prod+1,f,c
  3212  001AF0  3624               	rlcf	___flmul@prod+2,f,c
  3213  001AF2  3625               	rlcf	___flmul@prod+3,f,c
  3214  001AF4  BE1F               	btfsc	___flmul@grs+3,7,c
  3215  001AF6  8022               	bsf	___flmul@prod,0,c
  3216  001AF8  90D8               	bcf	status,0,c
  3217  001AFA  361C               	rlcf	___flmul@grs,f,c
  3218  001AFC  361D               	rlcf	___flmul@grs+1,f,c
  3219  001AFE  361E               	rlcf	___flmul@grs+2,f,c
  3220  001B00  361F               	rlcf	___flmul@grs+3,f,c
  3221  001B02  0626               	decf	___flmul@temp,f,c
  3222  001B04  A0D8               	btfss	status,0,c
  3223  001B06  0627               	decf	___flmul@temp+1,f,c
  3224  001B08                     l4754:
  3225  001B08  FFFF               	dw	65535	; assembler added errata NOP
  3226  001B0A  AE24               	btfss	___flmul@prod+2,7,c
  3227  001B0C  D7ED               	goto	l4748
  3228  001B0E  0E00               	movlw	0
  3229  001B10  6E20               	movwf	___flmul@aexp,c
  3230  001B12  AE1F               	btfss	___flmul@grs+3,7,c
  3231  001B14  D019               	goto	l1233
  3232  001B16  0EFF               	movlw	255
  3233  001B18  141C               	andwf	___flmul@grs,w,c
  3234  001B1A  6E17               	movwf	??___flmul& (0+255),c
  3235  001B1C  0EFF               	movlw	255
  3236  001B1E  141D               	andwf	___flmul@grs+1,w,c
  3237  001B20  6E18               	movwf	(??___flmul+1)& (0+255),c
  3238  001B22  0EFF               	movlw	255
  3239  001B24  141E               	andwf	___flmul@grs+2,w,c
  3240  001B26  6E19               	movwf	(??___flmul+2)& (0+255),c
  3241  001B28  0E7F               	movlw	127
  3242  001B2A  141F               	andwf	___flmul@grs+3,w,c
  3243  001B2C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3244  001B2E  5017               	movf	??___flmul,w,c
  3245  001B30  1018               	iorwf	??___flmul+1,w,c
  3246  001B32  1019               	iorwf	??___flmul+2,w,c
  3247  001B34  101A               	iorwf	??___flmul+3,w,c
  3248  001B36  B4D8               	btfsc	status,2,c
  3249  001B38  D004               	goto	l1234
  3250  001B3A                     u5010:
  3251  001B3A  FFFF               	dw	65535	; assembler added errata NOP
  3252  001B3C  0E01               	movlw	1
  3253  001B3E  6E20               	movwf	___flmul@aexp,c
  3254  001B40  D003               	goto	l1233
  3255  001B42                     l1234:
  3256  001B42  FFFF               	dw	65535	; assembler added errata NOP
  3257  001B44  B022               	btfsc	___flmul@prod,0,c
  3258  001B46  D7F9               	goto	u5010
  3259  001B48                     l1233:
  3260  001B48  FFFF               	dw	65535	; assembler added errata NOP
  3261  001B4A  5020               	movf	___flmul@aexp,w,c
  3262  001B4C  B4D8               	btfsc	status,2,c
  3263  001B4E  D01F               	goto	l4774
  3264  001B50  0E01               	movlw	1
  3265  001B52  2622               	addwf	___flmul@prod,f,c
  3266  001B54  0E00               	movlw	0
  3267  001B56  2223               	addwfc	___flmul@prod+1,f,c
  3268  001B58  2224               	addwfc	___flmul@prod+2,f,c
  3269  001B5A  2225               	addwfc	___flmul@prod+3,f,c
  3270  001B5C  A025               	btfss	___flmul@prod+3,0,c
  3271  001B5E  D017               	goto	l4774
  3272  001B60  C022  F017         	movff	___flmul@prod,??___flmul
  3273  001B64  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3274  001B68  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3275  001B6C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3276  001B70  341A               	rlcf	??___flmul+3,w,c
  3277  001B72  321A               	rrcf	??___flmul+3,f,c
  3278  001B74  3219               	rrcf	??___flmul+2,f,c
  3279  001B76  3218               	rrcf	??___flmul+1,f,c
  3280  001B78  3217               	rrcf	??___flmul,f,c
  3281  001B7A  C017  F022         	movff	??___flmul,___flmul@prod
  3282  001B7E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3283  001B82  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3284  001B86  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3285  001B8A  4A26               	infsnz	___flmul@temp,f,c
  3286  001B8C  2A27               	incf	___flmul@temp+1,f,c
  3287  001B8E                     l4774:
  3288  001B8E  FFFF               	dw	65535	; assembler added errata NOP
  3289  001B90  BE27               	btfsc	___flmul@temp+1,7,c
  3290  001B92  D00D               	goto	l4778
  3291  001B94  5027               	movf	___flmul@temp+1,w,c
  3292  001B96  E103               	bnz	u5050
  3293  001B98  2826               	incf	___flmul@temp,w,c
  3294  001B9A  A0D8               	btfss	status,0,c
  3295  001B9C  D008               	goto	l4778
  3296  001B9E                     u5050:
  3297  001B9E  0E00               	movlw	0
  3298  001BA0  6E22               	movwf	___flmul@prod,c
  3299  001BA2  0E00               	movlw	0
  3300  001BA4  6E23               	movwf	___flmul@prod+1,c
  3301  001BA6  0E80               	movlw	128
  3302  001BA8  6E24               	movwf	___flmul@prod+2,c
  3303  001BAA  0E7F               	movlw	127
  3304  001BAC  D023               	goto	L6
  3305  001BAE                     l4778:
  3306  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  3307  001BB0  BE27               	btfsc	___flmul@temp+1,7,c
  3308  001BB2  D005               	goto	u5060
  3309  001BB4  5027               	movf	___flmul@temp+1,w,c
  3310  001BB6  E10F               	bnz	l1241
  3311  001BB8  0426               	decf	___flmul@temp,w,c
  3312  001BBA  B0D8               	btfsc	status,0,c
  3313  001BBC  D00C               	goto	l1241
  3314  001BBE                     u5060:
  3315  001BBE  FFFF               	dw	65535	; assembler added errata NOP
  3316  001BC0  0E00               	movlw	0
  3317  001BC2  6E22               	movwf	___flmul@prod,c
  3318  001BC4  0E00               	movlw	0
  3319  001BC6  6E23               	movwf	___flmul@prod+1,c
  3320  001BC8  0E00               	movlw	0
  3321  001BCA  6E24               	movwf	___flmul@prod+2,c
  3322  001BCC  0E00               	movlw	0
  3323  001BCE  6E25               	movwf	___flmul@prod+3,c
  3324  001BD0  0E00               	movlw	0
  3325  001BD2  6E1B               	movwf	___flmul@sign,c
  3326  001BD4  D011               	goto	l4790
  3327  001BD6                     l1241:
  3328  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  3329  001BD8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3330  001BDC  0EFF               	movlw	255
  3331  001BDE  1622               	andwf	___flmul@prod,f,c
  3332  001BE0  0EFF               	movlw	255
  3333  001BE2  1623               	andwf	___flmul@prod+1,f,c
  3334  001BE4  0E7F               	movlw	127
  3335  001BE6  1624               	andwf	___flmul@prod+2,f,c
  3336  001BE8  0E00               	movlw	0
  3337  001BEA  1625               	andwf	___flmul@prod+3,f,c
  3338  001BEC  B021               	btfsc	___flmul@bexp,0,c
  3339  001BEE  8E24               	bsf	___flmul@prod+2,7,c
  3340  001BF0  90D8               	bcf	status,0,c
  3341  001BF2  3021               	rrcf	___flmul@bexp,w,c
  3342  001BF4                     L6:
  3343  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  3344  001BF6  6E25               	movwf	___flmul@prod+3,c
  3345  001BF8                     l4790:
  3346  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  3347  001BFA  501B               	movf	___flmul@sign,w,c
  3348  001BFC  1225               	iorwf	___flmul@prod+3,f,c
  3349  001BFE  C022  F00F         	movff	___flmul@prod,?___flmul
  3350  001C02  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3351  001C06  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3352  001C0A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3353  001C0E                     l1228:
  3354  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  3355  001C10  0012               	return		;funcret
  3356  001C12  FFFF               	dw	65535	; errata NOP
  3357  001C14                     __end_of___flmul:
  3358                           	opt callstack 0
  3359                           
  3360 ;; *************** function _ADC_Read *****************
  3361 ;; Defined at:
  3362 ;;		line 28 in file "adc.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  channel         1    wreg     unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  channel         1    4[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2    0[COMRAM] unsigned int 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3376 ;;      Params:         2       0       0       0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0
  3378 ;;      Temps:          2       0       0       0       0       0       0
  3379 ;;      Totals:         5       0       0       0       0       0       0
  3380 ;;Total ram usage:        5 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    2
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_get_temp
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text8
  3391  003B58                     __ptext8:
  3392                           	opt callstack 0
  3393  003B58                     _ADC_Read:
  3394                           	opt callstack 0
  3395  003B58  FFFF               	dw	65535	; assembler added errata NOP
  3396                           
  3397                           ;incstack = 0
  3398                           ;ADC_Read@channel stored from wreg
  3399  003B5A  6E05               	movwf	ADC_Read@channel,c
  3400                           
  3401                           ;adc.c: 29:  if(channel > 7)
  3402  003B5C  0E07               	movlw	7
  3403  003B5E  6405               	cpfsgt	ADC_Read@channel,c
  3404  003B60  D005               	goto	l4656
  3405                           
  3406                           ;adc.c: 30:  return 0;
  3407  003B62  0E00               	movlw	0
  3408  003B64  6E02               	movwf	?_ADC_Read+1,c
  3409  003B66  0E00               	movlw	0
  3410  003B68  6E01               	movwf	?_ADC_Read,c
  3411  003B6A  D01D               	goto	l333
  3412  003B6C                     l4656:
  3413  003B6C  FFFF               	dw	65535	; assembler added errata NOP
  3414                           
  3415                           ;adc.c: 31:  ADCON0 &= 0xC5;
  3416  003B6E  0EC5               	movlw	197
  3417  003B70  16C2               	andwf	4034,f,c	;volatile
  3418                           
  3419                           ;adc.c: 32:  ADCON0 |= channel<<3;
  3420  003B72  3805               	swapf	ADC_Read@channel,w,c	;volatile
  3421  003B74  42E8               	rrncf	wreg,f,c
  3422  003B76  0BF8               	andlw	248
  3423  003B78  12C2               	iorwf	4034,f,c	;volatile
  3424                           
  3425                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  3426  003B7A  0E08               	movlw	8
  3427  003B7C  6E03               	movwf	??_ADC_Read& (0+255),c
  3428  003B7E  0ECB               	movlw	203
  3429  003B80                     u5547:
  3430  003B80  FFFF               	dw	65535	; errata NOP
  3431  003B82  2EE8               	decfsz	wreg,f,c
  3432  003B84  D7FD               	bra	u5547
  3433  003B86  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  3434  003B88  D7FB               	bra	u5547
  3435  003B8A  D000               	nop2	
  3436                           
  3437                           ;adc.c: 34:  GO_nDONE = 1;
  3438  003B8C  84C2               	bsf	4034,2,c	;volatile
  3439  003B8E                     l334:
  3440  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  3441  003B90  B4C2               	btfsc	4034,2,c	;volatile
  3442  003B92  D7FD               	goto	l334
  3443                           
  3444                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  3445  003B94  50C4               	movf	4036,w,c	;volatile
  3446  003B96  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  3447  003B98  6A03               	clrf	??_ADC_Read& (0+255),c
  3448  003B9A  50C3               	movf	4035,w,c	;volatile
  3449  003B9C  2403               	addwf	??_ADC_Read,w,c
  3450  003B9E  6E01               	movwf	?_ADC_Read,c
  3451  003BA0  0E00               	movlw	0
  3452  003BA2  2004               	addwfc	??_ADC_Read+1,w,c
  3453  003BA4  6E02               	movwf	?_ADC_Read+1,c
  3454  003BA6                     l333:
  3455  003BA6  FFFF               	dw	65535	; assembler added errata NOP
  3456  003BA8  0012               	return		;funcret
  3457  003BAA  FFFF               	dw	65535	; errata NOP
  3458  003BAC                     __end_of_ADC_Read:
  3459                           	opt callstack 0
  3460                           
  3461 ;; *************** function _ADC_Init *****************
  3462 ;; Defined at:
  3463 ;;		line 23 in file "adc.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         0       0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    2
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_get_temp
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text9
  3492  003FD4                     __ptext9:
  3493                           	opt callstack 0
  3494  003FD4                     _ADC_Init:
  3495                           	opt callstack 0
  3496  003FD4  FFFF               	dw	65535	; assembler added errata NOP
  3497                           
  3498                           ;adc.c: 24:  ADCON0 = 0x81;
  3499                           
  3500                           ;incstack = 0
  3501  003FD6  0E81               	movlw	129
  3502  003FD8  6EC2               	movwf	4034,c	;volatile
  3503                           
  3504                           ;adc.c: 25:  ADCON1 = 0x80;
  3505  003FDA  0E80               	movlw	128
  3506  003FDC  6EC1               	movwf	4033,c	;volatile
  3507  003FDE  0012               	return		;funcret
  3508  003FE0  FFFF               	dw	65535	; errata NOP
  3509  003FE2                     __end_of_ADC_Init:
  3510                           	opt callstack 0
  3511                           
  3512 ;; *************** function ___lldiv *****************
  3513 ;; Defined at:
  3514 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  dividend        4    4[COMRAM] unsigned long 
  3517 ;;  divisor         4    8[COMRAM] unsigned long 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  quotient        4   12[COMRAM] unsigned long 
  3520 ;;  counter         1   16[COMRAM] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  4    4[COMRAM] unsigned long 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3530 ;;      Params:         8       0       0       0       0       0       0
  3531 ;;      Locals:         5       0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0
  3533 ;;      Totals:        13       0       0       0       0       0       0
  3534 ;;Total ram usage:       13 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    2
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_write_SRAM
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text10
  3545  003854                     __ptext10:
  3546                           	opt callstack 0
  3547  003854                     ___lldiv:
  3548                           	opt callstack 0
  3549  003854  FFFF               	dw	65535	; assembler added errata NOP
  3550                           
  3551                           ;incstack = 0
  3552  003856  0E00               	movlw	0
  3553  003858  6E0D               	movwf	___lldiv@quotient,c
  3554  00385A  0E00               	movlw	0
  3555  00385C  6E0E               	movwf	___lldiv@quotient+1,c
  3556  00385E  0E00               	movlw	0
  3557  003860  6E0F               	movwf	___lldiv@quotient+2,c
  3558  003862  0E00               	movlw	0
  3559  003864  6E10               	movwf	___lldiv@quotient+3,c
  3560  003866  5009               	movf	___lldiv@divisor,w,c
  3561  003868  100A               	iorwf	___lldiv@divisor+1,w,c
  3562  00386A  100B               	iorwf	___lldiv@divisor+2,w,c
  3563  00386C  100C               	iorwf	___lldiv@divisor+3,w,c
  3564  00386E  B4D8               	btfsc	status,2,c
  3565  003870  D02E               	goto	l637
  3566  003872  0E01               	movlw	1
  3567  003874  6E11               	movwf	___lldiv@counter,c
  3568  003876  D007               	goto	l4972
  3569  003878                     l4970:
  3570  003878  FFFF               	dw	65535	; assembler added errata NOP
  3571  00387A  90D8               	bcf	status,0,c
  3572  00387C  3609               	rlcf	___lldiv@divisor,f,c
  3573  00387E  360A               	rlcf	___lldiv@divisor+1,f,c
  3574  003880  360B               	rlcf	___lldiv@divisor+2,f,c
  3575  003882  360C               	rlcf	___lldiv@divisor+3,f,c
  3576  003884  2A11               	incf	___lldiv@counter,f,c
  3577  003886                     l4972:
  3578  003886  FFFF               	dw	65535	; assembler added errata NOP
  3579  003888  AE0C               	btfss	___lldiv@divisor+3,7,c
  3580  00388A  D7F6               	goto	l4970
  3581  00388C                     u5260:
  3582  00388C  FFFF               	dw	65535	; assembler added errata NOP
  3583  00388E  90D8               	bcf	status,0,c
  3584  003890  360D               	rlcf	___lldiv@quotient,f,c
  3585  003892  360E               	rlcf	___lldiv@quotient+1,f,c
  3586  003894  360F               	rlcf	___lldiv@quotient+2,f,c
  3587  003896  3610               	rlcf	___lldiv@quotient+3,f,c
  3588  003898  5009               	movf	___lldiv@divisor,w,c
  3589  00389A  5C05               	subwf	___lldiv@dividend,w,c
  3590  00389C  500A               	movf	___lldiv@divisor+1,w,c
  3591  00389E  5806               	subwfb	___lldiv@dividend+1,w,c
  3592  0038A0  500B               	movf	___lldiv@divisor+2,w,c
  3593  0038A2  5807               	subwfb	___lldiv@dividend+2,w,c
  3594  0038A4  500C               	movf	___lldiv@divisor+3,w,c
  3595  0038A6  5808               	subwfb	___lldiv@dividend+3,w,c
  3596  0038A8  A0D8               	btfss	status,0,c
  3597  0038AA  D009               	goto	l4982
  3598  0038AC  5009               	movf	___lldiv@divisor,w,c
  3599  0038AE  5E05               	subwf	___lldiv@dividend,f,c
  3600  0038B0  500A               	movf	___lldiv@divisor+1,w,c
  3601  0038B2  5A06               	subwfb	___lldiv@dividend+1,f,c
  3602  0038B4  500B               	movf	___lldiv@divisor+2,w,c
  3603  0038B6  5A07               	subwfb	___lldiv@dividend+2,f,c
  3604  0038B8  500C               	movf	___lldiv@divisor+3,w,c
  3605  0038BA  5A08               	subwfb	___lldiv@dividend+3,f,c
  3606  0038BC  800D               	bsf	___lldiv@quotient,0,c
  3607  0038BE                     l4982:
  3608  0038BE  FFFF               	dw	65535	; assembler added errata NOP
  3609  0038C0  90D8               	bcf	status,0,c
  3610  0038C2  320C               	rrcf	___lldiv@divisor+3,f,c
  3611  0038C4  320B               	rrcf	___lldiv@divisor+2,f,c
  3612  0038C6  320A               	rrcf	___lldiv@divisor+1,f,c
  3613  0038C8  3209               	rrcf	___lldiv@divisor,f,c
  3614  0038CA  2E11               	decfsz	___lldiv@counter,f,c
  3615  0038CC  D7DF               	goto	u5260
  3616  0038CE                     l637:
  3617  0038CE  FFFF               	dw	65535	; assembler added errata NOP
  3618  0038D0  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3619  0038D4  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3620  0038D8  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3621  0038DC  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3622  0038E0  0012               	return		;funcret
  3623  0038E2  FFFF               	dw	65535	; errata NOP
  3624  0038E4                     __end_of___lldiv:
  3625                           	opt callstack 0
  3626                           
  3627 ;; *************** function ___fltol *****************
  3628 ;; Defined at:
  3629 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  f1              4   61[COMRAM] unsigned long 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  exp1            1   70[COMRAM] unsigned char 
  3634 ;;  sign1           1   69[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  4   61[COMRAM] long 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3644 ;;      Params:         4       0       0       0       0       0       0
  3645 ;;      Locals:         2       0       0       0       0       0       0
  3646 ;;      Temps:          4       0       0       0       0       0       0
  3647 ;;      Totals:        10       0       0       0       0       0       0
  3648 ;;Total ram usage:       10 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    2
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;;		_write_SRAM
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text11
  3660  0033E2                     __ptext11:
  3661                           	opt callstack 0
  3662  0033E2                     ___fltol:
  3663                           	opt callstack 0
  3664  0033E2  FFFF               	dw	65535	; assembler added errata NOP
  3665                           
  3666                           ;incstack = 0
  3667  0033E4  3440               	rlcf	___fltol@f1+2,w,c
  3668  0033E6  3441               	rlcf	___fltol@f1+3,w,c
  3669  0033E8  6E47               	movwf	___fltol@exp1,c
  3670  0033EA  5047               	movf	___fltol@exp1,w,c
  3671  0033EC  A4D8               	btfss	status,2,c
  3672  0033EE  D00A               	goto	l4992
  3673  0033F0                     u5280:
  3674  0033F0  FFFF               	dw	65535	; assembler added errata NOP
  3675  0033F2  0E00               	movlw	0
  3676  0033F4  6E3E               	movwf	?___fltol,c
  3677  0033F6  0E00               	movlw	0
  3678  0033F8  6E3F               	movwf	?___fltol+1,c
  3679  0033FA  0E00               	movlw	0
  3680  0033FC  6E40               	movwf	?___fltol+2,c
  3681  0033FE  0E00               	movlw	0
  3682  003400  6E41               	movwf	?___fltol+3,c
  3683  003402  D056               	goto	l907
  3684  003404                     l4992:
  3685  003404  FFFF               	dw	65535	; assembler added errata NOP
  3686  003406  C03E  F042         	movff	___fltol@f1,??___fltol
  3687  00340A  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  3688  00340E  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  3689  003412  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  3690  003416  0E20               	movlw	32
  3691  003418  D006               	goto	u5290
  3692  00341A                     u5295:
  3693  00341A  FFFF               	dw	65535	; assembler added errata NOP
  3694  00341C  90D8               	bcf	status,0,c
  3695  00341E  3245               	rrcf	??___fltol+3,f,c
  3696  003420  3244               	rrcf	??___fltol+2,f,c
  3697  003422  3243               	rrcf	??___fltol+1,f,c
  3698  003424  3242               	rrcf	??___fltol,f,c
  3699  003426                     u5290:
  3700  003426  FFFF               	dw	65535	; assembler added errata NOP
  3701  003428  2EE8               	decfsz	wreg,f,c
  3702  00342A  D7F7               	goto	u5295
  3703  00342C  5042               	movf	??___fltol,w,c
  3704  00342E  6E46               	movwf	___fltol@sign1,c
  3705  003430  8E40               	bsf	___fltol@f1+2,7,c
  3706  003432  0EFF               	movlw	255
  3707  003434  163E               	andwf	___fltol@f1,f,c
  3708  003436  0EFF               	movlw	255
  3709  003438  163F               	andwf	___fltol@f1+1,f,c
  3710  00343A  0EFF               	movlw	255
  3711  00343C  1640               	andwf	___fltol@f1+2,f,c
  3712  00343E  0E00               	movlw	0
  3713  003440  1641               	andwf	___fltol@f1+3,f,c
  3714  003442  0E96               	movlw	150
  3715  003444  5E47               	subwf	___fltol@exp1,f,c
  3716  003446  AE47               	btfss	___fltol@exp1,7,c
  3717  003448  D00E               	goto	l5012
  3718  00344A  5047               	movf	___fltol@exp1,w,c
  3719  00344C  0A80               	xorlw	128
  3720  00344E  0F97               	addlw	151
  3721  003450  A0D8               	btfss	status,0,c
  3722  003452  D7CE               	goto	u5280
  3723  003454                     l5008:
  3724  003454  FFFF               	dw	65535	; assembler added errata NOP
  3725  003456  90D8               	bcf	status,0,c
  3726  003458  3241               	rrcf	___fltol@f1+3,f,c
  3727  00345A  3240               	rrcf	___fltol@f1+2,f,c
  3728  00345C  323F               	rrcf	___fltol@f1+1,f,c
  3729  00345E  323E               	rrcf	___fltol@f1,f,c
  3730  003460  3E47               	incfsz	___fltol@exp1,f,c
  3731  003462  D7F8               	goto	l5008
  3732  003464  D010               	goto	u5330
  3733  003466                     l5012:
  3734  003466  FFFF               	dw	65535	; assembler added errata NOP
  3735  003468  0E1F               	movlw	31
  3736  00346A  6447               	cpfsgt	___fltol@exp1,c
  3737  00346C  D008               	goto	l5020
  3738  00346E  D7C0               	goto	u5280
  3739  003470                     l5018:
  3740  003470  FFFF               	dw	65535	; assembler added errata NOP
  3741  003472  90D8               	bcf	status,0,c
  3742  003474  363E               	rlcf	___fltol@f1,f,c
  3743  003476  363F               	rlcf	___fltol@f1+1,f,c
  3744  003478  3640               	rlcf	___fltol@f1+2,f,c
  3745  00347A  3641               	rlcf	___fltol@f1+3,f,c
  3746  00347C  0647               	decf	___fltol@exp1,f,c
  3747  00347E                     l5020:
  3748  00347E  FFFF               	dw	65535	; assembler added errata NOP
  3749  003480  5047               	movf	___fltol@exp1,w,c
  3750  003482  A4D8               	btfss	status,2,c
  3751  003484  D7F5               	goto	l5018
  3752  003486                     u5330:
  3753  003486  FFFF               	dw	65535	; assembler added errata NOP
  3754  003488  5046               	movf	___fltol@sign1,w,c
  3755  00348A  B4D8               	btfsc	status,2,c
  3756  00348C  D008               	goto	l5026
  3757  00348E  1E41               	comf	___fltol@f1+3,f,c
  3758  003490  1E40               	comf	___fltol@f1+2,f,c
  3759  003492  1E3F               	comf	___fltol@f1+1,f,c
  3760  003494  6C3E               	negf	___fltol@f1,c
  3761  003496  0E00               	movlw	0
  3762  003498  223F               	addwfc	___fltol@f1+1,f,c
  3763  00349A  2240               	addwfc	___fltol@f1+2,f,c
  3764  00349C  2241               	addwfc	___fltol@f1+3,f,c
  3765  00349E                     l5026:
  3766  00349E  FFFF               	dw	65535	; assembler added errata NOP
  3767  0034A0  C03E  F03E         	movff	___fltol@f1,?___fltol
  3768  0034A4  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  3769  0034A8  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  3770  0034AC  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  3771  0034B0                     l907:
  3772  0034B0  FFFF               	dw	65535	; assembler added errata NOP
  3773  0034B2  0012               	return		;funcret
  3774  0034B4  FFFF               	dw	65535	; errata NOP
  3775  0034B6                     __end_of___fltol:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _Timer0_StopTimer *****************
  3779 ;; Defined at:
  3780 ;;		line 26 in file "timer.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2  139[None  ] int 
  3787 ;; Registers used:
  3788 ;;		None
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3794 ;;      Params:         0       0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    2
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_write_SRAM
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text12
  3809  000038                     __ptext12:
  3810                           	opt callstack 0
  3811  000038                     _Timer0_StopTimer:
  3812                           	opt callstack 0
  3813  000038  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  3816                           
  3817                           ;incstack = 0
  3818  00003A  9ED5               	bcf	4053,7,c	;volatile
  3819                           
  3820                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  3821  00003C  0012               	return		;funcret
  3822  00003E  FFFF               	dw	65535	; errata NOP
  3823  000040                     __end_of_Timer0_StopTimer:
  3824                           	opt callstack 0
  3825                           
  3826 ;; *************** function _Timer0_StartTimer *****************
  3827 ;; Defined at:
  3828 ;;		line 21 in file "timer.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2  109[None  ] int 
  3835 ;; Registers used:
  3836 ;;		None
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3842 ;;      Params:         0       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    2
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;;		_write_SRAM
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text13
  3858  000040                     __ptext13:
  3859                           	opt callstack 0
  3860  000040                     _Timer0_StartTimer:
  3861                           	opt callstack 0
  3862  000040  FFFF               	dw	65535	; assembler added errata NOP
  3863                           
  3864                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  3865                           
  3866                           ;incstack = 0
  3867  000042  8ED5               	bsf	4053,7,c	;volatile
  3868                           
  3869                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  3870  000044  0012               	return		;funcret
  3871  000046  FFFF               	dw	65535	; errata NOP
  3872  000048                     __end_of_Timer0_StartTimer:
  3873                           	opt callstack 0
  3874                           
  3875 ;; *************** function _ReadTime *****************
  3876 ;; Defined at:
  3877 ;;		line 17 in file "timer.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  4    0[COMRAM] unsigned long 
  3884 ;; Registers used:
  3885 ;;		None
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3891 ;;      Params:         4       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0
  3894 ;;      Totals:         4       0       0       0       0       0       0
  3895 ;;Total ram usage:        4 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_write_SRAM
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text14
  3906  003F4C                     __ptext14:
  3907                           	opt callstack 0
  3908  003F4C                     _ReadTime:
  3909                           	opt callstack 0
  3910  003F4C  FFFF               	dw	65535	; assembler added errata NOP
  3911                           
  3912                           ;timer.c: 18:  return time_ms;
  3913                           
  3914                           ;incstack = 0
  3915  003F4E  C0C4  F001         	movff	_time_ms,?_ReadTime	;volatile
  3916  003F52  C0C5  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  3917  003F56  C0C6  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  3918  003F5A  C0C7  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  3919  003F5E  0012               	return		;funcret
  3920  003F60  FFFF               	dw	65535	; errata NOP
  3921  003F62                     __end_of_ReadTime:
  3922                           	opt callstack 0
  3923                           
  3924 ;; *************** function _set_duty_cycle *****************
  3925 ;; Defined at:
  3926 ;;		line 18 in file "pwm.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  upper_8         1    wreg     unsigned char 
  3929 ;;  lower_2         1    0[COMRAM] unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  upper_8         1    1[COMRAM] unsigned char 
  3932 ;;  mask            1    2[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         1       0       0       0       0       0       0
  3943 ;;      Locals:         2       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0
  3945 ;;      Totals:         3       0       0       0       0       0       0
  3946 ;;Total ram usage:        3 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    2
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text15
  3957  003EF0                     __ptext15:
  3958                           	opt callstack 0
  3959  003EF0                     _set_duty_cycle:
  3960                           	opt callstack 0
  3961  003EF0  FFFF               	dw	65535	; assembler added errata NOP
  3962                           
  3963                           ;incstack = 0
  3964                           ;set_duty_cycle@upper_8 stored from wreg
  3965  003EF2  6E02               	movwf	set_duty_cycle@upper_8,c
  3966                           
  3967                           ;pwm.c: 19:   CCPR1L = upper_8;
  3968  003EF4  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  3969                           
  3970                           ;pwm.c: 20:   char mask = 0;
  3971  003EF8  0E00               	movlw	0
  3972  003EFA  6E03               	movwf	set_duty_cycle@mask,c
  3973                           
  3974                           ;pwm.c: 21:   mask |= lower_2;
  3975  003EFC  5001               	movf	set_duty_cycle@lower_2,w,c
  3976  003EFE  1203               	iorwf	set_duty_cycle@mask,f,c
  3977                           
  3978                           ;pwm.c: 22:   mask = mask << 4;
  3979  003F00  3803               	swapf	set_duty_cycle@mask,w,c
  3980  003F02  0BF0               	andlw	240
  3981  003F04  6E03               	movwf	set_duty_cycle@mask,c
  3982                           
  3983                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  3984  003F06  50BD               	movf	4029,w,c	;volatile
  3985  003F08  0BCF               	andlw	207
  3986  003F0A  1003               	iorwf	set_duty_cycle@mask,w,c
  3987  003F0C  6EBD               	movwf	4029,c	;volatile
  3988  003F0E  0012               	return		;funcret
  3989  003F10  FFFF               	dw	65535	; errata NOP
  3990  003F12                     __end_of_set_duty_cycle:
  3991                           	opt callstack 0
  3992                           
  3993 ;; *************** function _read_SRAM *****************
  3994 ;; Defined at:
  3995 ;;		line 91 in file "main.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  address         2   38[BANK0 ] int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  time_elapsed    2   44[BANK0 ] int 
  4000 ;;  stored_temp     2   42[BANK0 ] int 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4010 ;;      Params:         0       2       0       0       0       0       0
  4011 ;;      Locals:         0       4       0       0       0       0       0
  4012 ;;      Temps:          0       2       0       0       0       0       0
  4013 ;;      Totals:         0       8       0       0       0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:   11
  4017 ;; This function calls:
  4018 ;;		_UARTNewLine
  4019 ;;		_UARTSendString
  4020 ;;		_int_to_char
  4021 ;;		_read_op
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text16
  4028  0031D6                     __ptext16:
  4029                           	opt callstack 0
  4030  0031D6                     _read_SRAM:
  4031                           	opt callstack 0
  4032  0031D6  FFFF               	dw	65535	; assembler added errata NOP
  4033                           
  4034                           ;main.c: 92:   int stored_temp = read_op(address);
  4035                           
  4036                           ;incstack = 0
  4037  0031D8  0100               	movlb	0	; () banked
  4038  0031DA  51A6               	movf	read_SRAM@address& (0+255),w,b
  4039  0031DC  EC89  F01F         	call	_read_op
  4040  0031E0  0100               	movlb	0	; () banked
  4041  0031E2  6FA8               	movwf	??_read_SRAM& (0+255),b
  4042  0031E4  51A8               	movf	??_read_SRAM& (0+255),w,b
  4043  0031E6  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  4044  0031E8  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  4045                           
  4046                           ;main.c: 93:   int time_elapsed = read_op(address + 1);
  4047  0031EA  29A6               	incf	read_SRAM@address& (0+255),w,b
  4048  0031EC  EC89  F01F         	call	_read_op
  4049  0031F0  0100               	movlb	0	; () banked
  4050  0031F2  6FA8               	movwf	??_read_SRAM& (0+255),b
  4051  0031F4  51A8               	movf	??_read_SRAM& (0+255),w,b
  4052  0031F6  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  4053  0031F8  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 94:   TRISCbits.TRISC7 = 0;
  4057  0031FA  9E94               	bcf	3988,7,c	;volatile
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 95:   UARTSendString("Temperature at address ");
  4061  0031FC  0E38               	movlw	low STR_4
  4062  0031FE  6FA0               	movwf	UARTSendString@c& (0+255),b
  4063  003200  0E06               	movlw	high STR_4
  4064  003202  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4065  003204  ECB7  F01C         	call	_UARTSendString	;wreg free
  4066                           
  4067                           ;main.c: 96:   UARTSendString(int_to_char(address));
  4068  003208  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  4069  00320C  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  4070  003210  0E00               	movlw	0
  4071  003212  BE7B               	btfsc	int_to_char@num+1,7,c
  4072  003214  0EFF               	movlw	-1
  4073  003216  6E7C               	movwf	int_to_char@num+2,c
  4074  003218  6E7D               	movwf	int_to_char@num+3,c
  4075  00321A  ECFB  F01D         	call	_int_to_char	;wreg free
  4076  00321E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4077  003222  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4078  003226  ECB7  F01C         	call	_UARTSendString	;wreg free
  4079                           
  4080                           ;main.c: 97:   UARTSendString(": ");
  4081  00322A  0EEB               	movlw	low STR_5
  4082  00322C  0100               	movlb	0	; () banked
  4083  00322E  6FA0               	movwf	UARTSendString@c& (0+255),b
  4084  003230  0E06               	movlw	high STR_5
  4085  003232  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4086  003234  ECB7  F01C         	call	_UARTSendString	;wreg free
  4087                           
  4088                           ;main.c: 98:   UARTSendString(int_to_char(stored_temp));
  4089  003238  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  4090  00323C  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  4091  003240  0E00               	movlw	0
  4092  003242  BE7B               	btfsc	int_to_char@num+1,7,c
  4093  003244  0EFF               	movlw	-1
  4094  003246  6E7C               	movwf	int_to_char@num+2,c
  4095  003248  6E7D               	movwf	int_to_char@num+3,c
  4096  00324A  ECFB  F01D         	call	_int_to_char	;wreg free
  4097  00324E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4098  003252  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4099  003256  ECB7  F01C         	call	_UARTSendString	;wreg free
  4100                           
  4101                           ;main.c: 99:   UARTSendString(" degrees C ");
  4102  00325A  0E86               	movlw	low STR_6
  4103  00325C  0100               	movlb	0	; () banked
  4104  00325E  6FA0               	movwf	UARTSendString@c& (0+255),b
  4105  003260  0E06               	movlw	high STR_6
  4106  003262  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4107  003264  ECB7  F01C         	call	_UARTSendString	;wreg free
  4108                           
  4109                           ;main.c: 100:   UARTNewLine();
  4110  003268  ECB1  F01F         	call	_UARTNewLine	;wreg free
  4111                           
  4112                           ;main.c: 101:   UARTSendString("Time at address ");
  4113  00326C  0E68               	movlw	low STR_7
  4114  00326E  0100               	movlb	0	; () banked
  4115  003270  6FA0               	movwf	UARTSendString@c& (0+255),b
  4116  003272  0E06               	movlw	high STR_7
  4117  003274  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4118  003276  ECB7  F01C         	call	_UARTSendString	;wreg free
  4119                           
  4120                           ;main.c: 102:   UARTSendString(int_to_char(address + 1));
  4121  00327A  0E01               	movlw	1
  4122  00327C  0100               	movlb	0	; () banked
  4123  00327E  25A6               	addwf	read_SRAM@address& (0+255),w,b
  4124  003280  6FA8               	movwf	??_read_SRAM& (0+255),b
  4125  003282  0E00               	movlw	0
  4126  003284  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  4127  003286  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4128  003288  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  4129  00328C  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  4130  003290  0E00               	movlw	0
  4131  003292  BE7B               	btfsc	int_to_char@num+1,7,c
  4132  003294  0EFF               	movlw	-1
  4133  003296  6E7C               	movwf	int_to_char@num+2,c
  4134  003298  6E7D               	movwf	int_to_char@num+3,c
  4135  00329A  ECFB  F01D         	call	_int_to_char	;wreg free
  4136  00329E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4137  0032A2  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4138  0032A6  ECB7  F01C         	call	_UARTSendString	;wreg free
  4139                           
  4140                           ;main.c: 103:   UARTSendString(": ");
  4141  0032AA  0EEB               	movlw	low STR_5
  4142  0032AC  0100               	movlb	0	; () banked
  4143  0032AE  6FA0               	movwf	UARTSendString@c& (0+255),b
  4144  0032B0  0E06               	movlw	high STR_5
  4145  0032B2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4146  0032B4  ECB7  F01C         	call	_UARTSendString	;wreg free
  4147                           
  4148                           ;main.c: 104:   UARTSendString(int_to_char(time_elapsed));
  4149  0032B8  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  4150  0032BC  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  4151  0032C0  0E00               	movlw	0
  4152  0032C2  BE7B               	btfsc	int_to_char@num+1,7,c
  4153  0032C4  0EFF               	movlw	-1
  4154  0032C6  6E7C               	movwf	int_to_char@num+2,c
  4155  0032C8  6E7D               	movwf	int_to_char@num+3,c
  4156  0032CA  ECFB  F01D         	call	_int_to_char	;wreg free
  4157  0032CE  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4158  0032D2  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4159  0032D6  ECB7  F01C         	call	_UARTSendString	;wreg free
  4160                           
  4161                           ;main.c: 105:   UARTSendString(" minutes");
  4162  0032DA  0E9B               	movlw	low STR_9
  4163  0032DC  0100               	movlb	0	; () banked
  4164  0032DE  6FA0               	movwf	UARTSendString@c& (0+255),b
  4165  0032E0  0E06               	movlw	high STR_9
  4166  0032E2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4167  0032E4  ECB7  F01C         	call	_UARTSendString	;wreg free
  4168                           
  4169                           ;main.c: 106:   UARTNewLine();
  4170  0032E8  ECB1  F01F         	call	_UARTNewLine	;wreg free
  4171                           
  4172                           ;main.c: 107:   UARTSendString("Done reading from memory.");
  4173  0032EC  0E1E               	movlw	low STR_10
  4174  0032EE  0100               	movlb	0	; () banked
  4175  0032F0  6FA0               	movwf	UARTSendString@c& (0+255),b
  4176  0032F2  0E06               	movlw	high STR_10
  4177  0032F4  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4178  0032F6  ECB7  F01C         	call	_UARTSendString	;wreg free
  4179                           
  4180                           ;main.c: 108:   UARTNewLine();
  4181  0032FA  ECB1  F01F         	call	_UARTNewLine	;wreg free
  4182                           
  4183                           ;main.c: 109:   UARTNewLine();
  4184  0032FE  ECB1  F01F         	call	_UARTNewLine	;wreg free
  4185  003302  0012               	return		;funcret
  4186  003304  FFFF               	dw	65535	; errata NOP
  4187  003306                     __end_of_read_SRAM:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _read_op *****************
  4191 ;; Defined at:
  4192 ;;		line 30 in file "drive_memory.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  address         1    wreg     unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  address         1    0[COMRAM] unsigned char 
  4197 ;;  result          1    1[COMRAM] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      unsigned char 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       0       0       0       0       0       0
  4208 ;;      Locals:         2       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         2       0       0       0       0       0       0
  4211 ;;Total ram usage:        2 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_read_SRAM
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text17
  4222  003F12                     __ptext17:
  4223                           	opt callstack 0
  4224  003F12                     _read_op:
  4225                           	opt callstack 0
  4226  003F12  FFFF               	dw	65535	; assembler added errata NOP
  4227                           
  4228                           ;incstack = 0
  4229                           ;read_op@address stored from wreg
  4230  003F14  6E01               	movwf	read_op@address,c
  4231                           
  4232                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  4233  003F16  9094               	bcf	3988,0,c	;volatile
  4234                           
  4235                           ;drive_memory.c: 33:   TRISD = 0xFF;
  4236  003F18  6895               	setf	3989,c	;volatile
  4237                           
  4238                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  4239  003F1A  0EC0               	movlw	192
  4240  003F1C  1693               	andwf	3987,f,c	;volatile
  4241                           
  4242                           ;drive_memory.c: 35:   PORTB = address;
  4243  003F1E  C001  FF81         	movff	read_op@address,3969	;volatile
  4244                           
  4245                           ;drive_memory.c: 36:   RB5 = 1;
  4246  003F22  8A81               	bsf	3969,5,c	;volatile
  4247                           
  4248                           ;drive_memory.c: 38:   RC0 = 1;
  4249  003F24  8082               	bsf	3970,0,c	;volatile
  4250                           
  4251                           ;drive_memory.c: 41:   RB5 = 0;
  4252  003F26  9A81               	bcf	3969,5,c	;volatile
  4253                           
  4254                           ;drive_memory.c: 45:   RB5 = 1;
  4255                           
  4256                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  4257  003F28  8A81               	bsf	3969,5,c	;volatile
  4258                           
  4259                           ;drive_memory.c: 46:   char result = PORTD;
  4260  003F2A  CF83 F002          	movff	3971,read_op@result	;volatile
  4261                           
  4262                           ;drive_memory.c: 47:   return result;
  4263  003F2E  5002               	movf	read_op@result,w,c
  4264  003F30  0012               	return		;funcret
  4265  003F32  FFFF               	dw	65535	; errata NOP
  4266  003F34                     __end_of_read_op:
  4267                           	opt callstack 0
  4268                           
  4269 ;; *************** function _int_to_char *****************
  4270 ;; Defined at:
  4271 ;;		line 18 in file "lcd.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  num             4  121[COMRAM] unsigned long 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  result         10   18[BANK0 ] unsigned char [10]
  4276 ;;  the_num         4   28[BANK0 ] unsigned long 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  2  121[COMRAM] PTR unsigned char 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4286 ;;      Params:         4       0       0       0       0       0       0
  4287 ;;      Locals:         0      14       0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0
  4289 ;;      Totals:         4      14       0       0       0       0       0
  4290 ;;Total ram usage:       18 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:   10
  4293 ;; This function calls:
  4294 ;;		_getchar
  4295 ;;		_sprintf
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_read_SRAM
  4299 ;;		_write_SRAM
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text18
  4304  003BF6                     __ptext18:
  4305                           	opt callstack 0
  4306  003BF6                     _int_to_char:
  4307                           	opt callstack 0
  4308  003BF6  FFFF               	dw	65535	; assembler added errata NOP
  4309                           
  4310                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  4311                           
  4312                           ;incstack = 0
  4313  003BF8  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  4314  003BFC  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  4315  003C00  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  4316  003C04  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  4317                           
  4318                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  4319  003C08  0E92               	movlw	low int_to_char@result
  4320  003C0A  0100               	movlb	0	; () banked
  4321  003C0C  6F80               	movwf	sprintf@s& (0+255),b
  4322  003C0E  0E00               	movlw	high int_to_char@result
  4323  003C10  6F81               	movwf	(sprintf@s+1)& (0+255),b
  4324  003C12  0EC0               	movlw	low STR_1
  4325  003C14  6F82               	movwf	sprintf@fmt& (0+255),b
  4326  003C16  0E06               	movlw	high STR_1
  4327  003C18  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  4328  003C1A  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  4329  003C1E  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  4330  003C22  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  4331  003C26  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  4332  003C2A  EC2B  F01D         	call	_sprintf	;wreg free
  4333                           
  4334                           ;lcd.c: 22:   getchar();
  4335  003C2E  ECD9  F01F         	call	_getchar	;wreg free
  4336                           
  4337                           ;lcd.c: 23:   return result;
  4338  003C32  0E92               	movlw	low int_to_char@result
  4339  003C34  6E7A               	movwf	?_int_to_char,c
  4340  003C36  0E00               	movlw	high int_to_char@result
  4341  003C38  6E7B               	movwf	?_int_to_char+1,c
  4342  003C3A  0012               	return		;funcret
  4343  003C3C  FFFF               	dw	65535	; errata NOP
  4344  003C3E                     __end_of_int_to_char:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _sprintf *****************
  4348 ;; Defined at:
  4349 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4352 ;;		 -> int_to_char@result(10), 
  4353 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4354 ;;		 -> STR_1(4), 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  f               6   10[BANK0 ] struct _IO_FILE
  4357 ;;  ap              2   16[BANK0 ] PTR void [1]
  4358 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4359 ;;  ret             2    0        int 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  2    0[BANK0 ] int 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         0       8       0       0       0       0       0
  4370 ;;      Locals:         0      10       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0
  4372 ;;      Totals:         0      18       0       0       0       0       0
  4373 ;;Total ram usage:       18 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    9
  4376 ;; This function calls:
  4377 ;;		_vfprintf
  4378 ;; This function is called by:
  4379 ;;		_int_to_char
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text19
  4384  003A56                     __ptext19:
  4385                           	opt callstack 0
  4386  003A56                     _sprintf:
  4387                           	opt callstack 0
  4388  003A56  FFFF               	dw	65535	; assembler added errata NOP
  4389                           
  4390                           ;incstack = 0
  4391  003A58  0E84               	movlw	low (?_sprintf+4)
  4392  003A5A  0100               	movlb	0	; () banked
  4393  003A5C  6F90               	movwf	sprintf@ap& (0+255),b
  4394  003A5E  0E00               	movlw	high (?_sprintf+4)
  4395  003A60  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  4396  003A62  C080  F08A         	movff	sprintf@s,sprintf@f
  4397  003A66  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  4398                           
  4399                           ; BSR set to: 0
  4400  003A6A  0E00               	movlw	0
  4401  003A6C  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  4402  003A6E  0E00               	movlw	0
  4403  003A70  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  4404                           
  4405                           ; BSR set to: 0
  4406  003A72  0E00               	movlw	0
  4407  003A74  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  4408  003A76  0E00               	movlw	0
  4409  003A78  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  4410                           
  4411                           ; BSR set to: 0
  4412  003A7A  0E8A               	movlw	low sprintf@f
  4413  003A7C  6E72               	movwf	vfprintf@fp,c
  4414  003A7E  0E00               	movlw	high sprintf@f
  4415  003A80  6E73               	movwf	vfprintf@fp+1,c
  4416  003A82  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  4417  003A86  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4418  003A8A  0E90               	movlw	low sprintf@ap
  4419  003A8C  6E76               	movwf	vfprintf@ap,c
  4420  003A8E  0E00               	movlw	high sprintf@ap
  4421  003A90  6E77               	movwf	vfprintf@ap+1,c
  4422  003A92  ECFB  F01C         	call	_vfprintf	;wreg free
  4423  003A96  0100               	movlb	0	; () banked
  4424  003A98  518C               	movf	(sprintf@f+2)& (0+255),w,b
  4425  003A9A  2580               	addwf	sprintf@s& (0+255),w,b
  4426  003A9C  6ED9               	movwf	fsr2l,c
  4427  003A9E  518D               	movf	(sprintf@f+3)& (0+255),w,b
  4428  003AA0  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  4429  003AA2  6EDA               	movwf	fsr2h,c
  4430  003AA4  0E00               	movlw	0
  4431  003AA6  6EDF               	movwf	indf2,c
  4432                           
  4433                           ; BSR set to: 0
  4434  003AA8  0012               	return		;funcret
  4435  003AAA  FFFF               	dw	65535	; errata NOP
  4436  003AAC                     __end_of_sprintf:
  4437                           	opt callstack 0
  4438                           
  4439 ;; *************** function _vfprintf *****************
  4440 ;; Defined at:
  4441 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  4444 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4445 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  4446 ;;		 -> STR_2(3), STR_1(4), 
  4447 ;;  ap              2  117[COMRAM] PTR PTR void 
  4448 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  4451 ;;		 -> STR_2(3), STR_1(4), 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2  113[COMRAM] int 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4461 ;;      Params:         6       0       0       0       0       0       0
  4462 ;;      Locals:         2       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0
  4464 ;;      Totals:         8       0       0       0       0       0       0
  4465 ;;Total ram usage:        8 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    8
  4468 ;; This function calls:
  4469 ;;		_vfpfcnvrt
  4470 ;; This function is called by:
  4471 ;;		_sprintf
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text20
  4476  0039F6                     __ptext20:
  4477                           	opt callstack 0
  4478  0039F6                     _vfprintf:
  4479                           	opt callstack 0
  4480  0039F6  FFFF               	dw	65535	; assembler added errata NOP
  4481                           
  4482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;incstack = 0
  4486  0039F8  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  4487  0039FC  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4488                           
  4489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4490  003A00  0E00               	movlw	0
  4491  003A02  0100               	movlb	0	; () banked
  4492  003A04  6FCB               	movwf	(_nout+1)& (0+255),b
  4493  003A06  0E00               	movlw	0
  4494  003A08  6FCA               	movwf	_nout& (0+255),b
  4495                           
  4496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4497  003A0A  D014               	goto	l4410
  4498  003A0C                     l4408:
  4499  003A0C  FFFF               	dw	65535	; assembler added errata NOP
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4503  003A0E  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4504  003A12  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4505  003A16  0E78               	movlw	low vfprintf@cfmt
  4506  003A18  6E45               	movwf	vfpfcnvrt@fmt,c
  4507  003A1A  0E00               	movlw	high vfprintf@cfmt
  4508  003A1C  6E46               	movwf	vfpfcnvrt@fmt+1,c
  4509  003A1E  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4510  003A22  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4511  003A26  EC79  F003         	call	_vfpfcnvrt	;wreg free
  4512  003A2A  5043               	movf	?_vfpfcnvrt,w,c
  4513  003A2C  0100               	movlb	0	; () banked
  4514  003A2E  27CA               	addwf	_nout& (0+255),f,b
  4515  003A30  5044               	movf	?_vfpfcnvrt+1,w,c
  4516  003A32  23CB               	addwfc	(_nout+1)& (0+255),f,b
  4517  003A34                     l4410:
  4518  003A34  FFFF               	dw	65535	; assembler added errata NOP
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4522  003A36  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  4523  003A3A  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4524  003A3E                     	if	0	;tblptru may be non-zero
  4525  003A3E                     	endif
  4526  003A3E                     	if	0	;tblptru may be non-zero
  4527  003A3E                     	endif
  4528  003A3E  0008               	tblrd		*
  4529  003A40  FFFF               	dw	65535	; errata NOP
  4530  003A42  50F5               	movf	tablat,w,c
  4531  003A44  0900               	iorlw	0
  4532  003A46  A4D8               	btfss	status,2,c
  4533  003A48  D7E1               	goto	l4408
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4537  003A4A  C0CA  F072         	movff	_nout,?_vfprintf
  4538  003A4E  C0CB  F073         	movff	_nout+1,?_vfprintf+1
  4539                           
  4540                           ; BSR set to: 0
  4541  003A52  0012               	return		;funcret
  4542  003A54  FFFF               	dw	65535	; errata NOP
  4543  003A56                     __end_of_vfprintf:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _vfpfcnvrt *****************
  4547 ;; Defined at:
  4548 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4551 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4552 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4553 ;;		 -> vfprintf@cfmt(2), 
  4554 ;;  ap              2   70[COMRAM] PTR PTR void 
  4555 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  llu             8  105[COMRAM] unsigned long long 
  4558 ;;  ll              8   94[COMRAM] long long 
  4559 ;;  f               4    0        long long 
  4560 ;;  ct              3    0        unsigned char [3]
  4561 ;;  vp              2  102[COMRAM] PTR void 
  4562 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4563 ;;  done            2   88[COMRAM] int 
  4564 ;;  cp              2   86[COMRAM] PTR unsigned char 
  4565 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4566 ;;  i               2    0        int 
  4567 ;;  c               1  104[COMRAM] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  2   66[COMRAM] int 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4577 ;;      Params:         6       0       0       0       0       0       0
  4578 ;;      Locals:        27       0       0       0       0       0       0
  4579 ;;      Temps:         14       0       0       0       0       0       0
  4580 ;;      Totals:        47       0       0       0       0       0       0
  4581 ;;Total ram usage:       47 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    7
  4584 ;; This function calls:
  4585 ;;		_atoi
  4586 ;;		_ctoa
  4587 ;;		_dtoa
  4588 ;;		_fputc
  4589 ;;		_isdigit
  4590 ;;		_otoa
  4591 ;;		_stoa
  4592 ;;		_strncmp
  4593 ;;		_utoa
  4594 ;;		_xtoa
  4595 ;; This function is called by:
  4596 ;;		_vfprintf
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text21
  4601  0006F2                     __ptext21:
  4602                           	opt callstack 0
  4603  0006F2                     _vfpfcnvrt:
  4604                           	opt callstack 0
  4605  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  4606                           
  4607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;incstack = 0
  4611  0006F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4612  0006F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4613  0006FC  CFDE FFF6          	movff	postinc2,tblptrl
  4614  000700  CFDD FFF7          	movff	postdec2,tblptrh
  4615  000704                     	if	0	;tblptru may be non-zero
  4616  000704                     	endif
  4617  000704                     	if	0	;tblptru may be non-zero
  4618  000704                     	endif
  4619  000704  0008               	tblrd		*
  4620  000706  FFFF               	dw	65535	; errata NOP
  4621  000708  50F5               	movf	tablat,w,c
  4622  00070A  0A25               	xorlw	37
  4623  00070C  A4D8               	btfss	status,2,c
  4624  00070E  EF2A  F00C         	goto	l4388
  4625                           
  4626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  4627  000712  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4628  000716  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4629  00071A  2ADE               	incf	postinc2,f,c
  4630  00071C  0E00               	movlw	0
  4631  00071E  22DD               	addwfc	postdec2,f,c
  4632                           
  4633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  4634  000720  0E00               	movlw	0
  4635  000722  0100               	movlb	0	; () banked
  4636  000724  6FCD               	movwf	(_width+1)& (0+255),b
  4637  000726  0E00               	movlw	0
  4638  000728  6FCC               	movwf	_width& (0+255),b
  4639  00072A  C0CC  F0D0         	movff	_width,_flags
  4640  00072E  C0CD  F0D1         	movff	_width+1,_flags+1
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  4644  000732  69CE               	setf	_prec& (0+255),b
  4645  000734  69CF               	setf	(_prec+1)& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  4649  000736  0E00               	movlw	0
  4650  000738  6E5A               	movwf	vfpfcnvrt@done+1,c
  4651  00073A  0E00               	movlw	0
  4652  00073C  D020               	goto	L7
  4653  00073E                     l4030:
  4654  00073E  FFFF               	dw	65535	; assembler added errata NOP
  4655                           
  4656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  4657  000740  0100               	movlb	0	; () banked
  4658  000742  81D0               	bsf	_flags& (0+255),0,b
  4659  000744                     l4032:
  4660  000744  FFFF               	dw	65535	; assembler added errata NOP
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  4664  000746  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4665  00074A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4666  00074E  2ADE               	incf	postinc2,f,c
  4667  000750  0E00               	movlw	0
  4668  000752  22DD               	addwfc	postdec2,f,c
  4669                           
  4670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  4671  000754  D03A               	goto	l4056
  4672  000756                     l4034:
  4673  000756  FFFF               	dw	65535	; assembler added errata NOP
  4674                           
  4675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  4676  000758  0100               	movlb	0	; () banked
  4677  00075A  83D0               	bsf	_flags& (0+255),1,b
  4678  00075C  D7F3               	goto	l4032
  4679  00075E                     l4038:
  4680  00075E  FFFF               	dw	65535	; assembler added errata NOP
  4681                           
  4682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  4683  000760  0100               	movlb	0	; () banked
  4684  000762  85D0               	bsf	_flags& (0+255),2,b
  4685  000764  D7EF               	goto	l4032
  4686  000766                     l4042:
  4687  000766  FFFF               	dw	65535	; assembler added errata NOP
  4688                           
  4689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  4690  000768  0100               	movlb	0	; () banked
  4691  00076A  87D0               	bsf	_flags& (0+255),3,b
  4692  00076C  D7EB               	goto	l4032
  4693  00076E                     l4046:
  4694  00076E  FFFF               	dw	65535	; assembler added errata NOP
  4695                           
  4696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  4697  000770  0100               	movlb	0	; () banked
  4698  000772  89D0               	bsf	_flags& (0+255),4,b
  4699  000774  D7E7               	goto	l4032
  4700  000776                     l4050:
  4701  000776  FFFF               	dw	65535	; assembler added errata NOP
  4702                           
  4703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  4704  000778  0E00               	movlw	0
  4705  00077A  6E5A               	movwf	vfpfcnvrt@done+1,c
  4706  00077C  0E01               	movlw	1
  4707  00077E                     L7:
  4708  00077E  FFFF               	dw	65535	; assembler added errata NOP
  4709  000780  6E59               	movwf	vfpfcnvrt@done,c
  4710                           
  4711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  4712  000782  D023               	goto	l4056
  4713  000784                     l4054:
  4714  000784  FFFF               	dw	65535	; assembler added errata NOP
  4715  000786  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4716  00078A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4717  00078E  CFDE FFF6          	movff	postinc2,tblptrl
  4718  000792  CFDD FFF7          	movff	postdec2,tblptrh
  4719  000796                     	if	0	;tblptru may be non-zero
  4720  000796                     	endif
  4721  000796                     	if	0	;tblptru may be non-zero
  4722  000796                     	endif
  4723  000796  0008               	tblrd		*
  4724  000798  FFFF               	dw	65535	; errata NOP
  4725  00079A  50F5               	movf	tablat,w,c
  4726  00079C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4727  00079E  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  4728                           
  4729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 1, Range of values is 0 to 0
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte            4     3 (average)
  4735                           ;	Chosen strategy is simple_byte
  4736  0007A0  504A               	movf	??_vfpfcnvrt+1,w,c
  4737  0007A2  0A00               	xorlw	0	; case 0
  4738  0007A4  A4D8               	btfss	status,2,c
  4739  0007A6  D7E7               	goto	l4050
  4740                           
  4741                           ; Switch size 1, requested type "simple"
  4742                           ; Number of cases is 5, Range of values is 32 to 48
  4743                           ; switch strategies available:
  4744                           ; Name         Instructions Cycles
  4745                           ; simple_byte           16     9 (average)
  4746                           ;	Chosen strategy is simple_byte
  4747  0007A8  5049               	movf	??_vfpfcnvrt,w,c
  4748  0007AA  0A20               	xorlw	32	; case 32
  4749  0007AC  B4D8               	btfsc	status,2,c
  4750  0007AE  D7DB               	goto	l4042
  4751  0007B0  0A03               	xorlw	3	; case 35
  4752  0007B2  B4D8               	btfsc	status,2,c
  4753  0007B4  D7DC               	goto	l4046
  4754  0007B6  0A08               	xorlw	8	; case 43
  4755  0007B8  B4D8               	btfsc	status,2,c
  4756  0007BA  D7D1               	goto	l4038
  4757  0007BC  0A06               	xorlw	6	; case 45
  4758  0007BE  B4D8               	btfsc	status,2,c
  4759  0007C0  D7BE               	goto	l4030
  4760  0007C2  0A1D               	xorlw	29	; case 48
  4761  0007C4  B4D8               	btfsc	status,2,c
  4762  0007C6  D7C7               	goto	l4034
  4763  0007C8  D7D6               	goto	l4050
  4764  0007CA                     l4056:
  4765  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  4766                           
  4767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  4768  0007CC  5059               	movf	vfpfcnvrt@done,w,c
  4769  0007CE  105A               	iorwf	vfpfcnvrt@done+1,w,c
  4770  0007D0  B4D8               	btfsc	status,2,c
  4771  0007D2  D7D8               	goto	l4054
  4772                           
  4773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  4774  0007D4  0100               	movlb	0	; () banked
  4775  0007D6  B1D0               	btfsc	_flags& (0+255),0,b
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  4779  0007D8  93D0               	bcf	_flags& (0+255),1,b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  4783  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4784  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4785  0007E2  CFDE FFF6          	movff	postinc2,tblptrl
  4786  0007E6  CFDD FFF7          	movff	postdec2,tblptrh
  4787  0007EA                     	if	0	;tblptru may be non-zero
  4788  0007EA                     	endif
  4789  0007EA                     	if	0	;tblptru may be non-zero
  4790  0007EA                     	endif
  4791  0007EA  0008               	tblrd		*
  4792  0007EC  FFFF               	dw	65535	; errata NOP
  4793  0007EE  50F5               	movf	tablat,w,c
  4794  0007F0  0A2A               	xorlw	42
  4795  0007F2  A4D8               	btfss	status,2,c
  4796  0007F4  D023               	goto	l4068
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  4800  0007F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4801  0007FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4802  0007FE  2ADE               	incf	postinc2,f,c
  4803  000800  0E00               	movlw	0
  4804  000802  22DD               	addwfc	postdec2,f,c
  4805                           
  4806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  4807  000804  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4808  000808  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4809  00080C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4810  000810  0E02               	movlw	2
  4811  000812  26DE               	addwf	postinc2,f,c
  4812  000814  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4813  000818  0E00               	movlw	0
  4814  00081A  22DD               	addwfc	postdec2,f,c
  4815  00081C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4816  000820  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4817  000824  CFDE F0CC          	movff	postinc2,_width
  4818  000828  CFDD F0CD          	movff	postdec2,_width+1
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  4822  00082C  AFCD               	btfss	(_width+1)& (0+255),7,b
  4823  00082E  D045               	goto	u3990
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  4827  000830  81D0               	bsf	_flags& (0+255),0,b
  4828                           
  4829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  4830  000832  6DCC               	negf	_width& (0+255),b
  4831  000834  1FCD               	comf	(_width+1)& (0+255),f,b
  4832  000836  B0D8               	btfsc	status,0,c
  4833  000838  2BCD               	incf	(_width+1)& (0+255),f,b
  4834  00083A  D03F               	goto	u3990
  4835  00083C                     l4068:
  4836  00083C  FFFF               	dw	65535	; assembler added errata NOP
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  4840  00083E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4841  000842  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4842  000846  CFDE F008          	movff	postinc2,atoi@s
  4843  00084A  CFDD F009          	movff	postdec2,atoi@s+1
  4844  00084E  EC9E  F015         	call	_atoi	;wreg free
  4845  000852  C008  F0CC         	movff	?_atoi,_width
  4846  000856  C009  F0CD         	movff	?_atoi+1,_width+1
  4847                           
  4848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4849  00085A  D008               	goto	l4072
  4850  00085C                     l4070:
  4851  00085C  FFFF               	dw	65535	; assembler added errata NOP
  4852                           
  4853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  4854  00085E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4855  000862  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4856  000866  2ADE               	incf	postinc2,f,c
  4857  000868  0E00               	movlw	0
  4858  00086A  22DD               	addwfc	postdec2,f,c
  4859  00086C                     l4072:
  4860  00086C  FFFF               	dw	65535	; assembler added errata NOP
  4861  00086E  0ED0               	movlw	208
  4862  000870  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4863  000872  0EFF               	movlw	255
  4864  000874  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4865  000876  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4866  00087A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4867  00087E  CFDE FFF6          	movff	postinc2,tblptrl
  4868  000882  CFDD FFF7          	movff	postdec2,tblptrh
  4869  000886                     	if	0	;tblptru may be non-zero
  4870  000886                     	endif
  4871  000886                     	if	0	;tblptru may be non-zero
  4872  000886                     	endif
  4873  000886  0008               	tblrd		*
  4874  000888  FFFF               	dw	65535	; errata NOP
  4875  00088A  50F5               	movf	tablat,w,c
  4876  00088C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4877  00088E  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  4878  000890  5049               	movf	??_vfpfcnvrt,w,c
  4879  000892  264B               	addwf	??_vfpfcnvrt+2,f,c
  4880  000894  504A               	movf	??_vfpfcnvrt+1,w,c
  4881  000896  224C               	addwfc	??_vfpfcnvrt+3,f,c
  4882  000898  504C               	movf	??_vfpfcnvrt+3,w,c
  4883  00089A  E106               	bnz	u3970
  4884  00089C  0E0A               	movlw	10
  4885  00089E  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  4886  0008A0  B0D8               	btfsc	status,0,c
  4887  0008A2  D002               	goto	u3970
  4888  0008A4  0E01               	movlw	1
  4889  0008A6  D002               	goto	u3980
  4890  0008A8                     u3970:
  4891  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  4892  0008AA  0E00               	movlw	0
  4893  0008AC                     u3980:
  4894  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  4895  0008AE  6E5B               	movwf	_vfpfcnvrt$1126,c
  4896  0008B0  6A5C               	clrf	_vfpfcnvrt$1126+1,c
  4897  0008B2  505B               	movf	_vfpfcnvrt$1126,w,c
  4898  0008B4  105C               	iorwf	_vfpfcnvrt$1126+1,w,c
  4899  0008B6  A4D8               	btfss	status,2,c
  4900  0008B8  D7D1               	goto	l4070
  4901  0008BA                     u3990:
  4902  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  4903                           
  4904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  4905  0008BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4906  0008C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4907  0008C4  CFDE FFF6          	movff	postinc2,tblptrl
  4908  0008C8  CFDD FFF7          	movff	postdec2,tblptrh
  4909  0008CC                     	if	0	;tblptru may be non-zero
  4910  0008CC                     	endif
  4911  0008CC                     	if	0	;tblptru may be non-zero
  4912  0008CC                     	endif
  4913  0008CC  0008               	tblrd		*
  4914  0008CE  FFFF               	dw	65535	; errata NOP
  4915  0008D0  50F5               	movf	tablat,w,c
  4916  0008D2  0A2E               	xorlw	46
  4917  0008D4  A4D8               	btfss	status,2,c
  4918  0008D6  D075               	goto	u4040
  4919                           
  4920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  4921  0008D8  0E00               	movlw	0
  4922  0008DA  0100               	movlb	0	; () banked
  4923  0008DC  6FCF               	movwf	(_prec+1)& (0+255),b
  4924  0008DE  0E00               	movlw	0
  4925  0008E0  6FCE               	movwf	_prec& (0+255),b
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  4929  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4930  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4931  0008EA  2ADE               	incf	postinc2,f,c
  4932  0008EC  0E00               	movlw	0
  4933  0008EE  22DD               	addwfc	postdec2,f,c
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  4937  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4938  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4939  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  4940  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  4941  000900                     	if	0	;tblptru may be non-zero
  4942  000900                     	endif
  4943  000900                     	if	0	;tblptru may be non-zero
  4944  000900                     	endif
  4945  000900  0008               	tblrd		*
  4946  000902  FFFF               	dw	65535	; errata NOP
  4947  000904  50F5               	movf	tablat,w,c
  4948  000906  0A2A               	xorlw	42
  4949  000908  A4D8               	btfss	status,2,c
  4950  00090A  D01C               	goto	l4088
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  4954  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4955  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4956  000914  2ADE               	incf	postinc2,f,c
  4957  000916  0E00               	movlw	0
  4958  000918  22DD               	addwfc	postdec2,f,c
  4959                           
  4960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  4961  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4962  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4963  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4964  000926  0E02               	movlw	2
  4965  000928  26DE               	addwf	postinc2,f,c
  4966  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4967  00092E  0E00               	movlw	0
  4968  000930  22DD               	addwfc	postdec2,f,c
  4969  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4970  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4971  00093A  CFDE F0CE          	movff	postinc2,_prec
  4972  00093E  CFDD F0CF          	movff	postdec2,_prec+1
  4973                           
  4974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  4975  000942  D03F               	goto	u4040
  4976  000944                     l4088:
  4977  000944  FFFF               	dw	65535	; assembler added errata NOP
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  4981  000946  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4982  00094A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4983  00094E  CFDE F008          	movff	postinc2,atoi@s
  4984  000952  CFDD F009          	movff	postdec2,atoi@s+1
  4985  000956  EC9E  F015         	call	_atoi	;wreg free
  4986  00095A  C008  F0CE         	movff	?_atoi,_prec
  4987  00095E  C009  F0CF         	movff	?_atoi+1,_prec+1
  4988                           
  4989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4990  000962  D008               	goto	l4092
  4991  000964                     l4090:
  4992  000964  FFFF               	dw	65535	; assembler added errata NOP
  4993                           
  4994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  4995  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4996  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4997  00096E  2ADE               	incf	postinc2,f,c
  4998  000970  0E00               	movlw	0
  4999  000972  22DD               	addwfc	postdec2,f,c
  5000  000974                     l4092:
  5001  000974  FFFF               	dw	65535	; assembler added errata NOP
  5002  000976  0ED0               	movlw	208
  5003  000978  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  5004  00097A  0EFF               	movlw	255
  5005  00097C  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  5006  00097E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5007  000982  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5008  000986  CFDE FFF6          	movff	postinc2,tblptrl
  5009  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  5010  00098E                     	if	0	;tblptru may be non-zero
  5011  00098E                     	endif
  5012  00098E                     	if	0	;tblptru may be non-zero
  5013  00098E                     	endif
  5014  00098E  0008               	tblrd		*
  5015  000990  FFFF               	dw	65535	; errata NOP
  5016  000992  50F5               	movf	tablat,w,c
  5017  000994  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5018  000996  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5019  000998  5049               	movf	??_vfpfcnvrt,w,c
  5020  00099A  264B               	addwf	??_vfpfcnvrt+2,f,c
  5021  00099C  504A               	movf	??_vfpfcnvrt+1,w,c
  5022  00099E  224C               	addwfc	??_vfpfcnvrt+3,f,c
  5023  0009A0  504C               	movf	??_vfpfcnvrt+3,w,c
  5024  0009A2  E106               	bnz	u4020
  5025  0009A4  0E0A               	movlw	10
  5026  0009A6  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5027  0009A8  B0D8               	btfsc	status,0,c
  5028  0009AA  D002               	goto	u4020
  5029  0009AC  0E01               	movlw	1
  5030  0009AE  D002               	goto	u4030
  5031  0009B0                     u4020:
  5032  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  5033  0009B2  0E00               	movlw	0
  5034  0009B4                     u4030:
  5035  0009B4  FFFF               	dw	65535	; assembler added errata NOP
  5036  0009B6  6E5D               	movwf	_vfpfcnvrt$1127,c
  5037  0009B8  6A5E               	clrf	_vfpfcnvrt$1127+1,c
  5038  0009BA  505D               	movf	_vfpfcnvrt$1127,w,c
  5039  0009BC  105E               	iorwf	_vfpfcnvrt$1127+1,w,c
  5040  0009BE  A4D8               	btfss	status,2,c
  5041  0009C0  D7D1               	goto	l4090
  5042  0009C2                     u4040:
  5043  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  5044                           
  5045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5046  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5047  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  5049  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  5050  0009D4                     	if	0	;tblptru may be non-zero
  5051  0009D4                     	endif
  5052  0009D4                     	if	0	;tblptru may be non-zero
  5053  0009D4                     	endif
  5054  0009D4  0008               	tblrd		*
  5055  0009D6  FFFF               	dw	65535	; errata NOP
  5056  0009D8  50F5               	movf	tablat,w,c
  5057  0009DA  0A63               	xorlw	99
  5058  0009DC  A4D8               	btfss	status,2,c
  5059  0009DE  D027               	goto	l4106
  5060                           
  5061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5062  0009E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5063  0009E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5064  0009E8  2ADE               	incf	postinc2,f,c
  5065  0009EA  0E00               	movlw	0
  5066  0009EC  22DD               	addwfc	postdec2,f,c
  5067                           
  5068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5069  0009EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5070  0009F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5071  0009F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5072  0009FA  0E02               	movlw	2
  5073  0009FC  26DE               	addwf	postinc2,f,c
  5074  0009FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5075  000A02  0E00               	movlw	0
  5076  000A04  22DD               	addwfc	postdec2,f,c
  5077  000A06  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5078  000A0A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5079  000A0E  50DF               	movf	indf2,w,c
  5080  000A10  6E69               	movwf	vfpfcnvrt@c,c
  5081                           
  5082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5083  000A12  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5084  000A16  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5085  000A1A  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5086  000A1E  EC81  F01D         	call	_ctoa	;wreg free
  5087  000A22  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  5088  000A26  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5089  000A2A  EF46  F00C         	goto	l553
  5090  000A2E                     l4106:
  5091  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  5092                           
  5093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  5094  000A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5095  000A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5096  000A38  CFDE F001          	movff	postinc2,strncmp@_l
  5097  000A3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5098  000A40  0EA8               	movlw	low STR_16
  5099  000A42  6E03               	movwf	strncmp@_r,c
  5100  000A44  0E06               	movlw	high STR_16
  5101  000A46  6E04               	movwf	strncmp@_r+1,c
  5102  000A48  0E00               	movlw	0
  5103  000A4A  6E06               	movwf	strncmp@n+1,c
  5104  000A4C  0E03               	movlw	3
  5105  000A4E  6E05               	movwf	strncmp@n,c
  5106  000A50  ECC0  F01A         	call	_strncmp	;wreg free
  5107  000A54  5001               	movf	?_strncmp,w,c
  5108  000A56  1002               	iorwf	?_strncmp+1,w,c
  5109  000A58  B4D8               	btfsc	status,2,c
  5110  000A5A  D016               	goto	u4070
  5111  000A5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5112  000A60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5113  000A64  CFDE F001          	movff	postinc2,strncmp@_l
  5114  000A68  CFDD F002          	movff	postdec2,strncmp@_l+1
  5115  000A6C  0EAC               	movlw	low STR_20
  5116  000A6E  6E03               	movwf	strncmp@_r,c
  5117  000A70  0E06               	movlw	high STR_20
  5118  000A72  6E04               	movwf	strncmp@_r+1,c
  5119  000A74  0E00               	movlw	0
  5120  000A76  6E06               	movwf	strncmp@n+1,c
  5121  000A78  0E03               	movlw	3
  5122  000A7A  6E05               	movwf	strncmp@n,c
  5123  000A7C  ECC0  F01A         	call	_strncmp	;wreg free
  5124  000A80  5001               	movf	?_strncmp,w,c
  5125  000A82  1002               	iorwf	?_strncmp+1,w,c
  5126  000A84  A4D8               	btfss	status,2,c
  5127  000A86  D043               	goto	l4116
  5128  000A88                     u4070:
  5129  000A88  FFFF               	dw	65535	; assembler added errata NOP
  5130                           
  5131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  5132  000A8A  0E03               	movlw	3
  5133  000A8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5134  000A90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5135  000A94  26DE               	addwf	postinc2,f,c
  5136  000A96  0E00               	movlw	0
  5137  000A98  22DD               	addwfc	postdec2,f,c
  5138                           
  5139                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5140  000A9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5141  000A9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5142  000AA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5143  000AA6  0E02               	movlw	2
  5144  000AA8  26DE               	addwf	postinc2,f,c
  5145  000AAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5146  000AAE  0E00               	movlw	0
  5147  000AB0  22DD               	addwfc	postdec2,f,c
  5148  000AB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5149  000AB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5150  000ABA  50DF               	movf	indf2,w,c
  5151  000ABC  6E5F               	movwf	vfpfcnvrt@ll,c
  5152  000ABE  0E00               	movlw	0
  5153  000AC0  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  5154  000AC2  0EFF               	movlw	-1
  5155  000AC4  6E60               	movwf	vfpfcnvrt@ll+1,c
  5156  000AC6                     L8:
  5157  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  5158  000AC8  6E61               	movwf	vfpfcnvrt@ll+2,c
  5159  000ACA  6E62               	movwf	vfpfcnvrt@ll+3,c
  5160  000ACC  6E63               	movwf	vfpfcnvrt@ll+4,c
  5161  000ACE  6E64               	movwf	vfpfcnvrt@ll+5,c
  5162  000AD0  6E65               	movwf	vfpfcnvrt@ll+6,c
  5163  000AD2  6E66               	movwf	vfpfcnvrt@ll+7,c
  5164  000AD4                     l4112:
  5165  000AD4  FFFF               	dw	65535	; assembler added errata NOP
  5166                           
  5167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  5168  000AD6  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5169  000ADA  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5170  000ADE  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5171  000AE2  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5172  000AE6  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5173  000AEA  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5174  000AEE  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5175  000AF2  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5176  000AF6  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5177  000AFA  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5178  000AFE  ECAC  F00F         	call	_dtoa	;wreg free
  5179  000B02  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5180  000B06  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5181  000B0A  EF46  F00C         	goto	l553
  5182  000B0E                     l4116:
  5183  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  5184                           
  5185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  5186  000B10  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5187  000B14  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5188  000B18  CFDE F001          	movff	postinc2,strncmp@_l
  5189  000B1C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5190  000B20  0EA9               	movlw	low (STR_16+1)
  5191  000B22  6E03               	movwf	strncmp@_r,c
  5192  000B24  0E06               	movlw	high (STR_16+1)
  5193  000B26  6E04               	movwf	strncmp@_r+1,c
  5194  000B28  0E00               	movlw	0
  5195  000B2A  6E06               	movwf	strncmp@n+1,c
  5196  000B2C  0E02               	movlw	2
  5197  000B2E  6E05               	movwf	strncmp@n,c
  5198  000B30  ECC0  F01A         	call	_strncmp	;wreg free
  5199  000B34  5001               	movf	?_strncmp,w,c
  5200  000B36  1002               	iorwf	?_strncmp+1,w,c
  5201  000B38  B4D8               	btfsc	status,2,c
  5202  000B3A  D016               	goto	u4090
  5203  000B3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5204  000B40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5205  000B44  CFDE F001          	movff	postinc2,strncmp@_l
  5206  000B48  CFDD F002          	movff	postdec2,strncmp@_l+1
  5207  000B4C  0EAD               	movlw	low (STR_20+1)
  5208  000B4E  6E03               	movwf	strncmp@_r,c
  5209  000B50  0E06               	movlw	high (STR_20+1)
  5210  000B52  6E04               	movwf	strncmp@_r+1,c
  5211  000B54  0E00               	movlw	0
  5212  000B56  6E06               	movwf	strncmp@n+1,c
  5213  000B58  0E02               	movlw	2
  5214  000B5A  6E05               	movwf	strncmp@n,c
  5215  000B5C  ECC0  F01A         	call	_strncmp	;wreg free
  5216  000B60  5001               	movf	?_strncmp,w,c
  5217  000B62  1002               	iorwf	?_strncmp+1,w,c
  5218  000B64  A4D8               	btfss	status,2,c
  5219  000B66  D008               	goto	l4126
  5220  000B68                     u4090:
  5221  000B68  FFFF               	dw	65535	; assembler added errata NOP
  5222                           
  5223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  5224  000B6A  0E02               	movlw	2
  5225  000B6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5226  000B70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5227  000B74  26DE               	addwf	postinc2,f,c
  5228  000B76  D023               	goto	L18
  5229  000B78                     l4126:
  5230  000B78  FFFF               	dw	65535	; assembler added errata NOP
  5231                           
  5232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5233  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5234  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5235  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  5236  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  5237  000B8A                     	if	0	;tblptru may be non-zero
  5238  000B8A                     	endif
  5239  000B8A                     	if	0	;tblptru may be non-zero
  5240  000B8A                     	endif
  5241  000B8A  0008               	tblrd		*
  5242  000B8C  FFFF               	dw	65535	; errata NOP
  5243  000B8E  50F5               	movf	tablat,w,c
  5244  000B90  0A64               	xorlw	100
  5245  000B92  B4D8               	btfsc	status,2,c
  5246  000B94  D00E               	goto	u4110
  5247  000B96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5248  000B9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5249  000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  5250  000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  5251  000BA6                     	if	0	;tblptru may be non-zero
  5252  000BA6                     	endif
  5253  000BA6                     	if	0	;tblptru may be non-zero
  5254  000BA6                     	endif
  5255  000BA6  0008               	tblrd		*
  5256  000BA8  FFFF               	dw	65535	; errata NOP
  5257  000BAA  50F5               	movf	tablat,w,c
  5258  000BAC  0A69               	xorlw	105
  5259  000BAE  A4D8               	btfss	status,2,c
  5260  000BB0  D021               	goto	l4136
  5261  000BB2                     u4110:
  5262  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  5263                           
  5264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5265  000BB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5266  000BB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5267  000BBC  2ADE               	incf	postinc2,f,c
  5268  000BBE                     L18:
  5269  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  5270  000BC0  0E00               	movlw	0
  5271  000BC2  22DD               	addwfc	postdec2,f,c
  5272                           
  5273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5274  000BC4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5275  000BC8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5276  000BCC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5277  000BD0  0E02               	movlw	2
  5278  000BD2  26DE               	addwf	postinc2,f,c
  5279  000BD4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5280  000BD8  0E00               	movlw	0
  5281  000BDA  22DD               	addwfc	postdec2,f,c
  5282  000BDC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5283  000BE0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5284  000BE4  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  5285  000BE8  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  5286  000BEC  0E00               	movlw	0
  5287  000BEE  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  5288  000BF0  0EFF               	movlw	-1
  5289  000BF2  D769               	goto	L8
  5290  000BF4                     l4136:
  5291  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  5292                           
  5293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5294  000BF6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5295  000BFA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5296  000BFE  CFDE F001          	movff	postinc2,strncmp@_l
  5297  000C02  CFDD F002          	movff	postdec2,strncmp@_l+1
  5298  000C06  0ECA               	movlw	low STR_34
  5299  000C08  6E03               	movwf	strncmp@_r,c
  5300  000C0A  0E06               	movlw	high STR_34
  5301  000C0C  6E04               	movwf	strncmp@_r+1,c
  5302  000C0E  0E00               	movlw	0
  5303  000C10  6E06               	movwf	strncmp@n+1,c
  5304  000C12  0E02               	movlw	2
  5305  000C14  6E05               	movwf	strncmp@n,c
  5306  000C16  ECC0  F01A         	call	_strncmp	;wreg free
  5307  000C1A  5001               	movf	?_strncmp,w,c
  5308  000C1C  1002               	iorwf	?_strncmp+1,w,c
  5309  000C1E  B4D8               	btfsc	status,2,c
  5310  000C20  D016               	goto	u4130
  5311  000C22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5312  000C26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5313  000C2A  CFDE F001          	movff	postinc2,strncmp@_l
  5314  000C2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5315  000C32  0ED0               	movlw	low STR_38
  5316  000C34  6E03               	movwf	strncmp@_r,c
  5317  000C36  0E06               	movlw	high STR_38
  5318  000C38  6E04               	movwf	strncmp@_r+1,c
  5319  000C3A  0E00               	movlw	0
  5320  000C3C  6E06               	movwf	strncmp@n+1,c
  5321  000C3E  0E02               	movlw	2
  5322  000C40  6E05               	movwf	strncmp@n,c
  5323  000C42  ECC0  F01A         	call	_strncmp	;wreg free
  5324  000C46  5001               	movf	?_strncmp,w,c
  5325  000C48  1002               	iorwf	?_strncmp+1,w,c
  5326  000C4A  A4D8               	btfss	status,2,c
  5327  000C4C  D043               	goto	l4146
  5328  000C4E                     u4130:
  5329  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  5330                           
  5331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5332  000C50  0E02               	movlw	2
  5333  000C52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5334  000C56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5335  000C5A  26DE               	addwf	postinc2,f,c
  5336  000C5C  0E00               	movlw	0
  5337  000C5E  22DD               	addwfc	postdec2,f,c
  5338                           
  5339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5340  000C60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5341  000C64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5342  000C68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5343  000C6C  0E04               	movlw	4
  5344  000C6E  26DE               	addwf	postinc2,f,c
  5345  000C70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5346  000C74  0E00               	movlw	0
  5347  000C76  22DD               	addwfc	postdec2,f,c
  5348  000C78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5349  000C7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5350  000C80  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5351  000C84  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5352  000C88  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5353  000C8C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5354  000C90  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5355  000C94  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5356  000C98  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5357  000C9C  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5358  000CA0  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  5359  000CA2  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  5360  000CA4  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  5361  000CA6  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5362  000CAA  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5363  000CAE  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5364  000CB2  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5365  000CB6  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5366  000CBA  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5367  000CBE  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5368  000CC2  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5369  000CC6  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5370  000CCA  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5371  000CCE  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5372  000CD2  D700               	goto	l4112
  5373  000CD4                     l4146:
  5374  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  5375                           
  5376                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  5377  000CD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378  000CDA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379  000CDE  CFDE F001          	movff	postinc2,strncmp@_l
  5380  000CE2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5381  000CE6  0ECD               	movlw	low STR_43
  5382  000CE8  6E03               	movwf	strncmp@_r,c
  5383  000CEA  0E06               	movlw	high STR_43
  5384  000CEC  6E04               	movwf	strncmp@_r+1,c
  5385  000CEE  0E00               	movlw	0
  5386  000CF0  6E06               	movwf	strncmp@n+1,c
  5387  000CF2  0E02               	movlw	2
  5388  000CF4  6E05               	movwf	strncmp@n,c
  5389  000CF6  ECC0  F01A         	call	_strncmp	;wreg free
  5390  000CFA  5001               	movf	?_strncmp,w,c
  5391  000CFC  1002               	iorwf	?_strncmp+1,w,c
  5392  000CFE  B4D8               	btfsc	status,2,c
  5393  000D00  D016               	goto	u4150
  5394  000D02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5395  000D06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5396  000D0A  CFDE F001          	movff	postinc2,strncmp@_l
  5397  000D0E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5398  000D12  0ED3               	movlw	low STR_47
  5399  000D14  6E03               	movwf	strncmp@_r,c
  5400  000D16  0E06               	movlw	high STR_47
  5401  000D18  6E04               	movwf	strncmp@_r+1,c
  5402  000D1A  0E00               	movlw	0
  5403  000D1C  6E06               	movwf	strncmp@n+1,c
  5404  000D1E  0E02               	movlw	2
  5405  000D20  6E05               	movwf	strncmp@n,c
  5406  000D22  ECC0  F01A         	call	_strncmp	;wreg free
  5407  000D26  5001               	movf	?_strncmp,w,c
  5408  000D28  1002               	iorwf	?_strncmp+1,w,c
  5409  000D2A  A4D8               	btfss	status,2,c
  5410  000D2C  D028               	goto	l4156
  5411  000D2E                     u4150:
  5412  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  5413                           
  5414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  5415  000D30  0E02               	movlw	2
  5416  000D32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5417  000D36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5418  000D3A  26DE               	addwf	postinc2,f,c
  5419  000D3C  0E00               	movlw	0
  5420  000D3E  22DD               	addwfc	postdec2,f,c
  5421                           
  5422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5423  000D40  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5424  000D44  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5425  000D48  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5426  000D4C  0E02               	movlw	2
  5427  000D4E  26DE               	addwf	postinc2,f,c
  5428  000D50  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5429  000D54  0E00               	movlw	0
  5430  000D56  22DD               	addwfc	postdec2,f,c
  5431  000D58  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5432  000D5C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5433  000D60  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5434  000D64  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5435  000D68  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5436  000D6C  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5437  000D70  6A61               	clrf	vfpfcnvrt@ll+2,c
  5438  000D72  6A62               	clrf	vfpfcnvrt@ll+3,c
  5439  000D74  6A63               	clrf	vfpfcnvrt@ll+4,c
  5440  000D76  6A64               	clrf	vfpfcnvrt@ll+5,c
  5441  000D78  6A65               	clrf	vfpfcnvrt@ll+6,c
  5442  000D7A  6A66               	clrf	vfpfcnvrt@ll+7,c
  5443  000D7C  D6AB               	goto	l4112
  5444  000D7E                     l4156:
  5445  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  5446                           
  5447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5448  000D80  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5449  000D84  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5450  000D88  CFDE F001          	movff	postinc2,strncmp@_l
  5451  000D8C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5452  000D90  0EB4               	movlw	low STR_52
  5453  000D92  6E03               	movwf	strncmp@_r,c
  5454  000D94  0E06               	movlw	high STR_52
  5455  000D96  6E04               	movwf	strncmp@_r+1,c
  5456  000D98  0E00               	movlw	0
  5457  000D9A  6E06               	movwf	strncmp@n+1,c
  5458  000D9C  0E03               	movlw	3
  5459  000D9E  6E05               	movwf	strncmp@n,c
  5460  000DA0  ECC0  F01A         	call	_strncmp	;wreg free
  5461  000DA4  5001               	movf	?_strncmp,w,c
  5462  000DA6  1002               	iorwf	?_strncmp+1,w,c
  5463  000DA8  A4D8               	btfss	status,2,c
  5464  000DAA  D041               	goto	l4164
  5465                           
  5466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  5467  000DAC  0E03               	movlw	3
  5468  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5469  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5470  000DB6  26DE               	addwf	postinc2,f,c
  5471  000DB8  0E00               	movlw	0
  5472  000DBA  22DD               	addwfc	postdec2,f,c
  5473                           
  5474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5475  000DBC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5476  000DC0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5477  000DC4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5478  000DC8  0E02               	movlw	2
  5479  000DCA  26DE               	addwf	postinc2,f,c
  5480  000DCC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5481  000DD0  0E00               	movlw	0
  5482  000DD2  22DD               	addwfc	postdec2,f,c
  5483  000DD4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5484  000DD8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5485  000DDC  50DF               	movf	indf2,w,c
  5486  000DDE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5487  000DE0  504B               	movf	??_vfpfcnvrt+2,w,c
  5488  000DE2  6E6A               	movwf	vfpfcnvrt@llu,c
  5489  000DE4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5490  000DE6                     L9:
  5491  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  5492  000DE8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5493  000DEA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5494  000DEC                     L10:
  5495  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  5496  000DEE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5497  000DF0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5498  000DF2  6A70               	clrf	vfpfcnvrt@llu+6,c
  5499  000DF4  6A71               	clrf	vfpfcnvrt@llu+7,c
  5500                           
  5501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  5502  000DF6  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5503  000DFA  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5504  000DFE  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5505  000E02  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5506  000E06  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5507  000E0A  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5508  000E0E  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5509  000E12  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5510  000E16  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5511  000E1A  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5512  000E1E  ECD1  F014         	call	_otoa	;wreg free
  5513  000E22  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5514  000E26  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5515  000E2A  EF46  F00C         	goto	l553
  5516  000E2E                     l4164:
  5517  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  5518                           
  5519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5520  000E30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5521  000E34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5522  000E38  CFDE F001          	movff	postinc2,strncmp@_l
  5523  000E3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5524  000E40  0EB5               	movlw	low (STR_52+1)
  5525  000E42  6E03               	movwf	strncmp@_r,c
  5526  000E44  0E06               	movlw	high (STR_52+1)
  5527  000E46  6E04               	movwf	strncmp@_r+1,c
  5528  000E48  0E00               	movlw	0
  5529  000E4A  6E06               	movwf	strncmp@n+1,c
  5530  000E4C  0E02               	movlw	2
  5531  000E4E  6E05               	movwf	strncmp@n,c
  5532  000E50  ECC0  F01A         	call	_strncmp	;wreg free
  5533  000E54  5001               	movf	?_strncmp,w,c
  5534  000E56  1002               	iorwf	?_strncmp+1,w,c
  5535  000E58  B4D8               	btfsc	status,2,c
  5536  000E5A  D06B               	goto	u4200
  5537                           
  5538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  5539                           
  5540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5541                           
  5542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  5543  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5544  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5545  000E64  CFDE FFF6          	movff	postinc2,tblptrl
  5546  000E68  CFDD FFF7          	movff	postdec2,tblptrh
  5547  000E6C                     	if	0	;tblptru may be non-zero
  5548  000E6C                     	endif
  5549  000E6C                     	if	0	;tblptru may be non-zero
  5550  000E6C                     	endif
  5551  000E6C  0008               	tblrd		*
  5552  000E6E  FFFF               	dw	65535	; errata NOP
  5553  000E70  50F5               	movf	tablat,w,c
  5554  000E72  0A6F               	xorlw	111
  5555  000E74  A4D8               	btfss	status,2,c
  5556  000E76  D006               	goto	l4180
  5557                           
  5558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  5559  000E78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5560  000E7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5561  000E80  2ADE               	incf	postinc2,f,c
  5562  000E82  D05E               	goto	L23
  5563  000E84                     l4180:
  5564  000E84  FFFF               	dw	65535	; assembler added errata NOP
  5565                           
  5566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  5567  000E86  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5568  000E8A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5569  000E8E  CFDE F001          	movff	postinc2,strncmp@_l
  5570  000E92  CFDD F002          	movff	postdec2,strncmp@_l+1
  5571  000E96  0EDC               	movlw	low STR_62
  5572  000E98  6E03               	movwf	strncmp@_r,c
  5573  000E9A  0E06               	movlw	high STR_62
  5574  000E9C  6E04               	movwf	strncmp@_r+1,c
  5575  000E9E  0E00               	movlw	0
  5576  000EA0  6E06               	movwf	strncmp@n+1,c
  5577  000EA2  0E02               	movlw	2
  5578  000EA4  6E05               	movwf	strncmp@n,c
  5579  000EA6  ECC0  F01A         	call	_strncmp	;wreg free
  5580  000EAA  5001               	movf	?_strncmp,w,c
  5581  000EAC  1002               	iorwf	?_strncmp+1,w,c
  5582  000EAE  A4D8               	btfss	status,2,c
  5583  000EB0  D029               	goto	l4188
  5584                           
  5585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  5586  000EB2  0E02               	movlw	2
  5587  000EB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  000EB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  000EBC  26DE               	addwf	postinc2,f,c
  5590  000EBE  0E00               	movlw	0
  5591  000EC0  22DD               	addwfc	postdec2,f,c
  5592                           
  5593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  5594  000EC2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5595  000EC6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5596  000ECA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5597  000ECE  0E04               	movlw	4
  5598  000ED0  26DE               	addwf	postinc2,f,c
  5599  000ED2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5600  000ED6  0E00               	movlw	0
  5601  000ED8  22DD               	addwfc	postdec2,f,c
  5602  000EDA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5603  000EDE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5604  000EE2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5605  000EE6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5606  000EEA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5607  000EEE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5608  000EF2  504B               	movf	??_vfpfcnvrt+2,w,c
  5609  000EF4  6E6A               	movwf	vfpfcnvrt@llu,c
  5610  000EF6  504C               	movf	??_vfpfcnvrt+3,w,c
  5611  000EF8  6E6B               	movwf	vfpfcnvrt@llu+1,c
  5612  000EFA  504D               	movf	??_vfpfcnvrt+4,w,c
  5613  000EFC  6E6C               	movwf	vfpfcnvrt@llu+2,c
  5614  000EFE  504E               	movf	??_vfpfcnvrt+5,w,c
  5615  000F00  6E6D               	movwf	vfpfcnvrt@llu+3,c
  5616  000F02  D774               	goto	L10
  5617  000F04                     l4188:
  5618  000F04  FFFF               	dw	65535	; assembler added errata NOP
  5619                           
  5620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5621  000F06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5622  000F0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5623  000F0E  CFDE F001          	movff	postinc2,strncmp@_l
  5624  000F12  CFDD F002          	movff	postdec2,strncmp@_l+1
  5625  000F16  0EDF               	movlw	low STR_67
  5626  000F18  6E03               	movwf	strncmp@_r,c
  5627  000F1A  0E06               	movlw	high STR_67
  5628  000F1C  6E04               	movwf	strncmp@_r+1,c
  5629  000F1E  0E00               	movlw	0
  5630  000F20  6E06               	movwf	strncmp@n+1,c
  5631  000F22  0E02               	movlw	2
  5632  000F24  6E05               	movwf	strncmp@n,c
  5633  000F26  ECC0  F01A         	call	_strncmp	;wreg free
  5634  000F2A  5001               	movf	?_strncmp,w,c
  5635  000F2C  1002               	iorwf	?_strncmp+1,w,c
  5636  000F2E  A4D8               	btfss	status,2,c
  5637  000F30  D023               	goto	l4196
  5638  000F32                     u4200:
  5639  000F32  FFFF               	dw	65535	; assembler added errata NOP
  5640                           
  5641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  5642  000F34  0E02               	movlw	2
  5643  000F36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5644  000F3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5645  000F3E  26DE               	addwf	postinc2,f,c
  5646  000F40                     L23:
  5647  000F40  FFFF               	dw	65535	; assembler added errata NOP
  5648  000F42  0E00               	movlw	0
  5649  000F44  22DD               	addwfc	postdec2,f,c
  5650                           
  5651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5652  000F46  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5653  000F4A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5654  000F4E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5655  000F52  0E02               	movlw	2
  5656  000F54  26DE               	addwf	postinc2,f,c
  5657  000F56  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5658  000F5A  0E00               	movlw	0
  5659  000F5C  22DD               	addwfc	postdec2,f,c
  5660  000F5E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5661  000F62  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5662  000F66  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5663  000F6A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5664  000F6E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5665  000F72  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5666  000F76  D737               	goto	L9
  5667  000F78                     l4196:
  5668  000F78  FFFF               	dw	65535	; assembler added errata NOP
  5669                           
  5670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5671  000F7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5672  000F7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5673  000F82  CFDE F001          	movff	postinc2,strncmp@_l
  5674  000F86  CFDD F002          	movff	postdec2,strncmp@_l+1
  5675  000F8A  0EB0               	movlw	low STR_72
  5676  000F8C  6E03               	movwf	strncmp@_r,c
  5677  000F8E  0E06               	movlw	high STR_72
  5678  000F90  6E04               	movwf	strncmp@_r+1,c
  5679  000F92  0E00               	movlw	0
  5680  000F94  6E06               	movwf	strncmp@n+1,c
  5681  000F96  0E03               	movlw	3
  5682  000F98  6E05               	movwf	strncmp@n,c
  5683  000F9A  ECC0  F01A         	call	_strncmp	;wreg free
  5684  000F9E  5001               	movf	?_strncmp,w,c
  5685  000FA0  1002               	iorwf	?_strncmp+1,w,c
  5686  000FA2  A4D8               	btfss	status,2,c
  5687  000FA4  D028               	goto	l4206
  5688                           
  5689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  5690  000FA6  0E03               	movlw	3
  5691  000FA8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5692  000FAC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5693  000FB0  26DE               	addwf	postinc2,f,c
  5694  000FB2  0E00               	movlw	0
  5695  000FB4  22DD               	addwfc	postdec2,f,c
  5696                           
  5697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5698  000FB6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5699  000FBA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5700  000FBE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5701  000FC2  0E02               	movlw	2
  5702  000FC4  26DE               	addwf	postinc2,f,c
  5703  000FC6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5704  000FCA  0E00               	movlw	0
  5705  000FCC  22DD               	addwfc	postdec2,f,c
  5706  000FCE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5707  000FD2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5708  000FD6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5709  000FDA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5710                           
  5711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  5712  000FDE  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5713  000FE2  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5714  000FE6  C0CA  FFDF         	movff	_nout,indf2
  5715  000FEA                     l4202:
  5716  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  5717                           
  5718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  5719  000FEC  0E00               	movlw	0
  5720  000FEE  6E44               	movwf	?_vfpfcnvrt+1,c
  5721  000FF0  0E00               	movlw	0
  5722  000FF2  EF1D  F00C         	goto	L11
  5723  000FF6                     l4206:
  5724  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  5725                           
  5726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5727  000FF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5728  000FFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5729  001000  CFDE F001          	movff	postinc2,strncmp@_l
  5730  001004  CFDD F002          	movff	postdec2,strncmp@_l+1
  5731  001008  0EB1               	movlw	low (STR_72+1)
  5732  00100A  6E03               	movwf	strncmp@_r,c
  5733  00100C  0E06               	movlw	high (STR_72+1)
  5734  00100E  6E04               	movwf	strncmp@_r+1,c
  5735  001010  0E00               	movlw	0
  5736  001012  6E06               	movwf	strncmp@n+1,c
  5737  001014  0E02               	movlw	2
  5738  001016  6E05               	movwf	strncmp@n,c
  5739  001018  ECC0  F01A         	call	_strncmp	;wreg free
  5740  00101C  5001               	movf	?_strncmp,w,c
  5741  00101E  1002               	iorwf	?_strncmp+1,w,c
  5742  001020  A4D8               	btfss	status,2,c
  5743  001022  D00B               	goto	l4216
  5744  001024  D07F               	goto	u4250
  5745  001026                     l4210:
  5746  001026  FFFF               	dw	65535	; assembler added errata NOP
  5747                           
  5748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  5749  001028  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5750  00102C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5751  001030  C0CA  FFDE         	movff	_nout,postinc2
  5752  001034  C0CB  FFDD         	movff	_nout+1,postdec2
  5753  001038  D7D8               	goto	l4202
  5754  00103A                     l4216:
  5755  00103A  FFFF               	dw	65535	; assembler added errata NOP
  5756                           
  5757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  5758  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5759  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5760  001044  CFDE FFF6          	movff	postinc2,tblptrl
  5761  001048  CFDD FFF7          	movff	postdec2,tblptrh
  5762  00104C                     	if	0	;tblptru may be non-zero
  5763  00104C                     	endif
  5764  00104C                     	if	0	;tblptru may be non-zero
  5765  00104C                     	endif
  5766  00104C  0008               	tblrd		*
  5767  00104E  FFFF               	dw	65535	; errata NOP
  5768  001050  50F5               	movf	tablat,w,c
  5769  001052  0A6E               	xorlw	110
  5770  001054  A4D8               	btfss	status,2,c
  5771  001056  D006               	goto	l4226
  5772                           
  5773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  5774  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5775  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5776  001060  2ADE               	incf	postinc2,f,c
  5777  001062  D067               	goto	L20
  5778  001064                     l4226:
  5779  001064  FFFF               	dw	65535	; assembler added errata NOP
  5780                           
  5781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  5782  001066  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5783  00106A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5784  00106E  CFDE F001          	movff	postinc2,strncmp@_l
  5785  001072  CFDD F002          	movff	postdec2,strncmp@_l+1
  5786  001076  0ED6               	movlw	low STR_82
  5787  001078  6E03               	movwf	strncmp@_r,c
  5788  00107A  0E06               	movlw	high STR_82
  5789  00107C  6E04               	movwf	strncmp@_r+1,c
  5790  00107E  0E00               	movlw	0
  5791  001080  6E06               	movwf	strncmp@n+1,c
  5792  001082  0E02               	movlw	2
  5793  001084  6E05               	movwf	strncmp@n,c
  5794  001086  ECC0  F01A         	call	_strncmp	;wreg free
  5795  00108A  5001               	movf	?_strncmp,w,c
  5796  00108C  1002               	iorwf	?_strncmp+1,w,c
  5797  00108E  A4D8               	btfss	status,2,c
  5798  001090  D032               	goto	l4236
  5799                           
  5800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  5801  001092  0E02               	movlw	2
  5802  001094  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5803  001098  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5804  00109C  26DE               	addwf	postinc2,f,c
  5805  00109E  0E00               	movlw	0
  5806  0010A0  22DD               	addwfc	postdec2,f,c
  5807                           
  5808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  5809  0010A2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5810  0010A6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5811  0010AA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5812  0010AE  0E02               	movlw	2
  5813  0010B0  26DE               	addwf	postinc2,f,c
  5814  0010B2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5815  0010B6  0E00               	movlw	0
  5816  0010B8  22DD               	addwfc	postdec2,f,c
  5817  0010BA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5818  0010BE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5819  0010C2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5820  0010C6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5821                           
  5822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  5823  0010CA  C0CA  F049         	movff	_nout,??_vfpfcnvrt
  5824  0010CE  C0CB  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  5825  0010D2  0E00               	movlw	0
  5826  0010D4  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  5827  0010D6  0EFF               	movlw	255
  5828  0010D8  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5829  0010DA  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  5830  0010DC  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5831  0010E0  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5832  0010E4  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  5833  0010E8  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  5834  0010EC  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  5835  0010F0  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  5836  0010F4  D77A               	goto	l4202
  5837  0010F6                     l4236:
  5838  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  5839                           
  5840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5841  0010F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5842  0010FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5843  001100  CFDE F001          	movff	postinc2,strncmp@_l
  5844  001104  CFDD F002          	movff	postdec2,strncmp@_l+1
  5845  001108  0ED9               	movlw	low STR_87
  5846  00110A  6E03               	movwf	strncmp@_r,c
  5847  00110C  0E06               	movlw	high STR_87
  5848  00110E  6E04               	movwf	strncmp@_r+1,c
  5849  001110  0E00               	movlw	0
  5850  001112  6E06               	movwf	strncmp@n+1,c
  5851  001114  0E02               	movlw	2
  5852  001116  6E05               	movwf	strncmp@n,c
  5853  001118  ECC0  F01A         	call	_strncmp	;wreg free
  5854  00111C  5001               	movf	?_strncmp,w,c
  5855  00111E  1002               	iorwf	?_strncmp+1,w,c
  5856  001120  A4D8               	btfss	status,2,c
  5857  001122  D01F               	goto	l4246
  5858  001124                     u4250:
  5859  001124  FFFF               	dw	65535	; assembler added errata NOP
  5860                           
  5861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  5862  001126  0E02               	movlw	2
  5863  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5864  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5865  001130  26DE               	addwf	postinc2,f,c
  5866  001132                     L20:
  5867  001132  FFFF               	dw	65535	; assembler added errata NOP
  5868  001134  0E00               	movlw	0
  5869  001136  22DD               	addwfc	postdec2,f,c
  5870                           
  5871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5872  001138  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5873  00113C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5874  001140  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5875  001144  0E02               	movlw	2
  5876  001146  26DE               	addwf	postinc2,f,c
  5877  001148  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5878  00114C  0E00               	movlw	0
  5879  00114E  22DD               	addwfc	postdec2,f,c
  5880  001150  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5881  001154  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5882  001158  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5883  00115C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5884  001160  D762               	goto	l4210
  5885  001162                     l4246:
  5886  001162  FFFF               	dw	65535	; assembler added errata NOP
  5887                           
  5888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  5889  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5890  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5891  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  5892  001170  CFDD FFF7          	movff	postdec2,tblptrh
  5893  001174                     	if	0	;tblptru may be non-zero
  5894  001174                     	endif
  5895  001174                     	if	0	;tblptru may be non-zero
  5896  001174                     	endif
  5897  001174  0008               	tblrd		*
  5898  001176  FFFF               	dw	65535	; errata NOP
  5899  001178  50F5               	movf	tablat,w,c
  5900  00117A  0A70               	xorlw	112
  5901  00117C  A4D8               	btfss	status,2,c
  5902  00117E  D03E               	goto	l4254
  5903                           
  5904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  5905  001180  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5906  001184  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5907  001188  2ADE               	incf	postinc2,f,c
  5908  00118A  0E00               	movlw	0
  5909  00118C  22DD               	addwfc	postdec2,f,c
  5910                           
  5911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5912  00118E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5913  001192  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5914  001196  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5915  00119A  0E02               	movlw	2
  5916  00119C  26DE               	addwf	postinc2,f,c
  5917  00119E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5918  0011A2  0E00               	movlw	0
  5919  0011A4  22DD               	addwfc	postdec2,f,c
  5920  0011A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5921  0011AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5922  0011AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5923  0011B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5924  0011B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5925  0011BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5926  0011BE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5927  0011C0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5928  0011C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5929  0011C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5930  0011C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  5931  0011C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  5932                           
  5933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  5934  0011CA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5935  0011CE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5936  0011D2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5937  0011D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5938  0011DA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5939  0011DE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5940  0011E2  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5941  0011E6  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5942  0011EA  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5943  0011EE  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5944  0011F2  0E78               	movlw	120
  5945  0011F4  6E26               	movwf	xtoa@x,c
  5946  0011F6  ECE1  F010         	call	_xtoa	;wreg free
  5947  0011FA  D1B4               	goto	L13
  5948  0011FC                     l4254:
  5949  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  5950                           
  5951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5952  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5953  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5954  001206  CFDE FFF6          	movff	postinc2,tblptrl
  5955  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  5956  00120E                     	if	0	;tblptru may be non-zero
  5957  00120E                     	endif
  5958  00120E                     	if	0	;tblptru may be non-zero
  5959  00120E                     	endif
  5960  00120E  0008               	tblrd		*
  5961  001210  FFFF               	dw	65535	; errata NOP
  5962  001212  50F5               	movf	tablat,w,c
  5963  001214  0A73               	xorlw	115
  5964  001216  A4D8               	btfss	status,2,c
  5965  001218  D02A               	goto	l4262
  5966                           
  5967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5968  00121A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5969  00121E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5970  001222  2ADE               	incf	postinc2,f,c
  5971  001224  0E00               	movlw	0
  5972  001226  22DD               	addwfc	postdec2,f,c
  5973                           
  5974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5975  001228  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5976  00122C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5977  001230  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5978  001234  0E02               	movlw	2
  5979  001236  26DE               	addwf	postinc2,f,c
  5980  001238  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5981  00123C  0E00               	movlw	0
  5982  00123E  22DD               	addwfc	postdec2,f,c
  5983  001240  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5984  001244  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5985  001248  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  5986  00124C  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  5987                           
  5988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5989  001250  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5990  001254  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5991  001258  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5992  00125C  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5993  001260  ECAD  F017         	call	_stoa	;wreg free
  5994  001264  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5995  001268  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5996  00126C  D30F               	goto	l553
  5997  00126E                     l4262:
  5998  00126E  FFFF               	dw	65535	; assembler added errata NOP
  5999                           
  6000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6001  001270  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6002  001274  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6003  001278  CFDE F001          	movff	postinc2,strncmp@_l
  6004  00127C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6005  001280  0EB8               	movlw	low STR_92
  6006  001282  6E03               	movwf	strncmp@_r,c
  6007  001284  0E06               	movlw	high STR_92
  6008  001286  6E04               	movwf	strncmp@_r+1,c
  6009  001288  0E00               	movlw	0
  6010  00128A  6E06               	movwf	strncmp@n+1,c
  6011  00128C  0E03               	movlw	3
  6012  00128E  6E05               	movwf	strncmp@n,c
  6013  001290  ECC0  F01A         	call	_strncmp	;wreg free
  6014  001294  5001               	movf	?_strncmp,w,c
  6015  001296  1002               	iorwf	?_strncmp+1,w,c
  6016  001298  A4D8               	btfss	status,2,c
  6017  00129A  D040               	goto	l4270
  6018                           
  6019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  6020  00129C  0E03               	movlw	3
  6021  00129E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6022  0012A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6023  0012A6  26DE               	addwf	postinc2,f,c
  6024  0012A8  0E00               	movlw	0
  6025  0012AA  22DD               	addwfc	postdec2,f,c
  6026                           
  6027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6028  0012AC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6029  0012B0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6030  0012B4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6031  0012B8  0E02               	movlw	2
  6032  0012BA  26DE               	addwf	postinc2,f,c
  6033  0012BC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6034  0012C0  0E00               	movlw	0
  6035  0012C2  22DD               	addwfc	postdec2,f,c
  6036  0012C4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6037  0012C8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6038  0012CC  50DF               	movf	indf2,w,c
  6039  0012CE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6040  0012D0  504B               	movf	??_vfpfcnvrt+2,w,c
  6041  0012D2  6E6A               	movwf	vfpfcnvrt@llu,c
  6042  0012D4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6043  0012D6                     L14:
  6044  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  6045  0012D8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6046  0012DA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6047  0012DC                     L15:
  6048  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  6049  0012DE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6050  0012E0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6051  0012E2  6A70               	clrf	vfpfcnvrt@llu+6,c
  6052  0012E4  6A71               	clrf	vfpfcnvrt@llu+7,c
  6053                           
  6054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  6055  0012E6  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  6056  0012EA  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6057  0012EE  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  6058  0012F2  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6059  0012F6  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6060  0012FA  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6061  0012FE  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6062  001302  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6063  001306  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6064  00130A  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6065  00130E  ECF0  F013         	call	_utoa	;wreg free
  6066  001312  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  6067  001316  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  6068  00131A  D2B8               	goto	l553
  6069  00131C                     l4270:
  6070  00131C  FFFF               	dw	65535	; assembler added errata NOP
  6071                           
  6072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6073  00131E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6074  001322  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6075  001326  CFDE F001          	movff	postinc2,strncmp@_l
  6076  00132A  CFDD F002          	movff	postdec2,strncmp@_l+1
  6077  00132E  0EB9               	movlw	low (STR_92+1)
  6078  001330  6E03               	movwf	strncmp@_r,c
  6079  001332  0E06               	movlw	high (STR_92+1)
  6080  001334  6E04               	movwf	strncmp@_r+1,c
  6081  001336  0E00               	movlw	0
  6082  001338  6E06               	movwf	strncmp@n+1,c
  6083  00133A  0E02               	movlw	2
  6084  00133C  6E05               	movwf	strncmp@n,c
  6085  00133E  ECC0  F01A         	call	_strncmp	;wreg free
  6086  001342  5001               	movf	?_strncmp,w,c
  6087  001344  1002               	iorwf	?_strncmp+1,w,c
  6088  001346  B4D8               	btfsc	status,2,c
  6089  001348  D06B               	goto	u4320
  6090                           
  6091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  6092                           
  6093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6094                           
  6095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  6096  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6097  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6098  001352  CFDE FFF6          	movff	postinc2,tblptrl
  6099  001356  CFDD FFF7          	movff	postdec2,tblptrh
  6100  00135A                     	if	0	;tblptru may be non-zero
  6101  00135A                     	endif
  6102  00135A                     	if	0	;tblptru may be non-zero
  6103  00135A                     	endif
  6104  00135A  0008               	tblrd		*
  6105  00135C  FFFF               	dw	65535	; errata NOP
  6106  00135E  50F5               	movf	tablat,w,c
  6107  001360  0A75               	xorlw	117
  6108  001362  A4D8               	btfss	status,2,c
  6109  001364  D006               	goto	l4286
  6110                           
  6111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  6112  001366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6113  00136A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6114  00136E  2ADE               	incf	postinc2,f,c
  6115  001370  D05E               	goto	L24
  6116  001372                     l4286:
  6117  001372  FFFF               	dw	65535	; assembler added errata NOP
  6118                           
  6119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6120  001374  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6121  001378  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6122  00137C  CFDE F001          	movff	postinc2,strncmp@_l
  6123  001380  CFDD F002          	movff	postdec2,strncmp@_l+1
  6124  001384  0EC1               	movlw	low (STR_1+1)
  6125  001386  6E03               	movwf	strncmp@_r,c
  6126  001388  0E06               	movlw	high (STR_1+1)
  6127  00138A  6E04               	movwf	strncmp@_r+1,c
  6128  00138C  0E00               	movlw	0
  6129  00138E  6E06               	movwf	strncmp@n+1,c
  6130  001390  0E02               	movlw	2
  6131  001392  6E05               	movwf	strncmp@n,c
  6132  001394  ECC0  F01A         	call	_strncmp	;wreg free
  6133  001398  5001               	movf	?_strncmp,w,c
  6134  00139A  1002               	iorwf	?_strncmp+1,w,c
  6135  00139C  A4D8               	btfss	status,2,c
  6136  00139E  D029               	goto	l4294
  6137                           
  6138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  6139  0013A0  0E02               	movlw	2
  6140  0013A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6141  0013A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6142  0013AA  26DE               	addwf	postinc2,f,c
  6143  0013AC  0E00               	movlw	0
  6144  0013AE  22DD               	addwfc	postdec2,f,c
  6145                           
  6146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6147  0013B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6148  0013B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6149  0013B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6150  0013BC  0E04               	movlw	4
  6151  0013BE  26DE               	addwf	postinc2,f,c
  6152  0013C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6153  0013C4  0E00               	movlw	0
  6154  0013C6  22DD               	addwfc	postdec2,f,c
  6155  0013C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6156  0013CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6157  0013D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6158  0013D4  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6159  0013D8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6160  0013DC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6161  0013E0  504B               	movf	??_vfpfcnvrt+2,w,c
  6162  0013E2  6E6A               	movwf	vfpfcnvrt@llu,c
  6163  0013E4  504C               	movf	??_vfpfcnvrt+3,w,c
  6164  0013E6  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6165  0013E8  504D               	movf	??_vfpfcnvrt+4,w,c
  6166  0013EA  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6167  0013EC  504E               	movf	??_vfpfcnvrt+5,w,c
  6168  0013EE  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6169  0013F0  D775               	goto	L15
  6170  0013F2                     l4294:
  6171  0013F2  FFFF               	dw	65535	; assembler added errata NOP
  6172                           
  6173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6174  0013F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6175  0013F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6176  0013FC  CFDE F001          	movff	postinc2,strncmp@_l
  6177  001400  CFDD F002          	movff	postdec2,strncmp@_l+1
  6178  001404  0EE2               	movlw	low STR_107
  6179  001406  6E03               	movwf	strncmp@_r,c
  6180  001408  0E06               	movlw	high STR_107
  6181  00140A  6E04               	movwf	strncmp@_r+1,c
  6182  00140C  0E00               	movlw	0
  6183  00140E  6E06               	movwf	strncmp@n+1,c
  6184  001410  0E02               	movlw	2
  6185  001412  6E05               	movwf	strncmp@n,c
  6186  001414  ECC0  F01A         	call	_strncmp	;wreg free
  6187  001418  5001               	movf	?_strncmp,w,c
  6188  00141A  1002               	iorwf	?_strncmp+1,w,c
  6189  00141C  A4D8               	btfss	status,2,c
  6190  00141E  D023               	goto	l4302
  6191  001420                     u4320:
  6192  001420  FFFF               	dw	65535	; assembler added errata NOP
  6193                           
  6194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  6195  001422  0E02               	movlw	2
  6196  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6197  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6198  00142C  26DE               	addwf	postinc2,f,c
  6199  00142E                     L24:
  6200  00142E  FFFF               	dw	65535	; assembler added errata NOP
  6201  001430  0E00               	movlw	0
  6202  001432  22DD               	addwfc	postdec2,f,c
  6203                           
  6204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6205  001434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6206  001438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6207  00143C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6208  001440  0E02               	movlw	2
  6209  001442  26DE               	addwf	postinc2,f,c
  6210  001444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6211  001448  0E00               	movlw	0
  6212  00144A  22DD               	addwfc	postdec2,f,c
  6213  00144C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6214  001450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6215  001454  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6216  001458  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6217  00145C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6218  001460  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6219  001464  D738               	goto	L14
  6220  001466                     l4302:
  6221  001466  FFFF               	dw	65535	; assembler added errata NOP
  6222                           
  6223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  6224  001468  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6225  00146C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6226  001470  CFDE F001          	movff	postinc2,strncmp@_l
  6227  001474  CFDD F002          	movff	postdec2,strncmp@_l+1
  6228  001478  0EBC               	movlw	low STR_112
  6229  00147A  6E03               	movwf	strncmp@_r,c
  6230  00147C  0E06               	movlw	high STR_112
  6231  00147E  6E04               	movwf	strncmp@_r+1,c
  6232  001480  0E00               	movlw	0
  6233  001482  6E06               	movwf	strncmp@n+1,c
  6234  001484  0E03               	movlw	3
  6235  001486  6E05               	movwf	strncmp@n,c
  6236  001488  ECC0  F01A         	call	_strncmp	;wreg free
  6237  00148C  5001               	movf	?_strncmp,w,c
  6238  00148E  1002               	iorwf	?_strncmp+1,w,c
  6239  001490  B4D8               	btfsc	status,2,c
  6240  001492  D016               	goto	u4340
  6241  001494  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6242  001498  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6243  00149C  CFDE F001          	movff	postinc2,strncmp@_l
  6244  0014A0  CFDD F002          	movff	postdec2,strncmp@_l+1
  6245  0014A4  0EA4               	movlw	low STR_116
  6246  0014A6  6E03               	movwf	strncmp@_r,c
  6247  0014A8  0E06               	movlw	high STR_116
  6248  0014AA  6E04               	movwf	strncmp@_r+1,c
  6249  0014AC  0E00               	movlw	0
  6250  0014AE  6E06               	movwf	strncmp@n+1,c
  6251  0014B0  0E03               	movlw	3
  6252  0014B2  6E05               	movwf	strncmp@n,c
  6253  0014B4  ECC0  F01A         	call	_strncmp	;wreg free
  6254  0014B8  5001               	movf	?_strncmp,w,c
  6255  0014BA  1002               	iorwf	?_strncmp+1,w,c
  6256  0014BC  A4D8               	btfss	status,2,c
  6257  0014BE  D058               	goto	l4316
  6258  0014C0                     u4340:
  6259  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  6260                           
  6261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  6262  0014C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6263  0014C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6264  0014CA  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6265  0014CE  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6266  0014D2  0E02               	movlw	2
  6267  0014D4  2649               	addwf	??_vfpfcnvrt,f,c
  6268  0014D6  0E00               	movlw	0
  6269  0014D8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6270  0014DA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6271  0014DE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6272  0014E2                     	if	0	;tblptru may be non-zero
  6273  0014E2                     	endif
  6274  0014E2                     	if	0	;tblptru may be non-zero
  6275  0014E2                     	endif
  6276  0014E2  0008               	tblrd		*
  6277  0014E4  FFFF               	dw	65535	; errata NOP
  6278  0014E6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6279                           
  6280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  6281  0014EA  0E03               	movlw	3
  6282  0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6283  0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6284  0014F4  26DE               	addwf	postinc2,f,c
  6285  0014F6  0E00               	movlw	0
  6286  0014F8  22DD               	addwfc	postdec2,f,c
  6287                           
  6288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6289  0014FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6290  0014FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6291  001502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6292  001506  0E02               	movlw	2
  6293  001508  26DE               	addwf	postinc2,f,c
  6294  00150A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6295  00150E  0E00               	movlw	0
  6296  001510  22DD               	addwfc	postdec2,f,c
  6297  001512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6298  001516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6299  00151A  50DF               	movf	indf2,w,c
  6300  00151C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6301  00151E  504B               	movf	??_vfpfcnvrt+2,w,c
  6302  001520  6E6A               	movwf	vfpfcnvrt@llu,c
  6303  001522  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6304  001524                     L16:
  6305  001524  FFFF               	dw	65535	; assembler added errata NOP
  6306  001526  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6307  001528  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6308  00152A                     L17:
  6309  00152A  FFFF               	dw	65535	; assembler added errata NOP
  6310  00152C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6311  00152E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6312  001530  6A70               	clrf	vfpfcnvrt@llu+6,c
  6313  001532  6A71               	clrf	vfpfcnvrt@llu+7,c
  6314                           
  6315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  6316  001534  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6317  001538  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6318  00153C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6319  001540  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6320  001544  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6321  001548  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6322  00154C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6323  001550  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6324  001554  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6325  001558  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6326  00155C  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  6327  001560  ECE1  F010         	call	_xtoa	;wreg free
  6328  001564                     L13:
  6329  001564  FFFF               	dw	65535	; assembler added errata NOP
  6330  001566  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6331  00156A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6332  00156E  D18E               	goto	l553
  6333  001570                     l4316:
  6334  001570  FFFF               	dw	65535	; assembler added errata NOP
  6335                           
  6336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  6337  001572  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6338  001576  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6339  00157A  CFDE F001          	movff	postinc2,strncmp@_l
  6340  00157E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6341  001582  0EBD               	movlw	low (STR_112+1)
  6342  001584  6E03               	movwf	strncmp@_r,c
  6343  001586  0E06               	movlw	high (STR_112+1)
  6344  001588  6E04               	movwf	strncmp@_r+1,c
  6345  00158A  0E00               	movlw	0
  6346  00158C  6E06               	movwf	strncmp@n+1,c
  6347  00158E  0E02               	movlw	2
  6348  001590  6E05               	movwf	strncmp@n,c
  6349  001592  ECC0  F01A         	call	_strncmp	;wreg free
  6350  001596  5001               	movf	?_strncmp,w,c
  6351  001598  1002               	iorwf	?_strncmp+1,w,c
  6352  00159A  B4D8               	btfsc	status,2,c
  6353  00159C  D016               	goto	u4360
  6354  00159E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6355  0015A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6356  0015A6  CFDE F001          	movff	postinc2,strncmp@_l
  6357  0015AA  CFDD F002          	movff	postdec2,strncmp@_l+1
  6358  0015AE  0EA5               	movlw	low (STR_116+1)
  6359  0015B0  6E03               	movwf	strncmp@_r,c
  6360  0015B2  0E06               	movlw	high (STR_116+1)
  6361  0015B4  6E04               	movwf	strncmp@_r+1,c
  6362  0015B6  0E00               	movlw	0
  6363  0015B8  6E06               	movwf	strncmp@n+1,c
  6364  0015BA  0E02               	movlw	2
  6365  0015BC  6E05               	movwf	strncmp@n,c
  6366  0015BE  ECC0  F01A         	call	_strncmp	;wreg free
  6367  0015C2  5001               	movf	?_strncmp,w,c
  6368  0015C4  1002               	iorwf	?_strncmp+1,w,c
  6369  0015C6  A4D8               	btfss	status,2,c
  6370  0015C8  D014               	goto	l4330
  6371  0015CA                     u4360:
  6372  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  6373                           
  6374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  6375  0015CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6376  0015D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6377  0015D4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6378  0015D8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6379  0015DC  0E01               	movlw	1
  6380  0015DE  2649               	addwf	??_vfpfcnvrt,f,c
  6381  0015E0  0E00               	movlw	0
  6382  0015E2  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6383  0015E4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6384  0015E8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6385  0015EC                     	if	0	;tblptru may be non-zero
  6386  0015EC                     	endif
  6387  0015EC                     	if	0	;tblptru may be non-zero
  6388  0015EC                     	endif
  6389  0015EC  0008               	tblrd		*
  6390  0015EE  FFFF               	dw	65535	; errata NOP
  6391  0015F0  D0DB               	goto	L28
  6392  0015F2                     l4330:
  6393  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  6394                           
  6395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6396  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6397  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6398  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  6399  001600  CFDD FFF7          	movff	postdec2,tblptrh
  6400  001604                     	if	0	;tblptru may be non-zero
  6401  001604                     	endif
  6402  001604                     	if	0	;tblptru may be non-zero
  6403  001604                     	endif
  6404  001604  0008               	tblrd		*
  6405  001606  FFFF               	dw	65535	; errata NOP
  6406  001608  50F5               	movf	tablat,w,c
  6407  00160A  0A78               	xorlw	120
  6408  00160C  B4D8               	btfsc	status,2,c
  6409  00160E  D00E               	goto	u4380
  6410  001610  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6411  001614  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6412  001618  CFDE FFF6          	movff	postinc2,tblptrl
  6413  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  6414  001620                     	if	0	;tblptru may be non-zero
  6415  001620                     	endif
  6416  001620                     	if	0	;tblptru may be non-zero
  6417  001620                     	endif
  6418  001620  0008               	tblrd		*
  6419  001622  FFFF               	dw	65535	; errata NOP
  6420  001624  50F5               	movf	tablat,w,c
  6421  001626  0A58               	xorlw	88
  6422  001628  A4D8               	btfss	status,2,c
  6423  00162A  D013               	goto	l4344
  6424  00162C                     u4380:
  6425  00162C  FFFF               	dw	65535	; assembler added errata NOP
  6426                           
  6427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6428  00162E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6429  001632  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6430  001636  CFDE FFF6          	movff	postinc2,tblptrl
  6431  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  6432  00163E                     	if	0	;tblptru may be non-zero
  6433  00163E                     	endif
  6434  00163E                     	if	0	;tblptru may be non-zero
  6435  00163E                     	endif
  6436  00163E  0008               	tblrd		*
  6437  001640  FFFF               	dw	65535	; errata NOP
  6438  001642  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6439                           
  6440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6441  001646  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6442  00164A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6443  00164E  2ADE               	incf	postinc2,f,c
  6444  001650  D0B4               	goto	L27
  6445  001652                     l4344:
  6446  001652  FFFF               	dw	65535	; assembler added errata NOP
  6447                           
  6448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  6449  001654  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6450  001658  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6451  00165C  CFDE F001          	movff	postinc2,strncmp@_l
  6452  001660  CFDD F002          	movff	postdec2,strncmp@_l+1
  6453  001664  0EE5               	movlw	low STR_130
  6454  001666  6E03               	movwf	strncmp@_r,c
  6455  001668  0E06               	movlw	high STR_130
  6456  00166A  6E04               	movwf	strncmp@_r+1,c
  6457  00166C  0E00               	movlw	0
  6458  00166E  6E06               	movwf	strncmp@n+1,c
  6459  001670  0E02               	movlw	2
  6460  001672  6E05               	movwf	strncmp@n,c
  6461  001674  ECC0  F01A         	call	_strncmp	;wreg free
  6462  001678  5001               	movf	?_strncmp,w,c
  6463  00167A  1002               	iorwf	?_strncmp+1,w,c
  6464  00167C  B4D8               	btfsc	status,2,c
  6465  00167E  D016               	goto	u4400
  6466  001680  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6467  001684  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6468  001688  CFDE F001          	movff	postinc2,strncmp@_l
  6469  00168C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6470  001690  0EC4               	movlw	low STR_134
  6471  001692  6E03               	movwf	strncmp@_r,c
  6472  001694  0E06               	movlw	high STR_134
  6473  001696  6E04               	movwf	strncmp@_r+1,c
  6474  001698  0E00               	movlw	0
  6475  00169A  6E06               	movwf	strncmp@n+1,c
  6476  00169C  0E02               	movlw	2
  6477  00169E  6E05               	movwf	strncmp@n,c
  6478  0016A0  ECC0  F01A         	call	_strncmp	;wreg free
  6479  0016A4  5001               	movf	?_strncmp,w,c
  6480  0016A6  1002               	iorwf	?_strncmp+1,w,c
  6481  0016A8  A4D8               	btfss	status,2,c
  6482  0016AA  D03E               	goto	l4358
  6483  0016AC                     u4400:
  6484  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  6485                           
  6486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  6487  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6488  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6489  0016B6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6490  0016BA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6491  0016BE  0E01               	movlw	1
  6492  0016C0  2649               	addwf	??_vfpfcnvrt,f,c
  6493  0016C2  0E00               	movlw	0
  6494  0016C4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6495  0016C6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6496  0016CA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6497  0016CE                     	if	0	;tblptru may be non-zero
  6498  0016CE                     	endif
  6499  0016CE                     	if	0	;tblptru may be non-zero
  6500  0016CE                     	endif
  6501  0016CE  0008               	tblrd		*
  6502  0016D0  FFFF               	dw	65535	; errata NOP
  6503  0016D2  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6504                           
  6505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  6506  0016D6  0E02               	movlw	2
  6507  0016D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6508  0016DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6509  0016E0  26DE               	addwf	postinc2,f,c
  6510  0016E2  0E00               	movlw	0
  6511  0016E4  22DD               	addwfc	postdec2,f,c
  6512                           
  6513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6514  0016E6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6515  0016EA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6516  0016EE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6517  0016F2  0E04               	movlw	4
  6518  0016F4  26DE               	addwf	postinc2,f,c
  6519  0016F6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6520  0016FA  0E00               	movlw	0
  6521  0016FC  22DD               	addwfc	postdec2,f,c
  6522  0016FE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6523  001702  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6524  001706  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6525  00170A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6526  00170E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6527  001712  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6528  001716  504B               	movf	??_vfpfcnvrt+2,w,c
  6529  001718  6E6A               	movwf	vfpfcnvrt@llu,c
  6530  00171A  504C               	movf	??_vfpfcnvrt+3,w,c
  6531  00171C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6532  00171E  504D               	movf	??_vfpfcnvrt+4,w,c
  6533  001720  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6534  001722  504E               	movf	??_vfpfcnvrt+5,w,c
  6535  001724  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6536  001726  D701               	goto	L17
  6537  001728                     l4358:
  6538  001728  FFFF               	dw	65535	; assembler added errata NOP
  6539                           
  6540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  6541  00172A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6542  00172E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6543  001732  CFDE F001          	movff	postinc2,strncmp@_l
  6544  001736  CFDD F002          	movff	postdec2,strncmp@_l+1
  6545  00173A  0EE8               	movlw	low STR_139
  6546  00173C  6E03               	movwf	strncmp@_r,c
  6547  00173E  0E06               	movlw	high STR_139
  6548  001740  6E04               	movwf	strncmp@_r+1,c
  6549  001742  0E00               	movlw	0
  6550  001744  6E06               	movwf	strncmp@n+1,c
  6551  001746  0E02               	movlw	2
  6552  001748  6E05               	movwf	strncmp@n,c
  6553  00174A  ECC0  F01A         	call	_strncmp	;wreg free
  6554  00174E  5001               	movf	?_strncmp,w,c
  6555  001750  1002               	iorwf	?_strncmp+1,w,c
  6556  001752  B4D8               	btfsc	status,2,c
  6557  001754  D016               	goto	u4420
  6558  001756  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6559  00175A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6560  00175E  CFDE F001          	movff	postinc2,strncmp@_l
  6561  001762  CFDD F002          	movff	postdec2,strncmp@_l+1
  6562  001766  0EC7               	movlw	low STR_143
  6563  001768  6E03               	movwf	strncmp@_r,c
  6564  00176A  0E06               	movlw	high STR_143
  6565  00176C  6E04               	movwf	strncmp@_r+1,c
  6566  00176E  0E00               	movlw	0
  6567  001770  6E06               	movwf	strncmp@n+1,c
  6568  001772  0E02               	movlw	2
  6569  001774  6E05               	movwf	strncmp@n,c
  6570  001776  ECC0  F01A         	call	_strncmp	;wreg free
  6571  00177A  5001               	movf	?_strncmp,w,c
  6572  00177C  1002               	iorwf	?_strncmp+1,w,c
  6573  00177E  A4D8               	btfss	status,2,c
  6574  001780  D038               	goto	l4372
  6575  001782                     u4420:
  6576  001782  FFFF               	dw	65535	; assembler added errata NOP
  6577                           
  6578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  6579  001784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6580  001788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6581  00178C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6582  001790  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6583  001794  0E01               	movlw	1
  6584  001796  2649               	addwf	??_vfpfcnvrt,f,c
  6585  001798  0E00               	movlw	0
  6586  00179A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6587  00179C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6588  0017A0  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6589  0017A4                     	if	0	;tblptru may be non-zero
  6590  0017A4                     	endif
  6591  0017A4                     	if	0	;tblptru may be non-zero
  6592  0017A4                     	endif
  6593  0017A4  0008               	tblrd		*
  6594  0017A6  FFFF               	dw	65535	; errata NOP
  6595  0017A8                     L28:
  6596  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  6597  0017AA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6598                           
  6599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  6600  0017AE  0E02               	movlw	2
  6601  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6602  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6603  0017B8  26DE               	addwf	postinc2,f,c
  6604  0017BA                     L27:
  6605  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  6606  0017BC  0E00               	movlw	0
  6607  0017BE  22DD               	addwfc	postdec2,f,c
  6608                           
  6609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6610  0017C0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6611  0017C4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6612  0017C8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6613  0017CC  0E02               	movlw	2
  6614  0017CE  26DE               	addwf	postinc2,f,c
  6615  0017D0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6616  0017D4  0E00               	movlw	0
  6617  0017D6  22DD               	addwfc	postdec2,f,c
  6618  0017D8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6619  0017DC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6620  0017E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6621  0017E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6622  0017E8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6623  0017EC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6624  0017F0  D699               	goto	L16
  6625  0017F2                     l4372:
  6626  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  6627                           
  6628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6629  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6630  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6631  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  6632  001800  CFDD FFF7          	movff	postdec2,tblptrh
  6633  001804                     	if	0	;tblptru may be non-zero
  6634  001804                     	endif
  6635  001804                     	if	0	;tblptru may be non-zero
  6636  001804                     	endif
  6637  001804  0008               	tblrd		*
  6638  001806  FFFF               	dw	65535	; errata NOP
  6639  001808  50F5               	movf	tablat,w,c
  6640  00180A  0A25               	xorlw	37
  6641  00180C  A4D8               	btfss	status,2,c
  6642  00180E  D018               	goto	l4382
  6643                           
  6644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6645  001810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6646  001814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6647  001818  2ADE               	incf	postinc2,f,c
  6648  00181A  0E00               	movlw	0
  6649  00181C  22DD               	addwfc	postdec2,f,c
  6650                           
  6651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6652  00181E  0E00               	movlw	0
  6653  001820  6E02               	movwf	fputc@c+1,c
  6654  001822  0E25               	movlw	37
  6655  001824  6E01               	movwf	fputc@c,c
  6656  001826  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6657  00182A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6658  00182E  EC7F  F01B         	call	_fputc	;wreg free
  6659  001832                     l4378:
  6660  001832  FFFF               	dw	65535	; assembler added errata NOP
  6661                           
  6662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6663  001834  0E00               	movlw	0
  6664  001836  6E44               	movwf	?_vfpfcnvrt+1,c
  6665  001838  0E01               	movlw	1
  6666  00183A                     L11:
  6667  00183A  FFFF               	dw	65535	; assembler added errata NOP
  6668  00183C  6E43               	movwf	?_vfpfcnvrt,c
  6669  00183E  D026               	goto	l553
  6670  001840                     l4382:
  6671  001840  FFFF               	dw	65535	; assembler added errata NOP
  6672                           
  6673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6674  001842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6675  001846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6676  00184A  2ADE               	incf	postinc2,f,c
  6677  00184C  0E00               	movlw	0
  6678  00184E  22DD               	addwfc	postdec2,f,c
  6679  001850  EFF5  F007         	goto	l4202
  6680  001854                     l4388:
  6681  001854  FFFF               	dw	65535	; assembler added errata NOP
  6682                           
  6683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6684  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6685  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6686  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  6687  001862  CFDD FFF7          	movff	postdec2,tblptrh
  6688  001866                     	if	0	;tblptru may be non-zero
  6689  001866                     	endif
  6690  001866                     	if	0	;tblptru may be non-zero
  6691  001866                     	endif
  6692  001866  0008               	tblrd		*
  6693  001868  FFFF               	dw	65535	; errata NOP
  6694  00186A  50F5               	movf	tablat,w,c
  6695  00186C  6E01               	movwf	fputc@c,c
  6696  00186E  6A02               	clrf	fputc@c+1,c
  6697  001870  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6698  001874  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6699  001878  EC7F  F01B         	call	_fputc	;wreg free
  6700                           
  6701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6702  00187C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6703  001880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6704  001884  2ADE               	incf	postinc2,f,c
  6705  001886  0E00               	movlw	0
  6706  001888  22DD               	addwfc	postdec2,f,c
  6707  00188A  D7D3               	goto	l4378
  6708  00188C                     l553:
  6709  00188C  FFFF               	dw	65535	; assembler added errata NOP
  6710  00188E  0012               	return		;funcret
  6711  001890  FFFF               	dw	65535	; errata NOP
  6712  001892                     __end_of_vfpfcnvrt:
  6713                           	opt callstack 0
  6714                           
  6715 ;; *************** function _xtoa *****************
  6716 ;; Defined at:
  6717 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6720 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6721 ;;  d               8   29[COMRAM] unsigned long long 
  6722 ;;  x               1   37[COMRAM] unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  n               8   54[COMRAM] unsigned long long 
  6725 ;;  c               2   64[COMRAM] int 
  6726 ;;  i               2   62[COMRAM] int 
  6727 ;;  w               2   52[COMRAM] int 
  6728 ;;  p               2   50[COMRAM] int 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2   27[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6738 ;;      Params:        11       0       0       0       0       0       0
  6739 ;;      Locals:        20       0       0       0       0       0       0
  6740 ;;      Temps:          8       0       0       0       0       0       0
  6741 ;;      Totals:        39       0       0       0       0       0       0
  6742 ;;Total ram usage:       39 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    6
  6745 ;; This function calls:
  6746 ;;		_isalpha
  6747 ;;		_isupper
  6748 ;;		_pad
  6749 ;;		_toupper
  6750 ;; This function is called by:
  6751 ;;		_vfpfcnvrt
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text22
  6756  0021C2                     __ptext22:
  6757                           	opt callstack 0
  6758  0021C2                     _xtoa:
  6759                           	opt callstack 0
  6760  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  6761                           
  6762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6763                           
  6764                           ;incstack = 0
  6765  0021C4  0100               	movlb	0	; () banked
  6766  0021C6  AFCF               	btfss	(_prec+1)& (0+255),7,b
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6770  0021C8  93D0               	bcf	_flags& (0+255),1,b
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6774  0021CA  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  6775  0021CC  D005               	goto	u3640
  6776  0021CE  51CF               	movf	(_prec+1)& (0+255),w,b
  6777  0021D0  E109               	bnz	l491
  6778  0021D2  05CE               	decf	_prec& (0+255),w,b
  6779  0021D4  B0D8               	btfsc	status,0,c
  6780  0021D6  D006               	goto	l491
  6781  0021D8                     u3640:
  6782  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  6783                           
  6784                           ; BSR set to: 0
  6785  0021DA  0E00               	movlw	0
  6786  0021DC  6E34               	movwf	xtoa@p+1,c
  6787  0021DE  0E01               	movlw	1
  6788  0021E0  6E33               	movwf	xtoa@p,c
  6789  0021E2  D005               	goto	l493
  6790  0021E4                     l491:
  6791  0021E4  FFFF               	dw	65535	; assembler added errata NOP
  6792                           
  6793                           ; BSR set to: 0
  6794  0021E6  C0CE  F033         	movff	_prec,xtoa@p
  6795  0021EA  C0CF  F034         	movff	_prec+1,xtoa@p+1
  6796  0021EE                     l493:
  6797  0021EE  FFFF               	dw	65535	; assembler added errata NOP
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6801  0021F0  C0CC  F035         	movff	_width,xtoa@w
  6802  0021F4  C0CD  F036         	movff	_width+1,xtoa@w+1
  6803                           
  6804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6805  0021F8  A9D0               	btfss	_flags& (0+255),4,b
  6806  0021FA  D004               	goto	l3902
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6810  0021FC  0EFE               	movlw	254
  6811  0021FE  2635               	addwf	xtoa@w,f,c
  6812  002200  0EFF               	movlw	255
  6813  002202  2236               	addwfc	xtoa@w+1,f,c
  6814  002204                     l3902:
  6815  002204  FFFF               	dw	65535	; assembler added errata NOP
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6819  002206  C01E  F037         	movff	xtoa@d,xtoa@n
  6820  00220A  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6821  00220E  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6822  002212  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6823  002216  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6824  00221A  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6825  00221E  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6826  002222  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6830  002226  0E00               	movlw	0
  6831  002228  6E40               	movwf	xtoa@i+1,c
  6832  00222A  0E1F               	movlw	31
  6833  00222C  6E3F               	movwf	xtoa@i,c
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6837  00222E  0E00               	movlw	0
  6838  002230  6FF4               	movwf	(_dbuf+31)& (0+255),b
  6839                           
  6840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6841  002232  D09D               	goto	l3938
  6842  002234                     l3908:
  6843  002234  FFFF               	dw	65535	; assembler added errata NOP
  6844                           
  6845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6846  002236  063F               	decf	xtoa@i,f,c
  6847  002238  A0D8               	btfss	status,0,c
  6848  00223A  0640               	decf	xtoa@i+1,f,c
  6849                           
  6850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6851  00223C  0E0F               	movlw	15
  6852  00223E  1437               	andwf	xtoa@n,w,c
  6853  002240  6E41               	movwf	xtoa@c,c
  6854  002242  6A42               	clrf	xtoa@c+1,c
  6855                           
  6856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6857  002244  BE42               	btfsc	xtoa@c+1,7,c
  6858  002246  D008               	goto	l3916
  6859  002248  5042               	movf	xtoa@c+1,w,c
  6860  00224A  E104               	bnz	u3660
  6861  00224C  0E0A               	movlw	10
  6862  00224E  5C41               	subwf	xtoa@c,w,c
  6863  002250  A0D8               	btfss	status,0,c
  6864  002252  D002               	goto	l3916
  6865  002254                     u3660:
  6866  002254  0E57               	movlw	87
  6867  002256  D002               	goto	L25
  6868  002258                     l3916:
  6869  002258  FFFF               	dw	65535	; assembler added errata NOP
  6870  00225A  0E30               	movlw	48
  6871  00225C                     L25:
  6872  00225C  FFFF               	dw	65535	; assembler added errata NOP
  6873  00225E  2441               	addwf	xtoa@c,w,c
  6874  002260  6E41               	movwf	xtoa@c,c
  6875  002262  0E00               	movlw	0
  6876  002264  2042               	addwfc	xtoa@c+1,w,c
  6877  002266  6E42               	movwf	xtoa@c+1,c
  6878                           
  6879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  6880  002268  0EBF               	movlw	191
  6881  00226A  6E27               	movwf	??_xtoa& (0+255),c
  6882  00226C  0EFF               	movlw	255
  6883  00226E  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6884  002270  5026               	movf	xtoa@x,w,c
  6885  002272  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6886  002274  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  6887  002276  5027               	movf	??_xtoa,w,c
  6888  002278  2629               	addwf	??_xtoa+2,f,c
  6889  00227A  5028               	movf	??_xtoa+1,w,c
  6890  00227C  222A               	addwfc	??_xtoa+3,f,c
  6891  00227E  502A               	movf	??_xtoa+3,w,c
  6892  002280  E106               	bnz	u3670
  6893  002282  0E1A               	movlw	26
  6894  002284  5C29               	subwf	??_xtoa+2,w,c
  6895  002286  B0D8               	btfsc	status,0,c
  6896  002288  D002               	goto	u3670
  6897  00228A  0E01               	movlw	1
  6898  00228C  D002               	goto	u3680
  6899  00228E                     u3670:
  6900  00228E  FFFF               	dw	65535	; assembler added errata NOP
  6901  002290  0E00               	movlw	0
  6902  002292                     u3680:
  6903  002292  FFFF               	dw	65535	; assembler added errata NOP
  6904  002294  6E2F               	movwf	_xtoa$1111,c
  6905  002296  6A30               	clrf	_xtoa$1111+1,c
  6906  002298  502F               	movf	_xtoa$1111,w,c
  6907  00229A  1030               	iorwf	_xtoa$1111+1,w,c
  6908  00229C  B4D8               	btfsc	status,2,c
  6909  00229E  D029               	goto	l3930
  6910  0022A0  0E9F               	movlw	159
  6911  0022A2  6E27               	movwf	??_xtoa& (0+255),c
  6912  0022A4  0EFF               	movlw	255
  6913  0022A6  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6914  0022A8  0E20               	movlw	32
  6915  0022AA  1041               	iorwf	xtoa@c,w,c
  6916  0022AC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6917  0022AE  0E00               	movlw	0
  6918  0022B0  1042               	iorwf	xtoa@c+1,w,c
  6919  0022B2  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  6920  0022B4  5027               	movf	??_xtoa,w,c
  6921  0022B6  2629               	addwf	??_xtoa+2,f,c
  6922  0022B8  5028               	movf	??_xtoa+1,w,c
  6923  0022BA  222A               	addwfc	??_xtoa+3,f,c
  6924  0022BC  502A               	movf	??_xtoa+3,w,c
  6925  0022BE  E106               	bnz	u3700
  6926  0022C0  0E1A               	movlw	26
  6927  0022C2  5C29               	subwf	??_xtoa+2,w,c
  6928  0022C4  B0D8               	btfsc	status,0,c
  6929  0022C6  D002               	goto	u3700
  6930  0022C8  0E01               	movlw	1
  6931  0022CA  D002               	goto	u3710
  6932  0022CC                     u3700:
  6933  0022CC  FFFF               	dw	65535	; assembler added errata NOP
  6934  0022CE  0E00               	movlw	0
  6935  0022D0                     u3710:
  6936  0022D0  FFFF               	dw	65535	; assembler added errata NOP
  6937  0022D2  6E31               	movwf	_xtoa$1112,c
  6938  0022D4  6A32               	clrf	_xtoa$1112+1,c
  6939  0022D6  5031               	movf	_xtoa$1112,w,c
  6940  0022D8  1032               	iorwf	_xtoa$1112+1,w,c
  6941  0022DA  B4D8               	btfsc	status,2,c
  6942  0022DC  D00A               	goto	l3930
  6943                           
  6944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6945  0022DE  C041  F007         	movff	xtoa@c,toupper@c
  6946  0022E2  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6947  0022E6  EC56  F01D         	call	_toupper	;wreg free
  6948  0022EA  C007  F041         	movff	?_toupper,xtoa@c
  6949  0022EE  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6950  0022F2                     l3930:
  6951  0022F2  FFFF               	dw	65535	; assembler added errata NOP
  6952                           
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6954  0022F4  0ED5               	movlw	low _dbuf
  6955  0022F6  243F               	addwf	xtoa@i,w,c
  6956  0022F8  6ED9               	movwf	fsr2l,c
  6957  0022FA  0E00               	movlw	high _dbuf
  6958  0022FC  2040               	addwfc	xtoa@i+1,w,c
  6959  0022FE  6EDA               	movwf	fsr2h,c
  6960  002300  C041  FFDF         	movff	xtoa@c,indf2
  6961                           
  6962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6963  002304  0633               	decf	xtoa@p,f,c
  6964  002306  A0D8               	btfss	status,0,c
  6965  002308  0634               	decf	xtoa@p+1,f,c
  6966                           
  6967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6968  00230A  0635               	decf	xtoa@w,f,c
  6969  00230C  A0D8               	btfss	status,0,c
  6970  00230E  0636               	decf	xtoa@w+1,f,c
  6971                           
  6972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6973  002310  C037  F027         	movff	xtoa@n,??_xtoa
  6974  002314  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6975  002318  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6976  00231C  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6977  002320  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6978  002324  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6979  002328  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6980  00232C  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6981  002330  0E05               	movlw	5
  6982  002332  D00A               	goto	u3730
  6983  002334                     u3735:
  6984  002334  FFFF               	dw	65535	; assembler added errata NOP
  6985  002336  90D8               	bcf	status,0,c
  6986  002338  322E               	rrcf	??_xtoa+7,f,c
  6987  00233A  322D               	rrcf	??_xtoa+6,f,c
  6988  00233C  322C               	rrcf	??_xtoa+5,f,c
  6989  00233E  322B               	rrcf	??_xtoa+4,f,c
  6990  002340  322A               	rrcf	??_xtoa+3,f,c
  6991  002342  3229               	rrcf	??_xtoa+2,f,c
  6992  002344  3228               	rrcf	??_xtoa+1,f,c
  6993  002346  3227               	rrcf	??_xtoa,f,c
  6994  002348                     u3730:
  6995  002348  FFFF               	dw	65535	; assembler added errata NOP
  6996  00234A  2EE8               	decfsz	wreg,f,c
  6997  00234C  D7F3               	goto	u3735
  6998  00234E  C027  F037         	movff	??_xtoa,xtoa@n
  6999  002352  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  7000  002356  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  7001  00235A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  7002  00235E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  7003  002362  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  7004  002366  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  7005  00236A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  7006  00236E                     l3938:
  7007  00236E  FFFF               	dw	65535	; assembler added errata NOP
  7008                           
  7009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7010  002370  BE40               	btfsc	xtoa@i+1,7,c
  7011  002372  D022               	goto	u3780
  7012  002374  5040               	movf	xtoa@i+1,w,c
  7013  002376  E104               	bnz	u3740
  7014  002378  0E02               	movlw	2
  7015  00237A  5C3F               	subwf	xtoa@i,w,c
  7016  00237C  A0D8               	btfss	status,0,c
  7017  00237E  D01C               	goto	u3780
  7018  002380                     u3740:
  7019  002380  5037               	movf	xtoa@n,w,c
  7020  002382  1038               	iorwf	xtoa@n+1,w,c
  7021  002384  1039               	iorwf	xtoa@n+2,w,c
  7022  002386  103A               	iorwf	xtoa@n+3,w,c
  7023  002388  103B               	iorwf	xtoa@n+4,w,c
  7024  00238A  103C               	iorwf	xtoa@n+5,w,c
  7025  00238C  103D               	iorwf	xtoa@n+6,w,c
  7026  00238E  103E               	iorwf	xtoa@n+7,w,c
  7027  002390  A4D8               	btfss	status,2,c
  7028  002392  D750               	goto	l3908
  7029  002394  BE34               	btfsc	xtoa@p+1,7,c
  7030  002396  D005               	goto	u3760
  7031  002398  5034               	movf	xtoa@p+1,w,c
  7032  00239A  E102               	bnz	u3761
  7033  00239C  0433               	decf	xtoa@p,w,c
  7034  00239E  B0D8               	btfsc	status,0,c
  7035  0023A0                     u3761:
  7036  0023A0  D749               	goto	l3908
  7037  0023A2                     u3760:
  7038  0023A2  FFFF               	dw	65535	; assembler added errata NOP
  7039  0023A4  BE36               	btfsc	xtoa@w+1,7,c
  7040  0023A6  D008               	goto	u3780
  7041  0023A8  5036               	movf	xtoa@w+1,w,c
  7042  0023AA  E103               	bnz	u3770
  7043  0023AC  0435               	decf	xtoa@w,w,c
  7044  0023AE  A0D8               	btfss	status,0,c
  7045  0023B0  D003               	goto	u3780
  7046  0023B2                     u3770:
  7047  0023B2  0100               	movlb	0	; () banked
  7048  0023B4  B3D0               	btfsc	_flags& (0+255),1,b
  7049  0023B6  D73E               	goto	l3908
  7050  0023B8                     u3780:
  7051  0023B8  FFFF               	dw	65535	; assembler added errata NOP
  7052                           
  7053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7054  0023BA  0100               	movlb	0	; () banked
  7055  0023BC  A9D0               	btfss	_flags& (0+255),4,b
  7056  0023BE  D016               	goto	l3954
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7060  0023C0  063F               	decf	xtoa@i,f,c
  7061  0023C2  A0D8               	btfss	status,0,c
  7062  0023C4  0640               	decf	xtoa@i+1,f,c
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7066  0023C6  0ED5               	movlw	low _dbuf
  7067  0023C8  243F               	addwf	xtoa@i,w,c
  7068  0023CA  6ED9               	movwf	fsr2l,c
  7069  0023CC  0E00               	movlw	high _dbuf
  7070  0023CE  2040               	addwfc	xtoa@i+1,w,c
  7071  0023D0  6EDA               	movwf	fsr2h,c
  7072  0023D2  C026  FFDF         	movff	xtoa@x,indf2
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7076  0023D6  063F               	decf	xtoa@i,f,c
  7077  0023D8  A0D8               	btfss	status,0,c
  7078  0023DA  0640               	decf	xtoa@i+1,f,c
  7079                           
  7080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7081  0023DC  0ED5               	movlw	low _dbuf
  7082  0023DE  243F               	addwf	xtoa@i,w,c
  7083  0023E0  6ED9               	movwf	fsr2l,c
  7084  0023E2  0E00               	movlw	high _dbuf
  7085  0023E4  2040               	addwfc	xtoa@i+1,w,c
  7086  0023E6  6EDA               	movwf	fsr2h,c
  7087  0023E8  0E30               	movlw	48
  7088  0023EA  6EDF               	movwf	indf2,c
  7089  0023EC                     l3954:
  7090  0023EC  FFFF               	dw	65535	; assembler added errata NOP
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7094  0023EE  C01C  F011         	movff	xtoa@fp,pad@fp
  7095  0023F2  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7096  0023F6  0ED5               	movlw	low _dbuf
  7097  0023F8  243F               	addwf	xtoa@i,w,c
  7098  0023FA  6E13               	movwf	pad@buf,c
  7099  0023FC  0E00               	movlw	high _dbuf
  7100  0023FE  2040               	addwfc	xtoa@i+1,w,c
  7101  002400  6E14               	movwf	pad@buf+1,c
  7102  002402  C035  F015         	movff	xtoa@w,pad@p
  7103  002406  C036  F016         	movff	xtoa@w+1,pad@p+1
  7104  00240A  ECD5  F01B         	call	_pad	;wreg free
  7105  00240E  C011  F01C         	movff	?_pad,?_xtoa
  7106  002412  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7107  002416  0012               	return		;funcret
  7108  002418  FFFF               	dw	65535	; errata NOP
  7109  00241A                     __end_of_xtoa:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _toupper *****************
  7113 ;; Defined at:
  7114 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  c               2    6[COMRAM] int 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    6[COMRAM] int 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7128 ;;      Params:         2       0       0       0       0       0       0
  7129 ;;      Locals:         2       0       0       0       0       0       0
  7130 ;;      Temps:          4       0       0       0       0       0       0
  7131 ;;      Totals:         8       0       0       0       0       0       0
  7132 ;;Total ram usage:        8 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		_islower
  7137 ;; This function is called by:
  7138 ;;		_xtoa
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text23
  7143  003AAC                     __ptext23:
  7144                           	opt callstack 0
  7145  003AAC                     _toupper:
  7146                           	opt callstack 0
  7147  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  7148                           
  7149                           ;incstack = 0
  7150  003AAE  0E9F               	movlw	159
  7151  003AB0  6E09               	movwf	??_toupper& (0+255),c
  7152  003AB2  0EFF               	movlw	255
  7153  003AB4  6E0A               	movwf	(??_toupper+1)& (0+255),c
  7154  003AB6  C007  F00B         	movff	toupper@c,??_toupper+2
  7155  003ABA  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7156  003ABE  5009               	movf	??_toupper,w,c
  7157  003AC0  260B               	addwf	??_toupper+2,f,c
  7158  003AC2  500A               	movf	??_toupper+1,w,c
  7159  003AC4  220C               	addwfc	??_toupper+3,f,c
  7160  003AC6  500C               	movf	??_toupper+3,w,c
  7161  003AC8  E106               	bnz	u2940
  7162  003ACA  0E1A               	movlw	26
  7163  003ACC  5C0B               	subwf	??_toupper+2,w,c
  7164  003ACE  B0D8               	btfsc	status,0,c
  7165  003AD0  D002               	goto	u2940
  7166  003AD2  0E01               	movlw	1
  7167  003AD4  D002               	goto	u2950
  7168  003AD6                     u2940:
  7169  003AD6  FFFF               	dw	65535	; assembler added errata NOP
  7170  003AD8  0E00               	movlw	0
  7171  003ADA                     u2950:
  7172  003ADA  FFFF               	dw	65535	; assembler added errata NOP
  7173  003ADC  6E0D               	movwf	_toupper$1878,c
  7174  003ADE  6A0E               	clrf	_toupper$1878+1,c
  7175  003AE0  500D               	movf	_toupper$1878,w,c
  7176  003AE2  100E               	iorwf	_toupper$1878+1,w,c
  7177  003AE4  B4D8               	btfsc	status,2,c
  7178  003AE6  D005               	goto	l1426
  7179  003AE8  0E5F               	movlw	95
  7180  003AEA  1407               	andwf	toupper@c,w,c
  7181  003AEC  6E07               	movwf	?_toupper,c
  7182  003AEE  6A08               	clrf	?_toupper+1,c
  7183  003AF0  D005               	goto	l1431
  7184  003AF2                     l1426:
  7185  003AF2  FFFF               	dw	65535	; assembler added errata NOP
  7186  003AF4  C007  F007         	movff	toupper@c,?_toupper
  7187  003AF8  C008  F008         	movff	toupper@c+1,?_toupper+1
  7188  003AFC                     l1431:
  7189  003AFC  FFFF               	dw	65535	; assembler added errata NOP
  7190  003AFE  0012               	return		;funcret
  7191  003B00  FFFF               	dw	65535	; errata NOP
  7192  003B02                     __end_of_toupper:
  7193                           	opt callstack 0
  7194                           
  7195 ;; *************** function _islower *****************
  7196 ;; Defined at:
  7197 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  c               2    0[COMRAM] int 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  2    0[COMRAM] int 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7211 ;;      Params:         2       0       0       0       0       0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0
  7213 ;;      Temps:          4       0       0       0       0       0       0
  7214 ;;      Totals:         6       0       0       0       0       0       0
  7215 ;;Total ram usage:        6 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    2
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_toupper
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text24
  7226  003D78                     __ptext24:
  7227                           	opt callstack 0
  7228  003D78                     _islower:
  7229                           	opt callstack 0
  7230  003D78  FFFF               	dw	65535	; assembler added errata NOP
  7231                           
  7232                           ;incstack = 0
  7233  003D7A  0E9F               	movlw	159
  7234  003D7C  6E03               	movwf	??_islower& (0+255),c
  7235  003D7E  0EFF               	movlw	255
  7236  003D80  6E04               	movwf	(??_islower+1)& (0+255),c
  7237  003D82  C001  F005         	movff	islower@c,??_islower+2
  7238  003D86  C002  F006         	movff	islower@c+1,??_islower+3
  7239  003D8A  5003               	movf	??_islower,w,c
  7240  003D8C  2605               	addwf	??_islower+2,f,c
  7241  003D8E  5004               	movf	??_islower+1,w,c
  7242  003D90  2206               	addwfc	??_islower+3,f,c
  7243  003D92  5006               	movf	??_islower+3,w,c
  7244  003D94  E106               	bnz	u2830
  7245  003D96  0E1A               	movlw	26
  7246  003D98  5C05               	subwf	??_islower+2,w,c
  7247  003D9A  B0D8               	btfsc	status,0,c
  7248  003D9C  D002               	goto	u2830
  7249  003D9E  0E01               	movlw	1
  7250  003DA0  D002               	goto	u2840
  7251  003DA2                     u2830:
  7252  003DA2  FFFF               	dw	65535	; assembler added errata NOP
  7253  003DA4  0E00               	movlw	0
  7254  003DA6                     u2840:
  7255  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  7256  003DA8  6E01               	movwf	?_islower,c
  7257  003DAA  6A02               	clrf	?_islower+1,c
  7258  003DAC  0012               	return		;funcret
  7259  003DAE  FFFF               	dw	65535	; errata NOP
  7260  003DB0                     __end_of_islower:
  7261                           	opt callstack 0
  7262                           
  7263 ;; *************** function _isupper *****************
  7264 ;; Defined at:
  7265 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  c               2    0[COMRAM] int 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  2    0[COMRAM] int 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7279 ;;      Params:         2       0       0       0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0
  7281 ;;      Temps:          4       0       0       0       0       0       0
  7282 ;;      Totals:         6       0       0       0       0       0       0
  7283 ;;Total ram usage:        6 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    2
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_xtoa
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text25
  7294  003DB0                     __ptext25:
  7295                           	opt callstack 0
  7296  003DB0                     _isupper:
  7297                           	opt callstack 0
  7298  003DB0  FFFF               	dw	65535	; assembler added errata NOP
  7299                           
  7300                           ;incstack = 0
  7301  003DB2  0EBF               	movlw	191
  7302  003DB4  6E03               	movwf	??_isupper& (0+255),c
  7303  003DB6  0EFF               	movlw	255
  7304  003DB8  6E04               	movwf	(??_isupper+1)& (0+255),c
  7305  003DBA  C001  F005         	movff	isupper@c,??_isupper+2
  7306  003DBE  C002  F006         	movff	isupper@c+1,??_isupper+3
  7307  003DC2  5003               	movf	??_isupper,w,c
  7308  003DC4  2605               	addwf	??_isupper+2,f,c
  7309  003DC6  5004               	movf	??_isupper+1,w,c
  7310  003DC8  2206               	addwfc	??_isupper+3,f,c
  7311  003DCA  5006               	movf	??_isupper+3,w,c
  7312  003DCC  E106               	bnz	u2900
  7313  003DCE  0E1A               	movlw	26
  7314  003DD0  5C05               	subwf	??_isupper+2,w,c
  7315  003DD2  B0D8               	btfsc	status,0,c
  7316  003DD4  D002               	goto	u2900
  7317  003DD6  0E01               	movlw	1
  7318  003DD8  D002               	goto	u2910
  7319  003DDA                     u2900:
  7320  003DDA  FFFF               	dw	65535	; assembler added errata NOP
  7321  003DDC  0E00               	movlw	0
  7322  003DDE                     u2910:
  7323  003DDE  FFFF               	dw	65535	; assembler added errata NOP
  7324  003DE0  6E01               	movwf	?_isupper,c
  7325  003DE2  6A02               	clrf	?_isupper+1,c
  7326  003DE4  0012               	return		;funcret
  7327  003DE6  FFFF               	dw	65535	; errata NOP
  7328  003DE8                     __end_of_isupper:
  7329                           	opt callstack 0
  7330                           
  7331 ;; *************** function _isalpha *****************
  7332 ;; Defined at:
  7333 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  c               2    0[COMRAM] int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  2    0[COMRAM] int 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7347 ;;      Params:         2       0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0
  7349 ;;      Temps:          4       0       0       0       0       0       0
  7350 ;;      Totals:         6       0       0       0       0       0       0
  7351 ;;Total ram usage:        6 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    2
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_xtoa
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text26
  7362  003D00                     __ptext26:
  7363                           	opt callstack 0
  7364  003D00                     _isalpha:
  7365                           	opt callstack 0
  7366  003D00  FFFF               	dw	65535	; assembler added errata NOP
  7367                           
  7368                           ;incstack = 0
  7369  003D02  0E9F               	movlw	159
  7370  003D04  6E03               	movwf	??_isalpha& (0+255),c
  7371  003D06  0EFF               	movlw	255
  7372  003D08  6E04               	movwf	(??_isalpha+1)& (0+255),c
  7373  003D0A  0E20               	movlw	32
  7374  003D0C  1001               	iorwf	isalpha@c,w,c
  7375  003D0E  6E05               	movwf	(??_isalpha+2)& (0+255),c
  7376  003D10  0E00               	movlw	0
  7377  003D12  1002               	iorwf	isalpha@c+1,w,c
  7378  003D14  6E06               	movwf	(??_isalpha+3)& (0+255),c
  7379  003D16  5003               	movf	??_isalpha,w,c
  7380  003D18  2605               	addwf	??_isalpha+2,f,c
  7381  003D1A  5004               	movf	??_isalpha+1,w,c
  7382  003D1C  2206               	addwfc	??_isalpha+3,f,c
  7383  003D1E  5006               	movf	??_isalpha+3,w,c
  7384  003D20  E106               	bnz	u2920
  7385  003D22  0E1A               	movlw	26
  7386  003D24  5C05               	subwf	??_isalpha+2,w,c
  7387  003D26  B0D8               	btfsc	status,0,c
  7388  003D28  D002               	goto	u2920
  7389  003D2A  0E01               	movlw	1
  7390  003D2C  D002               	goto	u2930
  7391  003D2E                     u2920:
  7392  003D2E  FFFF               	dw	65535	; assembler added errata NOP
  7393  003D30  0E00               	movlw	0
  7394  003D32                     u2930:
  7395  003D32  FFFF               	dw	65535	; assembler added errata NOP
  7396  003D34  6E01               	movwf	?_isalpha,c
  7397  003D36  6A02               	clrf	?_isalpha+1,c
  7398  003D38  0012               	return		;funcret
  7399  003D3A  FFFF               	dw	65535	; errata NOP
  7400  003D3C                     __end_of_isalpha:
  7401                           	opt callstack 0
  7402                           
  7403 ;; *************** function _utoa *****************
  7404 ;; Defined at:
  7405 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7408 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7409 ;;  d               8   29[COMRAM] unsigned long long 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  n               8   49[COMRAM] unsigned long long 
  7412 ;;  i               2   57[COMRAM] int 
  7413 ;;  w               2   47[COMRAM] int 
  7414 ;;  p               2   45[COMRAM] int 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  2   27[COMRAM] int 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7424 ;;      Params:        10       0       0       0       0       0       0
  7425 ;;      Locals:        14       0       0       0       0       0       0
  7426 ;;      Temps:          8       0       0       0       0       0       0
  7427 ;;      Totals:        32       0       0       0       0       0       0
  7428 ;;Total ram usage:       32 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    6
  7431 ;; This function calls:
  7432 ;;		___lodiv
  7433 ;;		___lomod
  7434 ;;		_pad
  7435 ;; This function is called by:
  7436 ;;		_vfpfcnvrt
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text27
  7441  0027E0                     __ptext27:
  7442                           	opt callstack 0
  7443  0027E0                     _utoa:
  7444                           	opt callstack 0
  7445  0027E0  FFFF               	dw	65535	; assembler added errata NOP
  7446                           
  7447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  7448                           
  7449                           ;incstack = 0
  7450  0027E2  0100               	movlb	0	; () banked
  7451  0027E4  AFCF               	btfss	(_prec+1)& (0+255),7,b
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  7455  0027E6  93D0               	bcf	_flags& (0+255),1,b
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  7459  0027E8  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  7460  0027EA  D005               	goto	u3570
  7461  0027EC  51CF               	movf	(_prec+1)& (0+255),w,b
  7462  0027EE  E109               	bnz	l476
  7463  0027F0  05CE               	decf	_prec& (0+255),w,b
  7464  0027F2  B0D8               	btfsc	status,0,c
  7465  0027F4  D006               	goto	l476
  7466  0027F6                     u3570:
  7467  0027F6  FFFF               	dw	65535	; assembler added errata NOP
  7468                           
  7469                           ; BSR set to: 0
  7470  0027F8  0E00               	movlw	0
  7471  0027FA  6E2F               	movwf	utoa@p+1,c
  7472  0027FC  0E01               	movlw	1
  7473  0027FE  6E2E               	movwf	utoa@p,c
  7474  002800  D005               	goto	l478
  7475  002802                     l476:
  7476  002802  FFFF               	dw	65535	; assembler added errata NOP
  7477                           
  7478                           ; BSR set to: 0
  7479  002804  C0CE  F02E         	movff	_prec,utoa@p
  7480  002808  C0CF  F02F         	movff	_prec+1,utoa@p+1
  7481  00280C                     l478:
  7482  00280C  FFFF               	dw	65535	; assembler added errata NOP
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  7486  00280E  C0CC  F030         	movff	_width,utoa@w
  7487  002812  C0CD  F031         	movff	_width+1,utoa@w+1
  7488                           
  7489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  7490  002816  C01E  F032         	movff	utoa@d,utoa@n
  7491  00281A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7492  00281E  C020  F034         	movff	utoa@d+2,utoa@n+2
  7493  002822  C021  F035         	movff	utoa@d+3,utoa@n+3
  7494  002826  C022  F036         	movff	utoa@d+4,utoa@n+4
  7495  00282A  C023  F037         	movff	utoa@d+5,utoa@n+5
  7496  00282E  C024  F038         	movff	utoa@d+6,utoa@n+6
  7497  002832  C025  F039         	movff	utoa@d+7,utoa@n+7
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  7501  002836  0E00               	movlw	0
  7502  002838  6E3B               	movwf	utoa@i+1,c
  7503  00283A  0E1F               	movlw	31
  7504  00283C  6E3A               	movwf	utoa@i,c
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  7508  00283E  0E00               	movlw	0
  7509  002840  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7510                           
  7511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7512  002842  D077               	goto	l3878
  7513  002844                     l3868:
  7514  002844  FFFF               	dw	65535	; assembler added errata NOP
  7515                           
  7516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  7517  002846  063A               	decf	utoa@i,f,c
  7518  002848  A0D8               	btfss	status,0,c
  7519  00284A  063B               	decf	utoa@i+1,f,c
  7520                           
  7521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  7522  00284C  0ED5               	movlw	low _dbuf
  7523  00284E  243A               	addwf	utoa@i,w,c
  7524  002850  6ED9               	movwf	fsr2l,c
  7525  002852  0E00               	movlw	high _dbuf
  7526  002854  203B               	addwfc	utoa@i+1,w,c
  7527  002856  6EDA               	movwf	fsr2h,c
  7528  002858  C032  F001         	movff	utoa@n,___lomod@dividend
  7529  00285C  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7530  002860  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7531  002864  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7532  002868  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7533  00286C  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7534  002870  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7535  002874  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7536  002878  0E0A               	movlw	10
  7537  00287A  6E09               	movwf	___lomod@divisor,c
  7538  00287C  0E00               	movlw	0
  7539  00287E  6E0A               	movwf	___lomod@divisor+1,c
  7540  002880  0E00               	movlw	0
  7541  002882  6E0B               	movwf	___lomod@divisor+2,c
  7542  002884  0E00               	movlw	0
  7543  002886  6E0C               	movwf	___lomod@divisor+3,c
  7544  002888  0E00               	movlw	0
  7545  00288A  6E0D               	movwf	___lomod@divisor+4,c
  7546  00288C  0E00               	movlw	0
  7547  00288E  6E0E               	movwf	___lomod@divisor+5,c
  7548  002890  0E00               	movlw	0
  7549  002892  6E0F               	movwf	___lomod@divisor+6,c
  7550  002894  0E00               	movlw	0
  7551  002896  6E10               	movwf	___lomod@divisor+7,c
  7552  002898  EC21  F01B         	call	___lomod	;wreg free
  7553  00289C  C001  F026         	movff	?___lomod,??_utoa
  7554  0028A0  C002  F027         	movff	?___lomod+1,??_utoa+1
  7555  0028A4  C003  F028         	movff	?___lomod+2,??_utoa+2
  7556  0028A8  C004  F029         	movff	?___lomod+3,??_utoa+3
  7557  0028AC  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7558  0028B0  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7559  0028B4  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7560  0028B8  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7561  0028BC  5026               	movf	??_utoa,w,c
  7562  0028BE  0F30               	addlw	48
  7563  0028C0  6EDF               	movwf	indf2,c
  7564                           
  7565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  7566  0028C2  062E               	decf	utoa@p,f,c
  7567  0028C4  A0D8               	btfss	status,0,c
  7568  0028C6  062F               	decf	utoa@p+1,f,c
  7569                           
  7570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  7571  0028C8  0630               	decf	utoa@w,f,c
  7572  0028CA  A0D8               	btfss	status,0,c
  7573  0028CC  0631               	decf	utoa@w+1,f,c
  7574                           
  7575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  7576  0028CE  C032  F001         	movff	utoa@n,___lodiv@dividend
  7577  0028D2  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7578  0028D6  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7579  0028DA  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7580  0028DE  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7581  0028E2  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7582  0028E6  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7583  0028EA  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7584  0028EE  0E0A               	movlw	10
  7585  0028F0  6E09               	movwf	___lodiv@divisor,c
  7586  0028F2  0E00               	movlw	0
  7587  0028F4  6E0A               	movwf	___lodiv@divisor+1,c
  7588  0028F6  0E00               	movlw	0
  7589  0028F8  6E0B               	movwf	___lodiv@divisor+2,c
  7590  0028FA  0E00               	movlw	0
  7591  0028FC  6E0C               	movwf	___lodiv@divisor+3,c
  7592  0028FE  0E00               	movlw	0
  7593  002900  6E0D               	movwf	___lodiv@divisor+4,c
  7594  002902  0E00               	movlw	0
  7595  002904  6E0E               	movwf	___lodiv@divisor+5,c
  7596  002906  0E00               	movlw	0
  7597  002908  6E0F               	movwf	___lodiv@divisor+6,c
  7598  00290A  0E00               	movlw	0
  7599  00290C  6E10               	movwf	___lodiv@divisor+7,c
  7600  00290E  EC83  F019         	call	___lodiv	;wreg free
  7601  002912  C001  F032         	movff	?___lodiv,utoa@n
  7602  002916  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7603  00291A  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7604  00291E  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7605  002922  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7606  002926  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7607  00292A  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7608  00292E  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7609  002932                     l3878:
  7610  002932  FFFF               	dw	65535	; assembler added errata NOP
  7611                           
  7612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7613  002934  503A               	movf	utoa@i,w,c
  7614  002936  103B               	iorwf	utoa@i+1,w,c
  7615  002938  B4D8               	btfsc	status,2,c
  7616  00293A  D01C               	goto	u3620
  7617  00293C  5032               	movf	utoa@n,w,c
  7618  00293E  1033               	iorwf	utoa@n+1,w,c
  7619  002940  1034               	iorwf	utoa@n+2,w,c
  7620  002942  1035               	iorwf	utoa@n+3,w,c
  7621  002944  1036               	iorwf	utoa@n+4,w,c
  7622  002946  1037               	iorwf	utoa@n+5,w,c
  7623  002948  1038               	iorwf	utoa@n+6,w,c
  7624  00294A  1039               	iorwf	utoa@n+7,w,c
  7625  00294C  A4D8               	btfss	status,2,c
  7626  00294E  D77A               	goto	l3868
  7627  002950  BE2F               	btfsc	utoa@p+1,7,c
  7628  002952  D005               	goto	u3600
  7629  002954  502F               	movf	utoa@p+1,w,c
  7630  002956  E102               	bnz	u3601
  7631  002958  042E               	decf	utoa@p,w,c
  7632  00295A  B0D8               	btfsc	status,0,c
  7633  00295C                     u3601:
  7634  00295C  D773               	goto	l3868
  7635  00295E                     u3600:
  7636  00295E  FFFF               	dw	65535	; assembler added errata NOP
  7637  002960  BE31               	btfsc	utoa@w+1,7,c
  7638  002962  D008               	goto	u3620
  7639  002964  5031               	movf	utoa@w+1,w,c
  7640  002966  E103               	bnz	u3610
  7641  002968  0430               	decf	utoa@w,w,c
  7642  00296A  A0D8               	btfss	status,0,c
  7643  00296C  D003               	goto	u3620
  7644  00296E                     u3610:
  7645  00296E  0100               	movlb	0	; () banked
  7646  002970  B3D0               	btfsc	_flags& (0+255),1,b
  7647  002972  D768               	goto	l3868
  7648  002974                     u3620:
  7649  002974  FFFF               	dw	65535	; assembler added errata NOP
  7650                           
  7651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  7652  002976  C01C  F011         	movff	utoa@fp,pad@fp
  7653  00297A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7654  00297E  0ED5               	movlw	low _dbuf
  7655  002980  243A               	addwf	utoa@i,w,c
  7656  002982  6E13               	movwf	pad@buf,c
  7657  002984  0E00               	movlw	high _dbuf
  7658  002986  203B               	addwfc	utoa@i+1,w,c
  7659  002988  6E14               	movwf	pad@buf+1,c
  7660  00298A  C030  F015         	movff	utoa@w,pad@p
  7661  00298E  C031  F016         	movff	utoa@w+1,pad@p+1
  7662  002992  ECD5  F01B         	call	_pad	;wreg free
  7663  002996  C011  F01C         	movff	?_pad,?_utoa
  7664  00299A  C012  F01D         	movff	?_pad+1,?_utoa+1
  7665  00299E  0012               	return		;funcret
  7666  0029A0  FFFF               	dw	65535	; errata NOP
  7667  0029A2                     __end_of_utoa:
  7668                           	opt callstack 0
  7669                           
  7670 ;; *************** function ___lomod *****************
  7671 ;; Defined at:
  7672 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  dividend        8    0[COMRAM] unsigned long long 
  7675 ;;  divisor         8    8[COMRAM] unsigned long long 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  counter         1   16[COMRAM] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  8    0[COMRAM] unsigned long long 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7687 ;;      Params:        16       0       0       0       0       0       0
  7688 ;;      Locals:         1       0       0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0
  7690 ;;      Totals:        17       0       0       0       0       0       0
  7691 ;;Total ram usage:       17 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    2
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_utoa
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text28
  7702  003642                     __ptext28:
  7703                           	opt callstack 0
  7704  003642                     ___lomod:
  7705                           	opt callstack 0
  7706  003642  FFFF               	dw	65535	; assembler added errata NOP
  7707                           
  7708                           ;incstack = 0
  7709  003644  5009               	movf	___lomod@divisor,w,c
  7710  003646  100A               	iorwf	___lomod@divisor+1,w,c
  7711  003648  100B               	iorwf	___lomod@divisor+2,w,c
  7712  00364A  100C               	iorwf	___lomod@divisor+3,w,c
  7713  00364C  100D               	iorwf	___lomod@divisor+4,w,c
  7714  00364E  100E               	iorwf	___lomod@divisor+5,w,c
  7715  003650  100F               	iorwf	___lomod@divisor+6,w,c
  7716  003652  1010               	iorwf	___lomod@divisor+7,w,c
  7717  003654  B4D8               	btfsc	status,2,c
  7718  003656  D040               	goto	l1058
  7719  003658  0E01               	movlw	1
  7720  00365A  6E11               	movwf	___lomod@counter,c
  7721  00365C  D00B               	goto	l3668
  7722  00365E                     l3666:
  7723  00365E  FFFF               	dw	65535	; assembler added errata NOP
  7724  003660  90D8               	bcf	status,0,c
  7725  003662  3609               	rlcf	___lomod@divisor,f,c
  7726  003664  360A               	rlcf	___lomod@divisor+1,f,c
  7727  003666  360B               	rlcf	___lomod@divisor+2,f,c
  7728  003668  360C               	rlcf	___lomod@divisor+3,f,c
  7729  00366A  360D               	rlcf	___lomod@divisor+4,f,c
  7730  00366C  360E               	rlcf	___lomod@divisor+5,f,c
  7731  00366E  360F               	rlcf	___lomod@divisor+6,f,c
  7732  003670  3610               	rlcf	___lomod@divisor+7,f,c
  7733  003672  2A11               	incf	___lomod@counter,f,c
  7734  003674                     l3668:
  7735  003674  FFFF               	dw	65535	; assembler added errata NOP
  7736  003676  AE10               	btfss	___lomod@divisor+7,7,c
  7737  003678  D7F2               	goto	l3666
  7738  00367A                     u3170:
  7739  00367A  FFFF               	dw	65535	; assembler added errata NOP
  7740  00367C  5009               	movf	___lomod@divisor,w,c
  7741  00367E  5C01               	subwf	___lomod@dividend,w,c
  7742  003680  500A               	movf	___lomod@divisor+1,w,c
  7743  003682  5802               	subwfb	___lomod@dividend+1,w,c
  7744  003684  500B               	movf	___lomod@divisor+2,w,c
  7745  003686  5803               	subwfb	___lomod@dividend+2,w,c
  7746  003688  500C               	movf	___lomod@divisor+3,w,c
  7747  00368A  5804               	subwfb	___lomod@dividend+3,w,c
  7748  00368C  500D               	movf	___lomod@divisor+4,w,c
  7749  00368E  5805               	subwfb	___lomod@dividend+4,w,c
  7750  003690  500E               	movf	___lomod@divisor+5,w,c
  7751  003692  5806               	subwfb	___lomod@dividend+5,w,c
  7752  003694  500F               	movf	___lomod@divisor+6,w,c
  7753  003696  5807               	subwfb	___lomod@dividend+6,w,c
  7754  003698  5010               	movf	___lomod@divisor+7,w,c
  7755  00369A  5808               	subwfb	___lomod@dividend+7,w,c
  7756  00369C  A0D8               	btfss	status,0,c
  7757  00369E  D010               	goto	l3674
  7758  0036A0  5009               	movf	___lomod@divisor,w,c
  7759  0036A2  5E01               	subwf	___lomod@dividend,f,c
  7760  0036A4  500A               	movf	___lomod@divisor+1,w,c
  7761  0036A6  5A02               	subwfb	___lomod@dividend+1,f,c
  7762  0036A8  500B               	movf	___lomod@divisor+2,w,c
  7763  0036AA  5A03               	subwfb	___lomod@dividend+2,f,c
  7764  0036AC  500C               	movf	___lomod@divisor+3,w,c
  7765  0036AE  5A04               	subwfb	___lomod@dividend+3,f,c
  7766  0036B0  500D               	movf	___lomod@divisor+4,w,c
  7767  0036B2  5A05               	subwfb	___lomod@dividend+4,f,c
  7768  0036B4  500E               	movf	___lomod@divisor+5,w,c
  7769  0036B6  5A06               	subwfb	___lomod@dividend+5,f,c
  7770  0036B8  500F               	movf	___lomod@divisor+6,w,c
  7771  0036BA  5A07               	subwfb	___lomod@dividend+6,f,c
  7772  0036BC  5010               	movf	___lomod@divisor+7,w,c
  7773  0036BE  5A08               	subwfb	___lomod@dividend+7,f,c
  7774  0036C0                     l3674:
  7775  0036C0  FFFF               	dw	65535	; assembler added errata NOP
  7776  0036C2  90D8               	bcf	status,0,c
  7777  0036C4  3210               	rrcf	___lomod@divisor+7,f,c
  7778  0036C6  320F               	rrcf	___lomod@divisor+6,f,c
  7779  0036C8  320E               	rrcf	___lomod@divisor+5,f,c
  7780  0036CA  320D               	rrcf	___lomod@divisor+4,f,c
  7781  0036CC  320C               	rrcf	___lomod@divisor+3,f,c
  7782  0036CE  320B               	rrcf	___lomod@divisor+2,f,c
  7783  0036D0  320A               	rrcf	___lomod@divisor+1,f,c
  7784  0036D2  3209               	rrcf	___lomod@divisor,f,c
  7785  0036D4  2E11               	decfsz	___lomod@counter,f,c
  7786  0036D6  D7D1               	goto	u3170
  7787  0036D8                     l1058:
  7788  0036D8  FFFF               	dw	65535	; assembler added errata NOP
  7789  0036DA  C001  F001         	movff	___lomod@dividend,?___lomod
  7790  0036DE  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7791  0036E2  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7792  0036E6  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7793  0036EA  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7794  0036EE  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7795  0036F2  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7796  0036F6  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7797  0036FA  0012               	return		;funcret
  7798  0036FC  FFFF               	dw	65535	; errata NOP
  7799  0036FE                     __end_of___lomod:
  7800                           	opt callstack 0
  7801                           
  7802 ;; *************** function ___lodiv *****************
  7803 ;; Defined at:
  7804 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  dividend        8    0[COMRAM] unsigned long long 
  7807 ;;  divisor         8    8[COMRAM] unsigned long long 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  quotient        8   16[COMRAM] unsigned long long 
  7810 ;;  counter         1   24[COMRAM] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  8    0[COMRAM] unsigned long long 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7820 ;;      Params:        16       0       0       0       0       0       0
  7821 ;;      Locals:         9       0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0
  7823 ;;      Totals:        25       0       0       0       0       0       0
  7824 ;;Total ram usage:       25 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    2
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_utoa
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text29
  7835  003306                     __ptext29:
  7836                           	opt callstack 0
  7837  003306                     ___lodiv:
  7838                           	opt callstack 0
  7839  003306  FFFF               	dw	65535	; assembler added errata NOP
  7840                           
  7841                           ;incstack = 0
  7842  003308  EE20  F011         	lfsr	2,___lodiv@quotient
  7843  00330C  0E07               	movlw	7
  7844  00330E                     u3121:
  7845  00330E  6ADE               	clrf	postinc2,c
  7846  003310  06E8               	decf	wreg,f,c
  7847  003312  E2FD               	bc	u3121
  7848  003314  5009               	movf	___lodiv@divisor,w,c
  7849  003316  100A               	iorwf	___lodiv@divisor+1,w,c
  7850  003318  100B               	iorwf	___lodiv@divisor+2,w,c
  7851  00331A  100C               	iorwf	___lodiv@divisor+3,w,c
  7852  00331C  100D               	iorwf	___lodiv@divisor+4,w,c
  7853  00331E  100E               	iorwf	___lodiv@divisor+5,w,c
  7854  003320  100F               	iorwf	___lodiv@divisor+6,w,c
  7855  003322  1010               	iorwf	___lodiv@divisor+7,w,c
  7856  003324  B4D8               	btfsc	status,2,c
  7857  003326  D04A               	goto	l1048
  7858  003328  0E01               	movlw	1
  7859  00332A  6E19               	movwf	___lodiv@counter,c
  7860  00332C  D00B               	goto	l3648
  7861  00332E                     l3646:
  7862  00332E  FFFF               	dw	65535	; assembler added errata NOP
  7863  003330  90D8               	bcf	status,0,c
  7864  003332  3609               	rlcf	___lodiv@divisor,f,c
  7865  003334  360A               	rlcf	___lodiv@divisor+1,f,c
  7866  003336  360B               	rlcf	___lodiv@divisor+2,f,c
  7867  003338  360C               	rlcf	___lodiv@divisor+3,f,c
  7868  00333A  360D               	rlcf	___lodiv@divisor+4,f,c
  7869  00333C  360E               	rlcf	___lodiv@divisor+5,f,c
  7870  00333E  360F               	rlcf	___lodiv@divisor+6,f,c
  7871  003340  3610               	rlcf	___lodiv@divisor+7,f,c
  7872  003342  2A19               	incf	___lodiv@counter,f,c
  7873  003344                     l3648:
  7874  003344  FFFF               	dw	65535	; assembler added errata NOP
  7875  003346  AE10               	btfss	___lodiv@divisor+7,7,c
  7876  003348  D7F2               	goto	l3646
  7877  00334A                     u3140:
  7878  00334A  FFFF               	dw	65535	; assembler added errata NOP
  7879  00334C  90D8               	bcf	status,0,c
  7880  00334E  3611               	rlcf	___lodiv@quotient,f,c
  7881  003350  3612               	rlcf	___lodiv@quotient+1,f,c
  7882  003352  3613               	rlcf	___lodiv@quotient+2,f,c
  7883  003354  3614               	rlcf	___lodiv@quotient+3,f,c
  7884  003356  3615               	rlcf	___lodiv@quotient+4,f,c
  7885  003358  3616               	rlcf	___lodiv@quotient+5,f,c
  7886  00335A  3617               	rlcf	___lodiv@quotient+6,f,c
  7887  00335C  3618               	rlcf	___lodiv@quotient+7,f,c
  7888  00335E  5009               	movf	___lodiv@divisor,w,c
  7889  003360  5C01               	subwf	___lodiv@dividend,w,c
  7890  003362  500A               	movf	___lodiv@divisor+1,w,c
  7891  003364  5802               	subwfb	___lodiv@dividend+1,w,c
  7892  003366  500B               	movf	___lodiv@divisor+2,w,c
  7893  003368  5803               	subwfb	___lodiv@dividend+2,w,c
  7894  00336A  500C               	movf	___lodiv@divisor+3,w,c
  7895  00336C  5804               	subwfb	___lodiv@dividend+3,w,c
  7896  00336E  500D               	movf	___lodiv@divisor+4,w,c
  7897  003370  5805               	subwfb	___lodiv@dividend+4,w,c
  7898  003372  500E               	movf	___lodiv@divisor+5,w,c
  7899  003374  5806               	subwfb	___lodiv@dividend+5,w,c
  7900  003376  500F               	movf	___lodiv@divisor+6,w,c
  7901  003378  5807               	subwfb	___lodiv@dividend+6,w,c
  7902  00337A  5010               	movf	___lodiv@divisor+7,w,c
  7903  00337C  5808               	subwfb	___lodiv@dividend+7,w,c
  7904  00337E  A0D8               	btfss	status,0,c
  7905  003380  D011               	goto	l3658
  7906  003382  5009               	movf	___lodiv@divisor,w,c
  7907  003384  5E01               	subwf	___lodiv@dividend,f,c
  7908  003386  500A               	movf	___lodiv@divisor+1,w,c
  7909  003388  5A02               	subwfb	___lodiv@dividend+1,f,c
  7910  00338A  500B               	movf	___lodiv@divisor+2,w,c
  7911  00338C  5A03               	subwfb	___lodiv@dividend+2,f,c
  7912  00338E  500C               	movf	___lodiv@divisor+3,w,c
  7913  003390  5A04               	subwfb	___lodiv@dividend+3,f,c
  7914  003392  500D               	movf	___lodiv@divisor+4,w,c
  7915  003394  5A05               	subwfb	___lodiv@dividend+4,f,c
  7916  003396  500E               	movf	___lodiv@divisor+5,w,c
  7917  003398  5A06               	subwfb	___lodiv@dividend+5,f,c
  7918  00339A  500F               	movf	___lodiv@divisor+6,w,c
  7919  00339C  5A07               	subwfb	___lodiv@dividend+6,f,c
  7920  00339E  5010               	movf	___lodiv@divisor+7,w,c
  7921  0033A0  5A08               	subwfb	___lodiv@dividend+7,f,c
  7922  0033A2  8011               	bsf	___lodiv@quotient,0,c
  7923  0033A4                     l3658:
  7924  0033A4  FFFF               	dw	65535	; assembler added errata NOP
  7925  0033A6  90D8               	bcf	status,0,c
  7926  0033A8  3210               	rrcf	___lodiv@divisor+7,f,c
  7927  0033AA  320F               	rrcf	___lodiv@divisor+6,f,c
  7928  0033AC  320E               	rrcf	___lodiv@divisor+5,f,c
  7929  0033AE  320D               	rrcf	___lodiv@divisor+4,f,c
  7930  0033B0  320C               	rrcf	___lodiv@divisor+3,f,c
  7931  0033B2  320B               	rrcf	___lodiv@divisor+2,f,c
  7932  0033B4  320A               	rrcf	___lodiv@divisor+1,f,c
  7933  0033B6  3209               	rrcf	___lodiv@divisor,f,c
  7934  0033B8  2E19               	decfsz	___lodiv@counter,f,c
  7935  0033BA  D7C7               	goto	u3140
  7936  0033BC                     l1048:
  7937  0033BC  FFFF               	dw	65535	; assembler added errata NOP
  7938  0033BE  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7939  0033C2  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7940  0033C6  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7941  0033CA  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7942  0033CE  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7943  0033D2  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7944  0033D6  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7945  0033DA  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7946  0033DE  0012               	return		;funcret
  7947  0033E0  FFFF               	dw	65535	; errata NOP
  7948  0033E2                     __end_of___lodiv:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _strncmp *****************
  7952 ;; Defined at:
  7953 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7956 ;;		 -> STR_2(3), STR_1(4), 
  7957 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7958 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  7959 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  7960 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  7961 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  7962 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  7963 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  7964 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  7965 ;;  n               2    4[COMRAM] unsigned int 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7968 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  7969 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  7970 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  7971 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  7972 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  7973 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  7974 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  7975 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7976 ;;		 -> STR_2(3), STR_1(4), 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  2    0[COMRAM] int 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         6       0       0       0       0       0       0
  7987 ;;      Locals:         4       0       0       0       0       0       0
  7988 ;;      Temps:          1       0       0       0       0       0       0
  7989 ;;      Totals:        11       0       0       0       0       0       0
  7990 ;;Total ram usage:       11 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    2
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_vfpfcnvrt
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text30
  8001  003580                     __ptext30:
  8002                           	opt callstack 0
  8003  003580                     _strncmp:
  8004                           	opt callstack 0
  8005  003580  FFFF               	dw	65535	; assembler added errata NOP
  8006                           
  8007                           ;incstack = 0
  8008  003582  C001  F008         	movff	strncmp@_l,strncmp@l
  8009  003586  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8010  00358A  C003  F00A         	movff	strncmp@_r,strncmp@r
  8011  00358E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8012  003592  0605               	decf	strncmp@n,f,c
  8013  003594  A0D8               	btfss	status,0,c
  8014  003596  0606               	decf	strncmp@n+1,f,c
  8015  003598  2805               	incf	strncmp@n,w,c
  8016  00359A  E110               	bnz	l4008
  8017  00359C  2806               	incf	strncmp@n+1,w,c
  8018  00359E  A4D8               	btfss	status,2,c
  8019  0035A0  D00D               	goto	l4008
  8020  0035A2  0E00               	movlw	0
  8021  0035A4  6E02               	movwf	?_strncmp+1,c
  8022  0035A6  0E00               	movlw	0
  8023  0035A8  6E01               	movwf	?_strncmp,c
  8024  0035AA  D048               	goto	l1416
  8025  0035AC                     l4006:
  8026  0035AC  FFFF               	dw	65535	; assembler added errata NOP
  8027  0035AE  4A08               	infsnz	strncmp@l,f,c
  8028  0035B0  2A09               	incf	strncmp@l+1,f,c
  8029  0035B2  4A0A               	infsnz	strncmp@r,f,c
  8030  0035B4  2A0B               	incf	strncmp@r+1,f,c
  8031  0035B6  0605               	decf	strncmp@n,f,c
  8032  0035B8  A0D8               	btfss	status,0,c
  8033  0035BA  0606               	decf	strncmp@n+1,f,c
  8034  0035BC                     l4008:
  8035  0035BC  FFFF               	dw	65535	; assembler added errata NOP
  8036  0035BE  C008  FFF6         	movff	strncmp@l,tblptrl
  8037  0035C2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8038  0035C6                     	if	0	;tblptru may be non-zero
  8039  0035C6                     	endif
  8040  0035C6                     	if	0	;tblptru may be non-zero
  8041  0035C6                     	endif
  8042  0035C6  0008               	tblrd		*
  8043  0035C8  FFFF               	dw	65535	; errata NOP
  8044  0035CA  50F5               	movf	tablat,w,c
  8045  0035CC  0900               	iorlw	0
  8046  0035CE  B4D8               	btfsc	status,2,c
  8047  0035D0  D020               	goto	u3910
  8048  0035D2  C00A  FFF6         	movff	strncmp@r,tblptrl
  8049  0035D6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8050  0035DA                     	if	0	;tblptru may be non-zero
  8051  0035DA                     	endif
  8052  0035DA                     	if	0	;tblptru may be non-zero
  8053  0035DA                     	endif
  8054  0035DA  0008               	tblrd		*
  8055  0035DC  FFFF               	dw	65535	; errata NOP
  8056  0035DE  50F5               	movf	tablat,w,c
  8057  0035E0  0900               	iorlw	0
  8058  0035E2  B4D8               	btfsc	status,2,c
  8059  0035E4  D016               	goto	u3910
  8060  0035E6  5005               	movf	strncmp@n,w,c
  8061  0035E8  1006               	iorwf	strncmp@n+1,w,c
  8062  0035EA  B4D8               	btfsc	status,2,c
  8063  0035EC  D012               	goto	u3910
  8064  0035EE  C008  FFF6         	movff	strncmp@l,tblptrl
  8065  0035F2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8066  0035F6                     	if	0	;tblptru may be non-zero
  8067  0035F6                     	endif
  8068  0035F6                     	if	0	;tblptru may be non-zero
  8069  0035F6                     	endif
  8070  0035F6  0008               	tblrd		*
  8071  0035F8  FFFF               	dw	65535	; errata NOP
  8072  0035FA  CFF5 F007          	movff	tablat,??_strncmp
  8073  0035FE  C00A  FFF6         	movff	strncmp@r,tblptrl
  8074  003602  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8075  003606                     	if	0	;tblptru may be non-zero
  8076  003606                     	endif
  8077  003606                     	if	0	;tblptru may be non-zero
  8078  003606                     	endif
  8079  003606  0008               	tblrd		*
  8080  003608  FFFF               	dw	65535	; errata NOP
  8081  00360A  50F5               	movf	tablat,w,c
  8082  00360C  1807               	xorwf	??_strncmp,w,c
  8083  00360E  B4D8               	btfsc	status,2,c
  8084  003610  D7CD               	goto	l4006
  8085  003612                     u3910:
  8086  003612  FFFF               	dw	65535	; assembler added errata NOP
  8087  003614  C008  FFF6         	movff	strncmp@l,tblptrl
  8088  003618  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8089  00361C                     	if	0	;tblptru may be non-zero
  8090  00361C                     	endif
  8091  00361C                     	if	0	;tblptru may be non-zero
  8092  00361C                     	endif
  8093  00361C  0008               	tblrd		*
  8094  00361E  FFFF               	dw	65535	; errata NOP
  8095  003620  CFF5 F007          	movff	tablat,??_strncmp
  8096  003624  C00A  FFF6         	movff	strncmp@r,tblptrl
  8097  003628  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8098  00362C                     	if	0	;tblptru may be non-zero
  8099  00362C                     	endif
  8100  00362C                     	if	0	;tblptru may be non-zero
  8101  00362C                     	endif
  8102  00362C  0008               	tblrd		*
  8103  00362E  FFFF               	dw	65535	; errata NOP
  8104  003630  50F5               	movf	tablat,w,c
  8105  003632  5C07               	subwf	??_strncmp,w,c
  8106  003634  6E01               	movwf	?_strncmp,c
  8107  003636  6A02               	clrf	?_strncmp+1,c
  8108  003638  A0D8               	btfss	status,0,c
  8109  00363A  0602               	decf	?_strncmp+1,f,c
  8110  00363C                     l1416:
  8111  00363C  FFFF               	dw	65535	; assembler added errata NOP
  8112  00363E  0012               	return		;funcret
  8113  003640  FFFF               	dw	65535	; errata NOP
  8114  003642                     __end_of_strncmp:
  8115                           	opt callstack 0
  8116                           
  8117 ;; *************** function _stoa *****************
  8118 ;; Defined at:
  8119 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8122 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8123 ;;  s               2   11[COMRAM] PTR unsigned char 
  8124 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8127 ;;  l               2   29[COMRAM] int 
  8128 ;;  p               2   27[COMRAM] int 
  8129 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8130 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  8131 ;;  w               2   23[COMRAM] int 
  8132 ;;  i               2   21[COMRAM] int 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  2    9[COMRAM] int 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8142 ;;      Params:         4       0       0       0       0       0       0
  8143 ;;      Locals:        17       0       0       0       0       0       0
  8144 ;;      Temps:          1       0       0       0       0       0       0
  8145 ;;      Totals:        22       0       0       0       0       0       0
  8146 ;;Total ram usage:       22 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:    4
  8149 ;; This function calls:
  8150 ;;		_fputc
  8151 ;;		_strlen
  8152 ;; This function is called by:
  8153 ;;		_vfpfcnvrt
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text31
  8158  002F5A                     __ptext31:
  8159                           	opt callstack 0
  8160  002F5A                     _stoa:
  8161                           	opt callstack 0
  8162  002F5A  FFFF               	dw	65535	; assembler added errata NOP
  8163                           
  8164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8165                           
  8166                           ;incstack = 0
  8167  002F5C  EE20  F0F5         	lfsr	2,stoa@F1152
  8168  002F60  EE10  F00F         	lfsr	1,stoa@nuls
  8169  002F64  0E06               	movlw	6
  8170  002F66                     u3471:
  8171  002F66  CFDB FFE3          	movff	plusw2,plusw1
  8172  002F6A  06E8               	decf	wreg,f,c
  8173  002F6C  E2FC               	bc	u3471
  8174                           
  8175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8176  002F6E  C00C  F01A         	movff	stoa@s,stoa@cp
  8177  002F72  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8178                           
  8179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8180  002F76  501A               	movf	stoa@cp,w,c
  8181  002F78  101B               	iorwf	stoa@cp+1,w,c
  8182  002F7A  A4D8               	btfss	status,2,c
  8183  002F7C  D004               	goto	l3822
  8184                           
  8185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8186  002F7E  0E0F               	movlw	low stoa@nuls
  8187  002F80  6E1A               	movwf	stoa@cp,c
  8188  002F82  0E00               	movlw	high stoa@nuls
  8189  002F84  6E1B               	movwf	stoa@cp+1,c
  8190  002F86                     l3822:
  8191  002F86  FFFF               	dw	65535	; assembler added errata NOP
  8192                           
  8193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8194  002F88  C01A  F001         	movff	stoa@cp,strlen@s
  8195  002F8C  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8196  002F90  EC10  F01F         	call	_strlen	;wreg free
  8197  002F94  C001  F01E         	movff	?_strlen,stoa@l
  8198  002F98  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8199                           
  8200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8201  002F9C  C0CE  F01C         	movff	_prec,stoa@p
  8202  002FA0  C0CF  F01D         	movff	_prec+1,stoa@p+1
  8203                           
  8204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8205  002FA4  BE1D               	btfsc	stoa@p+1,7,c
  8206  002FA6  D00E               	goto	l457
  8207  002FA8  501E               	movf	stoa@l,w,c
  8208  002FAA  5C1C               	subwf	stoa@p,w,c
  8209  002FAC  501D               	movf	stoa@p+1,w,c
  8210  002FAE  0A80               	xorlw	128
  8211  002FB0  6E0E               	movwf	??_stoa& (0+255),c
  8212  002FB2  501F               	movf	stoa@l+1,w,c
  8213  002FB4  0A80               	xorlw	128
  8214  002FB6  580E               	subwfb	??_stoa& (0+255),w,c
  8215  002FB8  B0D8               	btfsc	status,0,c
  8216  002FBA  D004               	goto	l457
  8217  002FBC  C01C  F01E         	movff	stoa@p,stoa@l
  8218  002FC0  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8219  002FC4                     l457:
  8220  002FC4  FFFF               	dw	65535	; assembler added errata NOP
  8221                           
  8222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8223  002FC6  C01E  F01C         	movff	stoa@l,stoa@p
  8224  002FCA  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8225                           
  8226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8227  002FCE  C0CC  F018         	movff	_width,stoa@w
  8228  002FD2  C0CD  F019         	movff	_width+1,stoa@w+1
  8229                           
  8230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8231  002FD6  0100               	movlb	0	; () banked
  8232  002FD8  A1D0               	btfss	_flags& (0+255),0,b
  8233  002FDA  D00E               	goto	l3836
  8234  002FDC  D018               	goto	u3520
  8235  002FDE                     l3832:
  8236  002FDE  FFFF               	dw	65535	; assembler added errata NOP
  8237                           
  8238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8239  002FE0  0E00               	movlw	0
  8240  002FE2  6E02               	movwf	fputc@c+1,c
  8241  002FE4  0E20               	movlw	32
  8242  002FE6  6E01               	movwf	fputc@c,c
  8243  002FE8  C00A  F003         	movff	stoa@fp,fputc@fp
  8244  002FEC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8245  002FF0  EC7F  F01B         	call	_fputc	;wreg free
  8246                           
  8247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8248  002FF4  4A1E               	infsnz	stoa@l,f,c
  8249  002FF6  2A1F               	incf	stoa@l+1,f,c
  8250  002FF8                     l3836:
  8251  002FF8  FFFF               	dw	65535	; assembler added errata NOP
  8252                           
  8253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8254  002FFA  5018               	movf	stoa@w,w,c
  8255  002FFC  5C1E               	subwf	stoa@l,w,c
  8256  002FFE  501F               	movf	stoa@l+1,w,c
  8257  003000  0A80               	xorlw	128
  8258  003002  6E0E               	movwf	??_stoa& (0+255),c
  8259  003004  5019               	movf	stoa@w+1,w,c
  8260  003006  0A80               	xorlw	128
  8261  003008  580E               	subwfb	??_stoa& (0+255),w,c
  8262  00300A  A0D8               	btfss	status,0,c
  8263  00300C  D7E8               	goto	l3832
  8264  00300E                     u3520:
  8265  00300E  FFFF               	dw	65535	; assembler added errata NOP
  8266                           
  8267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8268  003010  0E00               	movlw	0
  8269  003012  6E17               	movwf	stoa@i+1,c
  8270  003014  0E00               	movlw	0
  8271  003016  6E16               	movwf	stoa@i,c
  8272                           
  8273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8274  003018  D014               	goto	l3846
  8275  00301A                     l3840:
  8276  00301A  FFFF               	dw	65535	; assembler added errata NOP
  8277                           
  8278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8279  00301C  C01A  FFD9         	movff	stoa@cp,fsr2l
  8280  003020  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8281  003024  50DF               	movf	indf2,w,c
  8282  003026  6E0E               	movwf	??_stoa& (0+255),c
  8283  003028  500E               	movf	??_stoa,w,c
  8284  00302A  6E01               	movwf	fputc@c,c
  8285  00302C  6A02               	clrf	fputc@c+1,c
  8286  00302E  C00A  F003         	movff	stoa@fp,fputc@fp
  8287  003032  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8288  003036  EC7F  F01B         	call	_fputc	;wreg free
  8289                           
  8290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8291  00303A  4A1A               	infsnz	stoa@cp,f,c
  8292  00303C  2A1B               	incf	stoa@cp+1,f,c
  8293                           
  8294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8295  00303E  4A16               	infsnz	stoa@i,f,c
  8296  003040  2A17               	incf	stoa@i+1,f,c
  8297  003042                     l3846:
  8298  003042  FFFF               	dw	65535	; assembler added errata NOP
  8299                           
  8300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8301  003044  501C               	movf	stoa@p,w,c
  8302  003046  5C16               	subwf	stoa@i,w,c
  8303  003048  5017               	movf	stoa@i+1,w,c
  8304  00304A  0A80               	xorlw	128
  8305  00304C  6E0E               	movwf	??_stoa& (0+255),c
  8306  00304E  501D               	movf	stoa@p+1,w,c
  8307  003050  0A80               	xorlw	128
  8308  003052  580E               	subwfb	??_stoa& (0+255),w,c
  8309  003054  A0D8               	btfss	status,0,c
  8310  003056  D7E1               	goto	l3840
  8311                           
  8312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8313  003058  0100               	movlb	0	; () banked
  8314  00305A  B1D0               	btfsc	_flags& (0+255),0,b
  8315  00305C  D00E               	goto	l3854
  8316  00305E  D018               	goto	u3550
  8317  003060                     l3850:
  8318  003060  FFFF               	dw	65535	; assembler added errata NOP
  8319                           
  8320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8321  003062  0E00               	movlw	0
  8322  003064  6E02               	movwf	fputc@c+1,c
  8323  003066  0E20               	movlw	32
  8324  003068  6E01               	movwf	fputc@c,c
  8325  00306A  C00A  F003         	movff	stoa@fp,fputc@fp
  8326  00306E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8327  003072  EC7F  F01B         	call	_fputc	;wreg free
  8328                           
  8329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8330  003076  4A1E               	infsnz	stoa@l,f,c
  8331  003078  2A1F               	incf	stoa@l+1,f,c
  8332  00307A                     l3854:
  8333  00307A  FFFF               	dw	65535	; assembler added errata NOP
  8334                           
  8335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8336  00307C  5018               	movf	stoa@w,w,c
  8337  00307E  5C1E               	subwf	stoa@l,w,c
  8338  003080  501F               	movf	stoa@l+1,w,c
  8339  003082  0A80               	xorlw	128
  8340  003084  6E0E               	movwf	??_stoa& (0+255),c
  8341  003086  5019               	movf	stoa@w+1,w,c
  8342  003088  0A80               	xorlw	128
  8343  00308A  580E               	subwfb	??_stoa& (0+255),w,c
  8344  00308C  A0D8               	btfss	status,0,c
  8345  00308E  D7E8               	goto	l3850
  8346  003090                     u3550:
  8347  003090  FFFF               	dw	65535	; assembler added errata NOP
  8348                           
  8349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8350                           
  8351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  8352  003092  C01E  F00A         	movff	stoa@l,?_stoa
  8353  003096  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8354  00309A  0012               	return		;funcret
  8355  00309C  FFFF               	dw	65535	; errata NOP
  8356  00309E                     __end_of_stoa:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _otoa *****************
  8360 ;; Defined at:
  8361 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8364 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8365 ;;  d               8   29[COMRAM] unsigned long long 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  n               8   51[COMRAM] unsigned long long 
  8368 ;;  i               2   59[COMRAM] int 
  8369 ;;  w               2   49[COMRAM] int 
  8370 ;;  t               2   47[COMRAM] int 
  8371 ;;  p               2   45[COMRAM] int 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  2   27[COMRAM] int 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8381 ;;      Params:        10       0       0       0       0       0       0
  8382 ;;      Locals:        16       0       0       0       0       0       0
  8383 ;;      Temps:          8       0       0       0       0       0       0
  8384 ;;      Totals:        34       0       0       0       0       0       0
  8385 ;;Total ram usage:       34 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    6
  8388 ;; This function calls:
  8389 ;;		_pad
  8390 ;; This function is called by:
  8391 ;;		_vfpfcnvrt
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text32
  8396  0029A2                     __ptext32:
  8397                           	opt callstack 0
  8398  0029A2                     _otoa:
  8399                           	opt callstack 0
  8400  0029A2  FFFF               	dw	65535	; assembler added errata NOP
  8401                           
  8402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  8403                           
  8404                           ;incstack = 0
  8405  0029A4  0100               	movlb	0	; () banked
  8406  0029A6  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  8410  0029A8  93D0               	bcf	_flags& (0+255),1,b
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  8414  0029AA  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8415  0029AC  D005               	goto	u3380
  8416  0029AE  51CF               	movf	(_prec+1)& (0+255),w,b
  8417  0029B0  E109               	bnz	l437
  8418  0029B2  05CE               	decf	_prec& (0+255),w,b
  8419  0029B4  B0D8               	btfsc	status,0,c
  8420  0029B6  D006               	goto	l437
  8421  0029B8                     u3380:
  8422  0029B8  FFFF               	dw	65535	; assembler added errata NOP
  8423                           
  8424                           ; BSR set to: 0
  8425  0029BA  0E00               	movlw	0
  8426  0029BC  6E2F               	movwf	otoa@p+1,c
  8427  0029BE  0E01               	movlw	1
  8428  0029C0  6E2E               	movwf	otoa@p,c
  8429  0029C2  D005               	goto	l439
  8430  0029C4                     l437:
  8431  0029C4  FFFF               	dw	65535	; assembler added errata NOP
  8432                           
  8433                           ; BSR set to: 0
  8434  0029C6  C0CE  F02E         	movff	_prec,otoa@p
  8435  0029CA  C0CF  F02F         	movff	_prec+1,otoa@p+1
  8436  0029CE                     l439:
  8437  0029CE  FFFF               	dw	65535	; assembler added errata NOP
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  8441  0029D0  C0CC  F032         	movff	_width,otoa@w
  8442  0029D4  C0CD  F033         	movff	_width+1,otoa@w+1
  8443                           
  8444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  8445  0029D8  C01E  F034         	movff	otoa@d,otoa@n
  8446  0029DC  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8447  0029E0  C020  F036         	movff	otoa@d+2,otoa@n+2
  8448  0029E4  C021  F037         	movff	otoa@d+3,otoa@n+3
  8449  0029E8  C022  F038         	movff	otoa@d+4,otoa@n+4
  8450  0029EC  C023  F039         	movff	otoa@d+5,otoa@n+5
  8451  0029F0  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8452  0029F4  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  8456  0029F8  0E00               	movlw	0
  8457  0029FA  6E3D               	movwf	otoa@i+1,c
  8458  0029FC  0E1F               	movlw	31
  8459  0029FE  6E3C               	movwf	otoa@i,c
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  8463  002A00  0E00               	movlw	0
  8464  002A02  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  8468  002A04  0E00               	movlw	0
  8469  002A06  6E31               	movwf	otoa@t+1,c
  8470  002A08  0E00               	movlw	0
  8471  002A0A  6E30               	movwf	otoa@t,c
  8472                           
  8473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8474  002A0C  D046               	goto	l3792
  8475  002A0E                     l3780:
  8476  002A0E  FFFF               	dw	65535	; assembler added errata NOP
  8477                           
  8478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  8479  002A10  063C               	decf	otoa@i,f,c
  8480  002A12  A0D8               	btfss	status,0,c
  8481  002A14  063D               	decf	otoa@i+1,f,c
  8482                           
  8483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  8484  002A16  0E07               	movlw	7
  8485  002A18  1434               	andwf	otoa@n,w,c
  8486  002A1A  6E30               	movwf	otoa@t,c
  8487  002A1C  6A31               	clrf	otoa@t+1,c
  8488                           
  8489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  8490  002A1E  0ED5               	movlw	low _dbuf
  8491  002A20  243C               	addwf	otoa@i,w,c
  8492  002A22  6ED9               	movwf	fsr2l,c
  8493  002A24  0E00               	movlw	high _dbuf
  8494  002A26  203D               	addwfc	otoa@i+1,w,c
  8495  002A28  6EDA               	movwf	fsr2h,c
  8496  002A2A  5030               	movf	otoa@t,w,c
  8497  002A2C  0F30               	addlw	48
  8498  002A2E  6EDF               	movwf	indf2,c
  8499                           
  8500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  8501  002A30  062E               	decf	otoa@p,f,c
  8502  002A32  A0D8               	btfss	status,0,c
  8503  002A34  062F               	decf	otoa@p+1,f,c
  8504                           
  8505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  8506  002A36  0632               	decf	otoa@w,f,c
  8507  002A38  A0D8               	btfss	status,0,c
  8508  002A3A  0633               	decf	otoa@w+1,f,c
  8509                           
  8510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  8511  002A3C  C034  F026         	movff	otoa@n,??_otoa
  8512  002A40  C035  F027         	movff	otoa@n+1,??_otoa+1
  8513  002A44  C036  F028         	movff	otoa@n+2,??_otoa+2
  8514  002A48  C037  F029         	movff	otoa@n+3,??_otoa+3
  8515  002A4C  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8516  002A50  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8517  002A54  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8518  002A58  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8519  002A5C  0E04               	movlw	4
  8520  002A5E  D00A               	goto	u3390
  8521  002A60                     u3395:
  8522  002A60  FFFF               	dw	65535	; assembler added errata NOP
  8523  002A62  90D8               	bcf	status,0,c
  8524  002A64  322D               	rrcf	??_otoa+7,f,c
  8525  002A66  322C               	rrcf	??_otoa+6,f,c
  8526  002A68  322B               	rrcf	??_otoa+5,f,c
  8527  002A6A  322A               	rrcf	??_otoa+4,f,c
  8528  002A6C  3229               	rrcf	??_otoa+3,f,c
  8529  002A6E  3228               	rrcf	??_otoa+2,f,c
  8530  002A70  3227               	rrcf	??_otoa+1,f,c
  8531  002A72  3226               	rrcf	??_otoa,f,c
  8532  002A74                     u3390:
  8533  002A74  FFFF               	dw	65535	; assembler added errata NOP
  8534  002A76  2EE8               	decfsz	wreg,f,c
  8535  002A78  D7F3               	goto	u3395
  8536  002A7A  C026  F034         	movff	??_otoa,otoa@n
  8537  002A7E  C027  F035         	movff	??_otoa+1,otoa@n+1
  8538  002A82  C028  F036         	movff	??_otoa+2,otoa@n+2
  8539  002A86  C029  F037         	movff	??_otoa+3,otoa@n+3
  8540  002A8A  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8541  002A8E  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8542  002A92  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8543  002A96  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8544  002A9A                     l3792:
  8545  002A9A  FFFF               	dw	65535	; assembler added errata NOP
  8546                           
  8547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8548  002A9C  BE3D               	btfsc	otoa@i+1,7,c
  8549  002A9E  D021               	goto	u3440
  8550  002AA0  503D               	movf	otoa@i+1,w,c
  8551  002AA2  E103               	bnz	u3400
  8552  002AA4  043C               	decf	otoa@i,w,c
  8553  002AA6  A0D8               	btfss	status,0,c
  8554  002AA8  D01C               	goto	u3440
  8555  002AAA                     u3400:
  8556  002AAA  5034               	movf	otoa@n,w,c
  8557  002AAC  1035               	iorwf	otoa@n+1,w,c
  8558  002AAE  1036               	iorwf	otoa@n+2,w,c
  8559  002AB0  1037               	iorwf	otoa@n+3,w,c
  8560  002AB2  1038               	iorwf	otoa@n+4,w,c
  8561  002AB4  1039               	iorwf	otoa@n+5,w,c
  8562  002AB6  103A               	iorwf	otoa@n+6,w,c
  8563  002AB8  103B               	iorwf	otoa@n+7,w,c
  8564  002ABA  A4D8               	btfss	status,2,c
  8565  002ABC  D7A8               	goto	l3780
  8566  002ABE  BE2F               	btfsc	otoa@p+1,7,c
  8567  002AC0  D005               	goto	u3420
  8568  002AC2  502F               	movf	otoa@p+1,w,c
  8569  002AC4  E1A4               	bnz	l3780
  8570  002AC6  042E               	decf	otoa@p,w,c
  8571  002AC8  B0D8               	btfsc	status,0,c
  8572  002ACA  D7A1               	goto	l3780
  8573  002ACC                     u3420:
  8574  002ACC  FFFF               	dw	65535	; assembler added errata NOP
  8575  002ACE  BE33               	btfsc	otoa@w+1,7,c
  8576  002AD0  D008               	goto	u3440
  8577  002AD2  5033               	movf	otoa@w+1,w,c
  8578  002AD4  E103               	bnz	u3430
  8579  002AD6  0432               	decf	otoa@w,w,c
  8580  002AD8  A0D8               	btfss	status,0,c
  8581  002ADA  D003               	goto	u3440
  8582  002ADC                     u3430:
  8583  002ADC  0100               	movlb	0	; () banked
  8584  002ADE  B3D0               	btfsc	_flags& (0+255),1,b
  8585  002AE0  D796               	goto	l3780
  8586  002AE2                     u3440:
  8587  002AE2  FFFF               	dw	65535	; assembler added errata NOP
  8588                           
  8589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  8590  002AE4  0100               	movlb	0	; () banked
  8591  002AE6  A9D0               	btfss	_flags& (0+255),4,b
  8592  002AE8  D012               	goto	l3810
  8593                           
  8594                           ; BSR set to: 0
  8595  002AEA  5030               	movf	otoa@t,w,c
  8596  002AEC  1031               	iorwf	otoa@t+1,w,c
  8597  002AEE  B4D8               	btfsc	status,2,c
  8598  002AF0  D00E               	goto	l3810
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  8602  002AF2  063C               	decf	otoa@i,f,c
  8603  002AF4  A0D8               	btfss	status,0,c
  8604  002AF6  063D               	decf	otoa@i+1,f,c
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  8608  002AF8  0ED5               	movlw	low _dbuf
  8609  002AFA  243C               	addwf	otoa@i,w,c
  8610  002AFC  6ED9               	movwf	fsr2l,c
  8611  002AFE  0E00               	movlw	high _dbuf
  8612  002B00  203D               	addwfc	otoa@i+1,w,c
  8613  002B02  6EDA               	movwf	fsr2h,c
  8614  002B04  0E30               	movlw	48
  8615  002B06  6EDF               	movwf	indf2,c
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  8619  002B08  0632               	decf	otoa@w,f,c
  8620  002B0A  A0D8               	btfss	status,0,c
  8621  002B0C  0633               	decf	otoa@w+1,f,c
  8622  002B0E                     l3810:
  8623  002B0E  FFFF               	dw	65535	; assembler added errata NOP
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  8627  002B10  C01C  F011         	movff	otoa@fp,pad@fp
  8628  002B14  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8629  002B18  0ED5               	movlw	low _dbuf
  8630  002B1A  243C               	addwf	otoa@i,w,c
  8631  002B1C  6E13               	movwf	pad@buf,c
  8632  002B1E  0E00               	movlw	high _dbuf
  8633  002B20  203D               	addwfc	otoa@i+1,w,c
  8634  002B22  6E14               	movwf	pad@buf+1,c
  8635  002B24  C032  F015         	movff	otoa@w,pad@p
  8636  002B28  C033  F016         	movff	otoa@w+1,pad@p+1
  8637  002B2C  ECD5  F01B         	call	_pad	;wreg free
  8638  002B30  C011  F01C         	movff	?_pad,?_otoa
  8639  002B34  C012  F01D         	movff	?_pad+1,?_otoa+1
  8640  002B38  0012               	return		;funcret
  8641  002B3A  FFFF               	dw	65535	; errata NOP
  8642  002B3C                     __end_of_otoa:
  8643                           	opt callstack 0
  8644                           
  8645 ;; *************** function _dtoa *****************
  8646 ;; Defined at:
  8647 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8650 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8651 ;;  d               8   29[COMRAM] long long 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  n               8   53[COMRAM] long long 
  8654 ;;  i               2   61[COMRAM] int 
  8655 ;;  s               2   51[COMRAM] int 
  8656 ;;  w               2   49[COMRAM] int 
  8657 ;;  p               2   47[COMRAM] int 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  2   27[COMRAM] int 
  8660 ;; Registers used:
  8661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8667 ;;      Params:        10       0       0       0       0       0       0
  8668 ;;      Locals:        18       0       0       0       0       0       0
  8669 ;;      Temps:          8       0       0       0       0       0       0
  8670 ;;      Totals:        36       0       0       0       0       0       0
  8671 ;;Total ram usage:       36 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:    6
  8674 ;; This function calls:
  8675 ;;		___aodiv
  8676 ;;		___aomod
  8677 ;;		_abs
  8678 ;;		_pad
  8679 ;; This function is called by:
  8680 ;;		_vfpfcnvrt
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text33
  8685  001F58                     __ptext33:
  8686                           	opt callstack 0
  8687  001F58                     _dtoa:
  8688                           	opt callstack 0
  8689  001F58  FFFF               	dw	65535	; assembler added errata NOP
  8690                           
  8691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8692                           
  8693                           ;incstack = 0
  8694  001F5A  C01E  F036         	movff	dtoa@d,dtoa@n
  8695  001F5E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8696  001F62  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8697  001F66  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8698  001F6A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8699  001F6E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8700  001F72  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8701  001F76  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8702                           
  8703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8704  001F7A  AE3D               	btfss	dtoa@n+7,7,c
  8705  001F7C  D002               	goto	u3220
  8706  001F7E  0E01               	movlw	1
  8707  001F80  D002               	goto	u3230
  8708  001F82                     u3220:
  8709  001F82  FFFF               	dw	65535	; assembler added errata NOP
  8710  001F84  0E00               	movlw	0
  8711  001F86                     u3230:
  8712  001F86  FFFF               	dw	65535	; assembler added errata NOP
  8713  001F88  6E34               	movwf	dtoa@s,c
  8714  001F8A  6A35               	clrf	dtoa@s+1,c
  8715                           
  8716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8717  001F8C  5034               	movf	dtoa@s,w,c
  8718  001F8E  1035               	iorwf	dtoa@s+1,w,c
  8719  001F90  B4D8               	btfsc	status,2,c
  8720  001F92  D010               	goto	l3710
  8721                           
  8722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8723  001F94  1E3D               	comf	dtoa@n+7,f,c
  8724  001F96  1E3C               	comf	dtoa@n+6,f,c
  8725  001F98  1E3B               	comf	dtoa@n+5,f,c
  8726  001F9A  1E3A               	comf	dtoa@n+4,f,c
  8727  001F9C  1E39               	comf	dtoa@n+3,f,c
  8728  001F9E  1E38               	comf	dtoa@n+2,f,c
  8729  001FA0  1E37               	comf	dtoa@n+1,f,c
  8730  001FA2  6C36               	negf	dtoa@n,c
  8731  001FA4  0E00               	movlw	0
  8732  001FA6  2237               	addwfc	dtoa@n+1,f,c
  8733  001FA8  2238               	addwfc	dtoa@n+2,f,c
  8734  001FAA  2239               	addwfc	dtoa@n+3,f,c
  8735  001FAC  223A               	addwfc	dtoa@n+4,f,c
  8736  001FAE  223B               	addwfc	dtoa@n+5,f,c
  8737  001FB0  223C               	addwfc	dtoa@n+6,f,c
  8738  001FB2  223D               	addwfc	dtoa@n+7,f,c
  8739  001FB4                     l3710:
  8740  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  8741                           
  8742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8743  001FB6  0100               	movlb	0	; () banked
  8744  001FB8  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8748  001FBA  93D0               	bcf	_flags& (0+255),1,b
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8752  001FBC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8753  001FBE  D005               	goto	u3260
  8754  001FC0  51CF               	movf	(_prec+1)& (0+255),w,b
  8755  001FC2  E109               	bnz	l412
  8756  001FC4  05CE               	decf	_prec& (0+255),w,b
  8757  001FC6  B0D8               	btfsc	status,0,c
  8758  001FC8  D006               	goto	l412
  8759  001FCA                     u3260:
  8760  001FCA  FFFF               	dw	65535	; assembler added errata NOP
  8761                           
  8762                           ; BSR set to: 0
  8763  001FCC  0E00               	movlw	0
  8764  001FCE  6E31               	movwf	dtoa@p+1,c
  8765  001FD0  0E01               	movlw	1
  8766  001FD2  6E30               	movwf	dtoa@p,c
  8767  001FD4  D005               	goto	l414
  8768  001FD6                     l412:
  8769  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  8770                           
  8771                           ; BSR set to: 0
  8772  001FD8  C0CE  F030         	movff	_prec,dtoa@p
  8773  001FDC  C0CF  F031         	movff	_prec+1,dtoa@p+1
  8774  001FE0                     l414:
  8775  001FE0  FFFF               	dw	65535	; assembler added errata NOP
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8779  001FE2  C0CC  F032         	movff	_width,dtoa@w
  8780  001FE6  C0CD  F033         	movff	_width+1,dtoa@w+1
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8784  001FEA  5034               	movf	dtoa@s,w,c
  8785  001FEC  1035               	iorwf	dtoa@s+1,w,c
  8786  001FEE  A4D8               	btfss	status,2,c
  8787  001FF0  D002               	goto	u3280
  8788                           
  8789                           ; BSR set to: 0
  8790  001FF2  A5D0               	btfss	_flags& (0+255),2,b
  8791  001FF4  D004               	goto	l3724
  8792  001FF6                     u3280:
  8793  001FF6  FFFF               	dw	65535	; assembler added errata NOP
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8797  001FF8  0632               	decf	dtoa@w,f,c
  8798  001FFA  A0D8               	btfss	status,0,c
  8799  001FFC  0633               	decf	dtoa@w+1,f,c
  8800  001FFE                     l3724:
  8801  001FFE  FFFF               	dw	65535	; assembler added errata NOP
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8805  002000  0E00               	movlw	0
  8806  002002  6E3F               	movwf	dtoa@i+1,c
  8807  002004  0E1F               	movlw	31
  8808  002006  6E3E               	movwf	dtoa@i,c
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8812  002008  0E00               	movlw	0
  8813  00200A  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8814                           
  8815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8816  00200C  D07D               	goto	l3738
  8817  00200E                     l3728:
  8818  00200E  FFFF               	dw	65535	; assembler added errata NOP
  8819                           
  8820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8821  002010  063E               	decf	dtoa@i,f,c
  8822  002012  A0D8               	btfss	status,0,c
  8823  002014  063F               	decf	dtoa@i+1,f,c
  8824                           
  8825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8826  002016  0ED5               	movlw	low _dbuf
  8827  002018  243E               	addwf	dtoa@i,w,c
  8828  00201A  6ED9               	movwf	fsr2l,c
  8829  00201C  0E00               	movlw	high _dbuf
  8830  00201E  203F               	addwfc	dtoa@i+1,w,c
  8831  002020  6EDA               	movwf	fsr2h,c
  8832  002022  C036  F001         	movff	dtoa@n,___aomod@dividend
  8833  002026  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8834  00202A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8835  00202E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8836  002032  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8837  002036  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8838  00203A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8839  00203E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8840  002042  0E0A               	movlw	10
  8841  002044  6E09               	movwf	___aomod@divisor,c
  8842  002046  0E00               	movlw	0
  8843  002048  6E0A               	movwf	___aomod@divisor+1,c
  8844  00204A  0E00               	movlw	0
  8845  00204C  6E0B               	movwf	___aomod@divisor+2,c
  8846  00204E  0E00               	movlw	0
  8847  002050  6E0C               	movwf	___aomod@divisor+3,c
  8848  002052  0E00               	movlw	0
  8849  002054  6E0D               	movwf	___aomod@divisor+4,c
  8850  002056  0E00               	movlw	0
  8851  002058  6E0E               	movwf	___aomod@divisor+5,c
  8852  00205A  0E00               	movlw	0
  8853  00205C  6E0F               	movwf	___aomod@divisor+6,c
  8854  00205E  0E00               	movlw	0
  8855  002060  6E10               	movwf	___aomod@divisor+7,c
  8856  002062  EC4F  F018         	call	___aomod	;wreg free
  8857  002066  C001  F026         	movff	?___aomod,??_dtoa
  8858  00206A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8859  00206E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8860  002072  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8861  002076  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8862  00207A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8863  00207E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8864  002082  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8865  002086  C026  F013         	movff	??_dtoa,abs@a
  8866  00208A  C028  F014         	movff	??_dtoa+2,abs@a+1
  8867  00208E  EC9E  F01E         	call	_abs	;wreg free
  8868  002092  5013               	movf	?_abs,w,c
  8869  002094  0F30               	addlw	48
  8870  002096  6EDF               	movwf	indf2,c
  8871                           
  8872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8873  002098  0630               	decf	dtoa@p,f,c
  8874  00209A  A0D8               	btfss	status,0,c
  8875  00209C  0631               	decf	dtoa@p+1,f,c
  8876                           
  8877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8878  00209E  0632               	decf	dtoa@w,f,c
  8879  0020A0  A0D8               	btfss	status,0,c
  8880  0020A2  0633               	decf	dtoa@w+1,f,c
  8881                           
  8882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8883  0020A4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8884  0020A8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8885  0020AC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8886  0020B0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8887  0020B4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8888  0020B8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8889  0020BC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8890  0020C0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8891  0020C4  0E0A               	movlw	10
  8892  0020C6  6E09               	movwf	___aodiv@divisor,c
  8893  0020C8  0E00               	movlw	0
  8894  0020CA  6E0A               	movwf	___aodiv@divisor+1,c
  8895  0020CC  0E00               	movlw	0
  8896  0020CE  6E0B               	movwf	___aodiv@divisor+2,c
  8897  0020D0  0E00               	movlw	0
  8898  0020D2  6E0C               	movwf	___aodiv@divisor+3,c
  8899  0020D4  0E00               	movlw	0
  8900  0020D6  6E0D               	movwf	___aodiv@divisor+4,c
  8901  0020D8  0E00               	movlw	0
  8902  0020DA  6E0E               	movwf	___aodiv@divisor+5,c
  8903  0020DC  0E00               	movlw	0
  8904  0020DE  6E0F               	movwf	___aodiv@divisor+6,c
  8905  0020E0  0E00               	movlw	0
  8906  0020E2  6E10               	movwf	___aodiv@divisor+7,c
  8907  0020E4  ECFF  F016         	call	___aodiv	;wreg free
  8908  0020E8  C001  F036         	movff	?___aodiv,dtoa@n
  8909  0020EC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8910  0020F0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8911  0020F4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8912  0020F8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8913  0020FC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8914  002100  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8915  002104  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8916  002108                     l3738:
  8917  002108  FFFF               	dw	65535	; assembler added errata NOP
  8918                           
  8919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8920  00210A  BE3F               	btfsc	dtoa@i+1,7,c
  8921  00210C  D021               	goto	u3330
  8922  00210E  503F               	movf	dtoa@i+1,w,c
  8923  002110  E103               	bnz	u3290
  8924  002112  043E               	decf	dtoa@i,w,c
  8925  002114  A0D8               	btfss	status,0,c
  8926  002116  D01C               	goto	u3330
  8927  002118                     u3290:
  8928  002118  5036               	movf	dtoa@n,w,c
  8929  00211A  1037               	iorwf	dtoa@n+1,w,c
  8930  00211C  1038               	iorwf	dtoa@n+2,w,c
  8931  00211E  1039               	iorwf	dtoa@n+3,w,c
  8932  002120  103A               	iorwf	dtoa@n+4,w,c
  8933  002122  103B               	iorwf	dtoa@n+5,w,c
  8934  002124  103C               	iorwf	dtoa@n+6,w,c
  8935  002126  103D               	iorwf	dtoa@n+7,w,c
  8936  002128  A4D8               	btfss	status,2,c
  8937  00212A  D771               	goto	l3728
  8938  00212C  BE31               	btfsc	dtoa@p+1,7,c
  8939  00212E  D005               	goto	u3310
  8940  002130  5031               	movf	dtoa@p+1,w,c
  8941  002132  E102               	bnz	u3311
  8942  002134  0430               	decf	dtoa@p,w,c
  8943  002136  B0D8               	btfsc	status,0,c
  8944  002138                     u3311:
  8945  002138  D76A               	goto	l3728
  8946  00213A                     u3310:
  8947  00213A  FFFF               	dw	65535	; assembler added errata NOP
  8948  00213C  BE33               	btfsc	dtoa@w+1,7,c
  8949  00213E  D008               	goto	u3330
  8950  002140  5033               	movf	dtoa@w+1,w,c
  8951  002142  E103               	bnz	u3320
  8952  002144  0432               	decf	dtoa@w,w,c
  8953  002146  A0D8               	btfss	status,0,c
  8954  002148  D003               	goto	u3330
  8955  00214A                     u3320:
  8956  00214A  0100               	movlb	0	; () banked
  8957  00214C  B3D0               	btfsc	_flags& (0+255),1,b
  8958  00214E  D75F               	goto	l3728
  8959  002150                     u3330:
  8960  002150  FFFF               	dw	65535	; assembler added errata NOP
  8961                           
  8962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8963  002152  5034               	movf	dtoa@s,w,c
  8964  002154  1035               	iorwf	dtoa@s+1,w,c
  8965  002156  A4D8               	btfss	status,2,c
  8966  002158  D003               	goto	u3350
  8967  00215A  0100               	movlb	0	; () banked
  8968  00215C  A5D0               	btfss	_flags& (0+255),2,b
  8969  00215E  D01A               	goto	l3762
  8970  002160                     u3350:
  8971  002160  FFFF               	dw	65535	; assembler added errata NOP
  8972                           
  8973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8974  002162  063E               	decf	dtoa@i,f,c
  8975  002164  A0D8               	btfss	status,0,c
  8976  002166  063F               	decf	dtoa@i+1,f,c
  8977                           
  8978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8979  002168  5034               	movf	dtoa@s,w,c
  8980  00216A  1035               	iorwf	dtoa@s+1,w,c
  8981  00216C  A4D8               	btfss	status,2,c
  8982  00216E  D004               	goto	l3758
  8983  002170  0E00               	movlw	0
  8984  002172  6E2F               	movwf	_dtoa$1075+1,c
  8985  002174  0E2B               	movlw	43
  8986  002176  D004               	goto	L26
  8987  002178                     l3758:
  8988  002178  FFFF               	dw	65535	; assembler added errata NOP
  8989  00217A  0E00               	movlw	0
  8990  00217C  6E2F               	movwf	_dtoa$1075+1,c
  8991  00217E  0E2D               	movlw	45
  8992  002180                     L26:
  8993  002180  FFFF               	dw	65535	; assembler added errata NOP
  8994  002182  6E2E               	movwf	_dtoa$1075,c
  8995  002184  0ED5               	movlw	low _dbuf
  8996  002186  243E               	addwf	dtoa@i,w,c
  8997  002188  6ED9               	movwf	fsr2l,c
  8998  00218A  0E00               	movlw	high _dbuf
  8999  00218C  203F               	addwfc	dtoa@i+1,w,c
  9000  00218E  6EDA               	movwf	fsr2h,c
  9001  002190  C02E  FFDF         	movff	_dtoa$1075,indf2
  9002  002194                     l3762:
  9003  002194  FFFF               	dw	65535	; assembler added errata NOP
  9004                           
  9005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  9006  002196  C01C  F011         	movff	dtoa@fp,pad@fp
  9007  00219A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9008  00219E  0ED5               	movlw	low _dbuf
  9009  0021A0  243E               	addwf	dtoa@i,w,c
  9010  0021A2  6E13               	movwf	pad@buf,c
  9011  0021A4  0E00               	movlw	high _dbuf
  9012  0021A6  203F               	addwfc	dtoa@i+1,w,c
  9013  0021A8  6E14               	movwf	pad@buf+1,c
  9014  0021AA  C032  F015         	movff	dtoa@w,pad@p
  9015  0021AE  C033  F016         	movff	dtoa@w+1,pad@p+1
  9016  0021B2  ECD5  F01B         	call	_pad	;wreg free
  9017  0021B6  C011  F01C         	movff	?_pad,?_dtoa
  9018  0021BA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9019  0021BE  0012               	return		;funcret
  9020  0021C0  FFFF               	dw	65535	; errata NOP
  9021  0021C2                     __end_of_dtoa:
  9022                           	opt callstack 0
  9023                           
  9024 ;; *************** function _abs *****************
  9025 ;; Defined at:
  9026 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  a               2   18[COMRAM] int 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  2   18[COMRAM] int 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9040 ;;      Params:         2       0       0       0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0
  9042 ;;      Temps:          2       0       0       0       0       0       0
  9043 ;;      Totals:         4       0       0       0       0       0       0
  9044 ;;Total ram usage:        4 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    2
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_dtoa
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text34
  9055  003D3C                     __ptext34:
  9056                           	opt callstack 0
  9057  003D3C                     _abs:
  9058                           	opt callstack 0
  9059  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  9060                           
  9061                           ;incstack = 0
  9062  003D3E  BE14               	btfsc	abs@a+1,7,c
  9063  003D40  D005               	goto	u2890
  9064  003D42  5014               	movf	abs@a+1,w,c
  9065  003D44  E111               	bnz	l1285
  9066  003D46  0413               	decf	abs@a,w,c
  9067  003D48  B0D8               	btfsc	status,0,c
  9068  003D4A  D00E               	goto	l1285
  9069  003D4C                     u2890:
  9070  003D4C  FFFF               	dw	65535	; assembler added errata NOP
  9071  003D4E  C013  F015         	movff	abs@a,??_abs
  9072  003D52  C014  F016         	movff	abs@a+1,??_abs+1
  9073  003D56  1E15               	comf	??_abs,f,c
  9074  003D58  1E16               	comf	??_abs+1,f,c
  9075  003D5A  4A15               	infsnz	??_abs,f,c
  9076  003D5C  2A16               	incf	??_abs+1,f,c
  9077  003D5E  C015  F013         	movff	??_abs,?_abs
  9078  003D62  C016  F014         	movff	??_abs+1,?_abs+1
  9079  003D66  D005               	goto	l1288
  9080  003D68                     l1285:
  9081  003D68  FFFF               	dw	65535	; assembler added errata NOP
  9082  003D6A  C013  F013         	movff	abs@a,?_abs
  9083  003D6E  C014  F014         	movff	abs@a+1,?_abs+1
  9084  003D72                     l1288:
  9085  003D72  FFFF               	dw	65535	; assembler added errata NOP
  9086  003D74  0012               	return		;funcret
  9087  003D76  FFFF               	dw	65535	; errata NOP
  9088  003D78                     __end_of_abs:
  9089                           	opt callstack 0
  9090                           
  9091 ;; *************** function ___aomod *****************
  9092 ;; Defined at:
  9093 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  dividend        8    0[COMRAM] long long 
  9096 ;;  divisor         8    8[COMRAM] long long 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  sign            1   17[COMRAM] unsigned char 
  9099 ;;  counter         1   16[COMRAM] unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  8    0[COMRAM] long long 
  9102 ;; Registers used:
  9103 ;;		wreg, status,2, status,0
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9109 ;;      Params:        16       0       0       0       0       0       0
  9110 ;;      Locals:         2       0       0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0
  9112 ;;      Totals:        18       0       0       0       0       0       0
  9113 ;;Total ram usage:       18 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    2
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		_dtoa
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text35
  9124  00309E                     __ptext35:
  9125                           	opt callstack 0
  9126  00309E                     ___aomod:
  9127                           	opt callstack 0
  9128  00309E  FFFF               	dw	65535	; assembler added errata NOP
  9129                           
  9130                           ;incstack = 0
  9131  0030A0  0E00               	movlw	0
  9132  0030A2  6E12               	movwf	___aomod@sign,c
  9133  0030A4  AE08               	btfss	___aomod@dividend+7,7,c
  9134  0030A6  D012               	goto	l3612
  9135  0030A8  1E08               	comf	___aomod@dividend+7,f,c
  9136  0030AA  1E07               	comf	___aomod@dividend+6,f,c
  9137  0030AC  1E06               	comf	___aomod@dividend+5,f,c
  9138  0030AE  1E05               	comf	___aomod@dividend+4,f,c
  9139  0030B0  1E04               	comf	___aomod@dividend+3,f,c
  9140  0030B2  1E03               	comf	___aomod@dividend+2,f,c
  9141  0030B4  1E02               	comf	___aomod@dividend+1,f,c
  9142  0030B6  6C01               	negf	___aomod@dividend,c
  9143  0030B8  0E00               	movlw	0
  9144  0030BA  2202               	addwfc	___aomod@dividend+1,f,c
  9145  0030BC  2203               	addwfc	___aomod@dividend+2,f,c
  9146  0030BE  2204               	addwfc	___aomod@dividend+3,f,c
  9147  0030C0  2205               	addwfc	___aomod@dividend+4,f,c
  9148  0030C2  2206               	addwfc	___aomod@dividend+5,f,c
  9149  0030C4  2207               	addwfc	___aomod@dividend+6,f,c
  9150  0030C6  2208               	addwfc	___aomod@dividend+7,f,c
  9151  0030C8  0E01               	movlw	1
  9152  0030CA  6E12               	movwf	___aomod@sign,c
  9153  0030CC                     l3612:
  9154  0030CC  FFFF               	dw	65535	; assembler added errata NOP
  9155  0030CE  AE10               	btfss	___aomod@divisor+7,7,c
  9156  0030D0  D010               	goto	l3616
  9157  0030D2  1E10               	comf	___aomod@divisor+7,f,c
  9158  0030D4  1E0F               	comf	___aomod@divisor+6,f,c
  9159  0030D6  1E0E               	comf	___aomod@divisor+5,f,c
  9160  0030D8  1E0D               	comf	___aomod@divisor+4,f,c
  9161  0030DA  1E0C               	comf	___aomod@divisor+3,f,c
  9162  0030DC  1E0B               	comf	___aomod@divisor+2,f,c
  9163  0030DE  1E0A               	comf	___aomod@divisor+1,f,c
  9164  0030E0  6C09               	negf	___aomod@divisor,c
  9165  0030E2  0E00               	movlw	0
  9166  0030E4  220A               	addwfc	___aomod@divisor+1,f,c
  9167  0030E6  220B               	addwfc	___aomod@divisor+2,f,c
  9168  0030E8  220C               	addwfc	___aomod@divisor+3,f,c
  9169  0030EA  220D               	addwfc	___aomod@divisor+4,f,c
  9170  0030EC  220E               	addwfc	___aomod@divisor+5,f,c
  9171  0030EE  220F               	addwfc	___aomod@divisor+6,f,c
  9172  0030F0  2210               	addwfc	___aomod@divisor+7,f,c
  9173  0030F2                     l3616:
  9174  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  9175  0030F4  5009               	movf	___aomod@divisor,w,c
  9176  0030F6  100A               	iorwf	___aomod@divisor+1,w,c
  9177  0030F8  100B               	iorwf	___aomod@divisor+2,w,c
  9178  0030FA  100C               	iorwf	___aomod@divisor+3,w,c
  9179  0030FC  100D               	iorwf	___aomod@divisor+4,w,c
  9180  0030FE  100E               	iorwf	___aomod@divisor+5,w,c
  9181  003100  100F               	iorwf	___aomod@divisor+6,w,c
  9182  003102  1010               	iorwf	___aomod@divisor+7,w,c
  9183  003104  B4D8               	btfsc	status,2,c
  9184  003106  D040               	goto	l3632
  9185  003108  0E01               	movlw	1
  9186  00310A  6E11               	movwf	___aomod@counter,c
  9187  00310C  D00B               	goto	l3622
  9188  00310E                     l3620:
  9189  00310E  FFFF               	dw	65535	; assembler added errata NOP
  9190  003110  90D8               	bcf	status,0,c
  9191  003112  3609               	rlcf	___aomod@divisor,f,c
  9192  003114  360A               	rlcf	___aomod@divisor+1,f,c
  9193  003116  360B               	rlcf	___aomod@divisor+2,f,c
  9194  003118  360C               	rlcf	___aomod@divisor+3,f,c
  9195  00311A  360D               	rlcf	___aomod@divisor+4,f,c
  9196  00311C  360E               	rlcf	___aomod@divisor+5,f,c
  9197  00311E  360F               	rlcf	___aomod@divisor+6,f,c
  9198  003120  3610               	rlcf	___aomod@divisor+7,f,c
  9199  003122  2A11               	incf	___aomod@counter,f,c
  9200  003124                     l3622:
  9201  003124  FFFF               	dw	65535	; assembler added errata NOP
  9202  003126  AE10               	btfss	___aomod@divisor+7,7,c
  9203  003128  D7F2               	goto	l3620
  9204  00312A                     u3090:
  9205  00312A  FFFF               	dw	65535	; assembler added errata NOP
  9206  00312C  5009               	movf	___aomod@divisor,w,c
  9207  00312E  5C01               	subwf	___aomod@dividend,w,c
  9208  003130  500A               	movf	___aomod@divisor+1,w,c
  9209  003132  5802               	subwfb	___aomod@dividend+1,w,c
  9210  003134  500B               	movf	___aomod@divisor+2,w,c
  9211  003136  5803               	subwfb	___aomod@dividend+2,w,c
  9212  003138  500C               	movf	___aomod@divisor+3,w,c
  9213  00313A  5804               	subwfb	___aomod@dividend+3,w,c
  9214  00313C  500D               	movf	___aomod@divisor+4,w,c
  9215  00313E  5805               	subwfb	___aomod@dividend+4,w,c
  9216  003140  500E               	movf	___aomod@divisor+5,w,c
  9217  003142  5806               	subwfb	___aomod@dividend+5,w,c
  9218  003144  500F               	movf	___aomod@divisor+6,w,c
  9219  003146  5807               	subwfb	___aomod@dividend+6,w,c
  9220  003148  5010               	movf	___aomod@divisor+7,w,c
  9221  00314A  5808               	subwfb	___aomod@dividend+7,w,c
  9222  00314C  A0D8               	btfss	status,0,c
  9223  00314E  D010               	goto	l3628
  9224  003150  5009               	movf	___aomod@divisor,w,c
  9225  003152  5E01               	subwf	___aomod@dividend,f,c
  9226  003154  500A               	movf	___aomod@divisor+1,w,c
  9227  003156  5A02               	subwfb	___aomod@dividend+1,f,c
  9228  003158  500B               	movf	___aomod@divisor+2,w,c
  9229  00315A  5A03               	subwfb	___aomod@dividend+2,f,c
  9230  00315C  500C               	movf	___aomod@divisor+3,w,c
  9231  00315E  5A04               	subwfb	___aomod@dividend+3,f,c
  9232  003160  500D               	movf	___aomod@divisor+4,w,c
  9233  003162  5A05               	subwfb	___aomod@dividend+4,f,c
  9234  003164  500E               	movf	___aomod@divisor+5,w,c
  9235  003166  5A06               	subwfb	___aomod@dividend+5,f,c
  9236  003168  500F               	movf	___aomod@divisor+6,w,c
  9237  00316A  5A07               	subwfb	___aomod@dividend+6,f,c
  9238  00316C  5010               	movf	___aomod@divisor+7,w,c
  9239  00316E  5A08               	subwfb	___aomod@dividend+7,f,c
  9240  003170                     l3628:
  9241  003170  FFFF               	dw	65535	; assembler added errata NOP
  9242  003172  90D8               	bcf	status,0,c
  9243  003174  3210               	rrcf	___aomod@divisor+7,f,c
  9244  003176  320F               	rrcf	___aomod@divisor+6,f,c
  9245  003178  320E               	rrcf	___aomod@divisor+5,f,c
  9246  00317A  320D               	rrcf	___aomod@divisor+4,f,c
  9247  00317C  320C               	rrcf	___aomod@divisor+3,f,c
  9248  00317E  320B               	rrcf	___aomod@divisor+2,f,c
  9249  003180  320A               	rrcf	___aomod@divisor+1,f,c
  9250  003182  3209               	rrcf	___aomod@divisor,f,c
  9251  003184  2E11               	decfsz	___aomod@counter,f,c
  9252  003186  D7D1               	goto	u3090
  9253  003188                     l3632:
  9254  003188  FFFF               	dw	65535	; assembler added errata NOP
  9255  00318A  5012               	movf	___aomod@sign,w,c
  9256  00318C  B4D8               	btfsc	status,2,c
  9257  00318E  D010               	goto	l3636
  9258  003190  1E08               	comf	___aomod@dividend+7,f,c
  9259  003192  1E07               	comf	___aomod@dividend+6,f,c
  9260  003194  1E06               	comf	___aomod@dividend+5,f,c
  9261  003196  1E05               	comf	___aomod@dividend+4,f,c
  9262  003198  1E04               	comf	___aomod@dividend+3,f,c
  9263  00319A  1E03               	comf	___aomod@dividend+2,f,c
  9264  00319C  1E02               	comf	___aomod@dividend+1,f,c
  9265  00319E  6C01               	negf	___aomod@dividend,c
  9266  0031A0  0E00               	movlw	0
  9267  0031A2  2202               	addwfc	___aomod@dividend+1,f,c
  9268  0031A4  2203               	addwfc	___aomod@dividend+2,f,c
  9269  0031A6  2204               	addwfc	___aomod@dividend+3,f,c
  9270  0031A8  2205               	addwfc	___aomod@dividend+4,f,c
  9271  0031AA  2206               	addwfc	___aomod@dividend+5,f,c
  9272  0031AC  2207               	addwfc	___aomod@dividend+6,f,c
  9273  0031AE  2208               	addwfc	___aomod@dividend+7,f,c
  9274  0031B0                     l3636:
  9275  0031B0  FFFF               	dw	65535	; assembler added errata NOP
  9276  0031B2  C001  F001         	movff	___aomod@dividend,?___aomod
  9277  0031B6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9278  0031BA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9279  0031BE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9280  0031C2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9281  0031C6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9282  0031CA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9283  0031CE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9284  0031D2  0012               	return		;funcret
  9285  0031D4  FFFF               	dw	65535	; errata NOP
  9286  0031D6                     __end_of___aomod:
  9287                           	opt callstack 0
  9288                           
  9289 ;; *************** function ___aodiv *****************
  9290 ;; Defined at:
  9291 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  dividend        8    0[COMRAM] long long 
  9294 ;;  divisor         8    8[COMRAM] long long 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  quotient        8   18[COMRAM] long long 
  9297 ;;  sign            1   17[COMRAM] unsigned char 
  9298 ;;  counter         1   16[COMRAM] unsigned char 
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  8    0[COMRAM] long long 
  9301 ;; Registers used:
  9302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9308 ;;      Params:        16       0       0       0       0       0       0
  9309 ;;      Locals:        10       0       0       0       0       0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0
  9311 ;;      Totals:        26       0       0       0       0       0       0
  9312 ;;Total ram usage:       26 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; Hardware stack levels required when called:    2
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_dtoa
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text36
  9323  002DFE                     __ptext36:
  9324                           	opt callstack 0
  9325  002DFE                     ___aodiv:
  9326                           	opt callstack 0
  9327  002DFE  FFFF               	dw	65535	; assembler added errata NOP
  9328                           
  9329                           ;incstack = 0
  9330  002E00  0E00               	movlw	0
  9331  002E02  6E12               	movwf	___aodiv@sign,c
  9332  002E04  AE10               	btfss	___aodiv@divisor+7,7,c
  9333  002E06  D012               	goto	l3568
  9334  002E08  1E10               	comf	___aodiv@divisor+7,f,c
  9335  002E0A  1E0F               	comf	___aodiv@divisor+6,f,c
  9336  002E0C  1E0E               	comf	___aodiv@divisor+5,f,c
  9337  002E0E  1E0D               	comf	___aodiv@divisor+4,f,c
  9338  002E10  1E0C               	comf	___aodiv@divisor+3,f,c
  9339  002E12  1E0B               	comf	___aodiv@divisor+2,f,c
  9340  002E14  1E0A               	comf	___aodiv@divisor+1,f,c
  9341  002E16  6C09               	negf	___aodiv@divisor,c
  9342  002E18  0E00               	movlw	0
  9343  002E1A  220A               	addwfc	___aodiv@divisor+1,f,c
  9344  002E1C  220B               	addwfc	___aodiv@divisor+2,f,c
  9345  002E1E  220C               	addwfc	___aodiv@divisor+3,f,c
  9346  002E20  220D               	addwfc	___aodiv@divisor+4,f,c
  9347  002E22  220E               	addwfc	___aodiv@divisor+5,f,c
  9348  002E24  220F               	addwfc	___aodiv@divisor+6,f,c
  9349  002E26  2210               	addwfc	___aodiv@divisor+7,f,c
  9350  002E28  0E01               	movlw	1
  9351  002E2A  6E12               	movwf	___aodiv@sign,c
  9352  002E2C                     l3568:
  9353  002E2C  FFFF               	dw	65535	; assembler added errata NOP
  9354  002E2E  AE08               	btfss	___aodiv@dividend+7,7,c
  9355  002E30  D012               	goto	l3574
  9356  002E32  1E08               	comf	___aodiv@dividend+7,f,c
  9357  002E34  1E07               	comf	___aodiv@dividend+6,f,c
  9358  002E36  1E06               	comf	___aodiv@dividend+5,f,c
  9359  002E38  1E05               	comf	___aodiv@dividend+4,f,c
  9360  002E3A  1E04               	comf	___aodiv@dividend+3,f,c
  9361  002E3C  1E03               	comf	___aodiv@dividend+2,f,c
  9362  002E3E  1E02               	comf	___aodiv@dividend+1,f,c
  9363  002E40  6C01               	negf	___aodiv@dividend,c
  9364  002E42  0E00               	movlw	0
  9365  002E44  2202               	addwfc	___aodiv@dividend+1,f,c
  9366  002E46  2203               	addwfc	___aodiv@dividend+2,f,c
  9367  002E48  2204               	addwfc	___aodiv@dividend+3,f,c
  9368  002E4A  2205               	addwfc	___aodiv@dividend+4,f,c
  9369  002E4C  2206               	addwfc	___aodiv@dividend+5,f,c
  9370  002E4E  2207               	addwfc	___aodiv@dividend+6,f,c
  9371  002E50  2208               	addwfc	___aodiv@dividend+7,f,c
  9372  002E52  0E01               	movlw	1
  9373  002E54  1A12               	xorwf	___aodiv@sign,f,c
  9374  002E56                     l3574:
  9375  002E56  FFFF               	dw	65535	; assembler added errata NOP
  9376  002E58  EE20  F013         	lfsr	2,___aodiv@quotient
  9377  002E5C  0E07               	movlw	7
  9378  002E5E                     u3011:
  9379  002E5E  6ADE               	clrf	postinc2,c
  9380  002E60  06E8               	decf	wreg,f,c
  9381  002E62  E2FD               	bc	u3011
  9382  002E64  5009               	movf	___aodiv@divisor,w,c
  9383  002E66  100A               	iorwf	___aodiv@divisor+1,w,c
  9384  002E68  100B               	iorwf	___aodiv@divisor+2,w,c
  9385  002E6A  100C               	iorwf	___aodiv@divisor+3,w,c
  9386  002E6C  100D               	iorwf	___aodiv@divisor+4,w,c
  9387  002E6E  100E               	iorwf	___aodiv@divisor+5,w,c
  9388  002E70  100F               	iorwf	___aodiv@divisor+6,w,c
  9389  002E72  1010               	iorwf	___aodiv@divisor+7,w,c
  9390  002E74  B4D8               	btfsc	status,2,c
  9391  002E76  D04A               	goto	l3596
  9392  002E78  0E01               	movlw	1
  9393  002E7A  6E11               	movwf	___aodiv@counter,c
  9394  002E7C  D00B               	goto	l3582
  9395  002E7E                     l3580:
  9396  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  9397  002E80  90D8               	bcf	status,0,c
  9398  002E82  3609               	rlcf	___aodiv@divisor,f,c
  9399  002E84  360A               	rlcf	___aodiv@divisor+1,f,c
  9400  002E86  360B               	rlcf	___aodiv@divisor+2,f,c
  9401  002E88  360C               	rlcf	___aodiv@divisor+3,f,c
  9402  002E8A  360D               	rlcf	___aodiv@divisor+4,f,c
  9403  002E8C  360E               	rlcf	___aodiv@divisor+5,f,c
  9404  002E8E  360F               	rlcf	___aodiv@divisor+6,f,c
  9405  002E90  3610               	rlcf	___aodiv@divisor+7,f,c
  9406  002E92  2A11               	incf	___aodiv@counter,f,c
  9407  002E94                     l3582:
  9408  002E94  FFFF               	dw	65535	; assembler added errata NOP
  9409  002E96  AE10               	btfss	___aodiv@divisor+7,7,c
  9410  002E98  D7F2               	goto	l3580
  9411  002E9A                     u3030:
  9412  002E9A  FFFF               	dw	65535	; assembler added errata NOP
  9413  002E9C  90D8               	bcf	status,0,c
  9414  002E9E  3613               	rlcf	___aodiv@quotient,f,c
  9415  002EA0  3614               	rlcf	___aodiv@quotient+1,f,c
  9416  002EA2  3615               	rlcf	___aodiv@quotient+2,f,c
  9417  002EA4  3616               	rlcf	___aodiv@quotient+3,f,c
  9418  002EA6  3617               	rlcf	___aodiv@quotient+4,f,c
  9419  002EA8  3618               	rlcf	___aodiv@quotient+5,f,c
  9420  002EAA  3619               	rlcf	___aodiv@quotient+6,f,c
  9421  002EAC  361A               	rlcf	___aodiv@quotient+7,f,c
  9422  002EAE  5009               	movf	___aodiv@divisor,w,c
  9423  002EB0  5C01               	subwf	___aodiv@dividend,w,c
  9424  002EB2  500A               	movf	___aodiv@divisor+1,w,c
  9425  002EB4  5802               	subwfb	___aodiv@dividend+1,w,c
  9426  002EB6  500B               	movf	___aodiv@divisor+2,w,c
  9427  002EB8  5803               	subwfb	___aodiv@dividend+2,w,c
  9428  002EBA  500C               	movf	___aodiv@divisor+3,w,c
  9429  002EBC  5804               	subwfb	___aodiv@dividend+3,w,c
  9430  002EBE  500D               	movf	___aodiv@divisor+4,w,c
  9431  002EC0  5805               	subwfb	___aodiv@dividend+4,w,c
  9432  002EC2  500E               	movf	___aodiv@divisor+5,w,c
  9433  002EC4  5806               	subwfb	___aodiv@dividend+5,w,c
  9434  002EC6  500F               	movf	___aodiv@divisor+6,w,c
  9435  002EC8  5807               	subwfb	___aodiv@dividend+6,w,c
  9436  002ECA  5010               	movf	___aodiv@divisor+7,w,c
  9437  002ECC  5808               	subwfb	___aodiv@dividend+7,w,c
  9438  002ECE  A0D8               	btfss	status,0,c
  9439  002ED0  D011               	goto	l3592
  9440  002ED2  5009               	movf	___aodiv@divisor,w,c
  9441  002ED4  5E01               	subwf	___aodiv@dividend,f,c
  9442  002ED6  500A               	movf	___aodiv@divisor+1,w,c
  9443  002ED8  5A02               	subwfb	___aodiv@dividend+1,f,c
  9444  002EDA  500B               	movf	___aodiv@divisor+2,w,c
  9445  002EDC  5A03               	subwfb	___aodiv@dividend+2,f,c
  9446  002EDE  500C               	movf	___aodiv@divisor+3,w,c
  9447  002EE0  5A04               	subwfb	___aodiv@dividend+3,f,c
  9448  002EE2  500D               	movf	___aodiv@divisor+4,w,c
  9449  002EE4  5A05               	subwfb	___aodiv@dividend+4,f,c
  9450  002EE6  500E               	movf	___aodiv@divisor+5,w,c
  9451  002EE8  5A06               	subwfb	___aodiv@dividend+5,f,c
  9452  002EEA  500F               	movf	___aodiv@divisor+6,w,c
  9453  002EEC  5A07               	subwfb	___aodiv@dividend+6,f,c
  9454  002EEE  5010               	movf	___aodiv@divisor+7,w,c
  9455  002EF0  5A08               	subwfb	___aodiv@dividend+7,f,c
  9456  002EF2  8013               	bsf	___aodiv@quotient,0,c
  9457  002EF4                     l3592:
  9458  002EF4  FFFF               	dw	65535	; assembler added errata NOP
  9459  002EF6  90D8               	bcf	status,0,c
  9460  002EF8  3210               	rrcf	___aodiv@divisor+7,f,c
  9461  002EFA  320F               	rrcf	___aodiv@divisor+6,f,c
  9462  002EFC  320E               	rrcf	___aodiv@divisor+5,f,c
  9463  002EFE  320D               	rrcf	___aodiv@divisor+4,f,c
  9464  002F00  320C               	rrcf	___aodiv@divisor+3,f,c
  9465  002F02  320B               	rrcf	___aodiv@divisor+2,f,c
  9466  002F04  320A               	rrcf	___aodiv@divisor+1,f,c
  9467  002F06  3209               	rrcf	___aodiv@divisor,f,c
  9468  002F08  2E11               	decfsz	___aodiv@counter,f,c
  9469  002F0A  D7C7               	goto	u3030
  9470  002F0C                     l3596:
  9471  002F0C  FFFF               	dw	65535	; assembler added errata NOP
  9472  002F0E  5012               	movf	___aodiv@sign,w,c
  9473  002F10  B4D8               	btfsc	status,2,c
  9474  002F12  D010               	goto	l3600
  9475  002F14  1E1A               	comf	___aodiv@quotient+7,f,c
  9476  002F16  1E19               	comf	___aodiv@quotient+6,f,c
  9477  002F18  1E18               	comf	___aodiv@quotient+5,f,c
  9478  002F1A  1E17               	comf	___aodiv@quotient+4,f,c
  9479  002F1C  1E16               	comf	___aodiv@quotient+3,f,c
  9480  002F1E  1E15               	comf	___aodiv@quotient+2,f,c
  9481  002F20  1E14               	comf	___aodiv@quotient+1,f,c
  9482  002F22  6C13               	negf	___aodiv@quotient,c
  9483  002F24  0E00               	movlw	0
  9484  002F26  2214               	addwfc	___aodiv@quotient+1,f,c
  9485  002F28  2215               	addwfc	___aodiv@quotient+2,f,c
  9486  002F2A  2216               	addwfc	___aodiv@quotient+3,f,c
  9487  002F2C  2217               	addwfc	___aodiv@quotient+4,f,c
  9488  002F2E  2218               	addwfc	___aodiv@quotient+5,f,c
  9489  002F30  2219               	addwfc	___aodiv@quotient+6,f,c
  9490  002F32  221A               	addwfc	___aodiv@quotient+7,f,c
  9491  002F34                     l3600:
  9492  002F34  FFFF               	dw	65535	; assembler added errata NOP
  9493  002F36  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9494  002F3A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9495  002F3E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9496  002F42  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9497  002F46  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9498  002F4A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9499  002F4E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9500  002F52  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9501  002F56  0012               	return		;funcret
  9502  002F58  FFFF               	dw	65535	; errata NOP
  9503  002F5A                     __end_of___aodiv:
  9504                           	opt callstack 0
  9505                           
  9506 ;; *************** function _ctoa *****************
  9507 ;; Defined at:
  9508 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9511 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9512 ;;  c               1   29[COMRAM] unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  w               2   30[COMRAM] int 
  9515 ;;  l               2    0        int 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2   27[COMRAM] int 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9525 ;;      Params:         3       0       0       0       0       0       0
  9526 ;;      Locals:         2       0       0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0
  9528 ;;      Totals:         5       0       0       0       0       0       0
  9529 ;;Total ram usage:        5 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    6
  9532 ;; This function calls:
  9533 ;;		_pad
  9534 ;; This function is called by:
  9535 ;;		_vfpfcnvrt
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text37
  9540  003B02                     __ptext37:
  9541                           	opt callstack 0
  9542  003B02                     _ctoa:
  9543                           	opt callstack 0
  9544  003B02  FFFF               	dw	65535	; assembler added errata NOP
  9545                           
  9546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9547                           
  9548                           ;incstack = 0
  9549  003B04  0100               	movlb	0	; () banked
  9550  003B06  51CC               	movf	_width& (0+255),w,b
  9551  003B08  11CD               	iorwf	(_width+1)& (0+255),w,b
  9552  003B0A  A4D8               	btfss	status,2,c
  9553  003B0C  D005               	goto	l3694
  9554                           
  9555                           ; BSR set to: 0
  9556  003B0E  C0CC  F01F         	movff	_width,ctoa@w
  9557  003B12  C0CD  F020         	movff	_width+1,ctoa@w+1
  9558  003B16  D007               	goto	l3696
  9559  003B18                     l3694:
  9560  003B18  FFFF               	dw	65535	; assembler added errata NOP
  9561                           
  9562                           ; BSR set to: 0
  9563  003B1A  0EFF               	movlw	255
  9564  003B1C  25CC               	addwf	_width& (0+255),w,b
  9565  003B1E  6E1F               	movwf	ctoa@w,c
  9566  003B20  0EFF               	movlw	255
  9567  003B22  21CD               	addwfc	(_width+1)& (0+255),w,b
  9568  003B24  6E20               	movwf	ctoa@w+1,c
  9569  003B26                     l3696:
  9570  003B26  FFFF               	dw	65535	; assembler added errata NOP
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9574  003B28  C01E  F0D5         	movff	ctoa@c,_dbuf
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9578  003B2C  0E00               	movlw	0
  9579  003B2E  6FD6               	movwf	(_dbuf+1)& (0+255),b
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9583  003B30  C01C  F011         	movff	ctoa@fp,pad@fp
  9584  003B34  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9585  003B38  0ED5               	movlw	low _dbuf
  9586  003B3A  6E13               	movwf	pad@buf,c
  9587  003B3C  0E00               	movlw	high _dbuf
  9588  003B3E  6E14               	movwf	pad@buf+1,c
  9589  003B40  C01F  F015         	movff	ctoa@w,pad@p
  9590  003B44  C020  F016         	movff	ctoa@w+1,pad@p+1
  9591  003B48  ECD5  F01B         	call	_pad	;wreg free
  9592  003B4C  C011  F01C         	movff	?_pad,?_ctoa
  9593  003B50  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9594  003B54  0012               	return		;funcret
  9595  003B56  FFFF               	dw	65535	; errata NOP
  9596  003B58                     __end_of_ctoa:
  9597                           	opt callstack 0
  9598                           
  9599 ;; *************** function _pad *****************
  9600 ;; Defined at:
  9601 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9604 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9605 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9606 ;;		 -> dbuf(32), 
  9607 ;;  p               2   20[COMRAM] int 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  w               2   25[COMRAM] int 
  9610 ;;  i               2   23[COMRAM] int 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  2   16[COMRAM] int 
  9613 ;; Registers used:
  9614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9620 ;;      Params:         6       0       0       0       0       0       0
  9621 ;;      Locals:         4       0       0       0       0       0       0
  9622 ;;      Temps:          1       0       0       0       0       0       0
  9623 ;;      Totals:        11       0       0       0       0       0       0
  9624 ;;Total ram usage:       11 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    5
  9627 ;; This function calls:
  9628 ;;		_fputc
  9629 ;;		_fputs
  9630 ;;		_strlen
  9631 ;; This function is called by:
  9632 ;;		_ctoa
  9633 ;;		_dtoa
  9634 ;;		_otoa
  9635 ;;		_utoa
  9636 ;;		_xtoa
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text38
  9641  0037AA                     __ptext38:
  9642                           	opt callstack 0
  9643  0037AA                     _pad:
  9644                           	opt callstack 0
  9645  0037AA  FFFF               	dw	65535	; assembler added errata NOP
  9646                           
  9647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9648                           
  9649                           ;incstack = 0
  9650  0037AC  0100               	movlb	0	; () banked
  9651  0037AE  A1D0               	btfss	_flags& (0+255),0,b
  9652  0037B0  D00A               	goto	l3510
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9656  0037B2  C013  F00A         	movff	pad@buf,fputs@s
  9657  0037B6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9658  0037BA  C011  F00C         	movff	pad@fp,fputs@fp
  9659  0037BE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9660  0037C2  EC41  F01E         	call	_fputs	;wreg free
  9661  0037C6                     l3510:
  9662  0037C6  FFFF               	dw	65535	; assembler added errata NOP
  9663                           
  9664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9665  0037C8  BE16               	btfsc	pad@p+1,7,c
  9666  0037CA  D005               	goto	l3514
  9667  0037CC  C015  F01A         	movff	pad@p,pad@w
  9668  0037D0  C016  F01B         	movff	pad@p+1,pad@w+1
  9669  0037D4  D005               	goto	l394
  9670  0037D6                     l3514:
  9671  0037D6  FFFF               	dw	65535	; assembler added errata NOP
  9672  0037D8  0E00               	movlw	0
  9673  0037DA  6E1B               	movwf	pad@w+1,c
  9674  0037DC  0E00               	movlw	0
  9675  0037DE  6E1A               	movwf	pad@w,c
  9676  0037E0                     l394:
  9677  0037E0  FFFF               	dw	65535	; assembler added errata NOP
  9678                           
  9679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9680  0037E2  0E00               	movlw	0
  9681  0037E4  6E19               	movwf	pad@i+1,c
  9682  0037E6  0E00               	movlw	0
  9683  0037E8  6E18               	movwf	pad@i,c
  9684                           
  9685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9686  0037EA  D00D               	goto	l3520
  9687  0037EC                     l3516:
  9688  0037EC  FFFF               	dw	65535	; assembler added errata NOP
  9689                           
  9690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9691  0037EE  0E00               	movlw	0
  9692  0037F0  6E02               	movwf	fputc@c+1,c
  9693  0037F2  0E20               	movlw	32
  9694  0037F4  6E01               	movwf	fputc@c,c
  9695  0037F6  C011  F003         	movff	pad@fp,fputc@fp
  9696  0037FA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9697  0037FE  EC7F  F01B         	call	_fputc	;wreg free
  9698                           
  9699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9700  003802  4A18               	infsnz	pad@i,f,c
  9701  003804  2A19               	incf	pad@i+1,f,c
  9702  003806                     l3520:
  9703  003806  FFFF               	dw	65535	; assembler added errata NOP
  9704                           
  9705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9706  003808  501A               	movf	pad@w,w,c
  9707  00380A  5C18               	subwf	pad@i,w,c
  9708  00380C  5019               	movf	pad@i+1,w,c
  9709  00380E  0A80               	xorlw	128
  9710  003810  6E17               	movwf	??_pad& (0+255),c
  9711  003812  501B               	movf	pad@w+1,w,c
  9712  003814  0A80               	xorlw	128
  9713  003816  5817               	subwfb	??_pad& (0+255),w,c
  9714  003818  A0D8               	btfss	status,0,c
  9715  00381A  D7E8               	goto	l3516
  9716                           
  9717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9718  00381C  0100               	movlb	0	; () banked
  9719  00381E  B1D0               	btfsc	_flags& (0+255),0,b
  9720  003820  D00A               	goto	l3524
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9724  003822  C013  F00A         	movff	pad@buf,fputs@s
  9725  003826  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9726  00382A  C011  F00C         	movff	pad@fp,fputs@fp
  9727  00382E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9728  003832  EC41  F01E         	call	_fputs	;wreg free
  9729  003836                     l3524:
  9730  003836  FFFF               	dw	65535	; assembler added errata NOP
  9731                           
  9732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9733  003838  C013  F001         	movff	pad@buf,strlen@s
  9734  00383C  C014  F002         	movff	pad@buf+1,strlen@s+1
  9735  003840  EC10  F01F         	call	_strlen	;wreg free
  9736  003844  501A               	movf	pad@w,w,c
  9737  003846  2401               	addwf	?_strlen,w,c
  9738  003848  6E11               	movwf	?_pad,c
  9739  00384A  501B               	movf	pad@w+1,w,c
  9740  00384C  2002               	addwfc	?_strlen+1,w,c
  9741  00384E  6E12               	movwf	?_pad+1,c
  9742  003850  0012               	return		;funcret
  9743  003852  FFFF               	dw	65535	; errata NOP
  9744  003854                     __end_of_pad:
  9745                           	opt callstack 0
  9746                           
  9747 ;; *************** function _strlen *****************
  9748 ;; Defined at:
  9749 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9752 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9755 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  2    0[COMRAM] unsigned int 
  9758 ;; Registers used:
  9759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9765 ;;      Params:         2       0       0       0       0       0       0
  9766 ;;      Locals:         2       0       0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0       0       0
  9768 ;;      Totals:         4       0       0       0       0       0       0
  9769 ;;Total ram usage:        4 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    2
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_pad
  9776 ;;		_stoa
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text39
  9781  003E20                     __ptext39:
  9782                           	opt callstack 0
  9783  003E20                     _strlen:
  9784                           	opt callstack 0
  9785  003E20  FFFF               	dw	65535	; assembler added errata NOP
  9786                           
  9787                           ;incstack = 0
  9788  003E22  C001  F003         	movff	strlen@s,strlen@a
  9789  003E26  C002  F004         	movff	strlen@s+1,strlen@a+1
  9790  003E2A  D003               	goto	l3496
  9791  003E2C                     l3494:
  9792  003E2C  FFFF               	dw	65535	; assembler added errata NOP
  9793  003E2E  4A01               	infsnz	strlen@s,f,c
  9794  003E30  2A02               	incf	strlen@s+1,f,c
  9795  003E32                     l3496:
  9796  003E32  FFFF               	dw	65535	; assembler added errata NOP
  9797  003E34  C001  FFD9         	movff	strlen@s,fsr2l
  9798  003E38  C002  FFDA         	movff	strlen@s+1,fsr2h
  9799  003E3C  50DF               	movf	indf2,w,c
  9800  003E3E  A4D8               	btfss	status,2,c
  9801  003E40  D7F5               	goto	l3494
  9802  003E42  5003               	movf	strlen@a,w,c
  9803  003E44  5C01               	subwf	strlen@s,w,c
  9804  003E46  6E01               	movwf	?_strlen,c
  9805  003E48  5004               	movf	strlen@a+1,w,c
  9806  003E4A  5802               	subwfb	strlen@s+1,w,c
  9807  003E4C  6E02               	movwf	?_strlen+1,c
  9808  003E4E  0012               	return		;funcret
  9809  003E50  FFFF               	dw	65535	; errata NOP
  9810  003E52                     __end_of_strlen:
  9811                           	opt callstack 0
  9812                           
  9813 ;; *************** function _fputs *****************
  9814 ;; Defined at:
  9815 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9818 ;;		 -> dbuf(32), 
  9819 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9820 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  i               2   14[COMRAM] int 
  9823 ;;  c               1   13[COMRAM] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2    9[COMRAM] int 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9833 ;;      Params:         4       0       0       0       0       0       0
  9834 ;;      Locals:         3       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0
  9836 ;;      Totals:         7       0       0       0       0       0       0
  9837 ;;Total ram usage:        7 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    4
  9840 ;; This function calls:
  9841 ;;		_fputc
  9842 ;; This function is called by:
  9843 ;;		_pad
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text40
  9848  003C82                     __ptext40:
  9849                           	opt callstack 0
  9850  003C82                     _fputs:
  9851                           	opt callstack 0
  9852  003C82  FFFF               	dw	65535	; assembler added errata NOP
  9853                           
  9854                           ;incstack = 0
  9855  003C84  0E00               	movlw	0
  9856  003C86  6E10               	movwf	fputs@i+1,c
  9857  003C88  0E00               	movlw	0
  9858  003C8A  6E0F               	movwf	fputs@i,c
  9859  003C8C  D00C               	goto	l3490
  9860  003C8E                     l3486:
  9861  003C8E  FFFF               	dw	65535	; assembler added errata NOP
  9862  003C90  C00E  F001         	movff	fputs@c,fputc@c
  9863  003C94  6A02               	clrf	fputc@c+1,c
  9864  003C96  C00C  F003         	movff	fputs@fp,fputc@fp
  9865  003C9A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9866  003C9E  EC7F  F01B         	call	_fputc	;wreg free
  9867  003CA2  4A0F               	infsnz	fputs@i,f,c
  9868  003CA4  2A10               	incf	fputs@i+1,f,c
  9869  003CA6                     l3490:
  9870  003CA6  FFFF               	dw	65535	; assembler added errata NOP
  9871  003CA8  500F               	movf	fputs@i,w,c
  9872  003CAA  240A               	addwf	fputs@s,w,c
  9873  003CAC  6ED9               	movwf	fsr2l,c
  9874  003CAE  5010               	movf	fputs@i+1,w,c
  9875  003CB0  200B               	addwfc	fputs@s+1,w,c
  9876  003CB2  6EDA               	movwf	fsr2h,c
  9877  003CB4  50DF               	movf	indf2,w,c
  9878  003CB6  6E0E               	movwf	fputs@c,c
  9879  003CB8  500E               	movf	fputs@c,w,c
  9880  003CBA  B4D8               	btfsc	status,2,c
  9881  003CBC  0012               	return		;funcret
  9882  003CBE  FFFF               	dw	65535	; assembler added errata NOP
  9883  003CC0  D7E6               	goto	l3486
  9884  003CC2  FFFF               	dw	65535	; errata NOP
  9885  003CC4                     __end_of_fputs:
  9886                           	opt callstack 0
  9887                           
  9888 ;; *************** function _fputc *****************
  9889 ;; Defined at:
  9890 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  c               2    0[COMRAM] int 
  9893 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9894 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;		None
  9897 ;; Return value:  Size  Location     Type
  9898 ;;                  2    0[COMRAM] int 
  9899 ;; Registers used:
  9900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9906 ;;      Params:         4       0       0       0       0       0       0
  9907 ;;      Locals:         0       0       0       0       0       0       0
  9908 ;;      Temps:          5       0       0       0       0       0       0
  9909 ;;      Totals:         9       0       0       0       0       0       0
  9910 ;;Total ram usage:        9 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    3
  9913 ;; This function calls:
  9914 ;;		_putch
  9915 ;; This function is called by:
  9916 ;;		_pad
  9917 ;;		_stoa
  9918 ;;		_vfpfcnvrt
  9919 ;;		_fputs
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text41
  9924  0036FE                     __ptext41:
  9925                           	opt callstack 0
  9926  0036FE                     _fputc:
  9927                           	opt callstack 0
  9928  0036FE  FFFF               	dw	65535	; assembler added errata NOP
  9929                           
  9930                           ;incstack = 0
  9931  003700  5003               	movf	fputc@fp,w,c
  9932  003702  1004               	iorwf	fputc@fp+1,w,c
  9933  003704  B4D8               	btfsc	status,2,c
  9934  003706  D004               	goto	u2780
  9935  003708  5003               	movf	fputc@fp,w,c
  9936  00370A  1004               	iorwf	fputc@fp+1,w,c
  9937  00370C  A4D8               	btfss	status,2,c
  9938  00370E  D005               	goto	l3476
  9939  003710                     u2780:
  9940  003710  FFFF               	dw	65535	; assembler added errata NOP
  9941  003712  5001               	movf	fputc@c,w,c
  9942  003714  ECFD  F01F         	call	_putch
  9943  003718  D045               	goto	l1362
  9944  00371A                     l3476:
  9945  00371A  FFFF               	dw	65535	; assembler added errata NOP
  9946  00371C  EE20 F004          	lfsr	2,4
  9947  003720  5003               	movf	fputc@fp,w,c
  9948  003722  26D9               	addwf	fsr2l,f,c
  9949  003724  5004               	movf	fputc@fp+1,w,c
  9950  003726  22DA               	addwfc	fsr2h,f,c
  9951  003728  50DE               	movf	postinc2,w,c
  9952  00372A  10DE               	iorwf	postinc2,w,c
  9953  00372C  B4D8               	btfsc	status,2,c
  9954  00372E  D016               	goto	u2800
  9955  003730  EE20 F004          	lfsr	2,4
  9956  003734  5003               	movf	fputc@fp,w,c
  9957  003736  26D9               	addwf	fsr2l,f,c
  9958  003738  5004               	movf	fputc@fp+1,w,c
  9959  00373A  22DA               	addwfc	fsr2h,f,c
  9960  00373C  EE10 F002          	lfsr	1,2
  9961  003740  5003               	movf	fputc@fp,w,c
  9962  003742  26E1               	addwf	fsr1l,f,c
  9963  003744  5004               	movf	fputc@fp+1,w,c
  9964  003746  22E2               	addwfc	fsr1h,f,c
  9965  003748  50DE               	movf	postinc2,w,c
  9966  00374A  5CE6               	subwf	postinc1,w,c
  9967  00374C  50E6               	movf	postinc1,w,c
  9968  00374E  0A80               	xorlw	128
  9969  003750  6E09               	movwf	(??_fputc+4)& (0+255),c
  9970  003752  50DE               	movf	postinc2,w,c
  9971  003754  0A80               	xorlw	128
  9972  003756  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  9973  003758  B0D8               	btfsc	status,0,c
  9974  00375A  D024               	goto	l1362
  9975  00375C                     u2800:
  9976  00375C  FFFF               	dw	65535	; assembler added errata NOP
  9977  00375E  EE20 F002          	lfsr	2,2
  9978  003762  5003               	movf	fputc@fp,w,c
  9979  003764  26D9               	addwf	fsr2l,f,c
  9980  003766  5004               	movf	fputc@fp+1,w,c
  9981  003768  22DA               	addwfc	fsr2h,f,c
  9982  00376A  CFDE F005          	movff	postinc2,??_fputc
  9983  00376E  CFDD F006          	movff	postdec2,??_fputc+1
  9984  003772  C003  FFD9         	movff	fputc@fp,fsr2l
  9985  003776  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9986  00377A  CFDE F007          	movff	postinc2,??_fputc+2
  9987  00377E  CFDD F008          	movff	postdec2,??_fputc+3
  9988  003782  5005               	movf	??_fputc,w,c
  9989  003784  2407               	addwf	??_fputc+2,w,c
  9990  003786  6ED9               	movwf	fsr2l,c
  9991  003788  5006               	movf	??_fputc+1,w,c
  9992  00378A  2008               	addwfc	??_fputc+3,w,c
  9993  00378C  6EDA               	movwf	fsr2h,c
  9994  00378E  C001  FFDF         	movff	fputc@c,indf2
  9995  003792  EE20 F002          	lfsr	2,2
  9996  003796  5003               	movf	fputc@fp,w,c
  9997  003798  26D9               	addwf	fsr2l,f,c
  9998  00379A  5004               	movf	fputc@fp+1,w,c
  9999  00379C  22DA               	addwfc	fsr2h,f,c
 10000  00379E  2ADE               	incf	postinc2,f,c
 10001  0037A0  0E00               	movlw	0
 10002  0037A2  22DD               	addwfc	postdec2,f,c
 10003  0037A4                     l1362:
 10004  0037A4  FFFF               	dw	65535	; assembler added errata NOP
 10005  0037A6  0012               	return		;funcret
 10006  0037A8  FFFF               	dw	65535	; errata NOP
 10007  0037AA                     __end_of_fputc:
 10008                           	opt callstack 0
 10009                           
 10010 ;; *************** function _putch *****************
 10011 ;; Defined at:
 10012 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  c               1    wreg     unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  c               1    0[COMRAM] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10026 ;;      Params:         0       0       0       0       0       0       0
 10027 ;;      Locals:         0       0       0       0       0       0       0
 10028 ;;      Temps:          0       0       0       0       0       0       0
 10029 ;;      Totals:         0       0       0       0       0       0       0
 10030 ;;Total ram usage:        0 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:    2
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_fputc
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text42
 10041  003FFA                     __ptext42:
 10042                           	opt callstack 0
 10043  003FFA                     _putch:
 10044                           	opt callstack 0
 10045  003FFA  FFFF               	dw	65535	; assembler added errata NOP
 10046                           
 10047                           ;incstack = 0
 10048  003FFC  0012               	return		;funcret
 10049  003FFE  FFFF               	dw	65535	; errata NOP
 10050  004000                     __end_of_putch:
 10051                           	opt callstack 0
 10052                           
 10053 ;; *************** function _atoi *****************
 10054 ;; Defined at:
 10055 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10058 ;;		 -> STR_2(3), STR_1(4), 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;  n               2   20[COMRAM] int 
 10061 ;;  neg             2   13[COMRAM] int 
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  2    7[COMRAM] int 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10071 ;;      Params:         2       0       0       0       0       0       0
 10072 ;;      Locals:         9       0       0       0       0       0       0
 10073 ;;      Temps:          4       0       0       0       0       0       0
 10074 ;;      Totals:        15       0       0       0       0       0       0
 10075 ;;Total ram usage:       15 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    3
 10078 ;; This function calls:
 10079 ;;		___wmul
 10080 ;;		_isdigit
 10081 ;;		_isspace
 10082 ;; This function is called by:
 10083 ;;		_vfpfcnvrt
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           	psect	text43
 10088  002B3C                     __ptext43:
 10089                           	opt callstack 0
 10090  002B3C                     _atoi:
 10091                           	opt callstack 0
 10092  002B3C  FFFF               	dw	65535	; assembler added errata NOP
 10093                           
 10094                           ;incstack = 0
 10095  002B3E  0E00               	movlw	0
 10096  002B40  6E16               	movwf	atoi@n+1,c
 10097  002B42  0E00               	movlw	0
 10098  002B44  6E15               	movwf	atoi@n,c
 10099  002B46  0E00               	movlw	0
 10100  002B48  6E0F               	movwf	atoi@neg+1,c
 10101  002B4A  0E00               	movlw	0
 10102  002B4C  6E0E               	movwf	atoi@neg,c
 10103  002B4E  D003               	goto	l3962
 10104  002B50                     l3960:
 10105  002B50  FFFF               	dw	65535	; assembler added errata NOP
 10106  002B52  4A08               	infsnz	atoi@s,f,c
 10107  002B54  2A09               	incf	atoi@s+1,f,c
 10108  002B56                     l3962:
 10109  002B56  FFFF               	dw	65535	; assembler added errata NOP
 10110  002B58  0E01               	movlw	1
 10111  002B5A  6E14               	movwf	_atoi$1722,c
 10112  002B5C  C008  FFF6         	movff	atoi@s,tblptrl
 10113  002B60  C009  FFF7         	movff	atoi@s+1,tblptrh
 10114  002B64                     	if	0	;tblptru may be non-zero
 10115  002B64                     	endif
 10116  002B64                     	if	0	;tblptru may be non-zero
 10117  002B64                     	endif
 10118  002B64  0008               	tblrd		*
 10119  002B66  FFFF               	dw	65535	; errata NOP
 10120  002B68  50F5               	movf	tablat,w,c
 10121  002B6A  0A20               	xorlw	32
 10122  002B6C  B4D8               	btfsc	status,2,c
 10123  002B6E  D019               	goto	l3970
 10124  002B70  0EF7               	movlw	247
 10125  002B72  6E0A               	movwf	??_atoi& (0+255),c
 10126  002B74  0EFF               	movlw	255
 10127  002B76  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10128  002B78  C008  FFF6         	movff	atoi@s,tblptrl
 10129  002B7C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10130  002B80                     	if	0	;tblptru may be non-zero
 10131  002B80                     	endif
 10132  002B80                     	if	0	;tblptru may be non-zero
 10133  002B80                     	endif
 10134  002B80  0008               	tblrd		*
 10135  002B82  FFFF               	dw	65535	; errata NOP
 10136  002B84  50F5               	movf	tablat,w,c
 10137  002B86  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10138  002B88  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10139  002B8A  500A               	movf	??_atoi,w,c
 10140  002B8C  260C               	addwf	??_atoi+2,f,c
 10141  002B8E  500B               	movf	??_atoi+1,w,c
 10142  002B90  220D               	addwfc	??_atoi+3,f,c
 10143  002B92  500D               	movf	??_atoi+3,w,c
 10144  002B94  E104               	bnz	u3810
 10145  002B96  0E05               	movlw	5
 10146  002B98  5C0C               	subwf	??_atoi+2,w,c
 10147  002B9A  A0D8               	btfss	status,0,c
 10148  002B9C  D002               	goto	l3970
 10149  002B9E                     u3810:
 10150  002B9E  0E00               	movlw	0
 10151  002BA0  6E14               	movwf	_atoi$1722,c
 10152  002BA2                     l3970:
 10153  002BA2  FFFF               	dw	65535	; assembler added errata NOP
 10154  002BA4  C014  F010         	movff	_atoi$1722,_atoi$1721
 10155  002BA8  6A11               	clrf	_atoi$1721+1,c
 10156  002BAA  5010               	movf	_atoi$1721,w,c
 10157  002BAC  1011               	iorwf	_atoi$1721+1,w,c
 10158  002BAE  B4D8               	btfsc	status,2,c
 10159  002BB0  D00A               	goto	l3980
 10160  002BB2  D7CE               	goto	l3960
 10161  002BB4                     l3976:
 10162  002BB4  FFFF               	dw	65535	; assembler added errata NOP
 10163  002BB6  0E00               	movlw	0
 10164  002BB8  6E0F               	movwf	atoi@neg+1,c
 10165  002BBA  0E01               	movlw	1
 10166  002BBC  6E0E               	movwf	atoi@neg,c
 10167  002BBE                     l3978:
 10168  002BBE  FFFF               	dw	65535	; assembler added errata NOP
 10169  002BC0  4A08               	infsnz	atoi@s,f,c
 10170  002BC2  2A09               	incf	atoi@s+1,f,c
 10171  002BC4  D032               	goto	l3986
 10172  002BC6                     l3980:
 10173  002BC6  FFFF               	dw	65535	; assembler added errata NOP
 10174  002BC8  C008  FFF6         	movff	atoi@s,tblptrl
 10175  002BCC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10176  002BD0                     	if	0	;tblptru may be non-zero
 10177  002BD0                     	endif
 10178  002BD0                     	if	0	;tblptru may be non-zero
 10179  002BD0                     	endif
 10180  002BD0  0008               	tblrd		*
 10181  002BD2  FFFF               	dw	65535	; errata NOP
 10182  002BD4  50F5               	movf	tablat,w,c
 10183  002BD6  6E0A               	movwf	??_atoi& (0+255),c
 10184  002BD8  6A0B               	clrf	(??_atoi+1)& (0+255),c
 10185                           
 10186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10187                           ; Switch size 1, requested type "simple"
 10188                           ; Number of cases is 1, Range of values is 0 to 0
 10189                           ; switch strategies available:
 10190                           ; Name         Instructions Cycles
 10191                           ; simple_byte            4     3 (average)
 10192                           ;	Chosen strategy is simple_byte
 10193  002BDA  500B               	movf	??_atoi+1,w,c
 10194  002BDC  0A00               	xorlw	0	; case 0
 10195  002BDE  A4D8               	btfss	status,2,c
 10196  002BE0  D024               	goto	l3986
 10197                           
 10198                           ; Switch size 1, requested type "simple"
 10199                           ; Number of cases is 2, Range of values is 43 to 45
 10200                           ; switch strategies available:
 10201                           ; Name         Instructions Cycles
 10202                           ; simple_byte            7     4 (average)
 10203                           ;	Chosen strategy is simple_byte
 10204  002BE2  500A               	movf	??_atoi,w,c
 10205  002BE4  0A2B               	xorlw	43	; case 43
 10206  002BE6  B4D8               	btfsc	status,2,c
 10207  002BE8  D7EA               	goto	l3978
 10208  002BEA  0A06               	xorlw	6	; case 45
 10209  002BEC  B4D8               	btfsc	status,2,c
 10210  002BEE  D7E2               	goto	l3976
 10211  002BF0  D01C               	goto	l3986
 10212  002BF2                     l3982:
 10213  002BF2  FFFF               	dw	65535	; assembler added errata NOP
 10214  002BF4  C015  F001         	movff	atoi@n,___wmul@multiplier
 10215  002BF8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10216  002BFC  0E00               	movlw	0
 10217  002BFE  6E04               	movwf	___wmul@multiplicand+1,c
 10218  002C00  0E0A               	movlw	10
 10219  002C02  6E03               	movwf	___wmul@multiplicand,c
 10220  002C04  EC3F  F01F         	call	___wmul	;wreg free
 10221  002C08  C008  FFF6         	movff	atoi@s,tblptrl
 10222  002C0C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10223  002C10                     	if	0	;tblptru may be non-zero
 10224  002C10                     	endif
 10225  002C10                     	if	0	;tblptru may be non-zero
 10226  002C10                     	endif
 10227  002C10  0008               	tblrd		*
 10228  002C12  FFFF               	dw	65535	; errata NOP
 10229  002C14  50F5               	movf	tablat,w,c
 10230  002C16  5E01               	subwf	?___wmul,f,c
 10231  002C18  0E00               	movlw	0
 10232  002C1A  5A02               	subwfb	?___wmul+1,f,c
 10233  002C1C  0E30               	movlw	48
 10234  002C1E  2401               	addwf	?___wmul,w,c
 10235  002C20  6E15               	movwf	atoi@n,c
 10236  002C22  0E00               	movlw	0
 10237  002C24  2002               	addwfc	?___wmul+1,w,c
 10238  002C26  6E16               	movwf	atoi@n+1,c
 10239  002C28  D7CA               	goto	l3978
 10240  002C2A                     l3986:
 10241  002C2A  FFFF               	dw	65535	; assembler added errata NOP
 10242  002C2C  0ED0               	movlw	208
 10243  002C2E  6E0A               	movwf	??_atoi& (0+255),c
 10244  002C30  0EFF               	movlw	255
 10245  002C32  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10246  002C34  C008  FFF6         	movff	atoi@s,tblptrl
 10247  002C38  C009  FFF7         	movff	atoi@s+1,tblptrh
 10248  002C3C                     	if	0	;tblptru may be non-zero
 10249  002C3C                     	endif
 10250  002C3C                     	if	0	;tblptru may be non-zero
 10251  002C3C                     	endif
 10252  002C3C  0008               	tblrd		*
 10253  002C3E  FFFF               	dw	65535	; errata NOP
 10254  002C40  50F5               	movf	tablat,w,c
 10255  002C42  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10256  002C44  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10257  002C46  500A               	movf	??_atoi,w,c
 10258  002C48  260C               	addwf	??_atoi+2,f,c
 10259  002C4A  500B               	movf	??_atoi+1,w,c
 10260  002C4C  220D               	addwfc	??_atoi+3,f,c
 10261  002C4E  500D               	movf	??_atoi+3,w,c
 10262  002C50  E106               	bnz	u3830
 10263  002C52  0E0A               	movlw	10
 10264  002C54  5C0C               	subwf	??_atoi+2,w,c
 10265  002C56  B0D8               	btfsc	status,0,c
 10266  002C58  D002               	goto	u3830
 10267  002C5A  0E01               	movlw	1
 10268  002C5C  D002               	goto	u3840
 10269  002C5E                     u3830:
 10270  002C5E  FFFF               	dw	65535	; assembler added errata NOP
 10271  002C60  0E00               	movlw	0
 10272  002C62                     u3840:
 10273  002C62  FFFF               	dw	65535	; assembler added errata NOP
 10274  002C64  6E12               	movwf	_atoi$1723,c
 10275  002C66  6A13               	clrf	_atoi$1723+1,c
 10276  002C68  5012               	movf	_atoi$1723,w,c
 10277  002C6A  1013               	iorwf	_atoi$1723+1,w,c
 10278  002C6C  A4D8               	btfss	status,2,c
 10279  002C6E  D7C1               	goto	l3982
 10280  002C70  500E               	movf	atoi@neg,w,c
 10281  002C72  100F               	iorwf	atoi@neg+1,w,c
 10282  002C74  A4D8               	btfss	status,2,c
 10283  002C76  D00D               	goto	l1316
 10284  002C78  C015  F00A         	movff	atoi@n,??_atoi
 10285  002C7C  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10286  002C80  1E0A               	comf	??_atoi,f,c
 10287  002C82  1E0B               	comf	??_atoi+1,f,c
 10288  002C84  4A0A               	infsnz	??_atoi,f,c
 10289  002C86  2A0B               	incf	??_atoi+1,f,c
 10290  002C88  C00A  F008         	movff	??_atoi,?_atoi
 10291  002C8C  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10292  002C90  D005               	goto	l1319
 10293  002C92                     l1316:
 10294  002C92  FFFF               	dw	65535	; assembler added errata NOP
 10295  002C94  C015  F008         	movff	atoi@n,?_atoi
 10296  002C98  C016  F009         	movff	atoi@n+1,?_atoi+1
 10297  002C9C                     l1319:
 10298  002C9C  FFFF               	dw	65535	; assembler added errata NOP
 10299  002C9E  0012               	return		;funcret
 10300  002CA0  FFFF               	dw	65535	; errata NOP
 10301  002CA2                     __end_of_atoi:
 10302                           	opt callstack 0
 10303                           
 10304 ;; *************** function _isspace *****************
 10305 ;; Defined at:
 10306 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  c               2    0[COMRAM] int 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  2    0[COMRAM] int 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, status,0
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10320 ;;      Params:         2       0       0       0       0       0       0
 10321 ;;      Locals:         1       0       0       0       0       0       0
 10322 ;;      Temps:          4       0       0       0       0       0       0
 10323 ;;      Totals:         7       0       0       0       0       0       0
 10324 ;;Total ram usage:        7 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    2
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_atoi
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text44
 10335  003C3E                     __ptext44:
 10336                           	opt callstack 0
 10337  003C3E                     _isspace:
 10338                           	opt callstack 0
 10339  003C3E  FFFF               	dw	65535	; assembler added errata NOP
 10340                           
 10341                           ;incstack = 0
 10342  003C40  0E01               	movlw	1
 10343  003C42  6E07               	movwf	_isspace$1758,c
 10344  003C44  0E20               	movlw	32
 10345  003C46  1801               	xorwf	isspace@c,w,c
 10346  003C48  1002               	iorwf	isspace@c+1,w,c
 10347  003C4A  B4D8               	btfsc	status,2,c
 10348  003C4C  D014               	goto	l3686
 10349  003C4E  0EF7               	movlw	247
 10350  003C50  6E03               	movwf	??_isspace& (0+255),c
 10351  003C52  0EFF               	movlw	255
 10352  003C54  6E04               	movwf	(??_isspace+1)& (0+255),c
 10353  003C56  C001  F005         	movff	isspace@c,??_isspace+2
 10354  003C5A  C002  F006         	movff	isspace@c+1,??_isspace+3
 10355  003C5E  5003               	movf	??_isspace,w,c
 10356  003C60  2605               	addwf	??_isspace+2,f,c
 10357  003C62  5004               	movf	??_isspace+1,w,c
 10358  003C64  2206               	addwfc	??_isspace+3,f,c
 10359  003C66  5006               	movf	??_isspace+3,w,c
 10360  003C68  E104               	bnz	u3200
 10361  003C6A  0E05               	movlw	5
 10362  003C6C  5C05               	subwf	??_isspace+2,w,c
 10363  003C6E  A0D8               	btfss	status,0,c
 10364  003C70  D002               	goto	l3686
 10365  003C72                     u3200:
 10366  003C72  0E00               	movlw	0
 10367  003C74  6E07               	movwf	_isspace$1758,c
 10368  003C76                     l3686:
 10369  003C76  FFFF               	dw	65535	; assembler added errata NOP
 10370  003C78  C007  F001         	movff	_isspace$1758,?_isspace
 10371  003C7C  6A02               	clrf	?_isspace+1,c
 10372  003C7E  0012               	return		;funcret
 10373  003C80  FFFF               	dw	65535	; errata NOP
 10374  003C82                     __end_of_isspace:
 10375                           	opt callstack 0
 10376                           
 10377 ;; *************** function _isdigit *****************
 10378 ;; Defined at:
 10379 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  c               2    0[COMRAM] int 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  2    0[COMRAM] int 
 10386 ;; Registers used:
 10387 ;;		wreg, status,2, status,0
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10393 ;;      Params:         2       0       0       0       0       0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0
 10395 ;;      Temps:          4       0       0       0       0       0       0
 10396 ;;      Totals:         6       0       0       0       0       0       0
 10397 ;;Total ram usage:        6 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    2
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_vfpfcnvrt
 10404 ;;		_atoi
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text45
 10409  003DE8                     __ptext45:
 10410                           	opt callstack 0
 10411  003DE8                     _isdigit:
 10412                           	opt callstack 0
 10413  003DE8  FFFF               	dw	65535	; assembler added errata NOP
 10414                           
 10415                           ;incstack = 0
 10416  003DEA  0ED0               	movlw	208
 10417  003DEC  6E03               	movwf	??_isdigit& (0+255),c
 10418  003DEE  0EFF               	movlw	255
 10419  003DF0  6E04               	movwf	(??_isdigit+1)& (0+255),c
 10420  003DF2  C001  F005         	movff	isdigit@c,??_isdigit+2
 10421  003DF6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10422  003DFA  5003               	movf	??_isdigit,w,c
 10423  003DFC  2605               	addwf	??_isdigit+2,f,c
 10424  003DFE  5004               	movf	??_isdigit+1,w,c
 10425  003E00  2206               	addwfc	??_isdigit+3,f,c
 10426  003E02  5006               	movf	??_isdigit+3,w,c
 10427  003E04  E106               	bnz	u2970
 10428  003E06  0E0A               	movlw	10
 10429  003E08  5C05               	subwf	??_isdigit+2,w,c
 10430  003E0A  B0D8               	btfsc	status,0,c
 10431  003E0C  D002               	goto	u2970
 10432  003E0E  0E01               	movlw	1
 10433  003E10  D002               	goto	u2980
 10434  003E12                     u2970:
 10435  003E12  FFFF               	dw	65535	; assembler added errata NOP
 10436  003E14  0E00               	movlw	0
 10437  003E16                     u2980:
 10438  003E16  FFFF               	dw	65535	; assembler added errata NOP
 10439  003E18  6E01               	movwf	?_isdigit,c
 10440  003E1A  6A02               	clrf	?_isdigit+1,c
 10441  003E1C  0012               	return		;funcret
 10442  003E1E  FFFF               	dw	65535	; errata NOP
 10443  003E20                     __end_of_isdigit:
 10444                           	opt callstack 0
 10445                           
 10446 ;; *************** function ___wmul *****************
 10447 ;; Defined at:
 10448 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  multiplier      2    0[COMRAM] unsigned int 
 10451 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  product         2    4[COMRAM] unsigned int 
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  2    0[COMRAM] unsigned int 
 10456 ;; Registers used:
 10457 ;;		wreg, status,2, status,0, prodl, prodh
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10463 ;;      Params:         4       0       0       0       0       0       0
 10464 ;;      Locals:         2       0       0       0       0       0       0
 10465 ;;      Temps:          0       0       0       0       0       0       0
 10466 ;;      Totals:         6       0       0       0       0       0       0
 10467 ;;Total ram usage:        6 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; Hardware stack levels required when called:    2
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		_atoi
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text46
 10478  003E7E                     __ptext46:
 10479                           	opt callstack 0
 10480  003E7E                     ___wmul:
 10481                           	opt callstack 0
 10482  003E7E  FFFF               	dw	65535	; assembler added errata NOP
 10483                           
 10484                           ;incstack = 0
 10485  003E80  5001               	movf	___wmul@multiplier,w,c
 10486  003E82  0203               	mulwf	___wmul@multiplicand,c
 10487  003E84  CFF3 F005          	movff	prodl,___wmul@product
 10488  003E88  CFF4 F006          	movff	prodh,___wmul@product+1
 10489  003E8C  5001               	movf	___wmul@multiplier,w,c
 10490  003E8E  0204               	mulwf	___wmul@multiplicand+1,c
 10491  003E90  50F3               	movf	prodl,w,c
 10492  003E92  2606               	addwf	___wmul@product+1,f,c
 10493  003E94  5002               	movf	___wmul@multiplier+1,w,c
 10494  003E96  0203               	mulwf	___wmul@multiplicand,c
 10495  003E98  50F3               	movf	prodl,w,c
 10496  003E9A  2606               	addwf	___wmul@product+1,f,c
 10497  003E9C  C005  F001         	movff	___wmul@product,?___wmul
 10498  003EA0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10499  003EA4  0012               	return		;funcret
 10500  003EA6  FFFF               	dw	65535	; errata NOP
 10501  003EA8                     __end_of___wmul:
 10502                           	opt callstack 0
 10503                           
 10504 ;; *************** function _getchar *****************
 10505 ;; Defined at:
 10506 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  2   26[None  ] int 
 10513 ;; Registers used:
 10514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10520 ;;      Params:         0       0       0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    4
 10527 ;; This function calls:
 10528 ;;		_fgetc
 10529 ;; This function is called by:
 10530 ;;		_int_to_char
 10531 ;;		_float_to_char
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text47
 10536  003FB2                     __ptext47:
 10537                           	opt callstack 0
 10538  003FB2                     _getchar:
 10539                           	opt callstack 0
 10540  003FB2  FFFF               	dw	65535	; assembler added errata NOP
 10541                           
 10542                           ;	Return value of _getchar is never used
 10543                           
 10544                           ;incstack = 0
 10545  003FB4  0E00               	movlw	0
 10546  003FB6  6E03               	movwf	fgetc@fp,c
 10547  003FB8  0E00               	movlw	0
 10548  003FBA  6E04               	movwf	fgetc@fp+1,c
 10549  003FBC  EC72  F01C         	call	_fgetc	;wreg free
 10550  003FC0  0012               	return		;funcret
 10551  003FC2  FFFF               	dw	65535	; errata NOP
 10552  003FC4                     __end_of_getchar:
 10553                           	opt callstack 0
 10554                           
 10555 ;; *************** function _fgetc *****************
 10556 ;; Defined at:
 10557 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10560 ;;		 -> NULL(0), 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  c               2    9[COMRAM] int 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  2    2[COMRAM] int 
 10565 ;; Registers used:
 10566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10572 ;;      Params:         2       0       0       0       0       0       0
 10573 ;;      Locals:         2       0       0       0       0       0       0
 10574 ;;      Temps:          5       0       0       0       0       0       0
 10575 ;;      Totals:         9       0       0       0       0       0       0
 10576 ;;Total ram usage:        9 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:    3
 10579 ;; This function calls:
 10580 ;;		_getch
 10581 ;; This function is called by:
 10582 ;;		_getchar
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text48
 10587  0038E4                     __ptext48:
 10588                           	opt callstack 0
 10589  0038E4                     _fgetc:
 10590                           	opt callstack 0
 10591  0038E4  FFFF               	dw	65535	; assembler added errata NOP
 10592                           
 10593                           ;incstack = 0
 10594  0038E6  5003               	movf	fgetc@fp,w,c
 10595  0038E8  1004               	iorwf	fgetc@fp+1,w,c
 10596  0038EA  A4D8               	btfss	status,2,c
 10597  0038EC  D012               	goto	l4622
 10598  0038EE  507E               	movf	_ungetcnt,w,c
 10599  0038F0  B4D8               	btfsc	status,2,c
 10600  0038F2  D007               	goto	l4620
 10601  0038F4  0E00               	movlw	0
 10602  0038F6  6E0B               	movwf	fgetc@c+1,c
 10603  0038F8  0E00               	movlw	0
 10604  0038FA  6E0A               	movwf	fgetc@c,c
 10605  0038FC  0E00               	movlw	0
 10606  0038FE  6E7E               	movwf	_ungetcnt,c
 10607  003900  D02F               	goto	l4624
 10608  003902                     l4620:
 10609  003902  FFFF               	dw	65535	; assembler added errata NOP
 10610  003904  ECF8  F01F         	call	_getch	;wreg free
 10611  003908  C001  F00A         	movff	?_getch,fgetc@c
 10612  00390C  C002  F00B         	movff	?_getch+1,fgetc@c+1
 10613  003910  D027               	goto	l4624
 10614  003912                     l4622:
 10615  003912  FFFF               	dw	65535	; assembler added errata NOP
 10616  003914  EE20 F002          	lfsr	2,2
 10617  003918  5003               	movf	fgetc@fp,w,c
 10618  00391A  26D9               	addwf	fsr2l,f,c
 10619  00391C  5004               	movf	fgetc@fp+1,w,c
 10620  00391E  22DA               	addwfc	fsr2h,f,c
 10621  003920  CFDE F005          	movff	postinc2,??_fgetc
 10622  003924  CFDD F006          	movff	postdec2,??_fgetc+1
 10623  003928  C003  FFD9         	movff	fgetc@fp,fsr2l
 10624  00392C  C004  FFDA         	movff	fgetc@fp+1,fsr2h
 10625  003930  CFDE F007          	movff	postinc2,??_fgetc+2
 10626  003934  CFDD F008          	movff	postdec2,??_fgetc+3
 10627  003938  5005               	movf	??_fgetc,w,c
 10628  00393A  2407               	addwf	??_fgetc+2,w,c
 10629  00393C  6ED9               	movwf	fsr2l,c
 10630  00393E  5006               	movf	??_fgetc+1,w,c
 10631  003940  2008               	addwfc	??_fgetc+3,w,c
 10632  003942  6EDA               	movwf	fsr2h,c
 10633  003944  50DF               	movf	indf2,w,c
 10634  003946  6E09               	movwf	(??_fgetc+4)& (0+255),c
 10635  003948  5009               	movf	??_fgetc+4,w,c
 10636  00394A  6E0A               	movwf	fgetc@c,c
 10637  00394C  6A0B               	clrf	fgetc@c+1,c
 10638  00394E  EE20 F002          	lfsr	2,2
 10639  003952  5003               	movf	fgetc@fp,w,c
 10640  003954  26D9               	addwf	fsr2l,f,c
 10641  003956  5004               	movf	fgetc@fp+1,w,c
 10642  003958  22DA               	addwfc	fsr2h,f,c
 10643  00395A  2ADE               	incf	postinc2,f,c
 10644  00395C  0E00               	movlw	0
 10645  00395E  22DD               	addwfc	postdec2,f,c
 10646  003960                     l4624:
 10647  003960  FFFF               	dw	65535	; assembler added errata NOP
 10648  003962  C00A  F003         	movff	fgetc@c,?_fgetc
 10649  003966  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 10650  00396A  0012               	return		;funcret
 10651  00396C  FFFF               	dw	65535	; errata NOP
 10652  00396E                     __end_of_fgetc:
 10653                           	opt callstack 0
 10654                           
 10655 ;; *************** function _getch *****************
 10656 ;; Defined at:
 10657 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  2    0[COMRAM] int 
 10664 ;; Registers used:
 10665 ;;		None
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10671 ;;      Params:         2       0       0       0       0       0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0
 10674 ;;      Totals:         2       0       0       0       0       0       0
 10675 ;;Total ram usage:        2 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    2
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_fgetc
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text49
 10686  003FF0                     __ptext49:
 10687                           	opt callstack 0
 10688  003FF0                     _getch:
 10689                           	opt callstack 0
 10690  003FF0  FFFF               	dw	65535	; assembler added errata NOP
 10691                           
 10692                           ;incstack = 0
 10693  003FF2  6801               	setf	?_getch,c
 10694  003FF4  6802               	setf	?_getch+1,c
 10695  003FF6  0012               	return		;funcret
 10696  003FF8  FFFF               	dw	65535	; errata NOP
 10697  003FFA                     __end_of_getch:
 10698                           	opt callstack 0
 10699                           
 10700 ;; *************** function _UARTSendString *****************
 10701 ;; Defined at:
 10702 ;;		line 72 in file "serial.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10705 ;;		 -> STR_15(24), STR_14(13), STR_13(9), STR_12(13), 
 10706 ;;		 -> STR_11(9), STR_10(26), STR_9(9), STR_8(3), 
 10707 ;;		 -> STR_7(17), STR_6(12), STR_5(3), STR_4(24), 
 10708 ;;		 -> STR_3(29), int_to_char@result(10), 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  i               2   36[BANK0 ] int 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10720 ;;      Params:         0       2       0       0       0       0       0
 10721 ;;      Locals:         0       2       0       0       0       0       0
 10722 ;;      Temps:          0       2       0       0       0       0       0
 10723 ;;      Totals:         0       6       0       0       0       0       0
 10724 ;;Total ram usage:        6 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    3
 10727 ;; This function calls:
 10728 ;;		_UARTSendChar
 10729 ;; This function is called by:
 10730 ;;		_main
 10731 ;;		_read_SRAM
 10732 ;;		_write_SRAM
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text50
 10737  00396E                     __ptext50:
 10738                           	opt callstack 0
 10739  00396E                     _UARTSendString:
 10740                           	opt callstack 0
 10741  00396E  FFFF               	dw	65535	; assembler added errata NOP
 10742                           
 10743                           ;serial.c: 73:   TRISCbits.TRISC7 = 0;
 10744                           
 10745                           ;incstack = 0
 10746  003970  9E94               	bcf	3988,7,c	;volatile
 10747                           
 10748                           ;serial.c: 74:   int i = 0;
 10749  003972  0E00               	movlw	0
 10750  003974  0100               	movlb	0	; () banked
 10751  003976  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
 10752  003978  0E00               	movlw	0
 10753  00397A  6FA4               	movwf	UARTSendString@i& (0+255),b
 10754                           
 10755                           ;serial.c: 75:   while (c[i] != '\0') {
 10756  00397C  D01E               	goto	l4938
 10757  00397E                     l4934:
 10758  00397E  FFFF               	dw	65535	; assembler added errata NOP
 10759                           
 10760                           ;serial.c: 76:     UARTSendChar(c[i]);
 10761  003980  0100               	movlb	0	; () banked
 10762  003982  51A4               	movf	UARTSendString@i& (0+255),w,b
 10763  003984  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10764  003986  6FA2               	movwf	??_UARTSendString& (0+255),b
 10765  003988  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10766  00398A  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10767  00398C  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10768  00398E  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10769  003992  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10770  003996  6AF8               	clrf	tblptru,c
 10771  003998  0E05               	movlw	(high __ramtop+-1)
 10772  00399A  64F7               	cpfsgt	tblptrh,c
 10773  00399C  D004               	bra	u5227
 10774  00399E  0008               	tblrd		*
 10775  0039A0  FFFF               	dw	65535	; errata NOP
 10776  0039A2  50F5               	movf	tablat,w,c
 10777  0039A4  D005               	bra	u5220
 10778  0039A6                     u5227:
 10779  0039A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10780  0039AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10781  0039AE  50EF               	movf	indf0,w,c
 10782  0039B0                     u5220:
 10783  0039B0  ECBB  F01F         	call	_UARTSendChar
 10784                           
 10785                           ;serial.c: 77:     i++;
 10786  0039B4  0100               	movlb	0	; () banked
 10787  0039B6  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
 10788  0039B8  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
 10789  0039BA                     l4938:
 10790  0039BA  FFFF               	dw	65535	; assembler added errata NOP
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;serial.c: 75:   while (c[i] != '\0') {
 10794  0039BC  51A4               	movf	UARTSendString@i& (0+255),w,b
 10795  0039BE  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10796  0039C0  6FA2               	movwf	??_UARTSendString& (0+255),b
 10797  0039C2  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10798  0039C4  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10799  0039C6  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10800  0039C8  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10801  0039CC  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10802  0039D0  6AF8               	clrf	tblptru,c
 10803  0039D2  0E05               	movlw	(high __ramtop+-1)
 10804  0039D4  64F7               	cpfsgt	tblptrh,c
 10805  0039D6  D004               	bra	u5237
 10806  0039D8  0008               	tblrd		*
 10807  0039DA  FFFF               	dw	65535	; errata NOP
 10808  0039DC  50F5               	movf	tablat,w,c
 10809  0039DE  D005               	bra	u5230
 10810  0039E0                     u5237:
 10811  0039E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10812  0039E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10813  0039E8  50EF               	movf	indf0,w,c
 10814  0039EA                     u5230:
 10815  0039EA  0900               	iorlw	0
 10816  0039EC  B4D8               	btfsc	status,2,c
 10817  0039EE  0012               	return		;funcret
 10818  0039F0  FFFF               	dw	65535	; assembler added errata NOP
 10819  0039F2  D7C5               	goto	l4934
 10820  0039F4  FFFF               	dw	65535	; errata NOP
 10821  0039F6                     __end_of_UARTSendString:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _UARTNewLine *****************
 10825 ;; Defined at:
 10826 ;;		line 48 in file "serial.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10840 ;;      Params:         0       0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    3
 10847 ;; This function calls:
 10848 ;;		_UARTSendChar
 10849 ;; This function is called by:
 10850 ;;		_main
 10851 ;;		_read_SRAM
 10852 ;;		_write_SRAM
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	text51
 10857  003F62                     __ptext51:
 10858                           	opt callstack 0
 10859  003F62                     _UARTNewLine:
 10860                           	opt callstack 0
 10861  003F62  FFFF               	dw	65535	; assembler added errata NOP
 10862                           
 10863                           ;serial.c: 49:   TRISCbits.TRISC7 = 0;
 10864                           
 10865                           ;incstack = 0
 10866  003F64  9E94               	bcf	3988,7,c	;volatile
 10867                           
 10868                           ;serial.c: 50:   UARTSendChar(0x0a);
 10869  003F66  0E0A               	movlw	10
 10870  003F68  ECBB  F01F         	call	_UARTSendChar
 10871                           
 10872                           ;serial.c: 51:   UARTSendChar(0x0d);
 10873  003F6C  0E0D               	movlw	13
 10874  003F6E  ECBB  F01F         	call	_UARTSendChar
 10875  003F72  0012               	return		;funcret
 10876  003F74  FFFF               	dw	65535	; errata NOP
 10877  003F76                     __end_of_UARTNewLine:
 10878                           	opt callstack 0
 10879                           
 10880 ;; *************** function _UARTSendChar *****************
 10881 ;; Defined at:
 10882 ;;		line 54 in file "serial.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  c               1    wreg     unsigned char 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  c               1    0[COMRAM] unsigned char 
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10896 ;;      Params:         0       0       0       0       0       0       0
 10897 ;;      Locals:         1       0       0       0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0
 10899 ;;      Totals:         1       0       0       0       0       0       0
 10900 ;;Total ram usage:        1 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    2
 10903 ;; This function calls:
 10904 ;;		Nothing
 10905 ;; This function is called by:
 10906 ;;		_UARTNewLine
 10907 ;;		_UARTSendString
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text52
 10912  003F76                     __ptext52:
 10913                           	opt callstack 0
 10914  003F76                     _UARTSendChar:
 10915                           	opt callstack 0
 10916  003F76  FFFF               	dw	65535	; assembler added errata NOP
 10917                           
 10918                           ;incstack = 0
 10919                           ;UARTSendChar@c stored from wreg
 10920  003F78  6E01               	movwf	UARTSendChar@c,c
 10921                           
 10922                           ;serial.c: 55:   TRISCbits.TRISC7 = 0;
 10923  003F7A  9E94               	bcf	3988,7,c	;volatile
 10924  003F7C                     l232:
 10925  003F7C  FFFF               	dw	65535	; assembler added errata NOP
 10926  003F7E  A2AC               	btfss	4012,1,c	;volatile
 10927  003F80  D7FD               	goto	l232
 10928                           
 10929                           ;serial.c: 57:   TXREG = c;
 10930  003F82  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 10931  003F86  0012               	return		;funcret
 10932  003F88  FFFF               	dw	65535	; errata NOP
 10933  003F8A                     __end_of_UARTSendChar:
 10934                           	opt callstack 0
 10935                           
 10936 ;; *************** function _interrupt_enable *****************
 10937 ;; Defined at:
 10938 ;;		line 15 in file "serial.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		None
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10952 ;;      Params:         0       0       0       0       0       0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0
 10955 ;;      Totals:         0       0       0       0       0       0       0
 10956 ;;Total ram usage:        0 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    2
 10959 ;; This function calls:
 10960 ;;		Nothing
 10961 ;; This function is called by:
 10962 ;;		_main
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text53
 10967  003FC4                     __ptext53:
 10968                           	opt callstack 0
 10969  003FC4                     _interrupt_enable:
 10970                           	opt callstack 0
 10971  003FC4  FFFF               	dw	65535	; assembler added errata NOP
 10972                           
 10973                           ;serial.c: 16:   INTCONbits.GIE = 1;
 10974                           
 10975                           ;incstack = 0
 10976  003FC6  8EF2               	bsf	4082,7,c	;volatile
 10977                           
 10978                           ;serial.c: 17:   INTCONbits.PEIE = 1;
 10979  003FC8  8CF2               	bsf	4082,6,c	;volatile
 10980                           
 10981                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
 10982  003FCA  8AF2               	bsf	4082,5,c	;volatile
 10983                           
 10984                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
 10985  003FCC  84F1               	bsf	4081,2,c	;volatile
 10986                           
 10987                           ;serial.c: 20:   RCONbits.IPEN = 1;
 10988  003FCE  8ED0               	bsf	4048,7,c	;volatile
 10989  003FD0  0012               	return		;funcret
 10990  003FD2  FFFF               	dw	65535	; errata NOP
 10991  003FD4                     __end_of_interrupt_enable:
 10992                           	opt callstack 0
 10993                           
 10994 ;; *************** function _interrupt_disable *****************
 10995 ;; Defined at:
 10996 ;;		line 23 in file "serial.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;		None
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;		None
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  1    wreg      void 
 11003 ;; Registers used:
 11004 ;;		None
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11010 ;;      Params:         0       0       0       0       0       0       0
 11011 ;;      Locals:         0       0       0       0       0       0       0
 11012 ;;      Temps:          0       0       0       0       0       0       0
 11013 ;;      Totals:         0       0       0       0       0       0       0
 11014 ;;Total ram usage:        0 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:    2
 11017 ;; This function calls:
 11018 ;;		Nothing
 11019 ;; This function is called by:
 11020 ;;		_main
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text54
 11025  003FE2                     __ptext54:
 11026                           	opt callstack 0
 11027  003FE2                     _interrupt_disable:
 11028                           	opt callstack 0
 11029  003FE2  FFFF               	dw	65535	; assembler added errata NOP
 11030                           
 11031                           ;serial.c: 24:   INTCONbits.GIE = 0;
 11032                           
 11033                           ;incstack = 0
 11034  003FE4  9EF2               	bcf	4082,7,c	;volatile
 11035                           
 11036                           ;serial.c: 25:   INTCONbits.PEIE = 0;
 11037  003FE6  9CF2               	bcf	4082,6,c	;volatile
 11038                           
 11039                           ;serial.c: 26:   INTCONbits.TMR0IE = 0;
 11040  003FE8  9AF2               	bcf	4082,5,c	;volatile
 11041                           
 11042                           ;serial.c: 27:   INTCON2bits.TMR0IP = 0;
 11043  003FEA  94F1               	bcf	4081,2,c	;volatile
 11044  003FEC  0012               	return		;funcret
 11045  003FEE  FFFF               	dw	65535	; errata NOP
 11046  003FF0                     __end_of_interrupt_disable:
 11047                           	opt callstack 0
 11048                           
 11049 ;; *************** function _initialize_TX *****************
 11050 ;; Defined at:
 11051 ;;		line 30 in file "serial.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;		None
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11065 ;;      Params:         0       0       0       0       0       0       0
 11066 ;;      Locals:         0       0       0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0
 11068 ;;      Totals:         0       0       0       0       0       0       0
 11069 ;;Total ram usage:        0 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    2
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		_main
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text55
 11080  003F8A                     __ptext55:
 11081                           	opt callstack 0
 11082  003F8A                     _initialize_TX:
 11083                           	opt callstack 0
 11084  003F8A  FFFF               	dw	65535	; assembler added errata NOP
 11085                           
 11086                           ;serial.c: 31:   TXSTAbits.TX9 = 1;
 11087                           
 11088                           ;incstack = 0
 11089  003F8C  8CAC               	bsf	4012,6,c	;volatile
 11090                           
 11091                           ;serial.c: 32:   TXSTAbits.TXEN = 1;
 11092  003F8E  8AAC               	bsf	4012,5,c	;volatile
 11093                           
 11094                           ;serial.c: 33:   TXSTAbits.SYNC = 0;
 11095  003F90  98AC               	bcf	4012,4,c	;volatile
 11096                           
 11097                           ;serial.c: 34:   TXSTAbits.BRGH = 0;
 11098  003F92  94AC               	bcf	4012,2,c	;volatile
 11099                           
 11100                           ;serial.c: 35:   TXSTAbits.TX9D = 1;
 11101  003F94  80AC               	bsf	4012,0,c	;volatile
 11102                           
 11103                           ;serial.c: 36:   SPBRG = 25;
 11104  003F96  0E19               	movlw	25
 11105  003F98  6EAF               	movwf	4015,c	;volatile
 11106  003F9A  0012               	return		;funcret
 11107  003F9C  FFFF               	dw	65535	; errata NOP
 11108  003F9E                     __end_of_initialize_TX:
 11109                           	opt callstack 0
 11110                           
 11111 ;; *************** function _initialize_RX *****************
 11112 ;; Defined at:
 11113 ;;		line 39 in file "serial.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;		None
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      void 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11127 ;;      Params:         0       0       0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0
 11129 ;;      Temps:          0       0       0       0       0       0       0
 11130 ;;      Totals:         0       0       0       0       0       0       0
 11131 ;;Total ram usage:        0 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    2
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text56
 11142  003F9E                     __ptext56:
 11143                           	opt callstack 0
 11144  003F9E                     _initialize_RX:
 11145                           	opt callstack 0
 11146  003F9E  FFFF               	dw	65535	; assembler added errata NOP
 11147                           
 11148                           ;serial.c: 40:   RCSTA = 0x00;
 11149                           
 11150                           ;incstack = 0
 11151  003FA0  0E00               	movlw	0
 11152  003FA2  6EAB               	movwf	4011,c	;volatile
 11153                           
 11154                           ;serial.c: 41:   RCSTAbits.SPEN = 1;
 11155  003FA4  8EAB               	bsf	4011,7,c	;volatile
 11156                           
 11157                           ;serial.c: 42:   RCSTAbits.RX9 = 1;
 11158  003FA6  8CAB               	bsf	4011,6,c	;volatile
 11159                           
 11160                           ;serial.c: 43:   RCSTAbits.CREN = 1;
 11161  003FA8  88AB               	bsf	4011,4,c	;volatile
 11162                           
 11163                           ;serial.c: 44:   RCSTAbits.ADDEN = 0;
 11164  003FAA  96AB               	bcf	4011,3,c	;volatile
 11165                           
 11166                           ;serial.c: 45:   RCSTAbits.RX9D = 1;
 11167  003FAC  80AB               	bsf	4011,0,c	;volatile
 11168  003FAE  0012               	return		;funcret
 11169  003FB0  FFFF               	dw	65535	; errata NOP
 11170  003FB2                     __end_of_initialize_RX:
 11171                           	opt callstack 0
 11172                           
 11173 ;; *************** function _initialize_PWM *****************
 11174 ;; Defined at:
 11175 ;;		line 5 in file "pwm.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  freq            2    0[COMRAM] int 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;		None
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  1    wreg      void 
 11182 ;; Registers used:
 11183 ;;		wreg, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11189 ;;      Params:         2       0       0       0       0       0       0
 11190 ;;      Locals:         0       0       0       0       0       0       0
 11191 ;;      Temps:          0       0       0       0       0       0       0
 11192 ;;      Totals:         2       0       0       0       0       0       0
 11193 ;;Total ram usage:        2 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; Hardware stack levels required when called:    2
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_main
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text57
 11204  003F34                     __ptext57:
 11205                           	opt callstack 0
 11206  003F34                     _initialize_PWM:
 11207                           	opt callstack 0
 11208  003F34  FFFF               	dw	65535	; assembler added errata NOP
 11209                           
 11210                           ;pwm.c: 6:   T2CON &= ~(0x04);
 11211                           
 11212                           ;incstack = 0
 11213  003F36  94CA               	bcf	4042,2,c	;volatile
 11214                           
 11215                           ;pwm.c: 7:   PR2 = 0xFF;
 11216  003F38  68CB               	setf	4043,c	;volatile
 11217                           
 11218                           ;pwm.c: 8:   CCPR1L = 0xAA;
 11219  003F3A  0EAA               	movlw	170
 11220  003F3C  6EBE               	movwf	4030,c	;volatile
 11221                           
 11222                           ;pwm.c: 9:   CCP1CON |= 0x00;
 11223  003F3E  50BD               	movf	4029,w,c	;volatile
 11224                           
 11225                           ;pwm.c: 10:   T2CON = 0x07;
 11226  003F40  0E07               	movlw	7
 11227  003F42  6ECA               	movwf	4042,c	;volatile
 11228                           
 11229                           ;pwm.c: 11:   CCP1CON |= 0x0C;
 11230  003F44  0E0C               	movlw	12
 11231  003F46  12BD               	iorwf	4029,f,c	;volatile
 11232  003F48  0012               	return		;funcret
 11233  003F4A  FFFF               	dw	65535	; errata NOP
 11234  003F4C                     __end_of_initialize_PWM:
 11235                           	opt callstack 0
 11236                           
 11237 ;; *************** function _UARTRecieveChar *****************
 11238 ;; Defined at:
 11239 ;;		line 60 in file "serial.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      unsigned char 
 11246 ;; Registers used:
 11247 ;;		wreg, status,2
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11253 ;;      Params:         0       0       0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0
 11255 ;;      Temps:          1       0       0       0       0       0       0
 11256 ;;      Totals:         1       0       0       0       0       0       0
 11257 ;;Total ram usage:        1 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    2
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_main
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text58
 11268  003E52                     __ptext58:
 11269                           	opt callstack 0
 11270  003E52                     _UARTRecieveChar:
 11271                           	opt callstack 0
 11272  003E52  FFFF               	dw	65535	; assembler added errata NOP
 11273                           
 11274                           ;serial.c: 61:   while (RCIF == 0) {
 11275                           
 11276                           ;incstack = 0
 11277  003E54  D00E               	goto	l5092
 11278  003E56                     l239:
 11279  003E56  FFFF               	dw	65535	; assembler added errata NOP
 11280                           
 11281                           ;serial.c: 62:     if (RCSTAbits.OERR == 1) {
 11282  003E58  A2AB               	btfss	4011,1,c	;volatile
 11283  003E5A  D00B               	goto	l5092
 11284                           
 11285                           ;serial.c: 63:       RCSTAbits.OERR = 0;
 11286  003E5C  92AB               	bcf	4011,1,c	;volatile
 11287                           
 11288                           ;serial.c: 64:       RCSTAbits.CREN = 0;
 11289  003E5E  98AB               	bcf	4011,4,c	;volatile
 11290                           
 11291                           ;serial.c: 65:       RCSTAbits.CREN = 1;
 11292  003E60  88AB               	bsf	4011,4,c	;volatile
 11293                           
 11294                           ;serial.c: 66:       _delay((unsigned long)((10)*(16000000/4000.0)));
 11295  003E62  0E27               	movlw	39
 11296  003E64  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 11297  003E66  0EFC               	movlw	252
 11298  003E68                     u5557:
 11299  003E68  FFFF               	dw	65535	; errata NOP
 11300  003E6A  2EE8               	decfsz	wreg,f,c
 11301  003E6C  D7FD               	bra	u5557
 11302  003E6E  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 11303  003E70  D7FB               	bra	u5557
 11304  003E72                     l5092:
 11305  003E72  FFFF               	dw	65535	; assembler added errata NOP
 11306                           
 11307                           ;serial.c: 61:   while (RCIF == 0) {
 11308  003E74  AA9E               	btfss	3998,5,c	;volatile
 11309  003E76  D7EF               	goto	l239
 11310                           
 11311                           ;serial.c: 69:   return RCREG1;
 11312  003E78  50AE               	movf	4014,w,c	;volatile
 11313  003E7A  0012               	return		;funcret
 11314  003E7C  FFFF               	dw	65535	; errata NOP
 11315  003E7E                     __end_of_UARTRecieveChar:
 11316                           	opt callstack 0
 11317                           
 11318 ;; *************** function _Timer0_Init *****************
 11319 ;; Defined at:
 11320 ;;		line 8 in file "timer.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11334 ;;      Params:         0       0       0       0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0
 11337 ;;      Totals:         0       0       0       0       0       0       0
 11338 ;;Total ram usage:        0 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    2
 11341 ;; This function calls:
 11342 ;;		Nothing
 11343 ;; This function is called by:
 11344 ;;		_main
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text59
 11349  003EA8                     __ptext59:
 11350                           	opt callstack 0
 11351  003EA8                     _Timer0_Init:
 11352                           	opt callstack 0
 11353  003EA8  FFFF               	dw	65535	; assembler added errata NOP
 11354                           
 11355                           ;timer.c: 9:  time_ms = 0;
 11356                           
 11357                           ;incstack = 0
 11358  003EAA  0E00               	movlw	0
 11359  003EAC  0100               	movlb	0	; () banked
 11360  003EAE  6FC4               	movwf	_time_ms& (0+255),b	;volatile
 11361  003EB0  0E00               	movlw	0
 11362  003EB2  6FC5               	movwf	(_time_ms+1)& (0+255),b	;volatile
 11363  003EB4  0E00               	movlw	0
 11364  003EB6  6FC6               	movwf	(_time_ms+2)& (0+255),b	;volatile
 11365  003EB8  0E00               	movlw	0
 11366  003EBA  6FC7               	movwf	(_time_ms+3)& (0+255),b	;volatile
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 11370  003EBC  9CD5               	bcf	4053,6,c	;volatile
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;timer.c: 11:  TMR0H = 0xFF;
 11374  003EBE  68D7               	setf	4055,c	;volatile
 11375                           
 11376                           ;timer.c: 12:  TMR0L = 0x34;
 11377  003EC0  0E34               	movlw	52
 11378  003EC2  6ED6               	movwf	4054,c	;volatile
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 11382  003EC4  94F2               	bcf	4082,2,c	;volatile
 11383                           
 11384                           ;timer.c: 14:  T0CON = 0x00;
 11385  003EC6  0E00               	movlw	0
 11386  003EC8  6ED5               	movwf	4053,c	;volatile
 11387                           
 11388                           ; BSR set to: 0
 11389  003ECA  0012               	return		;funcret
 11390  003ECC  FFFF               	dw	65535	; errata NOP
 11391  003ECE                     __end_of_Timer0_Init:
 11392                           	opt callstack 0
 11393                           
 11394 ;; *************** function _timingISR *****************
 11395 ;; Defined at:
 11396 ;;		line 31 in file "timer.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11410 ;;      Params:         0       0       0       0       0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    1
 11417 ;; This function calls:
 11418 ;;		i2_Timer0_StartTimer
 11419 ;; This function is called by:
 11420 ;;		Interrupt level 2
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	intcode
 11425  000008                     __pintcode:
 11426                           	opt callstack 0
 11427  000008                     _timingISR:
 11428                           	opt callstack 0
 11429  000008  FFFF               	dw	65535	; assembler added errata NOP
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;incstack = 0
 11433  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11434                           
 11435                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11436  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11437  00000E  AAF2               	btfss	4082,5,c	;volatile
 11438  000010  D00D               	goto	i2l295
 11439                           
 11440                           ;timer.c: 33:   TMR0IF = 0;
 11441  000012  94F2               	bcf	4082,2,c	;volatile
 11442                           
 11443                           ;timer.c: 34:   time_ms++;
 11444  000014  0E01               	movlw	1
 11445  000016  0100               	movlb	0	; () banked
 11446  000018  27C4               	addwf	_time_ms& (0+255),f,b	;volatile
 11447  00001A  0E00               	movlw	0
 11448  00001C  23C5               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11449  00001E  23C6               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11450  000020  23C7               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;timer.c: 35:   TMR0H = 0xFF;
 11454  000022  68D7               	setf	4055,c	;volatile
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;timer.c: 36:   TMR0L = 0x34;
 11458  000024  0E34               	movlw	52
 11459  000026  6ED6               	movwf	4054,c	;volatile
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;timer.c: 37:   Timer0_StartTimer();
 11463  000028  EC24  F000         	call	i2_Timer0_StartTimer	;wreg free
 11464  00002C                     i2l295:
 11465  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11466  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11467  000030  0011               	retfie		f
 11468  000032  FFFF               	dw	65535	; errata NOP
 11469  000034                     __end_of_timingISR:
 11470                           	opt callstack 0
 11471                           
 11472 ;; *************** function i2_Timer0_StartTimer *****************
 11473 ;; Defined at:
 11474 ;;		line 21 in file "timer.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  2    0[None  ] int 
 11481 ;; Registers used:
 11482 ;;		None
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11488 ;;      Params:         0       0       0       0       0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0
 11491 ;;      Totals:         0       0       0       0       0       0       0
 11492 ;;Total ram usage:        0 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_timingISR
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text61
 11502  000048                     __ptext61:
 11503                           	opt callstack 0
 11504  000048                     i2_Timer0_StartTimer:
 11505                           	opt callstack 0
 11506  000048  FFFF               	dw	65535	; assembler added errata NOP
 11507                           
 11508                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11509                           
 11510                           ;incstack = 0
 11511  00004A  8ED5               	bsf	4053,7,c	;volatile
 11512                           
 11513                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11514  00004C  0012               	return		;funcret
 11515  00004E  FFFF               	dw	65535	; errata NOP
 11516  000050                     __end_ofi2_Timer0_StartTimer:
 11517                           	opt callstack 0
 11518                           
 11519                           	psect	rparam
 11520  0000                     
 11521                           	psect	temp
 11522  00007F                     btemp:
 11523                           	opt callstack 0
 11524  00007F                     	ds	1
 11525  0000                     int$flags	set	btemp
 11526  0000                     wtemp8	set	btemp+1
 11527  0000                     ttemp5	set	btemp+1
 11528  0000                     ttemp6	set	btemp+4
 11529  0000                     ttemp7	set	btemp+8
 11530                           tosu	equ	0xFFF
 11531                           tosh	equ	0xFFE
 11532                           tosl	equ	0xFFD
 11533                           stkptr	equ	0xFFC
 11534                           pclatu	equ	0xFFB
 11535                           pclath	equ	0xFFA
 11536                           pcl	equ	0xFF9
 11537                           tblptru	equ	0xFF8
 11538                           tblptrh	equ	0xFF7
 11539                           tblptrl	equ	0xFF6
 11540                           tablat	equ	0xFF5
 11541                           prodh	equ	0xFF4
 11542                           prodl	equ	0xFF3
 11543                           indf0	equ	0xFEF
 11544                           postinc0	equ	0xFEE
 11545                           postdec0	equ	0xFED
 11546                           preinc0	equ	0xFEC
 11547                           plusw0	equ	0xFEB
 11548                           fsr0h	equ	0xFEA
 11549                           fsr0l	equ	0xFE9
 11550                           wreg	equ	0xFE8
 11551                           indf1	equ	0xFE7
 11552                           postinc1	equ	0xFE6
 11553                           postdec1	equ	0xFE5
 11554                           preinc1	equ	0xFE4
 11555                           plusw1	equ	0xFE3
 11556                           fsr1h	equ	0xFE2
 11557                           fsr1l	equ	0xFE1
 11558                           bsr	equ	0xFE0
 11559                           indf2	equ	0xFDF
 11560                           postinc2	equ	0xFDE
 11561                           postdec2	equ	0xFDD
 11562                           preinc2	equ	0xFDC
 11563                           plusw2	equ	0xFDB
 11564                           fsr2h	equ	0xFDA
 11565                           fsr2l	equ	0xFD9
 11566                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     59     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1724_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 29
		 -> STR_15(CODE[24]), STR_14(CODE[13]), STR_13(CODE[9]), STR_12(CODE[13]), 
		 -> STR_11(CODE[9]), STR_10(CODE[26]), STR_9(CODE[9]), STR_8(CODE[3]), 
		 -> STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[3]), STR_4(CODE[24]), 
		 -> STR_3(CODE[29]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _write_SRAM->_int_to_char
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_SRAM
    _write_SRAM->_UARTSendString
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  166948
                                             52 BANK0      7     7      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                  _interrupt_disable
                   _interrupt_enable
                          _read_SRAM
                     _set_duty_cycle
                         _write_SRAM
 ---------------------------------------------------------------------------------
 (1) _write_SRAM                                          14    14      0   57691
                                             38 BANK0     14    14      0
                           _ReadTime
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (2) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     547
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51623
                                             38 BANK0      8     6      2
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49562
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1784
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_disable
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _set_duty_cycle
   _write_SRAM
     _ReadTime
     _Timer0_StartTimer
     _Timer0_StopTimer
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     ___fltol
       _get_temp (ARG)
         _ADC_Init
         _ADC_Read
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
     ___lldiv
       _ReadTime (ARG)
     _get_temp
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3B      7C       4       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      14        0.0%
DATA                 0      0      FA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar  1 01:39:08 2019

                                              _SSPSTATbits 000FC7  
                                              __CFG_BOR$ON 000000  
                                      ___wmul@multiplicand 0003  
                                             __CFG_CP0$OFF 000000  
                                             __CFG_CP1$OFF 000000  
                                             __CFG_CP2$OFF 000000  
                                             __CFG_CP3$OFF 000000  
                                                      l232 3F7C  
                                                      l163 2464  
                                                      l412 1FD6  
                                                      l333 3BA6  
                                                      l414 1FE0  
                                                      l334 3B8E  
                                                      l239 3E56  
                                                      l437 29C4  
                                                      l439 29CE  
                                                      l457 2FC4  
                                                      l553 188C  
                                                      l394 37E0  
                                                      l491 21E4  
                                                      l476 2802  
                                                      l493 21EE  
                                                      l637 38CE  
                                                      l478 280C  
                                                      l907 34B0  
                                             __CFG_CPB$OFF 000000  
                                                      _RC0 007C10  
                                                      _RB5 007C0D  
                                                      _PR2 000FCB  
                                             __CFG_CPD$OFF 000000  
                                                      _abs 3D3C  
                                                      _lcd 00BB  
                                                      _pad 37AA  
                                             __CFG_BORV$20 000000  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                         ?_UARTRecieveChar 0001  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             __CFG_LVP$OFF 000000  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     ?_abs 0013  
                                                     l1140 1D4A  
                                                     l1048 33BC  
                                                     l1224 191E  
                                                     l1241 1BD6  
                                                     l1233 1B48  
                                                     l1058 36D8  
                                                     l1234 1B42  
                                                     l1155 1E3E  
                                                     l1147 1F52  
                                                     l1139 1D72  
                                                     l1316 2C92  
                                                     l1228 1C0E  
                                                     l1164 1EB6  
                                                     l1165 1EB0  
                                                     l1319 2C9C  
                                                     l1431 3AFC  
                                                     l1416 363C  
                                                     l1272 2D6C  
                                                     l1265 2CE2  
                                                     l1362 37A4  
                                                     l1426 3AF2  
                                                     l1268 2DF8  
                                                     l1285 3D68  
                                                     l4006 35AC  
                                                     l4030 073E  
                                                     l1288 3D72  
                                                     l4008 35BC  
                                                     l4112 0AD4  
                                                     l4032 0744  
                                                     l4210 1026  
                                                     l4202 0FEA  
                                                     l4106 0A2E  
                                                     l4050 0776  
                                                     l4042 0766  
                                                     l4034 0756  
                                                     l4116 0B0E  
                                                     l5020 347E  
                                                     l5012 3466  
                                                     l3510 37C6  
                                                     l4302 1466  
                                                     l4206 0FF6  
                                                     l4126 0B78  
                                                     l4070 085C  
                                                     l4054 0784  
                                                     l4046 076E  
                                                     l4038 075E  
                                                     l3520 3806  
                                                     l3600 2F34  
                                                     l4216 103A  
                                                     l4136 0BF4  
                                                     l4072 086C  
                                                     l4056 07CA  
                                                     l5008 3454  
                                                     l3514 37D6  
                                                     l4330 15F2  
                                                     l4226 1064  
                                                     l4146 0CD4  
                                                     l4090 0964  
                                                     l4410 3A34  
                                                     l5026 349E  
                                                     l5018 3470  
                                                     l3524 3836  
                                                     l3516 37EC  
                                                     l3620 310E  
                                                     l3612 30CC  
                                                     l4316 1570  
                                                     l4236 10F6  
                                                     l4180 0E84  
                                                     l4164 0E2E  
                                                     l4156 0D7E  
                                                     l4092 0974  
                                                     l4068 083C  
                                                     l5300 243A  
                                                     l3622 3124  
                                                     l3710 1FB4  
                                                     l4270 131C  
                                                     l4262 126E  
                                                     l4254 11FC  
                                                     l4246 1162  
                                                     l4502 1D5A  
                                                     l5310 245C  
                                                     l3632 3188  
                                                     l3616 30F2  
                                                     l4344 1652  
                                                     l4088 0944  
                                                     l4408 3A0C  
                                                     l4504 1D60  
                                                     l4424 1C42  
                                                     l5304 2442  
                                                     l3490 3CA6  
                                                     l3810 2B0E  
                                                     l4602 1F32  
                                                     l5092 3E72  
                                                     l4620 3902  
                                                     l3476 371A  
                                                     l3580 2E7E  
                                                     l3636 31B0  
                                                     l3628 3170  
                                                     l3724 1FFE  
                                                     l4372 17F2  
                                                     l4196 0F78  
                                                     l4188 0F04  
                                                     l4604 1F36  
                                                     l4460 1CBA  
                                                     l4452 1C96  
                                                     l4428 1C48  
                                                     l4622 3912  
                                                     l3486 3C8E  
                                                     l3494 3E2C  
                                                     l3582 2E94  
                                                     l3574 2E56  
                                                     l3822 2F86  
                                                     l3646 332E  
                                                     l3902 2204  
                                                     l4382 1840  
                                                     l4358 1728  
                                                     l4294 13F2  
                                                     l4286 1372  
                                                     l4526 1DAA  
                                                     l5318 247C  
                                                     ?_pad 0011  
                                                     l4624 3960  
                                                     l3496 3E32  
                                                     l3592 2EF4  
                                                     l3568 2E2C  
                                                     l3728 200E  
                                                     l3840 301A  
                                                     l3832 2FDE  
                                                     l3648 3344  
                                                     l4528 1DB0  
                                                     l4536 1DC4  
                                                     l4448 1C90  
                                                     l5360 256C  
                                                     l5328 24B0  
                                                     l3762 2194  
                                                     l3738 2108  
                                                     l3850 3060  
                                                     l3658 33A4  
                                                     l3674 36C0  
                                                     l3666 365E  
                                                     l3930 22F2  
                                                     l4378 1832  
                                                     l4706 1940  
                                                     l4554 1E66  
                                                     l4570 1E8C  
                                                     l4546 1E2C  
                                                     l4490 1CF8  
                                                     l5370 25B8  
                                                     l3596 2F0C  
                                                     l3780 2A0E  
                                                     l3836 2FF8  
                                                     l3668 3674  
                                                     l3916 2258  
                                                     l3908 2234  
                                                     l4388 1854  
                                                     l4564 1E7E  
                                                     l4820 2D52  
                                                     l5364 258C  
                                                     l5356 254C  
                                                     l5348 24E8  
                                                     l3686 3C76  
                                                     l3694 3B18  
                                                     l3758 2178  
                                                     l3854 307A  
                                                     l3846 3042  
                                                     l4590 1EFE  
                                                     l4814 2D14  
                                                     l5374 25DA  
                                                     l3960 2B50  
                                                     l3696 3B26  
                                                     l3792 2A9A  
                                                     l4656 3B6C  
                                                     l4680 18C6  
                                                     l4816 2D1C  
                                                     l4808 2CF4  
                                                     l5368 25AC  
                                                     l3970 2BA2  
                                                     l3962 2B56  
                                                     l3954 23EC  
                                                     l3938 236E  
                                                     l4754 1B08  
                                                     l4682 18D8  
                                                     l4826 2D94  
                                                     l4818 2D2A  
                                                     l3980 2BC6  
                                                     l3868 2844  
                                                     l4748 1AE8  
                                                     l4844 2DE6  
                                                     l4828 2DA2  
                                                     l4934 397E  
                                                     l3982 2BF2  
                                                     l3878 2932  
                                                     l4790 1BF8  
                                                     l4774 1B8E  
                                                     l4678 18C0  
                                                     l4598 1F28  
                                                     l3976 2BB4  
                                                     l4696 1906  
                                                     l4938 39BA  
                                                     l3986 2C2A  
                                                     l3978 2BBE  
                                                     l4970 3878  
                                                     l4778 1BAE  
                                                     l4698 190C  
                                                     l4972 3886  
                                                     l4982 38BE  
                                                     l4992 3404  
                                                     STR_1 06C0  
                                                     STR_2 06EE  
                                                     STR_3 0601  
                                                     STR_4 0638  
                                                     STR_5 06EB  
                                                     STR_6 0686  
                                                     STR_7 0668  
                                                     STR_8 06EB  
                                                     STR_9 069B  
                                                     u3011 2E5E  
                                                     u3030 2E9A  
                                                     u3200 3C72  
                                                     u3121 330E  
                                                     u3220 1F82  
                                                     u3140 334A  
                                                     u4020 09B0  
                                                     u3310 213A  
                                                     u3230 1F86  
                                                     u4110 0BB2  
                                                     u4030 09B4  
                                                     u3311 2138  
                                                     u3320 214A  
                                                     u3400 2AAA  
                                                     u4200 0F32  
                                                     u4040 09C2  
                                                     u3090 312A  
                                                     u3330 2150  
                                                     u3170 367A  
                                                     u4130 0C4E  
                                                     u5010 1B3A  
                                                     u3260 1FCA  
                                                     u3420 2ACC  
                                                     u3350 2160  
                                                     u3430 2ADC  
                                                     u4150 0D2E  
                                                     u4070 0A88  
                                                     u2800 375C  
                                                     u3280 1FF6  
                                                     u3440 2AE2  
                                                     u3520 300E  
                                                     u3600 295E  
                                                     u4400 16AC  
                                                     u4320 1420  
                                                     u3601 295C  
                                                     u3290 2118  
                                                     u3610 296E  
                                                     u4250 1124  
                                                     u4090 0B68  
                                                     u5050 1B9E  
                                                     u5220 39B0  
                                                     u3380 29B8  
                                                     u3620 2974  
                                                     u2900 3DDA  
                                                     u3700 22CC  
                                                     u4420 1782  
                                                     u4340 14C0  
                                                     u5060 1BBE  
                                                     u5140 2DAE  
                                                     u5230 39EA  
                                                     u3390 2A74  
                                                     u3550 3090  
                                                     u2910 3DDE  
                                                     u2830 3DA2  
                                                     u3710 22D0  
                                                     u3471 2F66  
                                                     u2920 3D2E  
                                                     u2840 3DA6  
                                                     u3640 21D8  
                                                     u4360 15CA  
                                                     u3810 2B9E  
                                                     u3570 27F6  
                                                     u2930 3D32  
                                                     u3730 2348  
                                                     u5330 3486  
                                                     u5227 39A6  
                                                     u3395 2A60  
                                                     u2780 3710  
                                                     u2940 3AD6  
                                                     u3740 2380  
                                                     u3660 2254  
                                                     u4380 162C  
                                                     u5260 388C  
                                                     u4540 1D1C  
                                                     u5500 259E  
                                                     u5237 39E0  
                                                     u3830 2C5E  
                                                     u3910 3612  
                                                     u2950 3ADA  
                                                     u3670 228E  
                                                     u4550 1D2C  
                                                     u3735 2334  
                                                     u3840 2C62  
                                                     u3760 23A2  
                                                     u3680 2292  
                                                     u5280 33F0  
                                                     u4800 1F0C  
                                                     u4720 1E92  
                                                     u4560 1D30  
                                                     u3761 23A0  
                                                     u2970 3E12  
                                                     u2890 3D4C  
                                                     u3770 23B2  
                                                     u5290 3426  
                                                     u2980 3E16  
                                                     u3780 23B8  
                                                     u4740 1EA8  
                                                     _RCIF 007CF5  
                                                     u4590 1D7C  
                                                     u5470 253E  
                                                     u5295 341A  
                                                     u4680 1E52  
                                                     u5480 255E  
                                                     u5537 25C6  
                                                     u3970 08A8  
                                                     u5490 257E  
                                                     u5547 3B80  
                                                     u3980 08AC  
                                                     u5557 3E68  
                                                     u3990 08BA  
                                                     u4960 192C  
                                                     u4970 1AA8  
                                                     u4975 1A9C  
                                         ??_initialize_PWM 0003  
                                             __CFG_STVR$ON 000000  
                                                     abs@a 0013  
                                                     _dbuf 00D5  
                                       initialize_PWM@freq 0001  
                                                     _atoi 2B3C  
                                                     _ctoa 3B02  
                                                     _main 241A  
                                                     _dtoa 1F58  
                                                     _prec 00CE  
                                                     _otoa 29A2  
                                                     _nout 00CA  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr0h 000FEA  
                                                     fsr1h 000FE2  
                                                     indf0 000FEF  
                                                     fsr2h 000FDA  
                                                     fsr0l 000FE9  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2F5A  
                                                     btemp 007F  
                                                     _utoa 27E0  
                                                     _xtoa 21C2  
                                         __end_of_ADC_Init 3FE2  
                                         __end_of_ADC_Read 3BAC  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                    write_SRAM@temperature 00B0  
                                            __CFG_OSC$RCIO 000000  
                                        int_to_char@result 0092  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                 __end_of_interrupt_enable 3FD4  
                                            __CFG_OSCS$OFF 000000  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2F5A  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1F58  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 31D6  
                                                    STR_10 061E  
                                                    STR_11 0692  
                                                    STR_20 06AC  
                                                    STR_12 0679  
                                                    STR_13 0692  
                                                    STR_14 0679  
                                                    STR_22 06AC  
                                                    STR_31 06AD  
                                                    STR_15 0650  
                                                    STR_40 06D0  
                                                    STR_16 06A8  
                                                    STR_18 06A8  
                                                    STR_34 06CA  
                                                    STR_27 06A9  
                                                    STR_43 06CD  
                                                    STR_36 06CA  
                                                    STR_52 06B4  
                                                    STR_45 06CD  
                                                    STR_54 06B4  
                                                    STR_62 06DC  
                                                    STR_38 06D0  
                                                    STR_47 06D3  
                                                    STR_64 06DC  
                                                    STR_72 06B0  
                                                    STR_49 06D3  
                                                    STR_74 06B0  
                                                    STR_82 06D6  
                                                    STR_59 06B5  
                                                    STR_67 06DF  
                                                    STR_84 06D6  
                                                    STR_92 06B8  
                                                    STR_69 06DF  
                                                    STR_94 06B8  
                                                    STR_79 06B1  
                                                    STR_87 06D9  
                                          __end_of___flmul 1C14  
                                                    STR_89 06D9  
                                                    ?_otoa 001C  
                                                    STR_99 06B9  
                                          __end_of___flsub 3BF6  
                                          __end_of___fltol 34B6  
                                                    ?_stoa 000A  
                                          __end_of___lldiv 38E4  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 33E2  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 36FE  
                                                    i2l295 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                            __CFG_PWRT$OFF 000000  
                                            __CFG_WRT0$OFF 000000  
                                            __CFG_WRT1$OFF 000000  
                                            __CFG_WRT2$OFF 000000  
                                            __CFG_WRT3$OFF 000000  
                                           __CFG_EBTR0$OFF 000000  
                                           __CFG_EBTR1$OFF 000000  
                                           __CFG_EBTR2$OFF 000000  
                                           __CFG_EBTR3$OFF 000000  
                                          __end_of_getchar 3FC4  
                                            __CFG_WRTB$OFF 000000  
                                            __CFG_WRTC$OFF 000000  
                                            __CFG_WRTD$OFF 000000  
                                           __CFG_EBTRB$OFF 000000  
                                                    _fgetc 38E4  
                                                    _flags 00D0  
                                                    _getch 3FF0  
                                                    _errno 00C8  
                                                    _fputc 36FE  
                                          __end_of_isalpha 3D3C  
                                                    _fputs 3C82  
                                          __end_of_isdigit 3E20  
                                          __end_of_read_op 3F34  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 00CC  
                                                    ctoa@c 001E  
                                                    _putch 3FFA  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 3DB0  
                                          __end_of_isspace 3C82  
                                          __end_of_isupper 3DE8  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 3AAC  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 3642  
                                          __end_of_toupper 3B02  
                                         ___lodiv@dividend 0001  
                                             _toupper$1878 000D  
                                          __initialization 3CC4  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2CA2  
                                             __end_of_ctoa 3B58  
                                             __end_of_main 2600  
                                             __end_of_dtoa 21C2  
                                             __end_of_otoa 2B3C  
                                             __end_of_stoa 309E  
                                             __end_of_utoa 29A2  
                                             __end_of_xtoa 241A  
                                         __end_of_ReadTime 3F62  
                                       int_to_char@the_num 009C  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 00B4  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                          __CFG_CCP2MUX$ON 000000  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   ?_fputs 000A  
                                                   STR_104 06C1  
                                                   STR_112 06BC  
                                                   STR_114 06BC  
                                                   STR_130 06E5  
                                                   _ADRESH 000FC4  
                                                   STR_123 06BD  
                                                   STR_107 06E2  
                                                   STR_132 06E5  
                                                   STR_116 06A4  
                                                   STR_109 06E2  
                                                   STR_141 06E8  
                                                   STR_118 06A4  
                                                   STR_134 06C4  
                                                   _ADRESL 000FC3  
                                                   STR_127 06A5  
                                                   STR_143 06C7  
                                                   STR_136 06C4  
                                                   STR_145 06C7  
                                                   STR_139 06E8  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _TMR2IE 007CE9  
                                           __CFG_WDTPS$128 000000  
                                                   _TMR2IP 007CF9  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2DFE  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0002  
                                      i2_Timer0_StartTimer 0048  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 3580  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3E7E  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lldiv 000D  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 3CEA  
                                  __size_of_UARTSendString 0088  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                        main@input_address 00B6  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 3E20  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_read_op 0001  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 3A56  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3EF0  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 3CF2  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                        ?_Timer0_StopTimer 0001  
                                           __pcstackCOMRAM 0001  
                                       ??_Timer0_StopTimer 0001  
                                             __pidataBANK0 0050  
                                            __end_of_fgetc 396E  
                                            __end_of_getch 3FFA  
                                            __end_of_fputc 37AA  
                                            __end_of_fputs 3CC4  
                                      __end_of_Timer0_Init 3ECE  
                                            __end_of_putch 4000  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                  __size_of_set_duty_cycle 0022  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 00BB  
                                                ?_ReadTime 0001  
                                       __size_of_read_SRAM 0130  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 3F9E  
                                            _initialize_TX 3F8A  
                                          _write_SRAM$2154 00A8  
                                          _write_SRAM$2155 00AC  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                        ?_interrupt_enable 0001  
                                                  ?_strlen 0001  
                                       ??_interrupt_enable 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                               ??_ReadTime 0005  
                                 __size_of_UARTRecieveChar 002C  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 3EA8  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 2DFE  
                                                  ___fladd 1C14  
                                                  ___aomod 309E  
                                                  ___flmul 1892  
                                                  ___flsub 3BAC  
                                                  ___fltol 33E2  
                                                  ___lldiv 3854  
                                          __size_of___wmul 002A  
                                                  ___lodiv 3306  
                                                  ___lomod 3642  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 396E  
                                                  _address 00D2  
                                                  __pcinit 3CC4  
                                                  __ramtop 0600  
                                                  __ptext0 241A  
                                                  __ptext1 2600  
                                                  __ptext2 3ECE  
                                                  __ptext3 34B6  
                                                  __ptext4 2CA2  
                                                  __ptext5 3BAC  
                                                  __ptext6 1C14  
                                                  __ptext7 1892  
                                                  __ptext8 3B58  
                                                  __ptext9 3FD4  
                                                ?_write_op 0001  
                                                  _getchar 3FB2  
                                                _T0CONbits 000FD5  
                                        __end_of_read_SRAM 3306  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 3D00  
                                                  _isdigit 3DE8  
                                                  _read_op 3F12  
                                               ??___xxtofl 0005  
                                                  _islower 3D78  
                                                  _isspace 3C3E  
                                                  _isupper 3DB0  
                                                  fgetc@fp 0003  
                                                  _time_ms 00C4  
                                                  atoi@neg 000E  
                                                  _sprintf 3A56  
                                               ??_get_temp 0034  
                                                  _strncmp 3580  
                                                  _toupper 3AAC  
                                     end_of_initialization 3CF2  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                          ___lldiv@divisor 0009  
                                        __end_of_timingISR 0034  
                                          ___lldiv@counter 0011  
                                        __end_of_vfpfcnvrt 1892  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 39F6  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                  __size_of_initialize_PWM 0018  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               ??_write_op 0002  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                           _set_duty_cycle 3EF0  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 0040  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00A0  
                                        ??_UARTRecieveChar 0001  
                                               _write_SRAM 2600  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 3EA8  
                                              vfpfcnvrt@vp 0067  
                                   __end_of_set_duty_cycle 3F12  
                                __size_of_Timer0_StopTimer 0008  
                                __end_of_Timer0_StartTimer 0048  
                                     read_SRAM@stored_temp 00AA  
                                           __end_of_strlen 3E52  
                                      start_initialization 3CC4  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 3D78  
                                              __end_of_pad 3854  
                                       set_duty_cycle@mask 0003  
                                        __size_of_ReadTime 0016  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00F5  
                                     __end_of_UARTSendChar 3F8A  
                              __end_ofi2_Timer0_StartTimer 0050  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                          ?_set_duty_cycle 0001  
                                    set_duty_cycle@lower_2 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 007E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 0080  
                                    set_duty_cycle@upper_8 0002  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                __size_of_interrupt_enable 0010  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1721 0010  
                                                _atoi$1722 0014  
                                                _atoi$1723 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1075 002E  
                                            UARTSendChar@c 0001  
                                           _initialize_PWM 3F34  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lldiv 0005  
                                                 ?___lodiv 0001  
                                              ?_write_SRAM 0001  
                                                 ?___lomod 0001  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                        _interrupt_disable 3FE2  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_read_op 0001  
                                                 _ADC_Init 3FD4  
                                                 _ADC_Read 3B58  
                                        __size_of_write_op 0022  
                                                 ?_islower 0001  
                                       ?_interrupt_disable 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                                _read_SRAM 31D6  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 0080  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                      ??_interrupt_disable 0001  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00A0  
                                          UARTSendString@i 00A4  
                                   __end_of_initialize_PWM 3F4C  
                                      __end_of_int_to_char 3C3E  
                                      write_SRAM@curr_time 00B2  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 00C0  
                                                _timingISR 0008  
                                                _vfpfcnvrt 06F2  
                                __end_of_interrupt_disable 3FF0  
                                                _xtoa$1111 002F  
                                                _xtoa$1112 0031  
                                        ___wmul@multiplier 0001  
                                         _Timer0_StopTimer 0038  
                                                main@input 00BA  
                                             _isspace$1758 0007  
                                               ?_read_SRAM 00A6  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 3CD8  
                                      __size_of_write_SRAM 01E0  
                                          _UARTRecieveChar 3E52  
                                                 _ReadTime 3F4C  
                                         ??_UARTSendString 00A2  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 3F76  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lldiv 0090  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 0082  
                                                 ___xxtofl 2CA2  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_read_op 0022  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 3854  
                                                 __ptext11 33E2  
                                                 __ptext20 39F6  
                                                 __ptext12 0038  
                                                 __ptext21 06F2  
                                                 __ptext13 0040  
                                                 __ptext30 3580  
                                                 __ptext22 21C2  
                                                 __ptext14 3F4C  
                                                 __ptext31 2F5A  
                                                 __ptext23 3AAC  
                                                 __ptext15 3EF0  
                                                 __ptext40 3C82  
                                                 __ptext32 29A2  
                                                 __ptext24 3D78  
                                                 __ptext16 31D6  
                                                 __ptext41 36FE  
                                                 __ptext33 1F58  
                                                 __ptext25 3DB0  
                                                 __ptext17 3F12  
                                                 __ptext50 396E  
                                                 __ptext42 3FFA  
                                                 __ptext34 3D3C  
                                                 __ptext26 3D00  
                                                 __ptext18 3BF6  
                                                 __ptext51 3F62  
                                                 __ptext43 2B3C  
                                                 __ptext35 309E  
                                                 __ptext27 27E0  
                                                 __ptext19 3A56  
                                                 __ptext52 3F76  
                                                 __ptext44 3C3E  
                                                 __ptext36 2DFE  
                                                 __ptext28 3642  
                                                 __ptext61 0048  
                                                 __ptext53 3FC4  
                                                 __ptext45 3DE8  
                                                 __ptext37 3B02  
                                                 __ptext29 3306  
                                                 __ptext54 3FE2  
                                                 __ptext46 3E7E  
                                                 __ptext38 37AA  
                                                 __ptext55 3F8A  
                                                 __ptext47 3FB2  
                                                 __ptext39 3E20  
                                                 __ptext56 3F9E  
                                                 __ptext48 38E4  
                                                 __ptext57 3F34  
                                                 __ptext49 3FF0  
                                                 __ptext58 3E52  
                                                 __ptext59 3EA8  
                                         __size_of_isupper 0038  
                                                 _get_temp 34B6  
                                         _interrupt_enable 3FC4  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                             _UARTSendChar 3F76  
                                              _int_to_char 3BF6  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 01E6  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 3FB2  
                                    __end_of_initialize_TX 3F9E  
                                                stoa@F1152 00F5  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                           read_op@address 0001  
                                         ??_set_duty_cycle 0002  
                                                 _ungetbuf 00D4  
                                                 _ungetcnt 007E  
                                                 _vfprintf 39F6  
                                         read_SRAM@address 00A6  
                               __size_of_interrupt_disable 000E  
                                                 main@temp 00B8  
                                    read_SRAM@time_elapsed 00AC  
                                         ___aomod@dividend 0001  
                                                 _write_op 3ECE  
                                           _vfpfcnvrt$1126 005B  
                                           _vfpfcnvrt$1127 005D  
                                               _INTCONbits 000FF2  
                                  __end_of_UARTRecieveChar 3E7E  
                                              ??_read_SRAM 00A8  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 0058  
                                                sprintf@ap 0090  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                         ___lldiv@dividend 0005  
                                              _UARTNewLine 3F62  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                             ??_write_SRAM 00A6  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                            read_op@result 0002  
                                                 sprintf@f 008A  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 0080  
                                         ___lldiv@quotient 000D  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                       __end_of_write_SRAM 27E0  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                 __end_of_Timer0_StopTimer 0040  
                                             ___aomod@sign 0012  
