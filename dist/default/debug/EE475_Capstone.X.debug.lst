

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 01:49:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F452 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  00392C                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for stoa@F1152
   109  00392C  28                 	db	40
   110  00392D  6E                 	db	110
   111  00392E  75                 	db	117
   112  00392F  6C                 	db	108
   113  003930  6C                 	db	108
   114  003931  29                 	db	41
   115  003932  00                 	db	0
   116  0000                     _TRISC	set	3988
   117  0000                     _TRISA	set	3986
   118  0000                     _PORTA	set	3968
   119  0000                     _PORTD	set	3971
   120  0000                     _PORTB	set	3969
   121  0000                     _PORTCbits	set	3970
   122  0000                     _TRISCbits	set	3988
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISD	set	3989
   125  0000                     _T2CON	set	4042
   126  0000                     _CCP1CON	set	4029
   127  0000                     _CCPR1L	set	4030
   128  0000                     _PR2	set	4043
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON0	set	4034
   132  0000                     _SSPBUF	set	4041
   133  0000                     _SSPCON1	set	4038
   134  0000                     _SSPSTATbits	set	4039
   135  0000                     _ADCON1	set	4033
   136  0000                     _RCREG1	set	4014
   137  0000                     _TXREG	set	4013
   138  0000                     _RCSTAbits	set	4011
   139  0000                     _RCSTA	set	4011
   140  0000                     _SPBRG	set	4015
   141  0000                     _TXSTAbits	set	4012
   142  0000                     _RCONbits	set	4048
   143  0000                     _GO_nDONE	set	32274
   144  0000                     _RCIF	set	31989
   145  0000                     _T0CON	set	4053
   146  0000                     _TMR0L	set	4054
   147  0000                     _TMR0H	set	4055
   148  0000                     _T0CONbits	set	4053
   149  0000                     _INTCON2bits	set	4081
   150  0000                     _INTCONbits	set	4082
   151  0000                     _TMR0IE	set	32661
   152  0000                     _TMR0IF	set	32658
   153                           
   154                           	psect	smallconst
   155  000600                     __psmallconst:
   156                           	opt callstack 0
   157  000600  00                 	db	0
   158  000601                     STR_103:
   159  000601  68                 	db	104	;'h'
   160  000602  68                 	db	104	;'h'
   161  000603  58                 	db	88	;'X'
   162  000604  00                 	db	0
   163  000605                     STR_3:
   164  000605  68                 	db	104	;'h'
   165  000606  68                 	db	104	;'h'
   166  000607  64                 	db	100	;'d'
   167  000608  00                 	db	0
   168  000609                     STR_7:
   169  000609  68                 	db	104	;'h'
   170  00060A  68                 	db	104	;'h'
   171  00060B  69                 	db	105	;'i'
   172  00060C  00                 	db	0
   173  00060D                     STR_59:
   174  00060D  68                 	db	104	;'h'
   175  00060E  68                 	db	104	;'h'
   176  00060F  6E                 	db	110	;'n'
   177  000610  00                 	db	0
   178  000611                     STR_39:
   179  000611  68                 	db	104	;'h'
   180  000612  68                 	db	104	;'h'
   181  000613  6F                 	db	111	;'o'
   182  000614  00                 	db	0
   183  000615                     STR_79:
   184  000615  68                 	db	104	;'h'
   185  000616  68                 	db	104	;'h'
   186  000617  75                 	db	117	;'u'
   187  000618  00                 	db	0
   188  000619                     STR_99:
   189  000619  68                 	db	104	;'h'
   190  00061A  68                 	db	104	;'h'
   191  00061B  78                 	db	120	;'x'
   192  00061C  00                 	db	0
   193  00061D                     STR_1:
   194  00061D  25                 	db	37
   195  00061E  6C                 	db	108	;'l'
   196  00061F  75                 	db	117	;'u'
   197  000620  00                 	db	0
   198  000621                     STR_121:
   199  000621  6C                 	db	108	;'l'
   200  000622  58                 	db	88	;'X'
   201  000623  00                 	db	0
   202  000624                     STR_130:
   203  000624  7A                 	db	122	;'z'
   204  000625  58                 	db	88	;'X'
   205  000626  00                 	db	0
   206  000627                     STR_21:
   207  000627  6C                 	db	108	;'l'
   208  000628  64                 	db	100	;'d'
   209  000629  00                 	db	0
   210  00062A                     STR_30:
   211  00062A  7A                 	db	122	;'z'
   212  00062B  64                 	db	100	;'d'
   213  00062C  00                 	db	0
   214  00062D                     STR_25:
   215  00062D  6C                 	db	108	;'l'
   216  00062E  69                 	db	105	;'i'
   217  00062F  00                 	db	0
   218  000630                     STR_34:
   219  000630  7A                 	db	122	;'z'
   220  000631  69                 	db	105	;'i'
   221  000632  00                 	db	0
   222  000633                     STR_69:
   223  000633  6C                 	db	108	;'l'
   224  000634  6E                 	db	110	;'n'
   225  000635  00                 	db	0
   226  000636                     STR_74:
   227  000636  7A                 	db	122	;'z'
   228  000637  6E                 	db	110	;'n'
   229  000638  00                 	db	0
   230  000639                     STR_49:
   231  000639  6C                 	db	108	;'l'
   232  00063A  6F                 	db	111	;'o'
   233  00063B  00                 	db	0
   234  00063C                     STR_54:
   235  00063C  7A                 	db	122	;'z'
   236  00063D  6F                 	db	111	;'o'
   237  00063E  00                 	db	0
   238  00063F                     STR_94:
   239  00063F  7A                 	db	122	;'z'
   240  000640  75                 	db	117	;'u'
   241  000641  00                 	db	0
   242  000642                     STR_117:
   243  000642  6C                 	db	108	;'l'
   244  000643  78                 	db	120	;'x'
   245  000644  00                 	db	0
   246  000645                     STR_126:
   247  000645  7A                 	db	122	;'z'
   248  000646  78                 	db	120	;'x'
   249  000647  00                 	db	0
   250  000648  25                 	db	37
   251  000649  64                 	db	100	;'d'
   252  00064A  00                 	db	0
   253  0000                     
   254                           ; #config settings
   255  00064B  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	cinit
   258  0036A2                     __pcinit:
   259                           	opt callstack 0
   260  0036A2                     start_initialization:
   261                           	opt callstack 0
   262  0036A2                     __initialization:
   263                           	opt callstack 0
   264                           
   265                           ; Initialize objects allocated to BANK0 (7 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  0036A2  0E2C               	movlw	low __pidataBANK0
   268  0036A4  6EF6               	movwf	tblptrl,c
   269  0036A6  0E39               	movlw	high __pidataBANK0
   270  0036A8  6EF7               	movwf	tblptrh,c
   271  0036AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  0036AC  6EF8               	movwf	tblptru,c
   273  0036AE  EE00  F0DF         	lfsr	0,__pdataBANK0
   274  0036B2  EE10 F007          	lfsr	1,7
   275  0036B6                     copy_data0:
   276  0036B6  0009               	tblrd		*+
   277  0036B8  CFF5 FFEE          	movff	tablat,postinc0
   278  0036BC  50E5               	movf	postdec1,w,c
   279  0036BE  50E1               	movf	fsr1l,w,c
   280  0036C0  E1FA               	bnz	copy_data0
   281                           
   282                           ; Clear objects allocated to BANK0 (59 bytes)
   283  0036C2  EE00  F080         	lfsr	0,__pbssBANK0
   284  0036C6  0E3B               	movlw	59
   285  0036C8                     clear_0:
   286  0036C8  6AEE               	clrf	postinc0,c
   287  0036CA  06E8               	decf	wreg,f,c
   288  0036CC  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (1 bytes)
   291  0036CE  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   292  0036D0                     end_of_initialization:
   293                           	opt callstack 0
   294  0036D0                     __end_of__initialization:
   295                           	opt callstack 0
   296  0036D0  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297  0036D2  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298  0036D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  0036D6  6EF8               	movwf	tblptru,c
   300  0036D8  0100               	movlb	0
   301  0036DA  EF84  F01C         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304  00007E                     __pbssCOMRAM:
   305                           	opt callstack 0
   306  00007E                     _ungetcnt:
   307                           	opt callstack 0
   308  00007E                     	ds	1
   309                           
   310                           	psect	bssBANK0
   311  000080                     __pbssBANK0:
   312                           	opt callstack 0
   313  000080                     _lcd:
   314                           	opt callstack 0
   315  000080                     	ds	5
   316  000085                     _time_ms_2:
   317                           	opt callstack 0
   318  000085                     	ds	4
   319  000089                     _time_ms:
   320                           	opt callstack 0
   321  000089                     	ds	4
   322  00008D                     _errno:
   323                           	opt callstack 0
   324  00008D                     	ds	2
   325  00008F                     _nout:
   326                           	opt callstack 0
   327  00008F                     	ds	2
   328  000091                     _width:
   329                           	opt callstack 0
   330  000091                     	ds	2
   331  000093                     _prec:
   332                           	opt callstack 0
   333  000093                     	ds	2
   334  000095                     _flags:
   335                           	opt callstack 0
   336  000095                     	ds	2
   337  000097                     _interval_events:
   338                           	opt callstack 0
   339  000097                     	ds	2
   340  000099                     	ds	1
   341  00009A                     _flag:
   342                           	opt callstack 0
   343  00009A                     	ds	1
   344  00009B                     _dbuf:
   345                           	opt callstack 0
   346  00009B                     	ds	32
   347                           
   348                           	psect	dataBANK0
   349  0000DF                     __pdataBANK0:
   350                           	opt callstack 0
   351  0000DF                     stoa@F1152:
   352                           	opt callstack 0
   353  0000DF                     	ds	7
   354                           
   355                           	psect	cstackBANK0
   356  0000BB                     __pcstackBANK0:
   357                           	opt callstack 0
   358  0000BB                     ?_sprintf:
   359                           	opt callstack 0
   360  0000BB                     sprintf@s:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364  0000BB                     	ds	2
   365  0000BD                     sprintf@fmt:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x2
   369  0000BD                     	ds	8
   370  0000C5                     sprintf@f:
   371                           	opt callstack 0
   372                           
   373                           ; 6 bytes @ 0xA
   374  0000C5                     	ds	6
   375  0000CB                     sprintf@ap:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x10
   379  0000CB                     	ds	2
   380  0000CD                     int_to_char@result:
   381                           	opt callstack 0
   382                           
   383                           ; 10 bytes @ 0x12
   384  0000CD                     	ds	10
   385  0000D7                     int_to_char@the_num:
   386                           	opt callstack 0
   387                           
   388                           ; 4 bytes @ 0x1C
   389  0000D7                     	ds	4
   390  0000DB                     UARTSendString@c:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x20
   394  0000DB                     	ds	2
   395  0000DD                     UARTSendString@i:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x22
   399  0000DD                     	ds	2
   400                           
   401                           	psect	cstackCOMRAM
   402  000001                     __pcstackCOMRAM:
   403                           	opt callstack 0
   404  000001                     ?_ADC_Read:
   405                           	opt callstack 0
   406  000001                     ?_strlen:
   407                           	opt callstack 0
   408  000001                     ?_isupper:
   409                           	opt callstack 0
   410  000001                     ?_isalpha:
   411                           	opt callstack 0
   412  000001                     ?_isdigit:
   413                           	opt callstack 0
   414  000001                     ?_strncmp:
   415                           	opt callstack 0
   416  000001                     ?_isspace:
   417                           	opt callstack 0
   418  000001                     ?_getch:
   419                           	opt callstack 0
   420  000001                     ?_islower:
   421                           	opt callstack 0
   422  000001                     ?___wmul:
   423                           	opt callstack 0
   424  000001                     ?___fladd:
   425                           	opt callstack 0
   426  000001                     ?___xxtofl:
   427                           	opt callstack 0
   428  000001                     ?___aodiv:
   429                           	opt callstack 0
   430  000001                     ?___aomod:
   431                           	opt callstack 0
   432  000001                     ?___lodiv:
   433                           	opt callstack 0
   434  000001                     ?___lomod:
   435                           	opt callstack 0
   436  000001                     write_op@data:
   437                           	opt callstack 0
   438  000001                     UARTSendChar@c:
   439                           	opt callstack 0
   440  000001                     ___wmul@multiplier:
   441                           	opt callstack 0
   442  000001                     isalpha@c:
   443                           	opt callstack 0
   444  000001                     isdigit@c:
   445                           	opt callstack 0
   446  000001                     isspace@c:
   447                           	opt callstack 0
   448  000001                     isupper@c:
   449                           	opt callstack 0
   450  000001                     fputc@c:
   451                           	opt callstack 0
   452  000001                     strlen@s:
   453                           	opt callstack 0
   454  000001                     strncmp@_l:
   455                           	opt callstack 0
   456  000001                     islower@c:
   457                           	opt callstack 0
   458  000001                     ___fladd@b:
   459                           	opt callstack 0
   460  000001                     ___xxtofl@val:
   461                           	opt callstack 0
   462  000001                     ___aodiv@dividend:
   463                           	opt callstack 0
   464  000001                     ___aomod@dividend:
   465                           	opt callstack 0
   466  000001                     ___lodiv@dividend:
   467                           	opt callstack 0
   468  000001                     ___lomod@dividend:
   469                           	opt callstack 0
   470                           
   471                           ; 8 bytes @ 0x0
   472  000001                     	ds	1
   473  000002                     ??_write_op:
   474                           
   475                           ; 1 bytes @ 0x1
   476  000002                     	ds	1
   477  000003                     ??_ADC_Read:
   478  000003                     ??_isupper:
   479  000003                     ??_isalpha:
   480  000003                     ??_isdigit:
   481  000003                     ??_isspace:
   482  000003                     ??_islower:
   483  000003                     ?_fgetc:
   484                           	opt callstack 0
   485  000003                     write_op@address:
   486                           	opt callstack 0
   487  000003                     ___wmul@multiplicand:
   488                           	opt callstack 0
   489  000003                     fputc@fp:
   490                           	opt callstack 0
   491  000003                     fgetc@fp:
   492                           	opt callstack 0
   493  000003                     strlen@a:
   494                           	opt callstack 0
   495  000003                     strncmp@_r:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499  000003                     	ds	2
   500  000005                     ??_fputc:
   501  000005                     ??_fgetc:
   502  000005                     ??___xxtofl:
   503  000005                     ADC_Read@channel:
   504                           	opt callstack 0
   505  000005                     ___wmul@product:
   506                           	opt callstack 0
   507  000005                     strncmp@n:
   508                           	opt callstack 0
   509  000005                     ___fladd@a:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513  000005                     	ds	2
   514  000007                     ??_strncmp:
   515  000007                     ?_toupper:
   516                           	opt callstack 0
   517  000007                     _isspace$1823:
   518                           	opt callstack 0
   519  000007                     toupper@c:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x6
   523  000007                     	ds	1
   524  000008                     ?_atoi:
   525                           	opt callstack 0
   526  000008                     atoi@s:
   527                           	opt callstack 0
   528  000008                     strncmp@l:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x7
   532  000008                     	ds	1
   533  000009                     ??_toupper:
   534  000009                     ??___fladd:
   535  000009                     ___xxtofl@sign:
   536                           	opt callstack 0
   537  000009                     ___aodiv@divisor:
   538                           	opt callstack 0
   539  000009                     ___aomod@divisor:
   540                           	opt callstack 0
   541  000009                     ___lodiv@divisor:
   542                           	opt callstack 0
   543  000009                     ___lomod@divisor:
   544                           	opt callstack 0
   545                           
   546                           ; 8 bytes @ 0x8
   547  000009                     	ds	1
   548  00000A                     ??_atoi:
   549  00000A                     ?_stoa:
   550                           	opt callstack 0
   551  00000A                     ___xxtofl@exp:
   552                           	opt callstack 0
   553  00000A                     stoa@fp:
   554                           	opt callstack 0
   555  00000A                     fputs@s:
   556                           	opt callstack 0
   557  00000A                     fgetc@c:
   558                           	opt callstack 0
   559  00000A                     strncmp@r:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x9
   563  00000A                     	ds	1
   564  00000B                     ___xxtofl@arg:
   565                           	opt callstack 0
   566                           
   567                           ; 4 bytes @ 0xA
   568  00000B                     	ds	1
   569  00000C                     stoa@s:
   570                           	opt callstack 0
   571  00000C                     fputs@fp:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0xB
   575  00000C                     	ds	1
   576  00000D                     ___fladd@signs:
   577                           	opt callstack 0
   578  00000D                     _toupper$1943:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0xC
   582  00000D                     	ds	1
   583  00000E                     ??_stoa:
   584  00000E                     ___fladd@aexp:
   585                           	opt callstack 0
   586  00000E                     fputs@c:
   587                           	opt callstack 0
   588  00000E                     atoi@neg:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0xD
   592  00000E                     	ds	1
   593  00000F                     ?___flmul:
   594                           	opt callstack 0
   595  00000F                     ___fladd@bexp:
   596                           	opt callstack 0
   597  00000F                     fputs@i:
   598                           	opt callstack 0
   599  00000F                     ___flmul@b:
   600                           	opt callstack 0
   601  00000F                     stoa@nuls:
   602                           	opt callstack 0
   603                           
   604                           ; 7 bytes @ 0xE
   605  00000F                     	ds	1
   606  000010                     ___fladd@grs:
   607                           	opt callstack 0
   608  000010                     _atoi$1786:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0xF
   612  000010                     	ds	1
   613  000011                     ?_pad:
   614                           	opt callstack 0
   615  000011                     ___aodiv@counter:
   616                           	opt callstack 0
   617  000011                     ___aomod@counter:
   618                           	opt callstack 0
   619  000011                     ___lomod@counter:
   620                           	opt callstack 0
   621  000011                     pad@fp:
   622                           	opt callstack 0
   623  000011                     ___lodiv@quotient:
   624                           	opt callstack 0
   625                           
   626                           ; 8 bytes @ 0x10
   627  000011                     	ds	1
   628  000012                     ___aodiv@sign:
   629                           	opt callstack 0
   630  000012                     ___aomod@sign:
   631                           	opt callstack 0
   632  000012                     _atoi$1788:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x11
   636  000012                     	ds	1
   637  000013                     ?_abs:
   638                           	opt callstack 0
   639  000013                     pad@buf:
   640                           	opt callstack 0
   641  000013                     abs@a:
   642                           	opt callstack 0
   643  000013                     ___flmul@a:
   644                           	opt callstack 0
   645  000013                     ___aodiv@quotient:
   646                           	opt callstack 0
   647                           
   648                           ; 8 bytes @ 0x12
   649  000013                     	ds	1
   650  000014                     _atoi$1787:
   651                           	opt callstack 0
   652                           
   653                           ; 1 bytes @ 0x13
   654  000014                     	ds	1
   655  000015                     ??_abs:
   656  000015                     pad@p:
   657                           	opt callstack 0
   658  000015                     atoi@n:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x14
   662  000015                     	ds	1
   663  000016                     stoa@i:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x15
   667  000016                     	ds	1
   668  000017                     ??___flmul:
   669  000017                     ??_pad:
   670                           
   671                           ; 1 bytes @ 0x16
   672  000017                     	ds	1
   673  000018                     pad@i:
   674                           	opt callstack 0
   675  000018                     stoa@w:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x17
   679  000018                     	ds	1
   680  000019                     ___lodiv@counter:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x18
   684  000019                     	ds	1
   685  00001A                     pad@w:
   686                           	opt callstack 0
   687  00001A                     stoa@cp:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x19
   691  00001A                     	ds	1
   692  00001B                     ___flmul@sign:
   693                           	opt callstack 0
   694                           
   695                           ; 1 bytes @ 0x1A
   696  00001B                     	ds	1
   697  00001C                     ?_ctoa:
   698                           	opt callstack 0
   699  00001C                     ?_dtoa:
   700                           	opt callstack 0
   701  00001C                     ?_otoa:
   702                           	opt callstack 0
   703  00001C                     ?_utoa:
   704                           	opt callstack 0
   705  00001C                     ?_xtoa:
   706                           	opt callstack 0
   707  00001C                     ctoa@fp:
   708                           	opt callstack 0
   709  00001C                     dtoa@fp:
   710                           	opt callstack 0
   711  00001C                     otoa@fp:
   712                           	opt callstack 0
   713  00001C                     stoa@p:
   714                           	opt callstack 0
   715  00001C                     utoa@fp:
   716                           	opt callstack 0
   717  00001C                     xtoa@fp:
   718                           	opt callstack 0
   719  00001C                     ___flmul@grs:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x1B
   723  00001C                     	ds	2
   724  00001E                     ctoa@c:
   725                           	opt callstack 0
   726  00001E                     stoa@l:
   727                           	opt callstack 0
   728  00001E                     dtoa@d:
   729                           	opt callstack 0
   730  00001E                     otoa@d:
   731                           	opt callstack 0
   732  00001E                     utoa@d:
   733                           	opt callstack 0
   734  00001E                     xtoa@d:
   735                           	opt callstack 0
   736                           
   737                           ; 8 bytes @ 0x1D
   738  00001E                     	ds	1
   739  00001F                     ctoa@w:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x1E
   743  00001F                     	ds	1
   744  000020                     ___flmul@aexp:
   745                           	opt callstack 0
   746                           
   747                           ; 1 bytes @ 0x1F
   748  000020                     	ds	1
   749  000021                     ___flmul@bexp:
   750                           	opt callstack 0
   751                           
   752                           ; 1 bytes @ 0x20
   753  000021                     	ds	1
   754  000022                     ___flmul@prod:
   755                           	opt callstack 0
   756                           
   757                           ; 4 bytes @ 0x21
   758  000022                     	ds	4
   759  000026                     ??_dtoa:
   760  000026                     ??_otoa:
   761  000026                     ??_utoa:
   762  000026                     xtoa@x:
   763                           	opt callstack 0
   764  000026                     ___flmul@temp:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x25
   768  000026                     	ds	1
   769  000027                     ??_xtoa:
   770                           
   771                           ; 1 bytes @ 0x26
   772  000027                     	ds	1
   773  000028                     ?___flsub:
   774                           	opt callstack 0
   775  000028                     ___flsub@b:
   776                           	opt callstack 0
   777                           
   778                           ; 4 bytes @ 0x27
   779  000028                     	ds	4
   780  00002C                     ___flsub@a:
   781                           	opt callstack 0
   782                           
   783                           ; 4 bytes @ 0x2B
   784  00002C                     	ds	2
   785  00002E                     _dtoa$1140:
   786                           	opt callstack 0
   787  00002E                     otoa@p:
   788                           	opt callstack 0
   789  00002E                     utoa@p:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x2D
   793  00002E                     	ds	1
   794  00002F                     _xtoa$1176:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x2E
   798  00002F                     	ds	1
   799  000030                     ?_get_temp:
   800                           	opt callstack 0
   801  000030                     dtoa@p:
   802                           	opt callstack 0
   803  000030                     otoa@t:
   804                           	opt callstack 0
   805  000030                     utoa@w:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x2F
   809  000030                     	ds	1
   810  000031                     _xtoa$1177:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x30
   814  000031                     	ds	1
   815  000032                     dtoa@w:
   816                           	opt callstack 0
   817  000032                     otoa@w:
   818                           	opt callstack 0
   819  000032                     utoa@n:
   820                           	opt callstack 0
   821                           
   822                           ; 8 bytes @ 0x31
   823  000032                     	ds	1
   824  000033                     xtoa@p:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x32
   828  000033                     	ds	1
   829  000034                     dtoa@s:
   830                           	opt callstack 0
   831  000034                     get_temp@real_voltage:
   832                           	opt callstack 0
   833  000034                     otoa@n:
   834                           	opt callstack 0
   835                           
   836                           ; 8 bytes @ 0x33
   837  000034                     	ds	1
   838  000035                     xtoa@w:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x34
   842  000035                     	ds	1
   843  000036                     dtoa@n:
   844                           	opt callstack 0
   845                           
   846                           ; 8 bytes @ 0x35
   847  000036                     	ds	1
   848  000037                     xtoa@n:
   849                           	opt callstack 0
   850                           
   851                           ; 8 bytes @ 0x36
   852  000037                     	ds	1
   853  000038                     get_temp@temp:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0x37
   857  000038                     	ds	2
   858  00003A                     utoa@i:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x39
   862  00003A                     	ds	2
   863  00003C                     get_temp@adc_voltage:
   864                           	opt callstack 0
   865  00003C                     otoa@i:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x3B
   869  00003C                     	ds	2
   870  00003E                     ?___fltol:
   871                           	opt callstack 0
   872  00003E                     dtoa@i:
   873                           	opt callstack 0
   874  00003E                     ___fltol@f1:
   875                           	opt callstack 0
   876                           
   877                           ; 4 bytes @ 0x3D
   878  00003E                     	ds	1
   879  00003F                     xtoa@i:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x3E
   883  00003F                     	ds	2
   884  000041                     xtoa@c:
   885                           	opt callstack 0
   886                           
   887                           ; 2 bytes @ 0x40
   888  000041                     	ds	1
   889  000042                     ??___fltol:
   890                           
   891                           ; 1 bytes @ 0x41
   892  000042                     	ds	1
   893  000043                     ?_vfpfcnvrt:
   894                           	opt callstack 0
   895  000043                     vfpfcnvrt@fp:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x42
   899  000043                     	ds	2
   900  000045                     vfpfcnvrt@fmt:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x44
   904  000045                     	ds	1
   905  000046                     ___fltol@sign1:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x45
   909  000046                     	ds	1
   910  000047                     ___fltol@exp1:
   911                           	opt callstack 0
   912  000047                     vfpfcnvrt@ap:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x46
   916  000047                     	ds	2
   917  000049                     ??_vfpfcnvrt:
   918                           
   919                           ; 1 bytes @ 0x48
   920  000049                     	ds	14
   921  000057                     vfpfcnvrt@cp:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0x56
   925  000057                     	ds	2
   926  000059                     vfpfcnvrt@done:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x58
   930  000059                     	ds	2
   931  00005B                     _vfpfcnvrt$1191:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x5A
   935  00005B                     	ds	2
   936  00005D                     _vfpfcnvrt$1192:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x5C
   940  00005D                     	ds	2
   941  00005F                     vfpfcnvrt@ll:
   942                           	opt callstack 0
   943                           
   944                           ; 8 bytes @ 0x5E
   945  00005F                     	ds	8
   946  000067                     vfpfcnvrt@vp:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x66
   950  000067                     	ds	2
   951  000069                     vfpfcnvrt@c:
   952                           	opt callstack 0
   953                           
   954                           ; 1 bytes @ 0x68
   955  000069                     	ds	1
   956  00006A                     vfpfcnvrt@llu:
   957                           	opt callstack 0
   958                           
   959                           ; 8 bytes @ 0x69
   960  00006A                     	ds	8
   961  000072                     ?_vfprintf:
   962                           	opt callstack 0
   963  000072                     vfprintf@fp:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x71
   967  000072                     	ds	2
   968  000074                     vfprintf@fmt:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x73
   972  000074                     	ds	2
   973  000076                     vfprintf@ap:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x75
   977  000076                     	ds	2
   978  000078                     vfprintf@cfmt:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x77
   982  000078                     	ds	2
   983  00007A                     ?_int_to_char:
   984                           	opt callstack 0
   985  00007A                     int_to_char@num:
   986                           	opt callstack 0
   987                           
   988                           ; 4 bytes @ 0x79
   989  00007A                     	ds	4
   990  00007E                     
   991                           ; 1 bytes @ 0x7D
   992 ;;
   993 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   994 ;;
   995 ;; *************** function _main *****************
   996 ;; Defined at:
   997 ;;		line 28 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  temp            2    0        int 
  1002 ;;  address         2    0        int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         0       4       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         0       4       0       0       0       0       0
  1016 ;;Total ram usage:        4 bytes
  1017 ;; Hardware stack levels required when called:   11
  1018 ;; This function calls:
  1019 ;;		_Timer0_Init
  1020 ;;		_Timer0_StartTimer
  1021 ;;		_UARTNewLine
  1022 ;;		_UARTSendString
  1023 ;;		___fltol
  1024 ;;		_get_temp
  1025 ;;		_initialize_PWM
  1026 ;;		_initialize_RX
  1027 ;;		_initialize_TX
  1028 ;;		_int_to_char
  1029 ;;		_write_op
  1030 ;; This function is called by:
  1031 ;;		Startup code after reset
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text0
  1036  003908                     __ptext0:
  1037                           	opt callstack 0
  1038  003908                     _main:
  1039                           	opt callstack 0
  1040  003908  FFFF               	dw	65535	; assembler added errata NOP
  1041                           
  1042                           ;incstack = 0
  1043  00390A  EC40  F01C         	call	_initialize_PWM	;wreg free
  1044  00390E                     l138:
  1045  00390E  FFFF               	dw	65535	; assembler added errata NOP
  1046  003910  D7FE               	goto	l138
  1047  003912                     __end_of_main:
  1048                           	opt callstack 0
  1049                           
  1050 ;; *************** function _write_op *****************
  1051 ;; Defined at:
  1052 ;;		line 13 in file "drive_memory.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  address         1    wreg     unsigned char 
  1055 ;;  data            1    0[COMRAM] unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  address         1    2[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1067 ;;      Params:         1       0       0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0
  1069 ;;      Temps:          1       0       0       0       0       0       0
  1070 ;;      Totals:         3       0       0       0       0       0       0
  1071 ;;Total ram usage:        3 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text1
  1082  0034F8                     __ptext1:
  1083                           	opt callstack 0
  1084  0034F8                     _write_op:
  1085                           	opt callstack 0
  1086  0034F8  FFFF               	dw	65535	; assembler added errata NOP
  1087                           
  1088                           ;incstack = 0
  1089                           ;write_op@address stored from wreg
  1090  0034FA  6E03               	movwf	write_op@address,c
  1091                           
  1092                           ;drive_memory.c: 14:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1093  0034FC  0E27               	movlw	39
  1094  0034FE  6E02               	movwf	??_write_op& (0+255),c
  1095  003500  0EFC               	movlw	252
  1096  003502                     u5277:
  1097  003502  FFFF               	dw	65535	; errata NOP
  1098  003504  2EE8               	decfsz	wreg,f,c
  1099  003506  D7FD               	bra	u5277
  1100  003508  2E02               	decfsz	??_write_op& (0+255),f,c
  1101  00350A  D7FB               	bra	u5277
  1102                           
  1103                           ;drive_memory.c: 15:   TRISD = 0x00;
  1104  00350C  0E00               	movlw	0
  1105  00350E  6E95               	movwf	3989,c	;volatile
  1106                           
  1107                           ;drive_memory.c: 16:   TRISB &= ~(0x3f);
  1108  003510  0EC0               	movlw	192
  1109  003512  1693               	andwf	3987,f,c	;volatile
  1110                           
  1111                           ;drive_memory.c: 17:   TRISCbits.TRISC1 = 0;
  1112  003514  9294               	bcf	3988,1,c	;volatile
  1113                           
  1114                           ;drive_memory.c: 19:   PORTCbits.RC2 = 1;
  1115  003516  8482               	bsf	3970,2,c	;volatile
  1116                           
  1117                           ;drive_memory.c: 20:   PORTCbits.RC1 = 0;
  1118  003518  9282               	bcf	3970,1,c	;volatile
  1119                           
  1120                           ;drive_memory.c: 21:   PORTB = address;
  1121  00351A  C003  FF81         	movff	write_op@address,3969	;volatile
  1122                           
  1123                           ;drive_memory.c: 22:   PORTD = data;
  1124  00351E  C001  FF83         	movff	write_op@data,3971	;volatile
  1125                           
  1126                           ;drive_memory.c: 23:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1127  003522  0E27               	movlw	39
  1128  003524  6E02               	movwf	??_write_op& (0+255),c
  1129  003526  0EFC               	movlw	252
  1130  003528                     u5287:
  1131  003528  FFFF               	dw	65535	; errata NOP
  1132  00352A  2EE8               	decfsz	wreg,f,c
  1133  00352C  D7FD               	bra	u5287
  1134  00352E  2E02               	decfsz	??_write_op& (0+255),f,c
  1135  003530  D7FB               	bra	u5287
  1136                           
  1137                           ;drive_memory.c: 25:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1138  003532  0E27               	movlw	39
  1139  003534  6E02               	movwf	??_write_op& (0+255),c
  1140  003536  0EFC               	movlw	252
  1141  003538                     u5297:
  1142  003538  FFFF               	dw	65535	; errata NOP
  1143  00353A  2EE8               	decfsz	wreg,f,c
  1144  00353C  D7FD               	bra	u5297
  1145  00353E  2E02               	decfsz	??_write_op& (0+255),f,c
  1146  003540  D7FB               	bra	u5297
  1147  003542  0012               	return		;funcret
  1148  003544  FFFF               	dw	65535	; errata NOP
  1149  003546                     __end_of_write_op:
  1150                           	opt callstack 0
  1151                           
  1152 ;; *************** function _int_to_char *****************
  1153 ;; Defined at:
  1154 ;;		line 18 in file "lcd.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  num             4  121[COMRAM] unsigned long 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  result         10   18[BANK0 ] unsigned char [10]
  1159 ;;  the_num         4   28[BANK0 ] unsigned long 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  2  121[COMRAM] PTR unsigned char 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         4       0       0       0       0       0       0
  1170 ;;      Locals:         0      14       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0
  1172 ;;      Totals:         4      14       0       0       0       0       0
  1173 ;;Total ram usage:       18 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:   10
  1176 ;; This function calls:
  1177 ;;		_getchar
  1178 ;;		_sprintf
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;;		_read_op
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text2
  1186  003590                     __ptext2:
  1187                           	opt callstack 0
  1188  003590                     _int_to_char:
  1189                           	opt callstack 0
  1190  003590  FFFF               	dw	65535	; assembler added errata NOP
  1191                           
  1192                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1193                           
  1194                           ;incstack = 0
  1195  003592  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  1196  003596  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  1197  00359A  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  1198  00359E  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  1199                           
  1200                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1201  0035A2  0ECD               	movlw	low int_to_char@result
  1202  0035A4  0100               	movlb	0	; () banked
  1203  0035A6  6FBB               	movwf	sprintf@s& (0+255),b
  1204  0035A8  0E00               	movlw	high int_to_char@result
  1205  0035AA  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  1206  0035AC  0E1D               	movlw	low STR_1
  1207  0035AE  6FBD               	movwf	sprintf@fmt& (0+255),b
  1208  0035B0  0E06               	movlw	high STR_1
  1209  0035B2  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  1210  0035B4  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  1211  0035B8  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  1212  0035BC  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  1213  0035C0  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  1214  0035C4  ECD1  F019         	call	_sprintf	;wreg free
  1215                           
  1216                           ;lcd.c: 22:   getchar();
  1217  0035C8  EC74  F01C         	call	_getchar	;wreg free
  1218                           
  1219                           ;lcd.c: 23:   return result;
  1220  0035CC  0ECD               	movlw	low int_to_char@result
  1221  0035CE  6E7A               	movwf	?_int_to_char,c
  1222  0035D0  0E00               	movlw	high int_to_char@result
  1223  0035D2  6E7B               	movwf	?_int_to_char+1,c
  1224  0035D4  0012               	return		;funcret
  1225  0035D6  FFFF               	dw	65535	; errata NOP
  1226  0035D8                     __end_of_int_to_char:
  1227                           	opt callstack 0
  1228                           
  1229 ;; *************** function _sprintf *****************
  1230 ;; Defined at:
  1231 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1234 ;;		 -> int_to_char@result(10), 
  1235 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1236 ;;		 -> STR_1(4), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1239 ;;  ap              2   16[BANK0 ] PTR void [1]
  1240 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1241 ;;  ret             2    0        int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  2    0[BANK0 ] int 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1251 ;;      Params:         0       8       0       0       0       0       0
  1252 ;;      Locals:         0      10       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0
  1254 ;;      Totals:         0      18       0       0       0       0       0
  1255 ;;Total ram usage:       18 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    9
  1258 ;; This function calls:
  1259 ;;		_vfprintf
  1260 ;; This function is called by:
  1261 ;;		_int_to_char
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text3
  1266  0033A2                     __ptext3:
  1267                           	opt callstack 0
  1268  0033A2                     _sprintf:
  1269                           	opt callstack 0
  1270  0033A2  FFFF               	dw	65535	; assembler added errata NOP
  1271                           
  1272                           ;incstack = 0
  1273  0033A4  0EBF               	movlw	low (?_sprintf+4)
  1274  0033A6  0100               	movlb	0	; () banked
  1275  0033A8  6FCB               	movwf	sprintf@ap& (0+255),b
  1276  0033AA  0E00               	movlw	high (?_sprintf+4)
  1277  0033AC  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1278  0033AE  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  1279  0033B2  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  1280                           
  1281                           ; BSR set to: 0
  1282  0033B6  0E00               	movlw	0
  1283  0033B8  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  1284  0033BA  0E00               	movlw	0
  1285  0033BC  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288  0033BE  0E00               	movlw	0
  1289  0033C0  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  1290  0033C2  0E00               	movlw	0
  1291  0033C4  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  1292                           
  1293                           ; BSR set to: 0
  1294  0033C6  0EC5               	movlw	low sprintf@f
  1295  0033C8  6E72               	movwf	vfprintf@fp,c
  1296  0033CA  0E00               	movlw	high sprintf@f
  1297  0033CC  6E73               	movwf	vfprintf@fp+1,c
  1298  0033CE  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  1299  0033D2  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1300  0033D6  0ECB               	movlw	low sprintf@ap
  1301  0033D8  6E76               	movwf	vfprintf@ap,c
  1302  0033DA  0E00               	movlw	high sprintf@ap
  1303  0033DC  6E77               	movwf	vfprintf@ap+1,c
  1304  0033DE  ECA1  F019         	call	_vfprintf	;wreg free
  1305  0033E2  0100               	movlb	0	; () banked
  1306  0033E4  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  1307  0033E6  25BB               	addwf	sprintf@s& (0+255),w,b
  1308  0033E8  6ED9               	movwf	fsr2l,c
  1309  0033EA  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  1310  0033EC  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1311  0033EE  6EDA               	movwf	fsr2h,c
  1312  0033F0  0E00               	movlw	0
  1313  0033F2  6EDF               	movwf	indf2,c
  1314                           
  1315                           ; BSR set to: 0
  1316  0033F4  0012               	return		;funcret
  1317  0033F6  FFFF               	dw	65535	; errata NOP
  1318  0033F8                     __end_of_sprintf:
  1319                           	opt callstack 0
  1320                           
  1321 ;; *************** function _vfprintf *****************
  1322 ;; Defined at:
  1323 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1326 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1327 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1328 ;;		 -> STR_2(3), STR_1(4), 
  1329 ;;  ap              2  117[COMRAM] PTR PTR void 
  1330 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1333 ;;		 -> STR_2(3), STR_1(4), 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  2  113[COMRAM] int 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1343 ;;      Params:         6       0       0       0       0       0       0
  1344 ;;      Locals:         2       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0
  1346 ;;      Totals:         8       0       0       0       0       0       0
  1347 ;;Total ram usage:        8 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    8
  1350 ;; This function calls:
  1351 ;;		_vfpfcnvrt
  1352 ;; This function is called by:
  1353 ;;		_sprintf
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text4
  1358  003342                     __ptext4:
  1359                           	opt callstack 0
  1360  003342                     _vfprintf:
  1361                           	opt callstack 0
  1362  003342  FFFF               	dw	65535	; assembler added errata NOP
  1363                           
  1364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;incstack = 0
  1368  003344  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1369  003348  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1370                           
  1371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1372  00334C  0E00               	movlw	0
  1373  00334E  0100               	movlb	0	; () banked
  1374  003350  6F90               	movwf	(_nout+1)& (0+255),b
  1375  003352  0E00               	movlw	0
  1376  003354  6F8F               	movwf	_nout& (0+255),b
  1377                           
  1378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1379  003356  D014               	goto	l4138
  1380  003358                     l4136:
  1381  003358  FFFF               	dw	65535	; assembler added errata NOP
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1385  00335A  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1386  00335E  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1387  003362  0E78               	movlw	low vfprintf@cfmt
  1388  003364  6E45               	movwf	vfpfcnvrt@fmt,c
  1389  003366  0E00               	movlw	high vfprintf@cfmt
  1390  003368  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1391  00336A  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1392  00336E  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1393  003372  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1394  003376  5043               	movf	?_vfpfcnvrt,w,c
  1395  003378  0100               	movlb	0	; () banked
  1396  00337A  278F               	addwf	_nout& (0+255),f,b
  1397  00337C  5044               	movf	?_vfpfcnvrt+1,w,c
  1398  00337E  2390               	addwfc	(_nout+1)& (0+255),f,b
  1399  003380                     l4138:
  1400  003380  FFFF               	dw	65535	; assembler added errata NOP
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1404  003382  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1405  003386  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1406  00338A                     	if	0	;tblptru may be non-zero
  1407  00338A                     	endif
  1408  00338A                     	if	0	;tblptru may be non-zero
  1409  00338A                     	endif
  1410  00338A  0008               	tblrd		*
  1411  00338C  FFFF               	dw	65535	; errata NOP
  1412  00338E  50F5               	movf	tablat,w,c
  1413  003390  0900               	iorlw	0
  1414  003392  A4D8               	btfss	status,2,c
  1415  003394  D7E1               	goto	l4136
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1419  003396  C08F  F072         	movff	_nout,?_vfprintf
  1420  00339A  C090  F073         	movff	_nout+1,?_vfprintf+1
  1421                           
  1422                           ; BSR set to: 0
  1423  00339E  0012               	return		;funcret
  1424  0033A0  FFFF               	dw	65535	; errata NOP
  1425  0033A2                     __end_of_vfprintf:
  1426                           	opt callstack 0
  1427                           
  1428 ;; *************** function _vfpfcnvrt *****************
  1429 ;; Defined at:
  1430 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1433 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1434 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1435 ;;		 -> vfprintf@cfmt(2), 
  1436 ;;  ap              2   70[COMRAM] PTR PTR void 
  1437 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  llu             8  105[COMRAM] unsigned long long 
  1440 ;;  ll              8   94[COMRAM] long long 
  1441 ;;  f               4    0        long long 
  1442 ;;  ct              3    0        unsigned char [3]
  1443 ;;  vp              2  102[COMRAM] PTR void 
  1444 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1445 ;;  done            2   88[COMRAM] int 
  1446 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1447 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1448 ;;  i               2    0        int 
  1449 ;;  c               1  104[COMRAM] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  2   66[COMRAM] int 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         6       0       0       0       0       0       0
  1460 ;;      Locals:        27       0       0       0       0       0       0
  1461 ;;      Temps:         14       0       0       0       0       0       0
  1462 ;;      Totals:        47       0       0       0       0       0       0
  1463 ;;Total ram usage:       47 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    7
  1466 ;; This function calls:
  1467 ;;		_atoi
  1468 ;;		_ctoa
  1469 ;;		_dtoa
  1470 ;;		_fputc
  1471 ;;		_isdigit
  1472 ;;		_otoa
  1473 ;;		_stoa
  1474 ;;		_strncmp
  1475 ;;		_utoa
  1476 ;;		_xtoa
  1477 ;; This function is called by:
  1478 ;;		_vfprintf
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text5
  1483  00064C                     __ptext5:
  1484                           	opt callstack 0
  1485  00064C                     _vfpfcnvrt:
  1486                           	opt callstack 0
  1487  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1488                           
  1489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;incstack = 0
  1493  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1494  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1495  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1496  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1497  00065E                     	if	0	;tblptru may be non-zero
  1498  00065E                     	endif
  1499  00065E                     	if	0	;tblptru may be non-zero
  1500  00065E                     	endif
  1501  00065E  0008               	tblrd		*
  1502  000660  FFFF               	dw	65535	; errata NOP
  1503  000662  50F5               	movf	tablat,w,c
  1504  000664  0A25               	xorlw	37
  1505  000666  A4D8               	btfss	status,2,c
  1506  000668  EFD7  F00B         	goto	l4116
  1507                           
  1508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1509  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511  000674  2ADE               	incf	postinc2,f,c
  1512  000676  0E00               	movlw	0
  1513  000678  22DD               	addwfc	postdec2,f,c
  1514                           
  1515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1516  00067A  0E00               	movlw	0
  1517  00067C  0100               	movlb	0	; () banked
  1518  00067E  6F92               	movwf	(_width+1)& (0+255),b
  1519  000680  0E00               	movlw	0
  1520  000682  6F91               	movwf	_width& (0+255),b
  1521  000684  C091  F095         	movff	_width,_flags
  1522  000688  C092  F096         	movff	_width+1,_flags+1
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1526  00068C  6993               	setf	_prec& (0+255),b
  1527  00068E  6994               	setf	(_prec+1)& (0+255),b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1531  000690  0E00               	movlw	0
  1532  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1533  000694  0E00               	movlw	0
  1534  000696  D020               	goto	L1
  1535  000698                     l3758:
  1536  000698  FFFF               	dw	65535	; assembler added errata NOP
  1537                           
  1538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1539  00069A  0100               	movlb	0	; () banked
  1540  00069C  8195               	bsf	_flags& (0+255),0,b
  1541  00069E                     l3760:
  1542  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1546  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1547  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1548  0006A8  2ADE               	incf	postinc2,f,c
  1549  0006AA  0E00               	movlw	0
  1550  0006AC  22DD               	addwfc	postdec2,f,c
  1551                           
  1552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1553  0006AE  D03A               	goto	l3784
  1554  0006B0                     l3762:
  1555  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1556                           
  1557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1558  0006B2  0100               	movlb	0	; () banked
  1559  0006B4  8395               	bsf	_flags& (0+255),1,b
  1560  0006B6  D7F3               	goto	l3760
  1561  0006B8                     l3766:
  1562  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1563                           
  1564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1565  0006BA  0100               	movlb	0	; () banked
  1566  0006BC  8595               	bsf	_flags& (0+255),2,b
  1567  0006BE  D7EF               	goto	l3760
  1568  0006C0                     l3770:
  1569  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1570                           
  1571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1572  0006C2  0100               	movlb	0	; () banked
  1573  0006C4  8795               	bsf	_flags& (0+255),3,b
  1574  0006C6  D7EB               	goto	l3760
  1575  0006C8                     l3774:
  1576  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1577                           
  1578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1579  0006CA  0100               	movlb	0	; () banked
  1580  0006CC  8995               	bsf	_flags& (0+255),4,b
  1581  0006CE  D7E7               	goto	l3760
  1582  0006D0                     l3778:
  1583  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1586  0006D2  0E00               	movlw	0
  1587  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1588  0006D6  0E01               	movlw	1
  1589  0006D8                     L1:
  1590  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1591  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1592                           
  1593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1594  0006DC  D023               	goto	l3784
  1595  0006DE                     l3782:
  1596  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1597  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1598  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1599  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1600  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1601  0006F0                     	if	0	;tblptru may be non-zero
  1602  0006F0                     	endif
  1603  0006F0                     	if	0	;tblptru may be non-zero
  1604  0006F0                     	endif
  1605  0006F0  0008               	tblrd		*
  1606  0006F2  FFFF               	dw	65535	; errata NOP
  1607  0006F4  50F5               	movf	tablat,w,c
  1608  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1609  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1610                           
  1611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 1, Range of values is 0 to 0
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte            4     3 (average)
  1617                           ;	Chosen strategy is simple_byte
  1618  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1619  0006FC  0A00               	xorlw	0	; case 0
  1620  0006FE  A4D8               	btfss	status,2,c
  1621  000700  D7E7               	goto	l3778
  1622                           
  1623                           ; Switch size 1, requested type "simple"
  1624                           ; Number of cases is 5, Range of values is 32 to 48
  1625                           ; switch strategies available:
  1626                           ; Name         Instructions Cycles
  1627                           ; simple_byte           16     9 (average)
  1628                           ;	Chosen strategy is simple_byte
  1629  000702  5049               	movf	??_vfpfcnvrt,w,c
  1630  000704  0A20               	xorlw	32	; case 32
  1631  000706  B4D8               	btfsc	status,2,c
  1632  000708  D7DB               	goto	l3770
  1633  00070A  0A03               	xorlw	3	; case 35
  1634  00070C  B4D8               	btfsc	status,2,c
  1635  00070E  D7DC               	goto	l3774
  1636  000710  0A08               	xorlw	8	; case 43
  1637  000712  B4D8               	btfsc	status,2,c
  1638  000714  D7D1               	goto	l3766
  1639  000716  0A06               	xorlw	6	; case 45
  1640  000718  B4D8               	btfsc	status,2,c
  1641  00071A  D7BE               	goto	l3758
  1642  00071C  0A1D               	xorlw	29	; case 48
  1643  00071E  B4D8               	btfsc	status,2,c
  1644  000720  D7C7               	goto	l3762
  1645  000722  D7D6               	goto	l3778
  1646  000724                     l3784:
  1647  000724  FFFF               	dw	65535	; assembler added errata NOP
  1648                           
  1649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1650  000726  5059               	movf	vfpfcnvrt@done,w,c
  1651  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1652  00072A  B4D8               	btfsc	status,2,c
  1653  00072C  D7D8               	goto	l3782
  1654                           
  1655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1656  00072E  0100               	movlb	0	; () banked
  1657  000730  B195               	btfsc	_flags& (0+255),0,b
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1661  000732  9395               	bcf	_flags& (0+255),1,b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1665  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1668  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1669  000744                     	if	0	;tblptru may be non-zero
  1670  000744                     	endif
  1671  000744                     	if	0	;tblptru may be non-zero
  1672  000744                     	endif
  1673  000744  0008               	tblrd		*
  1674  000746  FFFF               	dw	65535	; errata NOP
  1675  000748  50F5               	movf	tablat,w,c
  1676  00074A  0A2A               	xorlw	42
  1677  00074C  A4D8               	btfss	status,2,c
  1678  00074E  D023               	goto	l3796
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1682  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1683  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1684  000758  2ADE               	incf	postinc2,f,c
  1685  00075A  0E00               	movlw	0
  1686  00075C  22DD               	addwfc	postdec2,f,c
  1687                           
  1688                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1689  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1690  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1691  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1692  00076A  0E02               	movlw	2
  1693  00076C  26DE               	addwf	postinc2,f,c
  1694  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1695  000772  0E00               	movlw	0
  1696  000774  22DD               	addwfc	postdec2,f,c
  1697  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1698  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1699  00077E  CFDE F091          	movff	postinc2,_width
  1700  000782  CFDD F092          	movff	postdec2,_width+1
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  1704  000786  AF92               	btfss	(_width+1)& (0+255),7,b
  1705  000788  D045               	goto	u3870
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  1709  00078A  8195               	bsf	_flags& (0+255),0,b
  1710                           
  1711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  1712  00078C  6D91               	negf	_width& (0+255),b
  1713  00078E  1F92               	comf	(_width+1)& (0+255),f,b
  1714  000790  B0D8               	btfsc	status,0,c
  1715  000792  2B92               	incf	(_width+1)& (0+255),f,b
  1716  000794  D03F               	goto	u3870
  1717  000796                     l3796:
  1718  000796  FFFF               	dw	65535	; assembler added errata NOP
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  1722  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1723  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1724  0007A0  CFDE F008          	movff	postinc2,atoi@s
  1725  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  1726  0007A8  EC68  F013         	call	_atoi	;wreg free
  1727  0007AC  C008  F091         	movff	?_atoi,_width
  1728  0007B0  C009  F092         	movff	?_atoi+1,_width+1
  1729                           
  1730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1731  0007B4  D008               	goto	l3800
  1732  0007B6                     l3798:
  1733  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  1734                           
  1735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  1736  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1737  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1738  0007C0  2ADE               	incf	postinc2,f,c
  1739  0007C2  0E00               	movlw	0
  1740  0007C4  22DD               	addwfc	postdec2,f,c
  1741  0007C6                     l3800:
  1742  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  1743  0007C8  0ED0               	movlw	208
  1744  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1745  0007CC  0EFF               	movlw	255
  1746  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1747  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1748  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1749  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  1750  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  1751  0007E0                     	if	0	;tblptru may be non-zero
  1752  0007E0                     	endif
  1753  0007E0                     	if	0	;tblptru may be non-zero
  1754  0007E0                     	endif
  1755  0007E0  0008               	tblrd		*
  1756  0007E2  FFFF               	dw	65535	; errata NOP
  1757  0007E4  50F5               	movf	tablat,w,c
  1758  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1759  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1760  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  1761  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  1762  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  1763  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1764  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  1765  0007F4  E106               	bnz	u3850
  1766  0007F6  0E0A               	movlw	10
  1767  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1768  0007FA  B0D8               	btfsc	status,0,c
  1769  0007FC  D002               	goto	u3850
  1770  0007FE  0E01               	movlw	1
  1771  000800  D002               	goto	u3860
  1772  000802                     u3850:
  1773  000802  FFFF               	dw	65535	; assembler added errata NOP
  1774  000804  0E00               	movlw	0
  1775  000806                     u3860:
  1776  000806  FFFF               	dw	65535	; assembler added errata NOP
  1777  000808  6E5B               	movwf	_vfpfcnvrt$1191,c
  1778  00080A  6A5C               	clrf	_vfpfcnvrt$1191+1,c
  1779  00080C  505B               	movf	_vfpfcnvrt$1191,w,c
  1780  00080E  105C               	iorwf	_vfpfcnvrt$1191+1,w,c
  1781  000810  A4D8               	btfss	status,2,c
  1782  000812  D7D1               	goto	l3798
  1783  000814                     u3870:
  1784  000814  FFFF               	dw	65535	; assembler added errata NOP
  1785                           
  1786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1787  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1790  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1791  000826                     	if	0	;tblptru may be non-zero
  1792  000826                     	endif
  1793  000826                     	if	0	;tblptru may be non-zero
  1794  000826                     	endif
  1795  000826  0008               	tblrd		*
  1796  000828  FFFF               	dw	65535	; errata NOP
  1797  00082A  50F5               	movf	tablat,w,c
  1798  00082C  0A2E               	xorlw	46
  1799  00082E  A4D8               	btfss	status,2,c
  1800  000830  D075               	goto	u3920
  1801                           
  1802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1803  000832  0E00               	movlw	0
  1804  000834  0100               	movlb	0	; () banked
  1805  000836  6F94               	movwf	(_prec+1)& (0+255),b
  1806  000838  0E00               	movlw	0
  1807  00083A  6F93               	movwf	_prec& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1811  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  000844  2ADE               	incf	postinc2,f,c
  1814  000846  0E00               	movlw	0
  1815  000848  22DD               	addwfc	postdec2,f,c
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1819  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821  000852  CFDE FFF6          	movff	postinc2,tblptrl
  1822  000856  CFDD FFF7          	movff	postdec2,tblptrh
  1823  00085A                     	if	0	;tblptru may be non-zero
  1824  00085A                     	endif
  1825  00085A                     	if	0	;tblptru may be non-zero
  1826  00085A                     	endif
  1827  00085A  0008               	tblrd		*
  1828  00085C  FFFF               	dw	65535	; errata NOP
  1829  00085E  50F5               	movf	tablat,w,c
  1830  000860  0A2A               	xorlw	42
  1831  000862  A4D8               	btfss	status,2,c
  1832  000864  D01C               	goto	l3816
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1836  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1837  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1838  00086E  2ADE               	incf	postinc2,f,c
  1839  000870  0E00               	movlw	0
  1840  000872  22DD               	addwfc	postdec2,f,c
  1841                           
  1842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1843  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1844  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1845  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1846  000880  0E02               	movlw	2
  1847  000882  26DE               	addwf	postinc2,f,c
  1848  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1849  000888  0E00               	movlw	0
  1850  00088A  22DD               	addwfc	postdec2,f,c
  1851  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1852  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1853  000894  CFDE F093          	movff	postinc2,_prec
  1854  000898  CFDD F094          	movff	postdec2,_prec+1
  1855                           
  1856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1857  00089C  D03F               	goto	u3920
  1858  00089E                     l3816:
  1859  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1863  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1864  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1865  0008A8  CFDE F008          	movff	postinc2,atoi@s
  1866  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  1867  0008B0  EC68  F013         	call	_atoi	;wreg free
  1868  0008B4  C008  F093         	movff	?_atoi,_prec
  1869  0008B8  C009  F094         	movff	?_atoi+1,_prec+1
  1870                           
  1871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1872  0008BC  D008               	goto	l3820
  1873  0008BE                     l3818:
  1874  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1877  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879  0008C8  2ADE               	incf	postinc2,f,c
  1880  0008CA  0E00               	movlw	0
  1881  0008CC  22DD               	addwfc	postdec2,f,c
  1882  0008CE                     l3820:
  1883  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1884  0008D0  0ED0               	movlw	208
  1885  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1886  0008D4  0EFF               	movlw	255
  1887  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1888  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1889  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1890  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1891  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1892  0008E8                     	if	0	;tblptru may be non-zero
  1893  0008E8                     	endif
  1894  0008E8                     	if	0	;tblptru may be non-zero
  1895  0008E8                     	endif
  1896  0008E8  0008               	tblrd		*
  1897  0008EA  FFFF               	dw	65535	; errata NOP
  1898  0008EC  50F5               	movf	tablat,w,c
  1899  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1900  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1901  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  1902  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  1903  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  1904  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1905  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  1906  0008FC  E106               	bnz	u3900
  1907  0008FE  0E0A               	movlw	10
  1908  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1909  000902  B0D8               	btfsc	status,0,c
  1910  000904  D002               	goto	u3900
  1911  000906  0E01               	movlw	1
  1912  000908  D002               	goto	u3910
  1913  00090A                     u3900:
  1914  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1915  00090C  0E00               	movlw	0
  1916  00090E                     u3910:
  1917  00090E  FFFF               	dw	65535	; assembler added errata NOP
  1918  000910  6E5D               	movwf	_vfpfcnvrt$1192,c
  1919  000912  6A5E               	clrf	_vfpfcnvrt$1192+1,c
  1920  000914  505D               	movf	_vfpfcnvrt$1192,w,c
  1921  000916  105E               	iorwf	_vfpfcnvrt$1192+1,w,c
  1922  000918  A4D8               	btfss	status,2,c
  1923  00091A  D7D1               	goto	l3818
  1924  00091C                     u3920:
  1925  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1926                           
  1927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  1928  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1929  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1930  000926  CFDE FFF6          	movff	postinc2,tblptrl
  1931  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  1932  00092E                     	if	0	;tblptru may be non-zero
  1933  00092E                     	endif
  1934  00092E                     	if	0	;tblptru may be non-zero
  1935  00092E                     	endif
  1936  00092E  0008               	tblrd		*
  1937  000930  FFFF               	dw	65535	; errata NOP
  1938  000932  50F5               	movf	tablat,w,c
  1939  000934  0A63               	xorlw	99
  1940  000936  A4D8               	btfss	status,2,c
  1941  000938  D027               	goto	l3834
  1942                           
  1943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  1944  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946  000942  2ADE               	incf	postinc2,f,c
  1947  000944  0E00               	movlw	0
  1948  000946  22DD               	addwfc	postdec2,f,c
  1949                           
  1950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1951  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1952  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1953  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1954  000954  0E02               	movlw	2
  1955  000956  26DE               	addwf	postinc2,f,c
  1956  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1957  00095C  0E00               	movlw	0
  1958  00095E  22DD               	addwfc	postdec2,f,c
  1959  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1960  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1961  000968  50DF               	movf	indf2,w,c
  1962  00096A  6E69               	movwf	vfpfcnvrt@c,c
  1963                           
  1964                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  1965  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  1966  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1967  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  1968  000978  EC27  F01A         	call	_ctoa	;wreg free
  1969  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  1970  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1971  000984  EFF3  F00B         	goto	l507
  1972  000988                     l3834:
  1973  000988  FFFF               	dw	65535	; assembler added errata NOP
  1974                           
  1975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  1976  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1977  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1978  000992  CFDE F001          	movff	postinc2,strncmp@_l
  1979  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  1980  00099A  0E05               	movlw	low STR_3
  1981  00099C  6E03               	movwf	strncmp@_r,c
  1982  00099E  0E06               	movlw	high STR_3
  1983  0009A0  6E04               	movwf	strncmp@_r+1,c
  1984  0009A2  0E00               	movlw	0
  1985  0009A4  6E06               	movwf	strncmp@n+1,c
  1986  0009A6  0E03               	movlw	3
  1987  0009A8  6E05               	movwf	strncmp@n,c
  1988  0009AA  ECF2  F017         	call	_strncmp	;wreg free
  1989  0009AE  5001               	movf	?_strncmp,w,c
  1990  0009B0  1002               	iorwf	?_strncmp+1,w,c
  1991  0009B2  B4D8               	btfsc	status,2,c
  1992  0009B4  D016               	goto	u3950
  1993  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  1996  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  1997  0009C6  0E09               	movlw	low STR_7
  1998  0009C8  6E03               	movwf	strncmp@_r,c
  1999  0009CA  0E06               	movlw	high STR_7
  2000  0009CC  6E04               	movwf	strncmp@_r+1,c
  2001  0009CE  0E00               	movlw	0
  2002  0009D0  6E06               	movwf	strncmp@n+1,c
  2003  0009D2  0E03               	movlw	3
  2004  0009D4  6E05               	movwf	strncmp@n,c
  2005  0009D6  ECF2  F017         	call	_strncmp	;wreg free
  2006  0009DA  5001               	movf	?_strncmp,w,c
  2007  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2008  0009DE  A4D8               	btfss	status,2,c
  2009  0009E0  D043               	goto	l3844
  2010  0009E2                     u3950:
  2011  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2012                           
  2013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2014  0009E4  0E03               	movlw	3
  2015  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2016  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2017  0009EE  26DE               	addwf	postinc2,f,c
  2018  0009F0  0E00               	movlw	0
  2019  0009F2  22DD               	addwfc	postdec2,f,c
  2020                           
  2021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2022  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2023  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2024  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2025  000A00  0E02               	movlw	2
  2026  000A02  26DE               	addwf	postinc2,f,c
  2027  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2028  000A08  0E00               	movlw	0
  2029  000A0A  22DD               	addwfc	postdec2,f,c
  2030  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2031  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2032  000A14  50DF               	movf	indf2,w,c
  2033  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2034  000A18  0E00               	movlw	0
  2035  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2036  000A1C  0EFF               	movlw	-1
  2037  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2038  000A20                     L2:
  2039  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2040  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2041  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2042  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2043  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2044  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2045  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2046  000A2E                     l3840:
  2047  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2048                           
  2049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2050  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2051  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2052  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2053  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2054  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2055  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2056  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2057  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2058  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2059  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2060  000A58  EC59  F00F         	call	_dtoa	;wreg free
  2061  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2062  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2063  000A64  EFF3  F00B         	goto	l507
  2064  000A68                     l3844:
  2065  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2066                           
  2067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2068  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2069  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2070  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2071  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2072  000A7A  0E06               	movlw	low (STR_3+1)
  2073  000A7C  6E03               	movwf	strncmp@_r,c
  2074  000A7E  0E06               	movlw	high (STR_3+1)
  2075  000A80  6E04               	movwf	strncmp@_r+1,c
  2076  000A82  0E00               	movlw	0
  2077  000A84  6E06               	movwf	strncmp@n+1,c
  2078  000A86  0E02               	movlw	2
  2079  000A88  6E05               	movwf	strncmp@n,c
  2080  000A8A  ECF2  F017         	call	_strncmp	;wreg free
  2081  000A8E  5001               	movf	?_strncmp,w,c
  2082  000A90  1002               	iorwf	?_strncmp+1,w,c
  2083  000A92  B4D8               	btfsc	status,2,c
  2084  000A94  D016               	goto	u3970
  2085  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2088  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2089  000AA6  0E0A               	movlw	low (STR_7+1)
  2090  000AA8  6E03               	movwf	strncmp@_r,c
  2091  000AAA  0E06               	movlw	high (STR_7+1)
  2092  000AAC  6E04               	movwf	strncmp@_r+1,c
  2093  000AAE  0E00               	movlw	0
  2094  000AB0  6E06               	movwf	strncmp@n+1,c
  2095  000AB2  0E02               	movlw	2
  2096  000AB4  6E05               	movwf	strncmp@n,c
  2097  000AB6  ECF2  F017         	call	_strncmp	;wreg free
  2098  000ABA  5001               	movf	?_strncmp,w,c
  2099  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2100  000ABE  A4D8               	btfss	status,2,c
  2101  000AC0  D008               	goto	l3854
  2102  000AC2                     u3970:
  2103  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2104                           
  2105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2106  000AC4  0E02               	movlw	2
  2107  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2108  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2109  000ACE  26DE               	addwf	postinc2,f,c
  2110  000AD0  D023               	goto	L12
  2111  000AD2                     l3854:
  2112  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2113                           
  2114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2115  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2118  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2119  000AE4                     	if	0	;tblptru may be non-zero
  2120  000AE4                     	endif
  2121  000AE4                     	if	0	;tblptru may be non-zero
  2122  000AE4                     	endif
  2123  000AE4  0008               	tblrd		*
  2124  000AE6  FFFF               	dw	65535	; errata NOP
  2125  000AE8  50F5               	movf	tablat,w,c
  2126  000AEA  0A64               	xorlw	100
  2127  000AEC  B4D8               	btfsc	status,2,c
  2128  000AEE  D00E               	goto	u3990
  2129  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2132  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2133  000B00                     	if	0	;tblptru may be non-zero
  2134  000B00                     	endif
  2135  000B00                     	if	0	;tblptru may be non-zero
  2136  000B00                     	endif
  2137  000B00  0008               	tblrd		*
  2138  000B02  FFFF               	dw	65535	; errata NOP
  2139  000B04  50F5               	movf	tablat,w,c
  2140  000B06  0A69               	xorlw	105
  2141  000B08  A4D8               	btfss	status,2,c
  2142  000B0A  D021               	goto	l3864
  2143  000B0C                     u3990:
  2144  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2145                           
  2146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2147  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  000B16  2ADE               	incf	postinc2,f,c
  2150  000B18                     L12:
  2151  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2152  000B1A  0E00               	movlw	0
  2153  000B1C  22DD               	addwfc	postdec2,f,c
  2154                           
  2155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2156  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2157  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2158  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2159  000B2A  0E02               	movlw	2
  2160  000B2C  26DE               	addwf	postinc2,f,c
  2161  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2162  000B32  0E00               	movlw	0
  2163  000B34  22DD               	addwfc	postdec2,f,c
  2164  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2165  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2166  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2167  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2168  000B46  0E00               	movlw	0
  2169  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2170  000B4A  0EFF               	movlw	-1
  2171  000B4C  D769               	goto	L2
  2172  000B4E                     l3864:
  2173  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2174                           
  2175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2176  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2177  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2178  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2179  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2180  000B60  0E27               	movlw	low STR_21
  2181  000B62  6E03               	movwf	strncmp@_r,c
  2182  000B64  0E06               	movlw	high STR_21
  2183  000B66  6E04               	movwf	strncmp@_r+1,c
  2184  000B68  0E00               	movlw	0
  2185  000B6A  6E06               	movwf	strncmp@n+1,c
  2186  000B6C  0E02               	movlw	2
  2187  000B6E  6E05               	movwf	strncmp@n,c
  2188  000B70  ECF2  F017         	call	_strncmp	;wreg free
  2189  000B74  5001               	movf	?_strncmp,w,c
  2190  000B76  1002               	iorwf	?_strncmp+1,w,c
  2191  000B78  B4D8               	btfsc	status,2,c
  2192  000B7A  D016               	goto	u4010
  2193  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2194  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2195  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2196  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2197  000B8C  0E2D               	movlw	low STR_25
  2198  000B8E  6E03               	movwf	strncmp@_r,c
  2199  000B90  0E06               	movlw	high STR_25
  2200  000B92  6E04               	movwf	strncmp@_r+1,c
  2201  000B94  0E00               	movlw	0
  2202  000B96  6E06               	movwf	strncmp@n+1,c
  2203  000B98  0E02               	movlw	2
  2204  000B9A  6E05               	movwf	strncmp@n,c
  2205  000B9C  ECF2  F017         	call	_strncmp	;wreg free
  2206  000BA0  5001               	movf	?_strncmp,w,c
  2207  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2208  000BA4  A4D8               	btfss	status,2,c
  2209  000BA6  D043               	goto	l3874
  2210  000BA8                     u4010:
  2211  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2212                           
  2213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2214  000BAA  0E02               	movlw	2
  2215  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217  000BB4  26DE               	addwf	postinc2,f,c
  2218  000BB6  0E00               	movlw	0
  2219  000BB8  22DD               	addwfc	postdec2,f,c
  2220                           
  2221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2222  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2223  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2224  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2225  000BC6  0E04               	movlw	4
  2226  000BC8  26DE               	addwf	postinc2,f,c
  2227  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2228  000BCE  0E00               	movlw	0
  2229  000BD0  22DD               	addwfc	postdec2,f,c
  2230  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2231  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2232  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2233  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2234  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2235  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2236  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2237  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2238  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2239  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2240  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2241  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2242  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2243  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2244  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2245  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2246  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2247  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2248  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2249  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2250  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2251  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2252  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2253  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2254  000C2C  D700               	goto	l3840
  2255  000C2E                     l3874:
  2256  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2257                           
  2258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2259  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2262  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2263  000C40  0E2A               	movlw	low STR_30
  2264  000C42  6E03               	movwf	strncmp@_r,c
  2265  000C44  0E06               	movlw	high STR_30
  2266  000C46  6E04               	movwf	strncmp@_r+1,c
  2267  000C48  0E00               	movlw	0
  2268  000C4A  6E06               	movwf	strncmp@n+1,c
  2269  000C4C  0E02               	movlw	2
  2270  000C4E  6E05               	movwf	strncmp@n,c
  2271  000C50  ECF2  F017         	call	_strncmp	;wreg free
  2272  000C54  5001               	movf	?_strncmp,w,c
  2273  000C56  1002               	iorwf	?_strncmp+1,w,c
  2274  000C58  B4D8               	btfsc	status,2,c
  2275  000C5A  D016               	goto	u4030
  2276  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2279  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2280  000C6C  0E30               	movlw	low STR_34
  2281  000C6E  6E03               	movwf	strncmp@_r,c
  2282  000C70  0E06               	movlw	high STR_34
  2283  000C72  6E04               	movwf	strncmp@_r+1,c
  2284  000C74  0E00               	movlw	0
  2285  000C76  6E06               	movwf	strncmp@n+1,c
  2286  000C78  0E02               	movlw	2
  2287  000C7A  6E05               	movwf	strncmp@n,c
  2288  000C7C  ECF2  F017         	call	_strncmp	;wreg free
  2289  000C80  5001               	movf	?_strncmp,w,c
  2290  000C82  1002               	iorwf	?_strncmp+1,w,c
  2291  000C84  A4D8               	btfss	status,2,c
  2292  000C86  D028               	goto	l3884
  2293  000C88                     u4030:
  2294  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2295                           
  2296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2297  000C8A  0E02               	movlw	2
  2298  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300  000C94  26DE               	addwf	postinc2,f,c
  2301  000C96  0E00               	movlw	0
  2302  000C98  22DD               	addwfc	postdec2,f,c
  2303                           
  2304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2305  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2306  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2307  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2308  000CA6  0E02               	movlw	2
  2309  000CA8  26DE               	addwf	postinc2,f,c
  2310  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2311  000CAE  0E00               	movlw	0
  2312  000CB0  22DD               	addwfc	postdec2,f,c
  2313  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2314  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2315  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2316  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2317  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2318  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2319  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2320  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2321  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2322  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2323  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2324  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2325  000CD6  D6AB               	goto	l3840
  2326  000CD8                     l3884:
  2327  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2328                           
  2329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2330  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2331  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2332  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2333  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2334  000CEA  0E11               	movlw	low STR_39
  2335  000CEC  6E03               	movwf	strncmp@_r,c
  2336  000CEE  0E06               	movlw	high STR_39
  2337  000CF0  6E04               	movwf	strncmp@_r+1,c
  2338  000CF2  0E00               	movlw	0
  2339  000CF4  6E06               	movwf	strncmp@n+1,c
  2340  000CF6  0E03               	movlw	3
  2341  000CF8  6E05               	movwf	strncmp@n,c
  2342  000CFA  ECF2  F017         	call	_strncmp	;wreg free
  2343  000CFE  5001               	movf	?_strncmp,w,c
  2344  000D00  1002               	iorwf	?_strncmp+1,w,c
  2345  000D02  A4D8               	btfss	status,2,c
  2346  000D04  D041               	goto	l3892
  2347                           
  2348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2349  000D06  0E03               	movlw	3
  2350  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  000D10  26DE               	addwf	postinc2,f,c
  2353  000D12  0E00               	movlw	0
  2354  000D14  22DD               	addwfc	postdec2,f,c
  2355                           
  2356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2357  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2358  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2359  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2360  000D22  0E02               	movlw	2
  2361  000D24  26DE               	addwf	postinc2,f,c
  2362  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2363  000D2A  0E00               	movlw	0
  2364  000D2C  22DD               	addwfc	postdec2,f,c
  2365  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2366  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2367  000D36  50DF               	movf	indf2,w,c
  2368  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2369  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2370  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2371  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2372  000D40                     L3:
  2373  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2374  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2375  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2376  000D46                     L4:
  2377  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2378  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2379  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2380  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2381  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2382                           
  2383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2384  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2385  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2386  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2387  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2388  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2389  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2390  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2391  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2392  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2393  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2394  000D78  EC9B  F012         	call	_otoa	;wreg free
  2395  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2396  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2397  000D84  EFF3  F00B         	goto	l507
  2398  000D88                     l3892:
  2399  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2400                           
  2401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2402  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2403  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2404  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2405  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2406  000D9A  0E12               	movlw	low (STR_39+1)
  2407  000D9C  6E03               	movwf	strncmp@_r,c
  2408  000D9E  0E06               	movlw	high (STR_39+1)
  2409  000DA0  6E04               	movwf	strncmp@_r+1,c
  2410  000DA2  0E00               	movlw	0
  2411  000DA4  6E06               	movwf	strncmp@n+1,c
  2412  000DA6  0E02               	movlw	2
  2413  000DA8  6E05               	movwf	strncmp@n,c
  2414  000DAA  ECF2  F017         	call	_strncmp	;wreg free
  2415  000DAE  5001               	movf	?_strncmp,w,c
  2416  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2417  000DB2  B4D8               	btfsc	status,2,c
  2418  000DB4  D06B               	goto	u4080
  2419                           
  2420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2421                           
  2422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2423                           
  2424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2425  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2426  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2427  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2428  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2429  000DC6                     	if	0	;tblptru may be non-zero
  2430  000DC6                     	endif
  2431  000DC6                     	if	0	;tblptru may be non-zero
  2432  000DC6                     	endif
  2433  000DC6  0008               	tblrd		*
  2434  000DC8  FFFF               	dw	65535	; errata NOP
  2435  000DCA  50F5               	movf	tablat,w,c
  2436  000DCC  0A6F               	xorlw	111
  2437  000DCE  A4D8               	btfss	status,2,c
  2438  000DD0  D006               	goto	l3908
  2439                           
  2440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2441  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443  000DDA  2ADE               	incf	postinc2,f,c
  2444  000DDC  D05E               	goto	L17
  2445  000DDE                     l3908:
  2446  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2447                           
  2448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2449  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2452  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2453  000DF0  0E39               	movlw	low STR_49
  2454  000DF2  6E03               	movwf	strncmp@_r,c
  2455  000DF4  0E06               	movlw	high STR_49
  2456  000DF6  6E04               	movwf	strncmp@_r+1,c
  2457  000DF8  0E00               	movlw	0
  2458  000DFA  6E06               	movwf	strncmp@n+1,c
  2459  000DFC  0E02               	movlw	2
  2460  000DFE  6E05               	movwf	strncmp@n,c
  2461  000E00  ECF2  F017         	call	_strncmp	;wreg free
  2462  000E04  5001               	movf	?_strncmp,w,c
  2463  000E06  1002               	iorwf	?_strncmp+1,w,c
  2464  000E08  A4D8               	btfss	status,2,c
  2465  000E0A  D029               	goto	l3916
  2466                           
  2467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2468  000E0C  0E02               	movlw	2
  2469  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2470  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2471  000E16  26DE               	addwf	postinc2,f,c
  2472  000E18  0E00               	movlw	0
  2473  000E1A  22DD               	addwfc	postdec2,f,c
  2474                           
  2475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2476  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2477  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2478  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2479  000E28  0E04               	movlw	4
  2480  000E2A  26DE               	addwf	postinc2,f,c
  2481  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2482  000E30  0E00               	movlw	0
  2483  000E32  22DD               	addwfc	postdec2,f,c
  2484  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2485  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2486  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2487  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2488  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2489  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2490  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2491  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2492  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2493  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2494  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2495  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2496  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2497  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2498  000E5C  D774               	goto	L4
  2499  000E5E                     l3916:
  2500  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2501                           
  2502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2503  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2504  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2505  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2506  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2507  000E70  0E3C               	movlw	low STR_54
  2508  000E72  6E03               	movwf	strncmp@_r,c
  2509  000E74  0E06               	movlw	high STR_54
  2510  000E76  6E04               	movwf	strncmp@_r+1,c
  2511  000E78  0E00               	movlw	0
  2512  000E7A  6E06               	movwf	strncmp@n+1,c
  2513  000E7C  0E02               	movlw	2
  2514  000E7E  6E05               	movwf	strncmp@n,c
  2515  000E80  ECF2  F017         	call	_strncmp	;wreg free
  2516  000E84  5001               	movf	?_strncmp,w,c
  2517  000E86  1002               	iorwf	?_strncmp+1,w,c
  2518  000E88  A4D8               	btfss	status,2,c
  2519  000E8A  D023               	goto	l3924
  2520  000E8C                     u4080:
  2521  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2522                           
  2523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2524  000E8E  0E02               	movlw	2
  2525  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527  000E98  26DE               	addwf	postinc2,f,c
  2528  000E9A                     L17:
  2529  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2530  000E9C  0E00               	movlw	0
  2531  000E9E  22DD               	addwfc	postdec2,f,c
  2532                           
  2533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2534  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2535  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2536  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2537  000EAC  0E02               	movlw	2
  2538  000EAE  26DE               	addwf	postinc2,f,c
  2539  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2540  000EB4  0E00               	movlw	0
  2541  000EB6  22DD               	addwfc	postdec2,f,c
  2542  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2543  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2544  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2545  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2546  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2547  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2548  000ED0  D737               	goto	L3
  2549  000ED2                     l3924:
  2550  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2551                           
  2552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2553  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2554  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2555  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2556  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2557  000EE4  0E0D               	movlw	low STR_59
  2558  000EE6  6E03               	movwf	strncmp@_r,c
  2559  000EE8  0E06               	movlw	high STR_59
  2560  000EEA  6E04               	movwf	strncmp@_r+1,c
  2561  000EEC  0E00               	movlw	0
  2562  000EEE  6E06               	movwf	strncmp@n+1,c
  2563  000EF0  0E03               	movlw	3
  2564  000EF2  6E05               	movwf	strncmp@n,c
  2565  000EF4  ECF2  F017         	call	_strncmp	;wreg free
  2566  000EF8  5001               	movf	?_strncmp,w,c
  2567  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2568  000EFC  A4D8               	btfss	status,2,c
  2569  000EFE  D028               	goto	l3934
  2570                           
  2571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2572  000F00  0E03               	movlw	3
  2573  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2574  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2575  000F0A  26DE               	addwf	postinc2,f,c
  2576  000F0C  0E00               	movlw	0
  2577  000F0E  22DD               	addwfc	postdec2,f,c
  2578                           
  2579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2580  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2581  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2582  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2583  000F1C  0E02               	movlw	2
  2584  000F1E  26DE               	addwf	postinc2,f,c
  2585  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2586  000F24  0E00               	movlw	0
  2587  000F26  22DD               	addwfc	postdec2,f,c
  2588  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2589  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2590  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2591  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2592                           
  2593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2594  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2595  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2596  000F40  C08F  FFDF         	movff	_nout,indf2
  2597  000F44                     l3930:
  2598  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2599                           
  2600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2601  000F46  0E00               	movlw	0
  2602  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2603  000F4A  0E00               	movlw	0
  2604  000F4C  EFCA  F00B         	goto	L5
  2605  000F50                     l3934:
  2606  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2607                           
  2608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2609  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2612  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2613  000F62  0E0E               	movlw	low (STR_59+1)
  2614  000F64  6E03               	movwf	strncmp@_r,c
  2615  000F66  0E06               	movlw	high (STR_59+1)
  2616  000F68  6E04               	movwf	strncmp@_r+1,c
  2617  000F6A  0E00               	movlw	0
  2618  000F6C  6E06               	movwf	strncmp@n+1,c
  2619  000F6E  0E02               	movlw	2
  2620  000F70  6E05               	movwf	strncmp@n,c
  2621  000F72  ECF2  F017         	call	_strncmp	;wreg free
  2622  000F76  5001               	movf	?_strncmp,w,c
  2623  000F78  1002               	iorwf	?_strncmp+1,w,c
  2624  000F7A  A4D8               	btfss	status,2,c
  2625  000F7C  D00B               	goto	l3944
  2626  000F7E  D07F               	goto	u4130
  2627  000F80                     l3938:
  2628  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2629                           
  2630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2631  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2632  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2633  000F8A  C08F  FFDE         	movff	_nout,postinc2
  2634  000F8E  C090  FFDD         	movff	_nout+1,postdec2
  2635  000F92  D7D8               	goto	l3930
  2636  000F94                     l3944:
  2637  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2638                           
  2639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2640  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2641  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2642  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2643  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2644  000FA6                     	if	0	;tblptru may be non-zero
  2645  000FA6                     	endif
  2646  000FA6                     	if	0	;tblptru may be non-zero
  2647  000FA6                     	endif
  2648  000FA6  0008               	tblrd		*
  2649  000FA8  FFFF               	dw	65535	; errata NOP
  2650  000FAA  50F5               	movf	tablat,w,c
  2651  000FAC  0A6E               	xorlw	110
  2652  000FAE  A4D8               	btfss	status,2,c
  2653  000FB0  D006               	goto	l3954
  2654                           
  2655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2656  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2657  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2658  000FBA  2ADE               	incf	postinc2,f,c
  2659  000FBC  D067               	goto	L14
  2660  000FBE                     l3954:
  2661  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2662                           
  2663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2664  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2665  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2666  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2667  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2668  000FD0  0E33               	movlw	low STR_69
  2669  000FD2  6E03               	movwf	strncmp@_r,c
  2670  000FD4  0E06               	movlw	high STR_69
  2671  000FD6  6E04               	movwf	strncmp@_r+1,c
  2672  000FD8  0E00               	movlw	0
  2673  000FDA  6E06               	movwf	strncmp@n+1,c
  2674  000FDC  0E02               	movlw	2
  2675  000FDE  6E05               	movwf	strncmp@n,c
  2676  000FE0  ECF2  F017         	call	_strncmp	;wreg free
  2677  000FE4  5001               	movf	?_strncmp,w,c
  2678  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2679  000FE8  A4D8               	btfss	status,2,c
  2680  000FEA  D032               	goto	l3964
  2681                           
  2682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2683  000FEC  0E02               	movlw	2
  2684  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2685  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2686  000FF6  26DE               	addwf	postinc2,f,c
  2687  000FF8  0E00               	movlw	0
  2688  000FFA  22DD               	addwfc	postdec2,f,c
  2689                           
  2690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2691  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2692  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2693  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2694  001008  0E02               	movlw	2
  2695  00100A  26DE               	addwf	postinc2,f,c
  2696  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2697  001010  0E00               	movlw	0
  2698  001012  22DD               	addwfc	postdec2,f,c
  2699  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2700  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2701  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2702  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2703                           
  2704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2705  001024  C08F  F049         	movff	_nout,??_vfpfcnvrt
  2706  001028  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2707  00102C  0E00               	movlw	0
  2708  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2709  001030  0EFF               	movlw	255
  2710  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2711  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2712  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2713  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2714  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2715  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2716  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2717  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2718  00104E  D77A               	goto	l3930
  2719  001050                     l3964:
  2720  001050  FFFF               	dw	65535	; assembler added errata NOP
  2721                           
  2722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2723  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2724  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2725  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  2726  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2727  001062  0E36               	movlw	low STR_74
  2728  001064  6E03               	movwf	strncmp@_r,c
  2729  001066  0E06               	movlw	high STR_74
  2730  001068  6E04               	movwf	strncmp@_r+1,c
  2731  00106A  0E00               	movlw	0
  2732  00106C  6E06               	movwf	strncmp@n+1,c
  2733  00106E  0E02               	movlw	2
  2734  001070  6E05               	movwf	strncmp@n,c
  2735  001072  ECF2  F017         	call	_strncmp	;wreg free
  2736  001076  5001               	movf	?_strncmp,w,c
  2737  001078  1002               	iorwf	?_strncmp+1,w,c
  2738  00107A  A4D8               	btfss	status,2,c
  2739  00107C  D01F               	goto	l3974
  2740  00107E                     u4130:
  2741  00107E  FFFF               	dw	65535	; assembler added errata NOP
  2742                           
  2743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  2744  001080  0E02               	movlw	2
  2745  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2746  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2747  00108A  26DE               	addwf	postinc2,f,c
  2748  00108C                     L14:
  2749  00108C  FFFF               	dw	65535	; assembler added errata NOP
  2750  00108E  0E00               	movlw	0
  2751  001090  22DD               	addwfc	postdec2,f,c
  2752                           
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2754  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2755  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2756  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2757  00109E  0E02               	movlw	2
  2758  0010A0  26DE               	addwf	postinc2,f,c
  2759  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2760  0010A6  0E00               	movlw	0
  2761  0010A8  22DD               	addwfc	postdec2,f,c
  2762  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2763  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2764  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2765  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2766  0010BA  D762               	goto	l3938
  2767  0010BC                     l3974:
  2768  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2769                           
  2770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  2771  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2772  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2773  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  2774  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  2775  0010CE                     	if	0	;tblptru may be non-zero
  2776  0010CE                     	endif
  2777  0010CE                     	if	0	;tblptru may be non-zero
  2778  0010CE                     	endif
  2779  0010CE  0008               	tblrd		*
  2780  0010D0  FFFF               	dw	65535	; errata NOP
  2781  0010D2  50F5               	movf	tablat,w,c
  2782  0010D4  0A70               	xorlw	112
  2783  0010D6  A4D8               	btfss	status,2,c
  2784  0010D8  D03E               	goto	l3982
  2785                           
  2786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  2787  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2788  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2789  0010E2  2ADE               	incf	postinc2,f,c
  2790  0010E4  0E00               	movlw	0
  2791  0010E6  22DD               	addwfc	postdec2,f,c
  2792                           
  2793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2794  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2795  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2796  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2797  0010F4  0E02               	movlw	2
  2798  0010F6  26DE               	addwf	postinc2,f,c
  2799  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2800  0010FC  0E00               	movlw	0
  2801  0010FE  22DD               	addwfc	postdec2,f,c
  2802  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2803  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2804  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2805  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2806  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2807  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2808  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2809  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2810  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2811  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2812  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  2813  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  2814                           
  2815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  2816  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2817  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2818  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2819  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2820  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2821  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2822  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2823  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2824  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2825  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2826  00114C  0E78               	movlw	120
  2827  00114E  6E26               	movwf	xtoa@x,c
  2828  001150  EC8E  F010         	call	_xtoa	;wreg free
  2829  001154  D1B4               	goto	L7
  2830  001156                     l3982:
  2831  001156  FFFF               	dw	65535	; assembler added errata NOP
  2832                           
  2833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  2834  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2835  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2836  001160  CFDE FFF6          	movff	postinc2,tblptrl
  2837  001164  CFDD FFF7          	movff	postdec2,tblptrh
  2838  001168                     	if	0	;tblptru may be non-zero
  2839  001168                     	endif
  2840  001168                     	if	0	;tblptru may be non-zero
  2841  001168                     	endif
  2842  001168  0008               	tblrd		*
  2843  00116A  FFFF               	dw	65535	; errata NOP
  2844  00116C  50F5               	movf	tablat,w,c
  2845  00116E  0A73               	xorlw	115
  2846  001170  A4D8               	btfss	status,2,c
  2847  001172  D02A               	goto	l3990
  2848                           
  2849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  2850  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2851  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  00117C  2ADE               	incf	postinc2,f,c
  2853  00117E  0E00               	movlw	0
  2854  001180  22DD               	addwfc	postdec2,f,c
  2855                           
  2856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  2857  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2858  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2859  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2860  00118E  0E02               	movlw	2
  2861  001190  26DE               	addwf	postinc2,f,c
  2862  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2863  001196  0E00               	movlw	0
  2864  001198  22DD               	addwfc	postdec2,f,c
  2865  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2866  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2867  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  2868  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  2869                           
  2870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  2871  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2872  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2873  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2874  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2875  0011BA  EC77  F015         	call	_stoa	;wreg free
  2876  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2877  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2878  0011C6  D30F               	goto	l507
  2879  0011C8                     l3990:
  2880  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  2881                           
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2883  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  2886  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2887  0011DA  0E15               	movlw	low STR_79
  2888  0011DC  6E03               	movwf	strncmp@_r,c
  2889  0011DE  0E06               	movlw	high STR_79
  2890  0011E0  6E04               	movwf	strncmp@_r+1,c
  2891  0011E2  0E00               	movlw	0
  2892  0011E4  6E06               	movwf	strncmp@n+1,c
  2893  0011E6  0E03               	movlw	3
  2894  0011E8  6E05               	movwf	strncmp@n,c
  2895  0011EA  ECF2  F017         	call	_strncmp	;wreg free
  2896  0011EE  5001               	movf	?_strncmp,w,c
  2897  0011F0  1002               	iorwf	?_strncmp+1,w,c
  2898  0011F2  A4D8               	btfss	status,2,c
  2899  0011F4  D040               	goto	l3998
  2900                           
  2901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  2902  0011F6  0E03               	movlw	3
  2903  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905  001200  26DE               	addwf	postinc2,f,c
  2906  001202  0E00               	movlw	0
  2907  001204  22DD               	addwfc	postdec2,f,c
  2908                           
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2910  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2911  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2912  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2913  001212  0E02               	movlw	2
  2914  001214  26DE               	addwf	postinc2,f,c
  2915  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2916  00121A  0E00               	movlw	0
  2917  00121C  22DD               	addwfc	postdec2,f,c
  2918  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2919  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2920  001226  50DF               	movf	indf2,w,c
  2921  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2922  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  2923  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  2924  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2925  001230                     L8:
  2926  001230  FFFF               	dw	65535	; assembler added errata NOP
  2927  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2928  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2929  001236                     L9:
  2930  001236  FFFF               	dw	65535	; assembler added errata NOP
  2931  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2932  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2933  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2934  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2935                           
  2936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  2937  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2938  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2939  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2940  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2941  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2942  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2943  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2944  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2945  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2946  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2947  001268  ECBA  F011         	call	_utoa	;wreg free
  2948  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  2949  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  2950  001274  D2B8               	goto	l507
  2951  001276                     l3998:
  2952  001276  FFFF               	dw	65535	; assembler added errata NOP
  2953                           
  2954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  2955  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957  001280  CFDE F001          	movff	postinc2,strncmp@_l
  2958  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  2959  001288  0E16               	movlw	low (STR_79+1)
  2960  00128A  6E03               	movwf	strncmp@_r,c
  2961  00128C  0E06               	movlw	high (STR_79+1)
  2962  00128E  6E04               	movwf	strncmp@_r+1,c
  2963  001290  0E00               	movlw	0
  2964  001292  6E06               	movwf	strncmp@n+1,c
  2965  001294  0E02               	movlw	2
  2966  001296  6E05               	movwf	strncmp@n,c
  2967  001298  ECF2  F017         	call	_strncmp	;wreg free
  2968  00129C  5001               	movf	?_strncmp,w,c
  2969  00129E  1002               	iorwf	?_strncmp+1,w,c
  2970  0012A0  B4D8               	btfsc	status,2,c
  2971  0012A2  D06B               	goto	u4200
  2972                           
  2973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  2974                           
  2975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2976                           
  2977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  2978  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  2981  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  2982  0012B4                     	if	0	;tblptru may be non-zero
  2983  0012B4                     	endif
  2984  0012B4                     	if	0	;tblptru may be non-zero
  2985  0012B4                     	endif
  2986  0012B4  0008               	tblrd		*
  2987  0012B6  FFFF               	dw	65535	; errata NOP
  2988  0012B8  50F5               	movf	tablat,w,c
  2989  0012BA  0A75               	xorlw	117
  2990  0012BC  A4D8               	btfss	status,2,c
  2991  0012BE  D006               	goto	l4014
  2992                           
  2993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  2994  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2995  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2996  0012C8  2ADE               	incf	postinc2,f,c
  2997  0012CA  D05E               	goto	L18
  2998  0012CC                     l4014:
  2999  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3000                           
  3001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3002  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3003  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3004  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3005  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3006  0012DE  0E1E               	movlw	low (STR_1+1)
  3007  0012E0  6E03               	movwf	strncmp@_r,c
  3008  0012E2  0E06               	movlw	high (STR_1+1)
  3009  0012E4  6E04               	movwf	strncmp@_r+1,c
  3010  0012E6  0E00               	movlw	0
  3011  0012E8  6E06               	movwf	strncmp@n+1,c
  3012  0012EA  0E02               	movlw	2
  3013  0012EC  6E05               	movwf	strncmp@n,c
  3014  0012EE  ECF2  F017         	call	_strncmp	;wreg free
  3015  0012F2  5001               	movf	?_strncmp,w,c
  3016  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3017  0012F6  A4D8               	btfss	status,2,c
  3018  0012F8  D029               	goto	l4022
  3019                           
  3020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3021  0012FA  0E02               	movlw	2
  3022  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3023  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3024  001304  26DE               	addwf	postinc2,f,c
  3025  001306  0E00               	movlw	0
  3026  001308  22DD               	addwfc	postdec2,f,c
  3027                           
  3028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3029  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3030  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3031  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3032  001316  0E04               	movlw	4
  3033  001318  26DE               	addwf	postinc2,f,c
  3034  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3035  00131E  0E00               	movlw	0
  3036  001320  22DD               	addwfc	postdec2,f,c
  3037  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3038  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3039  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3040  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3041  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3042  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3043  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3044  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3045  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3046  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3047  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3048  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3049  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3050  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3051  00134A  D775               	goto	L9
  3052  00134C                     l4022:
  3053  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3054                           
  3055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3056  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3057  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3058  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3059  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3060  00135E  0E3F               	movlw	low STR_94
  3061  001360  6E03               	movwf	strncmp@_r,c
  3062  001362  0E06               	movlw	high STR_94
  3063  001364  6E04               	movwf	strncmp@_r+1,c
  3064  001366  0E00               	movlw	0
  3065  001368  6E06               	movwf	strncmp@n+1,c
  3066  00136A  0E02               	movlw	2
  3067  00136C  6E05               	movwf	strncmp@n,c
  3068  00136E  ECF2  F017         	call	_strncmp	;wreg free
  3069  001372  5001               	movf	?_strncmp,w,c
  3070  001374  1002               	iorwf	?_strncmp+1,w,c
  3071  001376  A4D8               	btfss	status,2,c
  3072  001378  D023               	goto	l4030
  3073  00137A                     u4200:
  3074  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3075                           
  3076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3077  00137C  0E02               	movlw	2
  3078  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3079  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3080  001386  26DE               	addwf	postinc2,f,c
  3081  001388                     L18:
  3082  001388  FFFF               	dw	65535	; assembler added errata NOP
  3083  00138A  0E00               	movlw	0
  3084  00138C  22DD               	addwfc	postdec2,f,c
  3085                           
  3086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3087  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3088  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3089  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3090  00139A  0E02               	movlw	2
  3091  00139C  26DE               	addwf	postinc2,f,c
  3092  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3093  0013A2  0E00               	movlw	0
  3094  0013A4  22DD               	addwfc	postdec2,f,c
  3095  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3096  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3097  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3098  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3099  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3100  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3101  0013BE  D738               	goto	L8
  3102  0013C0                     l4030:
  3103  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3104                           
  3105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3106  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3107  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3108  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3109  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3110  0013D2  0E19               	movlw	low STR_99
  3111  0013D4  6E03               	movwf	strncmp@_r,c
  3112  0013D6  0E06               	movlw	high STR_99
  3113  0013D8  6E04               	movwf	strncmp@_r+1,c
  3114  0013DA  0E00               	movlw	0
  3115  0013DC  6E06               	movwf	strncmp@n+1,c
  3116  0013DE  0E03               	movlw	3
  3117  0013E0  6E05               	movwf	strncmp@n,c
  3118  0013E2  ECF2  F017         	call	_strncmp	;wreg free
  3119  0013E6  5001               	movf	?_strncmp,w,c
  3120  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3121  0013EA  B4D8               	btfsc	status,2,c
  3122  0013EC  D016               	goto	u4220
  3123  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3124  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3125  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3126  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3127  0013FE  0E01               	movlw	low STR_103
  3128  001400  6E03               	movwf	strncmp@_r,c
  3129  001402  0E06               	movlw	high STR_103
  3130  001404  6E04               	movwf	strncmp@_r+1,c
  3131  001406  0E00               	movlw	0
  3132  001408  6E06               	movwf	strncmp@n+1,c
  3133  00140A  0E03               	movlw	3
  3134  00140C  6E05               	movwf	strncmp@n,c
  3135  00140E  ECF2  F017         	call	_strncmp	;wreg free
  3136  001412  5001               	movf	?_strncmp,w,c
  3137  001414  1002               	iorwf	?_strncmp+1,w,c
  3138  001416  A4D8               	btfss	status,2,c
  3139  001418  D058               	goto	l4044
  3140  00141A                     u4220:
  3141  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3142                           
  3143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3144  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3145  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3146  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3147  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3148  00142C  0E02               	movlw	2
  3149  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3150  001430  0E00               	movlw	0
  3151  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3152  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3153  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3154  00143C                     	if	0	;tblptru may be non-zero
  3155  00143C                     	endif
  3156  00143C                     	if	0	;tblptru may be non-zero
  3157  00143C                     	endif
  3158  00143C  0008               	tblrd		*
  3159  00143E  FFFF               	dw	65535	; errata NOP
  3160  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3161                           
  3162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3163  001444  0E03               	movlw	3
  3164  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3165  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3166  00144E  26DE               	addwf	postinc2,f,c
  3167  001450  0E00               	movlw	0
  3168  001452  22DD               	addwfc	postdec2,f,c
  3169                           
  3170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3171  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3172  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3173  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3174  001460  0E02               	movlw	2
  3175  001462  26DE               	addwf	postinc2,f,c
  3176  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3177  001468  0E00               	movlw	0
  3178  00146A  22DD               	addwfc	postdec2,f,c
  3179  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3180  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3181  001474  50DF               	movf	indf2,w,c
  3182  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3183  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3184  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3185  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3186  00147E                     L10:
  3187  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3188  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3189  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3190  001484                     L11:
  3191  001484  FFFF               	dw	65535	; assembler added errata NOP
  3192  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3193  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3194  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3195  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3196                           
  3197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3198  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3199  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3200  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3201  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3202  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3203  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3204  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3205  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3206  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3207  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3208  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3209  0014BA  EC8E  F010         	call	_xtoa	;wreg free
  3210  0014BE                     L7:
  3211  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3212  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3213  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3214  0014C8  D18E               	goto	l507
  3215  0014CA                     l4044:
  3216  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3217                           
  3218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3219  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3220  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3221  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3222  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3223  0014DC  0E1A               	movlw	low (STR_99+1)
  3224  0014DE  6E03               	movwf	strncmp@_r,c
  3225  0014E0  0E06               	movlw	high (STR_99+1)
  3226  0014E2  6E04               	movwf	strncmp@_r+1,c
  3227  0014E4  0E00               	movlw	0
  3228  0014E6  6E06               	movwf	strncmp@n+1,c
  3229  0014E8  0E02               	movlw	2
  3230  0014EA  6E05               	movwf	strncmp@n,c
  3231  0014EC  ECF2  F017         	call	_strncmp	;wreg free
  3232  0014F0  5001               	movf	?_strncmp,w,c
  3233  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3234  0014F4  B4D8               	btfsc	status,2,c
  3235  0014F6  D016               	goto	u4240
  3236  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3237  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3239  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3240  001508  0E02               	movlw	low (STR_103+1)
  3241  00150A  6E03               	movwf	strncmp@_r,c
  3242  00150C  0E06               	movlw	high (STR_103+1)
  3243  00150E  6E04               	movwf	strncmp@_r+1,c
  3244  001510  0E00               	movlw	0
  3245  001512  6E06               	movwf	strncmp@n+1,c
  3246  001514  0E02               	movlw	2
  3247  001516  6E05               	movwf	strncmp@n,c
  3248  001518  ECF2  F017         	call	_strncmp	;wreg free
  3249  00151C  5001               	movf	?_strncmp,w,c
  3250  00151E  1002               	iorwf	?_strncmp+1,w,c
  3251  001520  A4D8               	btfss	status,2,c
  3252  001522  D014               	goto	l4058
  3253  001524                     u4240:
  3254  001524  FFFF               	dw	65535	; assembler added errata NOP
  3255                           
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3257  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3258  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3259  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3260  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3261  001536  0E01               	movlw	1
  3262  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3263  00153A  0E00               	movlw	0
  3264  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3265  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3266  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3267  001546                     	if	0	;tblptru may be non-zero
  3268  001546                     	endif
  3269  001546                     	if	0	;tblptru may be non-zero
  3270  001546                     	endif
  3271  001546  0008               	tblrd		*
  3272  001548  FFFF               	dw	65535	; errata NOP
  3273  00154A  D0DB               	goto	L26
  3274  00154C                     l4058:
  3275  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3276                           
  3277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3278  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3279  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3280  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3281  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3282  00155E                     	if	0	;tblptru may be non-zero
  3283  00155E                     	endif
  3284  00155E                     	if	0	;tblptru may be non-zero
  3285  00155E                     	endif
  3286  00155E  0008               	tblrd		*
  3287  001560  FFFF               	dw	65535	; errata NOP
  3288  001562  50F5               	movf	tablat,w,c
  3289  001564  0A78               	xorlw	120
  3290  001566  B4D8               	btfsc	status,2,c
  3291  001568  D00E               	goto	u4260
  3292  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3293  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3294  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3295  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3296  00157A                     	if	0	;tblptru may be non-zero
  3297  00157A                     	endif
  3298  00157A                     	if	0	;tblptru may be non-zero
  3299  00157A                     	endif
  3300  00157A  0008               	tblrd		*
  3301  00157C  FFFF               	dw	65535	; errata NOP
  3302  00157E  50F5               	movf	tablat,w,c
  3303  001580  0A58               	xorlw	88
  3304  001582  A4D8               	btfss	status,2,c
  3305  001584  D013               	goto	l4072
  3306  001586                     u4260:
  3307  001586  FFFF               	dw	65535	; assembler added errata NOP
  3308                           
  3309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3310  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3311  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3312  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3313  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3314  001598                     	if	0	;tblptru may be non-zero
  3315  001598                     	endif
  3316  001598                     	if	0	;tblptru may be non-zero
  3317  001598                     	endif
  3318  001598  0008               	tblrd		*
  3319  00159A  FFFF               	dw	65535	; errata NOP
  3320  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3321                           
  3322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3323  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3324  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3325  0015A8  2ADE               	incf	postinc2,f,c
  3326  0015AA  D0B4               	goto	L25
  3327  0015AC                     l4072:
  3328  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3331  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3334  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3335  0015BE  0E42               	movlw	low STR_117
  3336  0015C0  6E03               	movwf	strncmp@_r,c
  3337  0015C2  0E06               	movlw	high STR_117
  3338  0015C4  6E04               	movwf	strncmp@_r+1,c
  3339  0015C6  0E00               	movlw	0
  3340  0015C8  6E06               	movwf	strncmp@n+1,c
  3341  0015CA  0E02               	movlw	2
  3342  0015CC  6E05               	movwf	strncmp@n,c
  3343  0015CE  ECF2  F017         	call	_strncmp	;wreg free
  3344  0015D2  5001               	movf	?_strncmp,w,c
  3345  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3346  0015D6  B4D8               	btfsc	status,2,c
  3347  0015D8  D016               	goto	u4280
  3348  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3349  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3350  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3351  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3352  0015EA  0E21               	movlw	low STR_121
  3353  0015EC  6E03               	movwf	strncmp@_r,c
  3354  0015EE  0E06               	movlw	high STR_121
  3355  0015F0  6E04               	movwf	strncmp@_r+1,c
  3356  0015F2  0E00               	movlw	0
  3357  0015F4  6E06               	movwf	strncmp@n+1,c
  3358  0015F6  0E02               	movlw	2
  3359  0015F8  6E05               	movwf	strncmp@n,c
  3360  0015FA  ECF2  F017         	call	_strncmp	;wreg free
  3361  0015FE  5001               	movf	?_strncmp,w,c
  3362  001600  1002               	iorwf	?_strncmp+1,w,c
  3363  001602  A4D8               	btfss	status,2,c
  3364  001604  D03E               	goto	l4086
  3365  001606                     u4280:
  3366  001606  FFFF               	dw	65535	; assembler added errata NOP
  3367                           
  3368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3369  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3370  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3371  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3372  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3373  001618  0E01               	movlw	1
  3374  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3375  00161C  0E00               	movlw	0
  3376  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3377  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3378  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3379  001628                     	if	0	;tblptru may be non-zero
  3380  001628                     	endif
  3381  001628                     	if	0	;tblptru may be non-zero
  3382  001628                     	endif
  3383  001628  0008               	tblrd		*
  3384  00162A  FFFF               	dw	65535	; errata NOP
  3385  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3386                           
  3387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3388  001630  0E02               	movlw	2
  3389  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3390  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3391  00163A  26DE               	addwf	postinc2,f,c
  3392  00163C  0E00               	movlw	0
  3393  00163E  22DD               	addwfc	postdec2,f,c
  3394                           
  3395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3396  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3397  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3398  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3399  00164C  0E04               	movlw	4
  3400  00164E  26DE               	addwf	postinc2,f,c
  3401  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3402  001654  0E00               	movlw	0
  3403  001656  22DD               	addwfc	postdec2,f,c
  3404  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3405  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3406  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3407  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3408  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3409  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3410  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3411  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3412  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3413  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3414  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3415  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3416  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3417  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3418  001680  D701               	goto	L11
  3419  001682                     l4086:
  3420  001682  FFFF               	dw	65535	; assembler added errata NOP
  3421                           
  3422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3423  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3424  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3425  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3426  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3427  001694  0E45               	movlw	low STR_126
  3428  001696  6E03               	movwf	strncmp@_r,c
  3429  001698  0E06               	movlw	high STR_126
  3430  00169A  6E04               	movwf	strncmp@_r+1,c
  3431  00169C  0E00               	movlw	0
  3432  00169E  6E06               	movwf	strncmp@n+1,c
  3433  0016A0  0E02               	movlw	2
  3434  0016A2  6E05               	movwf	strncmp@n,c
  3435  0016A4  ECF2  F017         	call	_strncmp	;wreg free
  3436  0016A8  5001               	movf	?_strncmp,w,c
  3437  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3438  0016AC  B4D8               	btfsc	status,2,c
  3439  0016AE  D016               	goto	u4300
  3440  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3441  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3442  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3443  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3444  0016C0  0E24               	movlw	low STR_130
  3445  0016C2  6E03               	movwf	strncmp@_r,c
  3446  0016C4  0E06               	movlw	high STR_130
  3447  0016C6  6E04               	movwf	strncmp@_r+1,c
  3448  0016C8  0E00               	movlw	0
  3449  0016CA  6E06               	movwf	strncmp@n+1,c
  3450  0016CC  0E02               	movlw	2
  3451  0016CE  6E05               	movwf	strncmp@n,c
  3452  0016D0  ECF2  F017         	call	_strncmp	;wreg free
  3453  0016D4  5001               	movf	?_strncmp,w,c
  3454  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3455  0016D8  A4D8               	btfss	status,2,c
  3456  0016DA  D038               	goto	l4100
  3457  0016DC                     u4300:
  3458  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3459                           
  3460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3461  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3462  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3463  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3464  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3465  0016EE  0E01               	movlw	1
  3466  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3467  0016F2  0E00               	movlw	0
  3468  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3469  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3470  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3471  0016FE                     	if	0	;tblptru may be non-zero
  3472  0016FE                     	endif
  3473  0016FE                     	if	0	;tblptru may be non-zero
  3474  0016FE                     	endif
  3475  0016FE  0008               	tblrd		*
  3476  001700  FFFF               	dw	65535	; errata NOP
  3477  001702                     L26:
  3478  001702  FFFF               	dw	65535	; assembler added errata NOP
  3479  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3480                           
  3481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3482  001708  0E02               	movlw	2
  3483  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3484  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3485  001712  26DE               	addwf	postinc2,f,c
  3486  001714                     L25:
  3487  001714  FFFF               	dw	65535	; assembler added errata NOP
  3488  001716  0E00               	movlw	0
  3489  001718  22DD               	addwfc	postdec2,f,c
  3490                           
  3491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3492  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3493  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3494  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3495  001726  0E02               	movlw	2
  3496  001728  26DE               	addwf	postinc2,f,c
  3497  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3498  00172E  0E00               	movlw	0
  3499  001730  22DD               	addwfc	postdec2,f,c
  3500  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3501  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3502  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3503  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3504  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3505  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3506  00174A  D699               	goto	L10
  3507  00174C                     l4100:
  3508  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3509                           
  3510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3511  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3512  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3513  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3514  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3515  00175E                     	if	0	;tblptru may be non-zero
  3516  00175E                     	endif
  3517  00175E                     	if	0	;tblptru may be non-zero
  3518  00175E                     	endif
  3519  00175E  0008               	tblrd		*
  3520  001760  FFFF               	dw	65535	; errata NOP
  3521  001762  50F5               	movf	tablat,w,c
  3522  001764  0A25               	xorlw	37
  3523  001766  A4D8               	btfss	status,2,c
  3524  001768  D018               	goto	l4110
  3525                           
  3526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3527  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3528  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3529  001772  2ADE               	incf	postinc2,f,c
  3530  001774  0E00               	movlw	0
  3531  001776  22DD               	addwfc	postdec2,f,c
  3532                           
  3533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3534  001778  0E00               	movlw	0
  3535  00177A  6E02               	movwf	fputc@c+1,c
  3536  00177C  0E25               	movlw	37
  3537  00177E  6E01               	movwf	fputc@c,c
  3538  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3539  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3540  001788  ECB1  F018         	call	_fputc	;wreg free
  3541  00178C                     l4106:
  3542  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3545  00178E  0E00               	movlw	0
  3546  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3547  001792  0E01               	movlw	1
  3548  001794                     L5:
  3549  001794  FFFF               	dw	65535	; assembler added errata NOP
  3550  001796  6E43               	movwf	?_vfpfcnvrt,c
  3551  001798  D026               	goto	l507
  3552  00179A                     l4110:
  3553  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3554                           
  3555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3556  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3557  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3558  0017A4  2ADE               	incf	postinc2,f,c
  3559  0017A6  0E00               	movlw	0
  3560  0017A8  22DD               	addwfc	postdec2,f,c
  3561  0017AA  EFA2  F007         	goto	l3930
  3562  0017AE                     l4116:
  3563  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3564                           
  3565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3566  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3567  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3568  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3569  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3570  0017C0                     	if	0	;tblptru may be non-zero
  3571  0017C0                     	endif
  3572  0017C0                     	if	0	;tblptru may be non-zero
  3573  0017C0                     	endif
  3574  0017C0  0008               	tblrd		*
  3575  0017C2  FFFF               	dw	65535	; errata NOP
  3576  0017C4  50F5               	movf	tablat,w,c
  3577  0017C6  6E01               	movwf	fputc@c,c
  3578  0017C8  6A02               	clrf	fputc@c+1,c
  3579  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3580  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3581  0017D2  ECB1  F018         	call	_fputc	;wreg free
  3582                           
  3583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3584  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  0017DE  2ADE               	incf	postinc2,f,c
  3587  0017E0  0E00               	movlw	0
  3588  0017E2  22DD               	addwfc	postdec2,f,c
  3589  0017E4  D7D3               	goto	l4106
  3590  0017E6                     l507:
  3591  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3592  0017E8  0012               	return		;funcret
  3593  0017EA  FFFF               	dw	65535	; errata NOP
  3594  0017EC                     __end_of_vfpfcnvrt:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _xtoa *****************
  3598 ;; Defined at:
  3599 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3602 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3603 ;;  d               8   29[COMRAM] unsigned long long 
  3604 ;;  x               1   37[COMRAM] unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  n               8   54[COMRAM] unsigned long long 
  3607 ;;  c               2   64[COMRAM] int 
  3608 ;;  i               2   62[COMRAM] int 
  3609 ;;  w               2   52[COMRAM] int 
  3610 ;;  p               2   50[COMRAM] int 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2   27[COMRAM] int 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3620 ;;      Params:        11       0       0       0       0       0       0
  3621 ;;      Locals:        20       0       0       0       0       0       0
  3622 ;;      Temps:          8       0       0       0       0       0       0
  3623 ;;      Totals:        39       0       0       0       0       0       0
  3624 ;;Total ram usage:       39 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    6
  3627 ;; This function calls:
  3628 ;;		_isalpha
  3629 ;;		_isupper
  3630 ;;		_pad
  3631 ;;		_toupper
  3632 ;; This function is called by:
  3633 ;;		_vfpfcnvrt
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text6
  3638  00211C                     __ptext6:
  3639                           	opt callstack 0
  3640  00211C                     _xtoa:
  3641                           	opt callstack 0
  3642  00211C  FFFF               	dw	65535	; assembler added errata NOP
  3643                           
  3644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3645                           
  3646                           ;incstack = 0
  3647  00211E  0100               	movlb	0	; () banked
  3648  002120  AF94               	btfss	(_prec+1)& (0+255),7,b
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3652  002122  9395               	bcf	_flags& (0+255),1,b
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3656  002124  BF94               	btfsc	(_prec+1)& (0+255),7,b
  3657  002126  D005               	goto	u3520
  3658  002128  5194               	movf	(_prec+1)& (0+255),w,b
  3659  00212A  E109               	bnz	l445
  3660  00212C  0593               	decf	_prec& (0+255),w,b
  3661  00212E  B0D8               	btfsc	status,0,c
  3662  002130  D006               	goto	l445
  3663  002132                     u3520:
  3664  002132  FFFF               	dw	65535	; assembler added errata NOP
  3665                           
  3666                           ; BSR set to: 0
  3667  002134  0E00               	movlw	0
  3668  002136  6E34               	movwf	xtoa@p+1,c
  3669  002138  0E01               	movlw	1
  3670  00213A  6E33               	movwf	xtoa@p,c
  3671  00213C  D005               	goto	l447
  3672  00213E                     l445:
  3673  00213E  FFFF               	dw	65535	; assembler added errata NOP
  3674                           
  3675                           ; BSR set to: 0
  3676  002140  C093  F033         	movff	_prec,xtoa@p
  3677  002144  C094  F034         	movff	_prec+1,xtoa@p+1
  3678  002148                     l447:
  3679  002148  FFFF               	dw	65535	; assembler added errata NOP
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3683  00214A  C091  F035         	movff	_width,xtoa@w
  3684  00214E  C092  F036         	movff	_width+1,xtoa@w+1
  3685                           
  3686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3687  002152  A995               	btfss	_flags& (0+255),4,b
  3688  002154  D004               	goto	l3630
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3692  002156  0EFE               	movlw	254
  3693  002158  2635               	addwf	xtoa@w,f,c
  3694  00215A  0EFF               	movlw	255
  3695  00215C  2236               	addwfc	xtoa@w+1,f,c
  3696  00215E                     l3630:
  3697  00215E  FFFF               	dw	65535	; assembler added errata NOP
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3701  002160  C01E  F037         	movff	xtoa@d,xtoa@n
  3702  002164  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3703  002168  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3704  00216C  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3705  002170  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3706  002174  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3707  002178  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3708  00217C  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3712  002180  0E00               	movlw	0
  3713  002182  6E40               	movwf	xtoa@i+1,c
  3714  002184  0E1F               	movlw	31
  3715  002186  6E3F               	movwf	xtoa@i,c
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3719  002188  0E00               	movlw	0
  3720  00218A  6FBA               	movwf	(_dbuf+31)& (0+255),b
  3721                           
  3722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3723  00218C  D09D               	goto	l3666
  3724  00218E                     l3636:
  3725  00218E  FFFF               	dw	65535	; assembler added errata NOP
  3726                           
  3727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3728  002190  063F               	decf	xtoa@i,f,c
  3729  002192  A0D8               	btfss	status,0,c
  3730  002194  0640               	decf	xtoa@i+1,f,c
  3731                           
  3732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3733  002196  0E0F               	movlw	15
  3734  002198  1437               	andwf	xtoa@n,w,c
  3735  00219A  6E41               	movwf	xtoa@c,c
  3736  00219C  6A42               	clrf	xtoa@c+1,c
  3737                           
  3738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3739  00219E  BE42               	btfsc	xtoa@c+1,7,c
  3740  0021A0  D008               	goto	l3644
  3741  0021A2  5042               	movf	xtoa@c+1,w,c
  3742  0021A4  E104               	bnz	u3540
  3743  0021A6  0E0A               	movlw	10
  3744  0021A8  5C41               	subwf	xtoa@c,w,c
  3745  0021AA  A0D8               	btfss	status,0,c
  3746  0021AC  D002               	goto	l3644
  3747  0021AE                     u3540:
  3748  0021AE  0E57               	movlw	87
  3749  0021B0  D002               	goto	L19
  3750  0021B2                     l3644:
  3751  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  3752  0021B4  0E30               	movlw	48
  3753  0021B6                     L19:
  3754  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  3755  0021B8  2441               	addwf	xtoa@c,w,c
  3756  0021BA  6E41               	movwf	xtoa@c,c
  3757  0021BC  0E00               	movlw	0
  3758  0021BE  2042               	addwfc	xtoa@c+1,w,c
  3759  0021C0  6E42               	movwf	xtoa@c+1,c
  3760                           
  3761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3762  0021C2  0EBF               	movlw	191
  3763  0021C4  6E27               	movwf	??_xtoa& (0+255),c
  3764  0021C6  0EFF               	movlw	255
  3765  0021C8  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3766  0021CA  5026               	movf	xtoa@x,w,c
  3767  0021CC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3768  0021CE  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3769  0021D0  5027               	movf	??_xtoa,w,c
  3770  0021D2  2629               	addwf	??_xtoa+2,f,c
  3771  0021D4  5028               	movf	??_xtoa+1,w,c
  3772  0021D6  222A               	addwfc	??_xtoa+3,f,c
  3773  0021D8  502A               	movf	??_xtoa+3,w,c
  3774  0021DA  E106               	bnz	u3550
  3775  0021DC  0E1A               	movlw	26
  3776  0021DE  5C29               	subwf	??_xtoa+2,w,c
  3777  0021E0  B0D8               	btfsc	status,0,c
  3778  0021E2  D002               	goto	u3550
  3779  0021E4  0E01               	movlw	1
  3780  0021E6  D002               	goto	u3560
  3781  0021E8                     u3550:
  3782  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  3783  0021EA  0E00               	movlw	0
  3784  0021EC                     u3560:
  3785  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  3786  0021EE  6E2F               	movwf	_xtoa$1176,c
  3787  0021F0  6A30               	clrf	_xtoa$1176+1,c
  3788  0021F2  502F               	movf	_xtoa$1176,w,c
  3789  0021F4  1030               	iorwf	_xtoa$1176+1,w,c
  3790  0021F6  B4D8               	btfsc	status,2,c
  3791  0021F8  D029               	goto	l3658
  3792  0021FA  0E9F               	movlw	159
  3793  0021FC  6E27               	movwf	??_xtoa& (0+255),c
  3794  0021FE  0EFF               	movlw	255
  3795  002200  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3796  002202  0E20               	movlw	32
  3797  002204  1041               	iorwf	xtoa@c,w,c
  3798  002206  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3799  002208  0E00               	movlw	0
  3800  00220A  1042               	iorwf	xtoa@c+1,w,c
  3801  00220C  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3802  00220E  5027               	movf	??_xtoa,w,c
  3803  002210  2629               	addwf	??_xtoa+2,f,c
  3804  002212  5028               	movf	??_xtoa+1,w,c
  3805  002214  222A               	addwfc	??_xtoa+3,f,c
  3806  002216  502A               	movf	??_xtoa+3,w,c
  3807  002218  E106               	bnz	u3580
  3808  00221A  0E1A               	movlw	26
  3809  00221C  5C29               	subwf	??_xtoa+2,w,c
  3810  00221E  B0D8               	btfsc	status,0,c
  3811  002220  D002               	goto	u3580
  3812  002222  0E01               	movlw	1
  3813  002224  D002               	goto	u3590
  3814  002226                     u3580:
  3815  002226  FFFF               	dw	65535	; assembler added errata NOP
  3816  002228  0E00               	movlw	0
  3817  00222A                     u3590:
  3818  00222A  FFFF               	dw	65535	; assembler added errata NOP
  3819  00222C  6E31               	movwf	_xtoa$1177,c
  3820  00222E  6A32               	clrf	_xtoa$1177+1,c
  3821  002230  5031               	movf	_xtoa$1177,w,c
  3822  002232  1032               	iorwf	_xtoa$1177+1,w,c
  3823  002234  B4D8               	btfsc	status,2,c
  3824  002236  D00A               	goto	l3658
  3825                           
  3826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  3827  002238  C041  F007         	movff	xtoa@c,toupper@c
  3828  00223C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3829  002240  ECFC  F019         	call	_toupper	;wreg free
  3830  002244  C007  F041         	movff	?_toupper,xtoa@c
  3831  002248  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3832  00224C                     l3658:
  3833  00224C  FFFF               	dw	65535	; assembler added errata NOP
  3834                           
  3835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  3836  00224E  0E9B               	movlw	low _dbuf
  3837  002250  243F               	addwf	xtoa@i,w,c
  3838  002252  6ED9               	movwf	fsr2l,c
  3839  002254  0E00               	movlw	high _dbuf
  3840  002256  2040               	addwfc	xtoa@i+1,w,c
  3841  002258  6EDA               	movwf	fsr2h,c
  3842  00225A  C041  FFDF         	movff	xtoa@c,indf2
  3843                           
  3844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3845  00225E  0633               	decf	xtoa@p,f,c
  3846  002260  A0D8               	btfss	status,0,c
  3847  002262  0634               	decf	xtoa@p+1,f,c
  3848                           
  3849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3850  002264  0635               	decf	xtoa@w,f,c
  3851  002266  A0D8               	btfss	status,0,c
  3852  002268  0636               	decf	xtoa@w+1,f,c
  3853                           
  3854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  3855  00226A  C037  F027         	movff	xtoa@n,??_xtoa
  3856  00226E  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3857  002272  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3858  002276  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3859  00227A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3860  00227E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3861  002282  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3862  002286  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3863  00228A  0E05               	movlw	5
  3864  00228C  D00A               	goto	u3610
  3865  00228E                     u3615:
  3866  00228E  FFFF               	dw	65535	; assembler added errata NOP
  3867  002290  90D8               	bcf	status,0,c
  3868  002292  322E               	rrcf	??_xtoa+7,f,c
  3869  002294  322D               	rrcf	??_xtoa+6,f,c
  3870  002296  322C               	rrcf	??_xtoa+5,f,c
  3871  002298  322B               	rrcf	??_xtoa+4,f,c
  3872  00229A  322A               	rrcf	??_xtoa+3,f,c
  3873  00229C  3229               	rrcf	??_xtoa+2,f,c
  3874  00229E  3228               	rrcf	??_xtoa+1,f,c
  3875  0022A0  3227               	rrcf	??_xtoa,f,c
  3876  0022A2                     u3610:
  3877  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  3878  0022A4  2EE8               	decfsz	wreg,f,c
  3879  0022A6  D7F3               	goto	u3615
  3880  0022A8  C027  F037         	movff	??_xtoa,xtoa@n
  3881  0022AC  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3882  0022B0  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3883  0022B4  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3884  0022B8  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3885  0022BC  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3886  0022C0  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3887  0022C4  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3888  0022C8                     l3666:
  3889  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  3890                           
  3891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3892  0022CA  BE40               	btfsc	xtoa@i+1,7,c
  3893  0022CC  D022               	goto	u3660
  3894  0022CE  5040               	movf	xtoa@i+1,w,c
  3895  0022D0  E104               	bnz	u3620
  3896  0022D2  0E02               	movlw	2
  3897  0022D4  5C3F               	subwf	xtoa@i,w,c
  3898  0022D6  A0D8               	btfss	status,0,c
  3899  0022D8  D01C               	goto	u3660
  3900  0022DA                     u3620:
  3901  0022DA  5037               	movf	xtoa@n,w,c
  3902  0022DC  1038               	iorwf	xtoa@n+1,w,c
  3903  0022DE  1039               	iorwf	xtoa@n+2,w,c
  3904  0022E0  103A               	iorwf	xtoa@n+3,w,c
  3905  0022E2  103B               	iorwf	xtoa@n+4,w,c
  3906  0022E4  103C               	iorwf	xtoa@n+5,w,c
  3907  0022E6  103D               	iorwf	xtoa@n+6,w,c
  3908  0022E8  103E               	iorwf	xtoa@n+7,w,c
  3909  0022EA  A4D8               	btfss	status,2,c
  3910  0022EC  D750               	goto	l3636
  3911  0022EE  BE34               	btfsc	xtoa@p+1,7,c
  3912  0022F0  D005               	goto	u3640
  3913  0022F2  5034               	movf	xtoa@p+1,w,c
  3914  0022F4  E102               	bnz	u3641
  3915  0022F6  0433               	decf	xtoa@p,w,c
  3916  0022F8  B0D8               	btfsc	status,0,c
  3917  0022FA                     u3641:
  3918  0022FA  D749               	goto	l3636
  3919  0022FC                     u3640:
  3920  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  3921  0022FE  BE36               	btfsc	xtoa@w+1,7,c
  3922  002300  D008               	goto	u3660
  3923  002302  5036               	movf	xtoa@w+1,w,c
  3924  002304  E103               	bnz	u3650
  3925  002306  0435               	decf	xtoa@w,w,c
  3926  002308  A0D8               	btfss	status,0,c
  3927  00230A  D003               	goto	u3660
  3928  00230C                     u3650:
  3929  00230C  0100               	movlb	0	; () banked
  3930  00230E  B395               	btfsc	_flags& (0+255),1,b
  3931  002310  D73E               	goto	l3636
  3932  002312                     u3660:
  3933  002312  FFFF               	dw	65535	; assembler added errata NOP
  3934                           
  3935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  3936  002314  0100               	movlb	0	; () banked
  3937  002316  A995               	btfss	_flags& (0+255),4,b
  3938  002318  D016               	goto	l3682
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  3942  00231A  063F               	decf	xtoa@i,f,c
  3943  00231C  A0D8               	btfss	status,0,c
  3944  00231E  0640               	decf	xtoa@i+1,f,c
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  3948  002320  0E9B               	movlw	low _dbuf
  3949  002322  243F               	addwf	xtoa@i,w,c
  3950  002324  6ED9               	movwf	fsr2l,c
  3951  002326  0E00               	movlw	high _dbuf
  3952  002328  2040               	addwfc	xtoa@i+1,w,c
  3953  00232A  6EDA               	movwf	fsr2h,c
  3954  00232C  C026  FFDF         	movff	xtoa@x,indf2
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  3958  002330  063F               	decf	xtoa@i,f,c
  3959  002332  A0D8               	btfss	status,0,c
  3960  002334  0640               	decf	xtoa@i+1,f,c
  3961                           
  3962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  3963  002336  0E9B               	movlw	low _dbuf
  3964  002338  243F               	addwf	xtoa@i,w,c
  3965  00233A  6ED9               	movwf	fsr2l,c
  3966  00233C  0E00               	movlw	high _dbuf
  3967  00233E  2040               	addwfc	xtoa@i+1,w,c
  3968  002340  6EDA               	movwf	fsr2h,c
  3969  002342  0E30               	movlw	48
  3970  002344  6EDF               	movwf	indf2,c
  3971  002346                     l3682:
  3972  002346  FFFF               	dw	65535	; assembler added errata NOP
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  3976  002348  C01C  F011         	movff	xtoa@fp,pad@fp
  3977  00234C  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3978  002350  0E9B               	movlw	low _dbuf
  3979  002352  243F               	addwf	xtoa@i,w,c
  3980  002354  6E13               	movwf	pad@buf,c
  3981  002356  0E00               	movlw	high _dbuf
  3982  002358  2040               	addwfc	xtoa@i+1,w,c
  3983  00235A  6E14               	movwf	pad@buf+1,c
  3984  00235C  C035  F015         	movff	xtoa@w,pad@p
  3985  002360  C036  F016         	movff	xtoa@w+1,pad@p+1
  3986  002364  EC07  F019         	call	_pad	;wreg free
  3987  002368  C011  F01C         	movff	?_pad,?_xtoa
  3988  00236C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3989  002370  0012               	return		;funcret
  3990  002372  FFFF               	dw	65535	; errata NOP
  3991  002374                     __end_of_xtoa:
  3992                           	opt callstack 0
  3993                           
  3994 ;; *************** function _toupper *****************
  3995 ;; Defined at:
  3996 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  c               2    6[COMRAM] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    6[COMRAM] int 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4010 ;;      Params:         2       0       0       0       0       0       0
  4011 ;;      Locals:         2       0       0       0       0       0       0
  4012 ;;      Temps:          4       0       0       0       0       0       0
  4013 ;;      Totals:         8       0       0       0       0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		_islower
  4019 ;; This function is called by:
  4020 ;;		_xtoa
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text7
  4025  0033F8                     __ptext7:
  4026                           	opt callstack 0
  4027  0033F8                     _toupper:
  4028                           	opt callstack 0
  4029  0033F8  FFFF               	dw	65535	; assembler added errata NOP
  4030                           
  4031                           ;incstack = 0
  4032  0033FA  0E9F               	movlw	159
  4033  0033FC  6E09               	movwf	??_toupper& (0+255),c
  4034  0033FE  0EFF               	movlw	255
  4035  003400  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4036  003402  C007  F00B         	movff	toupper@c,??_toupper+2
  4037  003406  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4038  00340A  5009               	movf	??_toupper,w,c
  4039  00340C  260B               	addwf	??_toupper+2,f,c
  4040  00340E  500A               	movf	??_toupper+1,w,c
  4041  003410  220C               	addwfc	??_toupper+3,f,c
  4042  003412  500C               	movf	??_toupper+3,w,c
  4043  003414  E106               	bnz	u2820
  4044  003416  0E1A               	movlw	26
  4045  003418  5C0B               	subwf	??_toupper+2,w,c
  4046  00341A  B0D8               	btfsc	status,0,c
  4047  00341C  D002               	goto	u2820
  4048  00341E  0E01               	movlw	1
  4049  003420  D002               	goto	u2830
  4050  003422                     u2820:
  4051  003422  FFFF               	dw	65535	; assembler added errata NOP
  4052  003424  0E00               	movlw	0
  4053  003426                     u2830:
  4054  003426  FFFF               	dw	65535	; assembler added errata NOP
  4055  003428  6E0D               	movwf	_toupper$1943,c
  4056  00342A  6A0E               	clrf	_toupper$1943+1,c
  4057  00342C  500D               	movf	_toupper$1943,w,c
  4058  00342E  100E               	iorwf	_toupper$1943+1,w,c
  4059  003430  B4D8               	btfsc	status,2,c
  4060  003432  D005               	goto	l1380
  4061  003434  0E5F               	movlw	95
  4062  003436  1407               	andwf	toupper@c,w,c
  4063  003438  6E07               	movwf	?_toupper,c
  4064  00343A  6A08               	clrf	?_toupper+1,c
  4065  00343C  D005               	goto	l1385
  4066  00343E                     l1380:
  4067  00343E  FFFF               	dw	65535	; assembler added errata NOP
  4068  003440  C007  F007         	movff	toupper@c,?_toupper
  4069  003444  C008  F008         	movff	toupper@c+1,?_toupper+1
  4070  003448                     l1385:
  4071  003448  FFFF               	dw	65535	; assembler added errata NOP
  4072  00344A  0012               	return		;funcret
  4073  00344C  FFFF               	dw	65535	; errata NOP
  4074  00344E                     __end_of_toupper:
  4075                           	opt callstack 0
  4076                           
  4077 ;; *************** function _islower *****************
  4078 ;; Defined at:
  4079 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  c               2    0[COMRAM] int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[COMRAM] int 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4093 ;;      Params:         2       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0
  4095 ;;      Temps:          4       0       0       0       0       0       0
  4096 ;;      Totals:         6       0       0       0       0       0       0
  4097 ;;Total ram usage:        6 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    2
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_toupper
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text8
  4108  003756                     __ptext8:
  4109                           	opt callstack 0
  4110  003756                     _islower:
  4111                           	opt callstack 0
  4112  003756  FFFF               	dw	65535	; assembler added errata NOP
  4113                           
  4114                           ;incstack = 0
  4115  003758  0E9F               	movlw	159
  4116  00375A  6E03               	movwf	??_islower& (0+255),c
  4117  00375C  0EFF               	movlw	255
  4118  00375E  6E04               	movwf	(??_islower+1)& (0+255),c
  4119  003760  C001  F005         	movff	islower@c,??_islower+2
  4120  003764  C002  F006         	movff	islower@c+1,??_islower+3
  4121  003768  5003               	movf	??_islower,w,c
  4122  00376A  2605               	addwf	??_islower+2,f,c
  4123  00376C  5004               	movf	??_islower+1,w,c
  4124  00376E  2206               	addwfc	??_islower+3,f,c
  4125  003770  5006               	movf	??_islower+3,w,c
  4126  003772  E106               	bnz	u2710
  4127  003774  0E1A               	movlw	26
  4128  003776  5C05               	subwf	??_islower+2,w,c
  4129  003778  B0D8               	btfsc	status,0,c
  4130  00377A  D002               	goto	u2710
  4131  00377C  0E01               	movlw	1
  4132  00377E  D002               	goto	u2720
  4133  003780                     u2710:
  4134  003780  FFFF               	dw	65535	; assembler added errata NOP
  4135  003782  0E00               	movlw	0
  4136  003784                     u2720:
  4137  003784  FFFF               	dw	65535	; assembler added errata NOP
  4138  003786  6E01               	movwf	?_islower,c
  4139  003788  6A02               	clrf	?_islower+1,c
  4140  00378A  0012               	return		;funcret
  4141  00378C  FFFF               	dw	65535	; errata NOP
  4142  00378E                     __end_of_islower:
  4143                           	opt callstack 0
  4144                           
  4145 ;; *************** function _isupper *****************
  4146 ;; Defined at:
  4147 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  c               2    0[COMRAM] int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2    0[COMRAM] int 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4161 ;;      Params:         2       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0
  4163 ;;      Temps:          4       0       0       0       0       0       0
  4164 ;;      Totals:         6       0       0       0       0       0       0
  4165 ;;Total ram usage:        6 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    2
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_xtoa
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text9
  4176  00378E                     __ptext9:
  4177                           	opt callstack 0
  4178  00378E                     _isupper:
  4179                           	opt callstack 0
  4180  00378E  FFFF               	dw	65535	; assembler added errata NOP
  4181                           
  4182                           ;incstack = 0
  4183  003790  0EBF               	movlw	191
  4184  003792  6E03               	movwf	??_isupper& (0+255),c
  4185  003794  0EFF               	movlw	255
  4186  003796  6E04               	movwf	(??_isupper+1)& (0+255),c
  4187  003798  C001  F005         	movff	isupper@c,??_isupper+2
  4188  00379C  C002  F006         	movff	isupper@c+1,??_isupper+3
  4189  0037A0  5003               	movf	??_isupper,w,c
  4190  0037A2  2605               	addwf	??_isupper+2,f,c
  4191  0037A4  5004               	movf	??_isupper+1,w,c
  4192  0037A6  2206               	addwfc	??_isupper+3,f,c
  4193  0037A8  5006               	movf	??_isupper+3,w,c
  4194  0037AA  E106               	bnz	u2780
  4195  0037AC  0E1A               	movlw	26
  4196  0037AE  5C05               	subwf	??_isupper+2,w,c
  4197  0037B0  B0D8               	btfsc	status,0,c
  4198  0037B2  D002               	goto	u2780
  4199  0037B4  0E01               	movlw	1
  4200  0037B6  D002               	goto	u2790
  4201  0037B8                     u2780:
  4202  0037B8  FFFF               	dw	65535	; assembler added errata NOP
  4203  0037BA  0E00               	movlw	0
  4204  0037BC                     u2790:
  4205  0037BC  FFFF               	dw	65535	; assembler added errata NOP
  4206  0037BE  6E01               	movwf	?_isupper,c
  4207  0037C0  6A02               	clrf	?_isupper+1,c
  4208  0037C2  0012               	return		;funcret
  4209  0037C4  FFFF               	dw	65535	; errata NOP
  4210  0037C6                     __end_of_isupper:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function _isalpha *****************
  4214 ;; Defined at:
  4215 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  c               2    0[COMRAM] int 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  2    0[COMRAM] int 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4229 ;;      Params:         2       0       0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0
  4231 ;;      Temps:          4       0       0       0       0       0       0
  4232 ;;      Totals:         6       0       0       0       0       0       0
  4233 ;;Total ram usage:        6 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    2
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_xtoa
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text10
  4244  0036DE                     __ptext10:
  4245                           	opt callstack 0
  4246  0036DE                     _isalpha:
  4247                           	opt callstack 0
  4248  0036DE  FFFF               	dw	65535	; assembler added errata NOP
  4249                           
  4250                           ;incstack = 0
  4251  0036E0  0E9F               	movlw	159
  4252  0036E2  6E03               	movwf	??_isalpha& (0+255),c
  4253  0036E4  0EFF               	movlw	255
  4254  0036E6  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4255  0036E8  0E20               	movlw	32
  4256  0036EA  1001               	iorwf	isalpha@c,w,c
  4257  0036EC  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4258  0036EE  0E00               	movlw	0
  4259  0036F0  1002               	iorwf	isalpha@c+1,w,c
  4260  0036F2  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4261  0036F4  5003               	movf	??_isalpha,w,c
  4262  0036F6  2605               	addwf	??_isalpha+2,f,c
  4263  0036F8  5004               	movf	??_isalpha+1,w,c
  4264  0036FA  2206               	addwfc	??_isalpha+3,f,c
  4265  0036FC  5006               	movf	??_isalpha+3,w,c
  4266  0036FE  E106               	bnz	u2800
  4267  003700  0E1A               	movlw	26
  4268  003702  5C05               	subwf	??_isalpha+2,w,c
  4269  003704  B0D8               	btfsc	status,0,c
  4270  003706  D002               	goto	u2800
  4271  003708  0E01               	movlw	1
  4272  00370A  D002               	goto	u2810
  4273  00370C                     u2800:
  4274  00370C  FFFF               	dw	65535	; assembler added errata NOP
  4275  00370E  0E00               	movlw	0
  4276  003710                     u2810:
  4277  003710  FFFF               	dw	65535	; assembler added errata NOP
  4278  003712  6E01               	movwf	?_isalpha,c
  4279  003714  6A02               	clrf	?_isalpha+1,c
  4280  003716  0012               	return		;funcret
  4281  003718  FFFF               	dw	65535	; errata NOP
  4282  00371A                     __end_of_isalpha:
  4283                           	opt callstack 0
  4284                           
  4285 ;; *************** function _utoa *****************
  4286 ;; Defined at:
  4287 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4290 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4291 ;;  d               8   29[COMRAM] unsigned long long 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  n               8   49[COMRAM] unsigned long long 
  4294 ;;  i               2   57[COMRAM] int 
  4295 ;;  w               2   47[COMRAM] int 
  4296 ;;  p               2   45[COMRAM] int 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  2   27[COMRAM] int 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4306 ;;      Params:        10       0       0       0       0       0       0
  4307 ;;      Locals:        14       0       0       0       0       0       0
  4308 ;;      Temps:          8       0       0       0       0       0       0
  4309 ;;      Totals:        32       0       0       0       0       0       0
  4310 ;;Total ram usage:       32 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    6
  4313 ;; This function calls:
  4314 ;;		___lodiv
  4315 ;;		___lomod
  4316 ;;		_pad
  4317 ;; This function is called by:
  4318 ;;		_vfpfcnvrt
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text11
  4323  002374                     __ptext11:
  4324                           	opt callstack 0
  4325  002374                     _utoa:
  4326                           	opt callstack 0
  4327  002374  FFFF               	dw	65535	; assembler added errata NOP
  4328                           
  4329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4330                           
  4331                           ;incstack = 0
  4332  002376  0100               	movlb	0	; () banked
  4333  002378  AF94               	btfss	(_prec+1)& (0+255),7,b
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4337  00237A  9395               	bcf	_flags& (0+255),1,b
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4341  00237C  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4342  00237E  D005               	goto	u3450
  4343  002380  5194               	movf	(_prec+1)& (0+255),w,b
  4344  002382  E109               	bnz	l430
  4345  002384  0593               	decf	_prec& (0+255),w,b
  4346  002386  B0D8               	btfsc	status,0,c
  4347  002388  D006               	goto	l430
  4348  00238A                     u3450:
  4349  00238A  FFFF               	dw	65535	; assembler added errata NOP
  4350                           
  4351                           ; BSR set to: 0
  4352  00238C  0E00               	movlw	0
  4353  00238E  6E2F               	movwf	utoa@p+1,c
  4354  002390  0E01               	movlw	1
  4355  002392  6E2E               	movwf	utoa@p,c
  4356  002394  D005               	goto	l432
  4357  002396                     l430:
  4358  002396  FFFF               	dw	65535	; assembler added errata NOP
  4359                           
  4360                           ; BSR set to: 0
  4361  002398  C093  F02E         	movff	_prec,utoa@p
  4362  00239C  C094  F02F         	movff	_prec+1,utoa@p+1
  4363  0023A0                     l432:
  4364  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4368  0023A2  C091  F030         	movff	_width,utoa@w
  4369  0023A6  C092  F031         	movff	_width+1,utoa@w+1
  4370                           
  4371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4372  0023AA  C01E  F032         	movff	utoa@d,utoa@n
  4373  0023AE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4374  0023B2  C020  F034         	movff	utoa@d+2,utoa@n+2
  4375  0023B6  C021  F035         	movff	utoa@d+3,utoa@n+3
  4376  0023BA  C022  F036         	movff	utoa@d+4,utoa@n+4
  4377  0023BE  C023  F037         	movff	utoa@d+5,utoa@n+5
  4378  0023C2  C024  F038         	movff	utoa@d+6,utoa@n+6
  4379  0023C6  C025  F039         	movff	utoa@d+7,utoa@n+7
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4383  0023CA  0E00               	movlw	0
  4384  0023CC  6E3B               	movwf	utoa@i+1,c
  4385  0023CE  0E1F               	movlw	31
  4386  0023D0  6E3A               	movwf	utoa@i,c
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4390  0023D2  0E00               	movlw	0
  4391  0023D4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4392                           
  4393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4394  0023D6  D077               	goto	l3606
  4395  0023D8                     l3596:
  4396  0023D8  FFFF               	dw	65535	; assembler added errata NOP
  4397                           
  4398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4399  0023DA  063A               	decf	utoa@i,f,c
  4400  0023DC  A0D8               	btfss	status,0,c
  4401  0023DE  063B               	decf	utoa@i+1,f,c
  4402                           
  4403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4404  0023E0  0E9B               	movlw	low _dbuf
  4405  0023E2  243A               	addwf	utoa@i,w,c
  4406  0023E4  6ED9               	movwf	fsr2l,c
  4407  0023E6  0E00               	movlw	high _dbuf
  4408  0023E8  203B               	addwfc	utoa@i+1,w,c
  4409  0023EA  6EDA               	movwf	fsr2h,c
  4410  0023EC  C032  F001         	movff	utoa@n,___lomod@dividend
  4411  0023F0  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4412  0023F4  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4413  0023F8  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4414  0023FC  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4415  002400  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4416  002404  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4417  002408  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4418  00240C  0E0A               	movlw	10
  4419  00240E  6E09               	movwf	___lomod@divisor,c
  4420  002410  0E00               	movlw	0
  4421  002412  6E0A               	movwf	___lomod@divisor+1,c
  4422  002414  0E00               	movlw	0
  4423  002416  6E0B               	movwf	___lomod@divisor+2,c
  4424  002418  0E00               	movlw	0
  4425  00241A  6E0C               	movwf	___lomod@divisor+3,c
  4426  00241C  0E00               	movlw	0
  4427  00241E  6E0D               	movwf	___lomod@divisor+4,c
  4428  002420  0E00               	movlw	0
  4429  002422  6E0E               	movwf	___lomod@divisor+5,c
  4430  002424  0E00               	movlw	0
  4431  002426  6E0F               	movwf	___lomod@divisor+6,c
  4432  002428  0E00               	movlw	0
  4433  00242A  6E10               	movwf	___lomod@divisor+7,c
  4434  00242C  EC53  F018         	call	___lomod	;wreg free
  4435  002430  C001  F026         	movff	?___lomod,??_utoa
  4436  002434  C002  F027         	movff	?___lomod+1,??_utoa+1
  4437  002438  C003  F028         	movff	?___lomod+2,??_utoa+2
  4438  00243C  C004  F029         	movff	?___lomod+3,??_utoa+3
  4439  002440  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4440  002444  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4441  002448  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4442  00244C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4443  002450  5026               	movf	??_utoa,w,c
  4444  002452  0F30               	addlw	48
  4445  002454  6EDF               	movwf	indf2,c
  4446                           
  4447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4448  002456  062E               	decf	utoa@p,f,c
  4449  002458  A0D8               	btfss	status,0,c
  4450  00245A  062F               	decf	utoa@p+1,f,c
  4451                           
  4452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4453  00245C  0630               	decf	utoa@w,f,c
  4454  00245E  A0D8               	btfss	status,0,c
  4455  002460  0631               	decf	utoa@w+1,f,c
  4456                           
  4457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4458  002462  C032  F001         	movff	utoa@n,___lodiv@dividend
  4459  002466  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4460  00246A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4461  00246E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4462  002472  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4463  002476  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4464  00247A  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4465  00247E  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4466  002482  0E0A               	movlw	10
  4467  002484  6E09               	movwf	___lodiv@divisor,c
  4468  002486  0E00               	movlw	0
  4469  002488  6E0A               	movwf	___lodiv@divisor+1,c
  4470  00248A  0E00               	movlw	0
  4471  00248C  6E0B               	movwf	___lodiv@divisor+2,c
  4472  00248E  0E00               	movlw	0
  4473  002490  6E0C               	movwf	___lodiv@divisor+3,c
  4474  002492  0E00               	movlw	0
  4475  002494  6E0D               	movwf	___lodiv@divisor+4,c
  4476  002496  0E00               	movlw	0
  4477  002498  6E0E               	movwf	___lodiv@divisor+5,c
  4478  00249A  0E00               	movlw	0
  4479  00249C  6E0F               	movwf	___lodiv@divisor+6,c
  4480  00249E  0E00               	movlw	0
  4481  0024A0  6E10               	movwf	___lodiv@divisor+7,c
  4482  0024A2  ECB5  F016         	call	___lodiv	;wreg free
  4483  0024A6  C001  F032         	movff	?___lodiv,utoa@n
  4484  0024AA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4485  0024AE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4486  0024B2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4487  0024B6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4488  0024BA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4489  0024BE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4490  0024C2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4491  0024C6                     l3606:
  4492  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  4493                           
  4494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4495  0024C8  503A               	movf	utoa@i,w,c
  4496  0024CA  103B               	iorwf	utoa@i+1,w,c
  4497  0024CC  B4D8               	btfsc	status,2,c
  4498  0024CE  D01C               	goto	u3500
  4499  0024D0  5032               	movf	utoa@n,w,c
  4500  0024D2  1033               	iorwf	utoa@n+1,w,c
  4501  0024D4  1034               	iorwf	utoa@n+2,w,c
  4502  0024D6  1035               	iorwf	utoa@n+3,w,c
  4503  0024D8  1036               	iorwf	utoa@n+4,w,c
  4504  0024DA  1037               	iorwf	utoa@n+5,w,c
  4505  0024DC  1038               	iorwf	utoa@n+6,w,c
  4506  0024DE  1039               	iorwf	utoa@n+7,w,c
  4507  0024E0  A4D8               	btfss	status,2,c
  4508  0024E2  D77A               	goto	l3596
  4509  0024E4  BE2F               	btfsc	utoa@p+1,7,c
  4510  0024E6  D005               	goto	u3480
  4511  0024E8  502F               	movf	utoa@p+1,w,c
  4512  0024EA  E102               	bnz	u3481
  4513  0024EC  042E               	decf	utoa@p,w,c
  4514  0024EE  B0D8               	btfsc	status,0,c
  4515  0024F0                     u3481:
  4516  0024F0  D773               	goto	l3596
  4517  0024F2                     u3480:
  4518  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  4519  0024F4  BE31               	btfsc	utoa@w+1,7,c
  4520  0024F6  D008               	goto	u3500
  4521  0024F8  5031               	movf	utoa@w+1,w,c
  4522  0024FA  E103               	bnz	u3490
  4523  0024FC  0430               	decf	utoa@w,w,c
  4524  0024FE  A0D8               	btfss	status,0,c
  4525  002500  D003               	goto	u3500
  4526  002502                     u3490:
  4527  002502  0100               	movlb	0	; () banked
  4528  002504  B395               	btfsc	_flags& (0+255),1,b
  4529  002506  D768               	goto	l3596
  4530  002508                     u3500:
  4531  002508  FFFF               	dw	65535	; assembler added errata NOP
  4532                           
  4533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4534  00250A  C01C  F011         	movff	utoa@fp,pad@fp
  4535  00250E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4536  002512  0E9B               	movlw	low _dbuf
  4537  002514  243A               	addwf	utoa@i,w,c
  4538  002516  6E13               	movwf	pad@buf,c
  4539  002518  0E00               	movlw	high _dbuf
  4540  00251A  203B               	addwfc	utoa@i+1,w,c
  4541  00251C  6E14               	movwf	pad@buf+1,c
  4542  00251E  C030  F015         	movff	utoa@w,pad@p
  4543  002522  C031  F016         	movff	utoa@w+1,pad@p+1
  4544  002526  EC07  F019         	call	_pad	;wreg free
  4545  00252A  C011  F01C         	movff	?_pad,?_utoa
  4546  00252E  C012  F01D         	movff	?_pad+1,?_utoa+1
  4547  002532  0012               	return		;funcret
  4548  002534  FFFF               	dw	65535	; errata NOP
  4549  002536                     __end_of_utoa:
  4550                           	opt callstack 0
  4551                           
  4552 ;; *************** function ___lomod *****************
  4553 ;; Defined at:
  4554 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  dividend        8    0[COMRAM] unsigned long long 
  4557 ;;  divisor         8    8[COMRAM] unsigned long long 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  counter         1   16[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  8    0[COMRAM] unsigned long long 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:        16       0       0       0       0       0       0
  4570 ;;      Locals:         1       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:        17       0       0       0       0       0       0
  4573 ;;Total ram usage:       17 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_utoa
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text12
  4584  0030A6                     __ptext12:
  4585                           	opt callstack 0
  4586  0030A6                     ___lomod:
  4587                           	opt callstack 0
  4588  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  4589                           
  4590                           ;incstack = 0
  4591  0030A8  5009               	movf	___lomod@divisor,w,c
  4592  0030AA  100A               	iorwf	___lomod@divisor+1,w,c
  4593  0030AC  100B               	iorwf	___lomod@divisor+2,w,c
  4594  0030AE  100C               	iorwf	___lomod@divisor+3,w,c
  4595  0030B0  100D               	iorwf	___lomod@divisor+4,w,c
  4596  0030B2  100E               	iorwf	___lomod@divisor+5,w,c
  4597  0030B4  100F               	iorwf	___lomod@divisor+6,w,c
  4598  0030B6  1010               	iorwf	___lomod@divisor+7,w,c
  4599  0030B8  B4D8               	btfsc	status,2,c
  4600  0030BA  D040               	goto	l1012
  4601  0030BC  0E01               	movlw	1
  4602  0030BE  6E11               	movwf	___lomod@counter,c
  4603  0030C0  D00B               	goto	l3396
  4604  0030C2                     l3394:
  4605  0030C2  FFFF               	dw	65535	; assembler added errata NOP
  4606  0030C4  90D8               	bcf	status,0,c
  4607  0030C6  3609               	rlcf	___lomod@divisor,f,c
  4608  0030C8  360A               	rlcf	___lomod@divisor+1,f,c
  4609  0030CA  360B               	rlcf	___lomod@divisor+2,f,c
  4610  0030CC  360C               	rlcf	___lomod@divisor+3,f,c
  4611  0030CE  360D               	rlcf	___lomod@divisor+4,f,c
  4612  0030D0  360E               	rlcf	___lomod@divisor+5,f,c
  4613  0030D2  360F               	rlcf	___lomod@divisor+6,f,c
  4614  0030D4  3610               	rlcf	___lomod@divisor+7,f,c
  4615  0030D6  2A11               	incf	___lomod@counter,f,c
  4616  0030D8                     l3396:
  4617  0030D8  FFFF               	dw	65535	; assembler added errata NOP
  4618  0030DA  AE10               	btfss	___lomod@divisor+7,7,c
  4619  0030DC  D7F2               	goto	l3394
  4620  0030DE                     u3050:
  4621  0030DE  FFFF               	dw	65535	; assembler added errata NOP
  4622  0030E0  5009               	movf	___lomod@divisor,w,c
  4623  0030E2  5C01               	subwf	___lomod@dividend,w,c
  4624  0030E4  500A               	movf	___lomod@divisor+1,w,c
  4625  0030E6  5802               	subwfb	___lomod@dividend+1,w,c
  4626  0030E8  500B               	movf	___lomod@divisor+2,w,c
  4627  0030EA  5803               	subwfb	___lomod@dividend+2,w,c
  4628  0030EC  500C               	movf	___lomod@divisor+3,w,c
  4629  0030EE  5804               	subwfb	___lomod@dividend+3,w,c
  4630  0030F0  500D               	movf	___lomod@divisor+4,w,c
  4631  0030F2  5805               	subwfb	___lomod@dividend+4,w,c
  4632  0030F4  500E               	movf	___lomod@divisor+5,w,c
  4633  0030F6  5806               	subwfb	___lomod@dividend+5,w,c
  4634  0030F8  500F               	movf	___lomod@divisor+6,w,c
  4635  0030FA  5807               	subwfb	___lomod@dividend+6,w,c
  4636  0030FC  5010               	movf	___lomod@divisor+7,w,c
  4637  0030FE  5808               	subwfb	___lomod@dividend+7,w,c
  4638  003100  A0D8               	btfss	status,0,c
  4639  003102  D010               	goto	l3402
  4640  003104  5009               	movf	___lomod@divisor,w,c
  4641  003106  5E01               	subwf	___lomod@dividend,f,c
  4642  003108  500A               	movf	___lomod@divisor+1,w,c
  4643  00310A  5A02               	subwfb	___lomod@dividend+1,f,c
  4644  00310C  500B               	movf	___lomod@divisor+2,w,c
  4645  00310E  5A03               	subwfb	___lomod@dividend+2,f,c
  4646  003110  500C               	movf	___lomod@divisor+3,w,c
  4647  003112  5A04               	subwfb	___lomod@dividend+3,f,c
  4648  003114  500D               	movf	___lomod@divisor+4,w,c
  4649  003116  5A05               	subwfb	___lomod@dividend+4,f,c
  4650  003118  500E               	movf	___lomod@divisor+5,w,c
  4651  00311A  5A06               	subwfb	___lomod@dividend+5,f,c
  4652  00311C  500F               	movf	___lomod@divisor+6,w,c
  4653  00311E  5A07               	subwfb	___lomod@dividend+6,f,c
  4654  003120  5010               	movf	___lomod@divisor+7,w,c
  4655  003122  5A08               	subwfb	___lomod@dividend+7,f,c
  4656  003124                     l3402:
  4657  003124  FFFF               	dw	65535	; assembler added errata NOP
  4658  003126  90D8               	bcf	status,0,c
  4659  003128  3210               	rrcf	___lomod@divisor+7,f,c
  4660  00312A  320F               	rrcf	___lomod@divisor+6,f,c
  4661  00312C  320E               	rrcf	___lomod@divisor+5,f,c
  4662  00312E  320D               	rrcf	___lomod@divisor+4,f,c
  4663  003130  320C               	rrcf	___lomod@divisor+3,f,c
  4664  003132  320B               	rrcf	___lomod@divisor+2,f,c
  4665  003134  320A               	rrcf	___lomod@divisor+1,f,c
  4666  003136  3209               	rrcf	___lomod@divisor,f,c
  4667  003138  2E11               	decfsz	___lomod@counter,f,c
  4668  00313A  D7D1               	goto	u3050
  4669  00313C                     l1012:
  4670  00313C  FFFF               	dw	65535	; assembler added errata NOP
  4671  00313E  C001  F001         	movff	___lomod@dividend,?___lomod
  4672  003142  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4673  003146  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4674  00314A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4675  00314E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4676  003152  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4677  003156  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4678  00315A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4679  00315E  0012               	return		;funcret
  4680  003160  FFFF               	dw	65535	; errata NOP
  4681  003162                     __end_of___lomod:
  4682                           	opt callstack 0
  4683                           
  4684 ;; *************** function ___lodiv *****************
  4685 ;; Defined at:
  4686 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  dividend        8    0[COMRAM] unsigned long long 
  4689 ;;  divisor         8    8[COMRAM] unsigned long long 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  quotient        8   16[COMRAM] unsigned long long 
  4692 ;;  counter         1   24[COMRAM] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  8    0[COMRAM] unsigned long long 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4702 ;;      Params:        16       0       0       0       0       0       0
  4703 ;;      Locals:         9       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0
  4705 ;;      Totals:        25       0       0       0       0       0       0
  4706 ;;Total ram usage:       25 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    2
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_utoa
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text13
  4717  002D6A                     __ptext13:
  4718                           	opt callstack 0
  4719  002D6A                     ___lodiv:
  4720                           	opt callstack 0
  4721  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  4722                           
  4723                           ;incstack = 0
  4724  002D6C  EE20  F011         	lfsr	2,___lodiv@quotient
  4725  002D70  0E07               	movlw	7
  4726  002D72                     u3001:
  4727  002D72  6ADE               	clrf	postinc2,c
  4728  002D74  06E8               	decf	wreg,f,c
  4729  002D76  E2FD               	bc	u3001
  4730  002D78  5009               	movf	___lodiv@divisor,w,c
  4731  002D7A  100A               	iorwf	___lodiv@divisor+1,w,c
  4732  002D7C  100B               	iorwf	___lodiv@divisor+2,w,c
  4733  002D7E  100C               	iorwf	___lodiv@divisor+3,w,c
  4734  002D80  100D               	iorwf	___lodiv@divisor+4,w,c
  4735  002D82  100E               	iorwf	___lodiv@divisor+5,w,c
  4736  002D84  100F               	iorwf	___lodiv@divisor+6,w,c
  4737  002D86  1010               	iorwf	___lodiv@divisor+7,w,c
  4738  002D88  B4D8               	btfsc	status,2,c
  4739  002D8A  D04A               	goto	l1002
  4740  002D8C  0E01               	movlw	1
  4741  002D8E  6E19               	movwf	___lodiv@counter,c
  4742  002D90  D00B               	goto	l3376
  4743  002D92                     l3374:
  4744  002D92  FFFF               	dw	65535	; assembler added errata NOP
  4745  002D94  90D8               	bcf	status,0,c
  4746  002D96  3609               	rlcf	___lodiv@divisor,f,c
  4747  002D98  360A               	rlcf	___lodiv@divisor+1,f,c
  4748  002D9A  360B               	rlcf	___lodiv@divisor+2,f,c
  4749  002D9C  360C               	rlcf	___lodiv@divisor+3,f,c
  4750  002D9E  360D               	rlcf	___lodiv@divisor+4,f,c
  4751  002DA0  360E               	rlcf	___lodiv@divisor+5,f,c
  4752  002DA2  360F               	rlcf	___lodiv@divisor+6,f,c
  4753  002DA4  3610               	rlcf	___lodiv@divisor+7,f,c
  4754  002DA6  2A19               	incf	___lodiv@counter,f,c
  4755  002DA8                     l3376:
  4756  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  4757  002DAA  AE10               	btfss	___lodiv@divisor+7,7,c
  4758  002DAC  D7F2               	goto	l3374
  4759  002DAE                     u3020:
  4760  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  4761  002DB0  90D8               	bcf	status,0,c
  4762  002DB2  3611               	rlcf	___lodiv@quotient,f,c
  4763  002DB4  3612               	rlcf	___lodiv@quotient+1,f,c
  4764  002DB6  3613               	rlcf	___lodiv@quotient+2,f,c
  4765  002DB8  3614               	rlcf	___lodiv@quotient+3,f,c
  4766  002DBA  3615               	rlcf	___lodiv@quotient+4,f,c
  4767  002DBC  3616               	rlcf	___lodiv@quotient+5,f,c
  4768  002DBE  3617               	rlcf	___lodiv@quotient+6,f,c
  4769  002DC0  3618               	rlcf	___lodiv@quotient+7,f,c
  4770  002DC2  5009               	movf	___lodiv@divisor,w,c
  4771  002DC4  5C01               	subwf	___lodiv@dividend,w,c
  4772  002DC6  500A               	movf	___lodiv@divisor+1,w,c
  4773  002DC8  5802               	subwfb	___lodiv@dividend+1,w,c
  4774  002DCA  500B               	movf	___lodiv@divisor+2,w,c
  4775  002DCC  5803               	subwfb	___lodiv@dividend+2,w,c
  4776  002DCE  500C               	movf	___lodiv@divisor+3,w,c
  4777  002DD0  5804               	subwfb	___lodiv@dividend+3,w,c
  4778  002DD2  500D               	movf	___lodiv@divisor+4,w,c
  4779  002DD4  5805               	subwfb	___lodiv@dividend+4,w,c
  4780  002DD6  500E               	movf	___lodiv@divisor+5,w,c
  4781  002DD8  5806               	subwfb	___lodiv@dividend+5,w,c
  4782  002DDA  500F               	movf	___lodiv@divisor+6,w,c
  4783  002DDC  5807               	subwfb	___lodiv@dividend+6,w,c
  4784  002DDE  5010               	movf	___lodiv@divisor+7,w,c
  4785  002DE0  5808               	subwfb	___lodiv@dividend+7,w,c
  4786  002DE2  A0D8               	btfss	status,0,c
  4787  002DE4  D011               	goto	l3386
  4788  002DE6  5009               	movf	___lodiv@divisor,w,c
  4789  002DE8  5E01               	subwf	___lodiv@dividend,f,c
  4790  002DEA  500A               	movf	___lodiv@divisor+1,w,c
  4791  002DEC  5A02               	subwfb	___lodiv@dividend+1,f,c
  4792  002DEE  500B               	movf	___lodiv@divisor+2,w,c
  4793  002DF0  5A03               	subwfb	___lodiv@dividend+2,f,c
  4794  002DF2  500C               	movf	___lodiv@divisor+3,w,c
  4795  002DF4  5A04               	subwfb	___lodiv@dividend+3,f,c
  4796  002DF6  500D               	movf	___lodiv@divisor+4,w,c
  4797  002DF8  5A05               	subwfb	___lodiv@dividend+4,f,c
  4798  002DFA  500E               	movf	___lodiv@divisor+5,w,c
  4799  002DFC  5A06               	subwfb	___lodiv@dividend+5,f,c
  4800  002DFE  500F               	movf	___lodiv@divisor+6,w,c
  4801  002E00  5A07               	subwfb	___lodiv@dividend+6,f,c
  4802  002E02  5010               	movf	___lodiv@divisor+7,w,c
  4803  002E04  5A08               	subwfb	___lodiv@dividend+7,f,c
  4804  002E06  8011               	bsf	___lodiv@quotient,0,c
  4805  002E08                     l3386:
  4806  002E08  FFFF               	dw	65535	; assembler added errata NOP
  4807  002E0A  90D8               	bcf	status,0,c
  4808  002E0C  3210               	rrcf	___lodiv@divisor+7,f,c
  4809  002E0E  320F               	rrcf	___lodiv@divisor+6,f,c
  4810  002E10  320E               	rrcf	___lodiv@divisor+5,f,c
  4811  002E12  320D               	rrcf	___lodiv@divisor+4,f,c
  4812  002E14  320C               	rrcf	___lodiv@divisor+3,f,c
  4813  002E16  320B               	rrcf	___lodiv@divisor+2,f,c
  4814  002E18  320A               	rrcf	___lodiv@divisor+1,f,c
  4815  002E1A  3209               	rrcf	___lodiv@divisor,f,c
  4816  002E1C  2E19               	decfsz	___lodiv@counter,f,c
  4817  002E1E  D7C7               	goto	u3020
  4818  002E20                     l1002:
  4819  002E20  FFFF               	dw	65535	; assembler added errata NOP
  4820  002E22  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4821  002E26  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4822  002E2A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4823  002E2E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4824  002E32  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4825  002E36  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4826  002E3A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4827  002E3E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4828  002E42  0012               	return		;funcret
  4829  002E44  FFFF               	dw	65535	; errata NOP
  4830  002E46                     __end_of___lodiv:
  4831                           	opt callstack 0
  4832                           
  4833 ;; *************** function _strncmp *****************
  4834 ;; Defined at:
  4835 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4838 ;;		 -> STR_2(3), STR_1(4), 
  4839 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4840 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4841 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4842 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4843 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4844 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4845 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4846 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4847 ;;  n               2    4[COMRAM] unsigned int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4850 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4851 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4852 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4853 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4854 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4855 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4856 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4857 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4858 ;;		 -> STR_2(3), STR_1(4), 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2    0[COMRAM] int 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4868 ;;      Params:         6       0       0       0       0       0       0
  4869 ;;      Locals:         4       0       0       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0       0       0
  4871 ;;      Totals:        11       0       0       0       0       0       0
  4872 ;;Total ram usage:       11 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    2
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_vfpfcnvrt
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text14
  4883  002FE4                     __ptext14:
  4884                           	opt callstack 0
  4885  002FE4                     _strncmp:
  4886                           	opt callstack 0
  4887  002FE4  FFFF               	dw	65535	; assembler added errata NOP
  4888                           
  4889                           ;incstack = 0
  4890  002FE6  C001  F008         	movff	strncmp@_l,strncmp@l
  4891  002FEA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4892  002FEE  C003  F00A         	movff	strncmp@_r,strncmp@r
  4893  002FF2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4894  002FF6  0605               	decf	strncmp@n,f,c
  4895  002FF8  A0D8               	btfss	status,0,c
  4896  002FFA  0606               	decf	strncmp@n+1,f,c
  4897  002FFC  2805               	incf	strncmp@n,w,c
  4898  002FFE  E110               	bnz	l3736
  4899  003000  2806               	incf	strncmp@n+1,w,c
  4900  003002  A4D8               	btfss	status,2,c
  4901  003004  D00D               	goto	l3736
  4902  003006  0E00               	movlw	0
  4903  003008  6E02               	movwf	?_strncmp+1,c
  4904  00300A  0E00               	movlw	0
  4905  00300C  6E01               	movwf	?_strncmp,c
  4906  00300E  D048               	goto	l1370
  4907  003010                     l3734:
  4908  003010  FFFF               	dw	65535	; assembler added errata NOP
  4909  003012  4A08               	infsnz	strncmp@l,f,c
  4910  003014  2A09               	incf	strncmp@l+1,f,c
  4911  003016  4A0A               	infsnz	strncmp@r,f,c
  4912  003018  2A0B               	incf	strncmp@r+1,f,c
  4913  00301A  0605               	decf	strncmp@n,f,c
  4914  00301C  A0D8               	btfss	status,0,c
  4915  00301E  0606               	decf	strncmp@n+1,f,c
  4916  003020                     l3736:
  4917  003020  FFFF               	dw	65535	; assembler added errata NOP
  4918  003022  C008  FFF6         	movff	strncmp@l,tblptrl
  4919  003026  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4920  00302A                     	if	0	;tblptru may be non-zero
  4921  00302A                     	endif
  4922  00302A                     	if	0	;tblptru may be non-zero
  4923  00302A                     	endif
  4924  00302A  0008               	tblrd		*
  4925  00302C  FFFF               	dw	65535	; errata NOP
  4926  00302E  50F5               	movf	tablat,w,c
  4927  003030  0900               	iorlw	0
  4928  003032  B4D8               	btfsc	status,2,c
  4929  003034  D020               	goto	u3790
  4930  003036  C00A  FFF6         	movff	strncmp@r,tblptrl
  4931  00303A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4932  00303E                     	if	0	;tblptru may be non-zero
  4933  00303E                     	endif
  4934  00303E                     	if	0	;tblptru may be non-zero
  4935  00303E                     	endif
  4936  00303E  0008               	tblrd		*
  4937  003040  FFFF               	dw	65535	; errata NOP
  4938  003042  50F5               	movf	tablat,w,c
  4939  003044  0900               	iorlw	0
  4940  003046  B4D8               	btfsc	status,2,c
  4941  003048  D016               	goto	u3790
  4942  00304A  5005               	movf	strncmp@n,w,c
  4943  00304C  1006               	iorwf	strncmp@n+1,w,c
  4944  00304E  B4D8               	btfsc	status,2,c
  4945  003050  D012               	goto	u3790
  4946  003052  C008  FFF6         	movff	strncmp@l,tblptrl
  4947  003056  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4948  00305A                     	if	0	;tblptru may be non-zero
  4949  00305A                     	endif
  4950  00305A                     	if	0	;tblptru may be non-zero
  4951  00305A                     	endif
  4952  00305A  0008               	tblrd		*
  4953  00305C  FFFF               	dw	65535	; errata NOP
  4954  00305E  CFF5 F007          	movff	tablat,??_strncmp
  4955  003062  C00A  FFF6         	movff	strncmp@r,tblptrl
  4956  003066  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4957  00306A                     	if	0	;tblptru may be non-zero
  4958  00306A                     	endif
  4959  00306A                     	if	0	;tblptru may be non-zero
  4960  00306A                     	endif
  4961  00306A  0008               	tblrd		*
  4962  00306C  FFFF               	dw	65535	; errata NOP
  4963  00306E  50F5               	movf	tablat,w,c
  4964  003070  1807               	xorwf	??_strncmp,w,c
  4965  003072  B4D8               	btfsc	status,2,c
  4966  003074  D7CD               	goto	l3734
  4967  003076                     u3790:
  4968  003076  FFFF               	dw	65535	; assembler added errata NOP
  4969  003078  C008  FFF6         	movff	strncmp@l,tblptrl
  4970  00307C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4971  003080                     	if	0	;tblptru may be non-zero
  4972  003080                     	endif
  4973  003080                     	if	0	;tblptru may be non-zero
  4974  003080                     	endif
  4975  003080  0008               	tblrd		*
  4976  003082  FFFF               	dw	65535	; errata NOP
  4977  003084  CFF5 F007          	movff	tablat,??_strncmp
  4978  003088  C00A  FFF6         	movff	strncmp@r,tblptrl
  4979  00308C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4980  003090                     	if	0	;tblptru may be non-zero
  4981  003090                     	endif
  4982  003090                     	if	0	;tblptru may be non-zero
  4983  003090                     	endif
  4984  003090  0008               	tblrd		*
  4985  003092  FFFF               	dw	65535	; errata NOP
  4986  003094  50F5               	movf	tablat,w,c
  4987  003096  5C07               	subwf	??_strncmp,w,c
  4988  003098  6E01               	movwf	?_strncmp,c
  4989  00309A  6A02               	clrf	?_strncmp+1,c
  4990  00309C  A0D8               	btfss	status,0,c
  4991  00309E  0602               	decf	?_strncmp+1,f,c
  4992  0030A0                     l1370:
  4993  0030A0  FFFF               	dw	65535	; assembler added errata NOP
  4994  0030A2  0012               	return		;funcret
  4995  0030A4  FFFF               	dw	65535	; errata NOP
  4996  0030A6                     __end_of_strncmp:
  4997                           	opt callstack 0
  4998                           
  4999 ;; *************** function _stoa *****************
  5000 ;; Defined at:
  5001 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5004 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5005 ;;  s               2   11[COMRAM] PTR unsigned char 
  5006 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5009 ;;  l               2   29[COMRAM] int 
  5010 ;;  p               2   27[COMRAM] int 
  5011 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5012 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5013 ;;  w               2   23[COMRAM] int 
  5014 ;;  i               2   21[COMRAM] int 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    9[COMRAM] int 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5024 ;;      Params:         4       0       0       0       0       0       0
  5025 ;;      Locals:        17       0       0       0       0       0       0
  5026 ;;      Temps:          1       0       0       0       0       0       0
  5027 ;;      Totals:        22       0       0       0       0       0       0
  5028 ;;Total ram usage:       22 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    4
  5031 ;; This function calls:
  5032 ;;		_fputc
  5033 ;;		_strlen
  5034 ;; This function is called by:
  5035 ;;		_vfpfcnvrt
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text15
  5040  002AEE                     __ptext15:
  5041                           	opt callstack 0
  5042  002AEE                     _stoa:
  5043                           	opt callstack 0
  5044  002AEE  FFFF               	dw	65535	; assembler added errata NOP
  5045                           
  5046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5047                           
  5048                           ;incstack = 0
  5049  002AF0  EE20  F0DF         	lfsr	2,stoa@F1152
  5050  002AF4  EE10  F00F         	lfsr	1,stoa@nuls
  5051  002AF8  0E06               	movlw	6
  5052  002AFA                     u3351:
  5053  002AFA  CFDB FFE3          	movff	plusw2,plusw1
  5054  002AFE  06E8               	decf	wreg,f,c
  5055  002B00  E2FC               	bc	u3351
  5056                           
  5057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5058  002B02  C00C  F01A         	movff	stoa@s,stoa@cp
  5059  002B06  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5060                           
  5061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5062  002B0A  501A               	movf	stoa@cp,w,c
  5063  002B0C  101B               	iorwf	stoa@cp+1,w,c
  5064  002B0E  A4D8               	btfss	status,2,c
  5065  002B10  D004               	goto	l3550
  5066                           
  5067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5068  002B12  0E0F               	movlw	low stoa@nuls
  5069  002B14  6E1A               	movwf	stoa@cp,c
  5070  002B16  0E00               	movlw	high stoa@nuls
  5071  002B18  6E1B               	movwf	stoa@cp+1,c
  5072  002B1A                     l3550:
  5073  002B1A  FFFF               	dw	65535	; assembler added errata NOP
  5074                           
  5075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5076  002B1C  C01A  F001         	movff	stoa@cp,strlen@s
  5077  002B20  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5078  002B24  ECFF  F01B         	call	_strlen	;wreg free
  5079  002B28  C001  F01E         	movff	?_strlen,stoa@l
  5080  002B2C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5081                           
  5082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5083  002B30  C093  F01C         	movff	_prec,stoa@p
  5084  002B34  C094  F01D         	movff	_prec+1,stoa@p+1
  5085                           
  5086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5087  002B38  BE1D               	btfsc	stoa@p+1,7,c
  5088  002B3A  D00E               	goto	l411
  5089  002B3C  501E               	movf	stoa@l,w,c
  5090  002B3E  5C1C               	subwf	stoa@p,w,c
  5091  002B40  501D               	movf	stoa@p+1,w,c
  5092  002B42  0A80               	xorlw	128
  5093  002B44  6E0E               	movwf	??_stoa& (0+255),c
  5094  002B46  501F               	movf	stoa@l+1,w,c
  5095  002B48  0A80               	xorlw	128
  5096  002B4A  580E               	subwfb	??_stoa& (0+255),w,c
  5097  002B4C  B0D8               	btfsc	status,0,c
  5098  002B4E  D004               	goto	l411
  5099  002B50  C01C  F01E         	movff	stoa@p,stoa@l
  5100  002B54  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5101  002B58                     l411:
  5102  002B58  FFFF               	dw	65535	; assembler added errata NOP
  5103                           
  5104                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5105  002B5A  C01E  F01C         	movff	stoa@l,stoa@p
  5106  002B5E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5107                           
  5108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5109  002B62  C091  F018         	movff	_width,stoa@w
  5110  002B66  C092  F019         	movff	_width+1,stoa@w+1
  5111                           
  5112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5113  002B6A  0100               	movlb	0	; () banked
  5114  002B6C  A195               	btfss	_flags& (0+255),0,b
  5115  002B6E  D00E               	goto	l3564
  5116  002B70  D018               	goto	u3400
  5117  002B72                     l3560:
  5118  002B72  FFFF               	dw	65535	; assembler added errata NOP
  5119                           
  5120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5121  002B74  0E00               	movlw	0
  5122  002B76  6E02               	movwf	fputc@c+1,c
  5123  002B78  0E20               	movlw	32
  5124  002B7A  6E01               	movwf	fputc@c,c
  5125  002B7C  C00A  F003         	movff	stoa@fp,fputc@fp
  5126  002B80  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5127  002B84  ECB1  F018         	call	_fputc	;wreg free
  5128                           
  5129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5130  002B88  4A1E               	infsnz	stoa@l,f,c
  5131  002B8A  2A1F               	incf	stoa@l+1,f,c
  5132  002B8C                     l3564:
  5133  002B8C  FFFF               	dw	65535	; assembler added errata NOP
  5134                           
  5135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5136  002B8E  5018               	movf	stoa@w,w,c
  5137  002B90  5C1E               	subwf	stoa@l,w,c
  5138  002B92  501F               	movf	stoa@l+1,w,c
  5139  002B94  0A80               	xorlw	128
  5140  002B96  6E0E               	movwf	??_stoa& (0+255),c
  5141  002B98  5019               	movf	stoa@w+1,w,c
  5142  002B9A  0A80               	xorlw	128
  5143  002B9C  580E               	subwfb	??_stoa& (0+255),w,c
  5144  002B9E  A0D8               	btfss	status,0,c
  5145  002BA0  D7E8               	goto	l3560
  5146  002BA2                     u3400:
  5147  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  5148                           
  5149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5150  002BA4  0E00               	movlw	0
  5151  002BA6  6E17               	movwf	stoa@i+1,c
  5152  002BA8  0E00               	movlw	0
  5153  002BAA  6E16               	movwf	stoa@i,c
  5154                           
  5155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5156  002BAC  D014               	goto	l3574
  5157  002BAE                     l3568:
  5158  002BAE  FFFF               	dw	65535	; assembler added errata NOP
  5159                           
  5160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5161  002BB0  C01A  FFD9         	movff	stoa@cp,fsr2l
  5162  002BB4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5163  002BB8  50DF               	movf	indf2,w,c
  5164  002BBA  6E0E               	movwf	??_stoa& (0+255),c
  5165  002BBC  500E               	movf	??_stoa,w,c
  5166  002BBE  6E01               	movwf	fputc@c,c
  5167  002BC0  6A02               	clrf	fputc@c+1,c
  5168  002BC2  C00A  F003         	movff	stoa@fp,fputc@fp
  5169  002BC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5170  002BCA  ECB1  F018         	call	_fputc	;wreg free
  5171                           
  5172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5173  002BCE  4A1A               	infsnz	stoa@cp,f,c
  5174  002BD0  2A1B               	incf	stoa@cp+1,f,c
  5175                           
  5176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5177  002BD2  4A16               	infsnz	stoa@i,f,c
  5178  002BD4  2A17               	incf	stoa@i+1,f,c
  5179  002BD6                     l3574:
  5180  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  5181                           
  5182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5183  002BD8  501C               	movf	stoa@p,w,c
  5184  002BDA  5C16               	subwf	stoa@i,w,c
  5185  002BDC  5017               	movf	stoa@i+1,w,c
  5186  002BDE  0A80               	xorlw	128
  5187  002BE0  6E0E               	movwf	??_stoa& (0+255),c
  5188  002BE2  501D               	movf	stoa@p+1,w,c
  5189  002BE4  0A80               	xorlw	128
  5190  002BE6  580E               	subwfb	??_stoa& (0+255),w,c
  5191  002BE8  A0D8               	btfss	status,0,c
  5192  002BEA  D7E1               	goto	l3568
  5193                           
  5194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5195  002BEC  0100               	movlb	0	; () banked
  5196  002BEE  B195               	btfsc	_flags& (0+255),0,b
  5197  002BF0  D00E               	goto	l3582
  5198  002BF2  D018               	goto	u3430
  5199  002BF4                     l3578:
  5200  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  5201                           
  5202                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5203  002BF6  0E00               	movlw	0
  5204  002BF8  6E02               	movwf	fputc@c+1,c
  5205  002BFA  0E20               	movlw	32
  5206  002BFC  6E01               	movwf	fputc@c,c
  5207  002BFE  C00A  F003         	movff	stoa@fp,fputc@fp
  5208  002C02  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5209  002C06  ECB1  F018         	call	_fputc	;wreg free
  5210                           
  5211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5212  002C0A  4A1E               	infsnz	stoa@l,f,c
  5213  002C0C  2A1F               	incf	stoa@l+1,f,c
  5214  002C0E                     l3582:
  5215  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  5216                           
  5217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5218  002C10  5018               	movf	stoa@w,w,c
  5219  002C12  5C1E               	subwf	stoa@l,w,c
  5220  002C14  501F               	movf	stoa@l+1,w,c
  5221  002C16  0A80               	xorlw	128
  5222  002C18  6E0E               	movwf	??_stoa& (0+255),c
  5223  002C1A  5019               	movf	stoa@w+1,w,c
  5224  002C1C  0A80               	xorlw	128
  5225  002C1E  580E               	subwfb	??_stoa& (0+255),w,c
  5226  002C20  A0D8               	btfss	status,0,c
  5227  002C22  D7E8               	goto	l3578
  5228  002C24                     u3430:
  5229  002C24  FFFF               	dw	65535	; assembler added errata NOP
  5230                           
  5231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5232                           
  5233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5234  002C26  C01E  F00A         	movff	stoa@l,?_stoa
  5235  002C2A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5236  002C2E  0012               	return		;funcret
  5237  002C30  FFFF               	dw	65535	; errata NOP
  5238  002C32                     __end_of_stoa:
  5239                           	opt callstack 0
  5240                           
  5241 ;; *************** function _otoa *****************
  5242 ;; Defined at:
  5243 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5246 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5247 ;;  d               8   29[COMRAM] unsigned long long 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  n               8   51[COMRAM] unsigned long long 
  5250 ;;  i               2   59[COMRAM] int 
  5251 ;;  w               2   49[COMRAM] int 
  5252 ;;  t               2   47[COMRAM] int 
  5253 ;;  p               2   45[COMRAM] int 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  2   27[COMRAM] int 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5263 ;;      Params:        10       0       0       0       0       0       0
  5264 ;;      Locals:        16       0       0       0       0       0       0
  5265 ;;      Temps:          8       0       0       0       0       0       0
  5266 ;;      Totals:        34       0       0       0       0       0       0
  5267 ;;Total ram usage:       34 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    6
  5270 ;; This function calls:
  5271 ;;		_pad
  5272 ;; This function is called by:
  5273 ;;		_vfpfcnvrt
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text16
  5278  002536                     __ptext16:
  5279                           	opt callstack 0
  5280  002536                     _otoa:
  5281                           	opt callstack 0
  5282  002536  FFFF               	dw	65535	; assembler added errata NOP
  5283                           
  5284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5285                           
  5286                           ;incstack = 0
  5287  002538  0100               	movlb	0	; () banked
  5288  00253A  AF94               	btfss	(_prec+1)& (0+255),7,b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5292  00253C  9395               	bcf	_flags& (0+255),1,b
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5296  00253E  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5297  002540  D005               	goto	u3260
  5298  002542  5194               	movf	(_prec+1)& (0+255),w,b
  5299  002544  E109               	bnz	l391
  5300  002546  0593               	decf	_prec& (0+255),w,b
  5301  002548  B0D8               	btfsc	status,0,c
  5302  00254A  D006               	goto	l391
  5303  00254C                     u3260:
  5304  00254C  FFFF               	dw	65535	; assembler added errata NOP
  5305                           
  5306                           ; BSR set to: 0
  5307  00254E  0E00               	movlw	0
  5308  002550  6E2F               	movwf	otoa@p+1,c
  5309  002552  0E01               	movlw	1
  5310  002554  6E2E               	movwf	otoa@p,c
  5311  002556  D005               	goto	l393
  5312  002558                     l391:
  5313  002558  FFFF               	dw	65535	; assembler added errata NOP
  5314                           
  5315                           ; BSR set to: 0
  5316  00255A  C093  F02E         	movff	_prec,otoa@p
  5317  00255E  C094  F02F         	movff	_prec+1,otoa@p+1
  5318  002562                     l393:
  5319  002562  FFFF               	dw	65535	; assembler added errata NOP
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5323  002564  C091  F032         	movff	_width,otoa@w
  5324  002568  C092  F033         	movff	_width+1,otoa@w+1
  5325                           
  5326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5327  00256C  C01E  F034         	movff	otoa@d,otoa@n
  5328  002570  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5329  002574  C020  F036         	movff	otoa@d+2,otoa@n+2
  5330  002578  C021  F037         	movff	otoa@d+3,otoa@n+3
  5331  00257C  C022  F038         	movff	otoa@d+4,otoa@n+4
  5332  002580  C023  F039         	movff	otoa@d+5,otoa@n+5
  5333  002584  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5334  002588  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5338  00258C  0E00               	movlw	0
  5339  00258E  6E3D               	movwf	otoa@i+1,c
  5340  002590  0E1F               	movlw	31
  5341  002592  6E3C               	movwf	otoa@i,c
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5345  002594  0E00               	movlw	0
  5346  002596  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5350  002598  0E00               	movlw	0
  5351  00259A  6E31               	movwf	otoa@t+1,c
  5352  00259C  0E00               	movlw	0
  5353  00259E  6E30               	movwf	otoa@t,c
  5354                           
  5355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5356  0025A0  D046               	goto	l3520
  5357  0025A2                     l3508:
  5358  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  5359                           
  5360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5361  0025A4  063C               	decf	otoa@i,f,c
  5362  0025A6  A0D8               	btfss	status,0,c
  5363  0025A8  063D               	decf	otoa@i+1,f,c
  5364                           
  5365                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5366  0025AA  0E07               	movlw	7
  5367  0025AC  1434               	andwf	otoa@n,w,c
  5368  0025AE  6E30               	movwf	otoa@t,c
  5369  0025B0  6A31               	clrf	otoa@t+1,c
  5370                           
  5371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5372  0025B2  0E9B               	movlw	low _dbuf
  5373  0025B4  243C               	addwf	otoa@i,w,c
  5374  0025B6  6ED9               	movwf	fsr2l,c
  5375  0025B8  0E00               	movlw	high _dbuf
  5376  0025BA  203D               	addwfc	otoa@i+1,w,c
  5377  0025BC  6EDA               	movwf	fsr2h,c
  5378  0025BE  5030               	movf	otoa@t,w,c
  5379  0025C0  0F30               	addlw	48
  5380  0025C2  6EDF               	movwf	indf2,c
  5381                           
  5382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5383  0025C4  062E               	decf	otoa@p,f,c
  5384  0025C6  A0D8               	btfss	status,0,c
  5385  0025C8  062F               	decf	otoa@p+1,f,c
  5386                           
  5387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5388  0025CA  0632               	decf	otoa@w,f,c
  5389  0025CC  A0D8               	btfss	status,0,c
  5390  0025CE  0633               	decf	otoa@w+1,f,c
  5391                           
  5392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5393  0025D0  C034  F026         	movff	otoa@n,??_otoa
  5394  0025D4  C035  F027         	movff	otoa@n+1,??_otoa+1
  5395  0025D8  C036  F028         	movff	otoa@n+2,??_otoa+2
  5396  0025DC  C037  F029         	movff	otoa@n+3,??_otoa+3
  5397  0025E0  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5398  0025E4  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5399  0025E8  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5400  0025EC  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5401  0025F0  0E04               	movlw	4
  5402  0025F2  D00A               	goto	u3270
  5403  0025F4                     u3275:
  5404  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  5405  0025F6  90D8               	bcf	status,0,c
  5406  0025F8  322D               	rrcf	??_otoa+7,f,c
  5407  0025FA  322C               	rrcf	??_otoa+6,f,c
  5408  0025FC  322B               	rrcf	??_otoa+5,f,c
  5409  0025FE  322A               	rrcf	??_otoa+4,f,c
  5410  002600  3229               	rrcf	??_otoa+3,f,c
  5411  002602  3228               	rrcf	??_otoa+2,f,c
  5412  002604  3227               	rrcf	??_otoa+1,f,c
  5413  002606  3226               	rrcf	??_otoa,f,c
  5414  002608                     u3270:
  5415  002608  FFFF               	dw	65535	; assembler added errata NOP
  5416  00260A  2EE8               	decfsz	wreg,f,c
  5417  00260C  D7F3               	goto	u3275
  5418  00260E  C026  F034         	movff	??_otoa,otoa@n
  5419  002612  C027  F035         	movff	??_otoa+1,otoa@n+1
  5420  002616  C028  F036         	movff	??_otoa+2,otoa@n+2
  5421  00261A  C029  F037         	movff	??_otoa+3,otoa@n+3
  5422  00261E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5423  002622  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5424  002626  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5425  00262A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5426  00262E                     l3520:
  5427  00262E  FFFF               	dw	65535	; assembler added errata NOP
  5428                           
  5429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5430  002630  BE3D               	btfsc	otoa@i+1,7,c
  5431  002632  D021               	goto	u3320
  5432  002634  503D               	movf	otoa@i+1,w,c
  5433  002636  E103               	bnz	u3280
  5434  002638  043C               	decf	otoa@i,w,c
  5435  00263A  A0D8               	btfss	status,0,c
  5436  00263C  D01C               	goto	u3320
  5437  00263E                     u3280:
  5438  00263E  5034               	movf	otoa@n,w,c
  5439  002640  1035               	iorwf	otoa@n+1,w,c
  5440  002642  1036               	iorwf	otoa@n+2,w,c
  5441  002644  1037               	iorwf	otoa@n+3,w,c
  5442  002646  1038               	iorwf	otoa@n+4,w,c
  5443  002648  1039               	iorwf	otoa@n+5,w,c
  5444  00264A  103A               	iorwf	otoa@n+6,w,c
  5445  00264C  103B               	iorwf	otoa@n+7,w,c
  5446  00264E  A4D8               	btfss	status,2,c
  5447  002650  D7A8               	goto	l3508
  5448  002652  BE2F               	btfsc	otoa@p+1,7,c
  5449  002654  D005               	goto	u3300
  5450  002656  502F               	movf	otoa@p+1,w,c
  5451  002658  E1A4               	bnz	l3508
  5452  00265A  042E               	decf	otoa@p,w,c
  5453  00265C  B0D8               	btfsc	status,0,c
  5454  00265E  D7A1               	goto	l3508
  5455  002660                     u3300:
  5456  002660  FFFF               	dw	65535	; assembler added errata NOP
  5457  002662  BE33               	btfsc	otoa@w+1,7,c
  5458  002664  D008               	goto	u3320
  5459  002666  5033               	movf	otoa@w+1,w,c
  5460  002668  E103               	bnz	u3310
  5461  00266A  0432               	decf	otoa@w,w,c
  5462  00266C  A0D8               	btfss	status,0,c
  5463  00266E  D003               	goto	u3320
  5464  002670                     u3310:
  5465  002670  0100               	movlb	0	; () banked
  5466  002672  B395               	btfsc	_flags& (0+255),1,b
  5467  002674  D796               	goto	l3508
  5468  002676                     u3320:
  5469  002676  FFFF               	dw	65535	; assembler added errata NOP
  5470                           
  5471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5472  002678  0100               	movlb	0	; () banked
  5473  00267A  A995               	btfss	_flags& (0+255),4,b
  5474  00267C  D012               	goto	l3538
  5475                           
  5476                           ; BSR set to: 0
  5477  00267E  5030               	movf	otoa@t,w,c
  5478  002680  1031               	iorwf	otoa@t+1,w,c
  5479  002682  B4D8               	btfsc	status,2,c
  5480  002684  D00E               	goto	l3538
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5484  002686  063C               	decf	otoa@i,f,c
  5485  002688  A0D8               	btfss	status,0,c
  5486  00268A  063D               	decf	otoa@i+1,f,c
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5490  00268C  0E9B               	movlw	low _dbuf
  5491  00268E  243C               	addwf	otoa@i,w,c
  5492  002690  6ED9               	movwf	fsr2l,c
  5493  002692  0E00               	movlw	high _dbuf
  5494  002694  203D               	addwfc	otoa@i+1,w,c
  5495  002696  6EDA               	movwf	fsr2h,c
  5496  002698  0E30               	movlw	48
  5497  00269A  6EDF               	movwf	indf2,c
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5501  00269C  0632               	decf	otoa@w,f,c
  5502  00269E  A0D8               	btfss	status,0,c
  5503  0026A0  0633               	decf	otoa@w+1,f,c
  5504  0026A2                     l3538:
  5505  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5509  0026A4  C01C  F011         	movff	otoa@fp,pad@fp
  5510  0026A8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5511  0026AC  0E9B               	movlw	low _dbuf
  5512  0026AE  243C               	addwf	otoa@i,w,c
  5513  0026B0  6E13               	movwf	pad@buf,c
  5514  0026B2  0E00               	movlw	high _dbuf
  5515  0026B4  203D               	addwfc	otoa@i+1,w,c
  5516  0026B6  6E14               	movwf	pad@buf+1,c
  5517  0026B8  C032  F015         	movff	otoa@w,pad@p
  5518  0026BC  C033  F016         	movff	otoa@w+1,pad@p+1
  5519  0026C0  EC07  F019         	call	_pad	;wreg free
  5520  0026C4  C011  F01C         	movff	?_pad,?_otoa
  5521  0026C8  C012  F01D         	movff	?_pad+1,?_otoa+1
  5522  0026CC  0012               	return		;funcret
  5523  0026CE  FFFF               	dw	65535	; errata NOP
  5524  0026D0                     __end_of_otoa:
  5525                           	opt callstack 0
  5526                           
  5527 ;; *************** function _dtoa *****************
  5528 ;; Defined at:
  5529 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5532 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5533 ;;  d               8   29[COMRAM] long long 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  n               8   53[COMRAM] long long 
  5536 ;;  i               2   61[COMRAM] int 
  5537 ;;  s               2   51[COMRAM] int 
  5538 ;;  w               2   49[COMRAM] int 
  5539 ;;  p               2   47[COMRAM] int 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  2   27[COMRAM] int 
  5542 ;; Registers used:
  5543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5549 ;;      Params:        10       0       0       0       0       0       0
  5550 ;;      Locals:        18       0       0       0       0       0       0
  5551 ;;      Temps:          8       0       0       0       0       0       0
  5552 ;;      Totals:        36       0       0       0       0       0       0
  5553 ;;Total ram usage:       36 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    6
  5556 ;; This function calls:
  5557 ;;		___aodiv
  5558 ;;		___aomod
  5559 ;;		_abs
  5560 ;;		_pad
  5561 ;; This function is called by:
  5562 ;;		_vfpfcnvrt
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text17
  5567  001EB2                     __ptext17:
  5568                           	opt callstack 0
  5569  001EB2                     _dtoa:
  5570                           	opt callstack 0
  5571  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  5572                           
  5573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5574                           
  5575                           ;incstack = 0
  5576  001EB4  C01E  F036         	movff	dtoa@d,dtoa@n
  5577  001EB8  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5578  001EBC  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5579  001EC0  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5580  001EC4  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5581  001EC8  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5582  001ECC  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5583  001ED0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5584                           
  5585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5586  001ED4  AE3D               	btfss	dtoa@n+7,7,c
  5587  001ED6  D002               	goto	u3100
  5588  001ED8  0E01               	movlw	1
  5589  001EDA  D002               	goto	u3110
  5590  001EDC                     u3100:
  5591  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5592  001EDE  0E00               	movlw	0
  5593  001EE0                     u3110:
  5594  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  5595  001EE2  6E34               	movwf	dtoa@s,c
  5596  001EE4  6A35               	clrf	dtoa@s+1,c
  5597                           
  5598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5599  001EE6  5034               	movf	dtoa@s,w,c
  5600  001EE8  1035               	iorwf	dtoa@s+1,w,c
  5601  001EEA  B4D8               	btfsc	status,2,c
  5602  001EEC  D010               	goto	l3438
  5603                           
  5604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5605  001EEE  1E3D               	comf	dtoa@n+7,f,c
  5606  001EF0  1E3C               	comf	dtoa@n+6,f,c
  5607  001EF2  1E3B               	comf	dtoa@n+5,f,c
  5608  001EF4  1E3A               	comf	dtoa@n+4,f,c
  5609  001EF6  1E39               	comf	dtoa@n+3,f,c
  5610  001EF8  1E38               	comf	dtoa@n+2,f,c
  5611  001EFA  1E37               	comf	dtoa@n+1,f,c
  5612  001EFC  6C36               	negf	dtoa@n,c
  5613  001EFE  0E00               	movlw	0
  5614  001F00  2237               	addwfc	dtoa@n+1,f,c
  5615  001F02  2238               	addwfc	dtoa@n+2,f,c
  5616  001F04  2239               	addwfc	dtoa@n+3,f,c
  5617  001F06  223A               	addwfc	dtoa@n+4,f,c
  5618  001F08  223B               	addwfc	dtoa@n+5,f,c
  5619  001F0A  223C               	addwfc	dtoa@n+6,f,c
  5620  001F0C  223D               	addwfc	dtoa@n+7,f,c
  5621  001F0E                     l3438:
  5622  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  5623                           
  5624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5625  001F10  0100               	movlb	0	; () banked
  5626  001F12  AF94               	btfss	(_prec+1)& (0+255),7,b
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5630  001F14  9395               	bcf	_flags& (0+255),1,b
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5634  001F16  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5635  001F18  D005               	goto	u3140
  5636  001F1A  5194               	movf	(_prec+1)& (0+255),w,b
  5637  001F1C  E109               	bnz	l366
  5638  001F1E  0593               	decf	_prec& (0+255),w,b
  5639  001F20  B0D8               	btfsc	status,0,c
  5640  001F22  D006               	goto	l366
  5641  001F24                     u3140:
  5642  001F24  FFFF               	dw	65535	; assembler added errata NOP
  5643                           
  5644                           ; BSR set to: 0
  5645  001F26  0E00               	movlw	0
  5646  001F28  6E31               	movwf	dtoa@p+1,c
  5647  001F2A  0E01               	movlw	1
  5648  001F2C  6E30               	movwf	dtoa@p,c
  5649  001F2E  D005               	goto	l368
  5650  001F30                     l366:
  5651  001F30  FFFF               	dw	65535	; assembler added errata NOP
  5652                           
  5653                           ; BSR set to: 0
  5654  001F32  C093  F030         	movff	_prec,dtoa@p
  5655  001F36  C094  F031         	movff	_prec+1,dtoa@p+1
  5656  001F3A                     l368:
  5657  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5661  001F3C  C091  F032         	movff	_width,dtoa@w
  5662  001F40  C092  F033         	movff	_width+1,dtoa@w+1
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5666  001F44  5034               	movf	dtoa@s,w,c
  5667  001F46  1035               	iorwf	dtoa@s+1,w,c
  5668  001F48  A4D8               	btfss	status,2,c
  5669  001F4A  D002               	goto	u3160
  5670                           
  5671                           ; BSR set to: 0
  5672  001F4C  A595               	btfss	_flags& (0+255),2,b
  5673  001F4E  D004               	goto	l3452
  5674  001F50                     u3160:
  5675  001F50  FFFF               	dw	65535	; assembler added errata NOP
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5679  001F52  0632               	decf	dtoa@w,f,c
  5680  001F54  A0D8               	btfss	status,0,c
  5681  001F56  0633               	decf	dtoa@w+1,f,c
  5682  001F58                     l3452:
  5683  001F58  FFFF               	dw	65535	; assembler added errata NOP
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5687  001F5A  0E00               	movlw	0
  5688  001F5C  6E3F               	movwf	dtoa@i+1,c
  5689  001F5E  0E1F               	movlw	31
  5690  001F60  6E3E               	movwf	dtoa@i,c
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5694  001F62  0E00               	movlw	0
  5695  001F64  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5696                           
  5697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5698  001F66  D07D               	goto	l3466
  5699  001F68                     l3456:
  5700  001F68  FFFF               	dw	65535	; assembler added errata NOP
  5701                           
  5702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5703  001F6A  063E               	decf	dtoa@i,f,c
  5704  001F6C  A0D8               	btfss	status,0,c
  5705  001F6E  063F               	decf	dtoa@i+1,f,c
  5706                           
  5707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5708  001F70  0E9B               	movlw	low _dbuf
  5709  001F72  243E               	addwf	dtoa@i,w,c
  5710  001F74  6ED9               	movwf	fsr2l,c
  5711  001F76  0E00               	movlw	high _dbuf
  5712  001F78  203F               	addwfc	dtoa@i+1,w,c
  5713  001F7A  6EDA               	movwf	fsr2h,c
  5714  001F7C  C036  F001         	movff	dtoa@n,___aomod@dividend
  5715  001F80  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5716  001F84  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5717  001F88  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5718  001F8C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5719  001F90  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5720  001F94  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5721  001F98  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5722  001F9C  0E0A               	movlw	10
  5723  001F9E  6E09               	movwf	___aomod@divisor,c
  5724  001FA0  0E00               	movlw	0
  5725  001FA2  6E0A               	movwf	___aomod@divisor+1,c
  5726  001FA4  0E00               	movlw	0
  5727  001FA6  6E0B               	movwf	___aomod@divisor+2,c
  5728  001FA8  0E00               	movlw	0
  5729  001FAA  6E0C               	movwf	___aomod@divisor+3,c
  5730  001FAC  0E00               	movlw	0
  5731  001FAE  6E0D               	movwf	___aomod@divisor+4,c
  5732  001FB0  0E00               	movlw	0
  5733  001FB2  6E0E               	movwf	___aomod@divisor+5,c
  5734  001FB4  0E00               	movlw	0
  5735  001FB6  6E0F               	movwf	___aomod@divisor+6,c
  5736  001FB8  0E00               	movlw	0
  5737  001FBA  6E10               	movwf	___aomod@divisor+7,c
  5738  001FBC  EC19  F016         	call	___aomod	;wreg free
  5739  001FC0  C001  F026         	movff	?___aomod,??_dtoa
  5740  001FC4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5741  001FC8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5742  001FCC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5743  001FD0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5744  001FD4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5745  001FD8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5746  001FDC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5747  001FE0  C026  F013         	movff	??_dtoa,abs@a
  5748  001FE4  C028  F014         	movff	??_dtoa+2,abs@a+1
  5749  001FE8  EC8D  F01B         	call	_abs	;wreg free
  5750  001FEC  5013               	movf	?_abs,w,c
  5751  001FEE  0F30               	addlw	48
  5752  001FF0  6EDF               	movwf	indf2,c
  5753                           
  5754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5755  001FF2  0630               	decf	dtoa@p,f,c
  5756  001FF4  A0D8               	btfss	status,0,c
  5757  001FF6  0631               	decf	dtoa@p+1,f,c
  5758                           
  5759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5760  001FF8  0632               	decf	dtoa@w,f,c
  5761  001FFA  A0D8               	btfss	status,0,c
  5762  001FFC  0633               	decf	dtoa@w+1,f,c
  5763                           
  5764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5765  001FFE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5766  002002  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5767  002006  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5768  00200A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5769  00200E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5770  002012  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5771  002016  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5772  00201A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5773  00201E  0E0A               	movlw	10
  5774  002020  6E09               	movwf	___aodiv@divisor,c
  5775  002022  0E00               	movlw	0
  5776  002024  6E0A               	movwf	___aodiv@divisor+1,c
  5777  002026  0E00               	movlw	0
  5778  002028  6E0B               	movwf	___aodiv@divisor+2,c
  5779  00202A  0E00               	movlw	0
  5780  00202C  6E0C               	movwf	___aodiv@divisor+3,c
  5781  00202E  0E00               	movlw	0
  5782  002030  6E0D               	movwf	___aodiv@divisor+4,c
  5783  002032  0E00               	movlw	0
  5784  002034  6E0E               	movwf	___aodiv@divisor+5,c
  5785  002036  0E00               	movlw	0
  5786  002038  6E0F               	movwf	___aodiv@divisor+6,c
  5787  00203A  0E00               	movlw	0
  5788  00203C  6E10               	movwf	___aodiv@divisor+7,c
  5789  00203E  EC1B  F014         	call	___aodiv	;wreg free
  5790  002042  C001  F036         	movff	?___aodiv,dtoa@n
  5791  002046  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5792  00204A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5793  00204E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5794  002052  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5795  002056  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5796  00205A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5797  00205E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5798  002062                     l3466:
  5799  002062  FFFF               	dw	65535	; assembler added errata NOP
  5800                           
  5801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5802  002064  BE3F               	btfsc	dtoa@i+1,7,c
  5803  002066  D021               	goto	u3210
  5804  002068  503F               	movf	dtoa@i+1,w,c
  5805  00206A  E103               	bnz	u3170
  5806  00206C  043E               	decf	dtoa@i,w,c
  5807  00206E  A0D8               	btfss	status,0,c
  5808  002070  D01C               	goto	u3210
  5809  002072                     u3170:
  5810  002072  5036               	movf	dtoa@n,w,c
  5811  002074  1037               	iorwf	dtoa@n+1,w,c
  5812  002076  1038               	iorwf	dtoa@n+2,w,c
  5813  002078  1039               	iorwf	dtoa@n+3,w,c
  5814  00207A  103A               	iorwf	dtoa@n+4,w,c
  5815  00207C  103B               	iorwf	dtoa@n+5,w,c
  5816  00207E  103C               	iorwf	dtoa@n+6,w,c
  5817  002080  103D               	iorwf	dtoa@n+7,w,c
  5818  002082  A4D8               	btfss	status,2,c
  5819  002084  D771               	goto	l3456
  5820  002086  BE31               	btfsc	dtoa@p+1,7,c
  5821  002088  D005               	goto	u3190
  5822  00208A  5031               	movf	dtoa@p+1,w,c
  5823  00208C  E102               	bnz	u3191
  5824  00208E  0430               	decf	dtoa@p,w,c
  5825  002090  B0D8               	btfsc	status,0,c
  5826  002092                     u3191:
  5827  002092  D76A               	goto	l3456
  5828  002094                     u3190:
  5829  002094  FFFF               	dw	65535	; assembler added errata NOP
  5830  002096  BE33               	btfsc	dtoa@w+1,7,c
  5831  002098  D008               	goto	u3210
  5832  00209A  5033               	movf	dtoa@w+1,w,c
  5833  00209C  E103               	bnz	u3200
  5834  00209E  0432               	decf	dtoa@w,w,c
  5835  0020A0  A0D8               	btfss	status,0,c
  5836  0020A2  D003               	goto	u3210
  5837  0020A4                     u3200:
  5838  0020A4  0100               	movlb	0	; () banked
  5839  0020A6  B395               	btfsc	_flags& (0+255),1,b
  5840  0020A8  D75F               	goto	l3456
  5841  0020AA                     u3210:
  5842  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  5843                           
  5844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5845  0020AC  5034               	movf	dtoa@s,w,c
  5846  0020AE  1035               	iorwf	dtoa@s+1,w,c
  5847  0020B0  A4D8               	btfss	status,2,c
  5848  0020B2  D003               	goto	u3230
  5849  0020B4  0100               	movlb	0	; () banked
  5850  0020B6  A595               	btfss	_flags& (0+255),2,b
  5851  0020B8  D01A               	goto	l3490
  5852  0020BA                     u3230:
  5853  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  5854                           
  5855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5856  0020BC  063E               	decf	dtoa@i,f,c
  5857  0020BE  A0D8               	btfss	status,0,c
  5858  0020C0  063F               	decf	dtoa@i+1,f,c
  5859                           
  5860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5861  0020C2  5034               	movf	dtoa@s,w,c
  5862  0020C4  1035               	iorwf	dtoa@s+1,w,c
  5863  0020C6  A4D8               	btfss	status,2,c
  5864  0020C8  D004               	goto	l3486
  5865  0020CA  0E00               	movlw	0
  5866  0020CC  6E2F               	movwf	_dtoa$1140+1,c
  5867  0020CE  0E2B               	movlw	43
  5868  0020D0  D004               	goto	L20
  5869  0020D2                     l3486:
  5870  0020D2  FFFF               	dw	65535	; assembler added errata NOP
  5871  0020D4  0E00               	movlw	0
  5872  0020D6  6E2F               	movwf	_dtoa$1140+1,c
  5873  0020D8  0E2D               	movlw	45
  5874  0020DA                     L20:
  5875  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  5876  0020DC  6E2E               	movwf	_dtoa$1140,c
  5877  0020DE  0E9B               	movlw	low _dbuf
  5878  0020E0  243E               	addwf	dtoa@i,w,c
  5879  0020E2  6ED9               	movwf	fsr2l,c
  5880  0020E4  0E00               	movlw	high _dbuf
  5881  0020E6  203F               	addwfc	dtoa@i+1,w,c
  5882  0020E8  6EDA               	movwf	fsr2h,c
  5883  0020EA  C02E  FFDF         	movff	_dtoa$1140,indf2
  5884  0020EE                     l3490:
  5885  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  5886                           
  5887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5888  0020F0  C01C  F011         	movff	dtoa@fp,pad@fp
  5889  0020F4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5890  0020F8  0E9B               	movlw	low _dbuf
  5891  0020FA  243E               	addwf	dtoa@i,w,c
  5892  0020FC  6E13               	movwf	pad@buf,c
  5893  0020FE  0E00               	movlw	high _dbuf
  5894  002100  203F               	addwfc	dtoa@i+1,w,c
  5895  002102  6E14               	movwf	pad@buf+1,c
  5896  002104  C032  F015         	movff	dtoa@w,pad@p
  5897  002108  C033  F016         	movff	dtoa@w+1,pad@p+1
  5898  00210C  EC07  F019         	call	_pad	;wreg free
  5899  002110  C011  F01C         	movff	?_pad,?_dtoa
  5900  002114  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5901  002118  0012               	return		;funcret
  5902  00211A  FFFF               	dw	65535	; errata NOP
  5903  00211C                     __end_of_dtoa:
  5904                           	opt callstack 0
  5905                           
  5906 ;; *************** function _abs *****************
  5907 ;; Defined at:
  5908 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  a               2   18[COMRAM] int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2   18[COMRAM] int 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5922 ;;      Params:         2       0       0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0
  5924 ;;      Temps:          2       0       0       0       0       0       0
  5925 ;;      Totals:         4       0       0       0       0       0       0
  5926 ;;Total ram usage:        4 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_dtoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text18
  5937  00371A                     __ptext18:
  5938                           	opt callstack 0
  5939  00371A                     _abs:
  5940                           	opt callstack 0
  5941  00371A  FFFF               	dw	65535	; assembler added errata NOP
  5942                           
  5943                           ;incstack = 0
  5944  00371C  BE14               	btfsc	abs@a+1,7,c
  5945  00371E  D005               	goto	u2770
  5946  003720  5014               	movf	abs@a+1,w,c
  5947  003722  E111               	bnz	l1239
  5948  003724  0413               	decf	abs@a,w,c
  5949  003726  B0D8               	btfsc	status,0,c
  5950  003728  D00E               	goto	l1239
  5951  00372A                     u2770:
  5952  00372A  FFFF               	dw	65535	; assembler added errata NOP
  5953  00372C  C013  F015         	movff	abs@a,??_abs
  5954  003730  C014  F016         	movff	abs@a+1,??_abs+1
  5955  003734  1E15               	comf	??_abs,f,c
  5956  003736  1E16               	comf	??_abs+1,f,c
  5957  003738  4A15               	infsnz	??_abs,f,c
  5958  00373A  2A16               	incf	??_abs+1,f,c
  5959  00373C  C015  F013         	movff	??_abs,?_abs
  5960  003740  C016  F014         	movff	??_abs+1,?_abs+1
  5961  003744  D005               	goto	l1242
  5962  003746                     l1239:
  5963  003746  FFFF               	dw	65535	; assembler added errata NOP
  5964  003748  C013  F013         	movff	abs@a,?_abs
  5965  00374C  C014  F014         	movff	abs@a+1,?_abs+1
  5966  003750                     l1242:
  5967  003750  FFFF               	dw	65535	; assembler added errata NOP
  5968  003752  0012               	return		;funcret
  5969  003754  FFFF               	dw	65535	; errata NOP
  5970  003756                     __end_of_abs:
  5971                           	opt callstack 0
  5972                           
  5973 ;; *************** function ___aomod *****************
  5974 ;; Defined at:
  5975 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  dividend        8    0[COMRAM] long long 
  5978 ;;  divisor         8    8[COMRAM] long long 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  sign            1   17[COMRAM] unsigned char 
  5981 ;;  counter         1   16[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  8    0[COMRAM] long long 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5991 ;;      Params:        16       0       0       0       0       0       0
  5992 ;;      Locals:         2       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0
  5994 ;;      Totals:        18       0       0       0       0       0       0
  5995 ;;Total ram usage:       18 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    2
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_dtoa
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text19
  6006  002C32                     __ptext19:
  6007                           	opt callstack 0
  6008  002C32                     ___aomod:
  6009                           	opt callstack 0
  6010  002C32  FFFF               	dw	65535	; assembler added errata NOP
  6011                           
  6012                           ;incstack = 0
  6013  002C34  0E00               	movlw	0
  6014  002C36  6E12               	movwf	___aomod@sign,c
  6015  002C38  AE08               	btfss	___aomod@dividend+7,7,c
  6016  002C3A  D012               	goto	l3340
  6017  002C3C  1E08               	comf	___aomod@dividend+7,f,c
  6018  002C3E  1E07               	comf	___aomod@dividend+6,f,c
  6019  002C40  1E06               	comf	___aomod@dividend+5,f,c
  6020  002C42  1E05               	comf	___aomod@dividend+4,f,c
  6021  002C44  1E04               	comf	___aomod@dividend+3,f,c
  6022  002C46  1E03               	comf	___aomod@dividend+2,f,c
  6023  002C48  1E02               	comf	___aomod@dividend+1,f,c
  6024  002C4A  6C01               	negf	___aomod@dividend,c
  6025  002C4C  0E00               	movlw	0
  6026  002C4E  2202               	addwfc	___aomod@dividend+1,f,c
  6027  002C50  2203               	addwfc	___aomod@dividend+2,f,c
  6028  002C52  2204               	addwfc	___aomod@dividend+3,f,c
  6029  002C54  2205               	addwfc	___aomod@dividend+4,f,c
  6030  002C56  2206               	addwfc	___aomod@dividend+5,f,c
  6031  002C58  2207               	addwfc	___aomod@dividend+6,f,c
  6032  002C5A  2208               	addwfc	___aomod@dividend+7,f,c
  6033  002C5C  0E01               	movlw	1
  6034  002C5E  6E12               	movwf	___aomod@sign,c
  6035  002C60                     l3340:
  6036  002C60  FFFF               	dw	65535	; assembler added errata NOP
  6037  002C62  AE10               	btfss	___aomod@divisor+7,7,c
  6038  002C64  D010               	goto	l3344
  6039  002C66  1E10               	comf	___aomod@divisor+7,f,c
  6040  002C68  1E0F               	comf	___aomod@divisor+6,f,c
  6041  002C6A  1E0E               	comf	___aomod@divisor+5,f,c
  6042  002C6C  1E0D               	comf	___aomod@divisor+4,f,c
  6043  002C6E  1E0C               	comf	___aomod@divisor+3,f,c
  6044  002C70  1E0B               	comf	___aomod@divisor+2,f,c
  6045  002C72  1E0A               	comf	___aomod@divisor+1,f,c
  6046  002C74  6C09               	negf	___aomod@divisor,c
  6047  002C76  0E00               	movlw	0
  6048  002C78  220A               	addwfc	___aomod@divisor+1,f,c
  6049  002C7A  220B               	addwfc	___aomod@divisor+2,f,c
  6050  002C7C  220C               	addwfc	___aomod@divisor+3,f,c
  6051  002C7E  220D               	addwfc	___aomod@divisor+4,f,c
  6052  002C80  220E               	addwfc	___aomod@divisor+5,f,c
  6053  002C82  220F               	addwfc	___aomod@divisor+6,f,c
  6054  002C84  2210               	addwfc	___aomod@divisor+7,f,c
  6055  002C86                     l3344:
  6056  002C86  FFFF               	dw	65535	; assembler added errata NOP
  6057  002C88  5009               	movf	___aomod@divisor,w,c
  6058  002C8A  100A               	iorwf	___aomod@divisor+1,w,c
  6059  002C8C  100B               	iorwf	___aomod@divisor+2,w,c
  6060  002C8E  100C               	iorwf	___aomod@divisor+3,w,c
  6061  002C90  100D               	iorwf	___aomod@divisor+4,w,c
  6062  002C92  100E               	iorwf	___aomod@divisor+5,w,c
  6063  002C94  100F               	iorwf	___aomod@divisor+6,w,c
  6064  002C96  1010               	iorwf	___aomod@divisor+7,w,c
  6065  002C98  B4D8               	btfsc	status,2,c
  6066  002C9A  D040               	goto	l3360
  6067  002C9C  0E01               	movlw	1
  6068  002C9E  6E11               	movwf	___aomod@counter,c
  6069  002CA0  D00B               	goto	l3350
  6070  002CA2                     l3348:
  6071  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  6072  002CA4  90D8               	bcf	status,0,c
  6073  002CA6  3609               	rlcf	___aomod@divisor,f,c
  6074  002CA8  360A               	rlcf	___aomod@divisor+1,f,c
  6075  002CAA  360B               	rlcf	___aomod@divisor+2,f,c
  6076  002CAC  360C               	rlcf	___aomod@divisor+3,f,c
  6077  002CAE  360D               	rlcf	___aomod@divisor+4,f,c
  6078  002CB0  360E               	rlcf	___aomod@divisor+5,f,c
  6079  002CB2  360F               	rlcf	___aomod@divisor+6,f,c
  6080  002CB4  3610               	rlcf	___aomod@divisor+7,f,c
  6081  002CB6  2A11               	incf	___aomod@counter,f,c
  6082  002CB8                     l3350:
  6083  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  6084  002CBA  AE10               	btfss	___aomod@divisor+7,7,c
  6085  002CBC  D7F2               	goto	l3348
  6086  002CBE                     u2970:
  6087  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  6088  002CC0  5009               	movf	___aomod@divisor,w,c
  6089  002CC2  5C01               	subwf	___aomod@dividend,w,c
  6090  002CC4  500A               	movf	___aomod@divisor+1,w,c
  6091  002CC6  5802               	subwfb	___aomod@dividend+1,w,c
  6092  002CC8  500B               	movf	___aomod@divisor+2,w,c
  6093  002CCA  5803               	subwfb	___aomod@dividend+2,w,c
  6094  002CCC  500C               	movf	___aomod@divisor+3,w,c
  6095  002CCE  5804               	subwfb	___aomod@dividend+3,w,c
  6096  002CD0  500D               	movf	___aomod@divisor+4,w,c
  6097  002CD2  5805               	subwfb	___aomod@dividend+4,w,c
  6098  002CD4  500E               	movf	___aomod@divisor+5,w,c
  6099  002CD6  5806               	subwfb	___aomod@dividend+5,w,c
  6100  002CD8  500F               	movf	___aomod@divisor+6,w,c
  6101  002CDA  5807               	subwfb	___aomod@dividend+6,w,c
  6102  002CDC  5010               	movf	___aomod@divisor+7,w,c
  6103  002CDE  5808               	subwfb	___aomod@dividend+7,w,c
  6104  002CE0  A0D8               	btfss	status,0,c
  6105  002CE2  D010               	goto	l3356
  6106  002CE4  5009               	movf	___aomod@divisor,w,c
  6107  002CE6  5E01               	subwf	___aomod@dividend,f,c
  6108  002CE8  500A               	movf	___aomod@divisor+1,w,c
  6109  002CEA  5A02               	subwfb	___aomod@dividend+1,f,c
  6110  002CEC  500B               	movf	___aomod@divisor+2,w,c
  6111  002CEE  5A03               	subwfb	___aomod@dividend+2,f,c
  6112  002CF0  500C               	movf	___aomod@divisor+3,w,c
  6113  002CF2  5A04               	subwfb	___aomod@dividend+3,f,c
  6114  002CF4  500D               	movf	___aomod@divisor+4,w,c
  6115  002CF6  5A05               	subwfb	___aomod@dividend+4,f,c
  6116  002CF8  500E               	movf	___aomod@divisor+5,w,c
  6117  002CFA  5A06               	subwfb	___aomod@dividend+5,f,c
  6118  002CFC  500F               	movf	___aomod@divisor+6,w,c
  6119  002CFE  5A07               	subwfb	___aomod@dividend+6,f,c
  6120  002D00  5010               	movf	___aomod@divisor+7,w,c
  6121  002D02  5A08               	subwfb	___aomod@dividend+7,f,c
  6122  002D04                     l3356:
  6123  002D04  FFFF               	dw	65535	; assembler added errata NOP
  6124  002D06  90D8               	bcf	status,0,c
  6125  002D08  3210               	rrcf	___aomod@divisor+7,f,c
  6126  002D0A  320F               	rrcf	___aomod@divisor+6,f,c
  6127  002D0C  320E               	rrcf	___aomod@divisor+5,f,c
  6128  002D0E  320D               	rrcf	___aomod@divisor+4,f,c
  6129  002D10  320C               	rrcf	___aomod@divisor+3,f,c
  6130  002D12  320B               	rrcf	___aomod@divisor+2,f,c
  6131  002D14  320A               	rrcf	___aomod@divisor+1,f,c
  6132  002D16  3209               	rrcf	___aomod@divisor,f,c
  6133  002D18  2E11               	decfsz	___aomod@counter,f,c
  6134  002D1A  D7D1               	goto	u2970
  6135  002D1C                     l3360:
  6136  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  6137  002D1E  5012               	movf	___aomod@sign,w,c
  6138  002D20  B4D8               	btfsc	status,2,c
  6139  002D22  D010               	goto	l3364
  6140  002D24  1E08               	comf	___aomod@dividend+7,f,c
  6141  002D26  1E07               	comf	___aomod@dividend+6,f,c
  6142  002D28  1E06               	comf	___aomod@dividend+5,f,c
  6143  002D2A  1E05               	comf	___aomod@dividend+4,f,c
  6144  002D2C  1E04               	comf	___aomod@dividend+3,f,c
  6145  002D2E  1E03               	comf	___aomod@dividend+2,f,c
  6146  002D30  1E02               	comf	___aomod@dividend+1,f,c
  6147  002D32  6C01               	negf	___aomod@dividend,c
  6148  002D34  0E00               	movlw	0
  6149  002D36  2202               	addwfc	___aomod@dividend+1,f,c
  6150  002D38  2203               	addwfc	___aomod@dividend+2,f,c
  6151  002D3A  2204               	addwfc	___aomod@dividend+3,f,c
  6152  002D3C  2205               	addwfc	___aomod@dividend+4,f,c
  6153  002D3E  2206               	addwfc	___aomod@dividend+5,f,c
  6154  002D40  2207               	addwfc	___aomod@dividend+6,f,c
  6155  002D42  2208               	addwfc	___aomod@dividend+7,f,c
  6156  002D44                     l3364:
  6157  002D44  FFFF               	dw	65535	; assembler added errata NOP
  6158  002D46  C001  F001         	movff	___aomod@dividend,?___aomod
  6159  002D4A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6160  002D4E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6161  002D52  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6162  002D56  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6163  002D5A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6164  002D5E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6165  002D62  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6166  002D66  0012               	return		;funcret
  6167  002D68  FFFF               	dw	65535	; errata NOP
  6168  002D6A                     __end_of___aomod:
  6169                           	opt callstack 0
  6170                           
  6171 ;; *************** function ___aodiv *****************
  6172 ;; Defined at:
  6173 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        8    0[COMRAM] long long 
  6176 ;;  divisor         8    8[COMRAM] long long 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  quotient        8   18[COMRAM] long long 
  6179 ;;  sign            1   17[COMRAM] unsigned char 
  6180 ;;  counter         1   16[COMRAM] unsigned char 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  8    0[COMRAM] long long 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6190 ;;      Params:        16       0       0       0       0       0       0
  6191 ;;      Locals:        10       0       0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0
  6193 ;;      Totals:        26       0       0       0       0       0       0
  6194 ;;Total ram usage:       26 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    2
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_dtoa
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text20
  6205  002836                     __ptext20:
  6206                           	opt callstack 0
  6207  002836                     ___aodiv:
  6208                           	opt callstack 0
  6209  002836  FFFF               	dw	65535	; assembler added errata NOP
  6210                           
  6211                           ;incstack = 0
  6212  002838  0E00               	movlw	0
  6213  00283A  6E12               	movwf	___aodiv@sign,c
  6214  00283C  AE10               	btfss	___aodiv@divisor+7,7,c
  6215  00283E  D012               	goto	l3296
  6216  002840  1E10               	comf	___aodiv@divisor+7,f,c
  6217  002842  1E0F               	comf	___aodiv@divisor+6,f,c
  6218  002844  1E0E               	comf	___aodiv@divisor+5,f,c
  6219  002846  1E0D               	comf	___aodiv@divisor+4,f,c
  6220  002848  1E0C               	comf	___aodiv@divisor+3,f,c
  6221  00284A  1E0B               	comf	___aodiv@divisor+2,f,c
  6222  00284C  1E0A               	comf	___aodiv@divisor+1,f,c
  6223  00284E  6C09               	negf	___aodiv@divisor,c
  6224  002850  0E00               	movlw	0
  6225  002852  220A               	addwfc	___aodiv@divisor+1,f,c
  6226  002854  220B               	addwfc	___aodiv@divisor+2,f,c
  6227  002856  220C               	addwfc	___aodiv@divisor+3,f,c
  6228  002858  220D               	addwfc	___aodiv@divisor+4,f,c
  6229  00285A  220E               	addwfc	___aodiv@divisor+5,f,c
  6230  00285C  220F               	addwfc	___aodiv@divisor+6,f,c
  6231  00285E  2210               	addwfc	___aodiv@divisor+7,f,c
  6232  002860  0E01               	movlw	1
  6233  002862  6E12               	movwf	___aodiv@sign,c
  6234  002864                     l3296:
  6235  002864  FFFF               	dw	65535	; assembler added errata NOP
  6236  002866  AE08               	btfss	___aodiv@dividend+7,7,c
  6237  002868  D012               	goto	l3302
  6238  00286A  1E08               	comf	___aodiv@dividend+7,f,c
  6239  00286C  1E07               	comf	___aodiv@dividend+6,f,c
  6240  00286E  1E06               	comf	___aodiv@dividend+5,f,c
  6241  002870  1E05               	comf	___aodiv@dividend+4,f,c
  6242  002872  1E04               	comf	___aodiv@dividend+3,f,c
  6243  002874  1E03               	comf	___aodiv@dividend+2,f,c
  6244  002876  1E02               	comf	___aodiv@dividend+1,f,c
  6245  002878  6C01               	negf	___aodiv@dividend,c
  6246  00287A  0E00               	movlw	0
  6247  00287C  2202               	addwfc	___aodiv@dividend+1,f,c
  6248  00287E  2203               	addwfc	___aodiv@dividend+2,f,c
  6249  002880  2204               	addwfc	___aodiv@dividend+3,f,c
  6250  002882  2205               	addwfc	___aodiv@dividend+4,f,c
  6251  002884  2206               	addwfc	___aodiv@dividend+5,f,c
  6252  002886  2207               	addwfc	___aodiv@dividend+6,f,c
  6253  002888  2208               	addwfc	___aodiv@dividend+7,f,c
  6254  00288A  0E01               	movlw	1
  6255  00288C  1A12               	xorwf	___aodiv@sign,f,c
  6256  00288E                     l3302:
  6257  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6258  002890  EE20  F013         	lfsr	2,___aodiv@quotient
  6259  002894  0E07               	movlw	7
  6260  002896                     u2891:
  6261  002896  6ADE               	clrf	postinc2,c
  6262  002898  06E8               	decf	wreg,f,c
  6263  00289A  E2FD               	bc	u2891
  6264  00289C  5009               	movf	___aodiv@divisor,w,c
  6265  00289E  100A               	iorwf	___aodiv@divisor+1,w,c
  6266  0028A0  100B               	iorwf	___aodiv@divisor+2,w,c
  6267  0028A2  100C               	iorwf	___aodiv@divisor+3,w,c
  6268  0028A4  100D               	iorwf	___aodiv@divisor+4,w,c
  6269  0028A6  100E               	iorwf	___aodiv@divisor+5,w,c
  6270  0028A8  100F               	iorwf	___aodiv@divisor+6,w,c
  6271  0028AA  1010               	iorwf	___aodiv@divisor+7,w,c
  6272  0028AC  B4D8               	btfsc	status,2,c
  6273  0028AE  D04A               	goto	l3324
  6274  0028B0  0E01               	movlw	1
  6275  0028B2  6E11               	movwf	___aodiv@counter,c
  6276  0028B4  D00B               	goto	l3310
  6277  0028B6                     l3308:
  6278  0028B6  FFFF               	dw	65535	; assembler added errata NOP
  6279  0028B8  90D8               	bcf	status,0,c
  6280  0028BA  3609               	rlcf	___aodiv@divisor,f,c
  6281  0028BC  360A               	rlcf	___aodiv@divisor+1,f,c
  6282  0028BE  360B               	rlcf	___aodiv@divisor+2,f,c
  6283  0028C0  360C               	rlcf	___aodiv@divisor+3,f,c
  6284  0028C2  360D               	rlcf	___aodiv@divisor+4,f,c
  6285  0028C4  360E               	rlcf	___aodiv@divisor+5,f,c
  6286  0028C6  360F               	rlcf	___aodiv@divisor+6,f,c
  6287  0028C8  3610               	rlcf	___aodiv@divisor+7,f,c
  6288  0028CA  2A11               	incf	___aodiv@counter,f,c
  6289  0028CC                     l3310:
  6290  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  6291  0028CE  AE10               	btfss	___aodiv@divisor+7,7,c
  6292  0028D0  D7F2               	goto	l3308
  6293  0028D2                     u2910:
  6294  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  6295  0028D4  90D8               	bcf	status,0,c
  6296  0028D6  3613               	rlcf	___aodiv@quotient,f,c
  6297  0028D8  3614               	rlcf	___aodiv@quotient+1,f,c
  6298  0028DA  3615               	rlcf	___aodiv@quotient+2,f,c
  6299  0028DC  3616               	rlcf	___aodiv@quotient+3,f,c
  6300  0028DE  3617               	rlcf	___aodiv@quotient+4,f,c
  6301  0028E0  3618               	rlcf	___aodiv@quotient+5,f,c
  6302  0028E2  3619               	rlcf	___aodiv@quotient+6,f,c
  6303  0028E4  361A               	rlcf	___aodiv@quotient+7,f,c
  6304  0028E6  5009               	movf	___aodiv@divisor,w,c
  6305  0028E8  5C01               	subwf	___aodiv@dividend,w,c
  6306  0028EA  500A               	movf	___aodiv@divisor+1,w,c
  6307  0028EC  5802               	subwfb	___aodiv@dividend+1,w,c
  6308  0028EE  500B               	movf	___aodiv@divisor+2,w,c
  6309  0028F0  5803               	subwfb	___aodiv@dividend+2,w,c
  6310  0028F2  500C               	movf	___aodiv@divisor+3,w,c
  6311  0028F4  5804               	subwfb	___aodiv@dividend+3,w,c
  6312  0028F6  500D               	movf	___aodiv@divisor+4,w,c
  6313  0028F8  5805               	subwfb	___aodiv@dividend+4,w,c
  6314  0028FA  500E               	movf	___aodiv@divisor+5,w,c
  6315  0028FC  5806               	subwfb	___aodiv@dividend+5,w,c
  6316  0028FE  500F               	movf	___aodiv@divisor+6,w,c
  6317  002900  5807               	subwfb	___aodiv@dividend+6,w,c
  6318  002902  5010               	movf	___aodiv@divisor+7,w,c
  6319  002904  5808               	subwfb	___aodiv@dividend+7,w,c
  6320  002906  A0D8               	btfss	status,0,c
  6321  002908  D011               	goto	l3320
  6322  00290A  5009               	movf	___aodiv@divisor,w,c
  6323  00290C  5E01               	subwf	___aodiv@dividend,f,c
  6324  00290E  500A               	movf	___aodiv@divisor+1,w,c
  6325  002910  5A02               	subwfb	___aodiv@dividend+1,f,c
  6326  002912  500B               	movf	___aodiv@divisor+2,w,c
  6327  002914  5A03               	subwfb	___aodiv@dividend+2,f,c
  6328  002916  500C               	movf	___aodiv@divisor+3,w,c
  6329  002918  5A04               	subwfb	___aodiv@dividend+3,f,c
  6330  00291A  500D               	movf	___aodiv@divisor+4,w,c
  6331  00291C  5A05               	subwfb	___aodiv@dividend+4,f,c
  6332  00291E  500E               	movf	___aodiv@divisor+5,w,c
  6333  002920  5A06               	subwfb	___aodiv@dividend+5,f,c
  6334  002922  500F               	movf	___aodiv@divisor+6,w,c
  6335  002924  5A07               	subwfb	___aodiv@dividend+6,f,c
  6336  002926  5010               	movf	___aodiv@divisor+7,w,c
  6337  002928  5A08               	subwfb	___aodiv@dividend+7,f,c
  6338  00292A  8013               	bsf	___aodiv@quotient,0,c
  6339  00292C                     l3320:
  6340  00292C  FFFF               	dw	65535	; assembler added errata NOP
  6341  00292E  90D8               	bcf	status,0,c
  6342  002930  3210               	rrcf	___aodiv@divisor+7,f,c
  6343  002932  320F               	rrcf	___aodiv@divisor+6,f,c
  6344  002934  320E               	rrcf	___aodiv@divisor+5,f,c
  6345  002936  320D               	rrcf	___aodiv@divisor+4,f,c
  6346  002938  320C               	rrcf	___aodiv@divisor+3,f,c
  6347  00293A  320B               	rrcf	___aodiv@divisor+2,f,c
  6348  00293C  320A               	rrcf	___aodiv@divisor+1,f,c
  6349  00293E  3209               	rrcf	___aodiv@divisor,f,c
  6350  002940  2E11               	decfsz	___aodiv@counter,f,c
  6351  002942  D7C7               	goto	u2910
  6352  002944                     l3324:
  6353  002944  FFFF               	dw	65535	; assembler added errata NOP
  6354  002946  5012               	movf	___aodiv@sign,w,c
  6355  002948  B4D8               	btfsc	status,2,c
  6356  00294A  D010               	goto	l3328
  6357  00294C  1E1A               	comf	___aodiv@quotient+7,f,c
  6358  00294E  1E19               	comf	___aodiv@quotient+6,f,c
  6359  002950  1E18               	comf	___aodiv@quotient+5,f,c
  6360  002952  1E17               	comf	___aodiv@quotient+4,f,c
  6361  002954  1E16               	comf	___aodiv@quotient+3,f,c
  6362  002956  1E15               	comf	___aodiv@quotient+2,f,c
  6363  002958  1E14               	comf	___aodiv@quotient+1,f,c
  6364  00295A  6C13               	negf	___aodiv@quotient,c
  6365  00295C  0E00               	movlw	0
  6366  00295E  2214               	addwfc	___aodiv@quotient+1,f,c
  6367  002960  2215               	addwfc	___aodiv@quotient+2,f,c
  6368  002962  2216               	addwfc	___aodiv@quotient+3,f,c
  6369  002964  2217               	addwfc	___aodiv@quotient+4,f,c
  6370  002966  2218               	addwfc	___aodiv@quotient+5,f,c
  6371  002968  2219               	addwfc	___aodiv@quotient+6,f,c
  6372  00296A  221A               	addwfc	___aodiv@quotient+7,f,c
  6373  00296C                     l3328:
  6374  00296C  FFFF               	dw	65535	; assembler added errata NOP
  6375  00296E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6376  002972  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6377  002976  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6378  00297A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6379  00297E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6380  002982  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6381  002986  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6382  00298A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6383  00298E  0012               	return		;funcret
  6384  002990  FFFF               	dw	65535	; errata NOP
  6385  002992                     __end_of___aodiv:
  6386                           	opt callstack 0
  6387                           
  6388 ;; *************** function _ctoa *****************
  6389 ;; Defined at:
  6390 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6393 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6394 ;;  c               1   29[COMRAM] unsigned char 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  w               2   30[COMRAM] int 
  6397 ;;  l               2    0        int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2   27[COMRAM] int 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6407 ;;      Params:         3       0       0       0       0       0       0
  6408 ;;      Locals:         2       0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0
  6410 ;;      Totals:         5       0       0       0       0       0       0
  6411 ;;Total ram usage:        5 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    6
  6414 ;; This function calls:
  6415 ;;		_pad
  6416 ;; This function is called by:
  6417 ;;		_vfpfcnvrt
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text21
  6422  00344E                     __ptext21:
  6423                           	opt callstack 0
  6424  00344E                     _ctoa:
  6425                           	opt callstack 0
  6426  00344E  FFFF               	dw	65535	; assembler added errata NOP
  6427                           
  6428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6429                           
  6430                           ;incstack = 0
  6431  003450  0100               	movlb	0	; () banked
  6432  003452  5191               	movf	_width& (0+255),w,b
  6433  003454  1192               	iorwf	(_width+1)& (0+255),w,b
  6434  003456  A4D8               	btfss	status,2,c
  6435  003458  D005               	goto	l3422
  6436                           
  6437                           ; BSR set to: 0
  6438  00345A  C091  F01F         	movff	_width,ctoa@w
  6439  00345E  C092  F020         	movff	_width+1,ctoa@w+1
  6440  003462  D007               	goto	l3424
  6441  003464                     l3422:
  6442  003464  FFFF               	dw	65535	; assembler added errata NOP
  6443                           
  6444                           ; BSR set to: 0
  6445  003466  0EFF               	movlw	255
  6446  003468  2591               	addwf	_width& (0+255),w,b
  6447  00346A  6E1F               	movwf	ctoa@w,c
  6448  00346C  0EFF               	movlw	255
  6449  00346E  2192               	addwfc	(_width+1)& (0+255),w,b
  6450  003470  6E20               	movwf	ctoa@w+1,c
  6451  003472                     l3424:
  6452  003472  FFFF               	dw	65535	; assembler added errata NOP
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6456  003474  C01E  F09B         	movff	ctoa@c,_dbuf
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6460  003478  0E00               	movlw	0
  6461  00347A  6F9C               	movwf	(_dbuf+1)& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6465  00347C  C01C  F011         	movff	ctoa@fp,pad@fp
  6466  003480  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6467  003484  0E9B               	movlw	low _dbuf
  6468  003486  6E13               	movwf	pad@buf,c
  6469  003488  0E00               	movlw	high _dbuf
  6470  00348A  6E14               	movwf	pad@buf+1,c
  6471  00348C  C01F  F015         	movff	ctoa@w,pad@p
  6472  003490  C020  F016         	movff	ctoa@w+1,pad@p+1
  6473  003494  EC07  F019         	call	_pad	;wreg free
  6474  003498  C011  F01C         	movff	?_pad,?_ctoa
  6475  00349C  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6476  0034A0  0012               	return		;funcret
  6477  0034A2  FFFF               	dw	65535	; errata NOP
  6478  0034A4                     __end_of_ctoa:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function _pad *****************
  6482 ;; Defined at:
  6483 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6486 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6487 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6488 ;;		 -> dbuf(32), 
  6489 ;;  p               2   20[COMRAM] int 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  w               2   25[COMRAM] int 
  6492 ;;  i               2   23[COMRAM] int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2   16[COMRAM] int 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6502 ;;      Params:         6       0       0       0       0       0       0
  6503 ;;      Locals:         4       0       0       0       0       0       0
  6504 ;;      Temps:          1       0       0       0       0       0       0
  6505 ;;      Totals:        11       0       0       0       0       0       0
  6506 ;;Total ram usage:       11 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    5
  6509 ;; This function calls:
  6510 ;;		_fputc
  6511 ;;		_fputs
  6512 ;;		_strlen
  6513 ;; This function is called by:
  6514 ;;		_ctoa
  6515 ;;		_dtoa
  6516 ;;		_otoa
  6517 ;;		_utoa
  6518 ;;		_xtoa
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text22
  6523  00320E                     __ptext22:
  6524                           	opt callstack 0
  6525  00320E                     _pad:
  6526                           	opt callstack 0
  6527  00320E  FFFF               	dw	65535	; assembler added errata NOP
  6528                           
  6529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6530                           
  6531                           ;incstack = 0
  6532  003210  0100               	movlb	0	; () banked
  6533  003212  A195               	btfss	_flags& (0+255),0,b
  6534  003214  D00A               	goto	l3238
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6538  003216  C013  F00A         	movff	pad@buf,fputs@s
  6539  00321A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6540  00321E  C011  F00C         	movff	pad@fp,fputs@fp
  6541  003222  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6542  003226  EC30  F01B         	call	_fputs	;wreg free
  6543  00322A                     l3238:
  6544  00322A  FFFF               	dw	65535	; assembler added errata NOP
  6545                           
  6546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6547  00322C  BE16               	btfsc	pad@p+1,7,c
  6548  00322E  D005               	goto	l3242
  6549  003230  C015  F01A         	movff	pad@p,pad@w
  6550  003234  C016  F01B         	movff	pad@p+1,pad@w+1
  6551  003238  D005               	goto	l348
  6552  00323A                     l3242:
  6553  00323A  FFFF               	dw	65535	; assembler added errata NOP
  6554  00323C  0E00               	movlw	0
  6555  00323E  6E1B               	movwf	pad@w+1,c
  6556  003240  0E00               	movlw	0
  6557  003242  6E1A               	movwf	pad@w,c
  6558  003244                     l348:
  6559  003244  FFFF               	dw	65535	; assembler added errata NOP
  6560                           
  6561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6562  003246  0E00               	movlw	0
  6563  003248  6E19               	movwf	pad@i+1,c
  6564  00324A  0E00               	movlw	0
  6565  00324C  6E18               	movwf	pad@i,c
  6566                           
  6567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6568  00324E  D00D               	goto	l3248
  6569  003250                     l3244:
  6570  003250  FFFF               	dw	65535	; assembler added errata NOP
  6571                           
  6572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6573  003252  0E00               	movlw	0
  6574  003254  6E02               	movwf	fputc@c+1,c
  6575  003256  0E20               	movlw	32
  6576  003258  6E01               	movwf	fputc@c,c
  6577  00325A  C011  F003         	movff	pad@fp,fputc@fp
  6578  00325E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6579  003262  ECB1  F018         	call	_fputc	;wreg free
  6580                           
  6581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6582  003266  4A18               	infsnz	pad@i,f,c
  6583  003268  2A19               	incf	pad@i+1,f,c
  6584  00326A                     l3248:
  6585  00326A  FFFF               	dw	65535	; assembler added errata NOP
  6586                           
  6587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6588  00326C  501A               	movf	pad@w,w,c
  6589  00326E  5C18               	subwf	pad@i,w,c
  6590  003270  5019               	movf	pad@i+1,w,c
  6591  003272  0A80               	xorlw	128
  6592  003274  6E17               	movwf	??_pad& (0+255),c
  6593  003276  501B               	movf	pad@w+1,w,c
  6594  003278  0A80               	xorlw	128
  6595  00327A  5817               	subwfb	??_pad& (0+255),w,c
  6596  00327C  A0D8               	btfss	status,0,c
  6597  00327E  D7E8               	goto	l3244
  6598                           
  6599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6600  003280  0100               	movlb	0	; () banked
  6601  003282  B195               	btfsc	_flags& (0+255),0,b
  6602  003284  D00A               	goto	l3252
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6606  003286  C013  F00A         	movff	pad@buf,fputs@s
  6607  00328A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6608  00328E  C011  F00C         	movff	pad@fp,fputs@fp
  6609  003292  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6610  003296  EC30  F01B         	call	_fputs	;wreg free
  6611  00329A                     l3252:
  6612  00329A  FFFF               	dw	65535	; assembler added errata NOP
  6613                           
  6614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6615  00329C  C013  F001         	movff	pad@buf,strlen@s
  6616  0032A0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6617  0032A4  ECFF  F01B         	call	_strlen	;wreg free
  6618  0032A8  501A               	movf	pad@w,w,c
  6619  0032AA  2401               	addwf	?_strlen,w,c
  6620  0032AC  6E11               	movwf	?_pad,c
  6621  0032AE  501B               	movf	pad@w+1,w,c
  6622  0032B0  2002               	addwfc	?_strlen+1,w,c
  6623  0032B2  6E12               	movwf	?_pad+1,c
  6624  0032B4  0012               	return		;funcret
  6625  0032B6  FFFF               	dw	65535	; errata NOP
  6626  0032B8                     __end_of_pad:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _strlen *****************
  6630 ;; Defined at:
  6631 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6634 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6637 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2    0[COMRAM] unsigned int 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6647 ;;      Params:         2       0       0       0       0       0       0
  6648 ;;      Locals:         2       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0
  6650 ;;      Totals:         4       0       0       0       0       0       0
  6651 ;;Total ram usage:        4 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_pad
  6658 ;;		_stoa
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text23
  6663  0037FE                     __ptext23:
  6664                           	opt callstack 0
  6665  0037FE                     _strlen:
  6666                           	opt callstack 0
  6667  0037FE  FFFF               	dw	65535	; assembler added errata NOP
  6668                           
  6669                           ;incstack = 0
  6670  003800  C001  F003         	movff	strlen@s,strlen@a
  6671  003804  C002  F004         	movff	strlen@s+1,strlen@a+1
  6672  003808  D003               	goto	l3224
  6673  00380A                     l3222:
  6674  00380A  FFFF               	dw	65535	; assembler added errata NOP
  6675  00380C  4A01               	infsnz	strlen@s,f,c
  6676  00380E  2A02               	incf	strlen@s+1,f,c
  6677  003810                     l3224:
  6678  003810  FFFF               	dw	65535	; assembler added errata NOP
  6679  003812  C001  FFD9         	movff	strlen@s,fsr2l
  6680  003816  C002  FFDA         	movff	strlen@s+1,fsr2h
  6681  00381A  50DF               	movf	indf2,w,c
  6682  00381C  A4D8               	btfss	status,2,c
  6683  00381E  D7F5               	goto	l3222
  6684  003820  5003               	movf	strlen@a,w,c
  6685  003822  5C01               	subwf	strlen@s,w,c
  6686  003824  6E01               	movwf	?_strlen,c
  6687  003826  5004               	movf	strlen@a+1,w,c
  6688  003828  5802               	subwfb	strlen@s+1,w,c
  6689  00382A  6E02               	movwf	?_strlen+1,c
  6690  00382C  0012               	return		;funcret
  6691  00382E  FFFF               	dw	65535	; errata NOP
  6692  003830                     __end_of_strlen:
  6693                           	opt callstack 0
  6694                           
  6695 ;; *************** function _fputs *****************
  6696 ;; Defined at:
  6697 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6700 ;;		 -> dbuf(32), 
  6701 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6702 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  i               2   14[COMRAM] int 
  6705 ;;  c               1   13[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  2    9[COMRAM] int 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6715 ;;      Params:         4       0       0       0       0       0       0
  6716 ;;      Locals:         3       0       0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0
  6718 ;;      Totals:         7       0       0       0       0       0       0
  6719 ;;Total ram usage:        7 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    4
  6722 ;; This function calls:
  6723 ;;		_fputc
  6724 ;; This function is called by:
  6725 ;;		_pad
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text24
  6730  003660                     __ptext24:
  6731                           	opt callstack 0
  6732  003660                     _fputs:
  6733                           	opt callstack 0
  6734  003660  FFFF               	dw	65535	; assembler added errata NOP
  6735                           
  6736                           ;incstack = 0
  6737  003662  0E00               	movlw	0
  6738  003664  6E10               	movwf	fputs@i+1,c
  6739  003666  0E00               	movlw	0
  6740  003668  6E0F               	movwf	fputs@i,c
  6741  00366A  D00C               	goto	l3218
  6742  00366C                     l3214:
  6743  00366C  FFFF               	dw	65535	; assembler added errata NOP
  6744  00366E  C00E  F001         	movff	fputs@c,fputc@c
  6745  003672  6A02               	clrf	fputc@c+1,c
  6746  003674  C00C  F003         	movff	fputs@fp,fputc@fp
  6747  003678  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6748  00367C  ECB1  F018         	call	_fputc	;wreg free
  6749  003680  4A0F               	infsnz	fputs@i,f,c
  6750  003682  2A10               	incf	fputs@i+1,f,c
  6751  003684                     l3218:
  6752  003684  FFFF               	dw	65535	; assembler added errata NOP
  6753  003686  500F               	movf	fputs@i,w,c
  6754  003688  240A               	addwf	fputs@s,w,c
  6755  00368A  6ED9               	movwf	fsr2l,c
  6756  00368C  5010               	movf	fputs@i+1,w,c
  6757  00368E  200B               	addwfc	fputs@s+1,w,c
  6758  003690  6EDA               	movwf	fsr2h,c
  6759  003692  50DF               	movf	indf2,w,c
  6760  003694  6E0E               	movwf	fputs@c,c
  6761  003696  500E               	movf	fputs@c,w,c
  6762  003698  B4D8               	btfsc	status,2,c
  6763  00369A  0012               	return		;funcret
  6764  00369C  FFFF               	dw	65535	; assembler added errata NOP
  6765  00369E  D7E6               	goto	l3214
  6766  0036A0  FFFF               	dw	65535	; errata NOP
  6767  0036A2                     __end_of_fputs:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function _fputc *****************
  6771 ;; Defined at:
  6772 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  c               2    0[COMRAM] int 
  6775 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6776 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2    0[COMRAM] int 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6788 ;;      Params:         4       0       0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0
  6790 ;;      Temps:          5       0       0       0       0       0       0
  6791 ;;      Totals:         9       0       0       0       0       0       0
  6792 ;;Total ram usage:        9 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    3
  6795 ;; This function calls:
  6796 ;;		_putch
  6797 ;; This function is called by:
  6798 ;;		_pad
  6799 ;;		_stoa
  6800 ;;		_vfpfcnvrt
  6801 ;;		_fputs
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text25
  6806  003162                     __ptext25:
  6807                           	opt callstack 0
  6808  003162                     _fputc:
  6809                           	opt callstack 0
  6810  003162  FFFF               	dw	65535	; assembler added errata NOP
  6811                           
  6812                           ;incstack = 0
  6813  003164  5003               	movf	fputc@fp,w,c
  6814  003166  1004               	iorwf	fputc@fp+1,w,c
  6815  003168  B4D8               	btfsc	status,2,c
  6816  00316A  D004               	goto	u2660
  6817  00316C  5003               	movf	fputc@fp,w,c
  6818  00316E  1004               	iorwf	fputc@fp+1,w,c
  6819  003170  A4D8               	btfss	status,2,c
  6820  003172  D005               	goto	l3204
  6821  003174                     u2660:
  6822  003174  FFFF               	dw	65535	; assembler added errata NOP
  6823  003176  5001               	movf	fputc@c,w,c
  6824  003178  EC9A  F01C         	call	_putch
  6825  00317C  D045               	goto	l1316
  6826  00317E                     l3204:
  6827  00317E  FFFF               	dw	65535	; assembler added errata NOP
  6828  003180  EE20 F004          	lfsr	2,4
  6829  003184  5003               	movf	fputc@fp,w,c
  6830  003186  26D9               	addwf	fsr2l,f,c
  6831  003188  5004               	movf	fputc@fp+1,w,c
  6832  00318A  22DA               	addwfc	fsr2h,f,c
  6833  00318C  50DE               	movf	postinc2,w,c
  6834  00318E  10DE               	iorwf	postinc2,w,c
  6835  003190  B4D8               	btfsc	status,2,c
  6836  003192  D016               	goto	u2680
  6837  003194  EE20 F004          	lfsr	2,4
  6838  003198  5003               	movf	fputc@fp,w,c
  6839  00319A  26D9               	addwf	fsr2l,f,c
  6840  00319C  5004               	movf	fputc@fp+1,w,c
  6841  00319E  22DA               	addwfc	fsr2h,f,c
  6842  0031A0  EE10 F002          	lfsr	1,2
  6843  0031A4  5003               	movf	fputc@fp,w,c
  6844  0031A6  26E1               	addwf	fsr1l,f,c
  6845  0031A8  5004               	movf	fputc@fp+1,w,c
  6846  0031AA  22E2               	addwfc	fsr1h,f,c
  6847  0031AC  50DE               	movf	postinc2,w,c
  6848  0031AE  5CE6               	subwf	postinc1,w,c
  6849  0031B0  50E6               	movf	postinc1,w,c
  6850  0031B2  0A80               	xorlw	128
  6851  0031B4  6E09               	movwf	(??_fputc+4)& (0+255),c
  6852  0031B6  50DE               	movf	postinc2,w,c
  6853  0031B8  0A80               	xorlw	128
  6854  0031BA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6855  0031BC  B0D8               	btfsc	status,0,c
  6856  0031BE  D024               	goto	l1316
  6857  0031C0                     u2680:
  6858  0031C0  FFFF               	dw	65535	; assembler added errata NOP
  6859  0031C2  EE20 F002          	lfsr	2,2
  6860  0031C6  5003               	movf	fputc@fp,w,c
  6861  0031C8  26D9               	addwf	fsr2l,f,c
  6862  0031CA  5004               	movf	fputc@fp+1,w,c
  6863  0031CC  22DA               	addwfc	fsr2h,f,c
  6864  0031CE  CFDE F005          	movff	postinc2,??_fputc
  6865  0031D2  CFDD F006          	movff	postdec2,??_fputc+1
  6866  0031D6  C003  FFD9         	movff	fputc@fp,fsr2l
  6867  0031DA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6868  0031DE  CFDE F007          	movff	postinc2,??_fputc+2
  6869  0031E2  CFDD F008          	movff	postdec2,??_fputc+3
  6870  0031E6  5005               	movf	??_fputc,w,c
  6871  0031E8  2407               	addwf	??_fputc+2,w,c
  6872  0031EA  6ED9               	movwf	fsr2l,c
  6873  0031EC  5006               	movf	??_fputc+1,w,c
  6874  0031EE  2008               	addwfc	??_fputc+3,w,c
  6875  0031F0  6EDA               	movwf	fsr2h,c
  6876  0031F2  C001  FFDF         	movff	fputc@c,indf2
  6877  0031F6  EE20 F002          	lfsr	2,2
  6878  0031FA  5003               	movf	fputc@fp,w,c
  6879  0031FC  26D9               	addwf	fsr2l,f,c
  6880  0031FE  5004               	movf	fputc@fp+1,w,c
  6881  003200  22DA               	addwfc	fsr2h,f,c
  6882  003202  2ADE               	incf	postinc2,f,c
  6883  003204  0E00               	movlw	0
  6884  003206  22DD               	addwfc	postdec2,f,c
  6885  003208                     l1316:
  6886  003208  FFFF               	dw	65535	; assembler added errata NOP
  6887  00320A  0012               	return		;funcret
  6888  00320C  FFFF               	dw	65535	; errata NOP
  6889  00320E                     __end_of_fputc:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _putch *****************
  6893 ;; Defined at:
  6894 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  c               1    wreg     unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  c               1    0[COMRAM] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6908 ;;      Params:         0       0       0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0
  6911 ;;      Totals:         0       0       0       0       0       0       0
  6912 ;;Total ram usage:        0 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    2
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_fputc
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text26
  6923  003934                     __ptext26:
  6924                           	opt callstack 0
  6925  003934                     _putch:
  6926                           	opt callstack 0
  6927  003934  FFFF               	dw	65535	; assembler added errata NOP
  6928                           
  6929                           ;incstack = 0
  6930  003936  0012               	return		;funcret
  6931  003938  FFFF               	dw	65535	; errata NOP
  6932  00393A                     __end_of_putch:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _atoi *****************
  6936 ;; Defined at:
  6937 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6940 ;;		 -> STR_2(3), STR_1(4), 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  n               2   20[COMRAM] int 
  6943 ;;  neg             2   13[COMRAM] int 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  2    7[COMRAM] int 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6953 ;;      Params:         2       0       0       0       0       0       0
  6954 ;;      Locals:         9       0       0       0       0       0       0
  6955 ;;      Temps:          4       0       0       0       0       0       0
  6956 ;;      Totals:        15       0       0       0       0       0       0
  6957 ;;Total ram usage:       15 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    3
  6960 ;; This function calls:
  6961 ;;		___wmul
  6962 ;;		_isdigit
  6963 ;;		_isspace
  6964 ;; This function is called by:
  6965 ;;		_vfpfcnvrt
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text27
  6970  0026D0                     __ptext27:
  6971                           	opt callstack 0
  6972  0026D0                     _atoi:
  6973                           	opt callstack 0
  6974  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  6975                           
  6976                           ;incstack = 0
  6977  0026D2  0E00               	movlw	0
  6978  0026D4  6E16               	movwf	atoi@n+1,c
  6979  0026D6  0E00               	movlw	0
  6980  0026D8  6E15               	movwf	atoi@n,c
  6981  0026DA  0E00               	movlw	0
  6982  0026DC  6E0F               	movwf	atoi@neg+1,c
  6983  0026DE  0E00               	movlw	0
  6984  0026E0  6E0E               	movwf	atoi@neg,c
  6985  0026E2  D003               	goto	l3690
  6986  0026E4                     l3688:
  6987  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  6988  0026E6  4A08               	infsnz	atoi@s,f,c
  6989  0026E8  2A09               	incf	atoi@s+1,f,c
  6990  0026EA                     l3690:
  6991  0026EA  FFFF               	dw	65535	; assembler added errata NOP
  6992  0026EC  0E01               	movlw	1
  6993  0026EE  6E14               	movwf	_atoi$1787,c
  6994  0026F0  C008  FFF6         	movff	atoi@s,tblptrl
  6995  0026F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  6996  0026F8                     	if	0	;tblptru may be non-zero
  6997  0026F8                     	endif
  6998  0026F8                     	if	0	;tblptru may be non-zero
  6999  0026F8                     	endif
  7000  0026F8  0008               	tblrd		*
  7001  0026FA  FFFF               	dw	65535	; errata NOP
  7002  0026FC  50F5               	movf	tablat,w,c
  7003  0026FE  0A20               	xorlw	32
  7004  002700  B4D8               	btfsc	status,2,c
  7005  002702  D019               	goto	l3698
  7006  002704  0EF7               	movlw	247
  7007  002706  6E0A               	movwf	??_atoi& (0+255),c
  7008  002708  0EFF               	movlw	255
  7009  00270A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7010  00270C  C008  FFF6         	movff	atoi@s,tblptrl
  7011  002710  C009  FFF7         	movff	atoi@s+1,tblptrh
  7012  002714                     	if	0	;tblptru may be non-zero
  7013  002714                     	endif
  7014  002714                     	if	0	;tblptru may be non-zero
  7015  002714                     	endif
  7016  002714  0008               	tblrd		*
  7017  002716  FFFF               	dw	65535	; errata NOP
  7018  002718  50F5               	movf	tablat,w,c
  7019  00271A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7020  00271C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7021  00271E  500A               	movf	??_atoi,w,c
  7022  002720  260C               	addwf	??_atoi+2,f,c
  7023  002722  500B               	movf	??_atoi+1,w,c
  7024  002724  220D               	addwfc	??_atoi+3,f,c
  7025  002726  500D               	movf	??_atoi+3,w,c
  7026  002728  E104               	bnz	u3690
  7027  00272A  0E05               	movlw	5
  7028  00272C  5C0C               	subwf	??_atoi+2,w,c
  7029  00272E  A0D8               	btfss	status,0,c
  7030  002730  D002               	goto	l3698
  7031  002732                     u3690:
  7032  002732  0E00               	movlw	0
  7033  002734  6E14               	movwf	_atoi$1787,c
  7034  002736                     l3698:
  7035  002736  FFFF               	dw	65535	; assembler added errata NOP
  7036  002738  C014  F010         	movff	_atoi$1787,_atoi$1786
  7037  00273C  6A11               	clrf	_atoi$1786+1,c
  7038  00273E  5010               	movf	_atoi$1786,w,c
  7039  002740  1011               	iorwf	_atoi$1786+1,w,c
  7040  002742  B4D8               	btfsc	status,2,c
  7041  002744  D00A               	goto	l3708
  7042  002746  D7CE               	goto	l3688
  7043  002748                     l3704:
  7044  002748  FFFF               	dw	65535	; assembler added errata NOP
  7045  00274A  0E00               	movlw	0
  7046  00274C  6E0F               	movwf	atoi@neg+1,c
  7047  00274E  0E01               	movlw	1
  7048  002750  6E0E               	movwf	atoi@neg,c
  7049  002752                     l3706:
  7050  002752  FFFF               	dw	65535	; assembler added errata NOP
  7051  002754  4A08               	infsnz	atoi@s,f,c
  7052  002756  2A09               	incf	atoi@s+1,f,c
  7053  002758  D032               	goto	l3714
  7054  00275A                     l3708:
  7055  00275A  FFFF               	dw	65535	; assembler added errata NOP
  7056  00275C  C008  FFF6         	movff	atoi@s,tblptrl
  7057  002760  C009  FFF7         	movff	atoi@s+1,tblptrh
  7058  002764                     	if	0	;tblptru may be non-zero
  7059  002764                     	endif
  7060  002764                     	if	0	;tblptru may be non-zero
  7061  002764                     	endif
  7062  002764  0008               	tblrd		*
  7063  002766  FFFF               	dw	65535	; errata NOP
  7064  002768  50F5               	movf	tablat,w,c
  7065  00276A  6E0A               	movwf	??_atoi& (0+255),c
  7066  00276C  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7067                           
  7068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7069                           ; Switch size 1, requested type "simple"
  7070                           ; Number of cases is 1, Range of values is 0 to 0
  7071                           ; switch strategies available:
  7072                           ; Name         Instructions Cycles
  7073                           ; simple_byte            4     3 (average)
  7074                           ;	Chosen strategy is simple_byte
  7075  00276E  500B               	movf	??_atoi+1,w,c
  7076  002770  0A00               	xorlw	0	; case 0
  7077  002772  A4D8               	btfss	status,2,c
  7078  002774  D024               	goto	l3714
  7079                           
  7080                           ; Switch size 1, requested type "simple"
  7081                           ; Number of cases is 2, Range of values is 43 to 45
  7082                           ; switch strategies available:
  7083                           ; Name         Instructions Cycles
  7084                           ; simple_byte            7     4 (average)
  7085                           ;	Chosen strategy is simple_byte
  7086  002776  500A               	movf	??_atoi,w,c
  7087  002778  0A2B               	xorlw	43	; case 43
  7088  00277A  B4D8               	btfsc	status,2,c
  7089  00277C  D7EA               	goto	l3706
  7090  00277E  0A06               	xorlw	6	; case 45
  7091  002780  B4D8               	btfsc	status,2,c
  7092  002782  D7E2               	goto	l3704
  7093  002784  D01C               	goto	l3714
  7094  002786                     l3710:
  7095  002786  FFFF               	dw	65535	; assembler added errata NOP
  7096  002788  C015  F001         	movff	atoi@n,___wmul@multiplier
  7097  00278C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7098  002790  0E00               	movlw	0
  7099  002792  6E04               	movwf	___wmul@multiplicand+1,c
  7100  002794  0E0A               	movlw	10
  7101  002796  6E03               	movwf	___wmul@multiplicand,c
  7102  002798  EC18  F01C         	call	___wmul	;wreg free
  7103  00279C  C008  FFF6         	movff	atoi@s,tblptrl
  7104  0027A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7105  0027A4                     	if	0	;tblptru may be non-zero
  7106  0027A4                     	endif
  7107  0027A4                     	if	0	;tblptru may be non-zero
  7108  0027A4                     	endif
  7109  0027A4  0008               	tblrd		*
  7110  0027A6  FFFF               	dw	65535	; errata NOP
  7111  0027A8  50F5               	movf	tablat,w,c
  7112  0027AA  5E01               	subwf	?___wmul,f,c
  7113  0027AC  0E00               	movlw	0
  7114  0027AE  5A02               	subwfb	?___wmul+1,f,c
  7115  0027B0  0E30               	movlw	48
  7116  0027B2  2401               	addwf	?___wmul,w,c
  7117  0027B4  6E15               	movwf	atoi@n,c
  7118  0027B6  0E00               	movlw	0
  7119  0027B8  2002               	addwfc	?___wmul+1,w,c
  7120  0027BA  6E16               	movwf	atoi@n+1,c
  7121  0027BC  D7CA               	goto	l3706
  7122  0027BE                     l3714:
  7123  0027BE  FFFF               	dw	65535	; assembler added errata NOP
  7124  0027C0  0ED0               	movlw	208
  7125  0027C2  6E0A               	movwf	??_atoi& (0+255),c
  7126  0027C4  0EFF               	movlw	255
  7127  0027C6  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7128  0027C8  C008  FFF6         	movff	atoi@s,tblptrl
  7129  0027CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7130  0027D0                     	if	0	;tblptru may be non-zero
  7131  0027D0                     	endif
  7132  0027D0                     	if	0	;tblptru may be non-zero
  7133  0027D0                     	endif
  7134  0027D0  0008               	tblrd		*
  7135  0027D2  FFFF               	dw	65535	; errata NOP
  7136  0027D4  50F5               	movf	tablat,w,c
  7137  0027D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7138  0027D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7139  0027DA  500A               	movf	??_atoi,w,c
  7140  0027DC  260C               	addwf	??_atoi+2,f,c
  7141  0027DE  500B               	movf	??_atoi+1,w,c
  7142  0027E0  220D               	addwfc	??_atoi+3,f,c
  7143  0027E2  500D               	movf	??_atoi+3,w,c
  7144  0027E4  E106               	bnz	u3710
  7145  0027E6  0E0A               	movlw	10
  7146  0027E8  5C0C               	subwf	??_atoi+2,w,c
  7147  0027EA  B0D8               	btfsc	status,0,c
  7148  0027EC  D002               	goto	u3710
  7149  0027EE  0E01               	movlw	1
  7150  0027F0  D002               	goto	u3720
  7151  0027F2                     u3710:
  7152  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  7153  0027F4  0E00               	movlw	0
  7154  0027F6                     u3720:
  7155  0027F6  FFFF               	dw	65535	; assembler added errata NOP
  7156  0027F8  6E12               	movwf	_atoi$1788,c
  7157  0027FA  6A13               	clrf	_atoi$1788+1,c
  7158  0027FC  5012               	movf	_atoi$1788,w,c
  7159  0027FE  1013               	iorwf	_atoi$1788+1,w,c
  7160  002800  A4D8               	btfss	status,2,c
  7161  002802  D7C1               	goto	l3710
  7162  002804  500E               	movf	atoi@neg,w,c
  7163  002806  100F               	iorwf	atoi@neg+1,w,c
  7164  002808  A4D8               	btfss	status,2,c
  7165  00280A  D00D               	goto	l1270
  7166  00280C  C015  F00A         	movff	atoi@n,??_atoi
  7167  002810  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7168  002814  1E0A               	comf	??_atoi,f,c
  7169  002816  1E0B               	comf	??_atoi+1,f,c
  7170  002818  4A0A               	infsnz	??_atoi,f,c
  7171  00281A  2A0B               	incf	??_atoi+1,f,c
  7172  00281C  C00A  F008         	movff	??_atoi,?_atoi
  7173  002820  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7174  002824  D005               	goto	l1273
  7175  002826                     l1270:
  7176  002826  FFFF               	dw	65535	; assembler added errata NOP
  7177  002828  C015  F008         	movff	atoi@n,?_atoi
  7178  00282C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7179  002830                     l1273:
  7180  002830  FFFF               	dw	65535	; assembler added errata NOP
  7181  002832  0012               	return		;funcret
  7182  002834  FFFF               	dw	65535	; errata NOP
  7183  002836                     __end_of_atoi:
  7184                           	opt callstack 0
  7185                           
  7186 ;; *************** function _isspace *****************
  7187 ;; Defined at:
  7188 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  c               2    0[COMRAM] int 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  2    0[COMRAM] int 
  7195 ;; Registers used:
  7196 ;;		wreg, status,2, status,0
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7202 ;;      Params:         2       0       0       0       0       0       0
  7203 ;;      Locals:         1       0       0       0       0       0       0
  7204 ;;      Temps:          4       0       0       0       0       0       0
  7205 ;;      Totals:         7       0       0       0       0       0       0
  7206 ;;Total ram usage:        7 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    2
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_atoi
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text28
  7217  0035D8                     __ptext28:
  7218                           	opt callstack 0
  7219  0035D8                     _isspace:
  7220                           	opt callstack 0
  7221  0035D8  FFFF               	dw	65535	; assembler added errata NOP
  7222                           
  7223                           ;incstack = 0
  7224  0035DA  0E01               	movlw	1
  7225  0035DC  6E07               	movwf	_isspace$1823,c
  7226  0035DE  0E20               	movlw	32
  7227  0035E0  1801               	xorwf	isspace@c,w,c
  7228  0035E2  1002               	iorwf	isspace@c+1,w,c
  7229  0035E4  B4D8               	btfsc	status,2,c
  7230  0035E6  D014               	goto	l3414
  7231  0035E8  0EF7               	movlw	247
  7232  0035EA  6E03               	movwf	??_isspace& (0+255),c
  7233  0035EC  0EFF               	movlw	255
  7234  0035EE  6E04               	movwf	(??_isspace+1)& (0+255),c
  7235  0035F0  C001  F005         	movff	isspace@c,??_isspace+2
  7236  0035F4  C002  F006         	movff	isspace@c+1,??_isspace+3
  7237  0035F8  5003               	movf	??_isspace,w,c
  7238  0035FA  2605               	addwf	??_isspace+2,f,c
  7239  0035FC  5004               	movf	??_isspace+1,w,c
  7240  0035FE  2206               	addwfc	??_isspace+3,f,c
  7241  003600  5006               	movf	??_isspace+3,w,c
  7242  003602  E104               	bnz	u3080
  7243  003604  0E05               	movlw	5
  7244  003606  5C05               	subwf	??_isspace+2,w,c
  7245  003608  A0D8               	btfss	status,0,c
  7246  00360A  D002               	goto	l3414
  7247  00360C                     u3080:
  7248  00360C  0E00               	movlw	0
  7249  00360E  6E07               	movwf	_isspace$1823,c
  7250  003610                     l3414:
  7251  003610  FFFF               	dw	65535	; assembler added errata NOP
  7252  003612  C007  F001         	movff	_isspace$1823,?_isspace
  7253  003616  6A02               	clrf	?_isspace+1,c
  7254  003618  0012               	return		;funcret
  7255  00361A  FFFF               	dw	65535	; errata NOP
  7256  00361C                     __end_of_isspace:
  7257                           	opt callstack 0
  7258                           
  7259 ;; *************** function _isdigit *****************
  7260 ;; Defined at:
  7261 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  c               2    0[COMRAM] int 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;		None
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  2    0[COMRAM] int 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2, status,0
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7275 ;;      Params:         2       0       0       0       0       0       0
  7276 ;;      Locals:         0       0       0       0       0       0       0
  7277 ;;      Temps:          4       0       0       0       0       0       0
  7278 ;;      Totals:         6       0       0       0       0       0       0
  7279 ;;Total ram usage:        6 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    2
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_vfpfcnvrt
  7286 ;;		_atoi
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text29
  7291  0037C6                     __ptext29:
  7292                           	opt callstack 0
  7293  0037C6                     _isdigit:
  7294                           	opt callstack 0
  7295  0037C6  FFFF               	dw	65535	; assembler added errata NOP
  7296                           
  7297                           ;incstack = 0
  7298  0037C8  0ED0               	movlw	208
  7299  0037CA  6E03               	movwf	??_isdigit& (0+255),c
  7300  0037CC  0EFF               	movlw	255
  7301  0037CE  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7302  0037D0  C001  F005         	movff	isdigit@c,??_isdigit+2
  7303  0037D4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7304  0037D8  5003               	movf	??_isdigit,w,c
  7305  0037DA  2605               	addwf	??_isdigit+2,f,c
  7306  0037DC  5004               	movf	??_isdigit+1,w,c
  7307  0037DE  2206               	addwfc	??_isdigit+3,f,c
  7308  0037E0  5006               	movf	??_isdigit+3,w,c
  7309  0037E2  E106               	bnz	u2850
  7310  0037E4  0E0A               	movlw	10
  7311  0037E6  5C05               	subwf	??_isdigit+2,w,c
  7312  0037E8  B0D8               	btfsc	status,0,c
  7313  0037EA  D002               	goto	u2850
  7314  0037EC  0E01               	movlw	1
  7315  0037EE  D002               	goto	u2860
  7316  0037F0                     u2850:
  7317  0037F0  FFFF               	dw	65535	; assembler added errata NOP
  7318  0037F2  0E00               	movlw	0
  7319  0037F4                     u2860:
  7320  0037F4  FFFF               	dw	65535	; assembler added errata NOP
  7321  0037F6  6E01               	movwf	?_isdigit,c
  7322  0037F8  6A02               	clrf	?_isdigit+1,c
  7323  0037FA  0012               	return		;funcret
  7324  0037FC  FFFF               	dw	65535	; errata NOP
  7325  0037FE                     __end_of_isdigit:
  7326                           	opt callstack 0
  7327                           
  7328 ;; *************** function ___wmul *****************
  7329 ;; Defined at:
  7330 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  multiplier      2    0[COMRAM] unsigned int 
  7333 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  product         2    4[COMRAM] unsigned int 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2    0[COMRAM] unsigned int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0, prodl, prodh
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7345 ;;      Params:         4       0       0       0       0       0       0
  7346 ;;      Locals:         2       0       0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0
  7348 ;;      Totals:         6       0       0       0       0       0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    2
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_atoi
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text30
  7360  003830                     __ptext30:
  7361                           	opt callstack 0
  7362  003830                     ___wmul:
  7363                           	opt callstack 0
  7364  003830  FFFF               	dw	65535	; assembler added errata NOP
  7365                           
  7366                           ;incstack = 0
  7367  003832  5001               	movf	___wmul@multiplier,w,c
  7368  003834  0203               	mulwf	___wmul@multiplicand,c
  7369  003836  CFF3 F005          	movff	prodl,___wmul@product
  7370  00383A  CFF4 F006          	movff	prodh,___wmul@product+1
  7371  00383E  5001               	movf	___wmul@multiplier,w,c
  7372  003840  0204               	mulwf	___wmul@multiplicand+1,c
  7373  003842  50F3               	movf	prodl,w,c
  7374  003844  2606               	addwf	___wmul@product+1,f,c
  7375  003846  5002               	movf	___wmul@multiplier+1,w,c
  7376  003848  0203               	mulwf	___wmul@multiplicand,c
  7377  00384A  50F3               	movf	prodl,w,c
  7378  00384C  2606               	addwf	___wmul@product+1,f,c
  7379  00384E  C005  F001         	movff	___wmul@product,?___wmul
  7380  003852  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7381  003856  0012               	return		;funcret
  7382  003858  FFFF               	dw	65535	; errata NOP
  7383  00385A                     __end_of___wmul:
  7384                           	opt callstack 0
  7385                           
  7386 ;; *************** function _getchar *****************
  7387 ;; Defined at:
  7388 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  2   32[None  ] int 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7402 ;;      Params:         0       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    4
  7409 ;; This function calls:
  7410 ;;		_fgetc
  7411 ;; This function is called by:
  7412 ;;		_int_to_char
  7413 ;;		_float_to_char
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text31
  7418  0038E8                     __ptext31:
  7419                           	opt callstack 0
  7420  0038E8                     _getchar:
  7421                           	opt callstack 0
  7422  0038E8  FFFF               	dw	65535	; assembler added errata NOP
  7423                           
  7424                           ;	Return value of _getchar is never used
  7425                           
  7426                           ;incstack = 0
  7427  0038EA  0E00               	movlw	0
  7428  0038EC  6E03               	movwf	fgetc@fp,c
  7429  0038EE  0E00               	movlw	0
  7430  0038F0  6E04               	movwf	fgetc@fp+1,c
  7431  0038F2  EC5C  F019         	call	_fgetc	;wreg free
  7432  0038F6  0012               	return		;funcret
  7433  0038F8  FFFF               	dw	65535	; errata NOP
  7434  0038FA                     __end_of_getchar:
  7435                           	opt callstack 0
  7436                           
  7437 ;; *************** function _fgetc *****************
  7438 ;; Defined at:
  7439 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7442 ;;		 -> NULL(0), 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  c               2    9[COMRAM] int 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2    2[COMRAM] int 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7454 ;;      Params:         2       0       0       0       0       0       0
  7455 ;;      Locals:         2       0       0       0       0       0       0
  7456 ;;      Temps:          5       0       0       0       0       0       0
  7457 ;;      Totals:         9       0       0       0       0       0       0
  7458 ;;Total ram usage:        9 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    3
  7461 ;; This function calls:
  7462 ;;		_getch
  7463 ;; This function is called by:
  7464 ;;		_getchar
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text32
  7469  0032B8                     __ptext32:
  7470                           	opt callstack 0
  7471  0032B8                     _fgetc:
  7472                           	opt callstack 0
  7473  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  7474                           
  7475                           ;incstack = 0
  7476  0032BA  5003               	movf	fgetc@fp,w,c
  7477  0032BC  1004               	iorwf	fgetc@fp+1,w,c
  7478  0032BE  A4D8               	btfss	status,2,c
  7479  0032C0  D012               	goto	l4350
  7480  0032C2  507E               	movf	_ungetcnt,w,c
  7481  0032C4  B4D8               	btfsc	status,2,c
  7482  0032C6  D007               	goto	l4348
  7483  0032C8  0E00               	movlw	0
  7484  0032CA  6E0B               	movwf	fgetc@c+1,c
  7485  0032CC  0E00               	movlw	0
  7486  0032CE  6E0A               	movwf	fgetc@c,c
  7487  0032D0  0E00               	movlw	0
  7488  0032D2  6E7E               	movwf	_ungetcnt,c
  7489  0032D4  D02F               	goto	l4352
  7490  0032D6                     l4348:
  7491  0032D6  FFFF               	dw	65535	; assembler added errata NOP
  7492  0032D8  EC89  F01C         	call	_getch	;wreg free
  7493  0032DC  C001  F00A         	movff	?_getch,fgetc@c
  7494  0032E0  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7495  0032E4  D027               	goto	l4352
  7496  0032E6                     l4350:
  7497  0032E6  FFFF               	dw	65535	; assembler added errata NOP
  7498  0032E8  EE20 F002          	lfsr	2,2
  7499  0032EC  5003               	movf	fgetc@fp,w,c
  7500  0032EE  26D9               	addwf	fsr2l,f,c
  7501  0032F0  5004               	movf	fgetc@fp+1,w,c
  7502  0032F2  22DA               	addwfc	fsr2h,f,c
  7503  0032F4  CFDE F005          	movff	postinc2,??_fgetc
  7504  0032F8  CFDD F006          	movff	postdec2,??_fgetc+1
  7505  0032FC  C003  FFD9         	movff	fgetc@fp,fsr2l
  7506  003300  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7507  003304  CFDE F007          	movff	postinc2,??_fgetc+2
  7508  003308  CFDD F008          	movff	postdec2,??_fgetc+3
  7509  00330C  5005               	movf	??_fgetc,w,c
  7510  00330E  2407               	addwf	??_fgetc+2,w,c
  7511  003310  6ED9               	movwf	fsr2l,c
  7512  003312  5006               	movf	??_fgetc+1,w,c
  7513  003314  2008               	addwfc	??_fgetc+3,w,c
  7514  003316  6EDA               	movwf	fsr2h,c
  7515  003318  50DF               	movf	indf2,w,c
  7516  00331A  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7517  00331C  5009               	movf	??_fgetc+4,w,c
  7518  00331E  6E0A               	movwf	fgetc@c,c
  7519  003320  6A0B               	clrf	fgetc@c+1,c
  7520  003322  EE20 F002          	lfsr	2,2
  7521  003326  5003               	movf	fgetc@fp,w,c
  7522  003328  26D9               	addwf	fsr2l,f,c
  7523  00332A  5004               	movf	fgetc@fp+1,w,c
  7524  00332C  22DA               	addwfc	fsr2h,f,c
  7525  00332E  2ADE               	incf	postinc2,f,c
  7526  003330  0E00               	movlw	0
  7527  003332  22DD               	addwfc	postdec2,f,c
  7528  003334                     l4352:
  7529  003334  FFFF               	dw	65535	; assembler added errata NOP
  7530  003336  C00A  F003         	movff	fgetc@c,?_fgetc
  7531  00333A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7532  00333E  0012               	return		;funcret
  7533  003340  FFFF               	dw	65535	; errata NOP
  7534  003342                     __end_of_fgetc:
  7535                           	opt callstack 0
  7536                           
  7537 ;; *************** function _getch *****************
  7538 ;; Defined at:
  7539 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;		None
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2    0[COMRAM] int 
  7546 ;; Registers used:
  7547 ;;		None
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7553 ;;      Params:         2       0       0       0       0       0       0
  7554 ;;      Locals:         0       0       0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0
  7556 ;;      Totals:         2       0       0       0       0       0       0
  7557 ;;Total ram usage:        2 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    2
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_fgetc
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text33
  7568  003912                     __ptext33:
  7569                           	opt callstack 0
  7570  003912                     _getch:
  7571                           	opt callstack 0
  7572  003912  FFFF               	dw	65535	; assembler added errata NOP
  7573                           
  7574                           ;incstack = 0
  7575  003914  6801               	setf	?_getch,c
  7576  003916  6802               	setf	?_getch+1,c
  7577  003918  0012               	return		;funcret
  7578  00391A  FFFF               	dw	65535	; errata NOP
  7579  00391C                     __end_of_getch:
  7580                           	opt callstack 0
  7581                           
  7582 ;; *************** function _initialize_TX *****************
  7583 ;; Defined at:
  7584 ;;		line 23 in file "serial.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7598 ;;      Params:         0       0       0       0       0       0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0
  7601 ;;      Totals:         0       0       0       0       0       0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    2
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_main
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text34
  7613  003898                     __ptext34:
  7614                           	opt callstack 0
  7615  003898                     _initialize_TX:
  7616                           	opt callstack 0
  7617  003898  FFFF               	dw	65535	; assembler added errata NOP
  7618                           
  7619                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7620                           
  7621                           ;incstack = 0
  7622  00389A  8CAC               	bsf	4012,6,c	;volatile
  7623                           
  7624                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7625  00389C  8AAC               	bsf	4012,5,c	;volatile
  7626                           
  7627                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7628  00389E  98AC               	bcf	4012,4,c	;volatile
  7629                           
  7630                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7631  0038A0  94AC               	bcf	4012,2,c	;volatile
  7632                           
  7633                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7634  0038A2  80AC               	bsf	4012,0,c	;volatile
  7635                           
  7636                           ;serial.c: 29:   SPBRG = 25;
  7637  0038A4  0E19               	movlw	25
  7638  0038A6  6EAF               	movwf	4015,c	;volatile
  7639  0038A8  0012               	return		;funcret
  7640  0038AA  FFFF               	dw	65535	; errata NOP
  7641  0038AC                     __end_of_initialize_TX:
  7642                           	opt callstack 0
  7643                           
  7644 ;; *************** function _initialize_RX *****************
  7645 ;; Defined at:
  7646 ;;		line 32 in file "serial.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7660 ;;      Params:         0       0       0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    2
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_main
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text35
  7675  0038AC                     __ptext35:
  7676                           	opt callstack 0
  7677  0038AC                     _initialize_RX:
  7678                           	opt callstack 0
  7679  0038AC  FFFF               	dw	65535	; assembler added errata NOP
  7680                           
  7681                           ;serial.c: 33:   RCSTA = 0x00;
  7682                           
  7683                           ;incstack = 0
  7684  0038AE  0E00               	movlw	0
  7685  0038B0  6EAB               	movwf	4011,c	;volatile
  7686                           
  7687                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7688  0038B2  8EAB               	bsf	4011,7,c	;volatile
  7689                           
  7690                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7691  0038B4  8CAB               	bsf	4011,6,c	;volatile
  7692                           
  7693                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7694  0038B6  88AB               	bsf	4011,4,c	;volatile
  7695                           
  7696                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7697  0038B8  96AB               	bcf	4011,3,c	;volatile
  7698                           
  7699                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7700  0038BA  80AB               	bsf	4011,0,c	;volatile
  7701  0038BC  0012               	return		;funcret
  7702  0038BE  FFFF               	dw	65535	; errata NOP
  7703  0038C0                     __end_of_initialize_RX:
  7704                           	opt callstack 0
  7705                           
  7706 ;; *************** function _initialize_PWM *****************
  7707 ;; Defined at:
  7708 ;;		line 5 in file "pwm.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;		None
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7722 ;;      Params:         0       0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    2
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_main
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text36
  7737  003880                     __ptext36:
  7738                           	opt callstack 0
  7739  003880                     _initialize_PWM:
  7740                           	opt callstack 0
  7741  003880  FFFF               	dw	65535	; assembler added errata NOP
  7742                           
  7743                           ;pwm.c: 6:   PR2 = 0xFF;
  7744                           
  7745                           ;incstack = 0
  7746  003882  68CB               	setf	4043,c	;volatile
  7747                           
  7748                           ;pwm.c: 7:   CCPR1L = 0xFF;
  7749  003884  68BE               	setf	4030,c	;volatile
  7750                           
  7751                           ;pwm.c: 8:   CCP1CON |= 0x30;
  7752  003886  0E30               	movlw	48
  7753  003888  12BD               	iorwf	4029,f,c	;volatile
  7754                           
  7755                           ;pwm.c: 9:   T2CON = 0x04;
  7756  00388A  0E04               	movlw	4
  7757  00388C  6ECA               	movwf	4042,c	;volatile
  7758                           
  7759                           ;pwm.c: 10:   CCP1CON |= 0x0C;
  7760  00388E  0E0C               	movlw	12
  7761  003890  12BD               	iorwf	4029,f,c	;volatile
  7762                           
  7763                           ;pwm.c: 11:   TRISCbits.TRISC2 = 0;
  7764  003892  9494               	bcf	3988,2,c	;volatile
  7765  003894  0012               	return		;funcret
  7766  003896  FFFF               	dw	65535	; errata NOP
  7767  003898                     __end_of_initialize_PWM:
  7768                           	opt callstack 0
  7769                           
  7770 ;; *************** function _get_temp *****************
  7771 ;; Defined at:
  7772 ;;		line 10 in file "temp_adc.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  temp            4   55[COMRAM] float 
  7777 ;;  real_voltage    4   51[COMRAM] float 
  7778 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  4   47[COMRAM] float 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7788 ;;      Params:         4       0       0       0       0       0       0
  7789 ;;      Locals:        10       0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0
  7791 ;;      Totals:        14       0       0       0       0       0       0
  7792 ;;Total ram usage:       14 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    4
  7795 ;; This function calls:
  7796 ;;		_ADC_Init
  7797 ;;		_ADC_Read
  7798 ;;		___flmul
  7799 ;;		___flsub
  7800 ;;		___xxtofl
  7801 ;; This function is called by:
  7802 ;;		_main
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text37
  7807  002F1A                     __ptext37:
  7808                           	opt callstack 0
  7809  002F1A                     _get_temp:
  7810                           	opt callstack 0
  7811  002F1A  FFFF               	dw	65535	; assembler added errata NOP
  7812                           
  7813                           ;temp_adc.c: 11:   ADC_Init();
  7814                           
  7815                           ;incstack = 0
  7816  002F1C  EC7D  F01C         	call	_ADC_Init	;wreg free
  7817                           
  7818                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  7819  002F20  90C1               	bcf	4033,0,c	;volatile
  7820                           
  7821                           ;temp_adc.c: 13:   TRISA |= 0x01;
  7822  002F22  8092               	bsf	3986,0,c	;volatile
  7823                           
  7824                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  7825  002F24  0E00               	movlw	0
  7826  002F26  EC52  F01A         	call	_ADC_Read
  7827  002F2A  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  7828  002F2E  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  7829                           
  7830                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  7831  002F32  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  7832  002F36  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  7833  002F3A  6A03               	clrf	___xxtofl@val+2,c
  7834  002F3C  6A04               	clrf	___xxtofl@val+3,c
  7835  002F3E  0E00               	movlw	0
  7836  002F40  ECC9  F014         	call	___xxtofl
  7837  002F44  C001  F00F         	movff	?___xxtofl,___flmul@b
  7838  002F48  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7839  002F4C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7840  002F50  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7841  002F54  0E9F               	movlw	159
  7842  002F56  6E13               	movwf	___flmul@a,c
  7843  002F58  0EAB               	movlw	171
  7844  002F5A  6E14               	movwf	___flmul@a+1,c
  7845  002F5C  0EAD               	movlw	173
  7846  002F5E  6E15               	movwf	___flmul@a+2,c
  7847  002F60  0E3B               	movlw	59
  7848  002F62  6E16               	movwf	___flmul@a+3,c
  7849  002F64  ECF6  F00B         	call	___flmul	;wreg free
  7850  002F68  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  7851  002F6C  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  7852  002F70  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  7853  002F74  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  7854                           
  7855                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  7856  002F78  0E00               	movlw	0
  7857  002F7A  6E28               	movwf	___flsub@b,c
  7858  002F7C  0E00               	movlw	0
  7859  002F7E  6E29               	movwf	___flsub@b+1,c
  7860  002F80  0E48               	movlw	72
  7861  002F82  6E2A               	movwf	___flsub@b+2,c
  7862  002F84  0E43               	movlw	67
  7863  002F86  6E2B               	movwf	___flsub@b+3,c
  7864  002F88  0E00               	movlw	0
  7865  002F8A  6E13               	movwf	___flmul@a,c
  7866  002F8C  0E00               	movlw	0
  7867  002F8E  6E14               	movwf	___flmul@a+1,c
  7868  002F90  0E0C               	movlw	12
  7869  002F92  6E15               	movwf	___flmul@a+2,c
  7870  002F94  0E42               	movlw	66
  7871  002F96  6E16               	movwf	___flmul@a+3,c
  7872  002F98  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  7873  002F9C  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  7874  002FA0  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  7875  002FA4  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  7876  002FA8  ECF6  F00B         	call	___flmul	;wreg free
  7877  002FAC  C00F  F02C         	movff	?___flmul,___flsub@a
  7878  002FB0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  7879  002FB4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  7880  002FB8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  7881  002FBC  ECA3  F01A         	call	___flsub	;wreg free
  7882  002FC0  C028  F038         	movff	?___flsub,get_temp@temp
  7883  002FC4  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  7884  002FC8  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  7885  002FCC  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  7886                           
  7887                           ;temp_adc.c: 18:   return temp;
  7888  002FD0  C038  F030         	movff	get_temp@temp,?_get_temp
  7889  002FD4  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  7890  002FD8  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  7891  002FDC  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  7892  002FE0  0012               	return		;funcret
  7893  002FE2  FFFF               	dw	65535	; errata NOP
  7894  002FE4                     __end_of_get_temp:
  7895                           	opt callstack 0
  7896                           
  7897 ;; *************** function ___xxtofl *****************
  7898 ;; Defined at:
  7899 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  sign            1    wreg     unsigned char 
  7902 ;;  val             4    0[COMRAM] long 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  sign            1    8[COMRAM] unsigned char 
  7905 ;;  arg             4   10[COMRAM] unsigned long 
  7906 ;;  exp             1    9[COMRAM] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  4    0[COMRAM] unsigned char 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7916 ;;      Params:         4       0       0       0       0       0       0
  7917 ;;      Locals:         6       0       0       0       0       0       0
  7918 ;;      Temps:          4       0       0       0       0       0       0
  7919 ;;      Totals:        14       0       0       0       0       0       0
  7920 ;;Total ram usage:       14 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    2
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_get_temp
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text38
  7931  002992                     __ptext38:
  7932                           	opt callstack 0
  7933  002992                     ___xxtofl:
  7934                           	opt callstack 0
  7935  002992  FFFF               	dw	65535	; assembler added errata NOP
  7936                           
  7937                           ;incstack = 0
  7938                           ;___xxtofl@sign stored from wreg
  7939  002994  6E09               	movwf	___xxtofl@sign,c
  7940  002996  5009               	movf	___xxtofl@sign,w,c
  7941  002998  A4D8               	btfss	status,2,c
  7942  00299A  AE04               	btfss	___xxtofl@val+3,7,c
  7943  00299C  D01A               	goto	l1219
  7944  00299E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7945  0029A2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7946  0029A6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7947  0029AA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7948  0029AE  1E05               	comf	??___xxtofl,f,c
  7949  0029B0  1E06               	comf	??___xxtofl+1,f,c
  7950  0029B2  1E07               	comf	??___xxtofl+2,f,c
  7951  0029B4  1E08               	comf	??___xxtofl+3,f,c
  7952  0029B6  2A05               	incf	??___xxtofl,f,c
  7953  0029B8  0E00               	movlw	0
  7954  0029BA  2206               	addwfc	??___xxtofl+1,f,c
  7955  0029BC  2207               	addwfc	??___xxtofl+2,f,c
  7956  0029BE  2208               	addwfc	??___xxtofl+3,f,c
  7957  0029C0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7958  0029C4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7959  0029C8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7960  0029CC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7961  0029D0  D009               	goto	l4560
  7962  0029D2                     l1219:
  7963  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  7964  0029D4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7965  0029D8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7966  0029DC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7967  0029E0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7968  0029E4                     l4560:
  7969  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  7970  0029E6  5001               	movf	___xxtofl@val,w,c
  7971  0029E8  1002               	iorwf	___xxtofl@val+1,w,c
  7972  0029EA  1003               	iorwf	___xxtofl@val+2,w,c
  7973  0029EC  1004               	iorwf	___xxtofl@val+3,w,c
  7974  0029EE  A4D8               	btfss	status,2,c
  7975  0029F0  D009               	goto	l4566
  7976  0029F2  0E00               	movlw	0
  7977  0029F4  6E01               	movwf	?___xxtofl,c
  7978  0029F6  0E00               	movlw	0
  7979  0029F8  6E02               	movwf	?___xxtofl+1,c
  7980  0029FA  0E00               	movlw	0
  7981  0029FC  6E03               	movwf	?___xxtofl+2,c
  7982  0029FE  0E00               	movlw	0
  7983  002A00  6E04               	movwf	?___xxtofl+3,c
  7984  002A02  D072               	goto	l1222
  7985  002A04                     l4566:
  7986  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7987  002A06  0E96               	movlw	150
  7988  002A08  6E0A               	movwf	___xxtofl@exp,c
  7989  002A0A  D007               	goto	l4570
  7990  002A0C                     l4568:
  7991  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  7992  002A0E  2A0A               	incf	___xxtofl@exp,f,c
  7993  002A10  90D8               	bcf	status,0,c
  7994  002A12  320E               	rrcf	___xxtofl@arg+3,f,c
  7995  002A14  320D               	rrcf	___xxtofl@arg+2,f,c
  7996  002A16  320C               	rrcf	___xxtofl@arg+1,f,c
  7997  002A18  320B               	rrcf	___xxtofl@arg,f,c
  7998  002A1A                     l4570:
  7999  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  8000  002A1C  0E00               	movlw	0
  8001  002A1E  140B               	andwf	___xxtofl@arg,w,c
  8002  002A20  6E05               	movwf	??___xxtofl& (0+255),c
  8003  002A22  0E00               	movlw	0
  8004  002A24  140C               	andwf	___xxtofl@arg+1,w,c
  8005  002A26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8006  002A28  0E00               	movlw	0
  8007  002A2A  140D               	andwf	___xxtofl@arg+2,w,c
  8008  002A2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8009  002A2E  0EFE               	movlw	254
  8010  002A30  140E               	andwf	___xxtofl@arg+3,w,c
  8011  002A32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8012  002A34  5005               	movf	??___xxtofl,w,c
  8013  002A36  1006               	iorwf	??___xxtofl+1,w,c
  8014  002A38  1007               	iorwf	??___xxtofl+2,w,c
  8015  002A3A  1008               	iorwf	??___xxtofl+3,w,c
  8016  002A3C  B4D8               	btfsc	status,2,c
  8017  002A3E  D00E               	goto	l1226
  8018  002A40  D7E5               	goto	l4568
  8019  002A42                     l4572:
  8020  002A42  FFFF               	dw	65535	; assembler added errata NOP
  8021  002A44  2A0A               	incf	___xxtofl@exp,f,c
  8022  002A46  0E01               	movlw	1
  8023  002A48  260B               	addwf	___xxtofl@arg,f,c
  8024  002A4A  0E00               	movlw	0
  8025  002A4C  220C               	addwfc	___xxtofl@arg+1,f,c
  8026  002A4E  220D               	addwfc	___xxtofl@arg+2,f,c
  8027  002A50  220E               	addwfc	___xxtofl@arg+3,f,c
  8028  002A52  90D8               	bcf	status,0,c
  8029  002A54  320E               	rrcf	___xxtofl@arg+3,f,c
  8030  002A56  320D               	rrcf	___xxtofl@arg+2,f,c
  8031  002A58  320C               	rrcf	___xxtofl@arg+1,f,c
  8032  002A5A  320B               	rrcf	___xxtofl@arg,f,c
  8033  002A5C                     l1226:
  8034  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  8035  002A5E  0E00               	movlw	0
  8036  002A60  140B               	andwf	___xxtofl@arg,w,c
  8037  002A62  6E05               	movwf	??___xxtofl& (0+255),c
  8038  002A64  0E00               	movlw	0
  8039  002A66  140C               	andwf	___xxtofl@arg+1,w,c
  8040  002A68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8041  002A6A  0E00               	movlw	0
  8042  002A6C  140D               	andwf	___xxtofl@arg+2,w,c
  8043  002A6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8044  002A70  0EFF               	movlw	255
  8045  002A72  140E               	andwf	___xxtofl@arg+3,w,c
  8046  002A74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8047  002A76  5005               	movf	??___xxtofl,w,c
  8048  002A78  1006               	iorwf	??___xxtofl+1,w,c
  8049  002A7A  1007               	iorwf	??___xxtofl+2,w,c
  8050  002A7C  1008               	iorwf	??___xxtofl+3,w,c
  8051  002A7E  B4D8               	btfsc	status,2,c
  8052  002A80  D008               	goto	l4580
  8053  002A82  D7DF               	goto	l4572
  8054  002A84                     l4578:
  8055  002A84  FFFF               	dw	65535	; assembler added errata NOP
  8056  002A86  060A               	decf	___xxtofl@exp,f,c
  8057  002A88  90D8               	bcf	status,0,c
  8058  002A8A  360B               	rlcf	___xxtofl@arg,f,c
  8059  002A8C  360C               	rlcf	___xxtofl@arg+1,f,c
  8060  002A8E  360D               	rlcf	___xxtofl@arg+2,f,c
  8061  002A90  360E               	rlcf	___xxtofl@arg+3,f,c
  8062  002A92                     l4580:
  8063  002A92  FFFF               	dw	65535	; assembler added errata NOP
  8064  002A94  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8065  002A96  D003               	goto	u5060
  8066  002A98  0E02               	movlw	2
  8067  002A9A  600A               	cpfslt	___xxtofl@exp,c
  8068  002A9C  D7F3               	goto	l4578
  8069  002A9E                     u5060:
  8070  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  8071  002AA0  A00A               	btfss	___xxtofl@exp,0,c
  8072  002AA2  9E0D               	bcf	___xxtofl@arg+2,7,c
  8073  002AA4  90D8               	bcf	status,0,c
  8074  002AA6  320A               	rrcf	___xxtofl@exp,f,c
  8075  002AA8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8076  002AAC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8077  002AAE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8078  002AB0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8079  002AB2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8080  002AB6  6A07               	clrf	??___xxtofl+2,c
  8081  002AB8  6A06               	clrf	??___xxtofl+1,c
  8082  002ABA  6A05               	clrf	??___xxtofl,c
  8083  002ABC  5005               	movf	??___xxtofl,w,c
  8084  002ABE  120B               	iorwf	___xxtofl@arg,f,c
  8085  002AC0  5006               	movf	??___xxtofl+1,w,c
  8086  002AC2  120C               	iorwf	___xxtofl@arg+1,f,c
  8087  002AC4  5007               	movf	??___xxtofl+2,w,c
  8088  002AC6  120D               	iorwf	___xxtofl@arg+2,f,c
  8089  002AC8  5008               	movf	??___xxtofl+3,w,c
  8090  002ACA  120E               	iorwf	___xxtofl@arg+3,f,c
  8091  002ACC  5009               	movf	___xxtofl@sign,w,c
  8092  002ACE  A4D8               	btfss	status,2,c
  8093  002AD0  AE04               	btfss	___xxtofl@val+3,7,c
  8094  002AD2  D001               	goto	l4596
  8095  002AD4  8E0E               	bsf	___xxtofl@arg+3,7,c
  8096  002AD6                     l4596:
  8097  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  8098  002AD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8099  002ADC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8100  002AE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8101  002AE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8102  002AE8                     l1222:
  8103  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  8104  002AEA  0012               	return		;funcret
  8105  002AEC  FFFF               	dw	65535	; errata NOP
  8106  002AEE                     __end_of___xxtofl:
  8107                           	opt callstack 0
  8108                           
  8109 ;; *************** function ___flsub *****************
  8110 ;; Defined at:
  8111 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  b               4   39[COMRAM] unsigned char 
  8114 ;;  a               4   43[COMRAM] unsigned char 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  4   39[COMRAM] unsigned char 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8126 ;;      Params:         8       0       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0
  8129 ;;      Totals:         8       0       0       0       0       0       0
  8130 ;;Total ram usage:        8 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    3
  8133 ;; This function calls:
  8134 ;;		___fladd
  8135 ;; This function is called by:
  8136 ;;		_get_temp
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text39
  8141  003546                     __ptext39:
  8142                           	opt callstack 0
  8143  003546                     ___flsub:
  8144                           	opt callstack 0
  8145  003546  FFFF               	dw	65535	; assembler added errata NOP
  8146                           
  8147                           ;incstack = 0
  8148  003548  0E00               	movlw	0
  8149  00354A  1A2C               	xorwf	___flsub@a,f,c
  8150  00354C  0E00               	movlw	0
  8151  00354E  1A2D               	xorwf	___flsub@a+1,f,c
  8152  003550  0E00               	movlw	0
  8153  003552  1A2E               	xorwf	___flsub@a+2,f,c
  8154  003554  0E80               	movlw	128
  8155  003556  1A2F               	xorwf	___flsub@a+3,f,c
  8156  003558  C028  F001         	movff	___flsub@b,___fladd@b
  8157  00355C  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8158  003560  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8159  003564  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8160  003568  C02C  F005         	movff	___flsub@a,___fladd@a
  8161  00356C  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8162  003570  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8163  003574  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8164  003578  ECB7  F00D         	call	___fladd	;wreg free
  8165  00357C  C001  F028         	movff	?___fladd,?___flsub
  8166  003580  C002  F029         	movff	?___fladd+1,?___flsub+1
  8167  003584  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8168  003588  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8169  00358C  0012               	return		;funcret
  8170  00358E  FFFF               	dw	65535	; errata NOP
  8171  003590                     __end_of___flsub:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function ___fladd *****************
  8175 ;; Defined at:
  8176 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  b               4    0[COMRAM] unsigned char 
  8179 ;;  a               4    4[COMRAM] unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  grs             1   15[COMRAM] unsigned char 
  8182 ;;  bexp            1   14[COMRAM] unsigned char 
  8183 ;;  aexp            1   13[COMRAM] unsigned char 
  8184 ;;  signs           1   12[COMRAM] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  4    0[COMRAM] unsigned char 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8194 ;;      Params:         8       0       0       0       0       0       0
  8195 ;;      Locals:         4       0       0       0       0       0       0
  8196 ;;      Temps:          4       0       0       0       0       0       0
  8197 ;;      Totals:        16       0       0       0       0       0       0
  8198 ;;Total ram usage:       16 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    2
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		___flsub
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text40
  8209  001B6E                     __ptext40:
  8210                           	opt callstack 0
  8211  001B6E                     ___fladd:
  8212                           	opt callstack 0
  8213  001B6E  FFFF               	dw	65535	; assembler added errata NOP
  8214                           
  8215                           ;incstack = 0
  8216  001B70  5004               	movf	___fladd@b+3,w,c
  8217  001B72  0B80               	andlw	128
  8218  001B74  6E0D               	movwf	___fladd@signs,c
  8219  001B76  5004               	movf	___fladd@b+3,w,c
  8220  001B78  2404               	addwf	___fladd@b+3,w,c
  8221  001B7A  6E0F               	movwf	___fladd@bexp,c
  8222  001B7C  BE03               	btfsc	___fladd@b+2,7,c
  8223  001B7E  800F               	bsf	___fladd@bexp,0,c
  8224  001B80  500F               	movf	___fladd@bexp,w,c
  8225  001B82  B4D8               	btfsc	status,2,c
  8226  001B84  D00E               	goto	l4156
  8227  001B86  280F               	incf	___fladd@bexp,w,c
  8228  001B88  A4D8               	btfss	status,2,c
  8229  001B8A  D008               	goto	l4152
  8230  001B8C  0E00               	movlw	0
  8231  001B8E  6E01               	movwf	___fladd@b,c
  8232  001B90  0E00               	movlw	0
  8233  001B92  6E02               	movwf	___fladd@b+1,c
  8234  001B94  0E00               	movlw	0
  8235  001B96  6E03               	movwf	___fladd@b+2,c
  8236  001B98  0E00               	movlw	0
  8237  001B9A  6E04               	movwf	___fladd@b+3,c
  8238  001B9C                     l4152:
  8239  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  8240  001B9E  8E03               	bsf	___fladd@b+2,7,c
  8241  001BA0  D007               	goto	L21
  8242  001BA2                     l4156:
  8243  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  8244  001BA4  0E00               	movlw	0
  8245  001BA6  6E01               	movwf	___fladd@b,c
  8246  001BA8  0E00               	movlw	0
  8247  001BAA  6E02               	movwf	___fladd@b+1,c
  8248  001BAC  0E00               	movlw	0
  8249  001BAE  6E03               	movwf	___fladd@b+2,c
  8250  001BB0                     L21:
  8251  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  8252  001BB2  0E00               	movlw	0
  8253  001BB4  6E04               	movwf	___fladd@b+3,c
  8254  001BB6  5008               	movf	___fladd@a+3,w,c
  8255  001BB8  0B80               	andlw	128
  8256  001BBA  6E0E               	movwf	___fladd@aexp,c
  8257  001BBC  500D               	movf	___fladd@signs,w,c
  8258  001BBE  180E               	xorwf	___fladd@aexp,w,c
  8259  001BC0  A4D8               	btfss	status,2,c
  8260  001BC2  8C0D               	bsf	___fladd@signs,6,c
  8261  001BC4  5008               	movf	___fladd@a+3,w,c
  8262  001BC6  2408               	addwf	___fladd@a+3,w,c
  8263  001BC8  6E0E               	movwf	___fladd@aexp,c
  8264  001BCA  BE07               	btfsc	___fladd@a+2,7,c
  8265  001BCC  800E               	bsf	___fladd@aexp,0,c
  8266  001BCE  500E               	movf	___fladd@aexp,w,c
  8267  001BD0  B4D8               	btfsc	status,2,c
  8268  001BD2  D00E               	goto	l4180
  8269  001BD4  280E               	incf	___fladd@aexp,w,c
  8270  001BD6  A4D8               	btfss	status,2,c
  8271  001BD8  D008               	goto	l4176
  8272  001BDA  0E00               	movlw	0
  8273  001BDC  6E05               	movwf	___fladd@a,c
  8274  001BDE  0E00               	movlw	0
  8275  001BE0  6E06               	movwf	___fladd@a+1,c
  8276  001BE2  0E00               	movlw	0
  8277  001BE4  6E07               	movwf	___fladd@a+2,c
  8278  001BE6  0E00               	movlw	0
  8279  001BE8  6E08               	movwf	___fladd@a+3,c
  8280  001BEA                     l4176:
  8281  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  8282  001BEC  8E07               	bsf	___fladd@a+2,7,c
  8283  001BEE  D007               	goto	L22
  8284  001BF0                     l4180:
  8285  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  8286  001BF2  0E00               	movlw	0
  8287  001BF4  6E05               	movwf	___fladd@a,c
  8288  001BF6  0E00               	movlw	0
  8289  001BF8  6E06               	movwf	___fladd@a+1,c
  8290  001BFA  0E00               	movlw	0
  8291  001BFC  6E07               	movwf	___fladd@a+2,c
  8292  001BFE                     L22:
  8293  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  8294  001C00  0E00               	movlw	0
  8295  001C02  6E08               	movwf	___fladd@a+3,c
  8296  001C04  500F               	movf	___fladd@bexp,w,c
  8297  001C06  5C0E               	subwf	___fladd@aexp,w,c
  8298  001C08  B0D8               	btfsc	status,0,c
  8299  001C0A  D023               	goto	l4218
  8300  001C0C  AC0D               	btfss	___fladd@signs,6,c
  8301  001C0E  D002               	goto	l4188
  8302  001C10  0E80               	movlw	128
  8303  001C12  1A0D               	xorwf	___fladd@signs,f,c
  8304  001C14                     l4188:
  8305  001C14  FFFF               	dw	65535	; assembler added errata NOP
  8306  001C16  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8307  001C1A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8308  001C1E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8309  001C22  C001  F010         	movff	___fladd@b,___fladd@grs
  8310  001C26  C005  F001         	movff	___fladd@a,___fladd@b
  8311  001C2A  C010  F005         	movff	___fladd@grs,___fladd@a
  8312  001C2E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8313  001C32  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8314  001C36  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8315  001C3A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8316  001C3E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8317  001C42  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8318  001C46  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8319  001C4A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8320  001C4E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8321  001C52                     l4218:
  8322  001C52  FFFF               	dw	65535	; assembler added errata NOP
  8323  001C54  0E00               	movlw	0
  8324  001C56  6E10               	movwf	___fladd@grs,c
  8325  001C58  500F               	movf	___fladd@bexp,w,c
  8326  001C5A  C00E  F009         	movff	___fladd@aexp,??___fladd
  8327  001C5E  6A0A               	clrf	(??___fladd+1)& (0+255),c
  8328  001C60  5E09               	subwf	??___fladd,f,c
  8329  001C62  0E00               	movlw	0
  8330  001C64  5A0A               	subwfb	??___fladd+1,f,c
  8331  001C66  BE0A               	btfsc	??___fladd+1,7,c
  8332  001C68  D031               	goto	l1093
  8333  001C6A  500A               	movf	??___fladd+1,w,c
  8334  001C6C  E104               	bnz	u4420
  8335  001C6E  0E1A               	movlw	26
  8336  001C70  5C09               	subwf	??___fladd,w,c
  8337  001C72  A0D8               	btfss	status,0,c
  8338  001C74  D02B               	goto	l1093
  8339  001C76                     u4420:
  8340  001C76  5001               	movf	___fladd@b,w,c
  8341  001C78  1002               	iorwf	___fladd@b+1,w,c
  8342  001C7A  1003               	iorwf	___fladd@b+2,w,c
  8343  001C7C  1004               	iorwf	___fladd@b+3,w,c
  8344  001C7E  B4D8               	btfsc	status,2,c
  8345  001C80  D002               	goto	u4430
  8346  001C82  0E01               	movlw	1
  8347  001C84  D002               	goto	u4440
  8348  001C86                     u4430:
  8349  001C86  FFFF               	dw	65535	; assembler added errata NOP
  8350  001C88  0E00               	movlw	0
  8351  001C8A                     u4440:
  8352  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  8353  001C8C  6E10               	movwf	___fladd@grs,c
  8354  001C8E  0E00               	movlw	0
  8355  001C90  6E01               	movwf	___fladd@b,c
  8356  001C92  0E00               	movlw	0
  8357  001C94  6E02               	movwf	___fladd@b+1,c
  8358  001C96  0E00               	movlw	0
  8359  001C98  6E03               	movwf	___fladd@b+2,c
  8360  001C9A  0E00               	movlw	0
  8361  001C9C  6E04               	movwf	___fladd@b+3,c
  8362  001C9E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8363  001CA2  D019               	goto	u4470
  8364  001CA4                     l1094:
  8365  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  8366  001CA6  A010               	btfss	___fladd@grs,0,c
  8367  001CA8  D005               	goto	l4230
  8368  001CAA  90D8               	bcf	status,0,c
  8369  001CAC  3010               	rrcf	___fladd@grs,w,c
  8370  001CAE  0901               	iorlw	1
  8371  001CB0  6E10               	movwf	___fladd@grs,c
  8372  001CB2  D003               	goto	l4232
  8373  001CB4                     l4230:
  8374  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  8375  001CB6  90D8               	bcf	status,0,c
  8376  001CB8  3210               	rrcf	___fladd@grs,f,c
  8377  001CBA                     l4232:
  8378  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  8379  001CBC  B001               	btfsc	___fladd@b,0,c
  8380  001CBE  8E10               	bsf	___fladd@grs,7,c
  8381  001CC0  3404               	rlcf	___fladd@b+3,w,c
  8382  001CC2  3204               	rrcf	___fladd@b+3,f,c
  8383  001CC4  3203               	rrcf	___fladd@b+2,f,c
  8384  001CC6  3202               	rrcf	___fladd@b+1,f,c
  8385  001CC8  3201               	rrcf	___fladd@b,f,c
  8386  001CCA  2A0F               	incf	___fladd@bexp,f,c
  8387  001CCC                     l1093:
  8388  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  8389  001CCE  500E               	movf	___fladd@aexp,w,c
  8390  001CD0  5C0F               	subwf	___fladd@bexp,w,c
  8391  001CD2  A0D8               	btfss	status,0,c
  8392  001CD4  D7E7               	goto	l1094
  8393  001CD6                     u4470:
  8394  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  8395  001CD8  BC0D               	btfsc	___fladd@signs,6,c
  8396  001CDA  D021               	goto	l4264
  8397  001CDC  500F               	movf	___fladd@bexp,w,c
  8398  001CDE  B4D8               	btfsc	status,2,c
  8399  001CE0  D065               	goto	u4560
  8400  001CE2  5005               	movf	___fladd@a,w,c
  8401  001CE4  2601               	addwf	___fladd@b,f,c
  8402  001CE6  5006               	movf	___fladd@a+1,w,c
  8403  001CE8  2202               	addwfc	___fladd@b+1,f,c
  8404  001CEA  5007               	movf	___fladd@a+2,w,c
  8405  001CEC  2203               	addwfc	___fladd@b+2,f,c
  8406  001CEE  5008               	movf	___fladd@a+3,w,c
  8407  001CF0  2204               	addwfc	___fladd@b+3,f,c
  8408  001CF2  A004               	btfss	___fladd@b+3,0,c
  8409  001CF4  D07B               	goto	u4600
  8410  001CF6  A010               	btfss	___fladd@grs,0,c
  8411  001CF8  D005               	goto	l4254
  8412  001CFA  90D8               	bcf	status,0,c
  8413  001CFC  3010               	rrcf	___fladd@grs,w,c
  8414  001CFE  0901               	iorlw	1
  8415  001D00  6E10               	movwf	___fladd@grs,c
  8416  001D02  D003               	goto	l4256
  8417  001D04                     l4254:
  8418  001D04  FFFF               	dw	65535	; assembler added errata NOP
  8419  001D06  90D8               	bcf	status,0,c
  8420  001D08  3210               	rrcf	___fladd@grs,f,c
  8421  001D0A                     l4256:
  8422  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  8423  001D0C  B001               	btfsc	___fladd@b,0,c
  8424  001D0E  8E10               	bsf	___fladd@grs,7,c
  8425  001D10  3404               	rlcf	___fladd@b+3,w,c
  8426  001D12  3204               	rrcf	___fladd@b+3,f,c
  8427  001D14  3203               	rrcf	___fladd@b+2,f,c
  8428  001D16  3202               	rrcf	___fladd@b+1,f,c
  8429  001D18  3201               	rrcf	___fladd@b,f,c
  8430  001D1A  2A0F               	incf	___fladd@bexp,f,c
  8431  001D1C  D067               	goto	u4600
  8432  001D1E                     l4264:
  8433  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  8434  001D20  5005               	movf	___fladd@a,w,c
  8435  001D22  5C01               	subwf	___fladd@b,w,c
  8436  001D24  5006               	movf	___fladd@a+1,w,c
  8437  001D26  5802               	subwfb	___fladd@b+1,w,c
  8438  001D28  5007               	movf	___fladd@a+2,w,c
  8439  001D2A  5803               	subwfb	___fladd@b+2,w,c
  8440  001D2C  5004               	movf	___fladd@b+3,w,c
  8441  001D2E  0A80               	xorlw	128
  8442  001D30  6E09               	movwf	??___fladd& (0+255),c
  8443  001D32  5008               	movf	___fladd@a+3,w,c
  8444  001D34  0A80               	xorlw	128
  8445  001D36  5809               	subwfb	??___fladd& (0+255),w,c
  8446  001D38  B0D8               	btfsc	status,0,c
  8447  001D3A  D025               	goto	l4274
  8448  001D3C  5001               	movf	___fladd@b,w,c
  8449  001D3E  5C05               	subwf	___fladd@a,w,c
  8450  001D40  6E09               	movwf	??___fladd& (0+255),c
  8451  001D42  5002               	movf	___fladd@b+1,w,c
  8452  001D44  5806               	subwfb	___fladd@a+1,w,c
  8453  001D46  6E0A               	movwf	(??___fladd+1)& (0+255),c
  8454  001D48  5003               	movf	___fladd@b+2,w,c
  8455  001D4A  5807               	subwfb	___fladd@a+2,w,c
  8456  001D4C  6E0B               	movwf	(??___fladd+2)& (0+255),c
  8457  001D4E  5004               	movf	___fladd@b+3,w,c
  8458  001D50  5808               	subwfb	___fladd@a+3,w,c
  8459  001D52  6E0C               	movwf	(??___fladd+3)& (0+255),c
  8460  001D54  0EFF               	movlw	255
  8461  001D56  2409               	addwf	??___fladd,w,c
  8462  001D58  6E01               	movwf	___fladd@b,c
  8463  001D5A  0EFF               	movlw	255
  8464  001D5C  200A               	addwfc	??___fladd+1,w,c
  8465  001D5E  6E02               	movwf	___fladd@b+1,c
  8466  001D60  0EFF               	movlw	255
  8467  001D62  200B               	addwfc	??___fladd+2,w,c
  8468  001D64  6E03               	movwf	___fladd@b+2,c
  8469  001D66  0EFF               	movlw	255
  8470  001D68  200C               	addwfc	??___fladd+3,w,c
  8471  001D6A  6E04               	movwf	___fladd@b+3,c
  8472  001D6C  0E80               	movlw	128
  8473  001D6E  1A0D               	xorwf	___fladd@signs,f,c
  8474  001D70  6C10               	negf	___fladd@grs,c
  8475  001D72  5010               	movf	___fladd@grs,w,c
  8476  001D74  A4D8               	btfss	status,2,c
  8477  001D76  D010               	goto	l1109
  8478  001D78  0E01               	movlw	1
  8479  001D7A  2601               	addwf	___fladd@b,f,c
  8480  001D7C  0E00               	movlw	0
  8481  001D7E  2202               	addwfc	___fladd@b+1,f,c
  8482  001D80  2203               	addwfc	___fladd@b+2,f,c
  8483  001D82  2204               	addwfc	___fladd@b+3,f,c
  8484  001D84  D009               	goto	l1109
  8485  001D86                     l4274:
  8486  001D86  FFFF               	dw	65535	; assembler added errata NOP
  8487  001D88  5005               	movf	___fladd@a,w,c
  8488  001D8A  5E01               	subwf	___fladd@b,f,c
  8489  001D8C  5006               	movf	___fladd@a+1,w,c
  8490  001D8E  5A02               	subwfb	___fladd@b+1,f,c
  8491  001D90  5007               	movf	___fladd@a+2,w,c
  8492  001D92  5A03               	subwfb	___fladd@b+2,f,c
  8493  001D94  5008               	movf	___fladd@a+3,w,c
  8494  001D96  5A04               	subwfb	___fladd@b+3,f,c
  8495  001D98                     l1109:
  8496  001D98  FFFF               	dw	65535	; assembler added errata NOP
  8497  001D9A  5001               	movf	___fladd@b,w,c
  8498  001D9C  1002               	iorwf	___fladd@b+1,w,c
  8499  001D9E  1003               	iorwf	___fladd@b+2,w,c
  8500  001DA0  1004               	iorwf	___fladd@b+3,w,c
  8501  001DA2  A4D8               	btfss	status,2,c
  8502  001DA4  D020               	goto	l4298
  8503  001DA6  5010               	movf	___fladd@grs,w,c
  8504  001DA8  A4D8               	btfss	status,2,c
  8505  001DAA  D01D               	goto	l4298
  8506  001DAC                     u4560:
  8507  001DAC  FFFF               	dw	65535	; assembler added errata NOP
  8508  001DAE  0E00               	movlw	0
  8509  001DB0  6E01               	movwf	?___fladd,c
  8510  001DB2  0E00               	movlw	0
  8511  001DB4  6E02               	movwf	?___fladd+1,c
  8512  001DB6  0E00               	movlw	0
  8513  001DB8  6E03               	movwf	?___fladd+2,c
  8514  001DBA  0E00               	movlw	0
  8515  001DBC  6E04               	movwf	?___fladd+3,c
  8516  001DBE  D076               	goto	l1101
  8517  001DC0                     l4282:
  8518  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  8519  001DC2  90D8               	bcf	status,0,c
  8520  001DC4  3601               	rlcf	___fladd@b,f,c
  8521  001DC6  3602               	rlcf	___fladd@b+1,f,c
  8522  001DC8  3603               	rlcf	___fladd@b+2,f,c
  8523  001DCA  3604               	rlcf	___fladd@b+3,f,c
  8524  001DCC  BE10               	btfsc	___fladd@grs,7,c
  8525  001DCE  8001               	bsf	___fladd@b,0,c
  8526  001DD0  A010               	btfss	___fladd@grs,0,c
  8527  001DD2  D002               	goto	l4292
  8528  001DD4  80D8               	bsf	status,0,c
  8529  001DD6  D002               	goto	L23
  8530  001DD8                     l4292:
  8531  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  8532  001DDA  90D8               	bcf	status,0,c
  8533  001DDC                     L23:
  8534  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  8535  001DDE  3610               	rlcf	___fladd@grs,f,c
  8536  001DE0  500F               	movf	___fladd@bexp,w,c
  8537  001DE2  A4D8               	btfss	status,2,c
  8538  001DE4  060F               	decf	___fladd@bexp,f,c
  8539  001DE6                     l4298:
  8540  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8541  001DE8  AE03               	btfss	___fladd@b+2,7,c
  8542  001DEA  D7EA               	goto	l4282
  8543  001DEC                     u4600:
  8544  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  8545  001DEE  0E00               	movlw	0
  8546  001DF0  6E0E               	movwf	___fladd@aexp,c
  8547  001DF2  AE10               	btfss	___fladd@grs,7,c
  8548  001DF4  D00D               	goto	l1118
  8549  001DF6  C010  F009         	movff	___fladd@grs,??___fladd
  8550  001DFA  0E7F               	movlw	127
  8551  001DFC  1609               	andwf	??___fladd,f,c
  8552  001DFE  B4D8               	btfsc	status,2,c
  8553  001E00  D004               	goto	l1119
  8554  001E02                     u4620:
  8555  001E02  FFFF               	dw	65535	; assembler added errata NOP
  8556  001E04  0E01               	movlw	1
  8557  001E06  6E0E               	movwf	___fladd@aexp,c
  8558  001E08  D003               	goto	l1118
  8559  001E0A                     l1119:
  8560  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  8561  001E0C  B001               	btfsc	___fladd@b,0,c
  8562  001E0E  D7F9               	goto	u4620
  8563  001E10                     l1118:
  8564  001E10  FFFF               	dw	65535	; assembler added errata NOP
  8565  001E12  500E               	movf	___fladd@aexp,w,c
  8566  001E14  B4D8               	btfsc	status,2,c
  8567  001E16  D020               	goto	l4318
  8568  001E18  0E01               	movlw	1
  8569  001E1A  2601               	addwf	___fladd@b,f,c
  8570  001E1C  0E00               	movlw	0
  8571  001E1E  2202               	addwfc	___fladd@b+1,f,c
  8572  001E20  2203               	addwfc	___fladd@b+2,f,c
  8573  001E22  2204               	addwfc	___fladd@b+3,f,c
  8574  001E24  A004               	btfss	___fladd@b+3,0,c
  8575  001E26  D018               	goto	l4318
  8576  001E28  C001  F009         	movff	___fladd@b,??___fladd
  8577  001E2C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8578  001E30  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8579  001E34  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8580  001E38  340C               	rlcf	??___fladd+3,w,c
  8581  001E3A  320C               	rrcf	??___fladd+3,f,c
  8582  001E3C  320B               	rrcf	??___fladd+2,f,c
  8583  001E3E  320A               	rrcf	??___fladd+1,f,c
  8584  001E40  3209               	rrcf	??___fladd,f,c
  8585  001E42  C009  F001         	movff	??___fladd,___fladd@b
  8586  001E46  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8587  001E4A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8588  001E4E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8589  001E52  280F               	incf	___fladd@bexp,w,c
  8590  001E54  A4D8               	btfss	status,2,c
  8591  001E56  2A0F               	incf	___fladd@bexp,f,c
  8592  001E58                     l4318:
  8593  001E58  FFFF               	dw	65535	; assembler added errata NOP
  8594  001E5A  280F               	incf	___fladd@bexp,w,c
  8595  001E5C  B4D8               	btfsc	status,2,c
  8596  001E5E  D003               	goto	u4680
  8597  001E60  500F               	movf	___fladd@bexp,w,c
  8598  001E62  A4D8               	btfss	status,2,c
  8599  001E64  D00E               	goto	l4326
  8600  001E66                     u4680:
  8601  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8602  001E68  0E00               	movlw	0
  8603  001E6A  6E01               	movwf	___fladd@b,c
  8604  001E6C  0E00               	movlw	0
  8605  001E6E  6E02               	movwf	___fladd@b+1,c
  8606  001E70  0E00               	movlw	0
  8607  001E72  6E03               	movwf	___fladd@b+2,c
  8608  001E74  0E00               	movlw	0
  8609  001E76  6E04               	movwf	___fladd@b+3,c
  8610  001E78  500F               	movf	___fladd@bexp,w,c
  8611  001E7A  A4D8               	btfss	status,2,c
  8612  001E7C  D002               	goto	l4326
  8613  001E7E  0E00               	movlw	0
  8614  001E80  6E0D               	movwf	___fladd@signs,c
  8615  001E82                     l4326:
  8616  001E82  FFFF               	dw	65535	; assembler added errata NOP
  8617  001E84  A00F               	btfss	___fladd@bexp,0,c
  8618  001E86  D002               	goto	l4330
  8619  001E88  8E03               	bsf	___fladd@b+2,7,c
  8620  001E8A  D002               	goto	l4332
  8621  001E8C                     l4330:
  8622  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  8623  001E8E  9E03               	bcf	___fladd@b+2,7,c
  8624  001E90                     l4332:
  8625  001E90  FFFF               	dw	65535	; assembler added errata NOP
  8626  001E92  90D8               	bcf	status,0,c
  8627  001E94  300F               	rrcf	___fladd@bexp,w,c
  8628  001E96  6E04               	movwf	___fladd@b+3,c
  8629  001E98  BE0D               	btfsc	___fladd@signs,7,c
  8630  001E9A  8E04               	bsf	___fladd@b+3,7,c
  8631  001E9C  C001  F001         	movff	___fladd@b,?___fladd
  8632  001EA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8633  001EA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8634  001EA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8635  001EAC                     l1101:
  8636  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  8637  001EAE  0012               	return		;funcret
  8638  001EB0  FFFF               	dw	65535	; errata NOP
  8639  001EB2                     __end_of___fladd:
  8640                           	opt callstack 0
  8641                           
  8642 ;; *************** function ___flmul *****************
  8643 ;; Defined at:
  8644 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  b               4   14[COMRAM] unsigned char 
  8647 ;;  a               4   18[COMRAM] unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  prod            4   33[COMRAM] struct .
  8650 ;;  grs             4   27[COMRAM] unsigned long 
  8651 ;;  temp            2   37[COMRAM] struct .
  8652 ;;  bexp            1   32[COMRAM] unsigned char 
  8653 ;;  aexp            1   31[COMRAM] unsigned char 
  8654 ;;  sign            1   26[COMRAM] unsigned char 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  4   14[COMRAM] unsigned char 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, prodl, prodh
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8664 ;;      Params:         8       0       0       0       0       0       0
  8665 ;;      Locals:        13       0       0       0       0       0       0
  8666 ;;      Temps:          4       0       0       0       0       0       0
  8667 ;;      Totals:        25       0       0       0       0       0       0
  8668 ;;Total ram usage:       25 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    2
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_get_temp
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text41
  8679  0017EC                     __ptext41:
  8680                           	opt callstack 0
  8681  0017EC                     ___flmul:
  8682                           	opt callstack 0
  8683  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  8684                           
  8685                           ;incstack = 0
  8686  0017EE  5012               	movf	___flmul@b+3,w,c
  8687  0017F0  0B80               	andlw	128
  8688  0017F2  6E1B               	movwf	___flmul@sign,c
  8689  0017F4  5012               	movf	___flmul@b+3,w,c
  8690  0017F6  2412               	addwf	___flmul@b+3,w,c
  8691  0017F8  6E21               	movwf	___flmul@bexp,c
  8692  0017FA  BE11               	btfsc	___flmul@b+2,7,c
  8693  0017FC  8021               	bsf	___flmul@bexp,0,c
  8694  0017FE  5021               	movf	___flmul@bexp,w,c
  8695  001800  B4D8               	btfsc	status,2,c
  8696  001802  D00E               	goto	l4432
  8697  001804  2821               	incf	___flmul@bexp,w,c
  8698  001806  A4D8               	btfss	status,2,c
  8699  001808  D008               	goto	l4430
  8700  00180A  0E00               	movlw	0
  8701  00180C  6E0F               	movwf	___flmul@b,c
  8702  00180E  0E00               	movlw	0
  8703  001810  6E10               	movwf	___flmul@b+1,c
  8704  001812  0E00               	movlw	0
  8705  001814  6E11               	movwf	___flmul@b+2,c
  8706  001816  0E00               	movlw	0
  8707  001818  6E12               	movwf	___flmul@b+3,c
  8708  00181A                     l4430:
  8709  00181A  FFFF               	dw	65535	; assembler added errata NOP
  8710  00181C  8E11               	bsf	___flmul@b+2,7,c
  8711  00181E  D009               	goto	l4434
  8712  001820                     l4432:
  8713  001820  FFFF               	dw	65535	; assembler added errata NOP
  8714  001822  0E00               	movlw	0
  8715  001824  6E0F               	movwf	___flmul@b,c
  8716  001826  0E00               	movlw	0
  8717  001828  6E10               	movwf	___flmul@b+1,c
  8718  00182A  0E00               	movlw	0
  8719  00182C  6E11               	movwf	___flmul@b+2,c
  8720  00182E  0E00               	movlw	0
  8721  001830  6E12               	movwf	___flmul@b+3,c
  8722  001832                     l4434:
  8723  001832  FFFF               	dw	65535	; assembler added errata NOP
  8724  001834  5016               	movf	___flmul@a+3,w,c
  8725  001836  0B80               	andlw	128
  8726  001838  1A1B               	xorwf	___flmul@sign,f,c
  8727  00183A  5016               	movf	___flmul@a+3,w,c
  8728  00183C  2416               	addwf	___flmul@a+3,w,c
  8729  00183E  6E20               	movwf	___flmul@aexp,c
  8730  001840  BE15               	btfsc	___flmul@a+2,7,c
  8731  001842  8020               	bsf	___flmul@aexp,0,c
  8732  001844  5020               	movf	___flmul@aexp,w,c
  8733  001846  B4D8               	btfsc	status,2,c
  8734  001848  D00E               	goto	l4450
  8735  00184A  2820               	incf	___flmul@aexp,w,c
  8736  00184C  A4D8               	btfss	status,2,c
  8737  00184E  D008               	goto	l4448
  8738  001850  0E00               	movlw	0
  8739  001852  6E13               	movwf	___flmul@a,c
  8740  001854  0E00               	movlw	0
  8741  001856  6E14               	movwf	___flmul@a+1,c
  8742  001858  0E00               	movlw	0
  8743  00185A  6E15               	movwf	___flmul@a+2,c
  8744  00185C  0E00               	movlw	0
  8745  00185E  6E16               	movwf	___flmul@a+3,c
  8746  001860                     l4448:
  8747  001860  FFFF               	dw	65535	; assembler added errata NOP
  8748  001862  8E15               	bsf	___flmul@a+2,7,c
  8749  001864  D009               	goto	l1178
  8750  001866                     l4450:
  8751  001866  FFFF               	dw	65535	; assembler added errata NOP
  8752  001868  0E00               	movlw	0
  8753  00186A  6E13               	movwf	___flmul@a,c
  8754  00186C  0E00               	movlw	0
  8755  00186E  6E14               	movwf	___flmul@a+1,c
  8756  001870  0E00               	movlw	0
  8757  001872  6E15               	movwf	___flmul@a+2,c
  8758  001874  0E00               	movlw	0
  8759  001876  6E16               	movwf	___flmul@a+3,c
  8760  001878                     l1178:
  8761  001878  FFFF               	dw	65535	; assembler added errata NOP
  8762  00187A  5020               	movf	___flmul@aexp,w,c
  8763  00187C  B4D8               	btfsc	status,2,c
  8764  00187E  D003               	goto	u4880
  8765  001880  5021               	movf	___flmul@bexp,w,c
  8766  001882  A4D8               	btfss	status,2,c
  8767  001884  D00A               	goto	l4458
  8768  001886                     u4880:
  8769  001886  FFFF               	dw	65535	; assembler added errata NOP
  8770  001888  0E00               	movlw	0
  8771  00188A  6E0F               	movwf	?___flmul,c
  8772  00188C  0E00               	movlw	0
  8773  00188E  6E10               	movwf	?___flmul+1,c
  8774  001890  0E00               	movlw	0
  8775  001892  6E11               	movwf	?___flmul+2,c
  8776  001894  0E00               	movlw	0
  8777  001896  6E12               	movwf	?___flmul+3,c
  8778  001898  D167               	goto	l1182
  8779  00189A                     l4458:
  8780  00189A  FFFF               	dw	65535	; assembler added errata NOP
  8781  00189C  5015               	movf	___flmul@a+2,w,c
  8782  00189E  020F               	mulwf	___flmul@b,c
  8783  0018A0  CFF3 F026          	movff	prodl,___flmul@temp
  8784  0018A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8785  0018A8  5026               	movf	___flmul@temp,w,c
  8786  0018AA  6E1C               	movwf	___flmul@grs,c
  8787  0018AC  6A1D               	clrf	___flmul@grs+1,c
  8788  0018AE  6A1E               	clrf	___flmul@grs+2,c
  8789  0018B0  6A1F               	clrf	___flmul@grs+3,c
  8790  0018B2  5027               	movf	___flmul@temp+1,w,c
  8791  0018B4  6E22               	movwf	___flmul@prod,c
  8792  0018B6  6A23               	clrf	___flmul@prod+1,c
  8793  0018B8  6A24               	clrf	___flmul@prod+2,c
  8794  0018BA  6A25               	clrf	___flmul@prod+3,c
  8795  0018BC  5014               	movf	___flmul@a+1,w,c
  8796  0018BE  0210               	mulwf	___flmul@b+1,c
  8797  0018C0  CFF3 F026          	movff	prodl,___flmul@temp
  8798  0018C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8799  0018C8  5026               	movf	___flmul@temp,w,c
  8800  0018CA  261C               	addwf	___flmul@grs,f,c
  8801  0018CC  0E00               	movlw	0
  8802  0018CE  221D               	addwfc	___flmul@grs+1,f,c
  8803  0018D0  221E               	addwfc	___flmul@grs+2,f,c
  8804  0018D2  221F               	addwfc	___flmul@grs+3,f,c
  8805  0018D4  5027               	movf	___flmul@temp+1,w,c
  8806  0018D6  2622               	addwf	___flmul@prod,f,c
  8807  0018D8  0E00               	movlw	0
  8808  0018DA  2223               	addwfc	___flmul@prod+1,f,c
  8809  0018DC  2224               	addwfc	___flmul@prod+2,f,c
  8810  0018DE  2225               	addwfc	___flmul@prod+3,f,c
  8811  0018E0  5013               	movf	___flmul@a,w,c
  8812  0018E2  0211               	mulwf	___flmul@b+2,c
  8813  0018E4  CFF3 F026          	movff	prodl,___flmul@temp
  8814  0018E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8815  0018EC  5026               	movf	___flmul@temp,w,c
  8816  0018EE  261C               	addwf	___flmul@grs,f,c
  8817  0018F0  0E00               	movlw	0
  8818  0018F2  221D               	addwfc	___flmul@grs+1,f,c
  8819  0018F4  221E               	addwfc	___flmul@grs+2,f,c
  8820  0018F6  221F               	addwfc	___flmul@grs+3,f,c
  8821  0018F8  5027               	movf	___flmul@temp+1,w,c
  8822  0018FA  2622               	addwf	___flmul@prod,f,c
  8823  0018FC  0E00               	movlw	0
  8824  0018FE  2223               	addwfc	___flmul@prod+1,f,c
  8825  001900  2224               	addwfc	___flmul@prod+2,f,c
  8826  001902  2225               	addwfc	___flmul@prod+3,f,c
  8827  001904  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8828  001908  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8829  00190C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8830  001910  6A1C               	clrf	___flmul@grs,c
  8831  001912  5013               	movf	___flmul@a,w,c
  8832  001914  0210               	mulwf	___flmul@b+1,c
  8833  001916  CFF3 F026          	movff	prodl,___flmul@temp
  8834  00191A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8835  00191E  5026               	movf	___flmul@temp,w,c
  8836  001920  261C               	addwf	___flmul@grs,f,c
  8837  001922  5027               	movf	___flmul@temp+1,w,c
  8838  001924  221D               	addwfc	___flmul@grs+1,f,c
  8839  001926  0E00               	movlw	0
  8840  001928  221E               	addwfc	___flmul@grs+2,f,c
  8841  00192A  0E00               	movlw	0
  8842  00192C  221F               	addwfc	___flmul@grs+3,f,c
  8843  00192E  5014               	movf	___flmul@a+1,w,c
  8844  001930  020F               	mulwf	___flmul@b,c
  8845  001932  CFF3 F026          	movff	prodl,___flmul@temp
  8846  001936  CFF4 F027          	movff	prodh,___flmul@temp+1
  8847  00193A  5026               	movf	___flmul@temp,w,c
  8848  00193C  261C               	addwf	___flmul@grs,f,c
  8849  00193E  5027               	movf	___flmul@temp+1,w,c
  8850  001940  221D               	addwfc	___flmul@grs+1,f,c
  8851  001942  0E00               	movlw	0
  8852  001944  221E               	addwfc	___flmul@grs+2,f,c
  8853  001946  0E00               	movlw	0
  8854  001948  221F               	addwfc	___flmul@grs+3,f,c
  8855  00194A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8856  00194E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8857  001952  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8858  001956  6A1C               	clrf	___flmul@grs,c
  8859  001958  5013               	movf	___flmul@a,w,c
  8860  00195A  020F               	mulwf	___flmul@b,c
  8861  00195C  CFF3 F026          	movff	prodl,___flmul@temp
  8862  001960  CFF4 F027          	movff	prodh,___flmul@temp+1
  8863  001964  5026               	movf	___flmul@temp,w,c
  8864  001966  261C               	addwf	___flmul@grs,f,c
  8865  001968  5027               	movf	___flmul@temp+1,w,c
  8866  00196A  221D               	addwfc	___flmul@grs+1,f,c
  8867  00196C  0E00               	movlw	0
  8868  00196E  221E               	addwfc	___flmul@grs+2,f,c
  8869  001970  0E00               	movlw	0
  8870  001972  221F               	addwfc	___flmul@grs+3,f,c
  8871  001974  5015               	movf	___flmul@a+2,w,c
  8872  001976  0210               	mulwf	___flmul@b+1,c
  8873  001978  CFF3 F026          	movff	prodl,___flmul@temp
  8874  00197C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8875  001980  5026               	movf	___flmul@temp,w,c
  8876  001982  2622               	addwf	___flmul@prod,f,c
  8877  001984  5027               	movf	___flmul@temp+1,w,c
  8878  001986  2223               	addwfc	___flmul@prod+1,f,c
  8879  001988  0E00               	movlw	0
  8880  00198A  2224               	addwfc	___flmul@prod+2,f,c
  8881  00198C  0E00               	movlw	0
  8882  00198E  2225               	addwfc	___flmul@prod+3,f,c
  8883  001990  5014               	movf	___flmul@a+1,w,c
  8884  001992  0211               	mulwf	___flmul@b+2,c
  8885  001994  CFF3 F026          	movff	prodl,___flmul@temp
  8886  001998  CFF4 F027          	movff	prodh,___flmul@temp+1
  8887  00199C  5026               	movf	___flmul@temp,w,c
  8888  00199E  2622               	addwf	___flmul@prod,f,c
  8889  0019A0  5027               	movf	___flmul@temp+1,w,c
  8890  0019A2  2223               	addwfc	___flmul@prod+1,f,c
  8891  0019A4  0E00               	movlw	0
  8892  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  8893  0019A8  0E00               	movlw	0
  8894  0019AA  2225               	addwfc	___flmul@prod+3,f,c
  8895  0019AC  5015               	movf	___flmul@a+2,w,c
  8896  0019AE  0211               	mulwf	___flmul@b+2,c
  8897  0019B0  CFF3 F026          	movff	prodl,___flmul@temp
  8898  0019B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8899  0019B8  5026               	movf	___flmul@temp,w,c
  8900  0019BA  6E17               	movwf	??___flmul& (0+255),c
  8901  0019BC  5027               	movf	___flmul@temp+1,w,c
  8902  0019BE  6E18               	movwf	(??___flmul+1)& (0+255),c
  8903  0019C0  6A19               	clrf	(??___flmul+2)& (0+255),c
  8904  0019C2  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8905  0019C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8906  0019C8  C018  F019         	movff	??___flmul+1,??___flmul+2
  8907  0019CC  C017  F018         	movff	??___flmul,??___flmul+1
  8908  0019D0  6A17               	clrf	??___flmul,c
  8909  0019D2  5017               	movf	??___flmul,w,c
  8910  0019D4  2622               	addwf	___flmul@prod,f,c
  8911  0019D6  5018               	movf	??___flmul+1,w,c
  8912  0019D8  2223               	addwfc	___flmul@prod+1,f,c
  8913  0019DA  5019               	movf	??___flmul+2,w,c
  8914  0019DC  2224               	addwfc	___flmul@prod+2,f,c
  8915  0019DE  501A               	movf	??___flmul+3,w,c
  8916  0019E0  2225               	addwfc	___flmul@prod+3,f,c
  8917  0019E2  C01C  F017         	movff	___flmul@grs,??___flmul
  8918  0019E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8919  0019EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8920  0019EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8921  0019F2  0E19               	movlw	25
  8922  0019F4  D006               	goto	u4890
  8923  0019F6                     u4895:
  8924  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  8925  0019F8  90D8               	bcf	status,0,c
  8926  0019FA  321A               	rrcf	??___flmul+3,f,c
  8927  0019FC  3219               	rrcf	??___flmul+2,f,c
  8928  0019FE  3218               	rrcf	??___flmul+1,f,c
  8929  001A00  3217               	rrcf	??___flmul,f,c
  8930  001A02                     u4890:
  8931  001A02  FFFF               	dw	65535	; assembler added errata NOP
  8932  001A04  2EE8               	decfsz	wreg,f,c
  8933  001A06  D7F7               	goto	u4895
  8934  001A08  5017               	movf	??___flmul,w,c
  8935  001A0A  2622               	addwf	___flmul@prod,f,c
  8936  001A0C  5018               	movf	??___flmul+1,w,c
  8937  001A0E  2223               	addwfc	___flmul@prod+1,f,c
  8938  001A10  5019               	movf	??___flmul+2,w,c
  8939  001A12  2224               	addwfc	___flmul@prod+2,f,c
  8940  001A14  501A               	movf	??___flmul+3,w,c
  8941  001A16  2225               	addwfc	___flmul@prod+3,f,c
  8942  001A18  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8943  001A1C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8944  001A20  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8945  001A24  6A1C               	clrf	___flmul@grs,c
  8946  001A26  5020               	movf	___flmul@aexp,w,c
  8947  001A28  C021  F017         	movff	___flmul@bexp,??___flmul
  8948  001A2C  6A18               	clrf	(??___flmul+1)& (0+255),c
  8949  001A2E  2617               	addwf	??___flmul,f,c
  8950  001A30  0E00               	movlw	0
  8951  001A32  2218               	addwfc	??___flmul+1,f,c
  8952  001A34  0E82               	movlw	130
  8953  001A36  2417               	addwf	??___flmul,w,c
  8954  001A38  6E26               	movwf	___flmul@temp,c
  8955  001A3A  0EFF               	movlw	255
  8956  001A3C  2018               	addwfc	??___flmul+1,w,c
  8957  001A3E  6E27               	movwf	___flmul@temp+1,c
  8958  001A40  D010               	goto	l4506
  8959  001A42                     l4500:
  8960  001A42  FFFF               	dw	65535	; assembler added errata NOP
  8961  001A44  90D8               	bcf	status,0,c
  8962  001A46  3622               	rlcf	___flmul@prod,f,c
  8963  001A48  3623               	rlcf	___flmul@prod+1,f,c
  8964  001A4A  3624               	rlcf	___flmul@prod+2,f,c
  8965  001A4C  3625               	rlcf	___flmul@prod+3,f,c
  8966  001A4E  BE1F               	btfsc	___flmul@grs+3,7,c
  8967  001A50  8022               	bsf	___flmul@prod,0,c
  8968  001A52  90D8               	bcf	status,0,c
  8969  001A54  361C               	rlcf	___flmul@grs,f,c
  8970  001A56  361D               	rlcf	___flmul@grs+1,f,c
  8971  001A58  361E               	rlcf	___flmul@grs+2,f,c
  8972  001A5A  361F               	rlcf	___flmul@grs+3,f,c
  8973  001A5C  0626               	decf	___flmul@temp,f,c
  8974  001A5E  A0D8               	btfss	status,0,c
  8975  001A60  0627               	decf	___flmul@temp+1,f,c
  8976  001A62                     l4506:
  8977  001A62  FFFF               	dw	65535	; assembler added errata NOP
  8978  001A64  AE24               	btfss	___flmul@prod+2,7,c
  8979  001A66  D7ED               	goto	l4500
  8980  001A68  0E00               	movlw	0
  8981  001A6A  6E20               	movwf	___flmul@aexp,c
  8982  001A6C  AE1F               	btfss	___flmul@grs+3,7,c
  8983  001A6E  D019               	goto	l1187
  8984  001A70  0EFF               	movlw	255
  8985  001A72  141C               	andwf	___flmul@grs,w,c
  8986  001A74  6E17               	movwf	??___flmul& (0+255),c
  8987  001A76  0EFF               	movlw	255
  8988  001A78  141D               	andwf	___flmul@grs+1,w,c
  8989  001A7A  6E18               	movwf	(??___flmul+1)& (0+255),c
  8990  001A7C  0EFF               	movlw	255
  8991  001A7E  141E               	andwf	___flmul@grs+2,w,c
  8992  001A80  6E19               	movwf	(??___flmul+2)& (0+255),c
  8993  001A82  0E7F               	movlw	127
  8994  001A84  141F               	andwf	___flmul@grs+3,w,c
  8995  001A86  6E1A               	movwf	(??___flmul+3)& (0+255),c
  8996  001A88  5017               	movf	??___flmul,w,c
  8997  001A8A  1018               	iorwf	??___flmul+1,w,c
  8998  001A8C  1019               	iorwf	??___flmul+2,w,c
  8999  001A8E  101A               	iorwf	??___flmul+3,w,c
  9000  001A90  B4D8               	btfsc	status,2,c
  9001  001A92  D004               	goto	l1188
  9002  001A94                     u4930:
  9003  001A94  FFFF               	dw	65535	; assembler added errata NOP
  9004  001A96  0E01               	movlw	1
  9005  001A98  6E20               	movwf	___flmul@aexp,c
  9006  001A9A  D003               	goto	l1187
  9007  001A9C                     l1188:
  9008  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9009  001A9E  B022               	btfsc	___flmul@prod,0,c
  9010  001AA0  D7F9               	goto	u4930
  9011  001AA2                     l1187:
  9012  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9013  001AA4  5020               	movf	___flmul@aexp,w,c
  9014  001AA6  B4D8               	btfsc	status,2,c
  9015  001AA8  D01F               	goto	l4526
  9016  001AAA  0E01               	movlw	1
  9017  001AAC  2622               	addwf	___flmul@prod,f,c
  9018  001AAE  0E00               	movlw	0
  9019  001AB0  2223               	addwfc	___flmul@prod+1,f,c
  9020  001AB2  2224               	addwfc	___flmul@prod+2,f,c
  9021  001AB4  2225               	addwfc	___flmul@prod+3,f,c
  9022  001AB6  A025               	btfss	___flmul@prod+3,0,c
  9023  001AB8  D017               	goto	l4526
  9024  001ABA  C022  F017         	movff	___flmul@prod,??___flmul
  9025  001ABE  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9026  001AC2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9027  001AC6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9028  001ACA  341A               	rlcf	??___flmul+3,w,c
  9029  001ACC  321A               	rrcf	??___flmul+3,f,c
  9030  001ACE  3219               	rrcf	??___flmul+2,f,c
  9031  001AD0  3218               	rrcf	??___flmul+1,f,c
  9032  001AD2  3217               	rrcf	??___flmul,f,c
  9033  001AD4  C017  F022         	movff	??___flmul,___flmul@prod
  9034  001AD8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9035  001ADC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9036  001AE0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9037  001AE4  4A26               	infsnz	___flmul@temp,f,c
  9038  001AE6  2A27               	incf	___flmul@temp+1,f,c
  9039  001AE8                     l4526:
  9040  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  9041  001AEA  BE27               	btfsc	___flmul@temp+1,7,c
  9042  001AEC  D00D               	goto	l4530
  9043  001AEE  5027               	movf	___flmul@temp+1,w,c
  9044  001AF0  E103               	bnz	u4970
  9045  001AF2  2826               	incf	___flmul@temp,w,c
  9046  001AF4  A0D8               	btfss	status,0,c
  9047  001AF6  D008               	goto	l4530
  9048  001AF8                     u4970:
  9049  001AF8  0E00               	movlw	0
  9050  001AFA  6E22               	movwf	___flmul@prod,c
  9051  001AFC  0E00               	movlw	0
  9052  001AFE  6E23               	movwf	___flmul@prod+1,c
  9053  001B00  0E80               	movlw	128
  9054  001B02  6E24               	movwf	___flmul@prod+2,c
  9055  001B04  0E7F               	movlw	127
  9056  001B06  D023               	goto	L24
  9057  001B08                     l4530:
  9058  001B08  FFFF               	dw	65535	; assembler added errata NOP
  9059  001B0A  BE27               	btfsc	___flmul@temp+1,7,c
  9060  001B0C  D005               	goto	u4980
  9061  001B0E  5027               	movf	___flmul@temp+1,w,c
  9062  001B10  E10F               	bnz	l1195
  9063  001B12  0426               	decf	___flmul@temp,w,c
  9064  001B14  B0D8               	btfsc	status,0,c
  9065  001B16  D00C               	goto	l1195
  9066  001B18                     u4980:
  9067  001B18  FFFF               	dw	65535	; assembler added errata NOP
  9068  001B1A  0E00               	movlw	0
  9069  001B1C  6E22               	movwf	___flmul@prod,c
  9070  001B1E  0E00               	movlw	0
  9071  001B20  6E23               	movwf	___flmul@prod+1,c
  9072  001B22  0E00               	movlw	0
  9073  001B24  6E24               	movwf	___flmul@prod+2,c
  9074  001B26  0E00               	movlw	0
  9075  001B28  6E25               	movwf	___flmul@prod+3,c
  9076  001B2A  0E00               	movlw	0
  9077  001B2C  6E1B               	movwf	___flmul@sign,c
  9078  001B2E  D011               	goto	l4542
  9079  001B30                     l1195:
  9080  001B30  FFFF               	dw	65535	; assembler added errata NOP
  9081  001B32  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9082  001B36  0EFF               	movlw	255
  9083  001B38  1622               	andwf	___flmul@prod,f,c
  9084  001B3A  0EFF               	movlw	255
  9085  001B3C  1623               	andwf	___flmul@prod+1,f,c
  9086  001B3E  0E7F               	movlw	127
  9087  001B40  1624               	andwf	___flmul@prod+2,f,c
  9088  001B42  0E00               	movlw	0
  9089  001B44  1625               	andwf	___flmul@prod+3,f,c
  9090  001B46  B021               	btfsc	___flmul@bexp,0,c
  9091  001B48  8E24               	bsf	___flmul@prod+2,7,c
  9092  001B4A  90D8               	bcf	status,0,c
  9093  001B4C  3021               	rrcf	___flmul@bexp,w,c
  9094  001B4E                     L24:
  9095  001B4E  FFFF               	dw	65535	; assembler added errata NOP
  9096  001B50  6E25               	movwf	___flmul@prod+3,c
  9097  001B52                     l4542:
  9098  001B52  FFFF               	dw	65535	; assembler added errata NOP
  9099  001B54  501B               	movf	___flmul@sign,w,c
  9100  001B56  1225               	iorwf	___flmul@prod+3,f,c
  9101  001B58  C022  F00F         	movff	___flmul@prod,?___flmul
  9102  001B5C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9103  001B60  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9104  001B64  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9105  001B68                     l1182:
  9106  001B68  FFFF               	dw	65535	; assembler added errata NOP
  9107  001B6A  0012               	return		;funcret
  9108  001B6C  FFFF               	dw	65535	; errata NOP
  9109  001B6E                     __end_of___flmul:
  9110                           	opt callstack 0
  9111                           
  9112 ;; *************** function _ADC_Read *****************
  9113 ;; Defined at:
  9114 ;;		line 28 in file "adc.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  channel         1    wreg     unsigned char 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  channel         1    4[COMRAM] unsigned char 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2    0[COMRAM] unsigned int 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9128 ;;      Params:         2       0       0       0       0       0       0
  9129 ;;      Locals:         1       0       0       0       0       0       0
  9130 ;;      Temps:          2       0       0       0       0       0       0
  9131 ;;      Totals:         5       0       0       0       0       0       0
  9132 ;;Total ram usage:        5 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    2
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_get_temp
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text42
  9143  0034A4                     __ptext42:
  9144                           	opt callstack 0
  9145  0034A4                     _ADC_Read:
  9146                           	opt callstack 0
  9147  0034A4  FFFF               	dw	65535	; assembler added errata NOP
  9148                           
  9149                           ;incstack = 0
  9150                           ;ADC_Read@channel stored from wreg
  9151  0034A6  6E05               	movwf	ADC_Read@channel,c
  9152                           
  9153                           ;adc.c: 29:  if(channel > 7)
  9154  0034A8  0E07               	movlw	7
  9155  0034AA  6405               	cpfsgt	ADC_Read@channel,c
  9156  0034AC  D005               	goto	l4408
  9157                           
  9158                           ;adc.c: 30:  return 0;
  9159  0034AE  0E00               	movlw	0
  9160  0034B0  6E02               	movwf	?_ADC_Read+1,c
  9161  0034B2  0E00               	movlw	0
  9162  0034B4  6E01               	movwf	?_ADC_Read,c
  9163  0034B6  D01D               	goto	l288
  9164  0034B8                     l4408:
  9165  0034B8  FFFF               	dw	65535	; assembler added errata NOP
  9166                           
  9167                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9168  0034BA  0EC5               	movlw	197
  9169  0034BC  16C2               	andwf	4034,f,c	;volatile
  9170                           
  9171                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9172  0034BE  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9173  0034C0  42E8               	rrncf	wreg,f,c
  9174  0034C2  0BF8               	andlw	248
  9175  0034C4  12C2               	iorwf	4034,f,c	;volatile
  9176                           
  9177                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9178  0034C6  0E08               	movlw	8
  9179  0034C8  6E03               	movwf	??_ADC_Read& (0+255),c
  9180  0034CA  0ECB               	movlw	203
  9181  0034CC                     u5307:
  9182  0034CC  FFFF               	dw	65535	; errata NOP
  9183  0034CE  2EE8               	decfsz	wreg,f,c
  9184  0034D0  D7FD               	bra	u5307
  9185  0034D2  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9186  0034D4  D7FB               	bra	u5307
  9187  0034D6  D000               	nop2	
  9188                           
  9189                           ;adc.c: 34:  GO_nDONE = 1;
  9190  0034D8  84C2               	bsf	4034,2,c	;volatile
  9191  0034DA                     l289:
  9192  0034DA  FFFF               	dw	65535	; assembler added errata NOP
  9193  0034DC  B4C2               	btfsc	4034,2,c	;volatile
  9194  0034DE  D7FD               	goto	l289
  9195                           
  9196                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9197  0034E0  50C4               	movf	4036,w,c	;volatile
  9198  0034E2  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9199  0034E4  6A03               	clrf	??_ADC_Read& (0+255),c
  9200  0034E6  50C3               	movf	4035,w,c	;volatile
  9201  0034E8  2403               	addwf	??_ADC_Read,w,c
  9202  0034EA  6E01               	movwf	?_ADC_Read,c
  9203  0034EC  0E00               	movlw	0
  9204  0034EE  2004               	addwfc	??_ADC_Read+1,w,c
  9205  0034F0  6E02               	movwf	?_ADC_Read+1,c
  9206  0034F2                     l288:
  9207  0034F2  FFFF               	dw	65535	; assembler added errata NOP
  9208  0034F4  0012               	return		;funcret
  9209  0034F6  FFFF               	dw	65535	; errata NOP
  9210  0034F8                     __end_of_ADC_Read:
  9211                           	opt callstack 0
  9212                           
  9213 ;; *************** function _ADC_Init *****************
  9214 ;; Defined at:
  9215 ;;		line 23 in file "adc.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9229 ;;      Params:         0       0       0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    2
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_get_temp
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text43
  9244  0038FA                     __ptext43:
  9245                           	opt callstack 0
  9246  0038FA                     _ADC_Init:
  9247                           	opt callstack 0
  9248  0038FA  FFFF               	dw	65535	; assembler added errata NOP
  9249                           
  9250                           ;adc.c: 24:  ADCON0 = 0x81;
  9251                           
  9252                           ;incstack = 0
  9253  0038FC  0E81               	movlw	129
  9254  0038FE  6EC2               	movwf	4034,c	;volatile
  9255                           
  9256                           ;adc.c: 25:  ADCON1 = 0x80;
  9257  003900  0E80               	movlw	128
  9258  003902  6EC1               	movwf	4033,c	;volatile
  9259  003904  0012               	return		;funcret
  9260  003906  FFFF               	dw	65535	; errata NOP
  9261  003908                     __end_of_ADC_Init:
  9262                           	opt callstack 0
  9263                           
  9264 ;; *************** function ___fltol *****************
  9265 ;; Defined at:
  9266 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  f1              4   61[COMRAM] void 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  exp1            1   70[COMRAM] unsigned char 
  9271 ;;  sign1           1   69[COMRAM] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  4   61[COMRAM] long 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9281 ;;      Params:         4       0       0       0       0       0       0
  9282 ;;      Locals:         2       0       0       0       0       0       0
  9283 ;;      Temps:          4       0       0       0       0       0       0
  9284 ;;      Totals:        10       0       0       0       0       0       0
  9285 ;;Total ram usage:       10 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    2
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_main
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text44
  9296  002E46                     __ptext44:
  9297                           	opt callstack 0
  9298  002E46                     ___fltol:
  9299                           	opt callstack 0
  9300  002E46  FFFF               	dw	65535	; assembler added errata NOP
  9301                           
  9302                           ;incstack = 0
  9303  002E48  3440               	rlcf	___fltol@f1+2,w,c
  9304  002E4A  3441               	rlcf	___fltol@f1+3,w,c
  9305  002E4C  6E47               	movwf	___fltol@exp1,c
  9306  002E4E  5047               	movf	___fltol@exp1,w,c
  9307  002E50  A4D8               	btfss	status,2,c
  9308  002E52  D00A               	goto	l4732
  9309  002E54                     u5110:
  9310  002E54  FFFF               	dw	65535	; assembler added errata NOP
  9311  002E56  0E00               	movlw	0
  9312  002E58  6E3E               	movwf	?___fltol,c
  9313  002E5A  0E00               	movlw	0
  9314  002E5C  6E3F               	movwf	?___fltol+1,c
  9315  002E5E  0E00               	movlw	0
  9316  002E60  6E40               	movwf	?___fltol+2,c
  9317  002E62  0E00               	movlw	0
  9318  002E64  6E41               	movwf	?___fltol+3,c
  9319  002E66  D056               	goto	l861
  9320  002E68                     l4732:
  9321  002E68  FFFF               	dw	65535	; assembler added errata NOP
  9322  002E6A  C03E  F042         	movff	___fltol@f1,??___fltol
  9323  002E6E  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  9324  002E72  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  9325  002E76  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  9326  002E7A  0E20               	movlw	32
  9327  002E7C  D006               	goto	u5120
  9328  002E7E                     u5125:
  9329  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  9330  002E80  90D8               	bcf	status,0,c
  9331  002E82  3245               	rrcf	??___fltol+3,f,c
  9332  002E84  3244               	rrcf	??___fltol+2,f,c
  9333  002E86  3243               	rrcf	??___fltol+1,f,c
  9334  002E88  3242               	rrcf	??___fltol,f,c
  9335  002E8A                     u5120:
  9336  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  9337  002E8C  2EE8               	decfsz	wreg,f,c
  9338  002E8E  D7F7               	goto	u5125
  9339  002E90  5042               	movf	??___fltol,w,c
  9340  002E92  6E46               	movwf	___fltol@sign1,c
  9341  002E94  8E40               	bsf	___fltol@f1+2,7,c
  9342  002E96  0EFF               	movlw	255
  9343  002E98  163E               	andwf	___fltol@f1,f,c
  9344  002E9A  0EFF               	movlw	255
  9345  002E9C  163F               	andwf	___fltol@f1+1,f,c
  9346  002E9E  0EFF               	movlw	255
  9347  002EA0  1640               	andwf	___fltol@f1+2,f,c
  9348  002EA2  0E00               	movlw	0
  9349  002EA4  1641               	andwf	___fltol@f1+3,f,c
  9350  002EA6  0E96               	movlw	150
  9351  002EA8  5E47               	subwf	___fltol@exp1,f,c
  9352  002EAA  AE47               	btfss	___fltol@exp1,7,c
  9353  002EAC  D00E               	goto	l4752
  9354  002EAE  5047               	movf	___fltol@exp1,w,c
  9355  002EB0  0A80               	xorlw	128
  9356  002EB2  0F97               	addlw	151
  9357  002EB4  A0D8               	btfss	status,0,c
  9358  002EB6  D7CE               	goto	u5110
  9359  002EB8                     l4748:
  9360  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  9361  002EBA  90D8               	bcf	status,0,c
  9362  002EBC  3241               	rrcf	___fltol@f1+3,f,c
  9363  002EBE  3240               	rrcf	___fltol@f1+2,f,c
  9364  002EC0  323F               	rrcf	___fltol@f1+1,f,c
  9365  002EC2  323E               	rrcf	___fltol@f1,f,c
  9366  002EC4  3E47               	incfsz	___fltol@exp1,f,c
  9367  002EC6  D7F8               	goto	l4748
  9368  002EC8  D010               	goto	u5160
  9369  002ECA                     l4752:
  9370  002ECA  FFFF               	dw	65535	; assembler added errata NOP
  9371  002ECC  0E1F               	movlw	31
  9372  002ECE  6447               	cpfsgt	___fltol@exp1,c
  9373  002ED0  D008               	goto	l4760
  9374  002ED2  D7C0               	goto	u5110
  9375  002ED4                     l4758:
  9376  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  9377  002ED6  90D8               	bcf	status,0,c
  9378  002ED8  363E               	rlcf	___fltol@f1,f,c
  9379  002EDA  363F               	rlcf	___fltol@f1+1,f,c
  9380  002EDC  3640               	rlcf	___fltol@f1+2,f,c
  9381  002EDE  3641               	rlcf	___fltol@f1+3,f,c
  9382  002EE0  0647               	decf	___fltol@exp1,f,c
  9383  002EE2                     l4760:
  9384  002EE2  FFFF               	dw	65535	; assembler added errata NOP
  9385  002EE4  5047               	movf	___fltol@exp1,w,c
  9386  002EE6  A4D8               	btfss	status,2,c
  9387  002EE8  D7F5               	goto	l4758
  9388  002EEA                     u5160:
  9389  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  9390  002EEC  5046               	movf	___fltol@sign1,w,c
  9391  002EEE  B4D8               	btfsc	status,2,c
  9392  002EF0  D008               	goto	l4766
  9393  002EF2  1E41               	comf	___fltol@f1+3,f,c
  9394  002EF4  1E40               	comf	___fltol@f1+2,f,c
  9395  002EF6  1E3F               	comf	___fltol@f1+1,f,c
  9396  002EF8  6C3E               	negf	___fltol@f1,c
  9397  002EFA  0E00               	movlw	0
  9398  002EFC  223F               	addwfc	___fltol@f1+1,f,c
  9399  002EFE  2240               	addwfc	___fltol@f1+2,f,c
  9400  002F00  2241               	addwfc	___fltol@f1+3,f,c
  9401  002F02                     l4766:
  9402  002F02  FFFF               	dw	65535	; assembler added errata NOP
  9403  002F04  C03E  F03E         	movff	___fltol@f1,?___fltol
  9404  002F08  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  9405  002F0C  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  9406  002F10  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  9407  002F14                     l861:
  9408  002F14  FFFF               	dw	65535	; assembler added errata NOP
  9409  002F16  0012               	return		;funcret
  9410  002F18  FFFF               	dw	65535	; errata NOP
  9411  002F1A                     __end_of___fltol:
  9412                           	opt callstack 0
  9413                           
  9414 ;; *************** function _UARTSendString *****************
  9415 ;; Defined at:
  9416 ;;		line 65 in file "serial.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  c               2   32[BANK0 ] PTR unsigned char 
  9419 ;;		 -> int_to_char@result(10), 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  i               2   34[BANK0 ] int 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9431 ;;      Params:         0       2       0       0       0       0       0
  9432 ;;      Locals:         0       2       0       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0
  9434 ;;      Totals:         0       4       0       0       0       0       0
  9435 ;;Total ram usage:        4 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    3
  9438 ;; This function calls:
  9439 ;;		_UARTSendChar
  9440 ;; This function is called by:
  9441 ;;		_main
  9442 ;;		_read_op
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text45
  9447  00361C                     __ptext45:
  9448                           	opt callstack 0
  9449  00361C                     _UARTSendString:
  9450                           	opt callstack 0
  9451  00361C  FFFF               	dw	65535	; assembler added errata NOP
  9452                           
  9453                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  9454                           
  9455                           ;incstack = 0
  9456  00361E  9E94               	bcf	3988,7,c	;volatile
  9457                           
  9458                           ;serial.c: 67:   int i = 0;
  9459  003620  0E00               	movlw	0
  9460  003622  0100               	movlb	0	; () banked
  9461  003624  6FDE               	movwf	(UARTSendString@i+1)& (0+255),b
  9462  003626  0E00               	movlw	0
  9463  003628  6FDD               	movwf	UARTSendString@i& (0+255),b
  9464                           
  9465                           ;serial.c: 68:   while (c[i] != '\0') {
  9466  00362A  D00D               	goto	l4638
  9467  00362C                     l4634:
  9468  00362C  FFFF               	dw	65535	; assembler added errata NOP
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;serial.c: 69:     UARTSendChar(c[i]);
  9472  00362E  51DD               	movf	UARTSendString@i& (0+255),w,b
  9473  003630  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9474  003632  6ED9               	movwf	fsr2l,c
  9475  003634  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  9476  003636  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9477  003638  6EDA               	movwf	fsr2h,c
  9478  00363A  50DF               	movf	indf2,w,c
  9479  00363C  EC6A  F01C         	call	_UARTSendChar
  9480                           
  9481                           ;serial.c: 70:     i++;
  9482  003640  0100               	movlb	0	; () banked
  9483  003642  4BDD               	infsnz	UARTSendString@i& (0+255),f,b
  9484  003644  2BDE               	incf	(UARTSendString@i+1)& (0+255),f,b
  9485  003646                     l4638:
  9486  003646  FFFF               	dw	65535	; assembler added errata NOP
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;serial.c: 68:   while (c[i] != '\0') {
  9490  003648  51DD               	movf	UARTSendString@i& (0+255),w,b
  9491  00364A  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9492  00364C  6ED9               	movwf	fsr2l,c
  9493  00364E  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  9494  003650  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9495  003652  6EDA               	movwf	fsr2h,c
  9496  003654  50DF               	movf	indf2,w,c
  9497  003656  B4D8               	btfsc	status,2,c
  9498                           
  9499                           ; BSR set to: 0
  9500  003658  0012               	return		;funcret
  9501  00365A  FFFF               	dw	65535	; assembler added errata NOP
  9502  00365C  D7E7               	goto	l4634
  9503  00365E  FFFF               	dw	65535	; errata NOP
  9504  003660                     __end_of_UARTSendString:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function _UARTNewLine *****************
  9508 ;; Defined at:
  9509 ;;		line 41 in file "serial.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9523 ;;      Params:         0       0       0       0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    3
  9530 ;; This function calls:
  9531 ;;		_UARTSendChar
  9532 ;; This function is called by:
  9533 ;;		_main
  9534 ;;		_read_op
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text46
  9539  0038C0                     __ptext46:
  9540                           	opt callstack 0
  9541  0038C0                     _UARTNewLine:
  9542                           	opt callstack 0
  9543  0038C0  FFFF               	dw	65535	; assembler added errata NOP
  9544                           
  9545                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;incstack = 0
  9549  0038C2  9E94               	bcf	3988,7,c	;volatile
  9550                           
  9551                           ;serial.c: 43:   UARTSendChar(0x0a);
  9552  0038C4  0E0A               	movlw	10
  9553  0038C6  EC6A  F01C         	call	_UARTSendChar
  9554                           
  9555                           ;serial.c: 44:   UARTSendChar(0x0d);
  9556  0038CA  0E0D               	movlw	13
  9557  0038CC  EC6A  F01C         	call	_UARTSendChar
  9558  0038D0  0012               	return		;funcret
  9559  0038D2  FFFF               	dw	65535	; errata NOP
  9560  0038D4                     __end_of_UARTNewLine:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function _UARTSendChar *****************
  9564 ;; Defined at:
  9565 ;;		line 47 in file "serial.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  c               1    wreg     unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  c               1    0[COMRAM] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9579 ;;      Params:         0       0       0       0       0       0       0
  9580 ;;      Locals:         1       0       0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0       0       0
  9582 ;;      Totals:         1       0       0       0       0       0       0
  9583 ;;Total ram usage:        1 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    2
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_UARTNewLine
  9590 ;;		_UARTSendString
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text47
  9595  0038D4                     __ptext47:
  9596                           	opt callstack 0
  9597  0038D4                     _UARTSendChar:
  9598                           	opt callstack 0
  9599  0038D4  FFFF               	dw	65535	; assembler added errata NOP
  9600                           
  9601                           ;incstack = 0
  9602                           ;UARTSendChar@c stored from wreg
  9603  0038D6  6E01               	movwf	UARTSendChar@c,c
  9604                           
  9605                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  9606  0038D8  9E94               	bcf	3988,7,c	;volatile
  9607  0038DA                     l185:
  9608  0038DA  FFFF               	dw	65535	; assembler added errata NOP
  9609  0038DC  A2AC               	btfss	4012,1,c	;volatile
  9610  0038DE  D7FD               	goto	l185
  9611                           
  9612                           ;serial.c: 50:   TXREG = c;
  9613  0038E0  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  9614  0038E4  0012               	return		;funcret
  9615  0038E6  FFFF               	dw	65535	; errata NOP
  9616  0038E8                     __end_of_UARTSendChar:
  9617                           	opt callstack 0
  9618                           
  9619 ;; *************** function _Timer0_StartTimer *****************
  9620 ;; Defined at:
  9621 ;;		line 21 in file "timer.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  2  109[None  ] int 
  9628 ;; Registers used:
  9629 ;;		None
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9635 ;;      Params:         0       0       0       0       0       0       0
  9636 ;;      Locals:         0       0       0       0       0       0       0
  9637 ;;      Temps:          0       0       0       0       0       0       0
  9638 ;;      Totals:         0       0       0       0       0       0       0
  9639 ;;Total ram usage:        0 bytes
  9640 ;; Hardware stack levels used:    1
  9641 ;; Hardware stack levels required when called:    2
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_main
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text48
  9650  00391C                     __ptext48:
  9651                           	opt callstack 0
  9652  00391C                     _Timer0_StartTimer:
  9653                           	opt callstack 0
  9654  00391C  FFFF               	dw	65535	; assembler added errata NOP
  9655                           
  9656                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9657                           
  9658                           ;incstack = 0
  9659  00391E  8ED5               	bsf	4053,7,c	;volatile
  9660                           
  9661                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  9662  003920  0012               	return		;funcret
  9663  003922  FFFF               	dw	65535	; errata NOP
  9664  003924                     __end_of_Timer0_StartTimer:
  9665                           	opt callstack 0
  9666                           
  9667 ;; *************** function _Timer0_Init *****************
  9668 ;; Defined at:
  9669 ;;		line 8 in file "timer.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         0       0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    2
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_main
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text49
  9698  00385A                     __ptext49:
  9699                           	opt callstack 0
  9700  00385A                     _Timer0_Init:
  9701                           	opt callstack 0
  9702  00385A  FFFF               	dw	65535	; assembler added errata NOP
  9703                           
  9704                           ;timer.c: 9:  time_ms = 0;
  9705                           
  9706                           ;incstack = 0
  9707  00385C  0E00               	movlw	0
  9708  00385E  0100               	movlb	0	; () banked
  9709  003860  6F89               	movwf	_time_ms& (0+255),b	;volatile
  9710  003862  0E00               	movlw	0
  9711  003864  6F8A               	movwf	(_time_ms+1)& (0+255),b	;volatile
  9712  003866  0E00               	movlw	0
  9713  003868  6F8B               	movwf	(_time_ms+2)& (0+255),b	;volatile
  9714  00386A  0E00               	movlw	0
  9715  00386C  6F8C               	movwf	(_time_ms+3)& (0+255),b	;volatile
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  9719  00386E  9CD5               	bcf	4053,6,c	;volatile
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;timer.c: 11:  TMR0H = 0xFF;
  9723  003870  68D7               	setf	4055,c	;volatile
  9724                           
  9725                           ;timer.c: 12:  TMR0L = 0x34;
  9726  003872  0E34               	movlw	52
  9727  003874  6ED6               	movwf	4054,c	;volatile
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  9731  003876  94F2               	bcf	4082,2,c	;volatile
  9732                           
  9733                           ;timer.c: 14:  T0CON = 0x00;
  9734  003878  0E00               	movlw	0
  9735  00387A  6ED5               	movwf	4053,c	;volatile
  9736                           
  9737                           ; BSR set to: 0
  9738  00387C  0012               	return		;funcret
  9739  00387E  FFFF               	dw	65535	; errata NOP
  9740  003880                     __end_of_Timer0_Init:
  9741                           	opt callstack 0
  9742                           
  9743 ;; *************** function _timingISR *****************
  9744 ;; Defined at:
  9745 ;;		line 31 in file "timer.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;		None
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg, status,2, status,0, cstack
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9759 ;;      Params:         0       0       0       0       0       0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0
  9762 ;;      Totals:         0       0       0       0       0       0       0
  9763 ;;Total ram usage:        0 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:    1
  9766 ;; This function calls:
  9767 ;;		i2_Timer0_StartTimer
  9768 ;; This function is called by:
  9769 ;;		Interrupt level 2
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           	psect	intcode
  9774  000008                     __pintcode:
  9775                           	opt callstack 0
  9776  000008                     _timingISR:
  9777                           	opt callstack 0
  9778  000008  FFFF               	dw	65535	; assembler added errata NOP
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;incstack = 0
  9782  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9783                           
  9784                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  9785  00000C  B4F2               	btfsc	4082,2,c	;volatile
  9786  00000E  AAF2               	btfss	4082,5,c	;volatile
  9787  000010  D00D               	goto	i2l250
  9788                           
  9789                           ;timer.c: 33:   TMR0IF = 0;
  9790  000012  94F2               	bcf	4082,2,c	;volatile
  9791                           
  9792                           ;timer.c: 34:   time_ms++;
  9793  000014  0E01               	movlw	1
  9794  000016  0100               	movlb	0	; () banked
  9795  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
  9796  00001A  0E00               	movlw	0
  9797  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  9798  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  9799  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;timer.c: 35:   TMR0H = 0xFF;
  9803  000022  68D7               	setf	4055,c	;volatile
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;timer.c: 36:   TMR0L = 0x34;
  9807  000024  0E34               	movlw	52
  9808  000026  6ED6               	movwf	4054,c	;volatile
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;timer.c: 37:   Timer0_StartTimer();
  9812  000028  EC92  F01C         	call	i2_Timer0_StartTimer	;wreg free
  9813  00002C                     i2l250:
  9814  00002C  FFFF               	dw	65535	; assembler added errata NOP
  9815  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9816  000030  0011               	retfie		f
  9817  000032  FFFF               	dw	65535	; errata NOP
  9818  000034                     __end_of_timingISR:
  9819                           	opt callstack 0
  9820                           
  9821 ;; *************** function i2_Timer0_StartTimer *****************
  9822 ;; Defined at:
  9823 ;;		line 21 in file "timer.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;		None
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;		None
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  2    0[None  ] int 
  9830 ;; Registers used:
  9831 ;;		None
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9837 ;;      Params:         0       0       0       0       0       0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used:    1
  9843 ;; This function calls:
  9844 ;;		Nothing
  9845 ;; This function is called by:
  9846 ;;		_timingISR
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text51
  9851  003924                     __ptext51:
  9852                           	opt callstack 0
  9853  003924                     i2_Timer0_StartTimer:
  9854                           	opt callstack 0
  9855  003924  FFFF               	dw	65535	; assembler added errata NOP
  9856                           
  9857                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9858                           
  9859                           ;incstack = 0
  9860  003926  8ED5               	bsf	4053,7,c	;volatile
  9861                           
  9862                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  9863  003928  0012               	return		;funcret
  9864  00392A  FFFF               	dw	65535	; errata NOP
  9865  00392C                     __end_ofi2_Timer0_StartTimer:
  9866                           	opt callstack 0
  9867                           
  9868                           	psect	rparam
  9869  0000                     
  9870                           	psect	temp
  9871  00007F                     btemp:
  9872                           	opt callstack 0
  9873  00007F                     	ds	1
  9874  0000                     int$flags	set	btemp
  9875  0000                     wtemp8	set	btemp+1
  9876  0000                     ttemp5	set	btemp+1
  9877  0000                     ttemp6	set	btemp+4
  9878  0000                     ttemp7	set	btemp+8
  9879                           tosu	equ	0xFFF
  9880                           tosh	equ	0xFFE
  9881                           tosl	equ	0xFFD
  9882                           stkptr	equ	0xFFC
  9883                           pclatu	equ	0xFFB
  9884                           pclath	equ	0xFFA
  9885                           pcl	equ	0xFF9
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           indf0	equ	0xFEF
  9893                           postinc0	equ	0xFEE
  9894                           postdec0	equ	0xFED
  9895                           preinc0	equ	0xFEC
  9896                           plusw0	equ	0xFEB
  9897                           fsr0h	equ	0xFEA
  9898                           fsr0l	equ	0xFE9
  9899                           wreg	equ	0xFE8
  9900                           indf1	equ	0xFE7
  9901                           postinc1	equ	0xFE6
  9902                           postdec1	equ	0xFE5
  9903                           preinc1	equ	0xFE4
  9904                           plusw1	equ	0xFE3
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           bsr	equ	0xFE0
  9908                           indf2	equ	0xFDF
  9909                           postinc2	equ	0xFDE
  9910                           postdec2	equ	0xFDD
  9911                           preinc2	equ	0xFDC
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     40     106
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1789_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   54802
                                             36 BANK0      4     4      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             3     2      1     120
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49030
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     264
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     28      6A       4       82.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      14        0.0%
DATA                 0      0      E8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 01:49:21 2019

                                              _SSPSTATbits 000FC7  
                                      ___wmul@multiplicand 0003  
                                                      l138 390E  
                                                      l411 2B58  
                                                      l430 2396  
                                                      l432 23A0  
                                                      l185 38DA  
                                                      l507 17E6  
                                                      l348 3244  
                                                      l445 213E  
                                                      l366 1F30  
                                                      l391 2558  
                                                      l447 2148  
                                                      l288 34F2  
                                                      l368 1F3A  
                                                      l289 34DA  
                                                      l393 2562  
                                                      l861 2F14  
                                                      _PR2 000FCB  
                                                      _abs 371A  
                                                      _lcd 0080  
                                                      _pad 320E  
                                                      wreg 000FE8  
                                             ___flmul@aexp 0020  
                                             ___flmul@bexp 0021  
                                             ___flmul@sign 001B  
                                             ___flmul@temp 0026  
                                             ___flmul@prod 0022  
                                             ___fltol@exp1 0047  
                                             __CFG_WDT$OFF 000000  
                                                     l1002 2E20  
                                                     l1012 313C  
                                                     l1101 1EAC  
                                                     ?_abs 0013  
                                                     l1109 1D98  
                                                     l1118 1E10  
                                                     l1222 2AE8  
                                                     l1119 1E0A  
                                                     l1226 2A5C  
                                                     l1242 3750  
                                                     l1219 29D2  
                                                     l1316 3208  
                                                     l1093 1CCC  
                                                     l1182 1B68  
                                                     l1094 1CA4  
                                                     l1270 2826  
                                                     l1239 3746  
                                                     l1273 2830  
                                                     l1178 1878  
                                                     l1370 30A0  
                                                     l1195 1B30  
                                                     l1187 1AA2  
                                                     l1188 1A9C  
                                                     l3204 317E  
                                                     l1380 343E  
                                                     l4100 174C  
                                                     l3214 366C  
                                                     l3222 380A  
                                                     l3310 28CC  
                                                     l3302 288E  
                                                     l4110 179A  
                                                     l4030 13C0  
                                                     l4022 134C  
                                                     l4014 12CC  
                                                     l3224 3810  
                                                     l3320 292C  
                                                     l1385 3448  
                                                     l3218 3684  
                                                     l3242 323A  
                                                     l3402 3124  
                                                     l4106 178C  
                                                     l3252 329A  
                                                     l3244 3250  
                                                     l3308 28B6  
                                                     l3324 2944  
                                                     l3340 2C60  
                                                     l4044 14CA  
                                                     l4116 17AE  
                                                     l4230 1CB4  
                                                     l3414 3610  
                                                     l3238 322A  
                                                     l3422 3464  
                                                     l3350 2CB8  
                                                     l4232 1CBA  
                                                     l4152 1B9C  
                                                     l3248 326A  
                                                     l3424 3472  
                                                     l3328 296C  
                                                     l3360 2D1C  
                                                     l3344 2C86  
                                                     l3520 262E  
                                                     l4072 15AC  
                                                     l4136 3358  
                                                     l4330 1E8C  
                                                     l4218 1C52  
                                                     l4058 154C  
                                                     l4138 3380  
                                                     l4500 1A42  
                                                     l4332 1E90  
                                                     l4180 1BF0  
                                                     l4156 1BA2  
                                                     l3364 2D44  
                                                     l3356 2D04  
                                                     l3348 2CA2  
                                                     l3452 1F58  
                                                     l3508 25A2  
                                                     l4430 181A  
                                                     l4326 1E82  
                                                     l4318 1E58  
                                                     l4254 1D04  
                                                     l4350 32E6  
                                                     l3710 2786  
                                                     l3438 1F0E  
                                                     l3550 2B1A  
                                                     l3374 2D92  
                                                     l3606 24C6  
                                                     l3630 215E  
                                                     l4086 1682  
                                                     l4408 34B8  
                                                     l4432 1820  
                                                     l4256 1D0A  
                                                     l4264 1D1E  
                                                     l4176 1BEA  
                                                     l4352 3334  
                                                     l3704 2748  
                                                     l3296 2864  
                                                     l3456 1F68  
                                                     l3560 2B72  
                                                     l3376 2DA8  
                                                     l3800 07C6  
                                                     l4530 1B08  
                                                     l4506 1A62  
                                                     l4450 1866  
                                                     l4434 1832  
                                                     l4282 1DC0  
                                                     l4274 1D86  
                                                     l3714 27BE  
                                                     l3706 2752  
                                                     l3490 20EE  
                                                     l3466 2062  
                                                     l3538 26A2  
                                                     l3386 2E08  
                                                     l3394 30C2  
                                                     l4292 1DD8  
                                                     l4188 1C14  
                                                     l4348 32D6  
                                                     l3708 275A  
                                                     l3564 2B8C  
                                                     l3396 30D8  
                                                     l3644 21B2  
                                                     l3636 218E  
                                                     l3820 08CE  
                                                     l4542 1B52  
                                                     l4526 1AE8  
                                                     l3486 20D2  
                                                     l3582 2C0E  
                                                     l3574 2BD6  
                                                     l3734 3010  
                                                     ?_pad 0011  
                                                     l4448 1860  
                                                     l4560 29E4  
                                                     l3568 2BAE  
                                                     l3736 3020  
                                                     l3840 0A2E  
                                                     l3816 089E  
                                                     l3760 069E  
                                                     l4634 362C  
                                                     l4458 189A  
                                                     l4298 1DE6  
                                                     l4570 2A1A  
                                                     l3690 26EA  
                                                     l3578 2BF4  
                                                     l3682 2346  
                                                     l3658 224C  
                                                     l3666 22C8  
                                                     l3930 0F44  
                                                     l3834 0988  
                                                     l3818 08BE  
                                                     l3770 06C0  
                                                     l3762 06B0  
                                                     l4732 2E68  
                                                     l4580 2A92  
                                                     l4572 2A42  
                                                     l3596 23D8  
                                                     l3924 0ED2  
                                                     l3916 0E5E  
                                                     l3908 0DDE  
                                                     l3844 0A68  
                                                     l4638 3646  
                                                     l4566 2A04  
                                                     l3934 0F50  
                                                     l3854 0AD2  
                                                     l3782 06DE  
                                                     l3774 06C8  
                                                     l3766 06B8  
                                                     l3758 0698  
                                                     l4760 2EE2  
                                                     l4752 2ECA  
                                                     l4568 2A0C  
                                                     l3688 26E4  
                                                     l3944 0F94  
                                                     l3864 0B4E  
                                                     l3784 0724  
                                                     l4578 2A84  
                                                     l3698 2736  
                                                     l3954 0FBE  
                                                     l3938 0F80  
                                                     l3874 0C2E  
                                                     l3778 06D0  
                                                     l4748 2EB8  
                                                     l4596 2AD6  
                                                     l3964 1050  
                                                     l3892 0D88  
                                                     l3884 0CD8  
                                                     l3796 0796  
                                                     l4766 2F02  
                                                     l4758 2ED4  
                                                     l3990 11C8  
                                                     l3982 1156  
                                                     l3974 10BC  
                                                     l3798 07B6  
                                                     l3998 1276  
                                                     STR_1 061D  
                                                     STR_2 0648  
                                                     STR_3 0605  
                                                     STR_5 0605  
                                                     STR_7 0609  
                                                     STR_9 0609  
                                                     u3001 2D72  
                                                     u3100 1EDC  
                                                     u3020 2DAE  
                                                     u3110 1EE0  
                                                     u3200 20A4  
                                                     u3210 20AA  
                                                     u3050 30DE  
                                                     u4010 0BA8  
                                                     u3140 1F24  
                                                     u3300 2660  
                                                     u3230 20BA  
                                                     u3310 2670  
                                                     u4030 0C88  
                                                     u3080 360C  
                                                     u3160 1F50  
                                                     u3320 2676  
                                                     u3400 2BA2  
                                                     u4200 137A  
                                                     u3170 2072  
                                                     u4130 107E  
                                                     u3260 254C  
                                                     u3500 2508  
                                                     u4300 16DC  
                                                     u4220 141A  
                                                     u5110 2E54  
                                                     u3190 2094  
                                                     u3270 2608  
                                                     u3430 2C24  
                                                     u2710 3780  
                                                     u3191 2092  
                                                     u3351 2AFA  
                                                     u5120 2E8A  
                                                     u3280 263E  
                                                     u2800 370C  
                                                     u2720 3784  
                                                     u3520 2132  
                                                     u4240 1524  
                                                     u4080 0E8C  
                                                     u3450 238A  
                                                     u2810 3710  
                                                     u3610 22A2  
                                                     u3275 25F4  
                                                     u4420 1C76  
                                                     u5060 2A9E  
                                                     u2660 3174  
                                                     u2820 3422  
                                                     u3620 22DA  
                                                     u3540 21AE  
                                                     u4260 1586  
                                                     u5125 2E7E  
                                                     u4430 1C86  
                                                     u3710 27F2  
                                                     u2910 28D2  
                                                     u2830 3426  
                                                     u3550 21E8  
                                                     u3615 228E  
                                                     u5160 2EEA  
                                                     u4600 1DEC  
                                                     u4440 1C8A  
                                                     u3720 27F6  
                                                     u2680 31C0  
                                                     u3480 24F2  
                                                     u3640 22FC  
                                                     u3560 21EC  
                                                     u4280 1606  
                                                     u3481 24F0  
                                                     u3641 22FA  
                                                     u2850 37F0  
                                                     u2770 372A  
                                                     u3490 2502  
                                                     u3650 230C  
                                                     u5307 34CC  
                                                     u4620 1E02  
                                                     u2860 37F4  
                                                     u2780 37B8  
                                                     u3660 2312  
                                                     u3580 2226  
                                                     u3900 090A  
                                                     u4470 1CD6  
                                                     u2790 37BC  
                                                     u3590 222A  
                                                     u3910 090E  
                                                     u4560 1DAC  
                                                     u3920 091C  
                                                     u3690 2732  
                                                     u2970 2CBE  
                                                     u3850 0802  
                                                     u2891 2896  
                                                     u3860 0806  
                                                     _RCIF 007CF5  
                                                     u5277 3502  
                                                     u3790 3076  
                                                     u3950 09E2  
                                                     u3870 0814  
                                                     u5287 3528  
                                                     u4680 1E66  
                                                     u5297 3538  
                                                     u4930 1A94  
                                                     u3970 0AC2  
                                                     u3990 0B0C  
                                                     u4880 1886  
                                                     u4970 1AF8  
                                                     u4890 1A02  
                                                     u4980 1B18  
                                                     u4895 19F6  
                                         ??_initialize_PWM 0001  
                                                     abs@a 0013  
                                                     _dbuf 009B  
                                                     _flag 009A  
                                                     _atoi 26D0  
                                                     _ctoa 344E  
                                                     _main 3908  
                                                     _dtoa 1EB2  
                                                     _prec 0093  
                                                     _otoa 2536  
                                                     _nout 008F  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _stoa 2AEE  
                                                     btemp 007F  
                                                     _utoa 2374  
                                                     _xtoa 211C  
                                         __end_of_ADC_Init 3908  
                                         __end_of_ADC_Read 34F8  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0034  
                                             ___param_bank 000000  
                                        int_to_char@result 00CD  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                            ___fltol@sign1 0046  
                                          __end_of___aodiv 2992  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 1EB2  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                             get_temp@temp 0038  
                                          __end_of___aomod 2D6A  
                                                    STR_21 0627  
                                                    STR_14 0606  
                                                    STR_30 062A  
                                                    STR_23 0627  
                                                    STR_32 062A  
                                                    STR_41 0611  
                                                    STR_25 062D  
                                                    STR_18 060A  
                                                    STR_34 0630  
                                                    STR_27 062D  
                                                    STR_51 0639  
                                                    STR_36 0630  
                                                    STR_61 060D  
                                                    STR_46 0612  
                                                    STR_54 063C  
                                                    STR_71 0633  
                                                    STR_39 0611  
                                                    STR_56 063C  
                                                    STR_81 0615  
                                                    STR_49 0639  
                                                    STR_66 060E  
                                                    STR_74 0636  
                                                    STR_91 061E  
                                                    STR_59 060D  
                                                    STR_76 0636  
                                                    STR_69 0633  
                                                    STR_86 0616  
                                                    STR_94 063F  
                                                    STR_79 0615  
                                                    STR_96 063F  
                                          __end_of___flmul 1B6E  
                                                    ?_otoa 001C  
                                                    STR_99 0619  
                                          __end_of___flsub 3590  
                                          __end_of___fltol 2F1A  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 2E46  
                                                    ?_xtoa 001C  
                                                    _T2CON 000FCA  
                                          __end_of___lomod 3162  
                                                    i2l250 002C  
                                                    _RCSTA 000FAB  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 006A  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TRISD 000F95  
                                                    _TXREG 000FAD  
                                          __end_of_getchar 38FA  
                                                    _fgetc 32B8  
                                                    _flags 0095  
                                                    _getch 3912  
                                                    _errno 008D  
                                                    _fputc 3162  
                                          __end_of_isalpha 371A  
                                                    _fputs 3660  
                                          __end_of_isdigit 37FE  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0091  
                                                    ctoa@c 001E  
                                                    _putch 3934  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 378E  
                                          __end_of_isspace 361C  
                                          __end_of_isupper 37C6  
                                                    tablat 000FF5  
                                             ?_int_to_char 007A  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                          __end_of_sprintf 33F8  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 30A6  
                                          __end_of_toupper 344E  
                                         ___lodiv@dividend 0001  
                                             _toupper$1943 000D  
                                          __initialization 36A2  
                                           int_to_char@num 007A  
                                             __end_of_atoi 2836  
                                             __end_of_ctoa 34A4  
                                             __end_of_main 3912  
                                             __end_of_dtoa 211C  
                                             __end_of_otoa 26D0  
                                             __end_of_stoa 2C32  
                                             __end_of_utoa 2536  
                                             __end_of_xtoa 2374  
                                       int_to_char@the_num 00D7  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 007E  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                         ___lodiv@quotient 0011  
                                                   ?_fgetc 0003  
                                                   ?_getch 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                                   ?_fputc 0001  
                                                   STR_101 0619  
                                                   STR_110 061A  
                                                   ?_fputs 000A  
                                                   STR_103 0601  
                                                   STR_105 0601  
                                                   STR_121 0621  
                                                   STR_114 0602  
                                                   STR_130 0624  
                                                   _ADRESH 000FC4  
                                                   STR_123 0621  
                                                   STR_132 0624  
                                                   STR_117 0642  
                                                   STR_126 0645  
                                                   _ADRESL 000FC3  
                                                   STR_119 0642  
                                                   STR_128 0645  
                                                   _CCPR1L 000FBE  
                                                   ?_putch 0001  
                                                   _RCREG1 000FAE  
                                            vfpfcnvrt@done 0059  
                                                   _TMR0IE 007F95  
                                                   _TMR0IF 007F92  
                                                   _SSPBUF 000FC9  
                                             ?_UARTNewLine 0001  
                                         __end_of___xxtofl 2AEE  
                                            ??_Timer0_Init 0001  
                                          write_op@address 0003  
                                      i2_Timer0_StartTimer 3924  
                                             vfprintf@cfmt 0078  
                                         __end_of_get_temp 2FE4  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 3830  
                                                ??___flmul 0017  
                                                ??___flsub 0030  
                                                ??___fltol 0042  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                          ADC_Read@channel 0005  
                                                   clear_0 36C8  
                                  __size_of_UARTSendString 0044  
                                                   fgetc@c 000A  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   dtoa@fp 001C  
                                                ??_getchar 000C  
                                                   _strlen 37FE  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ?_ADC_Init 0001  
                                                ?_ADC_Read 0001  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                                   otoa@fp 001C  
                                     ?i2_Timer0_StartTimer 0001  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                   __size_of_initialize_RX 0014  
                                   __size_of_initialize_TX 0014  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                         __end_of_vfprintf 33A2  
                                                   utoa@fp 001C  
                                                ??_sprintf 007A  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                             ___xxtofl@arg 000B  
                                         __end_of_write_op 3546  
                                             ___xxtofl@exp 000A  
                                             ___xxtofl@val 0001  
                                               __accesstop 0080  
                                  __end_of__initialization 36D0  
                                            ___rparam_used 000001  
                                               ___fltol@f1 003E  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 392C  
                                            __end_of_fgetc 3342  
                                            __end_of_getch 391C  
                                            __end_of_fputc 320E  
                                            __end_of_fputs 36A2  
                                      __end_of_Timer0_Init 3880  
                                            __end_of_putch 393A  
                                               ??_ADC_Init 0001  
                                               ??_ADC_Read 0003  
                                    ??i2_Timer0_StartTimer 0001  
                                                  ??_fgetc 0005  
                                                  ??_getch 0003  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                               __pbssBANK0 0080  
                                     __size_of_int_to_char 0048  
                                            _initialize_RX 38AC  
                                            _initialize_TX 3898  
                                                  ?___wmul 0001  
                                                  _CCP1CON 000FBD  
                                                  ?_strlen 0001  
                                       __size_of_timingISR 002C  
                                                ?___xxtofl 0001  
                                       __size_of_vfpfcnvrt 11A0  
                                                  _SSPCON1 000FC6  
                                                ?_get_temp 0030  
                                         ___lomod@dividend 0001  
                                            ?_UARTSendChar 0001  
                                                  __Hparam 0000  
                                     __size_of_UARTNewLine 0014  
                                              _Timer0_Init 385A  
                                           ?_initialize_RX 0001  
                                           ?_initialize_TX 0001  
                                                  __Lparam 0000  
                                                  ___aodiv 2836  
                                                  ___fladd 1B6E  
                                                  ___aomod 2C32  
                                                  ___flmul 17EC  
                                                  ___flsub 3546  
                                                  ___fltol 2E46  
                                          __size_of___wmul 002A  
                                                  ___lodiv 2D6A  
                                                  ___lomod 30A6  
                                                ?_vfprintf 0072  
                                             __psmallconst 0600  
                                           _UARTSendString 361C  
                                                  __pcinit 36A2  
                                                  __ramtop 0600  
                                                  __ptext0 3908  
                                                  __ptext1 34F8  
                                                  __ptext2 3590  
                                                  __ptext3 33A2  
                                                  __ptext4 3342  
                                                  __ptext5 064C  
                                                  __ptext6 211C  
                                                  __ptext7 33F8  
                                                  __ptext8 3756  
                                                  __ptext9 378E  
                                                ?_write_op 0001  
                                                  _getchar 38E8  
                                                _T0CONbits 000FD5  
                                          __size_of_strlen 0032  
                                             __size_of_abs 003C  
                                             __size_of_pad 00AA  
                                                  _isalpha 36DE  
                                                  _isdigit 37C6  
                                               ??___xxtofl 0005  
                                                  _islower 3756  
                                                  _isspace 35D8  
                                                  _isupper 378E  
                                                  fgetc@fp 0003  
                                                  _time_ms 0089  
                                                  atoi@neg 000E  
                                                  _sprintf 33A2  
                                               ??_get_temp 0034  
                                                  _strncmp 2FE4  
                                                  _toupper 33F8  
                                     end_of_initialization 36D0  
                                           ??_UARTSendChar 0001  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                        __end_of_timingISR 0034  
                                        __end_of_vfpfcnvrt 17EC  
                                                _RCSTAbits 000FAB  
                                   __end_of_UARTSendString 3660  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                  __size_of_initialize_PWM 0018  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                               ??_vfprintf 0078  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                                _PORTCbits 000F82  
                                               ??_write_op 0002  
                                              ___fladd@grs 0010  
                                            ___xxtofl@sign 0009  
                                                _TRISCbits 000F94  
                                        _Timer0_StartTimer 391C  
                                        __size_of_ADC_Init 000E  
                                        __size_of_ADC_Read 0054  
                                       ?_Timer0_StartTimer 0001  
                                              ___flmul@grs 001C  
                                                _TXSTAbits 000FAC  
                                          ??_initialize_RX 0001  
                                          ??_initialize_TX 0001  
                                      ??_Timer0_StartTimer 0001  
                                             write_op@data 0001  
                                          ?_UARTSendString 00DB  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 0057  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 005F  
                                           __end_of___wmul 385A  
                                              vfpfcnvrt@vp 0067  
                                __end_of_Timer0_StartTimer 3924  
                                           __end_of_strlen 3830  
                                      start_initialization 36A2  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 3756  
                                              __end_of_pad 32B8  
                                              vfprintf@fmt 0074  
                                                 ??___wmul 0005  
                                              __pdataBANK0 00DF  
                                     __end_of_UARTSendChar 38E8  
                              __end_ofi2_Timer0_StartTimer 392C  
                                                 ??_strlen 0003  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                                ___flmul@a 0013  
                                                ___flmul@b 000F  
                                              __pbssCOMRAM 007E  
                                                ___flsub@a 002C  
                                                ___flsub@b 0028  
                                            __pcstackBANK0 00BB  
                                         ___aodiv@dividend 0001  
                                        __size_of___xxtofl 015C  
                                            ??_int_to_char 007E  
                                        __size_of_get_temp 00CA  
                                                _atoi$1786 0010  
                                                _atoi$1787 0014  
                                                _atoi$1788 0012  
                                             ?_Timer0_Init 0001  
                                                _dtoa$1140 002E  
                                            UARTSendChar@c 0001  
                                           _initialize_PWM 3880  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flmul 000F  
                                                 ?___flsub 0028  
                                                 ?___fltol 003E  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                      get_temp@adc_voltage 003C  
                                        __size_of_vfprintf 0060  
                                                 ?_getchar 0001  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                               __size_of_Timer0_StartTimer 0008  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 _ADC_Init 38FA  
                                                 _ADC_Read 34A4  
                                        __size_of_write_op 004E  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fgetc 008A  
                                           __size_of_getch 000A  
                                                 ?_sprintf 00BB  
                                           __size_of_fputc 00AC  
                                           __size_of_fputs 0042  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                            ??_UARTNewLine 0002  
                                           ___wmul@product 0005  
                                          UARTSendString@c 00DB  
                                          UARTSendString@i 00DD  
                                   __end_of_initialize_PWM 3898  
                                      __end_of_int_to_char 35D8  
                                                 _GO_nDONE 007E12  
                                                 _RCONbits 000FD0  
                                                _time_ms_2 0085  
                                                _timingISR 0008  
                                                _vfpfcnvrt 064C  
                                                _xtoa$1176 002F  
                                                _xtoa$1177 0031  
                                        ___wmul@multiplier 0001  
                                             _isspace$1823 0007  
                                               vfpfcnvrt@c 0069  
                                              _INTCON2bits 000FF1  
                                                copy_data0 36B6  
                                         ??_UARTSendString 007E  
                                          ?_initialize_PWM 0001  
                                                 __Hrparam 0000  
                                    __size_of_UARTSendChar 0014  
                                               vfprintf@ap 0076  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0072  
                                      __end_of_UARTNewLine 38D4  
                                               ?_timingISR 0001  
                                         __size_of___aodiv 015C  
                                         __size_of___fladd 0344  
                                         __size_of___aomod 0138  
                                         __size_of___flmul 0382  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 00D4  
                                         __size_of___lodiv 00DC  
                                         __size_of___lomod 00BC  
                                               ?_vfpfcnvrt 0043  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_getchar 0012  
                                               sprintf@fmt 00BD  
                                                 ___xxtofl 2992  
                                         __size_of_isalpha 003C  
                                         __size_of_isdigit 0038  
                                         __size_of_islower 0038  
                                         __size_of_isspace 0044  
                                                 __ptext10 36DE  
                                                 __ptext11 2374  
                                                 __ptext20 2836  
                                                 __ptext12 30A6  
                                                 __ptext21 344E  
                                                 __ptext13 2D6A  
                                                 __ptext30 3830  
                                                 __ptext22 320E  
                                                 __ptext14 2FE4  
                                                 __ptext31 38E8  
                                                 __ptext23 37FE  
                                                 __ptext15 2AEE  
                                                 __ptext40 1B6E  
                                                 __ptext32 32B8  
                                                 __ptext24 3660  
                                                 __ptext16 2536  
                                                 __ptext41 17EC  
                                                 __ptext33 3912  
                                                 __ptext25 3162  
                                                 __ptext17 1EB2  
                                                 __ptext42 34A4  
                                                 __ptext34 3898  
                                                 __ptext26 3934  
                                                 __ptext18 371A  
                                                 __ptext51 3924  
                                                 __ptext43 38FA  
                                                 __ptext35 38AC  
                                                 __ptext27 26D0  
                                                 __ptext19 2C32  
                                                 __ptext44 2E46  
                                                 __ptext36 3880  
                                                 __ptext28 35D8  
                                                 __ptext45 361C  
                                                 __ptext37 2F1A  
                                                 __ptext29 37C6  
                                                 __ptext46 38C0  
                                                 __ptext38 2992  
                                                 __ptext47 38D4  
                                                 __ptext39 3546  
                                                 __ptext48 391C  
                                                 __ptext49 385A  
                                         __size_of_isupper 0038  
                                                 _get_temp 2F1A  
                                         __size_of_sprintf 0056  
                                         __size_of_strncmp 00C2  
                                         __size_of_toupper 0056  
                                          _interval_events 0097  
                                             _UARTSendChar 38D4  
                                              _int_to_char 3590  
                                            __size_of_atoi 0166  
                                            __size_of_ctoa 0056  
                                            __size_of_main 000A  
                                            __size_of_dtoa 026A  
                                            __size_of_otoa 019A  
                                            __size_of_stoa 0144  
                                            __size_of_utoa 01C2  
                                            __size_of_xtoa 0258  
                                    __end_of_initialize_RX 38C0  
                                    __end_of_initialize_TX 38AC  
                                                stoa@F1152 00DF  
                                     __size_of_Timer0_Init 0026  
                                                 int$flags 007F  
                                                 _ungetbuf 0099  
                                                 _ungetcnt 007E  
                                                 _vfprintf 3342  
                                         ___aomod@dividend 0001  
                                                 _write_op 34F8  
                                           _vfpfcnvrt$1191 005B  
                                           _vfpfcnvrt$1192 005D  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                                 intlevel2 393A  
                                                sprintf@ap 00CB  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                              _UARTNewLine 38C0  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                              ??_timingISR 0001  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                                 sprintf@f 00C5  
                                     get_temp@real_voltage 0034  
                                                 sprintf@s 00BB  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                             __size_ofi2_Timer0_StartTimer 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                             ___aomod@sign 0012  
