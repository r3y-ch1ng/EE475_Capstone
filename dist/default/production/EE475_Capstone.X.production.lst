

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 27 23:23:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F452 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  003E7C                     __pidataBANK0:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for stoa@F1152
   113  003E7C  28                 	db	40
   114  003E7D  6E                 	db	110
   115  003E7E  75                 	db	117
   116  003E7F  6C                 	db	108
   117  003E80  6C                 	db	108
   118  003E81  29                 	db	41
   119  003E82  00                 	db	0
   120  0000                     _CCP1CON	set	4029
   121  0000                     _CCPR1L	set	4030
   122  0000                     _PR2	set	4043
   123  0000                     _T2CON	set	4042
   124  0000                     _ADRESL	set	4035
   125  0000                     _ADRESH	set	4036
   126  0000                     _ADCON0	set	4034
   127  0000                     _SSPBUF	set	4041
   128  0000                     _SSPCON1	set	4038
   129  0000                     _SSPSTATbits	set	4039
   130  0000                     _T0CON	set	4053
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR0H	set	4055
   133  0000                     _T0CONbits	set	4053
   134  0000                     _ADCON1	set	4033
   135  0000                     _RCREG1	set	4014
   136  0000                     _TXREG	set	4013
   137  0000                     _RCSTAbits	set	4011
   138  0000                     _RCSTA	set	4011
   139  0000                     _SPBRG	set	4015
   140  0000                     _TXSTAbits	set	4012
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _INTCONbits	set	4082
   143  0000                     _RCONbits	set	4048
   144  0000                     _TRISCbits	set	3988
   145  0000                     _TRISA	set	3986
   146  0000                     _PORTA	set	3968
   147  0000                     _PORTD	set	3971
   148  0000                     _PORTB	set	3969
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISC	set	3988
   152  0000                     _GO_nDONE	set	32274
   153  0000                     _TMR0IE	set	32661
   154  0000                     _TMR0IF	set	32658
   155  0000                     _RCIF	set	31989
   156  0000                     _TMR2IP	set	31993
   157  0000                     _TMR2IE	set	31977
   158  0000                     _RC0	set	31760
   159  0000                     _RB5	set	31757
   160                           
   161                           	psect	smallconst
   162  000600                     __psmallconst:
   163                           	opt callstack 0
   164  000600  00                 	db	0
   165  000601                     STR_12:
   166  000601  44                 	db	68	;'D'
   167  000602  6F                 	db	111	;'o'
   168  000603  6E                 	db	110	;'n'
   169  000604  65                 	db	101	;'e'
   170  000605  20                 	db	32
   171  000606  72                 	db	114	;'r'
   172  000607  65                 	db	101	;'e'
   173  000608  61                 	db	97	;'a'
   174  000609  64                 	db	100	;'d'
   175  00060A  69                 	db	105	;'i'
   176  00060B  6E                 	db	110	;'n'
   177  00060C  67                 	db	103	;'g'
   178  00060D  20                 	db	32
   179  00060E  66                 	db	102	;'f'
   180  00060F  72                 	db	114	;'r'
   181  000610  6F                 	db	111	;'o'
   182  000611  6D                 	db	109	;'m'
   183  000612  20                 	db	32
   184  000613  6D                 	db	109	;'m'
   185  000614  65                 	db	101	;'e'
   186  000615  6D                 	db	109	;'m'
   187  000616  6F                 	db	111	;'o'
   188  000617  72                 	db	114	;'r'
   189  000618  79                 	db	121	;'y'
   190  000619  2E                 	db	46
   191  00061A  00                 	db	0
   192  00061B                     STR_8:
   193  00061B  54                 	db	84	;'T'
   194  00061C  65                 	db	101	;'e'
   195  00061D  6D                 	db	109	;'m'
   196  00061E  70                 	db	112	;'p'
   197  00061F  65                 	db	101	;'e'
   198  000620  72                 	db	114	;'r'
   199  000621  61                 	db	97	;'a'
   200  000622  74                 	db	116	;'t'
   201  000623  75                 	db	117	;'u'
   202  000624  72                 	db	114	;'r'
   203  000625  65                 	db	101	;'e'
   204  000626  20                 	db	32
   205  000627  61                 	db	97	;'a'
   206  000628  74                 	db	116	;'t'
   207  000629  20                 	db	32
   208  00062A  61                 	db	97	;'a'
   209  00062B  64                 	db	100	;'d'
   210  00062C  64                 	db	100	;'d'
   211  00062D  72                 	db	114	;'r'
   212  00062E  65                 	db	101	;'e'
   213  00062F  73                 	db	115	;'s'
   214  000630  73                 	db	115	;'s'
   215  000631  20                 	db	32
   216  000632  00                 	db	0
   217  000633                     STR_7:
   218  000633  44                 	db	68	;'D'
   219  000634  6F                 	db	111	;'o'
   220  000635  6E                 	db	110	;'n'
   221  000636  65                 	db	101	;'e'
   222  000637  20                 	db	32
   223  000638  77                 	db	119	;'w'
   224  000639  72                 	db	114	;'r'
   225  00063A  69                 	db	105	;'i'
   226  00063B  74                 	db	116	;'t'
   227  00063C  69                 	db	105	;'i'
   228  00063D  6E                 	db	110	;'n'
   229  00063E  67                 	db	103	;'g'
   230  00063F  20                 	db	32
   231  000640  74                 	db	116	;'t'
   232  000641  6F                 	db	111	;'o'
   233  000642  20                 	db	32
   234  000643  6D                 	db	109	;'m'
   235  000644  65                 	db	101	;'e'
   236  000645  6D                 	db	109	;'m'
   237  000646  6F                 	db	111	;'o'
   238  000647  72                 	db	114	;'r'
   239  000648  79                 	db	121	;'y'
   240  000649  2E                 	db	46
   241  00064A  00                 	db	0
   242  00064B                     STR_10:
   243  00064B  54                 	db	84	;'T'
   244  00064C  69                 	db	105	;'i'
   245  00064D  6D                 	db	109	;'m'
   246  00064E  65                 	db	101	;'e'
   247  00064F  20                 	db	32
   248  000650  61                 	db	97	;'a'
   249  000651  74                 	db	116	;'t'
   250  000652  20                 	db	32
   251  000653  61                 	db	97	;'a'
   252  000654  64                 	db	100	;'d'
   253  000655  64                 	db	100	;'d'
   254  000656  72                 	db	114	;'r'
   255  000657  65                 	db	101	;'e'
   256  000658  73                 	db	115	;'s'
   257  000659  73                 	db	115	;'s'
   258  00065A  20                 	db	32
   259  00065B  00                 	db	0
   260  00065C                     STR_4:
   261  00065C  20                 	db	32
   262  00065D  74                 	db	116	;'t'
   263  00065E  6F                 	db	111	;'o'
   264  00065F  20                 	db	32
   265  000660  61                 	db	97	;'a'
   266  000661  64                 	db	100	;'d'
   267  000662  64                 	db	100	;'d'
   268  000663  72                 	db	114	;'r'
   269  000664  65                 	db	101	;'e'
   270  000665  73                 	db	115	;'s'
   271  000666  73                 	db	115	;'s'
   272  000667  20                 	db	32
   273  000668  00                 	db	0
   274  000669                     STR_3:
   275  000669  57                 	db	87	;'W'
   276  00066A  72                 	db	114	;'r'
   277  00066B  69                 	db	105	;'i'
   278  00066C  74                 	db	116	;'t'
   279  00066D  69                 	db	105	;'i'
   280  00066E  6E                 	db	110	;'n'
   281  00066F  67                 	db	103	;'g'
   282  000670  20                 	db	32
   283  000671  00                 	db	0
   284  000672                     STR_113:
   285  000672  68                 	db	104	;'h'
   286  000673  68                 	db	104	;'h'
   287  000674  58                 	db	88	;'X'
   288  000675  00                 	db	0
   289  000676                     STR_13:
   290  000676  68                 	db	104	;'h'
   291  000677  68                 	db	104	;'h'
   292  000678  64                 	db	100	;'d'
   293  000679  00                 	db	0
   294  00067A                     STR_17:
   295  00067A  68                 	db	104	;'h'
   296  00067B  68                 	db	104	;'h'
   297  00067C  69                 	db	105	;'i'
   298  00067D  00                 	db	0
   299  00067E                     STR_69:
   300  00067E  68                 	db	104	;'h'
   301  00067F  68                 	db	104	;'h'
   302  000680  6E                 	db	110	;'n'
   303  000681  00                 	db	0
   304  000682                     STR_49:
   305  000682  68                 	db	104	;'h'
   306  000683  68                 	db	104	;'h'
   307  000684  6F                 	db	111	;'o'
   308  000685  00                 	db	0
   309  000686                     STR_89:
   310  000686  68                 	db	104	;'h'
   311  000687  68                 	db	104	;'h'
   312  000688  75                 	db	117	;'u'
   313  000689  00                 	db	0
   314  00068A                     STR_109:
   315  00068A  68                 	db	104	;'h'
   316  00068B  68                 	db	104	;'h'
   317  00068C  78                 	db	120	;'x'
   318  00068D  00                 	db	0
   319  00068E                     STR_1:
   320  00068E  25                 	db	37
   321  00068F  6C                 	db	108	;'l'
   322  000690  75                 	db	117	;'u'
   323  000691  00                 	db	0
   324  000692                     STR_131:
   325  000692  6C                 	db	108	;'l'
   326  000693  58                 	db	88	;'X'
   327  000694  00                 	db	0
   328  000695                     STR_140:
   329  000695  7A                 	db	122	;'z'
   330  000696  58                 	db	88	;'X'
   331  000697  00                 	db	0
   332  000698                     STR_31:
   333  000698  6C                 	db	108	;'l'
   334  000699  64                 	db	100	;'d'
   335  00069A  00                 	db	0
   336  00069B                     STR_40:
   337  00069B  7A                 	db	122	;'z'
   338  00069C  64                 	db	100	;'d'
   339  00069D  00                 	db	0
   340  00069E                     STR_35:
   341  00069E  6C                 	db	108	;'l'
   342  00069F  69                 	db	105	;'i'
   343  0006A0  00                 	db	0
   344  0006A1                     STR_44:
   345  0006A1  7A                 	db	122	;'z'
   346  0006A2  69                 	db	105	;'i'
   347  0006A3  00                 	db	0
   348  0006A4                     STR_79:
   349  0006A4  6C                 	db	108	;'l'
   350  0006A5  6E                 	db	110	;'n'
   351  0006A6  00                 	db	0
   352  0006A7                     STR_84:
   353  0006A7  7A                 	db	122	;'z'
   354  0006A8  6E                 	db	110	;'n'
   355  0006A9  00                 	db	0
   356  0006AA                     STR_59:
   357  0006AA  6C                 	db	108	;'l'
   358  0006AB  6F                 	db	111	;'o'
   359  0006AC  00                 	db	0
   360  0006AD                     STR_64:
   361  0006AD  7A                 	db	122	;'z'
   362  0006AE  6F                 	db	111	;'o'
   363  0006AF  00                 	db	0
   364  0006B0                     STR_104:
   365  0006B0  7A                 	db	122	;'z'
   366  0006B1  75                 	db	117	;'u'
   367  0006B2  00                 	db	0
   368  0006B3                     STR_127:
   369  0006B3  6C                 	db	108	;'l'
   370  0006B4  78                 	db	120	;'x'
   371  0006B5  00                 	db	0
   372  0006B6                     STR_136:
   373  0006B6  7A                 	db	122	;'z'
   374  0006B7  78                 	db	120	;'x'
   375  0006B8  00                 	db	0
   376  0006B9                     STR_9:
   377  0006B9  3A                 	db	58	;':'
   378  0006BA  20                 	db	32
   379  0006BB  00                 	db	0
   380  0006BC  25                 	db	37
   381  0006BD  64                 	db	100	;'d'
   382  0006BE  00                 	db	0
   383  0000                     
   384                           ; #config settings
   385  0006BF  00                 	db	0	; dummy byte at the end
   386  0000                     
   387                           	psect	cinit
   388  003B6A                     __pcinit:
   389                           	opt callstack 0
   390  003B6A                     start_initialization:
   391                           	opt callstack 0
   392  003B6A                     __initialization:
   393                           	opt callstack 0
   394                           
   395                           ; Initialize objects allocated to BANK0 (7 bytes)
   396                           ; load TBLPTR registers with __pidataBANK0
   397  003B6A  0E7C               	movlw	low __pidataBANK0
   398  003B6C  6EF6               	movwf	tblptrl,c
   399  003B6E  0E3E               	movlw	high __pidataBANK0
   400  003B70  6EF7               	movwf	tblptrh,c
   401  003B72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   402  003B74  6EF8               	movwf	tblptru,c
   403  003B76  EE00  F0F4         	lfsr	0,__pdataBANK0
   404  003B7A  EE10 F007          	lfsr	1,7
   405  003B7E                     copy_data0:
   406  003B7E  0009               	tblrd		*+
   407  003B80  CFF5 FFEE          	movff	tablat,postinc0
   408  003B84  50E5               	movf	postdec1,w,c
   409  003B86  50E1               	movf	fsr1l,w,c
   410  003B88  E1FA               	bnz	copy_data0
   411                           
   412                           ; Clear objects allocated to BANK0 (59 bytes)
   413  003B8A  EE00  F080         	lfsr	0,__pbssBANK0
   414  003B8E  0E3B               	movlw	59
   415  003B90                     clear_0:
   416  003B90  6AEE               	clrf	postinc0,c
   417  003B92  06E8               	decf	wreg,f,c
   418  003B94  E1FD               	bnz	clear_0
   419                           
   420                           ; Clear objects allocated to COMRAM (1 bytes)
   421  003B96  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   422  003B98                     end_of_initialization:
   423                           	opt callstack 0
   424  003B98                     __end_of__initialization:
   425                           	opt callstack 0
   426  003B98  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   427  003B9A  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   428  003B9C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   429  003B9E  6EF8               	movwf	tblptru,c
   430  003BA0  0100               	movlb	0
   431  003BA2  EF30  F00C         	goto	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMRAM
   434  00007E                     __pbssCOMRAM:
   435                           	opt callstack 0
   436  00007E                     _ungetcnt:
   437                           	opt callstack 0
   438  00007E                     	ds	1
   439                           
   440                           	psect	bssBANK0
   441  000080                     __pbssBANK0:
   442                           	opt callstack 0
   443  000080                     _lcd:
   444                           	opt callstack 0
   445  000080                     	ds	5
   446  000085                     _time_ms_2:
   447                           	opt callstack 0
   448  000085                     	ds	4
   449  000089                     _time_ms:
   450                           	opt callstack 0
   451  000089                     	ds	4
   452  00008D                     _errno:
   453                           	opt callstack 0
   454  00008D                     	ds	2
   455  00008F                     _nout:
   456                           	opt callstack 0
   457  00008F                     	ds	2
   458  000091                     _width:
   459                           	opt callstack 0
   460  000091                     	ds	2
   461  000093                     _prec:
   462                           	opt callstack 0
   463  000093                     	ds	2
   464  000095                     _flags:
   465                           	opt callstack 0
   466  000095                     	ds	2
   467  000097                     _interval_events:
   468                           	opt callstack 0
   469  000097                     	ds	2
   470  000099                     	ds	1
   471  00009A                     _flag:
   472                           	opt callstack 0
   473  00009A                     	ds	1
   474  00009B                     _dbuf:
   475                           	opt callstack 0
   476  00009B                     	ds	32
   477                           
   478                           	psect	dataBANK0
   479  0000F4                     __pdataBANK0:
   480                           	opt callstack 0
   481  0000F4                     stoa@F1152:
   482                           	opt callstack 0
   483  0000F4                     	ds	7
   484                           
   485                           	psect	cstackBANK0
   486  0000BB                     __pcstackBANK0:
   487                           	opt callstack 0
   488  0000BB                     ?_sprintf:
   489                           	opt callstack 0
   490  0000BB                     sprintf@s:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x0
   494  0000BB                     	ds	2
   495  0000BD                     sprintf@fmt:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499  0000BD                     	ds	8
   500  0000C5                     sprintf@f:
   501                           	opt callstack 0
   502                           
   503                           ; 6 bytes @ 0xA
   504  0000C5                     	ds	6
   505  0000CB                     sprintf@ap:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x10
   509  0000CB                     	ds	2
   510  0000CD                     int_to_char@result:
   511                           	opt callstack 0
   512                           
   513                           ; 10 bytes @ 0x12
   514  0000CD                     	ds	10
   515  0000D7                     int_to_char@the_num:
   516                           	opt callstack 0
   517                           
   518                           ; 4 bytes @ 0x1C
   519  0000D7                     	ds	4
   520  0000DB                     UARTSendString@c:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x20
   524  0000DB                     	ds	2
   525  0000DD                     ??_UARTSendString:
   526                           
   527                           ; 1 bytes @ 0x22
   528  0000DD                     	ds	2
   529  0000DF                     UARTSendString@i:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x24
   533  0000DF                     	ds	2
   534  0000E1                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x26
   537  0000E1                     	ds	4
   538  0000E5                     _main$2172:
   539                           	opt callstack 0
   540                           
   541                           ; 4 bytes @ 0x2A
   542  0000E5                     	ds	4
   543  0000E9                     main@stored_temp:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x2E
   547  0000E9                     	ds	2
   548  0000EB                     main@time_elapsed:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x30
   552  0000EB                     	ds	2
   553  0000ED                     main@temperature:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x32
   557  0000ED                     	ds	2
   558  0000EF                     main@curr_time:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x34
   562  0000EF                     	ds	2
   563  0000F1                     main@input:
   564                           	opt callstack 0
   565                           
   566                           ; 1 bytes @ 0x36
   567  0000F1                     	ds	1
   568  0000F2                     main@address:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x37
   572  0000F2                     	ds	2
   573                           
   574                           	psect	cstackCOMRAM
   575  000001                     __pcstackCOMRAM:
   576                           	opt callstack 0
   577  000001                     ??_UARTRecieveChar:
   578  000001                     ?_ADC_Read:
   579                           	opt callstack 0
   580  000001                     ?_strlen:
   581                           	opt callstack 0
   582  000001                     ?_isupper:
   583                           	opt callstack 0
   584  000001                     ?_isalpha:
   585                           	opt callstack 0
   586  000001                     ?_isdigit:
   587                           	opt callstack 0
   588  000001                     ?_strncmp:
   589                           	opt callstack 0
   590  000001                     ?_isspace:
   591                           	opt callstack 0
   592  000001                     ?_getch:
   593                           	opt callstack 0
   594  000001                     ?_islower:
   595                           	opt callstack 0
   596  000001                     ?___wmul:
   597                           	opt callstack 0
   598  000001                     ?___fladd:
   599                           	opt callstack 0
   600  000001                     ?___lldiv:
   601                           	opt callstack 0
   602  000001                     ?___xxtofl:
   603                           	opt callstack 0
   604  000001                     ?___aodiv:
   605                           	opt callstack 0
   606  000001                     ?___aomod:
   607                           	opt callstack 0
   608  000001                     ?___lodiv:
   609                           	opt callstack 0
   610  000001                     ?___lomod:
   611                           	opt callstack 0
   612  000001                     write_op@data:
   613                           	opt callstack 0
   614  000001                     read_op@address:
   615                           	opt callstack 0
   616  000001                     UARTSendChar@c:
   617                           	opt callstack 0
   618  000001                     set_duty_cycle@lower_2:
   619                           	opt callstack 0
   620  000001                     initialize_PWM@freq:
   621                           	opt callstack 0
   622  000001                     ___wmul@multiplier:
   623                           	opt callstack 0
   624  000001                     isalpha@c:
   625                           	opt callstack 0
   626  000001                     isdigit@c:
   627                           	opt callstack 0
   628  000001                     isspace@c:
   629                           	opt callstack 0
   630  000001                     isupper@c:
   631                           	opt callstack 0
   632  000001                     fputc@c:
   633                           	opt callstack 0
   634  000001                     strlen@s:
   635                           	opt callstack 0
   636  000001                     strncmp@_l:
   637                           	opt callstack 0
   638  000001                     islower@c:
   639                           	opt callstack 0
   640  000001                     ___lldiv@dividend:
   641                           	opt callstack 0
   642  000001                     ___fladd@b:
   643                           	opt callstack 0
   644  000001                     ___xxtofl@val:
   645                           	opt callstack 0
   646  000001                     ___aodiv@dividend:
   647                           	opt callstack 0
   648  000001                     ___aomod@dividend:
   649                           	opt callstack 0
   650  000001                     ___lodiv@dividend:
   651                           	opt callstack 0
   652  000001                     ___lomod@dividend:
   653                           	opt callstack 0
   654                           
   655                           ; 8 bytes @ 0x0
   656  000001                     	ds	1
   657  000002                     write_op@address:
   658                           	opt callstack 0
   659  000002                     read_op@result:
   660                           	opt callstack 0
   661  000002                     set_duty_cycle@upper_8:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x1
   665  000002                     	ds	1
   666  000003                     ??_ADC_Read:
   667  000003                     ??_isupper:
   668  000003                     ??_isalpha:
   669  000003                     ??_isdigit:
   670  000003                     ??_isspace:
   671  000003                     ??_islower:
   672  000003                     ?_fgetc:
   673                           	opt callstack 0
   674  000003                     set_duty_cycle@mask:
   675                           	opt callstack 0
   676  000003                     ___wmul@multiplicand:
   677                           	opt callstack 0
   678  000003                     fputc@fp:
   679                           	opt callstack 0
   680  000003                     fgetc@fp:
   681                           	opt callstack 0
   682  000003                     strlen@a:
   683                           	opt callstack 0
   684  000003                     strncmp@_r:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688  000003                     	ds	2
   689  000005                     ??_fputc:
   690  000005                     ??_fgetc:
   691  000005                     ??___xxtofl:
   692  000005                     ADC_Read@channel:
   693                           	opt callstack 0
   694  000005                     ___wmul@product:
   695                           	opt callstack 0
   696  000005                     strncmp@n:
   697                           	opt callstack 0
   698  000005                     ___lldiv@divisor:
   699                           	opt callstack 0
   700  000005                     ___fladd@a:
   701                           	opt callstack 0
   702                           
   703                           ; 4 bytes @ 0x4
   704  000005                     	ds	2
   705  000007                     ??_strncmp:
   706  000007                     ?_toupper:
   707                           	opt callstack 0
   708  000007                     _isspace$1767:
   709                           	opt callstack 0
   710  000007                     toupper@c:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x6
   714  000007                     	ds	1
   715  000008                     ?_atoi:
   716                           	opt callstack 0
   717  000008                     atoi@s:
   718                           	opt callstack 0
   719  000008                     strncmp@l:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x7
   723  000008                     	ds	1
   724  000009                     ??_toupper:
   725  000009                     ??___fladd:
   726  000009                     ___xxtofl@sign:
   727                           	opt callstack 0
   728  000009                     ___lldiv@quotient:
   729                           	opt callstack 0
   730  000009                     ___aodiv@divisor:
   731                           	opt callstack 0
   732  000009                     ___aomod@divisor:
   733                           	opt callstack 0
   734  000009                     ___lodiv@divisor:
   735                           	opt callstack 0
   736  000009                     ___lomod@divisor:
   737                           	opt callstack 0
   738                           
   739                           ; 8 bytes @ 0x8
   740  000009                     	ds	1
   741  00000A                     ??_atoi:
   742  00000A                     ?_stoa:
   743                           	opt callstack 0
   744  00000A                     ___xxtofl@exp:
   745                           	opt callstack 0
   746  00000A                     stoa@fp:
   747                           	opt callstack 0
   748  00000A                     fputs@s:
   749                           	opt callstack 0
   750  00000A                     fgetc@c:
   751                           	opt callstack 0
   752  00000A                     strncmp@r:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x9
   756  00000A                     	ds	1
   757  00000B                     ___xxtofl@arg:
   758                           	opt callstack 0
   759                           
   760                           ; 4 bytes @ 0xA
   761  00000B                     	ds	1
   762  00000C                     stoa@s:
   763                           	opt callstack 0
   764  00000C                     fputs@fp:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0xB
   768  00000C                     	ds	1
   769  00000D                     ___lldiv@counter:
   770                           	opt callstack 0
   771  00000D                     ___fladd@signs:
   772                           	opt callstack 0
   773  00000D                     _toupper$1887:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0xC
   777  00000D                     	ds	1
   778  00000E                     ??_stoa:
   779  00000E                     ___fladd@aexp:
   780                           	opt callstack 0
   781  00000E                     fputs@c:
   782                           	opt callstack 0
   783  00000E                     atoi@neg:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0xD
   787  00000E                     	ds	1
   788  00000F                     ?___flmul:
   789                           	opt callstack 0
   790  00000F                     ___fladd@bexp:
   791                           	opt callstack 0
   792  00000F                     fputs@i:
   793                           	opt callstack 0
   794  00000F                     ___flmul@b:
   795                           	opt callstack 0
   796  00000F                     stoa@nuls:
   797                           	opt callstack 0
   798                           
   799                           ; 7 bytes @ 0xE
   800  00000F                     	ds	1
   801  000010                     ___fladd@grs:
   802                           	opt callstack 0
   803  000010                     _atoi$1730:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0xF
   807  000010                     	ds	1
   808  000011                     ?_pad:
   809                           	opt callstack 0
   810  000011                     ___aodiv@counter:
   811                           	opt callstack 0
   812  000011                     ___aomod@counter:
   813                           	opt callstack 0
   814  000011                     ___lomod@counter:
   815                           	opt callstack 0
   816  000011                     pad@fp:
   817                           	opt callstack 0
   818  000011                     ___lodiv@quotient:
   819                           	opt callstack 0
   820                           
   821                           ; 8 bytes @ 0x10
   822  000011                     	ds	1
   823  000012                     ___aodiv@sign:
   824                           	opt callstack 0
   825  000012                     ___aomod@sign:
   826                           	opt callstack 0
   827  000012                     _atoi$1732:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x11
   831  000012                     	ds	1
   832  000013                     ?_abs:
   833                           	opt callstack 0
   834  000013                     pad@buf:
   835                           	opt callstack 0
   836  000013                     abs@a:
   837                           	opt callstack 0
   838  000013                     ___flmul@a:
   839                           	opt callstack 0
   840  000013                     ___aodiv@quotient:
   841                           	opt callstack 0
   842                           
   843                           ; 8 bytes @ 0x12
   844  000013                     	ds	1
   845  000014                     _atoi$1731:
   846                           	opt callstack 0
   847                           
   848                           ; 1 bytes @ 0x13
   849  000014                     	ds	1
   850  000015                     ??_abs:
   851  000015                     pad@p:
   852                           	opt callstack 0
   853  000015                     atoi@n:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x14
   857  000015                     	ds	1
   858  000016                     stoa@i:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x15
   862  000016                     	ds	1
   863  000017                     ??___flmul:
   864  000017                     ??_pad:
   865                           
   866                           ; 1 bytes @ 0x16
   867  000017                     	ds	1
   868  000018                     pad@i:
   869                           	opt callstack 0
   870  000018                     stoa@w:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x17
   874  000018                     	ds	1
   875  000019                     ___lodiv@counter:
   876                           	opt callstack 0
   877                           
   878                           ; 1 bytes @ 0x18
   879  000019                     	ds	1
   880  00001A                     pad@w:
   881                           	opt callstack 0
   882  00001A                     stoa@cp:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x19
   886  00001A                     	ds	1
   887  00001B                     ___flmul@sign:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x1A
   891  00001B                     	ds	1
   892  00001C                     ?_ctoa:
   893                           	opt callstack 0
   894  00001C                     ?_dtoa:
   895                           	opt callstack 0
   896  00001C                     ?_otoa:
   897                           	opt callstack 0
   898  00001C                     ?_utoa:
   899                           	opt callstack 0
   900  00001C                     ?_xtoa:
   901                           	opt callstack 0
   902  00001C                     ctoa@fp:
   903                           	opt callstack 0
   904  00001C                     dtoa@fp:
   905                           	opt callstack 0
   906  00001C                     otoa@fp:
   907                           	opt callstack 0
   908  00001C                     stoa@p:
   909                           	opt callstack 0
   910  00001C                     utoa@fp:
   911                           	opt callstack 0
   912  00001C                     xtoa@fp:
   913                           	opt callstack 0
   914  00001C                     ___flmul@grs:
   915                           	opt callstack 0
   916                           
   917                           ; 4 bytes @ 0x1B
   918  00001C                     	ds	2
   919  00001E                     ctoa@c:
   920                           	opt callstack 0
   921  00001E                     stoa@l:
   922                           	opt callstack 0
   923  00001E                     dtoa@d:
   924                           	opt callstack 0
   925  00001E                     otoa@d:
   926                           	opt callstack 0
   927  00001E                     utoa@d:
   928                           	opt callstack 0
   929  00001E                     xtoa@d:
   930                           	opt callstack 0
   931                           
   932                           ; 8 bytes @ 0x1D
   933  00001E                     	ds	1
   934  00001F                     ctoa@w:
   935                           	opt callstack 0
   936                           
   937                           ; 2 bytes @ 0x1E
   938  00001F                     	ds	1
   939  000020                     ___flmul@aexp:
   940                           	opt callstack 0
   941                           
   942                           ; 1 bytes @ 0x1F
   943  000020                     	ds	1
   944  000021                     ___flmul@bexp:
   945                           	opt callstack 0
   946                           
   947                           ; 1 bytes @ 0x20
   948  000021                     	ds	1
   949  000022                     ___flmul@prod:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x21
   953  000022                     	ds	4
   954  000026                     ??_dtoa:
   955  000026                     ??_otoa:
   956  000026                     ??_utoa:
   957  000026                     xtoa@x:
   958                           	opt callstack 0
   959  000026                     ___flmul@temp:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x25
   963  000026                     	ds	1
   964  000027                     ??_xtoa:
   965                           
   966                           ; 1 bytes @ 0x26
   967  000027                     	ds	1
   968  000028                     ?___flsub:
   969                           	opt callstack 0
   970  000028                     ___flsub@b:
   971                           	opt callstack 0
   972                           
   973                           ; 4 bytes @ 0x27
   974  000028                     	ds	4
   975  00002C                     ___flsub@a:
   976                           	opt callstack 0
   977                           
   978                           ; 4 bytes @ 0x2B
   979  00002C                     	ds	2
   980  00002E                     _dtoa$1084:
   981                           	opt callstack 0
   982  00002E                     otoa@p:
   983                           	opt callstack 0
   984  00002E                     utoa@p:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x2D
   988  00002E                     	ds	1
   989  00002F                     _xtoa$1120:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x2E
   993  00002F                     	ds	1
   994  000030                     ?_get_temp:
   995                           	opt callstack 0
   996  000030                     dtoa@p:
   997                           	opt callstack 0
   998  000030                     otoa@t:
   999                           	opt callstack 0
  1000  000030                     utoa@w:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x2F
  1004  000030                     	ds	1
  1005  000031                     _xtoa$1121:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x30
  1009  000031                     	ds	1
  1010  000032                     dtoa@w:
  1011                           	opt callstack 0
  1012  000032                     otoa@w:
  1013                           	opt callstack 0
  1014  000032                     utoa@n:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 8 bytes @ 0x31
  1018  000032                     	ds	1
  1019  000033                     xtoa@p:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x32
  1023  000033                     	ds	1
  1024  000034                     dtoa@s:
  1025                           	opt callstack 0
  1026  000034                     get_temp@real_voltage:
  1027                           	opt callstack 0
  1028  000034                     otoa@n:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x33
  1032  000034                     	ds	1
  1033  000035                     xtoa@w:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x34
  1037  000035                     	ds	1
  1038  000036                     dtoa@n:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 8 bytes @ 0x35
  1042  000036                     	ds	1
  1043  000037                     xtoa@n:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 8 bytes @ 0x36
  1047  000037                     	ds	1
  1048  000038                     get_temp@temp:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x37
  1052  000038                     	ds	2
  1053  00003A                     utoa@i:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x39
  1057  00003A                     	ds	2
  1058  00003C                     get_temp@adc_voltage:
  1059                           	opt callstack 0
  1060  00003C                     otoa@i:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x3B
  1064  00003C                     	ds	2
  1065  00003E                     ?___fltol:
  1066                           	opt callstack 0
  1067  00003E                     dtoa@i:
  1068                           	opt callstack 0
  1069  00003E                     ___fltol@f1:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x3D
  1073  00003E                     	ds	1
  1074  00003F                     xtoa@i:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x3E
  1078  00003F                     	ds	2
  1079  000041                     xtoa@c:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x40
  1083  000041                     	ds	1
  1084  000042                     ??___fltol:
  1085                           
  1086                           ; 1 bytes @ 0x41
  1087  000042                     	ds	1
  1088  000043                     ?_vfpfcnvrt:
  1089                           	opt callstack 0
  1090  000043                     vfpfcnvrt@fp:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x42
  1094  000043                     	ds	2
  1095  000045                     vfpfcnvrt@fmt:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x44
  1099  000045                     	ds	1
  1100  000046                     ___fltol@sign1:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x45
  1104  000046                     	ds	1
  1105  000047                     ___fltol@exp1:
  1106                           	opt callstack 0
  1107  000047                     vfpfcnvrt@ap:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x46
  1111  000047                     	ds	2
  1112  000049                     ??_vfpfcnvrt:
  1113                           
  1114                           ; 1 bytes @ 0x48
  1115  000049                     	ds	14
  1116  000057                     vfpfcnvrt@cp:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x56
  1120  000057                     	ds	2
  1121  000059                     vfpfcnvrt@done:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x58
  1125  000059                     	ds	2
  1126  00005B                     _vfpfcnvrt$1135:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x5A
  1130  00005B                     	ds	2
  1131  00005D                     _vfpfcnvrt$1136:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x5C
  1135  00005D                     	ds	2
  1136  00005F                     vfpfcnvrt@ll:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 8 bytes @ 0x5E
  1140  00005F                     	ds	8
  1141  000067                     vfpfcnvrt@vp:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x66
  1145  000067                     	ds	2
  1146  000069                     vfpfcnvrt@c:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x68
  1150  000069                     	ds	1
  1151  00006A                     vfpfcnvrt@llu:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 8 bytes @ 0x69
  1155  00006A                     	ds	8
  1156  000072                     ?_vfprintf:
  1157                           	opt callstack 0
  1158  000072                     vfprintf@fp:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x71
  1162  000072                     	ds	2
  1163  000074                     vfprintf@fmt:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x73
  1167  000074                     	ds	2
  1168  000076                     vfprintf@ap:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x75
  1172  000076                     	ds	2
  1173  000078                     vfprintf@cfmt:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x77
  1177  000078                     	ds	2
  1178  00007A                     ?_int_to_char:
  1179                           	opt callstack 0
  1180  00007A                     int_to_char@num:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x79
  1184  00007A                     	ds	4
  1185  00007E                     
  1186                           ; 1 bytes @ 0x7D
  1187 ;;
  1188 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1189 ;;
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 26 in file "main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  curr_time       2   52[BANK0 ] int 
  1197 ;;  time_elapsed    2   48[BANK0 ] int 
  1198 ;;  input           1   54[BANK0 ] unsigned char 
  1199 ;;  address         2   55[BANK0 ] int 
  1200 ;;  temperature     2   50[BANK0 ] int 
  1201 ;;  stored_temp     2   46[BANK0 ] int 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1211 ;;      Params:         0       0       0       0       0       0       0
  1212 ;;      Locals:         0      15       0       0       0       0       0
  1213 ;;      Temps:          0       4       0       0       0       0       0
  1214 ;;      Totals:         0      19       0       0       0       0       0
  1215 ;;Total ram usage:       19 bytes
  1216 ;; Hardware stack levels required when called:   11
  1217 ;; This function calls:
  1218 ;;		_Timer0_Init
  1219 ;;		_Timer0_StartTimer
  1220 ;;		_UARTNewLine
  1221 ;;		_UARTRecieveChar
  1222 ;;		_UARTSendString
  1223 ;;		___fltol
  1224 ;;		___lldiv
  1225 ;;		_get_temp
  1226 ;;		_initialize_PWM
  1227 ;;		_initialize_RX
  1228 ;;		_initialize_TX
  1229 ;;		_int_to_char
  1230 ;;		_read_op
  1231 ;;		_set_duty_cycle
  1232 ;;		_write_op
  1233 ;; This function is called by:
  1234 ;;		Startup code after reset
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text0
  1239  001860                     __ptext0:
  1240                           	opt callstack 0
  1241  001860                     _main:
  1242                           	opt callstack 0
  1243  001860  FFFF               	dw	65535	; assembler added errata NOP
  1244                           
  1245                           ;main.c: 27:   TRISCbits.TRISC2 = 0;
  1246                           
  1247                           ;incstack = 0
  1248  001862  9494               	bcf	3988,2,c	;volatile
  1249                           
  1250                           ;main.c: 28:   TMR2IE = 1;
  1251  001864  829D               	bsf	3997,1,c	;volatile
  1252                           
  1253                           ;main.c: 29:   TMR2IP = 1;
  1254  001866  829F               	bsf	3999,1,c	;volatile
  1255                           
  1256                           ;main.c: 30:   RCONbits.IPEN = 1;
  1257  001868  8ED0               	bsf	4048,7,c	;volatile
  1258                           
  1259                           ;main.c: 31:   initialize_PWM(0xFF);
  1260  00186A  0E00               	movlw	0
  1261  00186C  6E02               	movwf	initialize_PWM@freq+1,c
  1262  00186E  6801               	setf	initialize_PWM@freq,c
  1263  001870  ECED  F01E         	call	_initialize_PWM	;wreg free
  1264                           
  1265                           ;main.c: 32:   set_duty_cycle(0xA0, 0x03);
  1266  001874  0E03               	movlw	3
  1267  001876  6E01               	movwf	set_duty_cycle@lower_2,c
  1268  001878  0EA0               	movlw	160
  1269  00187A  ECCB  F01E         	call	_set_duty_cycle
  1270                           
  1271                           ;main.c: 33:   int address = 0;
  1272  00187E  0E00               	movlw	0
  1273  001880  0100               	movlb	0	; () banked
  1274  001882  6FF3               	movwf	(main@address+1)& (0+255),b
  1275  001884  0E00               	movlw	0
  1276  001886  6FF2               	movwf	main@address& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;main.c: 34:   int temperature;;main.c: 35:   int stored_temp;;main.c: 36:   Timer0_Init
      +                          ();
  1280  001888  ECA7  F01E         	call	_Timer0_Init	;wreg free
  1281                           
  1282                           ;main.c: 37:   Timer0_StartTimer();
  1283  00188C  EC36  F01F         	call	_Timer0_StartTimer	;wreg free
  1284                           
  1285                           ;main.c: 38:   initialize_TX();
  1286  001890  ECF9  F01E         	call	_initialize_TX	;wreg free
  1287                           
  1288                           ;main.c: 39:   initialize_RX();
  1289  001894  EC03  F01F         	call	_initialize_RX	;wreg free
  1290                           
  1291                           ;main.c: 40:   TRISCbits.TRISC7 = 1;
  1292  001898  8E94               	bsf	3988,7,c	;volatile
  1293                           
  1294                           ;main.c: 41:   TRISCbits.TRISC6 = 0;
  1295  00189A  9C94               	bcf	3988,6,c	;volatile
  1296  00189C                     l5112:
  1297  00189C  FFFF               	dw	65535	; assembler added errata NOP
  1298                           
  1299                           ;main.c: 43:     TRISCbits.TRISC7 = 1;
  1300  00189E  8E94               	bsf	3988,7,c	;volatile
  1301                           
  1302                           ;main.c: 44:     char input = ' ';
  1303  0018A0  0E20               	movlw	32
  1304  0018A2  D003               	goto	L1
  1305  0018A4                     l5116:
  1306  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;main.c: 46:       input = UARTRecieveChar();
  1310  0018A6  EC7C  F01E         	call	_UARTRecieveChar	;wreg free
  1311  0018AA                     L1:
  1312  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  1313  0018AC  0100               	movlb	0	; () banked
  1314  0018AE  6FF1               	movwf	main@input& (0+255),b
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 45:     while (input < 'a' || input > 'z') {
  1318  0018B0  0E60               	movlw	96
  1319  0018B2  65F1               	cpfsgt	main@input& (0+255),b
  1320  0018B4  D7F7               	goto	l5116
  1321                           
  1322                           ; BSR set to: 0
  1323  0018B6  0E7B               	movlw	123
  1324  0018B8  61F1               	cpfslt	main@input& (0+255),b
  1325  0018BA  D7F4               	goto	l5116
  1326  0018BC  D1A8               	goto	l5198
  1327  0018BE                     l149:
  1328  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 50:       TRISCbits.TRISC7 = 0;
  1332  0018C0  9E94               	bcf	3988,7,c	;volatile
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 51:       temperature = (int) get_temp();
  1336  0018C2  ECAE  F019         	call	_get_temp	;wreg free
  1337  0018C6  C030  F03E         	movff	?_get_temp,___fltol@f1
  1338  0018CA  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1339  0018CE  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1340  0018D2  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1341  0018D6  EC44  F019         	call	___fltol	;wreg free
  1342  0018DA  C03E  F0ED         	movff	?___fltol,main@temperature
  1343  0018DE  C03F  F0EE         	movff	?___fltol+1,main@temperature+1
  1344                           
  1345                           ;main.c: 52:       int curr_time = (time_ms/60/1000);
  1346  0018E2  0E3C               	movlw	60
  1347  0018E4  6E05               	movwf	___lldiv@divisor,c
  1348  0018E6  0E00               	movlw	0
  1349  0018E8  6E06               	movwf	___lldiv@divisor+1,c
  1350  0018EA  0E00               	movlw	0
  1351  0018EC  6E07               	movwf	___lldiv@divisor+2,c
  1352  0018EE  0E00               	movlw	0
  1353  0018F0  6E08               	movwf	___lldiv@divisor+3,c
  1354  0018F2  C089  F001         	movff	_time_ms,___lldiv@dividend	;volatile
  1355  0018F6  C08A  F002         	movff	_time_ms+1,___lldiv@dividend+1	;volatile
  1356  0018FA  C08B  F003         	movff	_time_ms+2,___lldiv@dividend+2	;volatile
  1357  0018FE  C08C  F004         	movff	_time_ms+3,___lldiv@dividend+3	;volatile
  1358  001902  EC7D  F01B         	call	___lldiv	;wreg free
  1359  001906  C001  F0E5         	movff	?___lldiv,_main$2172
  1360  00190A  C002  F0E6         	movff	?___lldiv+1,_main$2172+1
  1361  00190E  C003  F0E7         	movff	?___lldiv+2,_main$2172+2
  1362  001912  C004  F0E8         	movff	?___lldiv+3,_main$2172+3
  1363                           
  1364                           ;main.c: 52:       int curr_time = (time_ms/60/1000);
  1365  001916  C0E5  F001         	movff	_main$2172,___lldiv@dividend
  1366  00191A  C0E6  F002         	movff	_main$2172+1,___lldiv@dividend+1
  1367  00191E  C0E7  F003         	movff	_main$2172+2,___lldiv@dividend+2
  1368  001922  C0E8  F004         	movff	_main$2172+3,___lldiv@dividend+3
  1369  001926  0EE8               	movlw	232
  1370  001928  6E05               	movwf	___lldiv@divisor,c
  1371  00192A  0E03               	movlw	3
  1372  00192C  6E06               	movwf	___lldiv@divisor+1,c
  1373  00192E  0E00               	movlw	0
  1374  001930  6E07               	movwf	___lldiv@divisor+2,c
  1375  001932  0E00               	movlw	0
  1376  001934  6E08               	movwf	___lldiv@divisor+3,c
  1377  001936  EC7D  F01B         	call	___lldiv	;wreg free
  1378  00193A  C001  F0EF         	movff	?___lldiv,main@curr_time
  1379  00193E  C002  F0F0         	movff	?___lldiv+1,main@curr_time+1
  1380                           
  1381                           ;main.c: 53:       UARTSendString("Writing ");
  1382  001942  0E69               	movlw	low STR_3
  1383  001944  0100               	movlb	0	; () banked
  1384  001946  6FDB               	movwf	UARTSendString@c& (0+255),b
  1385  001948  0E06               	movlw	high STR_3
  1386  00194A  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1387  00194C  EC0A  F01C         	call	_UARTSendString	;wreg free
  1388                           
  1389                           ;main.c: 54:       UARTSendString(int_to_char(temperature));
  1390  001950  C0ED  F07A         	movff	main@temperature,int_to_char@num
  1391  001954  C0EE  F07B         	movff	main@temperature+1,int_to_char@num+1
  1392  001958  0E00               	movlw	0
  1393  00195A  BE7B               	btfsc	int_to_char@num+1,7,c
  1394  00195C  0EFF               	movlw	-1
  1395  00195E  6E7C               	movwf	int_to_char@num+2,c
  1396  001960  6E7D               	movwf	int_to_char@num+3,c
  1397  001962  EC4E  F01D         	call	_int_to_char	;wreg free
  1398  001966  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1399  00196A  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1400  00196E  EC0A  F01C         	call	_UARTSendString	;wreg free
  1401                           
  1402                           ;main.c: 55:       UARTSendString(" to address ");
  1403  001972  0E5C               	movlw	low STR_4
  1404  001974  0100               	movlb	0	; () banked
  1405  001976  6FDB               	movwf	UARTSendString@c& (0+255),b
  1406  001978  0E06               	movlw	high STR_4
  1407  00197A  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1408  00197C  EC0A  F01C         	call	_UARTSendString	;wreg free
  1409                           
  1410                           ;main.c: 56:       UARTSendString(int_to_char(address));
  1411  001980  C0F2  F07A         	movff	main@address,int_to_char@num
  1412  001984  C0F3  F07B         	movff	main@address+1,int_to_char@num+1
  1413  001988  0E00               	movlw	0
  1414  00198A  BE7B               	btfsc	int_to_char@num+1,7,c
  1415  00198C  0EFF               	movlw	-1
  1416  00198E  6E7C               	movwf	int_to_char@num+2,c
  1417  001990  6E7D               	movwf	int_to_char@num+3,c
  1418  001992  EC4E  F01D         	call	_int_to_char	;wreg free
  1419  001996  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1420  00199A  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1421  00199E  EC0A  F01C         	call	_UARTSendString	;wreg free
  1422                           
  1423                           ;main.c: 57:       UARTNewLine();
  1424  0019A2  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1425                           
  1426                           ;main.c: 58:       write_op(address, temperature);
  1427  0019A6  C0ED  F001         	movff	main@temperature,write_op@data
  1428  0019AA  0100               	movlb	0	; () banked
  1429  0019AC  51F2               	movf	main@address& (0+255),w,b
  1430  0019AE  ECBA  F01E         	call	_write_op
  1431                           
  1432                           ;main.c: 59:       _delay((unsigned long)((100)*(16000000/4000.0)));
  1433  0019B2  0E02               	movlw	2
  1434  0019B4  0100               	movlb	0	; () banked
  1435  0019B6  6FE2               	movwf	(??_main+1)& (0+255),b
  1436  0019B8  0E86               	movlw	134
  1437  0019BA  6FE1               	movwf	??_main& (0+255),b
  1438  0019BC  0EDA               	movlw	218
  1439  0019BE                     u5417:
  1440  0019BE  FFFF               	dw	65535	; errata NOP
  1441  0019C0  2EE8               	decfsz	wreg,f,c
  1442  0019C2  D7FD               	bra	u5417
  1443  0019C4  2FE1               	decfsz	??_main& (0+255),f,b
  1444  0019C6  D7FB               	bra	u5417
  1445  0019C8  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1446  0019CA  D7F9               	bra	u5417
  1447  0019CC  D000               	nop2	
  1448  0019CE  F000               	nop	
  1449                           
  1450                           ;main.c: 60:       UARTSendString("Writing ");
  1451  0019D0  0E69               	movlw	low STR_3
  1452  0019D2  0100               	movlb	0	; () banked
  1453  0019D4  6FDB               	movwf	UARTSendString@c& (0+255),b
  1454  0019D6  0E06               	movlw	high STR_3
  1455  0019D8  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1456  0019DA  EC0A  F01C         	call	_UARTSendString	;wreg free
  1457                           
  1458                           ;main.c: 61:       UARTSendString(int_to_char(curr_time));
  1459  0019DE  C0EF  F07A         	movff	main@curr_time,int_to_char@num
  1460  0019E2  C0F0  F07B         	movff	main@curr_time+1,int_to_char@num+1
  1461  0019E6  0E00               	movlw	0
  1462  0019E8  BE7B               	btfsc	int_to_char@num+1,7,c
  1463  0019EA  0EFF               	movlw	-1
  1464  0019EC  6E7C               	movwf	int_to_char@num+2,c
  1465  0019EE  6E7D               	movwf	int_to_char@num+3,c
  1466  0019F0  EC4E  F01D         	call	_int_to_char	;wreg free
  1467  0019F4  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1468  0019F8  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1469  0019FC  EC0A  F01C         	call	_UARTSendString	;wreg free
  1470                           
  1471                           ;main.c: 62:       UARTSendString(" to address ");
  1472  001A00  0E5C               	movlw	low STR_4
  1473  001A02  0100               	movlb	0	; () banked
  1474  001A04  6FDB               	movwf	UARTSendString@c& (0+255),b
  1475  001A06  0E06               	movlw	high STR_4
  1476  001A08  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1477  001A0A  EC0A  F01C         	call	_UARTSendString	;wreg free
  1478                           
  1479                           ;main.c: 63:       UARTSendString(int_to_char(address));
  1480  001A0E  C0F2  F07A         	movff	main@address,int_to_char@num
  1481  001A12  C0F3  F07B         	movff	main@address+1,int_to_char@num+1
  1482  001A16  0E00               	movlw	0
  1483  001A18  BE7B               	btfsc	int_to_char@num+1,7,c
  1484  001A1A  0EFF               	movlw	-1
  1485  001A1C  6E7C               	movwf	int_to_char@num+2,c
  1486  001A1E  6E7D               	movwf	int_to_char@num+3,c
  1487  001A20  EC4E  F01D         	call	_int_to_char	;wreg free
  1488  001A24  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1489  001A28  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1490  001A2C  EC0A  F01C         	call	_UARTSendString	;wreg free
  1491                           
  1492                           ;main.c: 64:       UARTNewLine();
  1493  001A30  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1494                           
  1495                           ;main.c: 68:       write_op(address + 1, curr_time);
  1496  001A34  C0EF  F001         	movff	main@curr_time,write_op@data
  1497  001A38  0100               	movlb	0	; () banked
  1498  001A3A  29F2               	incf	main@address& (0+255),w,b
  1499  001A3C  ECBA  F01E         	call	_write_op
  1500                           
  1501                           ;main.c: 69:       address = (address + 2) % 16;
  1502  001A40  0E02               	movlw	2
  1503  001A42  0100               	movlb	0	; () banked
  1504  001A44  25F2               	addwf	main@address& (0+255),w,b
  1505  001A46  6FE1               	movwf	??_main& (0+255),b
  1506  001A48  0E00               	movlw	0
  1507  001A4A  21F3               	addwfc	(main@address+1)& (0+255),w,b
  1508  001A4C  6FE2               	movwf	(??_main+1)& (0+255),b
  1509  001A4E  0E0F               	movlw	15
  1510  001A50  15E1               	andwf	??_main& (0+255),w,b
  1511  001A52  6FF2               	movwf	main@address& (0+255),b
  1512  001A54  6BF3               	clrf	(main@address+1)& (0+255),b
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 70:       UARTSendString("Done writing to memory.");
  1516  001A56  0E33               	movlw	low STR_7
  1517  001A58  6FDB               	movwf	UARTSendString@c& (0+255),b
  1518  001A5A  0E06               	movlw	high STR_7
  1519  001A5C  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1520  001A5E  EC0A  F01C         	call	_UARTSendString	;wreg free
  1521                           
  1522                           ;main.c: 71:       UARTNewLine();
  1523  001A62  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1524                           
  1525                           ;main.c: 72:       _delay((unsigned long)((1000)*(16000000/4000.0)));
  1526  001A66  0E10               	movlw	16
  1527  001A68  0100               	movlb	0	; () banked
  1528  001A6A  6FE2               	movwf	(??_main+1)& (0+255),b
  1529  001A6C  0E3B               	movlw	59
  1530  001A6E  6FE1               	movwf	??_main& (0+255),b
  1531  001A70  0E99               	movlw	153
  1532  001A72                     u5427:
  1533  001A72  FFFF               	dw	65535	; errata NOP
  1534  001A74  2EE8               	decfsz	wreg,f,c
  1535  001A76  D7FD               	bra	u5427
  1536  001A78  2FE1               	decfsz	??_main& (0+255),f,b
  1537  001A7A  D7FB               	bra	u5427
  1538  001A7C  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1539  001A7E  D7F9               	bra	u5427
  1540  001A80  F000               	nop	
  1541                           
  1542                           ;main.c: 73:       break;
  1543  001A82  D70C               	goto	l5112
  1544  001A84                     l5162:
  1545  001A84  FFFF               	dw	65535	; assembler added errata NOP
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 77:       stored_temp = read_op(0);
  1549  001A86  0E00               	movlw	0
  1550  001A88  ECDC  F01E         	call	_read_op
  1551  001A8C  0100               	movlb	0	; () banked
  1552  001A8E  6FE1               	movwf	??_main& (0+255),b
  1553  001A90  51E1               	movf	??_main& (0+255),w,b
  1554  001A92  6FE9               	movwf	main@stored_temp& (0+255),b
  1555  001A94  6BEA               	clrf	(main@stored_temp+1)& (0+255),b
  1556                           
  1557                           ;main.c: 78:       int time_elapsed = read_op(1);
  1558  001A96  0E01               	movlw	1
  1559  001A98  ECDC  F01E         	call	_read_op
  1560  001A9C  0100               	movlb	0	; () banked
  1561  001A9E  6FE1               	movwf	??_main& (0+255),b
  1562  001AA0  51E1               	movf	??_main& (0+255),w,b
  1563  001AA2  6FEB               	movwf	main@time_elapsed& (0+255),b
  1564  001AA4  6BEC               	clrf	(main@time_elapsed+1)& (0+255),b
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;main.c: 79:       TRISCbits.TRISC7 = 0;
  1568  001AA6  9E94               	bcf	3988,7,c	;volatile
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 80:       UARTSendString("Temperature at address ");
  1572  001AA8  0E1B               	movlw	low STR_8
  1573  001AAA  6FDB               	movwf	UARTSendString@c& (0+255),b
  1574  001AAC  0E06               	movlw	high STR_8
  1575  001AAE  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1576  001AB0  EC0A  F01C         	call	_UARTSendString	;wreg free
  1577                           
  1578                           ;main.c: 81:       UARTSendString(int_to_char(address - 2));
  1579  001AB4  0EFE               	movlw	254
  1580  001AB6  0100               	movlb	0	; () banked
  1581  001AB8  6FE1               	movwf	??_main& (0+255),b
  1582  001ABA  0EFF               	movlw	255
  1583  001ABC  6FE2               	movwf	(??_main+1)& (0+255),b
  1584  001ABE  C0F2  F0E3         	movff	main@address,??_main+2
  1585  001AC2  C0F3  F0E4         	movff	main@address+1,??_main+3
  1586  001AC6  51E1               	movf	??_main& (0+255),w,b
  1587  001AC8  27E3               	addwf	(??_main+2)& (0+255),f,b
  1588  001ACA  51E2               	movf	(??_main+1)& (0+255),w,b
  1589  001ACC  23E4               	addwfc	(??_main+3)& (0+255),f,b
  1590  001ACE  C0E3  F07A         	movff	??_main+2,int_to_char@num
  1591  001AD2  C0E4  F07B         	movff	??_main+3,int_to_char@num+1
  1592  001AD6  0E00               	movlw	0
  1593  001AD8  BE7B               	btfsc	int_to_char@num+1,7,c
  1594  001ADA  0EFF               	movlw	-1
  1595  001ADC  6E7C               	movwf	int_to_char@num+2,c
  1596  001ADE  6E7D               	movwf	int_to_char@num+3,c
  1597  001AE0  EC4E  F01D         	call	_int_to_char	;wreg free
  1598  001AE4  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1599  001AE8  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1600  001AEC  EC0A  F01C         	call	_UARTSendString	;wreg free
  1601                           
  1602                           ;main.c: 82:       UARTSendString(": ");
  1603  001AF0  0EB9               	movlw	low STR_9
  1604  001AF2  0100               	movlb	0	; () banked
  1605  001AF4  6FDB               	movwf	UARTSendString@c& (0+255),b
  1606  001AF6  0E06               	movlw	high STR_9
  1607  001AF8  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1608  001AFA  EC0A  F01C         	call	_UARTSendString	;wreg free
  1609                           
  1610                           ;main.c: 83:       UARTSendString(int_to_char(stored_temp));
  1611  001AFE  C0E9  F07A         	movff	main@stored_temp,int_to_char@num
  1612  001B02  C0EA  F07B         	movff	main@stored_temp+1,int_to_char@num+1
  1613  001B06  0E00               	movlw	0
  1614  001B08  BE7B               	btfsc	int_to_char@num+1,7,c
  1615  001B0A  0EFF               	movlw	-1
  1616  001B0C  6E7C               	movwf	int_to_char@num+2,c
  1617  001B0E  6E7D               	movwf	int_to_char@num+3,c
  1618  001B10  EC4E  F01D         	call	_int_to_char	;wreg free
  1619  001B14  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1620  001B18  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1621  001B1C  EC0A  F01C         	call	_UARTSendString	;wreg free
  1622                           
  1623                           ;main.c: 84:       UARTNewLine();
  1624  001B20  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1625                           
  1626                           ;main.c: 85:       _delay((unsigned long)((100)*(16000000/4000.0)));
  1627  001B24  0E02               	movlw	2
  1628  001B26  0100               	movlb	0	; () banked
  1629  001B28  6FE2               	movwf	(??_main+1)& (0+255),b
  1630  001B2A  0E86               	movlw	134
  1631  001B2C  6FE1               	movwf	??_main& (0+255),b
  1632  001B2E  0EDA               	movlw	218
  1633  001B30                     u5437:
  1634  001B30  FFFF               	dw	65535	; errata NOP
  1635  001B32  2EE8               	decfsz	wreg,f,c
  1636  001B34  D7FD               	bra	u5437
  1637  001B36  2FE1               	decfsz	??_main& (0+255),f,b
  1638  001B38  D7FB               	bra	u5437
  1639  001B3A  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1640  001B3C  D7F9               	bra	u5437
  1641  001B3E  D000               	nop2	
  1642  001B40  F000               	nop	
  1643                           
  1644                           ;main.c: 86:       UARTSendString("Time at address ");
  1645  001B42  0E4B               	movlw	low STR_10
  1646  001B44  0100               	movlb	0	; () banked
  1647  001B46  6FDB               	movwf	UARTSendString@c& (0+255),b
  1648  001B48  0E06               	movlw	high STR_10
  1649  001B4A  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1650  001B4C  EC0A  F01C         	call	_UARTSendString	;wreg free
  1651                           
  1652                           ;main.c: 87:       UARTSendString(int_to_char(address - 2 + 1));
  1653  001B50  0EFF               	movlw	255
  1654  001B52  0100               	movlb	0	; () banked
  1655  001B54  6FE1               	movwf	??_main& (0+255),b
  1656  001B56  0EFF               	movlw	255
  1657  001B58  6FE2               	movwf	(??_main+1)& (0+255),b
  1658  001B5A  C0F2  F0E3         	movff	main@address,??_main+2
  1659  001B5E  C0F3  F0E4         	movff	main@address+1,??_main+3
  1660  001B62  51E1               	movf	??_main& (0+255),w,b
  1661  001B64  27E3               	addwf	(??_main+2)& (0+255),f,b
  1662  001B66  51E2               	movf	(??_main+1)& (0+255),w,b
  1663  001B68  23E4               	addwfc	(??_main+3)& (0+255),f,b
  1664  001B6A  C0E3  F07A         	movff	??_main+2,int_to_char@num
  1665  001B6E  C0E4  F07B         	movff	??_main+3,int_to_char@num+1
  1666  001B72  0E00               	movlw	0
  1667  001B74  BE7B               	btfsc	int_to_char@num+1,7,c
  1668  001B76  0EFF               	movlw	-1
  1669  001B78  6E7C               	movwf	int_to_char@num+2,c
  1670  001B7A  6E7D               	movwf	int_to_char@num+3,c
  1671  001B7C  EC4E  F01D         	call	_int_to_char	;wreg free
  1672  001B80  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1673  001B84  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1674  001B88  EC0A  F01C         	call	_UARTSendString	;wreg free
  1675                           
  1676                           ;main.c: 88:       UARTSendString(": ");
  1677  001B8C  0EB9               	movlw	low STR_9
  1678  001B8E  0100               	movlb	0	; () banked
  1679  001B90  6FDB               	movwf	UARTSendString@c& (0+255),b
  1680  001B92  0E06               	movlw	high STR_9
  1681  001B94  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1682  001B96  EC0A  F01C         	call	_UARTSendString	;wreg free
  1683                           
  1684                           ;main.c: 89:       UARTSendString(int_to_char(time_elapsed));
  1685  001B9A  C0EB  F07A         	movff	main@time_elapsed,int_to_char@num
  1686  001B9E  C0EC  F07B         	movff	main@time_elapsed+1,int_to_char@num+1
  1687  001BA2  0E00               	movlw	0
  1688  001BA4  BE7B               	btfsc	int_to_char@num+1,7,c
  1689  001BA6  0EFF               	movlw	-1
  1690  001BA8  6E7C               	movwf	int_to_char@num+2,c
  1691  001BAA  6E7D               	movwf	int_to_char@num+3,c
  1692  001BAC  EC4E  F01D         	call	_int_to_char	;wreg free
  1693  001BB0  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1694  001BB4  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1695  001BB8  EC0A  F01C         	call	_UARTSendString	;wreg free
  1696                           
  1697                           ;main.c: 90:       UARTNewLine();
  1698  001BBC  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1699                           
  1700                           ;main.c: 91:       _delay((unsigned long)((100)*(16000000/4000.0)));
  1701  001BC0  0E02               	movlw	2
  1702  001BC2  0100               	movlb	0	; () banked
  1703  001BC4  6FE2               	movwf	(??_main+1)& (0+255),b
  1704  001BC6  0E86               	movlw	134
  1705  001BC8  6FE1               	movwf	??_main& (0+255),b
  1706  001BCA  0EDA               	movlw	218
  1707  001BCC                     u5447:
  1708  001BCC  FFFF               	dw	65535	; errata NOP
  1709  001BCE  2EE8               	decfsz	wreg,f,c
  1710  001BD0  D7FD               	bra	u5447
  1711  001BD2  2FE1               	decfsz	??_main& (0+255),f,b
  1712  001BD4  D7FB               	bra	u5447
  1713  001BD6  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1714  001BD8  D7F9               	bra	u5447
  1715  001BDA  D000               	nop2	
  1716  001BDC  F000               	nop	
  1717                           
  1718                           ;main.c: 92:       _delay((unsigned long)((1000)*(16000000/4000.0)));
  1719  001BDE  0E10               	movlw	16
  1720  001BE0  0100               	movlb	0	; () banked
  1721  001BE2  6FE2               	movwf	(??_main+1)& (0+255),b
  1722  001BE4  0E3B               	movlw	59
  1723  001BE6  6FE1               	movwf	??_main& (0+255),b
  1724  001BE8  0E99               	movlw	153
  1725  001BEA                     u5457:
  1726  001BEA  FFFF               	dw	65535	; errata NOP
  1727  001BEC  2EE8               	decfsz	wreg,f,c
  1728  001BEE  D7FD               	bra	u5457
  1729  001BF0  2FE1               	decfsz	??_main& (0+255),f,b
  1730  001BF2  D7FB               	bra	u5457
  1731  001BF4  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1732  001BF6  D7F9               	bra	u5457
  1733  001BF8  F000               	nop	
  1734                           
  1735                           ;main.c: 93:       UARTSendString("Done reading from memory.");
  1736  001BFA  0E01               	movlw	low STR_12
  1737  001BFC  0100               	movlb	0	; () banked
  1738  001BFE  6FDB               	movwf	UARTSendString@c& (0+255),b
  1739  001C00  0E06               	movlw	high STR_12
  1740  001C02  6FDC               	movwf	(UARTSendString@c+1)& (0+255),b
  1741  001C04  EC0A  F01C         	call	_UARTSendString	;wreg free
  1742                           
  1743                           ;main.c: 94:       UARTNewLine();
  1744  001C08  EC0D  F01F         	call	_UARTNewLine	;wreg free
  1745                           
  1746                           ;main.c: 95:       break;
  1747  001C0C  D647               	goto	l5112
  1748  001C0E                     l5198:
  1749  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  1750                           
  1751                           ; BSR set to: 0
  1752  001C10  51F1               	movf	main@input& (0+255),w,b
  1753  001C12  6FE1               	movwf	??_main& (0+255),b
  1754  001C14  6BE2               	clrf	(??_main+1)& (0+255),b
  1755                           
  1756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1757                           ; Switch size 1, requested type "simple"
  1758                           ; Number of cases is 1, Range of values is 0 to 0
  1759                           ; switch strategies available:
  1760                           ; Name         Instructions Cycles
  1761                           ; simple_byte            4     3 (average)
  1762                           ;	Chosen strategy is simple_byte
  1763  001C16  51E2               	movf	(??_main+1)& (0+255),w,b
  1764  001C18  0A00               	xorlw	0	; case 0
  1765  001C1A  A4D8               	btfss	status,2,c
  1766  001C1C  D63F               	goto	l5112
  1767                           
  1768                           ; BSR set to: 0
  1769                           ; Switch size 1, requested type "simple"
  1770                           ; Number of cases is 2, Range of values is 114 to 115
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte            7     4 (average)
  1774                           ;	Chosen strategy is simple_byte
  1775  001C1E  51E1               	movf	??_main& (0+255),w,b
  1776  001C20  0A72               	xorlw	114	; case 114
  1777  001C22  B4D8               	btfsc	status,2,c
  1778  001C24  D72F               	goto	l5162
  1779  001C26  0A01               	xorlw	1	; case 115
  1780  001C28  B4D8               	btfsc	status,2,c
  1781  001C2A  D649               	goto	l149
  1782  001C2C  D637               	goto	l5112
  1783  001C2E                     __end_of_main:
  1784                           	opt callstack 0
  1785                           
  1786 ;; *************** function _write_op *****************
  1787 ;; Defined at:
  1788 ;;		line 9 in file "drive_memory.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  address         1    wreg     unsigned char 
  1791 ;;  data            1    0[COMRAM] unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  address         1    1[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         1       0       0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text1
  1818  003D74                     __ptext1:
  1819                           	opt callstack 0
  1820  003D74                     _write_op:
  1821                           	opt callstack 0
  1822  003D74  FFFF               	dw	65535	; assembler added errata NOP
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;incstack = 0
  1826                           ;write_op@address stored from wreg
  1827  003D76  6E02               	movwf	write_op@address,c
  1828                           
  1829                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1830  003D78  9094               	bcf	3988,0,c	;volatile
  1831                           
  1832                           ;drive_memory.c: 12:   TRISD = 0x00;
  1833  003D7A  0E00               	movlw	0
  1834  003D7C  6E95               	movwf	3989,c	;volatile
  1835                           
  1836                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1837  003D7E  0EC0               	movlw	192
  1838  003D80  1693               	andwf	3987,f,c	;volatile
  1839                           
  1840                           ;drive_memory.c: 14:   PORTB = address;
  1841  003D82  C002  FF81         	movff	write_op@address,3969	;volatile
  1842                           
  1843                           ;drive_memory.c: 15:   RB5 = 0;
  1844  003D86  9A81               	bcf	3969,5,c	;volatile
  1845                           
  1846                           ;drive_memory.c: 17:   RC0 = 1;
  1847  003D88  8082               	bsf	3970,0,c	;volatile
  1848                           
  1849                           ;drive_memory.c: 21:   RC0 = 0;
  1850  003D8A  9082               	bcf	3970,0,c	;volatile
  1851                           
  1852                           ;drive_memory.c: 23:   PORTD = data;
  1853                           
  1854                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1855  003D8C  C001  FF83         	movff	write_op@data,3971	;volatile
  1856                           
  1857                           ;drive_memory.c: 26:   RC0 = 1;
  1858                           
  1859                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1860  003D90  8082               	bsf	3970,0,c	;volatile
  1861  003D92  0012               	return		;funcret
  1862  003D94  FFFF               	dw	65535	; errata NOP
  1863  003D96                     __end_of_write_op:
  1864                           	opt callstack 0
  1865                           
  1866 ;; *************** function _set_duty_cycle *****************
  1867 ;; Defined at:
  1868 ;;		line 18 in file "pwm.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  upper_8         1    wreg     unsigned char 
  1871 ;;  lower_2         1    0[COMRAM] unsigned char 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  upper_8         1    1[COMRAM] unsigned char 
  1874 ;;  mask            1    2[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         1       0       0       0       0       0       0
  1885 ;;      Locals:         2       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0
  1887 ;;      Totals:         3       0       0       0       0       0       0
  1888 ;;Total ram usage:        3 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    2
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text2
  1899  003D96                     __ptext2:
  1900                           	opt callstack 0
  1901  003D96                     _set_duty_cycle:
  1902                           	opt callstack 0
  1903  003D96  FFFF               	dw	65535	; assembler added errata NOP
  1904                           
  1905                           ;incstack = 0
  1906                           ;set_duty_cycle@upper_8 stored from wreg
  1907  003D98  6E02               	movwf	set_duty_cycle@upper_8,c
  1908                           
  1909                           ;pwm.c: 19:   CCPR1L = upper_8;
  1910  003D9A  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  1911                           
  1912                           ;pwm.c: 20:   char mask = 0;
  1913  003D9E  0E00               	movlw	0
  1914  003DA0  6E03               	movwf	set_duty_cycle@mask,c
  1915                           
  1916                           ;pwm.c: 21:   mask |= lower_2;
  1917  003DA2  5001               	movf	set_duty_cycle@lower_2,w,c
  1918  003DA4  1203               	iorwf	set_duty_cycle@mask,f,c
  1919                           
  1920                           ;pwm.c: 22:   mask = mask << 4;
  1921  003DA6  3803               	swapf	set_duty_cycle@mask,w,c
  1922  003DA8  0BF0               	andlw	240
  1923  003DAA  6E03               	movwf	set_duty_cycle@mask,c
  1924                           
  1925                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  1926  003DAC  50BD               	movf	4029,w,c	;volatile
  1927  003DAE  0BCF               	andlw	207
  1928  003DB0  1003               	iorwf	set_duty_cycle@mask,w,c
  1929  003DB2  6EBD               	movwf	4029,c	;volatile
  1930  003DB4  0012               	return		;funcret
  1931  003DB6  FFFF               	dw	65535	; errata NOP
  1932  003DB8                     __end_of_set_duty_cycle:
  1933                           	opt callstack 0
  1934                           
  1935 ;; *************** function _read_op *****************
  1936 ;; Defined at:
  1937 ;;		line 30 in file "drive_memory.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  address         1    wreg     unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  address         1    0[COMRAM] unsigned char 
  1942 ;;  result          1    1[COMRAM] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      unsigned char 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1952 ;;      Params:         0       0       0       0       0       0       0
  1953 ;;      Locals:         2       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0
  1955 ;;      Totals:         2       0       0       0       0       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text3
  1967  003DB8                     __ptext3:
  1968                           	opt callstack 0
  1969  003DB8                     _read_op:
  1970                           	opt callstack 0
  1971  003DB8  FFFF               	dw	65535	; assembler added errata NOP
  1972                           
  1973                           ;incstack = 0
  1974                           ;read_op@address stored from wreg
  1975  003DBA  6E01               	movwf	read_op@address,c
  1976                           
  1977                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  1978  003DBC  9094               	bcf	3988,0,c	;volatile
  1979                           
  1980                           ;drive_memory.c: 33:   TRISD = 0xFF;
  1981  003DBE  6895               	setf	3989,c	;volatile
  1982                           
  1983                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  1984  003DC0  0EC0               	movlw	192
  1985  003DC2  1693               	andwf	3987,f,c	;volatile
  1986                           
  1987                           ;drive_memory.c: 35:   PORTB = address;
  1988  003DC4  C001  FF81         	movff	read_op@address,3969	;volatile
  1989                           
  1990                           ;drive_memory.c: 36:   RB5 = 1;
  1991  003DC8  8A81               	bsf	3969,5,c	;volatile
  1992                           
  1993                           ;drive_memory.c: 38:   RC0 = 1;
  1994  003DCA  8082               	bsf	3970,0,c	;volatile
  1995                           
  1996                           ;drive_memory.c: 41:   RB5 = 0;
  1997  003DCC  9A81               	bcf	3969,5,c	;volatile
  1998                           
  1999                           ;drive_memory.c: 45:   RB5 = 1;
  2000                           
  2001                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  2002  003DCE  8A81               	bsf	3969,5,c	;volatile
  2003                           
  2004                           ;drive_memory.c: 46:   char result = PORTD;
  2005  003DD0  CF83 F002          	movff	3971,read_op@result	;volatile
  2006                           
  2007                           ;drive_memory.c: 47:   return result;
  2008  003DD4  5002               	movf	read_op@result,w,c
  2009  003DD6  0012               	return		;funcret
  2010  003DD8  FFFF               	dw	65535	; errata NOP
  2011  003DDA                     __end_of_read_op:
  2012                           	opt callstack 0
  2013                           
  2014 ;; *************** function _int_to_char *****************
  2015 ;; Defined at:
  2016 ;;		line 18 in file "lcd.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  num             4  121[COMRAM] unsigned long 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  result         10   18[BANK0 ] unsigned char [10]
  2021 ;;  the_num         4   28[BANK0 ] unsigned long 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2  121[COMRAM] PTR unsigned char 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         4       0       0       0       0       0       0
  2032 ;;      Locals:         0      14       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         4      14       0       0       0       0       0
  2035 ;;Total ram usage:       18 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:   10
  2038 ;; This function calls:
  2039 ;;		_getchar
  2040 ;;		_sprintf
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text4
  2047  003A9C                     __ptext4:
  2048                           	opt callstack 0
  2049  003A9C                     _int_to_char:
  2050                           	opt callstack 0
  2051  003A9C  FFFF               	dw	65535	; assembler added errata NOP
  2052                           
  2053                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  2054                           
  2055                           ;incstack = 0
  2056  003A9E  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  2057  003AA2  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  2058  003AA6  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  2059  003AAA  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  2060                           
  2061                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  2062  003AAE  0ECD               	movlw	low int_to_char@result
  2063  003AB0  0100               	movlb	0	; () banked
  2064  003AB2  6FBB               	movwf	sprintf@s& (0+255),b
  2065  003AB4  0E00               	movlw	high int_to_char@result
  2066  003AB6  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  2067  003AB8  0E8E               	movlw	low STR_1
  2068  003ABA  6FBD               	movwf	sprintf@fmt& (0+255),b
  2069  003ABC  0E06               	movlw	high STR_1
  2070  003ABE  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  2071  003AC0  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  2072  003AC4  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  2073  003AC8  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  2074  003ACC  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  2075  003AD0  EC7E  F01C         	call	_sprintf	;wreg free
  2076                           
  2077                           ;lcd.c: 22:   getchar();
  2078  003AD4  EC21  F01F         	call	_getchar	;wreg free
  2079                           
  2080                           ;lcd.c: 23:   return result;
  2081  003AD8  0ECD               	movlw	low int_to_char@result
  2082  003ADA  6E7A               	movwf	?_int_to_char,c
  2083  003ADC  0E00               	movlw	high int_to_char@result
  2084  003ADE  6E7B               	movwf	?_int_to_char+1,c
  2085  003AE0  0012               	return		;funcret
  2086  003AE2  FFFF               	dw	65535	; errata NOP
  2087  003AE4                     __end_of_int_to_char:
  2088                           	opt callstack 0
  2089                           
  2090 ;; *************** function _sprintf *****************
  2091 ;; Defined at:
  2092 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2095 ;;		 -> int_to_char@result(10), 
  2096 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2097 ;;		 -> STR_1(4), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  f               6   10[BANK0 ] struct _IO_FILE
  2100 ;;  ap              2   16[BANK0 ] PTR void [1]
  2101 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2102 ;;  ret             2    0        int 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    0[BANK0 ] int 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         0       8       0       0       0       0       0
  2113 ;;      Locals:         0      10       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         0      18       0       0       0       0       0
  2116 ;;Total ram usage:       18 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    9
  2119 ;; This function calls:
  2120 ;;		_vfprintf
  2121 ;; This function is called by:
  2122 ;;		_int_to_char
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text5
  2127  0038FC                     __ptext5:
  2128                           	opt callstack 0
  2129  0038FC                     _sprintf:
  2130                           	opt callstack 0
  2131  0038FC  FFFF               	dw	65535	; assembler added errata NOP
  2132                           
  2133                           ;incstack = 0
  2134  0038FE  0EBF               	movlw	low (?_sprintf+4)
  2135  003900  0100               	movlb	0	; () banked
  2136  003902  6FCB               	movwf	sprintf@ap& (0+255),b
  2137  003904  0E00               	movlw	high (?_sprintf+4)
  2138  003906  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  2139  003908  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  2140  00390C  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  2141                           
  2142                           ; BSR set to: 0
  2143  003910  0E00               	movlw	0
  2144  003912  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  2145  003914  0E00               	movlw	0
  2146  003916  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149  003918  0E00               	movlw	0
  2150  00391A  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  2151  00391C  0E00               	movlw	0
  2152  00391E  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  2153                           
  2154                           ; BSR set to: 0
  2155  003920  0EC5               	movlw	low sprintf@f
  2156  003922  6E72               	movwf	vfprintf@fp,c
  2157  003924  0E00               	movlw	high sprintf@f
  2158  003926  6E73               	movwf	vfprintf@fp+1,c
  2159  003928  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  2160  00392C  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2161  003930  0ECB               	movlw	low sprintf@ap
  2162  003932  6E76               	movwf	vfprintf@ap,c
  2163  003934  0E00               	movlw	high sprintf@ap
  2164  003936  6E77               	movwf	vfprintf@ap+1,c
  2165  003938  EC4E  F01C         	call	_vfprintf	;wreg free
  2166  00393C  0100               	movlb	0	; () banked
  2167  00393E  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  2168  003940  25BB               	addwf	sprintf@s& (0+255),w,b
  2169  003942  6ED9               	movwf	fsr2l,c
  2170  003944  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  2171  003946  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2172  003948  6EDA               	movwf	fsr2h,c
  2173  00394A  0E00               	movlw	0
  2174  00394C  6EDF               	movwf	indf2,c
  2175                           
  2176                           ; BSR set to: 0
  2177  00394E  0012               	return		;funcret
  2178  003950  FFFF               	dw	65535	; errata NOP
  2179  003952                     __end_of_sprintf:
  2180                           	opt callstack 0
  2181                           
  2182 ;; *************** function _vfprintf *****************
  2183 ;; Defined at:
  2184 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2187 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  2188 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2189 ;;		 -> STR_2(3), STR_1(4), 
  2190 ;;  ap              2  117[COMRAM] PTR PTR void 
  2191 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  2194 ;;		 -> STR_2(3), STR_1(4), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2  113[COMRAM] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2204 ;;      Params:         6       0       0       0       0       0       0
  2205 ;;      Locals:         2       0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0
  2207 ;;      Totals:         8       0       0       0       0       0       0
  2208 ;;Total ram usage:        8 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    8
  2211 ;; This function calls:
  2212 ;;		_vfpfcnvrt
  2213 ;; This function is called by:
  2214 ;;		_sprintf
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text6
  2219  00389C                     __ptext6:
  2220                           	opt callstack 0
  2221  00389C                     _vfprintf:
  2222                           	opt callstack 0
  2223  00389C  FFFF               	dw	65535	; assembler added errata NOP
  2224                           
  2225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;incstack = 0
  2229  00389E  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  2230  0038A2  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2231                           
  2232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2233  0038A6  0E00               	movlw	0
  2234  0038A8  0100               	movlb	0	; () banked
  2235  0038AA  6F90               	movwf	(_nout+1)& (0+255),b
  2236  0038AC  0E00               	movlw	0
  2237  0038AE  6F8F               	movwf	_nout& (0+255),b
  2238                           
  2239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2240  0038B0  D014               	goto	l4308
  2241  0038B2                     l4306:
  2242  0038B2  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2246  0038B4  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2247  0038B8  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2248  0038BC  0E78               	movlw	low vfprintf@cfmt
  2249  0038BE  6E45               	movwf	vfpfcnvrt@fmt,c
  2250  0038C0  0E00               	movlw	high vfprintf@cfmt
  2251  0038C2  6E46               	movwf	vfpfcnvrt@fmt+1,c
  2252  0038C4  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2253  0038C8  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2254  0038CC  EC60  F003         	call	_vfpfcnvrt	;wreg free
  2255  0038D0  5043               	movf	?_vfpfcnvrt,w,c
  2256  0038D2  0100               	movlb	0	; () banked
  2257  0038D4  278F               	addwf	_nout& (0+255),f,b
  2258  0038D6  5044               	movf	?_vfpfcnvrt+1,w,c
  2259  0038D8  2390               	addwfc	(_nout+1)& (0+255),f,b
  2260  0038DA                     l4308:
  2261  0038DA  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2265  0038DC  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  2266  0038E0  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2267  0038E4                     	if	0	;tblptru may be non-zero
  2268  0038E4                     	endif
  2269  0038E4                     	if	0	;tblptru may be non-zero
  2270  0038E4                     	endif
  2271  0038E4  0008               	tblrd		*
  2272  0038E6  FFFF               	dw	65535	; errata NOP
  2273  0038E8  50F5               	movf	tablat,w,c
  2274  0038EA  0900               	iorlw	0
  2275  0038EC  A4D8               	btfss	status,2,c
  2276  0038EE  D7E1               	goto	l4306
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2280  0038F0  C08F  F072         	movff	_nout,?_vfprintf
  2281  0038F4  C090  F073         	movff	_nout+1,?_vfprintf+1
  2282                           
  2283                           ; BSR set to: 0
  2284  0038F8  0012               	return		;funcret
  2285  0038FA  FFFF               	dw	65535	; errata NOP
  2286  0038FC                     __end_of_vfprintf:
  2287                           	opt callstack 0
  2288                           
  2289 ;; *************** function _vfpfcnvrt *****************
  2290 ;; Defined at:
  2291 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2294 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  2295 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2296 ;;		 -> vfprintf@cfmt(2), 
  2297 ;;  ap              2   70[COMRAM] PTR PTR void 
  2298 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  llu             8  105[COMRAM] unsigned long long 
  2301 ;;  ll              8   94[COMRAM] long long 
  2302 ;;  f               4    0        long long 
  2303 ;;  ct              3    0        unsigned char [3]
  2304 ;;  vp              2  102[COMRAM] PTR void 
  2305 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2306 ;;  done            2   88[COMRAM] int 
  2307 ;;  cp              2   86[COMRAM] PTR unsigned char 
  2308 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2309 ;;  i               2    0        int 
  2310 ;;  c               1  104[COMRAM] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  2   66[COMRAM] int 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2320 ;;      Params:         6       0       0       0       0       0       0
  2321 ;;      Locals:        27       0       0       0       0       0       0
  2322 ;;      Temps:         14       0       0       0       0       0       0
  2323 ;;      Totals:        47       0       0       0       0       0       0
  2324 ;;Total ram usage:       47 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    7
  2327 ;; This function calls:
  2328 ;;		_atoi
  2329 ;;		_ctoa
  2330 ;;		_dtoa
  2331 ;;		_fputc
  2332 ;;		_isdigit
  2333 ;;		_otoa
  2334 ;;		_stoa
  2335 ;;		_strncmp
  2336 ;;		_utoa
  2337 ;;		_xtoa
  2338 ;; This function is called by:
  2339 ;;		_vfprintf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text7
  2344  0006C0                     __ptext7:
  2345                           	opt callstack 0
  2346  0006C0                     _vfpfcnvrt:
  2347                           	opt callstack 0
  2348  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  2349                           
  2350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;incstack = 0
  2354  0006C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355  0006C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356  0006CA  CFDE FFF6          	movff	postinc2,tblptrl
  2357  0006CE  CFDD FFF7          	movff	postdec2,tblptrh
  2358  0006D2                     	if	0	;tblptru may be non-zero
  2359  0006D2                     	endif
  2360  0006D2                     	if	0	;tblptru may be non-zero
  2361  0006D2                     	endif
  2362  0006D2  0008               	tblrd		*
  2363  0006D4  FFFF               	dw	65535	; errata NOP
  2364  0006D6  50F5               	movf	tablat,w,c
  2365  0006D8  0A25               	xorlw	37
  2366  0006DA  A4D8               	btfss	status,2,c
  2367  0006DC  EF11  F00C         	goto	l4286
  2368                           
  2369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2370  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  0006E8  2ADE               	incf	postinc2,f,c
  2373  0006EA  0E00               	movlw	0
  2374  0006EC  22DD               	addwfc	postdec2,f,c
  2375                           
  2376                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2377  0006EE  0E00               	movlw	0
  2378  0006F0  0100               	movlb	0	; () banked
  2379  0006F2  6F92               	movwf	(_width+1)& (0+255),b
  2380  0006F4  0E00               	movlw	0
  2381  0006F6  6F91               	movwf	_width& (0+255),b
  2382  0006F8  C091  F095         	movff	_width,_flags
  2383  0006FC  C092  F096         	movff	_width+1,_flags+1
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2387  000700  6993               	setf	_prec& (0+255),b
  2388  000702  6994               	setf	(_prec+1)& (0+255),b
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  2392  000704  0E00               	movlw	0
  2393  000706  6E5A               	movwf	vfpfcnvrt@done+1,c
  2394  000708  0E00               	movlw	0
  2395  00070A  D020               	goto	L2
  2396  00070C                     l3928:
  2397  00070C  FFFF               	dw	65535	; assembler added errata NOP
  2398                           
  2399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  2400  00070E  0100               	movlb	0	; () banked
  2401  000710  8195               	bsf	_flags& (0+255),0,b
  2402  000712                     l3930:
  2403  000712  FFFF               	dw	65535	; assembler added errata NOP
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  2407  000714  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2408  000718  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2409  00071C  2ADE               	incf	postinc2,f,c
  2410  00071E  0E00               	movlw	0
  2411  000720  22DD               	addwfc	postdec2,f,c
  2412                           
  2413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  2414  000722  D03A               	goto	l3954
  2415  000724                     l3932:
  2416  000724  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  2419  000726  0100               	movlb	0	; () banked
  2420  000728  8395               	bsf	_flags& (0+255),1,b
  2421  00072A  D7F3               	goto	l3930
  2422  00072C                     l3936:
  2423  00072C  FFFF               	dw	65535	; assembler added errata NOP
  2424                           
  2425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  2426  00072E  0100               	movlb	0	; () banked
  2427  000730  8595               	bsf	_flags& (0+255),2,b
  2428  000732  D7EF               	goto	l3930
  2429  000734                     l3940:
  2430  000734  FFFF               	dw	65535	; assembler added errata NOP
  2431                           
  2432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  2433  000736  0100               	movlb	0	; () banked
  2434  000738  8795               	bsf	_flags& (0+255),3,b
  2435  00073A  D7EB               	goto	l3930
  2436  00073C                     l3944:
  2437  00073C  FFFF               	dw	65535	; assembler added errata NOP
  2438                           
  2439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  2440  00073E  0100               	movlb	0	; () banked
  2441  000740  8995               	bsf	_flags& (0+255),4,b
  2442  000742  D7E7               	goto	l3930
  2443  000744                     l3948:
  2444  000744  FFFF               	dw	65535	; assembler added errata NOP
  2445                           
  2446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  2447  000746  0E00               	movlw	0
  2448  000748  6E5A               	movwf	vfpfcnvrt@done+1,c
  2449  00074A  0E01               	movlw	1
  2450  00074C                     L2:
  2451  00074C  FFFF               	dw	65535	; assembler added errata NOP
  2452  00074E  6E59               	movwf	vfpfcnvrt@done,c
  2453                           
  2454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  2455  000750  D023               	goto	l3954
  2456  000752                     l3952:
  2457  000752  FFFF               	dw	65535	; assembler added errata NOP
  2458  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2459  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  00075C  CFDE FFF6          	movff	postinc2,tblptrl
  2461  000760  CFDD FFF7          	movff	postdec2,tblptrh
  2462  000764                     	if	0	;tblptru may be non-zero
  2463  000764                     	endif
  2464  000764                     	if	0	;tblptru may be non-zero
  2465  000764                     	endif
  2466  000764  0008               	tblrd		*
  2467  000766  FFFF               	dw	65535	; errata NOP
  2468  000768  50F5               	movf	tablat,w,c
  2469  00076A  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2470  00076C  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2471                           
  2472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2473                           ; Switch size 1, requested type "simple"
  2474                           ; Number of cases is 1, Range of values is 0 to 0
  2475                           ; switch strategies available:
  2476                           ; Name         Instructions Cycles
  2477                           ; simple_byte            4     3 (average)
  2478                           ;	Chosen strategy is simple_byte
  2479  00076E  504A               	movf	??_vfpfcnvrt+1,w,c
  2480  000770  0A00               	xorlw	0	; case 0
  2481  000772  A4D8               	btfss	status,2,c
  2482  000774  D7E7               	goto	l3948
  2483                           
  2484                           ; Switch size 1, requested type "simple"
  2485                           ; Number of cases is 5, Range of values is 32 to 48
  2486                           ; switch strategies available:
  2487                           ; Name         Instructions Cycles
  2488                           ; simple_byte           16     9 (average)
  2489                           ;	Chosen strategy is simple_byte
  2490  000776  5049               	movf	??_vfpfcnvrt,w,c
  2491  000778  0A20               	xorlw	32	; case 32
  2492  00077A  B4D8               	btfsc	status,2,c
  2493  00077C  D7DB               	goto	l3940
  2494  00077E  0A03               	xorlw	3	; case 35
  2495  000780  B4D8               	btfsc	status,2,c
  2496  000782  D7DC               	goto	l3944
  2497  000784  0A08               	xorlw	8	; case 43
  2498  000786  B4D8               	btfsc	status,2,c
  2499  000788  D7D1               	goto	l3936
  2500  00078A  0A06               	xorlw	6	; case 45
  2501  00078C  B4D8               	btfsc	status,2,c
  2502  00078E  D7BE               	goto	l3928
  2503  000790  0A1D               	xorlw	29	; case 48
  2504  000792  B4D8               	btfsc	status,2,c
  2505  000794  D7C7               	goto	l3932
  2506  000796  D7D6               	goto	l3948
  2507  000798                     l3954:
  2508  000798  FFFF               	dw	65535	; assembler added errata NOP
  2509                           
  2510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  2511  00079A  5059               	movf	vfpfcnvrt@done,w,c
  2512  00079C  105A               	iorwf	vfpfcnvrt@done+1,w,c
  2513  00079E  B4D8               	btfsc	status,2,c
  2514  0007A0  D7D8               	goto	l3952
  2515                           
  2516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  2517  0007A2  0100               	movlb	0	; () banked
  2518  0007A4  B195               	btfsc	_flags& (0+255),0,b
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  2522  0007A6  9395               	bcf	_flags& (0+255),1,b
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2526  0007A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2527  0007AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2528  0007B0  CFDE FFF6          	movff	postinc2,tblptrl
  2529  0007B4  CFDD FFF7          	movff	postdec2,tblptrh
  2530  0007B8                     	if	0	;tblptru may be non-zero
  2531  0007B8                     	endif
  2532  0007B8                     	if	0	;tblptru may be non-zero
  2533  0007B8                     	endif
  2534  0007B8  0008               	tblrd		*
  2535  0007BA  FFFF               	dw	65535	; errata NOP
  2536  0007BC  50F5               	movf	tablat,w,c
  2537  0007BE  0A2A               	xorlw	42
  2538  0007C0  A4D8               	btfss	status,2,c
  2539  0007C2  D023               	goto	l3966
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2543  0007C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  0007C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  0007CC  2ADE               	incf	postinc2,f,c
  2546  0007CE  0E00               	movlw	0
  2547  0007D0  22DD               	addwfc	postdec2,f,c
  2548                           
  2549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2550  0007D2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2551  0007D6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2552  0007DA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2553  0007DE  0E02               	movlw	2
  2554  0007E0  26DE               	addwf	postinc2,f,c
  2555  0007E2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2556  0007E6  0E00               	movlw	0
  2557  0007E8  22DD               	addwfc	postdec2,f,c
  2558  0007EA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2559  0007EE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2560  0007F2  CFDE F091          	movff	postinc2,_width
  2561  0007F6  CFDD F092          	movff	postdec2,_width+1
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2565  0007FA  AF92               	btfss	(_width+1)& (0+255),7,b
  2566  0007FC  D045               	goto	u3930
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2570  0007FE  8195               	bsf	_flags& (0+255),0,b
  2571                           
  2572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2573  000800  6D91               	negf	_width& (0+255),b
  2574  000802  1F92               	comf	(_width+1)& (0+255),f,b
  2575  000804  B0D8               	btfsc	status,0,c
  2576  000806  2B92               	incf	(_width+1)& (0+255),f,b
  2577  000808  D03F               	goto	u3930
  2578  00080A                     l3966:
  2579  00080A  FFFF               	dw	65535	; assembler added errata NOP
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2583  00080C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2584  000810  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2585  000814  CFDE F008          	movff	postinc2,atoi@s
  2586  000818  CFDD F009          	movff	postdec2,atoi@s+1
  2587  00081C  EC89  F015         	call	_atoi	;wreg free
  2588  000820  C008  F091         	movff	?_atoi,_width
  2589  000824  C009  F092         	movff	?_atoi+1,_width+1
  2590                           
  2591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2592  000828  D008               	goto	l3970
  2593  00082A                     l3968:
  2594  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2595                           
  2596                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2597  00082C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2598  000830  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2599  000834  2ADE               	incf	postinc2,f,c
  2600  000836  0E00               	movlw	0
  2601  000838  22DD               	addwfc	postdec2,f,c
  2602  00083A                     l3970:
  2603  00083A  FFFF               	dw	65535	; assembler added errata NOP
  2604  00083C  0ED0               	movlw	208
  2605  00083E  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2606  000840  0EFF               	movlw	255
  2607  000842  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2608  000844  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  000848  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  00084C  CFDE FFF6          	movff	postinc2,tblptrl
  2611  000850  CFDD FFF7          	movff	postdec2,tblptrh
  2612  000854                     	if	0	;tblptru may be non-zero
  2613  000854                     	endif
  2614  000854                     	if	0	;tblptru may be non-zero
  2615  000854                     	endif
  2616  000854  0008               	tblrd		*
  2617  000856  FFFF               	dw	65535	; errata NOP
  2618  000858  50F5               	movf	tablat,w,c
  2619  00085A  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2620  00085C  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2621  00085E  5049               	movf	??_vfpfcnvrt,w,c
  2622  000860  264B               	addwf	??_vfpfcnvrt+2,f,c
  2623  000862  504A               	movf	??_vfpfcnvrt+1,w,c
  2624  000864  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2625  000866  504C               	movf	??_vfpfcnvrt+3,w,c
  2626  000868  E106               	bnz	u3910
  2627  00086A  0E0A               	movlw	10
  2628  00086C  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2629  00086E  B0D8               	btfsc	status,0,c
  2630  000870  D002               	goto	u3910
  2631  000872  0E01               	movlw	1
  2632  000874  D002               	goto	u3920
  2633  000876                     u3910:
  2634  000876  FFFF               	dw	65535	; assembler added errata NOP
  2635  000878  0E00               	movlw	0
  2636  00087A                     u3920:
  2637  00087A  FFFF               	dw	65535	; assembler added errata NOP
  2638  00087C  6E5B               	movwf	_vfpfcnvrt$1135,c
  2639  00087E  6A5C               	clrf	_vfpfcnvrt$1135+1,c
  2640  000880  505B               	movf	_vfpfcnvrt$1135,w,c
  2641  000882  105C               	iorwf	_vfpfcnvrt$1135+1,w,c
  2642  000884  A4D8               	btfss	status,2,c
  2643  000886  D7D1               	goto	l3968
  2644  000888                     u3930:
  2645  000888  FFFF               	dw	65535	; assembler added errata NOP
  2646                           
  2647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2648  00088A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2649  00088E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2650  000892  CFDE FFF6          	movff	postinc2,tblptrl
  2651  000896  CFDD FFF7          	movff	postdec2,tblptrh
  2652  00089A                     	if	0	;tblptru may be non-zero
  2653  00089A                     	endif
  2654  00089A                     	if	0	;tblptru may be non-zero
  2655  00089A                     	endif
  2656  00089A  0008               	tblrd		*
  2657  00089C  FFFF               	dw	65535	; errata NOP
  2658  00089E  50F5               	movf	tablat,w,c
  2659  0008A0  0A2E               	xorlw	46
  2660  0008A2  A4D8               	btfss	status,2,c
  2661  0008A4  D075               	goto	u3980
  2662                           
  2663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2664  0008A6  0E00               	movlw	0
  2665  0008A8  0100               	movlb	0	; () banked
  2666  0008AA  6F94               	movwf	(_prec+1)& (0+255),b
  2667  0008AC  0E00               	movlw	0
  2668  0008AE  6F93               	movwf	_prec& (0+255),b
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2672  0008B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  0008B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  0008B8  2ADE               	incf	postinc2,f,c
  2675  0008BA  0E00               	movlw	0
  2676  0008BC  22DD               	addwfc	postdec2,f,c
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2680  0008BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2681  0008C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2682  0008C6  CFDE FFF6          	movff	postinc2,tblptrl
  2683  0008CA  CFDD FFF7          	movff	postdec2,tblptrh
  2684  0008CE                     	if	0	;tblptru may be non-zero
  2685  0008CE                     	endif
  2686  0008CE                     	if	0	;tblptru may be non-zero
  2687  0008CE                     	endif
  2688  0008CE  0008               	tblrd		*
  2689  0008D0  FFFF               	dw	65535	; errata NOP
  2690  0008D2  50F5               	movf	tablat,w,c
  2691  0008D4  0A2A               	xorlw	42
  2692  0008D6  A4D8               	btfss	status,2,c
  2693  0008D8  D01C               	goto	l3986
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2697  0008DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  0008DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  0008E2  2ADE               	incf	postinc2,f,c
  2700  0008E4  0E00               	movlw	0
  2701  0008E6  22DD               	addwfc	postdec2,f,c
  2702                           
  2703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2704  0008E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2705  0008EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2706  0008F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2707  0008F4  0E02               	movlw	2
  2708  0008F6  26DE               	addwf	postinc2,f,c
  2709  0008F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2710  0008FC  0E00               	movlw	0
  2711  0008FE  22DD               	addwfc	postdec2,f,c
  2712  000900  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2713  000904  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2714  000908  CFDE F093          	movff	postinc2,_prec
  2715  00090C  CFDD F094          	movff	postdec2,_prec+1
  2716                           
  2717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2718  000910  D03F               	goto	u3980
  2719  000912                     l3986:
  2720  000912  FFFF               	dw	65535	; assembler added errata NOP
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2724  000914  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2725  000918  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2726  00091C  CFDE F008          	movff	postinc2,atoi@s
  2727  000920  CFDD F009          	movff	postdec2,atoi@s+1
  2728  000924  EC89  F015         	call	_atoi	;wreg free
  2729  000928  C008  F093         	movff	?_atoi,_prec
  2730  00092C  C009  F094         	movff	?_atoi+1,_prec+1
  2731                           
  2732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2733  000930  D008               	goto	l3990
  2734  000932                     l3988:
  2735  000932  FFFF               	dw	65535	; assembler added errata NOP
  2736                           
  2737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2738  000934  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2739  000938  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2740  00093C  2ADE               	incf	postinc2,f,c
  2741  00093E  0E00               	movlw	0
  2742  000940  22DD               	addwfc	postdec2,f,c
  2743  000942                     l3990:
  2744  000942  FFFF               	dw	65535	; assembler added errata NOP
  2745  000944  0ED0               	movlw	208
  2746  000946  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2747  000948  0EFF               	movlw	255
  2748  00094A  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2749  00094C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  000950  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  000954  CFDE FFF6          	movff	postinc2,tblptrl
  2752  000958  CFDD FFF7          	movff	postdec2,tblptrh
  2753  00095C                     	if	0	;tblptru may be non-zero
  2754  00095C                     	endif
  2755  00095C                     	if	0	;tblptru may be non-zero
  2756  00095C                     	endif
  2757  00095C  0008               	tblrd		*
  2758  00095E  FFFF               	dw	65535	; errata NOP
  2759  000960  50F5               	movf	tablat,w,c
  2760  000962  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2761  000964  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2762  000966  5049               	movf	??_vfpfcnvrt,w,c
  2763  000968  264B               	addwf	??_vfpfcnvrt+2,f,c
  2764  00096A  504A               	movf	??_vfpfcnvrt+1,w,c
  2765  00096C  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2766  00096E  504C               	movf	??_vfpfcnvrt+3,w,c
  2767  000970  E106               	bnz	u3960
  2768  000972  0E0A               	movlw	10
  2769  000974  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2770  000976  B0D8               	btfsc	status,0,c
  2771  000978  D002               	goto	u3960
  2772  00097A  0E01               	movlw	1
  2773  00097C  D002               	goto	u3970
  2774  00097E                     u3960:
  2775  00097E  FFFF               	dw	65535	; assembler added errata NOP
  2776  000980  0E00               	movlw	0
  2777  000982                     u3970:
  2778  000982  FFFF               	dw	65535	; assembler added errata NOP
  2779  000984  6E5D               	movwf	_vfpfcnvrt$1136,c
  2780  000986  6A5E               	clrf	_vfpfcnvrt$1136+1,c
  2781  000988  505D               	movf	_vfpfcnvrt$1136,w,c
  2782  00098A  105E               	iorwf	_vfpfcnvrt$1136+1,w,c
  2783  00098C  A4D8               	btfss	status,2,c
  2784  00098E  D7D1               	goto	l3988
  2785  000990                     u3980:
  2786  000990  FFFF               	dw	65535	; assembler added errata NOP
  2787                           
  2788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2789  000992  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2790  000996  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2791  00099A  CFDE FFF6          	movff	postinc2,tblptrl
  2792  00099E  CFDD FFF7          	movff	postdec2,tblptrh
  2793  0009A2                     	if	0	;tblptru may be non-zero
  2794  0009A2                     	endif
  2795  0009A2                     	if	0	;tblptru may be non-zero
  2796  0009A2                     	endif
  2797  0009A2  0008               	tblrd		*
  2798  0009A4  FFFF               	dw	65535	; errata NOP
  2799  0009A6  50F5               	movf	tablat,w,c
  2800  0009A8  0A63               	xorlw	99
  2801  0009AA  A4D8               	btfss	status,2,c
  2802  0009AC  D027               	goto	l4004
  2803                           
  2804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2805  0009AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806  0009B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807  0009B6  2ADE               	incf	postinc2,f,c
  2808  0009B8  0E00               	movlw	0
  2809  0009BA  22DD               	addwfc	postdec2,f,c
  2810                           
  2811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2812  0009BC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2813  0009C0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2814  0009C4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2815  0009C8  0E02               	movlw	2
  2816  0009CA  26DE               	addwf	postinc2,f,c
  2817  0009CC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2818  0009D0  0E00               	movlw	0
  2819  0009D2  22DD               	addwfc	postdec2,f,c
  2820  0009D4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2821  0009D8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2822  0009DC  50DF               	movf	indf2,w,c
  2823  0009DE  6E69               	movwf	vfpfcnvrt@c,c
  2824                           
  2825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2826  0009E0  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2827  0009E4  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2828  0009E8  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2829  0009EC  ECD4  F01C         	call	_ctoa	;wreg free
  2830  0009F0  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2831  0009F4  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2832  0009F8  EF2D  F00C         	goto	l519
  2833  0009FC                     l4004:
  2834  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  2835                           
  2836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2837  0009FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2838  000A02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2839  000A06  CFDE F001          	movff	postinc2,strncmp@_l
  2840  000A0A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2841  000A0E  0E76               	movlw	low STR_13
  2842  000A10  6E03               	movwf	strncmp@_r,c
  2843  000A12  0E06               	movlw	high STR_13
  2844  000A14  6E04               	movwf	strncmp@_r+1,c
  2845  000A16  0E00               	movlw	0
  2846  000A18  6E06               	movwf	strncmp@n+1,c
  2847  000A1A  0E03               	movlw	3
  2848  000A1C  6E05               	movwf	strncmp@n,c
  2849  000A1E  EC13  F01A         	call	_strncmp	;wreg free
  2850  000A22  5001               	movf	?_strncmp,w,c
  2851  000A24  1002               	iorwf	?_strncmp+1,w,c
  2852  000A26  B4D8               	btfsc	status,2,c
  2853  000A28  D016               	goto	u4010
  2854  000A2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2855  000A2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2856  000A32  CFDE F001          	movff	postinc2,strncmp@_l
  2857  000A36  CFDD F002          	movff	postdec2,strncmp@_l+1
  2858  000A3A  0E7A               	movlw	low STR_17
  2859  000A3C  6E03               	movwf	strncmp@_r,c
  2860  000A3E  0E06               	movlw	high STR_17
  2861  000A40  6E04               	movwf	strncmp@_r+1,c
  2862  000A42  0E00               	movlw	0
  2863  000A44  6E06               	movwf	strncmp@n+1,c
  2864  000A46  0E03               	movlw	3
  2865  000A48  6E05               	movwf	strncmp@n,c
  2866  000A4A  EC13  F01A         	call	_strncmp	;wreg free
  2867  000A4E  5001               	movf	?_strncmp,w,c
  2868  000A50  1002               	iorwf	?_strncmp+1,w,c
  2869  000A52  A4D8               	btfss	status,2,c
  2870  000A54  D043               	goto	l4014
  2871  000A56                     u4010:
  2872  000A56  FFFF               	dw	65535	; assembler added errata NOP
  2873                           
  2874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2875  000A58  0E03               	movlw	3
  2876  000A5A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2877  000A5E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2878  000A62  26DE               	addwf	postinc2,f,c
  2879  000A64  0E00               	movlw	0
  2880  000A66  22DD               	addwfc	postdec2,f,c
  2881                           
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2883  000A68  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2884  000A6C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2885  000A70  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2886  000A74  0E02               	movlw	2
  2887  000A76  26DE               	addwf	postinc2,f,c
  2888  000A78  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2889  000A7C  0E00               	movlw	0
  2890  000A7E  22DD               	addwfc	postdec2,f,c
  2891  000A80  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2892  000A84  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2893  000A88  50DF               	movf	indf2,w,c
  2894  000A8A  6E5F               	movwf	vfpfcnvrt@ll,c
  2895  000A8C  0E00               	movlw	0
  2896  000A8E  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2897  000A90  0EFF               	movlw	-1
  2898  000A92  6E60               	movwf	vfpfcnvrt@ll+1,c
  2899  000A94                     L3:
  2900  000A94  FFFF               	dw	65535	; assembler added errata NOP
  2901  000A96  6E61               	movwf	vfpfcnvrt@ll+2,c
  2902  000A98  6E62               	movwf	vfpfcnvrt@ll+3,c
  2903  000A9A  6E63               	movwf	vfpfcnvrt@ll+4,c
  2904  000A9C  6E64               	movwf	vfpfcnvrt@ll+5,c
  2905  000A9E  6E65               	movwf	vfpfcnvrt@ll+6,c
  2906  000AA0  6E66               	movwf	vfpfcnvrt@ll+7,c
  2907  000AA2                     l4010:
  2908  000AA2  FFFF               	dw	65535	; assembler added errata NOP
  2909                           
  2910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2911  000AA4  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2912  000AA8  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2913  000AAC  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2914  000AB0  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2915  000AB4  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2916  000AB8  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2917  000ABC  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2918  000AC0  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2919  000AC4  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2920  000AC8  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2921  000ACC  EC7A  F011         	call	_dtoa	;wreg free
  2922  000AD0  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2923  000AD4  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2924  000AD8  EF2D  F00C         	goto	l519
  2925  000ADC                     l4014:
  2926  000ADC  FFFF               	dw	65535	; assembler added errata NOP
  2927                           
  2928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2929  000ADE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  000AE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  000AE6  CFDE F001          	movff	postinc2,strncmp@_l
  2932  000AEA  CFDD F002          	movff	postdec2,strncmp@_l+1
  2933  000AEE  0E77               	movlw	low (STR_13+1)
  2934  000AF0  6E03               	movwf	strncmp@_r,c
  2935  000AF2  0E06               	movlw	high (STR_13+1)
  2936  000AF4  6E04               	movwf	strncmp@_r+1,c
  2937  000AF6  0E00               	movlw	0
  2938  000AF8  6E06               	movwf	strncmp@n+1,c
  2939  000AFA  0E02               	movlw	2
  2940  000AFC  6E05               	movwf	strncmp@n,c
  2941  000AFE  EC13  F01A         	call	_strncmp	;wreg free
  2942  000B02  5001               	movf	?_strncmp,w,c
  2943  000B04  1002               	iorwf	?_strncmp+1,w,c
  2944  000B06  B4D8               	btfsc	status,2,c
  2945  000B08  D016               	goto	u4030
  2946  000B0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  000B0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  000B12  CFDE F001          	movff	postinc2,strncmp@_l
  2949  000B16  CFDD F002          	movff	postdec2,strncmp@_l+1
  2950  000B1A  0E7B               	movlw	low (STR_17+1)
  2951  000B1C  6E03               	movwf	strncmp@_r,c
  2952  000B1E  0E06               	movlw	high (STR_17+1)
  2953  000B20  6E04               	movwf	strncmp@_r+1,c
  2954  000B22  0E00               	movlw	0
  2955  000B24  6E06               	movwf	strncmp@n+1,c
  2956  000B26  0E02               	movlw	2
  2957  000B28  6E05               	movwf	strncmp@n,c
  2958  000B2A  EC13  F01A         	call	_strncmp	;wreg free
  2959  000B2E  5001               	movf	?_strncmp,w,c
  2960  000B30  1002               	iorwf	?_strncmp+1,w,c
  2961  000B32  A4D8               	btfss	status,2,c
  2962  000B34  D008               	goto	l4024
  2963  000B36                     u4030:
  2964  000B36  FFFF               	dw	65535	; assembler added errata NOP
  2965                           
  2966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2967  000B38  0E02               	movlw	2
  2968  000B3A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2969  000B3E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2970  000B42  26DE               	addwf	postinc2,f,c
  2971  000B44  D023               	goto	L13
  2972  000B46                     l4024:
  2973  000B46  FFFF               	dw	65535	; assembler added errata NOP
  2974                           
  2975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2976  000B48  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  000B4C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  000B50  CFDE FFF6          	movff	postinc2,tblptrl
  2979  000B54  CFDD FFF7          	movff	postdec2,tblptrh
  2980  000B58                     	if	0	;tblptru may be non-zero
  2981  000B58                     	endif
  2982  000B58                     	if	0	;tblptru may be non-zero
  2983  000B58                     	endif
  2984  000B58  0008               	tblrd		*
  2985  000B5A  FFFF               	dw	65535	; errata NOP
  2986  000B5C  50F5               	movf	tablat,w,c
  2987  000B5E  0A64               	xorlw	100
  2988  000B60  B4D8               	btfsc	status,2,c
  2989  000B62  D00E               	goto	u4050
  2990  000B64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991  000B68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992  000B6C  CFDE FFF6          	movff	postinc2,tblptrl
  2993  000B70  CFDD FFF7          	movff	postdec2,tblptrh
  2994  000B74                     	if	0	;tblptru may be non-zero
  2995  000B74                     	endif
  2996  000B74                     	if	0	;tblptru may be non-zero
  2997  000B74                     	endif
  2998  000B74  0008               	tblrd		*
  2999  000B76  FFFF               	dw	65535	; errata NOP
  3000  000B78  50F5               	movf	tablat,w,c
  3001  000B7A  0A69               	xorlw	105
  3002  000B7C  A4D8               	btfss	status,2,c
  3003  000B7E  D021               	goto	l4034
  3004  000B80                     u4050:
  3005  000B80  FFFF               	dw	65535	; assembler added errata NOP
  3006                           
  3007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  3008  000B82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3009  000B86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3010  000B8A  2ADE               	incf	postinc2,f,c
  3011  000B8C                     L13:
  3012  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  3013  000B8E  0E00               	movlw	0
  3014  000B90  22DD               	addwfc	postdec2,f,c
  3015                           
  3016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3017  000B92  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3018  000B96  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3019  000B9A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3020  000B9E  0E02               	movlw	2
  3021  000BA0  26DE               	addwf	postinc2,f,c
  3022  000BA2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3023  000BA6  0E00               	movlw	0
  3024  000BA8  22DD               	addwfc	postdec2,f,c
  3025  000BAA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3026  000BAE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3027  000BB2  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  3028  000BB6  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  3029  000BBA  0E00               	movlw	0
  3030  000BBC  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  3031  000BBE  0EFF               	movlw	-1
  3032  000BC0  D769               	goto	L3
  3033  000BC2                     l4034:
  3034  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  3035                           
  3036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  3037  000BC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3038  000BC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3039  000BCC  CFDE F001          	movff	postinc2,strncmp@_l
  3040  000BD0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3041  000BD4  0E98               	movlw	low STR_31
  3042  000BD6  6E03               	movwf	strncmp@_r,c
  3043  000BD8  0E06               	movlw	high STR_31
  3044  000BDA  6E04               	movwf	strncmp@_r+1,c
  3045  000BDC  0E00               	movlw	0
  3046  000BDE  6E06               	movwf	strncmp@n+1,c
  3047  000BE0  0E02               	movlw	2
  3048  000BE2  6E05               	movwf	strncmp@n,c
  3049  000BE4  EC13  F01A         	call	_strncmp	;wreg free
  3050  000BE8  5001               	movf	?_strncmp,w,c
  3051  000BEA  1002               	iorwf	?_strncmp+1,w,c
  3052  000BEC  B4D8               	btfsc	status,2,c
  3053  000BEE  D016               	goto	u4070
  3054  000BF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3055  000BF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3056  000BF8  CFDE F001          	movff	postinc2,strncmp@_l
  3057  000BFC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3058  000C00  0E9E               	movlw	low STR_35
  3059  000C02  6E03               	movwf	strncmp@_r,c
  3060  000C04  0E06               	movlw	high STR_35
  3061  000C06  6E04               	movwf	strncmp@_r+1,c
  3062  000C08  0E00               	movlw	0
  3063  000C0A  6E06               	movwf	strncmp@n+1,c
  3064  000C0C  0E02               	movlw	2
  3065  000C0E  6E05               	movwf	strncmp@n,c
  3066  000C10  EC13  F01A         	call	_strncmp	;wreg free
  3067  000C14  5001               	movf	?_strncmp,w,c
  3068  000C16  1002               	iorwf	?_strncmp+1,w,c
  3069  000C18  A4D8               	btfss	status,2,c
  3070  000C1A  D043               	goto	l4044
  3071  000C1C                     u4070:
  3072  000C1C  FFFF               	dw	65535	; assembler added errata NOP
  3073                           
  3074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  3075  000C1E  0E02               	movlw	2
  3076  000C20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3077  000C24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3078  000C28  26DE               	addwf	postinc2,f,c
  3079  000C2A  0E00               	movlw	0
  3080  000C2C  22DD               	addwfc	postdec2,f,c
  3081                           
  3082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  3083  000C2E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3084  000C32  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3085  000C36  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3086  000C3A  0E04               	movlw	4
  3087  000C3C  26DE               	addwf	postinc2,f,c
  3088  000C3E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3089  000C42  0E00               	movlw	0
  3090  000C44  22DD               	addwfc	postdec2,f,c
  3091  000C46  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3092  000C4A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3093  000C4E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3094  000C52  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3095  000C56  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3096  000C5A  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3097  000C5E  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  3098  000C62  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  3099  000C66  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  3100  000C6A  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  3101  000C6E  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  3102  000C70  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  3103  000C72  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  3104  000C74  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  3105  000C78  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  3106  000C7C  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  3107  000C80  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  3108  000C84  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  3109  000C88  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  3110  000C8C  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  3111  000C90  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  3112  000C94  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  3113  000C98  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  3114  000C9C  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  3115  000CA0  D700               	goto	l4010
  3116  000CA2                     l4044:
  3117  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  3118                           
  3119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  3120  000CA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  000CA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  000CAC  CFDE F001          	movff	postinc2,strncmp@_l
  3123  000CB0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3124  000CB4  0E9B               	movlw	low STR_40
  3125  000CB6  6E03               	movwf	strncmp@_r,c
  3126  000CB8  0E06               	movlw	high STR_40
  3127  000CBA  6E04               	movwf	strncmp@_r+1,c
  3128  000CBC  0E00               	movlw	0
  3129  000CBE  6E06               	movwf	strncmp@n+1,c
  3130  000CC0  0E02               	movlw	2
  3131  000CC2  6E05               	movwf	strncmp@n,c
  3132  000CC4  EC13  F01A         	call	_strncmp	;wreg free
  3133  000CC8  5001               	movf	?_strncmp,w,c
  3134  000CCA  1002               	iorwf	?_strncmp+1,w,c
  3135  000CCC  B4D8               	btfsc	status,2,c
  3136  000CCE  D016               	goto	u4090
  3137  000CD0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3138  000CD4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3139  000CD8  CFDE F001          	movff	postinc2,strncmp@_l
  3140  000CDC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3141  000CE0  0EA1               	movlw	low STR_44
  3142  000CE2  6E03               	movwf	strncmp@_r,c
  3143  000CE4  0E06               	movlw	high STR_44
  3144  000CE6  6E04               	movwf	strncmp@_r+1,c
  3145  000CE8  0E00               	movlw	0
  3146  000CEA  6E06               	movwf	strncmp@n+1,c
  3147  000CEC  0E02               	movlw	2
  3148  000CEE  6E05               	movwf	strncmp@n,c
  3149  000CF0  EC13  F01A         	call	_strncmp	;wreg free
  3150  000CF4  5001               	movf	?_strncmp,w,c
  3151  000CF6  1002               	iorwf	?_strncmp+1,w,c
  3152  000CF8  A4D8               	btfss	status,2,c
  3153  000CFA  D028               	goto	l4054
  3154  000CFC                     u4090:
  3155  000CFC  FFFF               	dw	65535	; assembler added errata NOP
  3156                           
  3157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  3158  000CFE  0E02               	movlw	2
  3159  000D00  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3160  000D04  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3161  000D08  26DE               	addwf	postinc2,f,c
  3162  000D0A  0E00               	movlw	0
  3163  000D0C  22DD               	addwfc	postdec2,f,c
  3164                           
  3165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3166  000D0E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3167  000D12  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3168  000D16  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3169  000D1A  0E02               	movlw	2
  3170  000D1C  26DE               	addwf	postinc2,f,c
  3171  000D1E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3172  000D22  0E00               	movlw	0
  3173  000D24  22DD               	addwfc	postdec2,f,c
  3174  000D26  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3175  000D2A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3176  000D2E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3177  000D32  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3178  000D36  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3179  000D3A  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3180  000D3E  6A61               	clrf	vfpfcnvrt@ll+2,c
  3181  000D40  6A62               	clrf	vfpfcnvrt@ll+3,c
  3182  000D42  6A63               	clrf	vfpfcnvrt@ll+4,c
  3183  000D44  6A64               	clrf	vfpfcnvrt@ll+5,c
  3184  000D46  6A65               	clrf	vfpfcnvrt@ll+6,c
  3185  000D48  6A66               	clrf	vfpfcnvrt@ll+7,c
  3186  000D4A  D6AB               	goto	l4010
  3187  000D4C                     l4054:
  3188  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  3189                           
  3190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3191  000D4E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3192  000D52  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3193  000D56  CFDE F001          	movff	postinc2,strncmp@_l
  3194  000D5A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3195  000D5E  0E82               	movlw	low STR_49
  3196  000D60  6E03               	movwf	strncmp@_r,c
  3197  000D62  0E06               	movlw	high STR_49
  3198  000D64  6E04               	movwf	strncmp@_r+1,c
  3199  000D66  0E00               	movlw	0
  3200  000D68  6E06               	movwf	strncmp@n+1,c
  3201  000D6A  0E03               	movlw	3
  3202  000D6C  6E05               	movwf	strncmp@n,c
  3203  000D6E  EC13  F01A         	call	_strncmp	;wreg free
  3204  000D72  5001               	movf	?_strncmp,w,c
  3205  000D74  1002               	iorwf	?_strncmp+1,w,c
  3206  000D76  A4D8               	btfss	status,2,c
  3207  000D78  D041               	goto	l4062
  3208                           
  3209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  3210  000D7A  0E03               	movlw	3
  3211  000D7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3212  000D80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3213  000D84  26DE               	addwf	postinc2,f,c
  3214  000D86  0E00               	movlw	0
  3215  000D88  22DD               	addwfc	postdec2,f,c
  3216                           
  3217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3218  000D8A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3219  000D8E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3220  000D92  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3221  000D96  0E02               	movlw	2
  3222  000D98  26DE               	addwf	postinc2,f,c
  3223  000D9A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3224  000D9E  0E00               	movlw	0
  3225  000DA0  22DD               	addwfc	postdec2,f,c
  3226  000DA2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3227  000DA6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3228  000DAA  50DF               	movf	indf2,w,c
  3229  000DAC  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3230  000DAE  504B               	movf	??_vfpfcnvrt+2,w,c
  3231  000DB0  6E6A               	movwf	vfpfcnvrt@llu,c
  3232  000DB2  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3233  000DB4                     L4:
  3234  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  3235  000DB6  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3236  000DB8  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3237  000DBA                     L5:
  3238  000DBA  FFFF               	dw	65535	; assembler added errata NOP
  3239  000DBC  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3240  000DBE  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3241  000DC0  6A70               	clrf	vfpfcnvrt@llu+6,c
  3242  000DC2  6A71               	clrf	vfpfcnvrt@llu+7,c
  3243                           
  3244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  3245  000DC4  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  3246  000DC8  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3247  000DCC  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  3248  000DD0  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3249  000DD4  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3250  000DD8  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3251  000DDC  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3252  000DE0  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3253  000DE4  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3254  000DE8  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3255  000DEC  ECBC  F014         	call	_otoa	;wreg free
  3256  000DF0  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  3257  000DF4  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  3258  000DF8  EF2D  F00C         	goto	l519
  3259  000DFC                     l4062:
  3260  000DFC  FFFF               	dw	65535	; assembler added errata NOP
  3261                           
  3262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  3263  000DFE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3264  000E02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3265  000E06  CFDE F001          	movff	postinc2,strncmp@_l
  3266  000E0A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3267  000E0E  0E83               	movlw	low (STR_49+1)
  3268  000E10  6E03               	movwf	strncmp@_r,c
  3269  000E12  0E06               	movlw	high (STR_49+1)
  3270  000E14  6E04               	movwf	strncmp@_r+1,c
  3271  000E16  0E00               	movlw	0
  3272  000E18  6E06               	movwf	strncmp@n+1,c
  3273  000E1A  0E02               	movlw	2
  3274  000E1C  6E05               	movwf	strncmp@n,c
  3275  000E1E  EC13  F01A         	call	_strncmp	;wreg free
  3276  000E22  5001               	movf	?_strncmp,w,c
  3277  000E24  1002               	iorwf	?_strncmp+1,w,c
  3278  000E26  B4D8               	btfsc	status,2,c
  3279  000E28  D06B               	goto	u4140
  3280                           
  3281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  3282                           
  3283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3284                           
  3285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  3286  000E2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3287  000E2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3288  000E32  CFDE FFF6          	movff	postinc2,tblptrl
  3289  000E36  CFDD FFF7          	movff	postdec2,tblptrh
  3290  000E3A                     	if	0	;tblptru may be non-zero
  3291  000E3A                     	endif
  3292  000E3A                     	if	0	;tblptru may be non-zero
  3293  000E3A                     	endif
  3294  000E3A  0008               	tblrd		*
  3295  000E3C  FFFF               	dw	65535	; errata NOP
  3296  000E3E  50F5               	movf	tablat,w,c
  3297  000E40  0A6F               	xorlw	111
  3298  000E42  A4D8               	btfss	status,2,c
  3299  000E44  D006               	goto	l4078
  3300                           
  3301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  3302  000E46  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3303  000E4A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3304  000E4E  2ADE               	incf	postinc2,f,c
  3305  000E50  D05E               	goto	L18
  3306  000E52                     l4078:
  3307  000E52  FFFF               	dw	65535	; assembler added errata NOP
  3308                           
  3309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  3310  000E54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3311  000E58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3312  000E5C  CFDE F001          	movff	postinc2,strncmp@_l
  3313  000E60  CFDD F002          	movff	postdec2,strncmp@_l+1
  3314  000E64  0EAA               	movlw	low STR_59
  3315  000E66  6E03               	movwf	strncmp@_r,c
  3316  000E68  0E06               	movlw	high STR_59
  3317  000E6A  6E04               	movwf	strncmp@_r+1,c
  3318  000E6C  0E00               	movlw	0
  3319  000E6E  6E06               	movwf	strncmp@n+1,c
  3320  000E70  0E02               	movlw	2
  3321  000E72  6E05               	movwf	strncmp@n,c
  3322  000E74  EC13  F01A         	call	_strncmp	;wreg free
  3323  000E78  5001               	movf	?_strncmp,w,c
  3324  000E7A  1002               	iorwf	?_strncmp+1,w,c
  3325  000E7C  A4D8               	btfss	status,2,c
  3326  000E7E  D029               	goto	l4086
  3327                           
  3328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  3329  000E80  0E02               	movlw	2
  3330  000E82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  000E86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  000E8A  26DE               	addwf	postinc2,f,c
  3333  000E8C  0E00               	movlw	0
  3334  000E8E  22DD               	addwfc	postdec2,f,c
  3335                           
  3336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3337  000E90  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3338  000E94  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3339  000E98  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3340  000E9C  0E04               	movlw	4
  3341  000E9E  26DE               	addwf	postinc2,f,c
  3342  000EA0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3343  000EA4  0E00               	movlw	0
  3344  000EA6  22DD               	addwfc	postdec2,f,c
  3345  000EA8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3346  000EAC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3347  000EB0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3348  000EB4  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3349  000EB8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3350  000EBC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3351  000EC0  504B               	movf	??_vfpfcnvrt+2,w,c
  3352  000EC2  6E6A               	movwf	vfpfcnvrt@llu,c
  3353  000EC4  504C               	movf	??_vfpfcnvrt+3,w,c
  3354  000EC6  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3355  000EC8  504D               	movf	??_vfpfcnvrt+4,w,c
  3356  000ECA  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3357  000ECC  504E               	movf	??_vfpfcnvrt+5,w,c
  3358  000ECE  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3359  000ED0  D774               	goto	L5
  3360  000ED2                     l4086:
  3361  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  3362                           
  3363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  3364  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3365  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3366  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  3367  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3368  000EE4  0EAD               	movlw	low STR_64
  3369  000EE6  6E03               	movwf	strncmp@_r,c
  3370  000EE8  0E06               	movlw	high STR_64
  3371  000EEA  6E04               	movwf	strncmp@_r+1,c
  3372  000EEC  0E00               	movlw	0
  3373  000EEE  6E06               	movwf	strncmp@n+1,c
  3374  000EF0  0E02               	movlw	2
  3375  000EF2  6E05               	movwf	strncmp@n,c
  3376  000EF4  EC13  F01A         	call	_strncmp	;wreg free
  3377  000EF8  5001               	movf	?_strncmp,w,c
  3378  000EFA  1002               	iorwf	?_strncmp+1,w,c
  3379  000EFC  A4D8               	btfss	status,2,c
  3380  000EFE  D023               	goto	l4094
  3381  000F00                     u4140:
  3382  000F00  FFFF               	dw	65535	; assembler added errata NOP
  3383                           
  3384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  3385  000F02  0E02               	movlw	2
  3386  000F04  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3387  000F08  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3388  000F0C  26DE               	addwf	postinc2,f,c
  3389  000F0E                     L18:
  3390  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  3391  000F10  0E00               	movlw	0
  3392  000F12  22DD               	addwfc	postdec2,f,c
  3393                           
  3394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3395  000F14  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3396  000F18  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3397  000F1C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3398  000F20  0E02               	movlw	2
  3399  000F22  26DE               	addwf	postinc2,f,c
  3400  000F24  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3401  000F28  0E00               	movlw	0
  3402  000F2A  22DD               	addwfc	postdec2,f,c
  3403  000F2C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3404  000F30  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3405  000F34  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3406  000F38  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3407  000F3C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3408  000F40  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3409  000F44  D737               	goto	L4
  3410  000F46                     l4094:
  3411  000F46  FFFF               	dw	65535	; assembler added errata NOP
  3412                           
  3413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3414  000F48  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3415  000F4C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3416  000F50  CFDE F001          	movff	postinc2,strncmp@_l
  3417  000F54  CFDD F002          	movff	postdec2,strncmp@_l+1
  3418  000F58  0E7E               	movlw	low STR_69
  3419  000F5A  6E03               	movwf	strncmp@_r,c
  3420  000F5C  0E06               	movlw	high STR_69
  3421  000F5E  6E04               	movwf	strncmp@_r+1,c
  3422  000F60  0E00               	movlw	0
  3423  000F62  6E06               	movwf	strncmp@n+1,c
  3424  000F64  0E03               	movlw	3
  3425  000F66  6E05               	movwf	strncmp@n,c
  3426  000F68  EC13  F01A         	call	_strncmp	;wreg free
  3427  000F6C  5001               	movf	?_strncmp,w,c
  3428  000F6E  1002               	iorwf	?_strncmp+1,w,c
  3429  000F70  A4D8               	btfss	status,2,c
  3430  000F72  D028               	goto	l4104
  3431                           
  3432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  3433  000F74  0E03               	movlw	3
  3434  000F76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3435  000F7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3436  000F7E  26DE               	addwf	postinc2,f,c
  3437  000F80  0E00               	movlw	0
  3438  000F82  22DD               	addwfc	postdec2,f,c
  3439                           
  3440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3441  000F84  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3442  000F88  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3443  000F8C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3444  000F90  0E02               	movlw	2
  3445  000F92  26DE               	addwf	postinc2,f,c
  3446  000F94  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3447  000F98  0E00               	movlw	0
  3448  000F9A  22DD               	addwfc	postdec2,f,c
  3449  000F9C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3450  000FA0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3451  000FA4  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3452  000FA8  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3453                           
  3454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  3455  000FAC  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3456  000FB0  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3457  000FB4  C08F  FFDF         	movff	_nout,indf2
  3458  000FB8                     l4100:
  3459  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  3460                           
  3461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  3462  000FBA  0E00               	movlw	0
  3463  000FBC  6E44               	movwf	?_vfpfcnvrt+1,c
  3464  000FBE  0E00               	movlw	0
  3465  000FC0  EF04  F00C         	goto	L6
  3466  000FC4                     l4104:
  3467  000FC4  FFFF               	dw	65535	; assembler added errata NOP
  3468                           
  3469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3470  000FC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  000FCA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  000FCE  CFDE F001          	movff	postinc2,strncmp@_l
  3473  000FD2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3474  000FD6  0E7F               	movlw	low (STR_69+1)
  3475  000FD8  6E03               	movwf	strncmp@_r,c
  3476  000FDA  0E06               	movlw	high (STR_69+1)
  3477  000FDC  6E04               	movwf	strncmp@_r+1,c
  3478  000FDE  0E00               	movlw	0
  3479  000FE0  6E06               	movwf	strncmp@n+1,c
  3480  000FE2  0E02               	movlw	2
  3481  000FE4  6E05               	movwf	strncmp@n,c
  3482  000FE6  EC13  F01A         	call	_strncmp	;wreg free
  3483  000FEA  5001               	movf	?_strncmp,w,c
  3484  000FEC  1002               	iorwf	?_strncmp+1,w,c
  3485  000FEE  A4D8               	btfss	status,2,c
  3486  000FF0  D00B               	goto	l4114
  3487  000FF2  D07F               	goto	u4190
  3488  000FF4                     l4108:
  3489  000FF4  FFFF               	dw	65535	; assembler added errata NOP
  3490                           
  3491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  3492  000FF6  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3493  000FFA  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3494  000FFE  C08F  FFDE         	movff	_nout,postinc2
  3495  001002  C090  FFDD         	movff	_nout+1,postdec2
  3496  001006  D7D8               	goto	l4100
  3497  001008                     l4114:
  3498  001008  FFFF               	dw	65535	; assembler added errata NOP
  3499                           
  3500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  3501  00100A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3502  00100E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3503  001012  CFDE FFF6          	movff	postinc2,tblptrl
  3504  001016  CFDD FFF7          	movff	postdec2,tblptrh
  3505  00101A                     	if	0	;tblptru may be non-zero
  3506  00101A                     	endif
  3507  00101A                     	if	0	;tblptru may be non-zero
  3508  00101A                     	endif
  3509  00101A  0008               	tblrd		*
  3510  00101C  FFFF               	dw	65535	; errata NOP
  3511  00101E  50F5               	movf	tablat,w,c
  3512  001020  0A6E               	xorlw	110
  3513  001022  A4D8               	btfss	status,2,c
  3514  001024  D006               	goto	l4124
  3515                           
  3516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  3517  001026  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3518  00102A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3519  00102E  2ADE               	incf	postinc2,f,c
  3520  001030  D067               	goto	L15
  3521  001032                     l4124:
  3522  001032  FFFF               	dw	65535	; assembler added errata NOP
  3523                           
  3524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  3525  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3526  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3527  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  3528  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  3529  001044  0EA4               	movlw	low STR_79
  3530  001046  6E03               	movwf	strncmp@_r,c
  3531  001048  0E06               	movlw	high STR_79
  3532  00104A  6E04               	movwf	strncmp@_r+1,c
  3533  00104C  0E00               	movlw	0
  3534  00104E  6E06               	movwf	strncmp@n+1,c
  3535  001050  0E02               	movlw	2
  3536  001052  6E05               	movwf	strncmp@n,c
  3537  001054  EC13  F01A         	call	_strncmp	;wreg free
  3538  001058  5001               	movf	?_strncmp,w,c
  3539  00105A  1002               	iorwf	?_strncmp+1,w,c
  3540  00105C  A4D8               	btfss	status,2,c
  3541  00105E  D032               	goto	l4134
  3542                           
  3543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  3544  001060  0E02               	movlw	2
  3545  001062  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  001066  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  00106A  26DE               	addwf	postinc2,f,c
  3548  00106C  0E00               	movlw	0
  3549  00106E  22DD               	addwfc	postdec2,f,c
  3550                           
  3551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  3552  001070  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3553  001074  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3554  001078  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3555  00107C  0E02               	movlw	2
  3556  00107E  26DE               	addwf	postinc2,f,c
  3557  001080  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3558  001084  0E00               	movlw	0
  3559  001086  22DD               	addwfc	postdec2,f,c
  3560  001088  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3561  00108C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3562  001090  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3563  001094  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3564                           
  3565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  3566  001098  C08F  F049         	movff	_nout,??_vfpfcnvrt
  3567  00109C  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  3568  0010A0  0E00               	movlw	0
  3569  0010A2  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  3570  0010A4  0EFF               	movlw	255
  3571  0010A6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3572  0010A8  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  3573  0010AA  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3574  0010AE  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3575  0010B2  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3576  0010B6  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3577  0010BA  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3578  0010BE  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3579  0010C2  D77A               	goto	l4100
  3580  0010C4                     l4134:
  3581  0010C4  FFFF               	dw	65535	; assembler added errata NOP
  3582                           
  3583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3584  0010C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3585  0010CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  0010CE  CFDE F001          	movff	postinc2,strncmp@_l
  3587  0010D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3588  0010D6  0EA7               	movlw	low STR_84
  3589  0010D8  6E03               	movwf	strncmp@_r,c
  3590  0010DA  0E06               	movlw	high STR_84
  3591  0010DC  6E04               	movwf	strncmp@_r+1,c
  3592  0010DE  0E00               	movlw	0
  3593  0010E0  6E06               	movwf	strncmp@n+1,c
  3594  0010E2  0E02               	movlw	2
  3595  0010E4  6E05               	movwf	strncmp@n,c
  3596  0010E6  EC13  F01A         	call	_strncmp	;wreg free
  3597  0010EA  5001               	movf	?_strncmp,w,c
  3598  0010EC  1002               	iorwf	?_strncmp+1,w,c
  3599  0010EE  A4D8               	btfss	status,2,c
  3600  0010F0  D01F               	goto	l4144
  3601  0010F2                     u4190:
  3602  0010F2  FFFF               	dw	65535	; assembler added errata NOP
  3603                           
  3604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3605  0010F4  0E02               	movlw	2
  3606  0010F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3607  0010FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3608  0010FE  26DE               	addwf	postinc2,f,c
  3609  001100                     L15:
  3610  001100  FFFF               	dw	65535	; assembler added errata NOP
  3611  001102  0E00               	movlw	0
  3612  001104  22DD               	addwfc	postdec2,f,c
  3613                           
  3614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3615  001106  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3616  00110A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3617  00110E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3618  001112  0E02               	movlw	2
  3619  001114  26DE               	addwf	postinc2,f,c
  3620  001116  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3621  00111A  0E00               	movlw	0
  3622  00111C  22DD               	addwfc	postdec2,f,c
  3623  00111E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3624  001122  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3625  001126  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3626  00112A  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3627  00112E  D762               	goto	l4108
  3628  001130                     l4144:
  3629  001130  FFFF               	dw	65535	; assembler added errata NOP
  3630                           
  3631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3632  001132  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3633  001136  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3634  00113A  CFDE FFF6          	movff	postinc2,tblptrl
  3635  00113E  CFDD FFF7          	movff	postdec2,tblptrh
  3636  001142                     	if	0	;tblptru may be non-zero
  3637  001142                     	endif
  3638  001142                     	if	0	;tblptru may be non-zero
  3639  001142                     	endif
  3640  001142  0008               	tblrd		*
  3641  001144  FFFF               	dw	65535	; errata NOP
  3642  001146  50F5               	movf	tablat,w,c
  3643  001148  0A70               	xorlw	112
  3644  00114A  A4D8               	btfss	status,2,c
  3645  00114C  D03E               	goto	l4152
  3646                           
  3647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3648  00114E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  001152  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  001156  2ADE               	incf	postinc2,f,c
  3651  001158  0E00               	movlw	0
  3652  00115A  22DD               	addwfc	postdec2,f,c
  3653                           
  3654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3655  00115C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3656  001160  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3657  001164  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3658  001168  0E02               	movlw	2
  3659  00116A  26DE               	addwf	postinc2,f,c
  3660  00116C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3661  001170  0E00               	movlw	0
  3662  001172  22DD               	addwfc	postdec2,f,c
  3663  001174  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3664  001178  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3665  00117C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3666  001180  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3667  001184  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3668  001188  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3669  00118C  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3670  00118E  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3671  001190  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3672  001192  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3673  001194  6A70               	clrf	vfpfcnvrt@llu+6,c
  3674  001196  6A71               	clrf	vfpfcnvrt@llu+7,c
  3675                           
  3676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3677  001198  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3678  00119C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3679  0011A0  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3680  0011A4  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3681  0011A8  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3682  0011AC  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3683  0011B0  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3684  0011B4  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3685  0011B8  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3686  0011BC  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3687  0011C0  0E78               	movlw	120
  3688  0011C2  6E26               	movwf	xtoa@x,c
  3689  0011C4  ECAF  F012         	call	_xtoa	;wreg free
  3690  0011C8  D1B4               	goto	L8
  3691  0011CA                     l4152:
  3692  0011CA  FFFF               	dw	65535	; assembler added errata NOP
  3693                           
  3694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3695  0011CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3696  0011D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3697  0011D4  CFDE FFF6          	movff	postinc2,tblptrl
  3698  0011D8  CFDD FFF7          	movff	postdec2,tblptrh
  3699  0011DC                     	if	0	;tblptru may be non-zero
  3700  0011DC                     	endif
  3701  0011DC                     	if	0	;tblptru may be non-zero
  3702  0011DC                     	endif
  3703  0011DC  0008               	tblrd		*
  3704  0011DE  FFFF               	dw	65535	; errata NOP
  3705  0011E0  50F5               	movf	tablat,w,c
  3706  0011E2  0A73               	xorlw	115
  3707  0011E4  A4D8               	btfss	status,2,c
  3708  0011E6  D02A               	goto	l4160
  3709                           
  3710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3711  0011E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3712  0011EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3713  0011F0  2ADE               	incf	postinc2,f,c
  3714  0011F2  0E00               	movlw	0
  3715  0011F4  22DD               	addwfc	postdec2,f,c
  3716                           
  3717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3718  0011F6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3719  0011FA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3720  0011FE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3721  001202  0E02               	movlw	2
  3722  001204  26DE               	addwf	postinc2,f,c
  3723  001206  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3724  00120A  0E00               	movlw	0
  3725  00120C  22DD               	addwfc	postdec2,f,c
  3726  00120E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3727  001212  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3728  001216  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3729  00121A  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3730                           
  3731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3732  00121E  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3733  001222  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3734  001226  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3735  00122A  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3736  00122E  EC98  F017         	call	_stoa	;wreg free
  3737  001232  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3738  001236  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3739  00123A  D30F               	goto	l519
  3740  00123C                     l4160:
  3741  00123C  FFFF               	dw	65535	; assembler added errata NOP
  3742                           
  3743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3744  00123E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3745  001242  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3746  001246  CFDE F001          	movff	postinc2,strncmp@_l
  3747  00124A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3748  00124E  0E86               	movlw	low STR_89
  3749  001250  6E03               	movwf	strncmp@_r,c
  3750  001252  0E06               	movlw	high STR_89
  3751  001254  6E04               	movwf	strncmp@_r+1,c
  3752  001256  0E00               	movlw	0
  3753  001258  6E06               	movwf	strncmp@n+1,c
  3754  00125A  0E03               	movlw	3
  3755  00125C  6E05               	movwf	strncmp@n,c
  3756  00125E  EC13  F01A         	call	_strncmp	;wreg free
  3757  001262  5001               	movf	?_strncmp,w,c
  3758  001264  1002               	iorwf	?_strncmp+1,w,c
  3759  001266  A4D8               	btfss	status,2,c
  3760  001268  D040               	goto	l4168
  3761                           
  3762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3763  00126A  0E03               	movlw	3
  3764  00126C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3765  001270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3766  001274  26DE               	addwf	postinc2,f,c
  3767  001276  0E00               	movlw	0
  3768  001278  22DD               	addwfc	postdec2,f,c
  3769                           
  3770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3771  00127A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3772  00127E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3773  001282  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3774  001286  0E02               	movlw	2
  3775  001288  26DE               	addwf	postinc2,f,c
  3776  00128A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3777  00128E  0E00               	movlw	0
  3778  001290  22DD               	addwfc	postdec2,f,c
  3779  001292  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3780  001296  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3781  00129A  50DF               	movf	indf2,w,c
  3782  00129C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3783  00129E  504B               	movf	??_vfpfcnvrt+2,w,c
  3784  0012A0  6E6A               	movwf	vfpfcnvrt@llu,c
  3785  0012A2  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3786  0012A4                     L9:
  3787  0012A4  FFFF               	dw	65535	; assembler added errata NOP
  3788  0012A6  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3789  0012A8  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3790  0012AA                     L10:
  3791  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  3792  0012AC  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3793  0012AE  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3794  0012B0  6A70               	clrf	vfpfcnvrt@llu+6,c
  3795  0012B2  6A71               	clrf	vfpfcnvrt@llu+7,c
  3796                           
  3797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3798  0012B4  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3799  0012B8  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3800  0012BC  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3801  0012C0  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3802  0012C4  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3803  0012C8  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3804  0012CC  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3805  0012D0  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3806  0012D4  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3807  0012D8  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3808  0012DC  ECDB  F013         	call	_utoa	;wreg free
  3809  0012E0  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3810  0012E4  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3811  0012E8  D2B8               	goto	l519
  3812  0012EA                     l4168:
  3813  0012EA  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3816  0012EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  0012F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  0012F4  CFDE F001          	movff	postinc2,strncmp@_l
  3819  0012F8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3820  0012FC  0E87               	movlw	low (STR_89+1)
  3821  0012FE  6E03               	movwf	strncmp@_r,c
  3822  001300  0E06               	movlw	high (STR_89+1)
  3823  001302  6E04               	movwf	strncmp@_r+1,c
  3824  001304  0E00               	movlw	0
  3825  001306  6E06               	movwf	strncmp@n+1,c
  3826  001308  0E02               	movlw	2
  3827  00130A  6E05               	movwf	strncmp@n,c
  3828  00130C  EC13  F01A         	call	_strncmp	;wreg free
  3829  001310  5001               	movf	?_strncmp,w,c
  3830  001312  1002               	iorwf	?_strncmp+1,w,c
  3831  001314  B4D8               	btfsc	status,2,c
  3832  001316  D06B               	goto	u4260
  3833                           
  3834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3835                           
  3836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3837                           
  3838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3839  001318  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3840  00131C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3841  001320  CFDE FFF6          	movff	postinc2,tblptrl
  3842  001324  CFDD FFF7          	movff	postdec2,tblptrh
  3843  001328                     	if	0	;tblptru may be non-zero
  3844  001328                     	endif
  3845  001328                     	if	0	;tblptru may be non-zero
  3846  001328                     	endif
  3847  001328  0008               	tblrd		*
  3848  00132A  FFFF               	dw	65535	; errata NOP
  3849  00132C  50F5               	movf	tablat,w,c
  3850  00132E  0A75               	xorlw	117
  3851  001330  A4D8               	btfss	status,2,c
  3852  001332  D006               	goto	l4184
  3853                           
  3854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3855  001334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3856  001338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3857  00133C  2ADE               	incf	postinc2,f,c
  3858  00133E  D05E               	goto	L19
  3859  001340                     l4184:
  3860  001340  FFFF               	dw	65535	; assembler added errata NOP
  3861                           
  3862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3863  001342  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3864  001346  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3865  00134A  CFDE F001          	movff	postinc2,strncmp@_l
  3866  00134E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3867  001352  0E8F               	movlw	low (STR_1+1)
  3868  001354  6E03               	movwf	strncmp@_r,c
  3869  001356  0E06               	movlw	high (STR_1+1)
  3870  001358  6E04               	movwf	strncmp@_r+1,c
  3871  00135A  0E00               	movlw	0
  3872  00135C  6E06               	movwf	strncmp@n+1,c
  3873  00135E  0E02               	movlw	2
  3874  001360  6E05               	movwf	strncmp@n,c
  3875  001362  EC13  F01A         	call	_strncmp	;wreg free
  3876  001366  5001               	movf	?_strncmp,w,c
  3877  001368  1002               	iorwf	?_strncmp+1,w,c
  3878  00136A  A4D8               	btfss	status,2,c
  3879  00136C  D029               	goto	l4192
  3880                           
  3881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3882  00136E  0E02               	movlw	2
  3883  001370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3884  001374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3885  001378  26DE               	addwf	postinc2,f,c
  3886  00137A  0E00               	movlw	0
  3887  00137C  22DD               	addwfc	postdec2,f,c
  3888                           
  3889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3890  00137E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3891  001382  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3892  001386  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3893  00138A  0E04               	movlw	4
  3894  00138C  26DE               	addwf	postinc2,f,c
  3895  00138E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3896  001392  0E00               	movlw	0
  3897  001394  22DD               	addwfc	postdec2,f,c
  3898  001396  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3899  00139A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3900  00139E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3901  0013A2  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3902  0013A6  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3903  0013AA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3904  0013AE  504B               	movf	??_vfpfcnvrt+2,w,c
  3905  0013B0  6E6A               	movwf	vfpfcnvrt@llu,c
  3906  0013B2  504C               	movf	??_vfpfcnvrt+3,w,c
  3907  0013B4  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3908  0013B6  504D               	movf	??_vfpfcnvrt+4,w,c
  3909  0013B8  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3910  0013BA  504E               	movf	??_vfpfcnvrt+5,w,c
  3911  0013BC  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3912  0013BE  D775               	goto	L10
  3913  0013C0                     l4192:
  3914  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3915                           
  3916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3917  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3918  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3919  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3920  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3921  0013D2  0EB0               	movlw	low STR_104
  3922  0013D4  6E03               	movwf	strncmp@_r,c
  3923  0013D6  0E06               	movlw	high STR_104
  3924  0013D8  6E04               	movwf	strncmp@_r+1,c
  3925  0013DA  0E00               	movlw	0
  3926  0013DC  6E06               	movwf	strncmp@n+1,c
  3927  0013DE  0E02               	movlw	2
  3928  0013E0  6E05               	movwf	strncmp@n,c
  3929  0013E2  EC13  F01A         	call	_strncmp	;wreg free
  3930  0013E6  5001               	movf	?_strncmp,w,c
  3931  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3932  0013EA  A4D8               	btfss	status,2,c
  3933  0013EC  D023               	goto	l4200
  3934  0013EE                     u4260:
  3935  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  3936                           
  3937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3938  0013F0  0E02               	movlw	2
  3939  0013F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3940  0013F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3941  0013FA  26DE               	addwf	postinc2,f,c
  3942  0013FC                     L19:
  3943  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  3944  0013FE  0E00               	movlw	0
  3945  001400  22DD               	addwfc	postdec2,f,c
  3946                           
  3947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3948  001402  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3949  001406  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3950  00140A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3951  00140E  0E02               	movlw	2
  3952  001410  26DE               	addwf	postinc2,f,c
  3953  001412  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3954  001416  0E00               	movlw	0
  3955  001418  22DD               	addwfc	postdec2,f,c
  3956  00141A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3957  00141E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3958  001422  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3959  001426  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3960  00142A  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3961  00142E  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3962  001432  D738               	goto	L9
  3963  001434                     l4200:
  3964  001434  FFFF               	dw	65535	; assembler added errata NOP
  3965                           
  3966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3967  001436  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3968  00143A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3969  00143E  CFDE F001          	movff	postinc2,strncmp@_l
  3970  001442  CFDD F002          	movff	postdec2,strncmp@_l+1
  3971  001446  0E8A               	movlw	low STR_109
  3972  001448  6E03               	movwf	strncmp@_r,c
  3973  00144A  0E06               	movlw	high STR_109
  3974  00144C  6E04               	movwf	strncmp@_r+1,c
  3975  00144E  0E00               	movlw	0
  3976  001450  6E06               	movwf	strncmp@n+1,c
  3977  001452  0E03               	movlw	3
  3978  001454  6E05               	movwf	strncmp@n,c
  3979  001456  EC13  F01A         	call	_strncmp	;wreg free
  3980  00145A  5001               	movf	?_strncmp,w,c
  3981  00145C  1002               	iorwf	?_strncmp+1,w,c
  3982  00145E  B4D8               	btfsc	status,2,c
  3983  001460  D016               	goto	u4280
  3984  001462  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3985  001466  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3986  00146A  CFDE F001          	movff	postinc2,strncmp@_l
  3987  00146E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3988  001472  0E72               	movlw	low STR_113
  3989  001474  6E03               	movwf	strncmp@_r,c
  3990  001476  0E06               	movlw	high STR_113
  3991  001478  6E04               	movwf	strncmp@_r+1,c
  3992  00147A  0E00               	movlw	0
  3993  00147C  6E06               	movwf	strncmp@n+1,c
  3994  00147E  0E03               	movlw	3
  3995  001480  6E05               	movwf	strncmp@n,c
  3996  001482  EC13  F01A         	call	_strncmp	;wreg free
  3997  001486  5001               	movf	?_strncmp,w,c
  3998  001488  1002               	iorwf	?_strncmp+1,w,c
  3999  00148A  A4D8               	btfss	status,2,c
  4000  00148C  D058               	goto	l4214
  4001  00148E                     u4280:
  4002  00148E  FFFF               	dw	65535	; assembler added errata NOP
  4003                           
  4004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  4005  001490  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4006  001494  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4007  001498  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4008  00149C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4009  0014A0  0E02               	movlw	2
  4010  0014A2  2649               	addwf	??_vfpfcnvrt,f,c
  4011  0014A4  0E00               	movlw	0
  4012  0014A6  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4013  0014A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4014  0014AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4015  0014B0                     	if	0	;tblptru may be non-zero
  4016  0014B0                     	endif
  4017  0014B0                     	if	0	;tblptru may be non-zero
  4018  0014B0                     	endif
  4019  0014B0  0008               	tblrd		*
  4020  0014B2  FFFF               	dw	65535	; errata NOP
  4021  0014B4  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4022                           
  4023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  4024  0014B8  0E03               	movlw	3
  4025  0014BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4026  0014BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4027  0014C2  26DE               	addwf	postinc2,f,c
  4028  0014C4  0E00               	movlw	0
  4029  0014C6  22DD               	addwfc	postdec2,f,c
  4030                           
  4031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4032  0014C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4033  0014CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4034  0014D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4035  0014D4  0E02               	movlw	2
  4036  0014D6  26DE               	addwf	postinc2,f,c
  4037  0014D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4038  0014DC  0E00               	movlw	0
  4039  0014DE  22DD               	addwfc	postdec2,f,c
  4040  0014E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4041  0014E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4042  0014E8  50DF               	movf	indf2,w,c
  4043  0014EA  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4044  0014EC  504B               	movf	??_vfpfcnvrt+2,w,c
  4045  0014EE  6E6A               	movwf	vfpfcnvrt@llu,c
  4046  0014F0  6A6B               	clrf	vfpfcnvrt@llu+1,c
  4047  0014F2                     L11:
  4048  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  4049  0014F4  6A6C               	clrf	vfpfcnvrt@llu+2,c
  4050  0014F6  6A6D               	clrf	vfpfcnvrt@llu+3,c
  4051  0014F8                     L12:
  4052  0014F8  FFFF               	dw	65535	; assembler added errata NOP
  4053  0014FA  6A6E               	clrf	vfpfcnvrt@llu+4,c
  4054  0014FC  6A6F               	clrf	vfpfcnvrt@llu+5,c
  4055  0014FE  6A70               	clrf	vfpfcnvrt@llu+6,c
  4056  001500  6A71               	clrf	vfpfcnvrt@llu+7,c
  4057                           
  4058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  4059  001502  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4060  001506  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4061  00150A  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4062  00150E  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4063  001512  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4064  001516  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4065  00151A  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4066  00151E  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4067  001522  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4068  001526  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4069  00152A  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  4070  00152E  ECAF  F012         	call	_xtoa	;wreg free
  4071  001532                     L8:
  4072  001532  FFFF               	dw	65535	; assembler added errata NOP
  4073  001534  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4074  001538  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4075  00153C  D18E               	goto	l519
  4076  00153E                     l4214:
  4077  00153E  FFFF               	dw	65535	; assembler added errata NOP
  4078                           
  4079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  4080  001540  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4081  001544  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4082  001548  CFDE F001          	movff	postinc2,strncmp@_l
  4083  00154C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4084  001550  0E8B               	movlw	low (STR_109+1)
  4085  001552  6E03               	movwf	strncmp@_r,c
  4086  001554  0E06               	movlw	high (STR_109+1)
  4087  001556  6E04               	movwf	strncmp@_r+1,c
  4088  001558  0E00               	movlw	0
  4089  00155A  6E06               	movwf	strncmp@n+1,c
  4090  00155C  0E02               	movlw	2
  4091  00155E  6E05               	movwf	strncmp@n,c
  4092  001560  EC13  F01A         	call	_strncmp	;wreg free
  4093  001564  5001               	movf	?_strncmp,w,c
  4094  001566  1002               	iorwf	?_strncmp+1,w,c
  4095  001568  B4D8               	btfsc	status,2,c
  4096  00156A  D016               	goto	u4300
  4097  00156C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4098  001570  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4099  001574  CFDE F001          	movff	postinc2,strncmp@_l
  4100  001578  CFDD F002          	movff	postdec2,strncmp@_l+1
  4101  00157C  0E73               	movlw	low (STR_113+1)
  4102  00157E  6E03               	movwf	strncmp@_r,c
  4103  001580  0E06               	movlw	high (STR_113+1)
  4104  001582  6E04               	movwf	strncmp@_r+1,c
  4105  001584  0E00               	movlw	0
  4106  001586  6E06               	movwf	strncmp@n+1,c
  4107  001588  0E02               	movlw	2
  4108  00158A  6E05               	movwf	strncmp@n,c
  4109  00158C  EC13  F01A         	call	_strncmp	;wreg free
  4110  001590  5001               	movf	?_strncmp,w,c
  4111  001592  1002               	iorwf	?_strncmp+1,w,c
  4112  001594  A4D8               	btfss	status,2,c
  4113  001596  D014               	goto	l4228
  4114  001598                     u4300:
  4115  001598  FFFF               	dw	65535	; assembler added errata NOP
  4116                           
  4117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  4118  00159A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4119  00159E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4120  0015A2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4121  0015A6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4122  0015AA  0E01               	movlw	1
  4123  0015AC  2649               	addwf	??_vfpfcnvrt,f,c
  4124  0015AE  0E00               	movlw	0
  4125  0015B0  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4126  0015B2  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4127  0015B6  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4128  0015BA                     	if	0	;tblptru may be non-zero
  4129  0015BA                     	endif
  4130  0015BA                     	if	0	;tblptru may be non-zero
  4131  0015BA                     	endif
  4132  0015BA  0008               	tblrd		*
  4133  0015BC  FFFF               	dw	65535	; errata NOP
  4134  0015BE  D0DB               	goto	L27
  4135  0015C0                     l4228:
  4136  0015C0  FFFF               	dw	65535	; assembler added errata NOP
  4137                           
  4138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  4139  0015C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4140  0015C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4141  0015CA  CFDE FFF6          	movff	postinc2,tblptrl
  4142  0015CE  CFDD FFF7          	movff	postdec2,tblptrh
  4143  0015D2                     	if	0	;tblptru may be non-zero
  4144  0015D2                     	endif
  4145  0015D2                     	if	0	;tblptru may be non-zero
  4146  0015D2                     	endif
  4147  0015D2  0008               	tblrd		*
  4148  0015D4  FFFF               	dw	65535	; errata NOP
  4149  0015D6  50F5               	movf	tablat,w,c
  4150  0015D8  0A78               	xorlw	120
  4151  0015DA  B4D8               	btfsc	status,2,c
  4152  0015DC  D00E               	goto	u4320
  4153  0015DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4154  0015E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4155  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  4156  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  4157  0015EE                     	if	0	;tblptru may be non-zero
  4158  0015EE                     	endif
  4159  0015EE                     	if	0	;tblptru may be non-zero
  4160  0015EE                     	endif
  4161  0015EE  0008               	tblrd		*
  4162  0015F0  FFFF               	dw	65535	; errata NOP
  4163  0015F2  50F5               	movf	tablat,w,c
  4164  0015F4  0A58               	xorlw	88
  4165  0015F6  A4D8               	btfss	status,2,c
  4166  0015F8  D013               	goto	l4242
  4167  0015FA                     u4320:
  4168  0015FA  FFFF               	dw	65535	; assembler added errata NOP
  4169                           
  4170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  4171  0015FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4172  001600  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4173  001604  CFDE FFF6          	movff	postinc2,tblptrl
  4174  001608  CFDD FFF7          	movff	postdec2,tblptrh
  4175  00160C                     	if	0	;tblptru may be non-zero
  4176  00160C                     	endif
  4177  00160C                     	if	0	;tblptru may be non-zero
  4178  00160C                     	endif
  4179  00160C  0008               	tblrd		*
  4180  00160E  FFFF               	dw	65535	; errata NOP
  4181  001610  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4182                           
  4183                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  4184  001614  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4185  001618  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4186  00161C  2ADE               	incf	postinc2,f,c
  4187  00161E  D0B4               	goto	L26
  4188  001620                     l4242:
  4189  001620  FFFF               	dw	65535	; assembler added errata NOP
  4190                           
  4191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  4192  001622  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4193  001626  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4194  00162A  CFDE F001          	movff	postinc2,strncmp@_l
  4195  00162E  CFDD F002          	movff	postdec2,strncmp@_l+1
  4196  001632  0EB3               	movlw	low STR_127
  4197  001634  6E03               	movwf	strncmp@_r,c
  4198  001636  0E06               	movlw	high STR_127
  4199  001638  6E04               	movwf	strncmp@_r+1,c
  4200  00163A  0E00               	movlw	0
  4201  00163C  6E06               	movwf	strncmp@n+1,c
  4202  00163E  0E02               	movlw	2
  4203  001640  6E05               	movwf	strncmp@n,c
  4204  001642  EC13  F01A         	call	_strncmp	;wreg free
  4205  001646  5001               	movf	?_strncmp,w,c
  4206  001648  1002               	iorwf	?_strncmp+1,w,c
  4207  00164A  B4D8               	btfsc	status,2,c
  4208  00164C  D016               	goto	u4340
  4209  00164E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4210  001652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4211  001656  CFDE F001          	movff	postinc2,strncmp@_l
  4212  00165A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4213  00165E  0E92               	movlw	low STR_131
  4214  001660  6E03               	movwf	strncmp@_r,c
  4215  001662  0E06               	movlw	high STR_131
  4216  001664  6E04               	movwf	strncmp@_r+1,c
  4217  001666  0E00               	movlw	0
  4218  001668  6E06               	movwf	strncmp@n+1,c
  4219  00166A  0E02               	movlw	2
  4220  00166C  6E05               	movwf	strncmp@n,c
  4221  00166E  EC13  F01A         	call	_strncmp	;wreg free
  4222  001672  5001               	movf	?_strncmp,w,c
  4223  001674  1002               	iorwf	?_strncmp+1,w,c
  4224  001676  A4D8               	btfss	status,2,c
  4225  001678  D03E               	goto	l4256
  4226  00167A                     u4340:
  4227  00167A  FFFF               	dw	65535	; assembler added errata NOP
  4228                           
  4229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  4230  00167C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4231  001680  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4232  001684  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4233  001688  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4234  00168C  0E01               	movlw	1
  4235  00168E  2649               	addwf	??_vfpfcnvrt,f,c
  4236  001690  0E00               	movlw	0
  4237  001692  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4238  001694  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4239  001698  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4240  00169C                     	if	0	;tblptru may be non-zero
  4241  00169C                     	endif
  4242  00169C                     	if	0	;tblptru may be non-zero
  4243  00169C                     	endif
  4244  00169C  0008               	tblrd		*
  4245  00169E  FFFF               	dw	65535	; errata NOP
  4246  0016A0  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4247                           
  4248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  4249  0016A4  0E02               	movlw	2
  4250  0016A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4251  0016AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4252  0016AE  26DE               	addwf	postinc2,f,c
  4253  0016B0  0E00               	movlw	0
  4254  0016B2  22DD               	addwfc	postdec2,f,c
  4255                           
  4256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  4257  0016B4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4258  0016B8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4259  0016BC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4260  0016C0  0E04               	movlw	4
  4261  0016C2  26DE               	addwf	postinc2,f,c
  4262  0016C4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4263  0016C8  0E00               	movlw	0
  4264  0016CA  22DD               	addwfc	postdec2,f,c
  4265  0016CC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4266  0016D0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4267  0016D4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4268  0016D8  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  4269  0016DC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  4270  0016E0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  4271  0016E4  504B               	movf	??_vfpfcnvrt+2,w,c
  4272  0016E6  6E6A               	movwf	vfpfcnvrt@llu,c
  4273  0016E8  504C               	movf	??_vfpfcnvrt+3,w,c
  4274  0016EA  6E6B               	movwf	vfpfcnvrt@llu+1,c
  4275  0016EC  504D               	movf	??_vfpfcnvrt+4,w,c
  4276  0016EE  6E6C               	movwf	vfpfcnvrt@llu+2,c
  4277  0016F0  504E               	movf	??_vfpfcnvrt+5,w,c
  4278  0016F2  6E6D               	movwf	vfpfcnvrt@llu+3,c
  4279  0016F4  D701               	goto	L12
  4280  0016F6                     l4256:
  4281  0016F6  FFFF               	dw	65535	; assembler added errata NOP
  4282                           
  4283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  4284  0016F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4285  0016FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4286  001700  CFDE F001          	movff	postinc2,strncmp@_l
  4287  001704  CFDD F002          	movff	postdec2,strncmp@_l+1
  4288  001708  0EB6               	movlw	low STR_136
  4289  00170A  6E03               	movwf	strncmp@_r,c
  4290  00170C  0E06               	movlw	high STR_136
  4291  00170E  6E04               	movwf	strncmp@_r+1,c
  4292  001710  0E00               	movlw	0
  4293  001712  6E06               	movwf	strncmp@n+1,c
  4294  001714  0E02               	movlw	2
  4295  001716  6E05               	movwf	strncmp@n,c
  4296  001718  EC13  F01A         	call	_strncmp	;wreg free
  4297  00171C  5001               	movf	?_strncmp,w,c
  4298  00171E  1002               	iorwf	?_strncmp+1,w,c
  4299  001720  B4D8               	btfsc	status,2,c
  4300  001722  D016               	goto	u4360
  4301  001724  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4302  001728  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4303  00172C  CFDE F001          	movff	postinc2,strncmp@_l
  4304  001730  CFDD F002          	movff	postdec2,strncmp@_l+1
  4305  001734  0E95               	movlw	low STR_140
  4306  001736  6E03               	movwf	strncmp@_r,c
  4307  001738  0E06               	movlw	high STR_140
  4308  00173A  6E04               	movwf	strncmp@_r+1,c
  4309  00173C  0E00               	movlw	0
  4310  00173E  6E06               	movwf	strncmp@n+1,c
  4311  001740  0E02               	movlw	2
  4312  001742  6E05               	movwf	strncmp@n,c
  4313  001744  EC13  F01A         	call	_strncmp	;wreg free
  4314  001748  5001               	movf	?_strncmp,w,c
  4315  00174A  1002               	iorwf	?_strncmp+1,w,c
  4316  00174C  A4D8               	btfss	status,2,c
  4317  00174E  D038               	goto	l4270
  4318  001750                     u4360:
  4319  001750  FFFF               	dw	65535	; assembler added errata NOP
  4320                           
  4321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  4322  001752  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4323  001756  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4324  00175A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4325  00175E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4326  001762  0E01               	movlw	1
  4327  001764  2649               	addwf	??_vfpfcnvrt,f,c
  4328  001766  0E00               	movlw	0
  4329  001768  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4330  00176A  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4331  00176E  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4332  001772                     	if	0	;tblptru may be non-zero
  4333  001772                     	endif
  4334  001772                     	if	0	;tblptru may be non-zero
  4335  001772                     	endif
  4336  001772  0008               	tblrd		*
  4337  001774  FFFF               	dw	65535	; errata NOP
  4338  001776                     L27:
  4339  001776  FFFF               	dw	65535	; assembler added errata NOP
  4340  001778  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4341                           
  4342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  4343  00177C  0E02               	movlw	2
  4344  00177E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4345  001782  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4346  001786  26DE               	addwf	postinc2,f,c
  4347  001788                     L26:
  4348  001788  FFFF               	dw	65535	; assembler added errata NOP
  4349  00178A  0E00               	movlw	0
  4350  00178C  22DD               	addwfc	postdec2,f,c
  4351                           
  4352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4353  00178E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4354  001792  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4355  001796  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4356  00179A  0E02               	movlw	2
  4357  00179C  26DE               	addwf	postinc2,f,c
  4358  00179E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4359  0017A2  0E00               	movlw	0
  4360  0017A4  22DD               	addwfc	postdec2,f,c
  4361  0017A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4362  0017AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4363  0017AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4364  0017B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4365  0017B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4366  0017BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4367  0017BE  D699               	goto	L11
  4368  0017C0                     l4270:
  4369  0017C0  FFFF               	dw	65535	; assembler added errata NOP
  4370                           
  4371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  4372  0017C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4373  0017C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4374  0017CA  CFDE FFF6          	movff	postinc2,tblptrl
  4375  0017CE  CFDD FFF7          	movff	postdec2,tblptrh
  4376  0017D2                     	if	0	;tblptru may be non-zero
  4377  0017D2                     	endif
  4378  0017D2                     	if	0	;tblptru may be non-zero
  4379  0017D2                     	endif
  4380  0017D2  0008               	tblrd		*
  4381  0017D4  FFFF               	dw	65535	; errata NOP
  4382  0017D6  50F5               	movf	tablat,w,c
  4383  0017D8  0A25               	xorlw	37
  4384  0017DA  A4D8               	btfss	status,2,c
  4385  0017DC  D018               	goto	l4280
  4386                           
  4387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  4388  0017DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  0017E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  0017E6  2ADE               	incf	postinc2,f,c
  4391  0017E8  0E00               	movlw	0
  4392  0017EA  22DD               	addwfc	postdec2,f,c
  4393                           
  4394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  4395  0017EC  0E00               	movlw	0
  4396  0017EE  6E02               	movwf	fputc@c+1,c
  4397  0017F0  0E25               	movlw	37
  4398  0017F2  6E01               	movwf	fputc@c,c
  4399  0017F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4400  0017F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4401  0017FC  ECD2  F01A         	call	_fputc	;wreg free
  4402  001800                     l4276:
  4403  001800  FFFF               	dw	65535	; assembler added errata NOP
  4404                           
  4405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  4406  001802  0E00               	movlw	0
  4407  001804  6E44               	movwf	?_vfpfcnvrt+1,c
  4408  001806  0E01               	movlw	1
  4409  001808                     L6:
  4410  001808  FFFF               	dw	65535	; assembler added errata NOP
  4411  00180A  6E43               	movwf	?_vfpfcnvrt,c
  4412  00180C  D026               	goto	l519
  4413  00180E                     l4280:
  4414  00180E  FFFF               	dw	65535	; assembler added errata NOP
  4415                           
  4416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  4417  001810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4418  001814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4419  001818  2ADE               	incf	postinc2,f,c
  4420  00181A  0E00               	movlw	0
  4421  00181C  22DD               	addwfc	postdec2,f,c
  4422  00181E  EFDC  F007         	goto	l4100
  4423  001822                     l4286:
  4424  001822  FFFF               	dw	65535	; assembler added errata NOP
  4425                           
  4426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  4427  001824  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4428  001828  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4429  00182C  CFDE FFF6          	movff	postinc2,tblptrl
  4430  001830  CFDD FFF7          	movff	postdec2,tblptrh
  4431  001834                     	if	0	;tblptru may be non-zero
  4432  001834                     	endif
  4433  001834                     	if	0	;tblptru may be non-zero
  4434  001834                     	endif
  4435  001834  0008               	tblrd		*
  4436  001836  FFFF               	dw	65535	; errata NOP
  4437  001838  50F5               	movf	tablat,w,c
  4438  00183A  6E01               	movwf	fputc@c,c
  4439  00183C  6A02               	clrf	fputc@c+1,c
  4440  00183E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4441  001842  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4442  001846  ECD2  F01A         	call	_fputc	;wreg free
  4443                           
  4444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  4445  00184A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4446  00184E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4447  001852  2ADE               	incf	postinc2,f,c
  4448  001854  0E00               	movlw	0
  4449  001856  22DD               	addwfc	postdec2,f,c
  4450  001858  D7D3               	goto	l4276
  4451  00185A                     l519:
  4452  00185A  FFFF               	dw	65535	; assembler added errata NOP
  4453  00185C  0012               	return		;funcret
  4454  00185E  FFFF               	dw	65535	; errata NOP
  4455  001860                     __end_of_vfpfcnvrt:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function _xtoa *****************
  4459 ;; Defined at:
  4460 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4463 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4464 ;;  d               8   29[COMRAM] unsigned long long 
  4465 ;;  x               1   37[COMRAM] unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  n               8   54[COMRAM] unsigned long long 
  4468 ;;  c               2   64[COMRAM] int 
  4469 ;;  i               2   62[COMRAM] int 
  4470 ;;  w               2   52[COMRAM] int 
  4471 ;;  p               2   50[COMRAM] int 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  2   27[COMRAM] int 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4481 ;;      Params:        11       0       0       0       0       0       0
  4482 ;;      Locals:        20       0       0       0       0       0       0
  4483 ;;      Temps:          8       0       0       0       0       0       0
  4484 ;;      Totals:        39       0       0       0       0       0       0
  4485 ;;Total ram usage:       39 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    6
  4488 ;; This function calls:
  4489 ;;		_isalpha
  4490 ;;		_isupper
  4491 ;;		_pad
  4492 ;;		_toupper
  4493 ;; This function is called by:
  4494 ;;		_vfpfcnvrt
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text8
  4499  00255E                     __ptext8:
  4500                           	opt callstack 0
  4501  00255E                     _xtoa:
  4502                           	opt callstack 0
  4503  00255E  FFFF               	dw	65535	; assembler added errata NOP
  4504                           
  4505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  4506                           
  4507                           ;incstack = 0
  4508  002560  0100               	movlb	0	; () banked
  4509  002562  AF94               	btfss	(_prec+1)& (0+255),7,b
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  4513  002564  9395               	bcf	_flags& (0+255),1,b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  4517  002566  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4518  002568  D005               	goto	u3580
  4519  00256A  5194               	movf	(_prec+1)& (0+255),w,b
  4520  00256C  E109               	bnz	l457
  4521  00256E  0593               	decf	_prec& (0+255),w,b
  4522  002570  B0D8               	btfsc	status,0,c
  4523  002572  D006               	goto	l457
  4524  002574                     u3580:
  4525  002574  FFFF               	dw	65535	; assembler added errata NOP
  4526                           
  4527                           ; BSR set to: 0
  4528  002576  0E00               	movlw	0
  4529  002578  6E34               	movwf	xtoa@p+1,c
  4530  00257A  0E01               	movlw	1
  4531  00257C  6E33               	movwf	xtoa@p,c
  4532  00257E  D005               	goto	l459
  4533  002580                     l457:
  4534  002580  FFFF               	dw	65535	; assembler added errata NOP
  4535                           
  4536                           ; BSR set to: 0
  4537  002582  C093  F033         	movff	_prec,xtoa@p
  4538  002586  C094  F034         	movff	_prec+1,xtoa@p+1
  4539  00258A                     l459:
  4540  00258A  FFFF               	dw	65535	; assembler added errata NOP
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  4544  00258C  C091  F035         	movff	_width,xtoa@w
  4545  002590  C092  F036         	movff	_width+1,xtoa@w+1
  4546                           
  4547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  4548  002594  A995               	btfss	_flags& (0+255),4,b
  4549  002596  D004               	goto	l3800
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  4553  002598  0EFE               	movlw	254
  4554  00259A  2635               	addwf	xtoa@w,f,c
  4555  00259C  0EFF               	movlw	255
  4556  00259E  2236               	addwfc	xtoa@w+1,f,c
  4557  0025A0                     l3800:
  4558  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4562  0025A2  C01E  F037         	movff	xtoa@d,xtoa@n
  4563  0025A6  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4564  0025AA  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4565  0025AE  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4566  0025B2  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4567  0025B6  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4568  0025BA  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4569  0025BE  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  4573  0025C2  0E00               	movlw	0
  4574  0025C4  6E40               	movwf	xtoa@i+1,c
  4575  0025C6  0E1F               	movlw	31
  4576  0025C8  6E3F               	movwf	xtoa@i,c
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  4580  0025CA  0E00               	movlw	0
  4581  0025CC  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4582                           
  4583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4584  0025CE  D09D               	goto	l3836
  4585  0025D0                     l3806:
  4586  0025D0  FFFF               	dw	65535	; assembler added errata NOP
  4587                           
  4588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4589  0025D2  063F               	decf	xtoa@i,f,c
  4590  0025D4  A0D8               	btfss	status,0,c
  4591  0025D6  0640               	decf	xtoa@i+1,f,c
  4592                           
  4593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  4594  0025D8  0E0F               	movlw	15
  4595  0025DA  1437               	andwf	xtoa@n,w,c
  4596  0025DC  6E41               	movwf	xtoa@c,c
  4597  0025DE  6A42               	clrf	xtoa@c+1,c
  4598                           
  4599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  4600  0025E0  BE42               	btfsc	xtoa@c+1,7,c
  4601  0025E2  D008               	goto	l3814
  4602  0025E4  5042               	movf	xtoa@c+1,w,c
  4603  0025E6  E104               	bnz	u3600
  4604  0025E8  0E0A               	movlw	10
  4605  0025EA  5C41               	subwf	xtoa@c,w,c
  4606  0025EC  A0D8               	btfss	status,0,c
  4607  0025EE  D002               	goto	l3814
  4608  0025F0                     u3600:
  4609  0025F0  0E57               	movlw	87
  4610  0025F2  D002               	goto	L20
  4611  0025F4                     l3814:
  4612  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  4613  0025F6  0E30               	movlw	48
  4614  0025F8                     L20:
  4615  0025F8  FFFF               	dw	65535	; assembler added errata NOP
  4616  0025FA  2441               	addwf	xtoa@c,w,c
  4617  0025FC  6E41               	movwf	xtoa@c,c
  4618  0025FE  0E00               	movlw	0
  4619  002600  2042               	addwfc	xtoa@c+1,w,c
  4620  002602  6E42               	movwf	xtoa@c+1,c
  4621                           
  4622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  4623  002604  0EBF               	movlw	191
  4624  002606  6E27               	movwf	??_xtoa& (0+255),c
  4625  002608  0EFF               	movlw	255
  4626  00260A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4627  00260C  5026               	movf	xtoa@x,w,c
  4628  00260E  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4629  002610  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  4630  002612  5027               	movf	??_xtoa,w,c
  4631  002614  2629               	addwf	??_xtoa+2,f,c
  4632  002616  5028               	movf	??_xtoa+1,w,c
  4633  002618  222A               	addwfc	??_xtoa+3,f,c
  4634  00261A  502A               	movf	??_xtoa+3,w,c
  4635  00261C  E106               	bnz	u3610
  4636  00261E  0E1A               	movlw	26
  4637  002620  5C29               	subwf	??_xtoa+2,w,c
  4638  002622  B0D8               	btfsc	status,0,c
  4639  002624  D002               	goto	u3610
  4640  002626  0E01               	movlw	1
  4641  002628  D002               	goto	u3620
  4642  00262A                     u3610:
  4643  00262A  FFFF               	dw	65535	; assembler added errata NOP
  4644  00262C  0E00               	movlw	0
  4645  00262E                     u3620:
  4646  00262E  FFFF               	dw	65535	; assembler added errata NOP
  4647  002630  6E2F               	movwf	_xtoa$1120,c
  4648  002632  6A30               	clrf	_xtoa$1120+1,c
  4649  002634  502F               	movf	_xtoa$1120,w,c
  4650  002636  1030               	iorwf	_xtoa$1120+1,w,c
  4651  002638  B4D8               	btfsc	status,2,c
  4652  00263A  D029               	goto	l3828
  4653  00263C  0E9F               	movlw	159
  4654  00263E  6E27               	movwf	??_xtoa& (0+255),c
  4655  002640  0EFF               	movlw	255
  4656  002642  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4657  002644  0E20               	movlw	32
  4658  002646  1041               	iorwf	xtoa@c,w,c
  4659  002648  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4660  00264A  0E00               	movlw	0
  4661  00264C  1042               	iorwf	xtoa@c+1,w,c
  4662  00264E  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  4663  002650  5027               	movf	??_xtoa,w,c
  4664  002652  2629               	addwf	??_xtoa+2,f,c
  4665  002654  5028               	movf	??_xtoa+1,w,c
  4666  002656  222A               	addwfc	??_xtoa+3,f,c
  4667  002658  502A               	movf	??_xtoa+3,w,c
  4668  00265A  E106               	bnz	u3640
  4669  00265C  0E1A               	movlw	26
  4670  00265E  5C29               	subwf	??_xtoa+2,w,c
  4671  002660  B0D8               	btfsc	status,0,c
  4672  002662  D002               	goto	u3640
  4673  002664  0E01               	movlw	1
  4674  002666  D002               	goto	u3650
  4675  002668                     u3640:
  4676  002668  FFFF               	dw	65535	; assembler added errata NOP
  4677  00266A  0E00               	movlw	0
  4678  00266C                     u3650:
  4679  00266C  FFFF               	dw	65535	; assembler added errata NOP
  4680  00266E  6E31               	movwf	_xtoa$1121,c
  4681  002670  6A32               	clrf	_xtoa$1121+1,c
  4682  002672  5031               	movf	_xtoa$1121,w,c
  4683  002674  1032               	iorwf	_xtoa$1121+1,w,c
  4684  002676  B4D8               	btfsc	status,2,c
  4685  002678  D00A               	goto	l3828
  4686                           
  4687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4688  00267A  C041  F007         	movff	xtoa@c,toupper@c
  4689  00267E  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4690  002682  ECA9  F01C         	call	_toupper	;wreg free
  4691  002686  C007  F041         	movff	?_toupper,xtoa@c
  4692  00268A  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4693  00268E                     l3828:
  4694  00268E  FFFF               	dw	65535	; assembler added errata NOP
  4695                           
  4696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4697  002690  0E9B               	movlw	low _dbuf
  4698  002692  243F               	addwf	xtoa@i,w,c
  4699  002694  6ED9               	movwf	fsr2l,c
  4700  002696  0E00               	movlw	high _dbuf
  4701  002698  2040               	addwfc	xtoa@i+1,w,c
  4702  00269A  6EDA               	movwf	fsr2h,c
  4703  00269C  C041  FFDF         	movff	xtoa@c,indf2
  4704                           
  4705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4706  0026A0  0633               	decf	xtoa@p,f,c
  4707  0026A2  A0D8               	btfss	status,0,c
  4708  0026A4  0634               	decf	xtoa@p+1,f,c
  4709                           
  4710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4711  0026A6  0635               	decf	xtoa@w,f,c
  4712  0026A8  A0D8               	btfss	status,0,c
  4713  0026AA  0636               	decf	xtoa@w+1,f,c
  4714                           
  4715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4716  0026AC  C037  F027         	movff	xtoa@n,??_xtoa
  4717  0026B0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4718  0026B4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4719  0026B8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4720  0026BC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4721  0026C0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4722  0026C4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4723  0026C8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4724  0026CC  0E05               	movlw	5
  4725  0026CE  D00A               	goto	u3670
  4726  0026D0                     u3675:
  4727  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  4728  0026D2  90D8               	bcf	status,0,c
  4729  0026D4  322E               	rrcf	??_xtoa+7,f,c
  4730  0026D6  322D               	rrcf	??_xtoa+6,f,c
  4731  0026D8  322C               	rrcf	??_xtoa+5,f,c
  4732  0026DA  322B               	rrcf	??_xtoa+4,f,c
  4733  0026DC  322A               	rrcf	??_xtoa+3,f,c
  4734  0026DE  3229               	rrcf	??_xtoa+2,f,c
  4735  0026E0  3228               	rrcf	??_xtoa+1,f,c
  4736  0026E2  3227               	rrcf	??_xtoa,f,c
  4737  0026E4                     u3670:
  4738  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  4739  0026E6  2EE8               	decfsz	wreg,f,c
  4740  0026E8  D7F3               	goto	u3675
  4741  0026EA  C027  F037         	movff	??_xtoa,xtoa@n
  4742  0026EE  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4743  0026F2  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4744  0026F6  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4745  0026FA  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4746  0026FE  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4747  002702  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4748  002706  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4749  00270A                     l3836:
  4750  00270A  FFFF               	dw	65535	; assembler added errata NOP
  4751                           
  4752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4753  00270C  BE40               	btfsc	xtoa@i+1,7,c
  4754  00270E  D022               	goto	u3720
  4755  002710  5040               	movf	xtoa@i+1,w,c
  4756  002712  E104               	bnz	u3680
  4757  002714  0E02               	movlw	2
  4758  002716  5C3F               	subwf	xtoa@i,w,c
  4759  002718  A0D8               	btfss	status,0,c
  4760  00271A  D01C               	goto	u3720
  4761  00271C                     u3680:
  4762  00271C  5037               	movf	xtoa@n,w,c
  4763  00271E  1038               	iorwf	xtoa@n+1,w,c
  4764  002720  1039               	iorwf	xtoa@n+2,w,c
  4765  002722  103A               	iorwf	xtoa@n+3,w,c
  4766  002724  103B               	iorwf	xtoa@n+4,w,c
  4767  002726  103C               	iorwf	xtoa@n+5,w,c
  4768  002728  103D               	iorwf	xtoa@n+6,w,c
  4769  00272A  103E               	iorwf	xtoa@n+7,w,c
  4770  00272C  A4D8               	btfss	status,2,c
  4771  00272E  D750               	goto	l3806
  4772  002730  BE34               	btfsc	xtoa@p+1,7,c
  4773  002732  D005               	goto	u3700
  4774  002734  5034               	movf	xtoa@p+1,w,c
  4775  002736  E102               	bnz	u3701
  4776  002738  0433               	decf	xtoa@p,w,c
  4777  00273A  B0D8               	btfsc	status,0,c
  4778  00273C                     u3701:
  4779  00273C  D749               	goto	l3806
  4780  00273E                     u3700:
  4781  00273E  FFFF               	dw	65535	; assembler added errata NOP
  4782  002740  BE36               	btfsc	xtoa@w+1,7,c
  4783  002742  D008               	goto	u3720
  4784  002744  5036               	movf	xtoa@w+1,w,c
  4785  002746  E103               	bnz	u3710
  4786  002748  0435               	decf	xtoa@w,w,c
  4787  00274A  A0D8               	btfss	status,0,c
  4788  00274C  D003               	goto	u3720
  4789  00274E                     u3710:
  4790  00274E  0100               	movlb	0	; () banked
  4791  002750  B395               	btfsc	_flags& (0+255),1,b
  4792  002752  D73E               	goto	l3806
  4793  002754                     u3720:
  4794  002754  FFFF               	dw	65535	; assembler added errata NOP
  4795                           
  4796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4797  002756  0100               	movlb	0	; () banked
  4798  002758  A995               	btfss	_flags& (0+255),4,b
  4799  00275A  D016               	goto	l3852
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4803  00275C  063F               	decf	xtoa@i,f,c
  4804  00275E  A0D8               	btfss	status,0,c
  4805  002760  0640               	decf	xtoa@i+1,f,c
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4809  002762  0E9B               	movlw	low _dbuf
  4810  002764  243F               	addwf	xtoa@i,w,c
  4811  002766  6ED9               	movwf	fsr2l,c
  4812  002768  0E00               	movlw	high _dbuf
  4813  00276A  2040               	addwfc	xtoa@i+1,w,c
  4814  00276C  6EDA               	movwf	fsr2h,c
  4815  00276E  C026  FFDF         	movff	xtoa@x,indf2
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4819  002772  063F               	decf	xtoa@i,f,c
  4820  002774  A0D8               	btfss	status,0,c
  4821  002776  0640               	decf	xtoa@i+1,f,c
  4822                           
  4823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4824  002778  0E9B               	movlw	low _dbuf
  4825  00277A  243F               	addwf	xtoa@i,w,c
  4826  00277C  6ED9               	movwf	fsr2l,c
  4827  00277E  0E00               	movlw	high _dbuf
  4828  002780  2040               	addwfc	xtoa@i+1,w,c
  4829  002782  6EDA               	movwf	fsr2h,c
  4830  002784  0E30               	movlw	48
  4831  002786  6EDF               	movwf	indf2,c
  4832  002788                     l3852:
  4833  002788  FFFF               	dw	65535	; assembler added errata NOP
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4837  00278A  C01C  F011         	movff	xtoa@fp,pad@fp
  4838  00278E  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4839  002792  0E9B               	movlw	low _dbuf
  4840  002794  243F               	addwf	xtoa@i,w,c
  4841  002796  6E13               	movwf	pad@buf,c
  4842  002798  0E00               	movlw	high _dbuf
  4843  00279A  2040               	addwfc	xtoa@i+1,w,c
  4844  00279C  6E14               	movwf	pad@buf+1,c
  4845  00279E  C035  F015         	movff	xtoa@w,pad@p
  4846  0027A2  C036  F016         	movff	xtoa@w+1,pad@p+1
  4847  0027A6  EC28  F01B         	call	_pad	;wreg free
  4848  0027AA  C011  F01C         	movff	?_pad,?_xtoa
  4849  0027AE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4850  0027B2  0012               	return		;funcret
  4851  0027B4  FFFF               	dw	65535	; errata NOP
  4852  0027B6                     __end_of_xtoa:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _toupper *****************
  4856 ;; Defined at:
  4857 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  c               2    6[COMRAM] int 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  2    6[COMRAM] int 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4871 ;;      Params:         2       0       0       0       0       0       0
  4872 ;;      Locals:         2       0       0       0       0       0       0
  4873 ;;      Temps:          4       0       0       0       0       0       0
  4874 ;;      Totals:         8       0       0       0       0       0       0
  4875 ;;Total ram usage:        8 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    3
  4878 ;; This function calls:
  4879 ;;		_islower
  4880 ;; This function is called by:
  4881 ;;		_xtoa
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text9
  4886  003952                     __ptext9:
  4887                           	opt callstack 0
  4888  003952                     _toupper:
  4889                           	opt callstack 0
  4890  003952  FFFF               	dw	65535	; assembler added errata NOP
  4891                           
  4892                           ;incstack = 0
  4893  003954  0E9F               	movlw	159
  4894  003956  6E09               	movwf	??_toupper& (0+255),c
  4895  003958  0EFF               	movlw	255
  4896  00395A  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4897  00395C  C007  F00B         	movff	toupper@c,??_toupper+2
  4898  003960  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4899  003964  5009               	movf	??_toupper,w,c
  4900  003966  260B               	addwf	??_toupper+2,f,c
  4901  003968  500A               	movf	??_toupper+1,w,c
  4902  00396A  220C               	addwfc	??_toupper+3,f,c
  4903  00396C  500C               	movf	??_toupper+3,w,c
  4904  00396E  E106               	bnz	u2880
  4905  003970  0E1A               	movlw	26
  4906  003972  5C0B               	subwf	??_toupper+2,w,c
  4907  003974  B0D8               	btfsc	status,0,c
  4908  003976  D002               	goto	u2880
  4909  003978  0E01               	movlw	1
  4910  00397A  D002               	goto	u2890
  4911  00397C                     u2880:
  4912  00397C  FFFF               	dw	65535	; assembler added errata NOP
  4913  00397E  0E00               	movlw	0
  4914  003980                     u2890:
  4915  003980  FFFF               	dw	65535	; assembler added errata NOP
  4916  003982  6E0D               	movwf	_toupper$1887,c
  4917  003984  6A0E               	clrf	_toupper$1887+1,c
  4918  003986  500D               	movf	_toupper$1887,w,c
  4919  003988  100E               	iorwf	_toupper$1887+1,w,c
  4920  00398A  B4D8               	btfsc	status,2,c
  4921  00398C  D005               	goto	l1392
  4922  00398E  0E5F               	movlw	95
  4923  003990  1407               	andwf	toupper@c,w,c
  4924  003992  6E07               	movwf	?_toupper,c
  4925  003994  6A08               	clrf	?_toupper+1,c
  4926  003996  D005               	goto	l1397
  4927  003998                     l1392:
  4928  003998  FFFF               	dw	65535	; assembler added errata NOP
  4929  00399A  C007  F007         	movff	toupper@c,?_toupper
  4930  00399E  C008  F008         	movff	toupper@c+1,?_toupper+1
  4931  0039A2                     l1397:
  4932  0039A2  FFFF               	dw	65535	; assembler added errata NOP
  4933  0039A4  0012               	return		;funcret
  4934  0039A6  FFFF               	dw	65535	; errata NOP
  4935  0039A8                     __end_of_toupper:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function _islower *****************
  4939 ;; Defined at:
  4940 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  c               2    0[COMRAM] int 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2    0[COMRAM] int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4954 ;;      Params:         2       0       0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0
  4956 ;;      Temps:          4       0       0       0       0       0       0
  4957 ;;      Totals:         6       0       0       0       0       0       0
  4958 ;;Total ram usage:        6 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    2
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_toupper
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text10
  4969  003C1E                     __ptext10:
  4970                           	opt callstack 0
  4971  003C1E                     _islower:
  4972                           	opt callstack 0
  4973  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  4974                           
  4975                           ;incstack = 0
  4976  003C20  0E9F               	movlw	159
  4977  003C22  6E03               	movwf	??_islower& (0+255),c
  4978  003C24  0EFF               	movlw	255
  4979  003C26  6E04               	movwf	(??_islower+1)& (0+255),c
  4980  003C28  C001  F005         	movff	islower@c,??_islower+2
  4981  003C2C  C002  F006         	movff	islower@c+1,??_islower+3
  4982  003C30  5003               	movf	??_islower,w,c
  4983  003C32  2605               	addwf	??_islower+2,f,c
  4984  003C34  5004               	movf	??_islower+1,w,c
  4985  003C36  2206               	addwfc	??_islower+3,f,c
  4986  003C38  5006               	movf	??_islower+3,w,c
  4987  003C3A  E106               	bnz	u2770
  4988  003C3C  0E1A               	movlw	26
  4989  003C3E  5C05               	subwf	??_islower+2,w,c
  4990  003C40  B0D8               	btfsc	status,0,c
  4991  003C42  D002               	goto	u2770
  4992  003C44  0E01               	movlw	1
  4993  003C46  D002               	goto	u2780
  4994  003C48                     u2770:
  4995  003C48  FFFF               	dw	65535	; assembler added errata NOP
  4996  003C4A  0E00               	movlw	0
  4997  003C4C                     u2780:
  4998  003C4C  FFFF               	dw	65535	; assembler added errata NOP
  4999  003C4E  6E01               	movwf	?_islower,c
  5000  003C50  6A02               	clrf	?_islower+1,c
  5001  003C52  0012               	return		;funcret
  5002  003C54  FFFF               	dw	65535	; errata NOP
  5003  003C56                     __end_of_islower:
  5004                           	opt callstack 0
  5005                           
  5006 ;; *************** function _isupper *****************
  5007 ;; Defined at:
  5008 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  c               2    0[COMRAM] int 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  2    0[COMRAM] int 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5022 ;;      Params:         2       0       0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0
  5024 ;;      Temps:          4       0       0       0       0       0       0
  5025 ;;      Totals:         6       0       0       0       0       0       0
  5026 ;;Total ram usage:        6 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    2
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_xtoa
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text11
  5037  003C56                     __ptext11:
  5038                           	opt callstack 0
  5039  003C56                     _isupper:
  5040                           	opt callstack 0
  5041  003C56  FFFF               	dw	65535	; assembler added errata NOP
  5042                           
  5043                           ;incstack = 0
  5044  003C58  0EBF               	movlw	191
  5045  003C5A  6E03               	movwf	??_isupper& (0+255),c
  5046  003C5C  0EFF               	movlw	255
  5047  003C5E  6E04               	movwf	(??_isupper+1)& (0+255),c
  5048  003C60  C001  F005         	movff	isupper@c,??_isupper+2
  5049  003C64  C002  F006         	movff	isupper@c+1,??_isupper+3
  5050  003C68  5003               	movf	??_isupper,w,c
  5051  003C6A  2605               	addwf	??_isupper+2,f,c
  5052  003C6C  5004               	movf	??_isupper+1,w,c
  5053  003C6E  2206               	addwfc	??_isupper+3,f,c
  5054  003C70  5006               	movf	??_isupper+3,w,c
  5055  003C72  E106               	bnz	u2840
  5056  003C74  0E1A               	movlw	26
  5057  003C76  5C05               	subwf	??_isupper+2,w,c
  5058  003C78  B0D8               	btfsc	status,0,c
  5059  003C7A  D002               	goto	u2840
  5060  003C7C  0E01               	movlw	1
  5061  003C7E  D002               	goto	u2850
  5062  003C80                     u2840:
  5063  003C80  FFFF               	dw	65535	; assembler added errata NOP
  5064  003C82  0E00               	movlw	0
  5065  003C84                     u2850:
  5066  003C84  FFFF               	dw	65535	; assembler added errata NOP
  5067  003C86  6E01               	movwf	?_isupper,c
  5068  003C88  6A02               	clrf	?_isupper+1,c
  5069  003C8A  0012               	return		;funcret
  5070  003C8C  FFFF               	dw	65535	; errata NOP
  5071  003C8E                     __end_of_isupper:
  5072                           	opt callstack 0
  5073                           
  5074 ;; *************** function _isalpha *****************
  5075 ;; Defined at:
  5076 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  c               2    0[COMRAM] int 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  2    0[COMRAM] int 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5090 ;;      Params:         2       0       0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0
  5092 ;;      Temps:          4       0       0       0       0       0       0
  5093 ;;      Totals:         6       0       0       0       0       0       0
  5094 ;;Total ram usage:        6 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    2
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_xtoa
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text12
  5105  003BA6                     __ptext12:
  5106                           	opt callstack 0
  5107  003BA6                     _isalpha:
  5108                           	opt callstack 0
  5109  003BA6  FFFF               	dw	65535	; assembler added errata NOP
  5110                           
  5111                           ;incstack = 0
  5112  003BA8  0E9F               	movlw	159
  5113  003BAA  6E03               	movwf	??_isalpha& (0+255),c
  5114  003BAC  0EFF               	movlw	255
  5115  003BAE  6E04               	movwf	(??_isalpha+1)& (0+255),c
  5116  003BB0  0E20               	movlw	32
  5117  003BB2  1001               	iorwf	isalpha@c,w,c
  5118  003BB4  6E05               	movwf	(??_isalpha+2)& (0+255),c
  5119  003BB6  0E00               	movlw	0
  5120  003BB8  1002               	iorwf	isalpha@c+1,w,c
  5121  003BBA  6E06               	movwf	(??_isalpha+3)& (0+255),c
  5122  003BBC  5003               	movf	??_isalpha,w,c
  5123  003BBE  2605               	addwf	??_isalpha+2,f,c
  5124  003BC0  5004               	movf	??_isalpha+1,w,c
  5125  003BC2  2206               	addwfc	??_isalpha+3,f,c
  5126  003BC4  5006               	movf	??_isalpha+3,w,c
  5127  003BC6  E106               	bnz	u2860
  5128  003BC8  0E1A               	movlw	26
  5129  003BCA  5C05               	subwf	??_isalpha+2,w,c
  5130  003BCC  B0D8               	btfsc	status,0,c
  5131  003BCE  D002               	goto	u2860
  5132  003BD0  0E01               	movlw	1
  5133  003BD2  D002               	goto	u2870
  5134  003BD4                     u2860:
  5135  003BD4  FFFF               	dw	65535	; assembler added errata NOP
  5136  003BD6  0E00               	movlw	0
  5137  003BD8                     u2870:
  5138  003BD8  FFFF               	dw	65535	; assembler added errata NOP
  5139  003BDA  6E01               	movwf	?_isalpha,c
  5140  003BDC  6A02               	clrf	?_isalpha+1,c
  5141  003BDE  0012               	return		;funcret
  5142  003BE0  FFFF               	dw	65535	; errata NOP
  5143  003BE2                     __end_of_isalpha:
  5144                           	opt callstack 0
  5145                           
  5146 ;; *************** function _utoa *****************
  5147 ;; Defined at:
  5148 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5151 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5152 ;;  d               8   29[COMRAM] unsigned long long 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  n               8   49[COMRAM] unsigned long long 
  5155 ;;  i               2   57[COMRAM] int 
  5156 ;;  w               2   47[COMRAM] int 
  5157 ;;  p               2   45[COMRAM] int 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  2   27[COMRAM] int 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5167 ;;      Params:        10       0       0       0       0       0       0
  5168 ;;      Locals:        14       0       0       0       0       0       0
  5169 ;;      Temps:          8       0       0       0       0       0       0
  5170 ;;      Totals:        32       0       0       0       0       0       0
  5171 ;;Total ram usage:       32 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    6
  5174 ;; This function calls:
  5175 ;;		___lodiv
  5176 ;;		___lomod
  5177 ;;		_pad
  5178 ;; This function is called by:
  5179 ;;		_vfpfcnvrt
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text13
  5184  0027B6                     __ptext13:
  5185                           	opt callstack 0
  5186  0027B6                     _utoa:
  5187                           	opt callstack 0
  5188  0027B6  FFFF               	dw	65535	; assembler added errata NOP
  5189                           
  5190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  5191                           
  5192                           ;incstack = 0
  5193  0027B8  0100               	movlb	0	; () banked
  5194  0027BA  AF94               	btfss	(_prec+1)& (0+255),7,b
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  5198  0027BC  9395               	bcf	_flags& (0+255),1,b
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  5202  0027BE  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5203  0027C0  D005               	goto	u3510
  5204  0027C2  5194               	movf	(_prec+1)& (0+255),w,b
  5205  0027C4  E109               	bnz	l442
  5206  0027C6  0593               	decf	_prec& (0+255),w,b
  5207  0027C8  B0D8               	btfsc	status,0,c
  5208  0027CA  D006               	goto	l442
  5209  0027CC                     u3510:
  5210  0027CC  FFFF               	dw	65535	; assembler added errata NOP
  5211                           
  5212                           ; BSR set to: 0
  5213  0027CE  0E00               	movlw	0
  5214  0027D0  6E2F               	movwf	utoa@p+1,c
  5215  0027D2  0E01               	movlw	1
  5216  0027D4  6E2E               	movwf	utoa@p,c
  5217  0027D6  D005               	goto	l444
  5218  0027D8                     l442:
  5219  0027D8  FFFF               	dw	65535	; assembler added errata NOP
  5220                           
  5221                           ; BSR set to: 0
  5222  0027DA  C093  F02E         	movff	_prec,utoa@p
  5223  0027DE  C094  F02F         	movff	_prec+1,utoa@p+1
  5224  0027E2                     l444:
  5225  0027E2  FFFF               	dw	65535	; assembler added errata NOP
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  5229  0027E4  C091  F030         	movff	_width,utoa@w
  5230  0027E8  C092  F031         	movff	_width+1,utoa@w+1
  5231                           
  5232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  5233  0027EC  C01E  F032         	movff	utoa@d,utoa@n
  5234  0027F0  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5235  0027F4  C020  F034         	movff	utoa@d+2,utoa@n+2
  5236  0027F8  C021  F035         	movff	utoa@d+3,utoa@n+3
  5237  0027FC  C022  F036         	movff	utoa@d+4,utoa@n+4
  5238  002800  C023  F037         	movff	utoa@d+5,utoa@n+5
  5239  002804  C024  F038         	movff	utoa@d+6,utoa@n+6
  5240  002808  C025  F039         	movff	utoa@d+7,utoa@n+7
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  5244  00280C  0E00               	movlw	0
  5245  00280E  6E3B               	movwf	utoa@i+1,c
  5246  002810  0E1F               	movlw	31
  5247  002812  6E3A               	movwf	utoa@i,c
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  5251  002814  0E00               	movlw	0
  5252  002816  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5253                           
  5254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5255  002818  D077               	goto	l3776
  5256  00281A                     l3766:
  5257  00281A  FFFF               	dw	65535	; assembler added errata NOP
  5258                           
  5259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  5260  00281C  063A               	decf	utoa@i,f,c
  5261  00281E  A0D8               	btfss	status,0,c
  5262  002820  063B               	decf	utoa@i+1,f,c
  5263                           
  5264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  5265  002822  0E9B               	movlw	low _dbuf
  5266  002824  243A               	addwf	utoa@i,w,c
  5267  002826  6ED9               	movwf	fsr2l,c
  5268  002828  0E00               	movlw	high _dbuf
  5269  00282A  203B               	addwfc	utoa@i+1,w,c
  5270  00282C  6EDA               	movwf	fsr2h,c
  5271  00282E  C032  F001         	movff	utoa@n,___lomod@dividend
  5272  002832  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5273  002836  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5274  00283A  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5275  00283E  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5276  002842  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5277  002846  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5278  00284A  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5279  00284E  0E0A               	movlw	10
  5280  002850  6E09               	movwf	___lomod@divisor,c
  5281  002852  0E00               	movlw	0
  5282  002854  6E0A               	movwf	___lomod@divisor+1,c
  5283  002856  0E00               	movlw	0
  5284  002858  6E0B               	movwf	___lomod@divisor+2,c
  5285  00285A  0E00               	movlw	0
  5286  00285C  6E0C               	movwf	___lomod@divisor+3,c
  5287  00285E  0E00               	movlw	0
  5288  002860  6E0D               	movwf	___lomod@divisor+4,c
  5289  002862  0E00               	movlw	0
  5290  002864  6E0E               	movwf	___lomod@divisor+5,c
  5291  002866  0E00               	movlw	0
  5292  002868  6E0F               	movwf	___lomod@divisor+6,c
  5293  00286A  0E00               	movlw	0
  5294  00286C  6E10               	movwf	___lomod@divisor+7,c
  5295  00286E  EC74  F01A         	call	___lomod	;wreg free
  5296  002872  C001  F026         	movff	?___lomod,??_utoa
  5297  002876  C002  F027         	movff	?___lomod+1,??_utoa+1
  5298  00287A  C003  F028         	movff	?___lomod+2,??_utoa+2
  5299  00287E  C004  F029         	movff	?___lomod+3,??_utoa+3
  5300  002882  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5301  002886  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5302  00288A  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5303  00288E  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5304  002892  5026               	movf	??_utoa,w,c
  5305  002894  0F30               	addlw	48
  5306  002896  6EDF               	movwf	indf2,c
  5307                           
  5308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  5309  002898  062E               	decf	utoa@p,f,c
  5310  00289A  A0D8               	btfss	status,0,c
  5311  00289C  062F               	decf	utoa@p+1,f,c
  5312                           
  5313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  5314  00289E  0630               	decf	utoa@w,f,c
  5315  0028A0  A0D8               	btfss	status,0,c
  5316  0028A2  0631               	decf	utoa@w+1,f,c
  5317                           
  5318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  5319  0028A4  C032  F001         	movff	utoa@n,___lodiv@dividend
  5320  0028A8  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5321  0028AC  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5322  0028B0  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5323  0028B4  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5324  0028B8  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5325  0028BC  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5326  0028C0  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5327  0028C4  0E0A               	movlw	10
  5328  0028C6  6E09               	movwf	___lodiv@divisor,c
  5329  0028C8  0E00               	movlw	0
  5330  0028CA  6E0A               	movwf	___lodiv@divisor+1,c
  5331  0028CC  0E00               	movlw	0
  5332  0028CE  6E0B               	movwf	___lodiv@divisor+2,c
  5333  0028D0  0E00               	movlw	0
  5334  0028D2  6E0C               	movwf	___lodiv@divisor+3,c
  5335  0028D4  0E00               	movlw	0
  5336  0028D6  6E0D               	movwf	___lodiv@divisor+4,c
  5337  0028D8  0E00               	movlw	0
  5338  0028DA  6E0E               	movwf	___lodiv@divisor+5,c
  5339  0028DC  0E00               	movlw	0
  5340  0028DE  6E0F               	movwf	___lodiv@divisor+6,c
  5341  0028E0  0E00               	movlw	0
  5342  0028E2  6E10               	movwf	___lodiv@divisor+7,c
  5343  0028E4  ECD6  F018         	call	___lodiv	;wreg free
  5344  0028E8  C001  F032         	movff	?___lodiv,utoa@n
  5345  0028EC  C002  F033         	movff	?___lodiv+1,utoa@n+1
  5346  0028F0  C003  F034         	movff	?___lodiv+2,utoa@n+2
  5347  0028F4  C004  F035         	movff	?___lodiv+3,utoa@n+3
  5348  0028F8  C005  F036         	movff	?___lodiv+4,utoa@n+4
  5349  0028FC  C006  F037         	movff	?___lodiv+5,utoa@n+5
  5350  002900  C007  F038         	movff	?___lodiv+6,utoa@n+6
  5351  002904  C008  F039         	movff	?___lodiv+7,utoa@n+7
  5352  002908                     l3776:
  5353  002908  FFFF               	dw	65535	; assembler added errata NOP
  5354                           
  5355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5356  00290A  503A               	movf	utoa@i,w,c
  5357  00290C  103B               	iorwf	utoa@i+1,w,c
  5358  00290E  B4D8               	btfsc	status,2,c
  5359  002910  D01C               	goto	u3560
  5360  002912  5032               	movf	utoa@n,w,c
  5361  002914  1033               	iorwf	utoa@n+1,w,c
  5362  002916  1034               	iorwf	utoa@n+2,w,c
  5363  002918  1035               	iorwf	utoa@n+3,w,c
  5364  00291A  1036               	iorwf	utoa@n+4,w,c
  5365  00291C  1037               	iorwf	utoa@n+5,w,c
  5366  00291E  1038               	iorwf	utoa@n+6,w,c
  5367  002920  1039               	iorwf	utoa@n+7,w,c
  5368  002922  A4D8               	btfss	status,2,c
  5369  002924  D77A               	goto	l3766
  5370  002926  BE2F               	btfsc	utoa@p+1,7,c
  5371  002928  D005               	goto	u3540
  5372  00292A  502F               	movf	utoa@p+1,w,c
  5373  00292C  E102               	bnz	u3541
  5374  00292E  042E               	decf	utoa@p,w,c
  5375  002930  B0D8               	btfsc	status,0,c
  5376  002932                     u3541:
  5377  002932  D773               	goto	l3766
  5378  002934                     u3540:
  5379  002934  FFFF               	dw	65535	; assembler added errata NOP
  5380  002936  BE31               	btfsc	utoa@w+1,7,c
  5381  002938  D008               	goto	u3560
  5382  00293A  5031               	movf	utoa@w+1,w,c
  5383  00293C  E103               	bnz	u3550
  5384  00293E  0430               	decf	utoa@w,w,c
  5385  002940  A0D8               	btfss	status,0,c
  5386  002942  D003               	goto	u3560
  5387  002944                     u3550:
  5388  002944  0100               	movlb	0	; () banked
  5389  002946  B395               	btfsc	_flags& (0+255),1,b
  5390  002948  D768               	goto	l3766
  5391  00294A                     u3560:
  5392  00294A  FFFF               	dw	65535	; assembler added errata NOP
  5393                           
  5394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  5395  00294C  C01C  F011         	movff	utoa@fp,pad@fp
  5396  002950  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5397  002954  0E9B               	movlw	low _dbuf
  5398  002956  243A               	addwf	utoa@i,w,c
  5399  002958  6E13               	movwf	pad@buf,c
  5400  00295A  0E00               	movlw	high _dbuf
  5401  00295C  203B               	addwfc	utoa@i+1,w,c
  5402  00295E  6E14               	movwf	pad@buf+1,c
  5403  002960  C030  F015         	movff	utoa@w,pad@p
  5404  002964  C031  F016         	movff	utoa@w+1,pad@p+1
  5405  002968  EC28  F01B         	call	_pad	;wreg free
  5406  00296C  C011  F01C         	movff	?_pad,?_utoa
  5407  002970  C012  F01D         	movff	?_pad+1,?_utoa+1
  5408  002974  0012               	return		;funcret
  5409  002976  FFFF               	dw	65535	; errata NOP
  5410  002978                     __end_of_utoa:
  5411                           	opt callstack 0
  5412                           
  5413 ;; *************** function ___lomod *****************
  5414 ;; Defined at:
  5415 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  dividend        8    0[COMRAM] unsigned long long 
  5418 ;;  divisor         8    8[COMRAM] unsigned long long 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  counter         1   16[COMRAM] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  8    0[COMRAM] unsigned long long 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5430 ;;      Params:        16       0       0       0       0       0       0
  5431 ;;      Locals:         1       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0
  5433 ;;      Totals:        17       0       0       0       0       0       0
  5434 ;;Total ram usage:       17 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_utoa
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text14
  5445  0034E8                     __ptext14:
  5446                           	opt callstack 0
  5447  0034E8                     ___lomod:
  5448                           	opt callstack 0
  5449  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  5450                           
  5451                           ;incstack = 0
  5452  0034EA  5009               	movf	___lomod@divisor,w,c
  5453  0034EC  100A               	iorwf	___lomod@divisor+1,w,c
  5454  0034EE  100B               	iorwf	___lomod@divisor+2,w,c
  5455  0034F0  100C               	iorwf	___lomod@divisor+3,w,c
  5456  0034F2  100D               	iorwf	___lomod@divisor+4,w,c
  5457  0034F4  100E               	iorwf	___lomod@divisor+5,w,c
  5458  0034F6  100F               	iorwf	___lomod@divisor+6,w,c
  5459  0034F8  1010               	iorwf	___lomod@divisor+7,w,c
  5460  0034FA  B4D8               	btfsc	status,2,c
  5461  0034FC  D040               	goto	l1024
  5462  0034FE  0E01               	movlw	1
  5463  003500  6E11               	movwf	___lomod@counter,c
  5464  003502  D00B               	goto	l3566
  5465  003504                     l3564:
  5466  003504  FFFF               	dw	65535	; assembler added errata NOP
  5467  003506  90D8               	bcf	status,0,c
  5468  003508  3609               	rlcf	___lomod@divisor,f,c
  5469  00350A  360A               	rlcf	___lomod@divisor+1,f,c
  5470  00350C  360B               	rlcf	___lomod@divisor+2,f,c
  5471  00350E  360C               	rlcf	___lomod@divisor+3,f,c
  5472  003510  360D               	rlcf	___lomod@divisor+4,f,c
  5473  003512  360E               	rlcf	___lomod@divisor+5,f,c
  5474  003514  360F               	rlcf	___lomod@divisor+6,f,c
  5475  003516  3610               	rlcf	___lomod@divisor+7,f,c
  5476  003518  2A11               	incf	___lomod@counter,f,c
  5477  00351A                     l3566:
  5478  00351A  FFFF               	dw	65535	; assembler added errata NOP
  5479  00351C  AE10               	btfss	___lomod@divisor+7,7,c
  5480  00351E  D7F2               	goto	l3564
  5481  003520                     u3110:
  5482  003520  FFFF               	dw	65535	; assembler added errata NOP
  5483  003522  5009               	movf	___lomod@divisor,w,c
  5484  003524  5C01               	subwf	___lomod@dividend,w,c
  5485  003526  500A               	movf	___lomod@divisor+1,w,c
  5486  003528  5802               	subwfb	___lomod@dividend+1,w,c
  5487  00352A  500B               	movf	___lomod@divisor+2,w,c
  5488  00352C  5803               	subwfb	___lomod@dividend+2,w,c
  5489  00352E  500C               	movf	___lomod@divisor+3,w,c
  5490  003530  5804               	subwfb	___lomod@dividend+3,w,c
  5491  003532  500D               	movf	___lomod@divisor+4,w,c
  5492  003534  5805               	subwfb	___lomod@dividend+4,w,c
  5493  003536  500E               	movf	___lomod@divisor+5,w,c
  5494  003538  5806               	subwfb	___lomod@dividend+5,w,c
  5495  00353A  500F               	movf	___lomod@divisor+6,w,c
  5496  00353C  5807               	subwfb	___lomod@dividend+6,w,c
  5497  00353E  5010               	movf	___lomod@divisor+7,w,c
  5498  003540  5808               	subwfb	___lomod@dividend+7,w,c
  5499  003542  A0D8               	btfss	status,0,c
  5500  003544  D010               	goto	l3572
  5501  003546  5009               	movf	___lomod@divisor,w,c
  5502  003548  5E01               	subwf	___lomod@dividend,f,c
  5503  00354A  500A               	movf	___lomod@divisor+1,w,c
  5504  00354C  5A02               	subwfb	___lomod@dividend+1,f,c
  5505  00354E  500B               	movf	___lomod@divisor+2,w,c
  5506  003550  5A03               	subwfb	___lomod@dividend+2,f,c
  5507  003552  500C               	movf	___lomod@divisor+3,w,c
  5508  003554  5A04               	subwfb	___lomod@dividend+3,f,c
  5509  003556  500D               	movf	___lomod@divisor+4,w,c
  5510  003558  5A05               	subwfb	___lomod@dividend+4,f,c
  5511  00355A  500E               	movf	___lomod@divisor+5,w,c
  5512  00355C  5A06               	subwfb	___lomod@dividend+5,f,c
  5513  00355E  500F               	movf	___lomod@divisor+6,w,c
  5514  003560  5A07               	subwfb	___lomod@dividend+6,f,c
  5515  003562  5010               	movf	___lomod@divisor+7,w,c
  5516  003564  5A08               	subwfb	___lomod@dividend+7,f,c
  5517  003566                     l3572:
  5518  003566  FFFF               	dw	65535	; assembler added errata NOP
  5519  003568  90D8               	bcf	status,0,c
  5520  00356A  3210               	rrcf	___lomod@divisor+7,f,c
  5521  00356C  320F               	rrcf	___lomod@divisor+6,f,c
  5522  00356E  320E               	rrcf	___lomod@divisor+5,f,c
  5523  003570  320D               	rrcf	___lomod@divisor+4,f,c
  5524  003572  320C               	rrcf	___lomod@divisor+3,f,c
  5525  003574  320B               	rrcf	___lomod@divisor+2,f,c
  5526  003576  320A               	rrcf	___lomod@divisor+1,f,c
  5527  003578  3209               	rrcf	___lomod@divisor,f,c
  5528  00357A  2E11               	decfsz	___lomod@counter,f,c
  5529  00357C  D7D1               	goto	u3110
  5530  00357E                     l1024:
  5531  00357E  FFFF               	dw	65535	; assembler added errata NOP
  5532  003580  C001  F001         	movff	___lomod@dividend,?___lomod
  5533  003584  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5534  003588  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5535  00358C  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5536  003590  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5537  003594  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5538  003598  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5539  00359C  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5540  0035A0  0012               	return		;funcret
  5541  0035A2  FFFF               	dw	65535	; errata NOP
  5542  0035A4                     __end_of___lomod:
  5543                           	opt callstack 0
  5544                           
  5545 ;; *************** function ___lodiv *****************
  5546 ;; Defined at:
  5547 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  dividend        8    0[COMRAM] unsigned long long 
  5550 ;;  divisor         8    8[COMRAM] unsigned long long 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  quotient        8   16[COMRAM] unsigned long long 
  5553 ;;  counter         1   24[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  8    0[COMRAM] unsigned long long 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5563 ;;      Params:        16       0       0       0       0       0       0
  5564 ;;      Locals:         9       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0
  5566 ;;      Totals:        25       0       0       0       0       0       0
  5567 ;;Total ram usage:       25 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    2
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_utoa
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text15
  5578  0031AC                     __ptext15:
  5579                           	opt callstack 0
  5580  0031AC                     ___lodiv:
  5581                           	opt callstack 0
  5582  0031AC  FFFF               	dw	65535	; assembler added errata NOP
  5583                           
  5584                           ;incstack = 0
  5585  0031AE  EE20  F011         	lfsr	2,___lodiv@quotient
  5586  0031B2  0E07               	movlw	7
  5587  0031B4                     u3061:
  5588  0031B4  6ADE               	clrf	postinc2,c
  5589  0031B6  06E8               	decf	wreg,f,c
  5590  0031B8  E2FD               	bc	u3061
  5591  0031BA  5009               	movf	___lodiv@divisor,w,c
  5592  0031BC  100A               	iorwf	___lodiv@divisor+1,w,c
  5593  0031BE  100B               	iorwf	___lodiv@divisor+2,w,c
  5594  0031C0  100C               	iorwf	___lodiv@divisor+3,w,c
  5595  0031C2  100D               	iorwf	___lodiv@divisor+4,w,c
  5596  0031C4  100E               	iorwf	___lodiv@divisor+5,w,c
  5597  0031C6  100F               	iorwf	___lodiv@divisor+6,w,c
  5598  0031C8  1010               	iorwf	___lodiv@divisor+7,w,c
  5599  0031CA  B4D8               	btfsc	status,2,c
  5600  0031CC  D04A               	goto	l1014
  5601  0031CE  0E01               	movlw	1
  5602  0031D0  6E19               	movwf	___lodiv@counter,c
  5603  0031D2  D00B               	goto	l3546
  5604  0031D4                     l3544:
  5605  0031D4  FFFF               	dw	65535	; assembler added errata NOP
  5606  0031D6  90D8               	bcf	status,0,c
  5607  0031D8  3609               	rlcf	___lodiv@divisor,f,c
  5608  0031DA  360A               	rlcf	___lodiv@divisor+1,f,c
  5609  0031DC  360B               	rlcf	___lodiv@divisor+2,f,c
  5610  0031DE  360C               	rlcf	___lodiv@divisor+3,f,c
  5611  0031E0  360D               	rlcf	___lodiv@divisor+4,f,c
  5612  0031E2  360E               	rlcf	___lodiv@divisor+5,f,c
  5613  0031E4  360F               	rlcf	___lodiv@divisor+6,f,c
  5614  0031E6  3610               	rlcf	___lodiv@divisor+7,f,c
  5615  0031E8  2A19               	incf	___lodiv@counter,f,c
  5616  0031EA                     l3546:
  5617  0031EA  FFFF               	dw	65535	; assembler added errata NOP
  5618  0031EC  AE10               	btfss	___lodiv@divisor+7,7,c
  5619  0031EE  D7F2               	goto	l3544
  5620  0031F0                     u3080:
  5621  0031F0  FFFF               	dw	65535	; assembler added errata NOP
  5622  0031F2  90D8               	bcf	status,0,c
  5623  0031F4  3611               	rlcf	___lodiv@quotient,f,c
  5624  0031F6  3612               	rlcf	___lodiv@quotient+1,f,c
  5625  0031F8  3613               	rlcf	___lodiv@quotient+2,f,c
  5626  0031FA  3614               	rlcf	___lodiv@quotient+3,f,c
  5627  0031FC  3615               	rlcf	___lodiv@quotient+4,f,c
  5628  0031FE  3616               	rlcf	___lodiv@quotient+5,f,c
  5629  003200  3617               	rlcf	___lodiv@quotient+6,f,c
  5630  003202  3618               	rlcf	___lodiv@quotient+7,f,c
  5631  003204  5009               	movf	___lodiv@divisor,w,c
  5632  003206  5C01               	subwf	___lodiv@dividend,w,c
  5633  003208  500A               	movf	___lodiv@divisor+1,w,c
  5634  00320A  5802               	subwfb	___lodiv@dividend+1,w,c
  5635  00320C  500B               	movf	___lodiv@divisor+2,w,c
  5636  00320E  5803               	subwfb	___lodiv@dividend+2,w,c
  5637  003210  500C               	movf	___lodiv@divisor+3,w,c
  5638  003212  5804               	subwfb	___lodiv@dividend+3,w,c
  5639  003214  500D               	movf	___lodiv@divisor+4,w,c
  5640  003216  5805               	subwfb	___lodiv@dividend+4,w,c
  5641  003218  500E               	movf	___lodiv@divisor+5,w,c
  5642  00321A  5806               	subwfb	___lodiv@dividend+5,w,c
  5643  00321C  500F               	movf	___lodiv@divisor+6,w,c
  5644  00321E  5807               	subwfb	___lodiv@dividend+6,w,c
  5645  003220  5010               	movf	___lodiv@divisor+7,w,c
  5646  003222  5808               	subwfb	___lodiv@dividend+7,w,c
  5647  003224  A0D8               	btfss	status,0,c
  5648  003226  D011               	goto	l3556
  5649  003228  5009               	movf	___lodiv@divisor,w,c
  5650  00322A  5E01               	subwf	___lodiv@dividend,f,c
  5651  00322C  500A               	movf	___lodiv@divisor+1,w,c
  5652  00322E  5A02               	subwfb	___lodiv@dividend+1,f,c
  5653  003230  500B               	movf	___lodiv@divisor+2,w,c
  5654  003232  5A03               	subwfb	___lodiv@dividend+2,f,c
  5655  003234  500C               	movf	___lodiv@divisor+3,w,c
  5656  003236  5A04               	subwfb	___lodiv@dividend+3,f,c
  5657  003238  500D               	movf	___lodiv@divisor+4,w,c
  5658  00323A  5A05               	subwfb	___lodiv@dividend+4,f,c
  5659  00323C  500E               	movf	___lodiv@divisor+5,w,c
  5660  00323E  5A06               	subwfb	___lodiv@dividend+5,f,c
  5661  003240  500F               	movf	___lodiv@divisor+6,w,c
  5662  003242  5A07               	subwfb	___lodiv@dividend+6,f,c
  5663  003244  5010               	movf	___lodiv@divisor+7,w,c
  5664  003246  5A08               	subwfb	___lodiv@dividend+7,f,c
  5665  003248  8011               	bsf	___lodiv@quotient,0,c
  5666  00324A                     l3556:
  5667  00324A  FFFF               	dw	65535	; assembler added errata NOP
  5668  00324C  90D8               	bcf	status,0,c
  5669  00324E  3210               	rrcf	___lodiv@divisor+7,f,c
  5670  003250  320F               	rrcf	___lodiv@divisor+6,f,c
  5671  003252  320E               	rrcf	___lodiv@divisor+5,f,c
  5672  003254  320D               	rrcf	___lodiv@divisor+4,f,c
  5673  003256  320C               	rrcf	___lodiv@divisor+3,f,c
  5674  003258  320B               	rrcf	___lodiv@divisor+2,f,c
  5675  00325A  320A               	rrcf	___lodiv@divisor+1,f,c
  5676  00325C  3209               	rrcf	___lodiv@divisor,f,c
  5677  00325E  2E19               	decfsz	___lodiv@counter,f,c
  5678  003260  D7C7               	goto	u3080
  5679  003262                     l1014:
  5680  003262  FFFF               	dw	65535	; assembler added errata NOP
  5681  003264  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5682  003268  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5683  00326C  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5684  003270  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5685  003274  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5686  003278  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5687  00327C  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5688  003280  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5689  003284  0012               	return		;funcret
  5690  003286  FFFF               	dw	65535	; errata NOP
  5691  003288                     __end_of___lodiv:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _strncmp *****************
  5695 ;; Defined at:
  5696 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5699 ;;		 -> STR_2(3), STR_1(4), 
  5700 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5701 ;;		 -> STR_142(3), STR_138(3), STR_133(3), STR_129(3), 
  5702 ;;		 -> STR_124(3), STR_120(3), STR_115(4), STR_111(4), 
  5703 ;;		 -> STR_106(3), STR_101(3), STR_96(3), STR_91(4), 
  5704 ;;		 -> STR_86(3), STR_81(3), STR_76(3), STR_71(4), 
  5705 ;;		 -> STR_66(3), STR_61(3), STR_56(3), STR_51(4), 
  5706 ;;		 -> STR_46(3), STR_42(3), STR_37(3), STR_33(3), 
  5707 ;;		 -> STR_28(3), STR_24(3), STR_19(4), STR_15(4), 
  5708 ;;  n               2    4[COMRAM] unsigned int 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5711 ;;		 -> STR_142(3), STR_138(3), STR_133(3), STR_129(3), 
  5712 ;;		 -> STR_124(3), STR_120(3), STR_115(4), STR_111(4), 
  5713 ;;		 -> STR_106(3), STR_101(3), STR_96(3), STR_91(4), 
  5714 ;;		 -> STR_86(3), STR_81(3), STR_76(3), STR_71(4), 
  5715 ;;		 -> STR_66(3), STR_61(3), STR_56(3), STR_51(4), 
  5716 ;;		 -> STR_46(3), STR_42(3), STR_37(3), STR_33(3), 
  5717 ;;		 -> STR_28(3), STR_24(3), STR_19(4), STR_15(4), 
  5718 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5719 ;;		 -> STR_2(3), STR_1(4), 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  2    0[COMRAM] int 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5729 ;;      Params:         6       0       0       0       0       0       0
  5730 ;;      Locals:         4       0       0       0       0       0       0
  5731 ;;      Temps:          1       0       0       0       0       0       0
  5732 ;;      Totals:        11       0       0       0       0       0       0
  5733 ;;Total ram usage:       11 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    2
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_vfpfcnvrt
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text16
  5744  003426                     __ptext16:
  5745                           	opt callstack 0
  5746  003426                     _strncmp:
  5747                           	opt callstack 0
  5748  003426  FFFF               	dw	65535	; assembler added errata NOP
  5749                           
  5750                           ;incstack = 0
  5751  003428  C001  F008         	movff	strncmp@_l,strncmp@l
  5752  00342C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5753  003430  C003  F00A         	movff	strncmp@_r,strncmp@r
  5754  003434  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5755  003438  0605               	decf	strncmp@n,f,c
  5756  00343A  A0D8               	btfss	status,0,c
  5757  00343C  0606               	decf	strncmp@n+1,f,c
  5758  00343E  2805               	incf	strncmp@n,w,c
  5759  003440  E110               	bnz	l3906
  5760  003442  2806               	incf	strncmp@n+1,w,c
  5761  003444  A4D8               	btfss	status,2,c
  5762  003446  D00D               	goto	l3906
  5763  003448  0E00               	movlw	0
  5764  00344A  6E02               	movwf	?_strncmp+1,c
  5765  00344C  0E00               	movlw	0
  5766  00344E  6E01               	movwf	?_strncmp,c
  5767  003450  D048               	goto	l1382
  5768  003452                     l3904:
  5769  003452  FFFF               	dw	65535	; assembler added errata NOP
  5770  003454  4A08               	infsnz	strncmp@l,f,c
  5771  003456  2A09               	incf	strncmp@l+1,f,c
  5772  003458  4A0A               	infsnz	strncmp@r,f,c
  5773  00345A  2A0B               	incf	strncmp@r+1,f,c
  5774  00345C  0605               	decf	strncmp@n,f,c
  5775  00345E  A0D8               	btfss	status,0,c
  5776  003460  0606               	decf	strncmp@n+1,f,c
  5777  003462                     l3906:
  5778  003462  FFFF               	dw	65535	; assembler added errata NOP
  5779  003464  C008  FFF6         	movff	strncmp@l,tblptrl
  5780  003468  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5781  00346C                     	if	0	;tblptru may be non-zero
  5782  00346C                     	endif
  5783  00346C                     	if	0	;tblptru may be non-zero
  5784  00346C                     	endif
  5785  00346C  0008               	tblrd		*
  5786  00346E  FFFF               	dw	65535	; errata NOP
  5787  003470  50F5               	movf	tablat,w,c
  5788  003472  0900               	iorlw	0
  5789  003474  B4D8               	btfsc	status,2,c
  5790  003476  D020               	goto	u3850
  5791  003478  C00A  FFF6         	movff	strncmp@r,tblptrl
  5792  00347C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5793  003480                     	if	0	;tblptru may be non-zero
  5794  003480                     	endif
  5795  003480                     	if	0	;tblptru may be non-zero
  5796  003480                     	endif
  5797  003480  0008               	tblrd		*
  5798  003482  FFFF               	dw	65535	; errata NOP
  5799  003484  50F5               	movf	tablat,w,c
  5800  003486  0900               	iorlw	0
  5801  003488  B4D8               	btfsc	status,2,c
  5802  00348A  D016               	goto	u3850
  5803  00348C  5005               	movf	strncmp@n,w,c
  5804  00348E  1006               	iorwf	strncmp@n+1,w,c
  5805  003490  B4D8               	btfsc	status,2,c
  5806  003492  D012               	goto	u3850
  5807  003494  C008  FFF6         	movff	strncmp@l,tblptrl
  5808  003498  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5809  00349C                     	if	0	;tblptru may be non-zero
  5810  00349C                     	endif
  5811  00349C                     	if	0	;tblptru may be non-zero
  5812  00349C                     	endif
  5813  00349C  0008               	tblrd		*
  5814  00349E  FFFF               	dw	65535	; errata NOP
  5815  0034A0  CFF5 F007          	movff	tablat,??_strncmp
  5816  0034A4  C00A  FFF6         	movff	strncmp@r,tblptrl
  5817  0034A8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5818  0034AC                     	if	0	;tblptru may be non-zero
  5819  0034AC                     	endif
  5820  0034AC                     	if	0	;tblptru may be non-zero
  5821  0034AC                     	endif
  5822  0034AC  0008               	tblrd		*
  5823  0034AE  FFFF               	dw	65535	; errata NOP
  5824  0034B0  50F5               	movf	tablat,w,c
  5825  0034B2  1807               	xorwf	??_strncmp,w,c
  5826  0034B4  B4D8               	btfsc	status,2,c
  5827  0034B6  D7CD               	goto	l3904
  5828  0034B8                     u3850:
  5829  0034B8  FFFF               	dw	65535	; assembler added errata NOP
  5830  0034BA  C008  FFF6         	movff	strncmp@l,tblptrl
  5831  0034BE  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5832  0034C2                     	if	0	;tblptru may be non-zero
  5833  0034C2                     	endif
  5834  0034C2                     	if	0	;tblptru may be non-zero
  5835  0034C2                     	endif
  5836  0034C2  0008               	tblrd		*
  5837  0034C4  FFFF               	dw	65535	; errata NOP
  5838  0034C6  CFF5 F007          	movff	tablat,??_strncmp
  5839  0034CA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5840  0034CE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5841  0034D2                     	if	0	;tblptru may be non-zero
  5842  0034D2                     	endif
  5843  0034D2                     	if	0	;tblptru may be non-zero
  5844  0034D2                     	endif
  5845  0034D2  0008               	tblrd		*
  5846  0034D4  FFFF               	dw	65535	; errata NOP
  5847  0034D6  50F5               	movf	tablat,w,c
  5848  0034D8  5C07               	subwf	??_strncmp,w,c
  5849  0034DA  6E01               	movwf	?_strncmp,c
  5850  0034DC  6A02               	clrf	?_strncmp+1,c
  5851  0034DE  A0D8               	btfss	status,0,c
  5852  0034E0  0602               	decf	?_strncmp+1,f,c
  5853  0034E2                     l1382:
  5854  0034E2  FFFF               	dw	65535	; assembler added errata NOP
  5855  0034E4  0012               	return		;funcret
  5856  0034E6  FFFF               	dw	65535	; errata NOP
  5857  0034E8                     __end_of_strncmp:
  5858                           	opt callstack 0
  5859                           
  5860 ;; *************** function _stoa *****************
  5861 ;; Defined at:
  5862 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5865 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5866 ;;  s               2   11[COMRAM] PTR unsigned char 
  5867 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5870 ;;  l               2   29[COMRAM] int 
  5871 ;;  p               2   27[COMRAM] int 
  5872 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5873 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5874 ;;  w               2   23[COMRAM] int 
  5875 ;;  i               2   21[COMRAM] int 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  2    9[COMRAM] int 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5885 ;;      Params:         4       0       0       0       0       0       0
  5886 ;;      Locals:        17       0       0       0       0       0       0
  5887 ;;      Temps:          1       0       0       0       0       0       0
  5888 ;;      Totals:        22       0       0       0       0       0       0
  5889 ;;Total ram usage:       22 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    4
  5892 ;; This function calls:
  5893 ;;		_fputc
  5894 ;;		_strlen
  5895 ;; This function is called by:
  5896 ;;		_vfpfcnvrt
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text17
  5901  002F30                     __ptext17:
  5902                           	opt callstack 0
  5903  002F30                     _stoa:
  5904                           	opt callstack 0
  5905  002F30  FFFF               	dw	65535	; assembler added errata NOP
  5906                           
  5907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5908                           
  5909                           ;incstack = 0
  5910  002F32  EE20  F0F4         	lfsr	2,stoa@F1152
  5911  002F36  EE10  F00F         	lfsr	1,stoa@nuls
  5912  002F3A  0E06               	movlw	6
  5913  002F3C                     u3411:
  5914  002F3C  CFDB FFE3          	movff	plusw2,plusw1
  5915  002F40  06E8               	decf	wreg,f,c
  5916  002F42  E2FC               	bc	u3411
  5917                           
  5918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5919  002F44  C00C  F01A         	movff	stoa@s,stoa@cp
  5920  002F48  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5921                           
  5922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5923  002F4C  501A               	movf	stoa@cp,w,c
  5924  002F4E  101B               	iorwf	stoa@cp+1,w,c
  5925  002F50  A4D8               	btfss	status,2,c
  5926  002F52  D004               	goto	l3720
  5927                           
  5928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5929  002F54  0E0F               	movlw	low stoa@nuls
  5930  002F56  6E1A               	movwf	stoa@cp,c
  5931  002F58  0E00               	movlw	high stoa@nuls
  5932  002F5A  6E1B               	movwf	stoa@cp+1,c
  5933  002F5C                     l3720:
  5934  002F5C  FFFF               	dw	65535	; assembler added errata NOP
  5935                           
  5936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5937  002F5E  C01A  F001         	movff	stoa@cp,strlen@s
  5938  002F62  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5939  002F66  EC63  F01E         	call	_strlen	;wreg free
  5940  002F6A  C001  F01E         	movff	?_strlen,stoa@l
  5941  002F6E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5942                           
  5943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5944  002F72  C093  F01C         	movff	_prec,stoa@p
  5945  002F76  C094  F01D         	movff	_prec+1,stoa@p+1
  5946                           
  5947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5948  002F7A  BE1D               	btfsc	stoa@p+1,7,c
  5949  002F7C  D00E               	goto	l423
  5950  002F7E  501E               	movf	stoa@l,w,c
  5951  002F80  5C1C               	subwf	stoa@p,w,c
  5952  002F82  501D               	movf	stoa@p+1,w,c
  5953  002F84  0A80               	xorlw	128
  5954  002F86  6E0E               	movwf	??_stoa& (0+255),c
  5955  002F88  501F               	movf	stoa@l+1,w,c
  5956  002F8A  0A80               	xorlw	128
  5957  002F8C  580E               	subwfb	??_stoa& (0+255),w,c
  5958  002F8E  B0D8               	btfsc	status,0,c
  5959  002F90  D004               	goto	l423
  5960  002F92  C01C  F01E         	movff	stoa@p,stoa@l
  5961  002F96  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5962  002F9A                     l423:
  5963  002F9A  FFFF               	dw	65535	; assembler added errata NOP
  5964                           
  5965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5966  002F9C  C01E  F01C         	movff	stoa@l,stoa@p
  5967  002FA0  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5968                           
  5969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5970  002FA4  C091  F018         	movff	_width,stoa@w
  5971  002FA8  C092  F019         	movff	_width+1,stoa@w+1
  5972                           
  5973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5974  002FAC  0100               	movlb	0	; () banked
  5975  002FAE  A195               	btfss	_flags& (0+255),0,b
  5976  002FB0  D00E               	goto	l3734
  5977  002FB2  D018               	goto	u3460
  5978  002FB4                     l3730:
  5979  002FB4  FFFF               	dw	65535	; assembler added errata NOP
  5980                           
  5981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5982  002FB6  0E00               	movlw	0
  5983  002FB8  6E02               	movwf	fputc@c+1,c
  5984  002FBA  0E20               	movlw	32
  5985  002FBC  6E01               	movwf	fputc@c,c
  5986  002FBE  C00A  F003         	movff	stoa@fp,fputc@fp
  5987  002FC2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5988  002FC6  ECD2  F01A         	call	_fputc	;wreg free
  5989                           
  5990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5991  002FCA  4A1E               	infsnz	stoa@l,f,c
  5992  002FCC  2A1F               	incf	stoa@l+1,f,c
  5993  002FCE                     l3734:
  5994  002FCE  FFFF               	dw	65535	; assembler added errata NOP
  5995                           
  5996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5997  002FD0  5018               	movf	stoa@w,w,c
  5998  002FD2  5C1E               	subwf	stoa@l,w,c
  5999  002FD4  501F               	movf	stoa@l+1,w,c
  6000  002FD6  0A80               	xorlw	128
  6001  002FD8  6E0E               	movwf	??_stoa& (0+255),c
  6002  002FDA  5019               	movf	stoa@w+1,w,c
  6003  002FDC  0A80               	xorlw	128
  6004  002FDE  580E               	subwfb	??_stoa& (0+255),w,c
  6005  002FE0  A0D8               	btfss	status,0,c
  6006  002FE2  D7E8               	goto	l3730
  6007  002FE4                     u3460:
  6008  002FE4  FFFF               	dw	65535	; assembler added errata NOP
  6009                           
  6010                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6011  002FE6  0E00               	movlw	0
  6012  002FE8  6E17               	movwf	stoa@i+1,c
  6013  002FEA  0E00               	movlw	0
  6014  002FEC  6E16               	movwf	stoa@i,c
  6015                           
  6016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6017  002FEE  D014               	goto	l3744
  6018  002FF0                     l3738:
  6019  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  6020                           
  6021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6022  002FF2  C01A  FFD9         	movff	stoa@cp,fsr2l
  6023  002FF6  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  6024  002FFA  50DF               	movf	indf2,w,c
  6025  002FFC  6E0E               	movwf	??_stoa& (0+255),c
  6026  002FFE  500E               	movf	??_stoa,w,c
  6027  003000  6E01               	movwf	fputc@c,c
  6028  003002  6A02               	clrf	fputc@c+1,c
  6029  003004  C00A  F003         	movff	stoa@fp,fputc@fp
  6030  003008  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6031  00300C  ECD2  F01A         	call	_fputc	;wreg free
  6032                           
  6033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6034  003010  4A1A               	infsnz	stoa@cp,f,c
  6035  003012  2A1B               	incf	stoa@cp+1,f,c
  6036                           
  6037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6038  003014  4A16               	infsnz	stoa@i,f,c
  6039  003016  2A17               	incf	stoa@i+1,f,c
  6040  003018                     l3744:
  6041  003018  FFFF               	dw	65535	; assembler added errata NOP
  6042                           
  6043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6044  00301A  501C               	movf	stoa@p,w,c
  6045  00301C  5C16               	subwf	stoa@i,w,c
  6046  00301E  5017               	movf	stoa@i+1,w,c
  6047  003020  0A80               	xorlw	128
  6048  003022  6E0E               	movwf	??_stoa& (0+255),c
  6049  003024  501D               	movf	stoa@p+1,w,c
  6050  003026  0A80               	xorlw	128
  6051  003028  580E               	subwfb	??_stoa& (0+255),w,c
  6052  00302A  A0D8               	btfss	status,0,c
  6053  00302C  D7E1               	goto	l3738
  6054                           
  6055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6056  00302E  0100               	movlb	0	; () banked
  6057  003030  B195               	btfsc	_flags& (0+255),0,b
  6058  003032  D00E               	goto	l3752
  6059  003034  D018               	goto	u3490
  6060  003036                     l3748:
  6061  003036  FFFF               	dw	65535	; assembler added errata NOP
  6062                           
  6063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6064  003038  0E00               	movlw	0
  6065  00303A  6E02               	movwf	fputc@c+1,c
  6066  00303C  0E20               	movlw	32
  6067  00303E  6E01               	movwf	fputc@c,c
  6068  003040  C00A  F003         	movff	stoa@fp,fputc@fp
  6069  003044  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6070  003048  ECD2  F01A         	call	_fputc	;wreg free
  6071                           
  6072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6073  00304C  4A1E               	infsnz	stoa@l,f,c
  6074  00304E  2A1F               	incf	stoa@l+1,f,c
  6075  003050                     l3752:
  6076  003050  FFFF               	dw	65535	; assembler added errata NOP
  6077                           
  6078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6079  003052  5018               	movf	stoa@w,w,c
  6080  003054  5C1E               	subwf	stoa@l,w,c
  6081  003056  501F               	movf	stoa@l+1,w,c
  6082  003058  0A80               	xorlw	128
  6083  00305A  6E0E               	movwf	??_stoa& (0+255),c
  6084  00305C  5019               	movf	stoa@w+1,w,c
  6085  00305E  0A80               	xorlw	128
  6086  003060  580E               	subwfb	??_stoa& (0+255),w,c
  6087  003062  A0D8               	btfss	status,0,c
  6088  003064  D7E8               	goto	l3748
  6089  003066                     u3490:
  6090  003066  FFFF               	dw	65535	; assembler added errata NOP
  6091                           
  6092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  6093                           
  6094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  6095  003068  C01E  F00A         	movff	stoa@l,?_stoa
  6096  00306C  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  6097  003070  0012               	return		;funcret
  6098  003072  FFFF               	dw	65535	; errata NOP
  6099  003074                     __end_of_stoa:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function _otoa *****************
  6103 ;; Defined at:
  6104 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6107 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6108 ;;  d               8   29[COMRAM] unsigned long long 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  n               8   51[COMRAM] unsigned long long 
  6111 ;;  i               2   59[COMRAM] int 
  6112 ;;  w               2   49[COMRAM] int 
  6113 ;;  t               2   47[COMRAM] int 
  6114 ;;  p               2   45[COMRAM] int 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2   27[COMRAM] int 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6124 ;;      Params:        10       0       0       0       0       0       0
  6125 ;;      Locals:        16       0       0       0       0       0       0
  6126 ;;      Temps:          8       0       0       0       0       0       0
  6127 ;;      Totals:        34       0       0       0       0       0       0
  6128 ;;Total ram usage:       34 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    6
  6131 ;; This function calls:
  6132 ;;		_pad
  6133 ;; This function is called by:
  6134 ;;		_vfpfcnvrt
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text18
  6139  002978                     __ptext18:
  6140                           	opt callstack 0
  6141  002978                     _otoa:
  6142                           	opt callstack 0
  6143  002978  FFFF               	dw	65535	; assembler added errata NOP
  6144                           
  6145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  6146                           
  6147                           ;incstack = 0
  6148  00297A  0100               	movlb	0	; () banked
  6149  00297C  AF94               	btfss	(_prec+1)& (0+255),7,b
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  6153  00297E  9395               	bcf	_flags& (0+255),1,b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  6157  002980  BF94               	btfsc	(_prec+1)& (0+255),7,b
  6158  002982  D005               	goto	u3320
  6159  002984  5194               	movf	(_prec+1)& (0+255),w,b
  6160  002986  E109               	bnz	l403
  6161  002988  0593               	decf	_prec& (0+255),w,b
  6162  00298A  B0D8               	btfsc	status,0,c
  6163  00298C  D006               	goto	l403
  6164  00298E                     u3320:
  6165  00298E  FFFF               	dw	65535	; assembler added errata NOP
  6166                           
  6167                           ; BSR set to: 0
  6168  002990  0E00               	movlw	0
  6169  002992  6E2F               	movwf	otoa@p+1,c
  6170  002994  0E01               	movlw	1
  6171  002996  6E2E               	movwf	otoa@p,c
  6172  002998  D005               	goto	l405
  6173  00299A                     l403:
  6174  00299A  FFFF               	dw	65535	; assembler added errata NOP
  6175                           
  6176                           ; BSR set to: 0
  6177  00299C  C093  F02E         	movff	_prec,otoa@p
  6178  0029A0  C094  F02F         	movff	_prec+1,otoa@p+1
  6179  0029A4                     l405:
  6180  0029A4  FFFF               	dw	65535	; assembler added errata NOP
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  6184  0029A6  C091  F032         	movff	_width,otoa@w
  6185  0029AA  C092  F033         	movff	_width+1,otoa@w+1
  6186                           
  6187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  6188  0029AE  C01E  F034         	movff	otoa@d,otoa@n
  6189  0029B2  C01F  F035         	movff	otoa@d+1,otoa@n+1
  6190  0029B6  C020  F036         	movff	otoa@d+2,otoa@n+2
  6191  0029BA  C021  F037         	movff	otoa@d+3,otoa@n+3
  6192  0029BE  C022  F038         	movff	otoa@d+4,otoa@n+4
  6193  0029C2  C023  F039         	movff	otoa@d+5,otoa@n+5
  6194  0029C6  C024  F03A         	movff	otoa@d+6,otoa@n+6
  6195  0029CA  C025  F03B         	movff	otoa@d+7,otoa@n+7
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  6199  0029CE  0E00               	movlw	0
  6200  0029D0  6E3D               	movwf	otoa@i+1,c
  6201  0029D2  0E1F               	movlw	31
  6202  0029D4  6E3C               	movwf	otoa@i,c
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  6206  0029D6  0E00               	movlw	0
  6207  0029D8  6FBA               	movwf	(_dbuf+31)& (0+255),b
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  6211  0029DA  0E00               	movlw	0
  6212  0029DC  6E31               	movwf	otoa@t+1,c
  6213  0029DE  0E00               	movlw	0
  6214  0029E0  6E30               	movwf	otoa@t,c
  6215                           
  6216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6217  0029E2  D046               	goto	l3690
  6218  0029E4                     l3678:
  6219  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  6220                           
  6221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  6222  0029E6  063C               	decf	otoa@i,f,c
  6223  0029E8  A0D8               	btfss	status,0,c
  6224  0029EA  063D               	decf	otoa@i+1,f,c
  6225                           
  6226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  6227  0029EC  0E07               	movlw	7
  6228  0029EE  1434               	andwf	otoa@n,w,c
  6229  0029F0  6E30               	movwf	otoa@t,c
  6230  0029F2  6A31               	clrf	otoa@t+1,c
  6231                           
  6232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  6233  0029F4  0E9B               	movlw	low _dbuf
  6234  0029F6  243C               	addwf	otoa@i,w,c
  6235  0029F8  6ED9               	movwf	fsr2l,c
  6236  0029FA  0E00               	movlw	high _dbuf
  6237  0029FC  203D               	addwfc	otoa@i+1,w,c
  6238  0029FE  6EDA               	movwf	fsr2h,c
  6239  002A00  5030               	movf	otoa@t,w,c
  6240  002A02  0F30               	addlw	48
  6241  002A04  6EDF               	movwf	indf2,c
  6242                           
  6243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  6244  002A06  062E               	decf	otoa@p,f,c
  6245  002A08  A0D8               	btfss	status,0,c
  6246  002A0A  062F               	decf	otoa@p+1,f,c
  6247                           
  6248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  6249  002A0C  0632               	decf	otoa@w,f,c
  6250  002A0E  A0D8               	btfss	status,0,c
  6251  002A10  0633               	decf	otoa@w+1,f,c
  6252                           
  6253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  6254  002A12  C034  F026         	movff	otoa@n,??_otoa
  6255  002A16  C035  F027         	movff	otoa@n+1,??_otoa+1
  6256  002A1A  C036  F028         	movff	otoa@n+2,??_otoa+2
  6257  002A1E  C037  F029         	movff	otoa@n+3,??_otoa+3
  6258  002A22  C038  F02A         	movff	otoa@n+4,??_otoa+4
  6259  002A26  C039  F02B         	movff	otoa@n+5,??_otoa+5
  6260  002A2A  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  6261  002A2E  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  6262  002A32  0E04               	movlw	4
  6263  002A34  D00A               	goto	u3330
  6264  002A36                     u3335:
  6265  002A36  FFFF               	dw	65535	; assembler added errata NOP
  6266  002A38  90D8               	bcf	status,0,c
  6267  002A3A  322D               	rrcf	??_otoa+7,f,c
  6268  002A3C  322C               	rrcf	??_otoa+6,f,c
  6269  002A3E  322B               	rrcf	??_otoa+5,f,c
  6270  002A40  322A               	rrcf	??_otoa+4,f,c
  6271  002A42  3229               	rrcf	??_otoa+3,f,c
  6272  002A44  3228               	rrcf	??_otoa+2,f,c
  6273  002A46  3227               	rrcf	??_otoa+1,f,c
  6274  002A48  3226               	rrcf	??_otoa,f,c
  6275  002A4A                     u3330:
  6276  002A4A  FFFF               	dw	65535	; assembler added errata NOP
  6277  002A4C  2EE8               	decfsz	wreg,f,c
  6278  002A4E  D7F3               	goto	u3335
  6279  002A50  C026  F034         	movff	??_otoa,otoa@n
  6280  002A54  C027  F035         	movff	??_otoa+1,otoa@n+1
  6281  002A58  C028  F036         	movff	??_otoa+2,otoa@n+2
  6282  002A5C  C029  F037         	movff	??_otoa+3,otoa@n+3
  6283  002A60  C02A  F038         	movff	??_otoa+4,otoa@n+4
  6284  002A64  C02B  F039         	movff	??_otoa+5,otoa@n+5
  6285  002A68  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  6286  002A6C  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  6287  002A70                     l3690:
  6288  002A70  FFFF               	dw	65535	; assembler added errata NOP
  6289                           
  6290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6291  002A72  BE3D               	btfsc	otoa@i+1,7,c
  6292  002A74  D021               	goto	u3380
  6293  002A76  503D               	movf	otoa@i+1,w,c
  6294  002A78  E103               	bnz	u3340
  6295  002A7A  043C               	decf	otoa@i,w,c
  6296  002A7C  A0D8               	btfss	status,0,c
  6297  002A7E  D01C               	goto	u3380
  6298  002A80                     u3340:
  6299  002A80  5034               	movf	otoa@n,w,c
  6300  002A82  1035               	iorwf	otoa@n+1,w,c
  6301  002A84  1036               	iorwf	otoa@n+2,w,c
  6302  002A86  1037               	iorwf	otoa@n+3,w,c
  6303  002A88  1038               	iorwf	otoa@n+4,w,c
  6304  002A8A  1039               	iorwf	otoa@n+5,w,c
  6305  002A8C  103A               	iorwf	otoa@n+6,w,c
  6306  002A8E  103B               	iorwf	otoa@n+7,w,c
  6307  002A90  A4D8               	btfss	status,2,c
  6308  002A92  D7A8               	goto	l3678
  6309  002A94  BE2F               	btfsc	otoa@p+1,7,c
  6310  002A96  D005               	goto	u3360
  6311  002A98  502F               	movf	otoa@p+1,w,c
  6312  002A9A  E1A4               	bnz	l3678
  6313  002A9C  042E               	decf	otoa@p,w,c
  6314  002A9E  B0D8               	btfsc	status,0,c
  6315  002AA0  D7A1               	goto	l3678
  6316  002AA2                     u3360:
  6317  002AA2  FFFF               	dw	65535	; assembler added errata NOP
  6318  002AA4  BE33               	btfsc	otoa@w+1,7,c
  6319  002AA6  D008               	goto	u3380
  6320  002AA8  5033               	movf	otoa@w+1,w,c
  6321  002AAA  E103               	bnz	u3370
  6322  002AAC  0432               	decf	otoa@w,w,c
  6323  002AAE  A0D8               	btfss	status,0,c
  6324  002AB0  D003               	goto	u3380
  6325  002AB2                     u3370:
  6326  002AB2  0100               	movlb	0	; () banked
  6327  002AB4  B395               	btfsc	_flags& (0+255),1,b
  6328  002AB6  D796               	goto	l3678
  6329  002AB8                     u3380:
  6330  002AB8  FFFF               	dw	65535	; assembler added errata NOP
  6331                           
  6332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  6333  002ABA  0100               	movlb	0	; () banked
  6334  002ABC  A995               	btfss	_flags& (0+255),4,b
  6335  002ABE  D012               	goto	l3708
  6336                           
  6337                           ; BSR set to: 0
  6338  002AC0  5030               	movf	otoa@t,w,c
  6339  002AC2  1031               	iorwf	otoa@t+1,w,c
  6340  002AC4  B4D8               	btfsc	status,2,c
  6341  002AC6  D00E               	goto	l3708
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  6345  002AC8  063C               	decf	otoa@i,f,c
  6346  002ACA  A0D8               	btfss	status,0,c
  6347  002ACC  063D               	decf	otoa@i+1,f,c
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  6351  002ACE  0E9B               	movlw	low _dbuf
  6352  002AD0  243C               	addwf	otoa@i,w,c
  6353  002AD2  6ED9               	movwf	fsr2l,c
  6354  002AD4  0E00               	movlw	high _dbuf
  6355  002AD6  203D               	addwfc	otoa@i+1,w,c
  6356  002AD8  6EDA               	movwf	fsr2h,c
  6357  002ADA  0E30               	movlw	48
  6358  002ADC  6EDF               	movwf	indf2,c
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  6362  002ADE  0632               	decf	otoa@w,f,c
  6363  002AE0  A0D8               	btfss	status,0,c
  6364  002AE2  0633               	decf	otoa@w+1,f,c
  6365  002AE4                     l3708:
  6366  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  6370  002AE6  C01C  F011         	movff	otoa@fp,pad@fp
  6371  002AEA  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  6372  002AEE  0E9B               	movlw	low _dbuf
  6373  002AF0  243C               	addwf	otoa@i,w,c
  6374  002AF2  6E13               	movwf	pad@buf,c
  6375  002AF4  0E00               	movlw	high _dbuf
  6376  002AF6  203D               	addwfc	otoa@i+1,w,c
  6377  002AF8  6E14               	movwf	pad@buf+1,c
  6378  002AFA  C032  F015         	movff	otoa@w,pad@p
  6379  002AFE  C033  F016         	movff	otoa@w+1,pad@p+1
  6380  002B02  EC28  F01B         	call	_pad	;wreg free
  6381  002B06  C011  F01C         	movff	?_pad,?_otoa
  6382  002B0A  C012  F01D         	movff	?_pad+1,?_otoa+1
  6383  002B0E  0012               	return		;funcret
  6384  002B10  FFFF               	dw	65535	; errata NOP
  6385  002B12                     __end_of_otoa:
  6386                           	opt callstack 0
  6387                           
  6388 ;; *************** function _dtoa *****************
  6389 ;; Defined at:
  6390 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6393 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6394 ;;  d               8   29[COMRAM] long long 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  n               8   53[COMRAM] long long 
  6397 ;;  i               2   61[COMRAM] int 
  6398 ;;  s               2   51[COMRAM] int 
  6399 ;;  w               2   49[COMRAM] int 
  6400 ;;  p               2   47[COMRAM] int 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  2   27[COMRAM] int 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6410 ;;      Params:        10       0       0       0       0       0       0
  6411 ;;      Locals:        18       0       0       0       0       0       0
  6412 ;;      Temps:          8       0       0       0       0       0       0
  6413 ;;      Totals:        36       0       0       0       0       0       0
  6414 ;;Total ram usage:       36 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    6
  6417 ;; This function calls:
  6418 ;;		___aodiv
  6419 ;;		___aomod
  6420 ;;		_abs
  6421 ;;		_pad
  6422 ;; This function is called by:
  6423 ;;		_vfpfcnvrt
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text19
  6428  0022F4                     __ptext19:
  6429                           	opt callstack 0
  6430  0022F4                     _dtoa:
  6431                           	opt callstack 0
  6432  0022F4  FFFF               	dw	65535	; assembler added errata NOP
  6433                           
  6434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6435                           
  6436                           ;incstack = 0
  6437  0022F6  C01E  F036         	movff	dtoa@d,dtoa@n
  6438  0022FA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6439  0022FE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6440  002302  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6441  002306  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6442  00230A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6443  00230E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6444  002312  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6445                           
  6446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6447  002316  AE3D               	btfss	dtoa@n+7,7,c
  6448  002318  D002               	goto	u3160
  6449  00231A  0E01               	movlw	1
  6450  00231C  D002               	goto	u3170
  6451  00231E                     u3160:
  6452  00231E  FFFF               	dw	65535	; assembler added errata NOP
  6453  002320  0E00               	movlw	0
  6454  002322                     u3170:
  6455  002322  FFFF               	dw	65535	; assembler added errata NOP
  6456  002324  6E34               	movwf	dtoa@s,c
  6457  002326  6A35               	clrf	dtoa@s+1,c
  6458                           
  6459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6460  002328  5034               	movf	dtoa@s,w,c
  6461  00232A  1035               	iorwf	dtoa@s+1,w,c
  6462  00232C  B4D8               	btfsc	status,2,c
  6463  00232E  D010               	goto	l3608
  6464                           
  6465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6466  002330  1E3D               	comf	dtoa@n+7,f,c
  6467  002332  1E3C               	comf	dtoa@n+6,f,c
  6468  002334  1E3B               	comf	dtoa@n+5,f,c
  6469  002336  1E3A               	comf	dtoa@n+4,f,c
  6470  002338  1E39               	comf	dtoa@n+3,f,c
  6471  00233A  1E38               	comf	dtoa@n+2,f,c
  6472  00233C  1E37               	comf	dtoa@n+1,f,c
  6473  00233E  6C36               	negf	dtoa@n,c
  6474  002340  0E00               	movlw	0
  6475  002342  2237               	addwfc	dtoa@n+1,f,c
  6476  002344  2238               	addwfc	dtoa@n+2,f,c
  6477  002346  2239               	addwfc	dtoa@n+3,f,c
  6478  002348  223A               	addwfc	dtoa@n+4,f,c
  6479  00234A  223B               	addwfc	dtoa@n+5,f,c
  6480  00234C  223C               	addwfc	dtoa@n+6,f,c
  6481  00234E  223D               	addwfc	dtoa@n+7,f,c
  6482  002350                     l3608:
  6483  002350  FFFF               	dw	65535	; assembler added errata NOP
  6484                           
  6485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6486  002352  0100               	movlb	0	; () banked
  6487  002354  AF94               	btfss	(_prec+1)& (0+255),7,b
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6491  002356  9395               	bcf	_flags& (0+255),1,b
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6495  002358  BF94               	btfsc	(_prec+1)& (0+255),7,b
  6496  00235A  D005               	goto	u3200
  6497  00235C  5194               	movf	(_prec+1)& (0+255),w,b
  6498  00235E  E109               	bnz	l378
  6499  002360  0593               	decf	_prec& (0+255),w,b
  6500  002362  B0D8               	btfsc	status,0,c
  6501  002364  D006               	goto	l378
  6502  002366                     u3200:
  6503  002366  FFFF               	dw	65535	; assembler added errata NOP
  6504                           
  6505                           ; BSR set to: 0
  6506  002368  0E00               	movlw	0
  6507  00236A  6E31               	movwf	dtoa@p+1,c
  6508  00236C  0E01               	movlw	1
  6509  00236E  6E30               	movwf	dtoa@p,c
  6510  002370  D005               	goto	l380
  6511  002372                     l378:
  6512  002372  FFFF               	dw	65535	; assembler added errata NOP
  6513                           
  6514                           ; BSR set to: 0
  6515  002374  C093  F030         	movff	_prec,dtoa@p
  6516  002378  C094  F031         	movff	_prec+1,dtoa@p+1
  6517  00237C                     l380:
  6518  00237C  FFFF               	dw	65535	; assembler added errata NOP
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6522  00237E  C091  F032         	movff	_width,dtoa@w
  6523  002382  C092  F033         	movff	_width+1,dtoa@w+1
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6527  002386  5034               	movf	dtoa@s,w,c
  6528  002388  1035               	iorwf	dtoa@s+1,w,c
  6529  00238A  A4D8               	btfss	status,2,c
  6530  00238C  D002               	goto	u3220
  6531                           
  6532                           ; BSR set to: 0
  6533  00238E  A595               	btfss	_flags& (0+255),2,b
  6534  002390  D004               	goto	l3622
  6535  002392                     u3220:
  6536  002392  FFFF               	dw	65535	; assembler added errata NOP
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6540  002394  0632               	decf	dtoa@w,f,c
  6541  002396  A0D8               	btfss	status,0,c
  6542  002398  0633               	decf	dtoa@w+1,f,c
  6543  00239A                     l3622:
  6544  00239A  FFFF               	dw	65535	; assembler added errata NOP
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6548  00239C  0E00               	movlw	0
  6549  00239E  6E3F               	movwf	dtoa@i+1,c
  6550  0023A0  0E1F               	movlw	31
  6551  0023A2  6E3E               	movwf	dtoa@i,c
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6555  0023A4  0E00               	movlw	0
  6556  0023A6  6FBA               	movwf	(_dbuf+31)& (0+255),b
  6557                           
  6558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6559  0023A8  D07D               	goto	l3636
  6560  0023AA                     l3626:
  6561  0023AA  FFFF               	dw	65535	; assembler added errata NOP
  6562                           
  6563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6564  0023AC  063E               	decf	dtoa@i,f,c
  6565  0023AE  A0D8               	btfss	status,0,c
  6566  0023B0  063F               	decf	dtoa@i+1,f,c
  6567                           
  6568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6569  0023B2  0E9B               	movlw	low _dbuf
  6570  0023B4  243E               	addwf	dtoa@i,w,c
  6571  0023B6  6ED9               	movwf	fsr2l,c
  6572  0023B8  0E00               	movlw	high _dbuf
  6573  0023BA  203F               	addwfc	dtoa@i+1,w,c
  6574  0023BC  6EDA               	movwf	fsr2h,c
  6575  0023BE  C036  F001         	movff	dtoa@n,___aomod@dividend
  6576  0023C2  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6577  0023C6  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6578  0023CA  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6579  0023CE  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6580  0023D2  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6581  0023D6  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6582  0023DA  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6583  0023DE  0E0A               	movlw	10
  6584  0023E0  6E09               	movwf	___aomod@divisor,c
  6585  0023E2  0E00               	movlw	0
  6586  0023E4  6E0A               	movwf	___aomod@divisor+1,c
  6587  0023E6  0E00               	movlw	0
  6588  0023E8  6E0B               	movwf	___aomod@divisor+2,c
  6589  0023EA  0E00               	movlw	0
  6590  0023EC  6E0C               	movwf	___aomod@divisor+3,c
  6591  0023EE  0E00               	movlw	0
  6592  0023F0  6E0D               	movwf	___aomod@divisor+4,c
  6593  0023F2  0E00               	movlw	0
  6594  0023F4  6E0E               	movwf	___aomod@divisor+5,c
  6595  0023F6  0E00               	movlw	0
  6596  0023F8  6E0F               	movwf	___aomod@divisor+6,c
  6597  0023FA  0E00               	movlw	0
  6598  0023FC  6E10               	movwf	___aomod@divisor+7,c
  6599  0023FE  EC3A  F018         	call	___aomod	;wreg free
  6600  002402  C001  F026         	movff	?___aomod,??_dtoa
  6601  002406  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6602  00240A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6603  00240E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6604  002412  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6605  002416  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6606  00241A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6607  00241E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6608  002422  C026  F013         	movff	??_dtoa,abs@a
  6609  002426  C028  F014         	movff	??_dtoa+2,abs@a+1
  6610  00242A  ECF1  F01D         	call	_abs	;wreg free
  6611  00242E  5013               	movf	?_abs,w,c
  6612  002430  0F30               	addlw	48
  6613  002432  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  6616  002434  0630               	decf	dtoa@p,f,c
  6617  002436  A0D8               	btfss	status,0,c
  6618  002438  0631               	decf	dtoa@p+1,f,c
  6619                           
  6620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  6621  00243A  0632               	decf	dtoa@w,f,c
  6622  00243C  A0D8               	btfss	status,0,c
  6623  00243E  0633               	decf	dtoa@w+1,f,c
  6624                           
  6625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6626  002440  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6627  002444  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6628  002448  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6629  00244C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6630  002450  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6631  002454  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6632  002458  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6633  00245C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6634  002460  0E0A               	movlw	10
  6635  002462  6E09               	movwf	___aodiv@divisor,c
  6636  002464  0E00               	movlw	0
  6637  002466  6E0A               	movwf	___aodiv@divisor+1,c
  6638  002468  0E00               	movlw	0
  6639  00246A  6E0B               	movwf	___aodiv@divisor+2,c
  6640  00246C  0E00               	movlw	0
  6641  00246E  6E0C               	movwf	___aodiv@divisor+3,c
  6642  002470  0E00               	movlw	0
  6643  002472  6E0D               	movwf	___aodiv@divisor+4,c
  6644  002474  0E00               	movlw	0
  6645  002476  6E0E               	movwf	___aodiv@divisor+5,c
  6646  002478  0E00               	movlw	0
  6647  00247A  6E0F               	movwf	___aodiv@divisor+6,c
  6648  00247C  0E00               	movlw	0
  6649  00247E  6E10               	movwf	___aodiv@divisor+7,c
  6650  002480  EC3C  F016         	call	___aodiv	;wreg free
  6651  002484  C001  F036         	movff	?___aodiv,dtoa@n
  6652  002488  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6653  00248C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6654  002490  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6655  002494  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6656  002498  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6657  00249C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6658  0024A0  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6659  0024A4                     l3636:
  6660  0024A4  FFFF               	dw	65535	; assembler added errata NOP
  6661                           
  6662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6663  0024A6  BE3F               	btfsc	dtoa@i+1,7,c
  6664  0024A8  D021               	goto	u3270
  6665  0024AA  503F               	movf	dtoa@i+1,w,c
  6666  0024AC  E103               	bnz	u3230
  6667  0024AE  043E               	decf	dtoa@i,w,c
  6668  0024B0  A0D8               	btfss	status,0,c
  6669  0024B2  D01C               	goto	u3270
  6670  0024B4                     u3230:
  6671  0024B4  5036               	movf	dtoa@n,w,c
  6672  0024B6  1037               	iorwf	dtoa@n+1,w,c
  6673  0024B8  1038               	iorwf	dtoa@n+2,w,c
  6674  0024BA  1039               	iorwf	dtoa@n+3,w,c
  6675  0024BC  103A               	iorwf	dtoa@n+4,w,c
  6676  0024BE  103B               	iorwf	dtoa@n+5,w,c
  6677  0024C0  103C               	iorwf	dtoa@n+6,w,c
  6678  0024C2  103D               	iorwf	dtoa@n+7,w,c
  6679  0024C4  A4D8               	btfss	status,2,c
  6680  0024C6  D771               	goto	l3626
  6681  0024C8  BE31               	btfsc	dtoa@p+1,7,c
  6682  0024CA  D005               	goto	u3250
  6683  0024CC  5031               	movf	dtoa@p+1,w,c
  6684  0024CE  E102               	bnz	u3251
  6685  0024D0  0430               	decf	dtoa@p,w,c
  6686  0024D2  B0D8               	btfsc	status,0,c
  6687  0024D4                     u3251:
  6688  0024D4  D76A               	goto	l3626
  6689  0024D6                     u3250:
  6690  0024D6  FFFF               	dw	65535	; assembler added errata NOP
  6691  0024D8  BE33               	btfsc	dtoa@w+1,7,c
  6692  0024DA  D008               	goto	u3270
  6693  0024DC  5033               	movf	dtoa@w+1,w,c
  6694  0024DE  E103               	bnz	u3260
  6695  0024E0  0432               	decf	dtoa@w,w,c
  6696  0024E2  A0D8               	btfss	status,0,c
  6697  0024E4  D003               	goto	u3270
  6698  0024E6                     u3260:
  6699  0024E6  0100               	movlb	0	; () banked
  6700  0024E8  B395               	btfsc	_flags& (0+255),1,b
  6701  0024EA  D75F               	goto	l3626
  6702  0024EC                     u3270:
  6703  0024EC  FFFF               	dw	65535	; assembler added errata NOP
  6704                           
  6705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6706  0024EE  5034               	movf	dtoa@s,w,c
  6707  0024F0  1035               	iorwf	dtoa@s+1,w,c
  6708  0024F2  A4D8               	btfss	status,2,c
  6709  0024F4  D003               	goto	u3290
  6710  0024F6  0100               	movlb	0	; () banked
  6711  0024F8  A595               	btfss	_flags& (0+255),2,b
  6712  0024FA  D01A               	goto	l3660
  6713  0024FC                     u3290:
  6714  0024FC  FFFF               	dw	65535	; assembler added errata NOP
  6715                           
  6716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  6717  0024FE  063E               	decf	dtoa@i,f,c
  6718  002500  A0D8               	btfss	status,0,c
  6719  002502  063F               	decf	dtoa@i+1,f,c
  6720                           
  6721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6722  002504  5034               	movf	dtoa@s,w,c
  6723  002506  1035               	iorwf	dtoa@s+1,w,c
  6724  002508  A4D8               	btfss	status,2,c
  6725  00250A  D004               	goto	l3656
  6726  00250C  0E00               	movlw	0
  6727  00250E  6E2F               	movwf	_dtoa$1084+1,c
  6728  002510  0E2B               	movlw	43
  6729  002512  D004               	goto	L21
  6730  002514                     l3656:
  6731  002514  FFFF               	dw	65535	; assembler added errata NOP
  6732  002516  0E00               	movlw	0
  6733  002518  6E2F               	movwf	_dtoa$1084+1,c
  6734  00251A  0E2D               	movlw	45
  6735  00251C                     L21:
  6736  00251C  FFFF               	dw	65535	; assembler added errata NOP
  6737  00251E  6E2E               	movwf	_dtoa$1084,c
  6738  002520  0E9B               	movlw	low _dbuf
  6739  002522  243E               	addwf	dtoa@i,w,c
  6740  002524  6ED9               	movwf	fsr2l,c
  6741  002526  0E00               	movlw	high _dbuf
  6742  002528  203F               	addwfc	dtoa@i+1,w,c
  6743  00252A  6EDA               	movwf	fsr2h,c
  6744  00252C  C02E  FFDF         	movff	_dtoa$1084,indf2
  6745  002530                     l3660:
  6746  002530  FFFF               	dw	65535	; assembler added errata NOP
  6747                           
  6748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6749  002532  C01C  F011         	movff	dtoa@fp,pad@fp
  6750  002536  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6751  00253A  0E9B               	movlw	low _dbuf
  6752  00253C  243E               	addwf	dtoa@i,w,c
  6753  00253E  6E13               	movwf	pad@buf,c
  6754  002540  0E00               	movlw	high _dbuf
  6755  002542  203F               	addwfc	dtoa@i+1,w,c
  6756  002544  6E14               	movwf	pad@buf+1,c
  6757  002546  C032  F015         	movff	dtoa@w,pad@p
  6758  00254A  C033  F016         	movff	dtoa@w+1,pad@p+1
  6759  00254E  EC28  F01B         	call	_pad	;wreg free
  6760  002552  C011  F01C         	movff	?_pad,?_dtoa
  6761  002556  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6762  00255A  0012               	return		;funcret
  6763  00255C  FFFF               	dw	65535	; errata NOP
  6764  00255E                     __end_of_dtoa:
  6765                           	opt callstack 0
  6766                           
  6767 ;; *************** function _abs *****************
  6768 ;; Defined at:
  6769 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  a               2   18[COMRAM] int 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2   18[COMRAM] int 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6783 ;;      Params:         2       0       0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0       0
  6785 ;;      Temps:          2       0       0       0       0       0       0
  6786 ;;      Totals:         4       0       0       0       0       0       0
  6787 ;;Total ram usage:        4 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    2
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_dtoa
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text20
  6798  003BE2                     __ptext20:
  6799                           	opt callstack 0
  6800  003BE2                     _abs:
  6801                           	opt callstack 0
  6802  003BE2  FFFF               	dw	65535	; assembler added errata NOP
  6803                           
  6804                           ;incstack = 0
  6805  003BE4  BE14               	btfsc	abs@a+1,7,c
  6806  003BE6  D005               	goto	u2830
  6807  003BE8  5014               	movf	abs@a+1,w,c
  6808  003BEA  E111               	bnz	l1251
  6809  003BEC  0413               	decf	abs@a,w,c
  6810  003BEE  B0D8               	btfsc	status,0,c
  6811  003BF0  D00E               	goto	l1251
  6812  003BF2                     u2830:
  6813  003BF2  FFFF               	dw	65535	; assembler added errata NOP
  6814  003BF4  C013  F015         	movff	abs@a,??_abs
  6815  003BF8  C014  F016         	movff	abs@a+1,??_abs+1
  6816  003BFC  1E15               	comf	??_abs,f,c
  6817  003BFE  1E16               	comf	??_abs+1,f,c
  6818  003C00  4A15               	infsnz	??_abs,f,c
  6819  003C02  2A16               	incf	??_abs+1,f,c
  6820  003C04  C015  F013         	movff	??_abs,?_abs
  6821  003C08  C016  F014         	movff	??_abs+1,?_abs+1
  6822  003C0C  D005               	goto	l1254
  6823  003C0E                     l1251:
  6824  003C0E  FFFF               	dw	65535	; assembler added errata NOP
  6825  003C10  C013  F013         	movff	abs@a,?_abs
  6826  003C14  C014  F014         	movff	abs@a+1,?_abs+1
  6827  003C18                     l1254:
  6828  003C18  FFFF               	dw	65535	; assembler added errata NOP
  6829  003C1A  0012               	return		;funcret
  6830  003C1C  FFFF               	dw	65535	; errata NOP
  6831  003C1E                     __end_of_abs:
  6832                           	opt callstack 0
  6833                           
  6834 ;; *************** function ___aomod *****************
  6835 ;; Defined at:
  6836 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  dividend        8    0[COMRAM] long long 
  6839 ;;  divisor         8    8[COMRAM] long long 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  sign            1   17[COMRAM] unsigned char 
  6842 ;;  counter         1   16[COMRAM] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  8    0[COMRAM] long long 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6852 ;;      Params:        16       0       0       0       0       0       0
  6853 ;;      Locals:         2       0       0       0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0
  6855 ;;      Totals:        18       0       0       0       0       0       0
  6856 ;;Total ram usage:       18 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    2
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_dtoa
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text21
  6867  003074                     __ptext21:
  6868                           	opt callstack 0
  6869  003074                     ___aomod:
  6870                           	opt callstack 0
  6871  003074  FFFF               	dw	65535	; assembler added errata NOP
  6872                           
  6873                           ;incstack = 0
  6874  003076  0E00               	movlw	0
  6875  003078  6E12               	movwf	___aomod@sign,c
  6876  00307A  AE08               	btfss	___aomod@dividend+7,7,c
  6877  00307C  D012               	goto	l3510
  6878  00307E  1E08               	comf	___aomod@dividend+7,f,c
  6879  003080  1E07               	comf	___aomod@dividend+6,f,c
  6880  003082  1E06               	comf	___aomod@dividend+5,f,c
  6881  003084  1E05               	comf	___aomod@dividend+4,f,c
  6882  003086  1E04               	comf	___aomod@dividend+3,f,c
  6883  003088  1E03               	comf	___aomod@dividend+2,f,c
  6884  00308A  1E02               	comf	___aomod@dividend+1,f,c
  6885  00308C  6C01               	negf	___aomod@dividend,c
  6886  00308E  0E00               	movlw	0
  6887  003090  2202               	addwfc	___aomod@dividend+1,f,c
  6888  003092  2203               	addwfc	___aomod@dividend+2,f,c
  6889  003094  2204               	addwfc	___aomod@dividend+3,f,c
  6890  003096  2205               	addwfc	___aomod@dividend+4,f,c
  6891  003098  2206               	addwfc	___aomod@dividend+5,f,c
  6892  00309A  2207               	addwfc	___aomod@dividend+6,f,c
  6893  00309C  2208               	addwfc	___aomod@dividend+7,f,c
  6894  00309E  0E01               	movlw	1
  6895  0030A0  6E12               	movwf	___aomod@sign,c
  6896  0030A2                     l3510:
  6897  0030A2  FFFF               	dw	65535	; assembler added errata NOP
  6898  0030A4  AE10               	btfss	___aomod@divisor+7,7,c
  6899  0030A6  D010               	goto	l3514
  6900  0030A8  1E10               	comf	___aomod@divisor+7,f,c
  6901  0030AA  1E0F               	comf	___aomod@divisor+6,f,c
  6902  0030AC  1E0E               	comf	___aomod@divisor+5,f,c
  6903  0030AE  1E0D               	comf	___aomod@divisor+4,f,c
  6904  0030B0  1E0C               	comf	___aomod@divisor+3,f,c
  6905  0030B2  1E0B               	comf	___aomod@divisor+2,f,c
  6906  0030B4  1E0A               	comf	___aomod@divisor+1,f,c
  6907  0030B6  6C09               	negf	___aomod@divisor,c
  6908  0030B8  0E00               	movlw	0
  6909  0030BA  220A               	addwfc	___aomod@divisor+1,f,c
  6910  0030BC  220B               	addwfc	___aomod@divisor+2,f,c
  6911  0030BE  220C               	addwfc	___aomod@divisor+3,f,c
  6912  0030C0  220D               	addwfc	___aomod@divisor+4,f,c
  6913  0030C2  220E               	addwfc	___aomod@divisor+5,f,c
  6914  0030C4  220F               	addwfc	___aomod@divisor+6,f,c
  6915  0030C6  2210               	addwfc	___aomod@divisor+7,f,c
  6916  0030C8                     l3514:
  6917  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  6918  0030CA  5009               	movf	___aomod@divisor,w,c
  6919  0030CC  100A               	iorwf	___aomod@divisor+1,w,c
  6920  0030CE  100B               	iorwf	___aomod@divisor+2,w,c
  6921  0030D0  100C               	iorwf	___aomod@divisor+3,w,c
  6922  0030D2  100D               	iorwf	___aomod@divisor+4,w,c
  6923  0030D4  100E               	iorwf	___aomod@divisor+5,w,c
  6924  0030D6  100F               	iorwf	___aomod@divisor+6,w,c
  6925  0030D8  1010               	iorwf	___aomod@divisor+7,w,c
  6926  0030DA  B4D8               	btfsc	status,2,c
  6927  0030DC  D040               	goto	l3530
  6928  0030DE  0E01               	movlw	1
  6929  0030E0  6E11               	movwf	___aomod@counter,c
  6930  0030E2  D00B               	goto	l3520
  6931  0030E4                     l3518:
  6932  0030E4  FFFF               	dw	65535	; assembler added errata NOP
  6933  0030E6  90D8               	bcf	status,0,c
  6934  0030E8  3609               	rlcf	___aomod@divisor,f,c
  6935  0030EA  360A               	rlcf	___aomod@divisor+1,f,c
  6936  0030EC  360B               	rlcf	___aomod@divisor+2,f,c
  6937  0030EE  360C               	rlcf	___aomod@divisor+3,f,c
  6938  0030F0  360D               	rlcf	___aomod@divisor+4,f,c
  6939  0030F2  360E               	rlcf	___aomod@divisor+5,f,c
  6940  0030F4  360F               	rlcf	___aomod@divisor+6,f,c
  6941  0030F6  3610               	rlcf	___aomod@divisor+7,f,c
  6942  0030F8  2A11               	incf	___aomod@counter,f,c
  6943  0030FA                     l3520:
  6944  0030FA  FFFF               	dw	65535	; assembler added errata NOP
  6945  0030FC  AE10               	btfss	___aomod@divisor+7,7,c
  6946  0030FE  D7F2               	goto	l3518
  6947  003100                     u3030:
  6948  003100  FFFF               	dw	65535	; assembler added errata NOP
  6949  003102  5009               	movf	___aomod@divisor,w,c
  6950  003104  5C01               	subwf	___aomod@dividend,w,c
  6951  003106  500A               	movf	___aomod@divisor+1,w,c
  6952  003108  5802               	subwfb	___aomod@dividend+1,w,c
  6953  00310A  500B               	movf	___aomod@divisor+2,w,c
  6954  00310C  5803               	subwfb	___aomod@dividend+2,w,c
  6955  00310E  500C               	movf	___aomod@divisor+3,w,c
  6956  003110  5804               	subwfb	___aomod@dividend+3,w,c
  6957  003112  500D               	movf	___aomod@divisor+4,w,c
  6958  003114  5805               	subwfb	___aomod@dividend+4,w,c
  6959  003116  500E               	movf	___aomod@divisor+5,w,c
  6960  003118  5806               	subwfb	___aomod@dividend+5,w,c
  6961  00311A  500F               	movf	___aomod@divisor+6,w,c
  6962  00311C  5807               	subwfb	___aomod@dividend+6,w,c
  6963  00311E  5010               	movf	___aomod@divisor+7,w,c
  6964  003120  5808               	subwfb	___aomod@dividend+7,w,c
  6965  003122  A0D8               	btfss	status,0,c
  6966  003124  D010               	goto	l3526
  6967  003126  5009               	movf	___aomod@divisor,w,c
  6968  003128  5E01               	subwf	___aomod@dividend,f,c
  6969  00312A  500A               	movf	___aomod@divisor+1,w,c
  6970  00312C  5A02               	subwfb	___aomod@dividend+1,f,c
  6971  00312E  500B               	movf	___aomod@divisor+2,w,c
  6972  003130  5A03               	subwfb	___aomod@dividend+2,f,c
  6973  003132  500C               	movf	___aomod@divisor+3,w,c
  6974  003134  5A04               	subwfb	___aomod@dividend+3,f,c
  6975  003136  500D               	movf	___aomod@divisor+4,w,c
  6976  003138  5A05               	subwfb	___aomod@dividend+4,f,c
  6977  00313A  500E               	movf	___aomod@divisor+5,w,c
  6978  00313C  5A06               	subwfb	___aomod@dividend+5,f,c
  6979  00313E  500F               	movf	___aomod@divisor+6,w,c
  6980  003140  5A07               	subwfb	___aomod@dividend+6,f,c
  6981  003142  5010               	movf	___aomod@divisor+7,w,c
  6982  003144  5A08               	subwfb	___aomod@dividend+7,f,c
  6983  003146                     l3526:
  6984  003146  FFFF               	dw	65535	; assembler added errata NOP
  6985  003148  90D8               	bcf	status,0,c
  6986  00314A  3210               	rrcf	___aomod@divisor+7,f,c
  6987  00314C  320F               	rrcf	___aomod@divisor+6,f,c
  6988  00314E  320E               	rrcf	___aomod@divisor+5,f,c
  6989  003150  320D               	rrcf	___aomod@divisor+4,f,c
  6990  003152  320C               	rrcf	___aomod@divisor+3,f,c
  6991  003154  320B               	rrcf	___aomod@divisor+2,f,c
  6992  003156  320A               	rrcf	___aomod@divisor+1,f,c
  6993  003158  3209               	rrcf	___aomod@divisor,f,c
  6994  00315A  2E11               	decfsz	___aomod@counter,f,c
  6995  00315C  D7D1               	goto	u3030
  6996  00315E                     l3530:
  6997  00315E  FFFF               	dw	65535	; assembler added errata NOP
  6998  003160  5012               	movf	___aomod@sign,w,c
  6999  003162  B4D8               	btfsc	status,2,c
  7000  003164  D010               	goto	l3534
  7001  003166  1E08               	comf	___aomod@dividend+7,f,c
  7002  003168  1E07               	comf	___aomod@dividend+6,f,c
  7003  00316A  1E06               	comf	___aomod@dividend+5,f,c
  7004  00316C  1E05               	comf	___aomod@dividend+4,f,c
  7005  00316E  1E04               	comf	___aomod@dividend+3,f,c
  7006  003170  1E03               	comf	___aomod@dividend+2,f,c
  7007  003172  1E02               	comf	___aomod@dividend+1,f,c
  7008  003174  6C01               	negf	___aomod@dividend,c
  7009  003176  0E00               	movlw	0
  7010  003178  2202               	addwfc	___aomod@dividend+1,f,c
  7011  00317A  2203               	addwfc	___aomod@dividend+2,f,c
  7012  00317C  2204               	addwfc	___aomod@dividend+3,f,c
  7013  00317E  2205               	addwfc	___aomod@dividend+4,f,c
  7014  003180  2206               	addwfc	___aomod@dividend+5,f,c
  7015  003182  2207               	addwfc	___aomod@dividend+6,f,c
  7016  003184  2208               	addwfc	___aomod@dividend+7,f,c
  7017  003186                     l3534:
  7018  003186  FFFF               	dw	65535	; assembler added errata NOP
  7019  003188  C001  F001         	movff	___aomod@dividend,?___aomod
  7020  00318C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7021  003190  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7022  003194  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7023  003198  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7024  00319C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7025  0031A0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7026  0031A4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7027  0031A8  0012               	return		;funcret
  7028  0031AA  FFFF               	dw	65535	; errata NOP
  7029  0031AC                     __end_of___aomod:
  7030                           	opt callstack 0
  7031                           
  7032 ;; *************** function ___aodiv *****************
  7033 ;; Defined at:
  7034 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  dividend        8    0[COMRAM] long long 
  7037 ;;  divisor         8    8[COMRAM] long long 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  quotient        8   18[COMRAM] long long 
  7040 ;;  sign            1   17[COMRAM] unsigned char 
  7041 ;;  counter         1   16[COMRAM] unsigned char 
  7042 ;; Return value:  Size  Location     Type
  7043 ;;                  8    0[COMRAM] long long 
  7044 ;; Registers used:
  7045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7046 ;; Tracked objects:
  7047 ;;		On entry : 0/0
  7048 ;;		On exit  : 0/0
  7049 ;;		Unchanged: 0/0
  7050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7051 ;;      Params:        16       0       0       0       0       0       0
  7052 ;;      Locals:        10       0       0       0       0       0       0
  7053 ;;      Temps:          0       0       0       0       0       0       0
  7054 ;;      Totals:        26       0       0       0       0       0       0
  7055 ;;Total ram usage:       26 bytes
  7056 ;; Hardware stack levels used:    1
  7057 ;; Hardware stack levels required when called:    2
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_dtoa
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text22
  7066  002C78                     __ptext22:
  7067                           	opt callstack 0
  7068  002C78                     ___aodiv:
  7069                           	opt callstack 0
  7070  002C78  FFFF               	dw	65535	; assembler added errata NOP
  7071                           
  7072                           ;incstack = 0
  7073  002C7A  0E00               	movlw	0
  7074  002C7C  6E12               	movwf	___aodiv@sign,c
  7075  002C7E  AE10               	btfss	___aodiv@divisor+7,7,c
  7076  002C80  D012               	goto	l3466
  7077  002C82  1E10               	comf	___aodiv@divisor+7,f,c
  7078  002C84  1E0F               	comf	___aodiv@divisor+6,f,c
  7079  002C86  1E0E               	comf	___aodiv@divisor+5,f,c
  7080  002C88  1E0D               	comf	___aodiv@divisor+4,f,c
  7081  002C8A  1E0C               	comf	___aodiv@divisor+3,f,c
  7082  002C8C  1E0B               	comf	___aodiv@divisor+2,f,c
  7083  002C8E  1E0A               	comf	___aodiv@divisor+1,f,c
  7084  002C90  6C09               	negf	___aodiv@divisor,c
  7085  002C92  0E00               	movlw	0
  7086  002C94  220A               	addwfc	___aodiv@divisor+1,f,c
  7087  002C96  220B               	addwfc	___aodiv@divisor+2,f,c
  7088  002C98  220C               	addwfc	___aodiv@divisor+3,f,c
  7089  002C9A  220D               	addwfc	___aodiv@divisor+4,f,c
  7090  002C9C  220E               	addwfc	___aodiv@divisor+5,f,c
  7091  002C9E  220F               	addwfc	___aodiv@divisor+6,f,c
  7092  002CA0  2210               	addwfc	___aodiv@divisor+7,f,c
  7093  002CA2  0E01               	movlw	1
  7094  002CA4  6E12               	movwf	___aodiv@sign,c
  7095  002CA6                     l3466:
  7096  002CA6  FFFF               	dw	65535	; assembler added errata NOP
  7097  002CA8  AE08               	btfss	___aodiv@dividend+7,7,c
  7098  002CAA  D012               	goto	l3472
  7099  002CAC  1E08               	comf	___aodiv@dividend+7,f,c
  7100  002CAE  1E07               	comf	___aodiv@dividend+6,f,c
  7101  002CB0  1E06               	comf	___aodiv@dividend+5,f,c
  7102  002CB2  1E05               	comf	___aodiv@dividend+4,f,c
  7103  002CB4  1E04               	comf	___aodiv@dividend+3,f,c
  7104  002CB6  1E03               	comf	___aodiv@dividend+2,f,c
  7105  002CB8  1E02               	comf	___aodiv@dividend+1,f,c
  7106  002CBA  6C01               	negf	___aodiv@dividend,c
  7107  002CBC  0E00               	movlw	0
  7108  002CBE  2202               	addwfc	___aodiv@dividend+1,f,c
  7109  002CC0  2203               	addwfc	___aodiv@dividend+2,f,c
  7110  002CC2  2204               	addwfc	___aodiv@dividend+3,f,c
  7111  002CC4  2205               	addwfc	___aodiv@dividend+4,f,c
  7112  002CC6  2206               	addwfc	___aodiv@dividend+5,f,c
  7113  002CC8  2207               	addwfc	___aodiv@dividend+6,f,c
  7114  002CCA  2208               	addwfc	___aodiv@dividend+7,f,c
  7115  002CCC  0E01               	movlw	1
  7116  002CCE  1A12               	xorwf	___aodiv@sign,f,c
  7117  002CD0                     l3472:
  7118  002CD0  FFFF               	dw	65535	; assembler added errata NOP
  7119  002CD2  EE20  F013         	lfsr	2,___aodiv@quotient
  7120  002CD6  0E07               	movlw	7
  7121  002CD8                     u2951:
  7122  002CD8  6ADE               	clrf	postinc2,c
  7123  002CDA  06E8               	decf	wreg,f,c
  7124  002CDC  E2FD               	bc	u2951
  7125  002CDE  5009               	movf	___aodiv@divisor,w,c
  7126  002CE0  100A               	iorwf	___aodiv@divisor+1,w,c
  7127  002CE2  100B               	iorwf	___aodiv@divisor+2,w,c
  7128  002CE4  100C               	iorwf	___aodiv@divisor+3,w,c
  7129  002CE6  100D               	iorwf	___aodiv@divisor+4,w,c
  7130  002CE8  100E               	iorwf	___aodiv@divisor+5,w,c
  7131  002CEA  100F               	iorwf	___aodiv@divisor+6,w,c
  7132  002CEC  1010               	iorwf	___aodiv@divisor+7,w,c
  7133  002CEE  B4D8               	btfsc	status,2,c
  7134  002CF0  D04A               	goto	l3494
  7135  002CF2  0E01               	movlw	1
  7136  002CF4  6E11               	movwf	___aodiv@counter,c
  7137  002CF6  D00B               	goto	l3480
  7138  002CF8                     l3478:
  7139  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  7140  002CFA  90D8               	bcf	status,0,c
  7141  002CFC  3609               	rlcf	___aodiv@divisor,f,c
  7142  002CFE  360A               	rlcf	___aodiv@divisor+1,f,c
  7143  002D00  360B               	rlcf	___aodiv@divisor+2,f,c
  7144  002D02  360C               	rlcf	___aodiv@divisor+3,f,c
  7145  002D04  360D               	rlcf	___aodiv@divisor+4,f,c
  7146  002D06  360E               	rlcf	___aodiv@divisor+5,f,c
  7147  002D08  360F               	rlcf	___aodiv@divisor+6,f,c
  7148  002D0A  3610               	rlcf	___aodiv@divisor+7,f,c
  7149  002D0C  2A11               	incf	___aodiv@counter,f,c
  7150  002D0E                     l3480:
  7151  002D0E  FFFF               	dw	65535	; assembler added errata NOP
  7152  002D10  AE10               	btfss	___aodiv@divisor+7,7,c
  7153  002D12  D7F2               	goto	l3478
  7154  002D14                     u2970:
  7155  002D14  FFFF               	dw	65535	; assembler added errata NOP
  7156  002D16  90D8               	bcf	status,0,c
  7157  002D18  3613               	rlcf	___aodiv@quotient,f,c
  7158  002D1A  3614               	rlcf	___aodiv@quotient+1,f,c
  7159  002D1C  3615               	rlcf	___aodiv@quotient+2,f,c
  7160  002D1E  3616               	rlcf	___aodiv@quotient+3,f,c
  7161  002D20  3617               	rlcf	___aodiv@quotient+4,f,c
  7162  002D22  3618               	rlcf	___aodiv@quotient+5,f,c
  7163  002D24  3619               	rlcf	___aodiv@quotient+6,f,c
  7164  002D26  361A               	rlcf	___aodiv@quotient+7,f,c
  7165  002D28  5009               	movf	___aodiv@divisor,w,c
  7166  002D2A  5C01               	subwf	___aodiv@dividend,w,c
  7167  002D2C  500A               	movf	___aodiv@divisor+1,w,c
  7168  002D2E  5802               	subwfb	___aodiv@dividend+1,w,c
  7169  002D30  500B               	movf	___aodiv@divisor+2,w,c
  7170  002D32  5803               	subwfb	___aodiv@dividend+2,w,c
  7171  002D34  500C               	movf	___aodiv@divisor+3,w,c
  7172  002D36  5804               	subwfb	___aodiv@dividend+3,w,c
  7173  002D38  500D               	movf	___aodiv@divisor+4,w,c
  7174  002D3A  5805               	subwfb	___aodiv@dividend+4,w,c
  7175  002D3C  500E               	movf	___aodiv@divisor+5,w,c
  7176  002D3E  5806               	subwfb	___aodiv@dividend+5,w,c
  7177  002D40  500F               	movf	___aodiv@divisor+6,w,c
  7178  002D42  5807               	subwfb	___aodiv@dividend+6,w,c
  7179  002D44  5010               	movf	___aodiv@divisor+7,w,c
  7180  002D46  5808               	subwfb	___aodiv@dividend+7,w,c
  7181  002D48  A0D8               	btfss	status,0,c
  7182  002D4A  D011               	goto	l3490
  7183  002D4C  5009               	movf	___aodiv@divisor,w,c
  7184  002D4E  5E01               	subwf	___aodiv@dividend,f,c
  7185  002D50  500A               	movf	___aodiv@divisor+1,w,c
  7186  002D52  5A02               	subwfb	___aodiv@dividend+1,f,c
  7187  002D54  500B               	movf	___aodiv@divisor+2,w,c
  7188  002D56  5A03               	subwfb	___aodiv@dividend+2,f,c
  7189  002D58  500C               	movf	___aodiv@divisor+3,w,c
  7190  002D5A  5A04               	subwfb	___aodiv@dividend+3,f,c
  7191  002D5C  500D               	movf	___aodiv@divisor+4,w,c
  7192  002D5E  5A05               	subwfb	___aodiv@dividend+4,f,c
  7193  002D60  500E               	movf	___aodiv@divisor+5,w,c
  7194  002D62  5A06               	subwfb	___aodiv@dividend+5,f,c
  7195  002D64  500F               	movf	___aodiv@divisor+6,w,c
  7196  002D66  5A07               	subwfb	___aodiv@dividend+6,f,c
  7197  002D68  5010               	movf	___aodiv@divisor+7,w,c
  7198  002D6A  5A08               	subwfb	___aodiv@dividend+7,f,c
  7199  002D6C  8013               	bsf	___aodiv@quotient,0,c
  7200  002D6E                     l3490:
  7201  002D6E  FFFF               	dw	65535	; assembler added errata NOP
  7202  002D70  90D8               	bcf	status,0,c
  7203  002D72  3210               	rrcf	___aodiv@divisor+7,f,c
  7204  002D74  320F               	rrcf	___aodiv@divisor+6,f,c
  7205  002D76  320E               	rrcf	___aodiv@divisor+5,f,c
  7206  002D78  320D               	rrcf	___aodiv@divisor+4,f,c
  7207  002D7A  320C               	rrcf	___aodiv@divisor+3,f,c
  7208  002D7C  320B               	rrcf	___aodiv@divisor+2,f,c
  7209  002D7E  320A               	rrcf	___aodiv@divisor+1,f,c
  7210  002D80  3209               	rrcf	___aodiv@divisor,f,c
  7211  002D82  2E11               	decfsz	___aodiv@counter,f,c
  7212  002D84  D7C7               	goto	u2970
  7213  002D86                     l3494:
  7214  002D86  FFFF               	dw	65535	; assembler added errata NOP
  7215  002D88  5012               	movf	___aodiv@sign,w,c
  7216  002D8A  B4D8               	btfsc	status,2,c
  7217  002D8C  D010               	goto	l3498
  7218  002D8E  1E1A               	comf	___aodiv@quotient+7,f,c
  7219  002D90  1E19               	comf	___aodiv@quotient+6,f,c
  7220  002D92  1E18               	comf	___aodiv@quotient+5,f,c
  7221  002D94  1E17               	comf	___aodiv@quotient+4,f,c
  7222  002D96  1E16               	comf	___aodiv@quotient+3,f,c
  7223  002D98  1E15               	comf	___aodiv@quotient+2,f,c
  7224  002D9A  1E14               	comf	___aodiv@quotient+1,f,c
  7225  002D9C  6C13               	negf	___aodiv@quotient,c
  7226  002D9E  0E00               	movlw	0
  7227  002DA0  2214               	addwfc	___aodiv@quotient+1,f,c
  7228  002DA2  2215               	addwfc	___aodiv@quotient+2,f,c
  7229  002DA4  2216               	addwfc	___aodiv@quotient+3,f,c
  7230  002DA6  2217               	addwfc	___aodiv@quotient+4,f,c
  7231  002DA8  2218               	addwfc	___aodiv@quotient+5,f,c
  7232  002DAA  2219               	addwfc	___aodiv@quotient+6,f,c
  7233  002DAC  221A               	addwfc	___aodiv@quotient+7,f,c
  7234  002DAE                     l3498:
  7235  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  7236  002DB0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7237  002DB4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7238  002DB8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7239  002DBC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7240  002DC0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7241  002DC4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7242  002DC8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7243  002DCC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7244  002DD0  0012               	return		;funcret
  7245  002DD2  FFFF               	dw	65535	; errata NOP
  7246  002DD4                     __end_of___aodiv:
  7247                           	opt callstack 0
  7248                           
  7249 ;; *************** function _ctoa *****************
  7250 ;; Defined at:
  7251 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7254 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7255 ;;  c               1   29[COMRAM] unsigned char 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  w               2   30[COMRAM] int 
  7258 ;;  l               2    0        int 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2   27[COMRAM] int 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7268 ;;      Params:         3       0       0       0       0       0       0
  7269 ;;      Locals:         2       0       0       0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0
  7271 ;;      Totals:         5       0       0       0       0       0       0
  7272 ;;Total ram usage:        5 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    6
  7275 ;; This function calls:
  7276 ;;		_pad
  7277 ;; This function is called by:
  7278 ;;		_vfpfcnvrt
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text23
  7283  0039A8                     __ptext23:
  7284                           	opt callstack 0
  7285  0039A8                     _ctoa:
  7286                           	opt callstack 0
  7287  0039A8  FFFF               	dw	65535	; assembler added errata NOP
  7288                           
  7289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  7290                           
  7291                           ;incstack = 0
  7292  0039AA  0100               	movlb	0	; () banked
  7293  0039AC  5191               	movf	_width& (0+255),w,b
  7294  0039AE  1192               	iorwf	(_width+1)& (0+255),w,b
  7295  0039B0  A4D8               	btfss	status,2,c
  7296  0039B2  D005               	goto	l3592
  7297                           
  7298                           ; BSR set to: 0
  7299  0039B4  C091  F01F         	movff	_width,ctoa@w
  7300  0039B8  C092  F020         	movff	_width+1,ctoa@w+1
  7301  0039BC  D007               	goto	l3594
  7302  0039BE                     l3592:
  7303  0039BE  FFFF               	dw	65535	; assembler added errata NOP
  7304                           
  7305                           ; BSR set to: 0
  7306  0039C0  0EFF               	movlw	255
  7307  0039C2  2591               	addwf	_width& (0+255),w,b
  7308  0039C4  6E1F               	movwf	ctoa@w,c
  7309  0039C6  0EFF               	movlw	255
  7310  0039C8  2192               	addwfc	(_width+1)& (0+255),w,b
  7311  0039CA  6E20               	movwf	ctoa@w+1,c
  7312  0039CC                     l3594:
  7313  0039CC  FFFF               	dw	65535	; assembler added errata NOP
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  7317  0039CE  C01E  F09B         	movff	ctoa@c,_dbuf
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  7321  0039D2  0E00               	movlw	0
  7322  0039D4  6F9C               	movwf	(_dbuf+1)& (0+255),b
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  7326  0039D6  C01C  F011         	movff	ctoa@fp,pad@fp
  7327  0039DA  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7328  0039DE  0E9B               	movlw	low _dbuf
  7329  0039E0  6E13               	movwf	pad@buf,c
  7330  0039E2  0E00               	movlw	high _dbuf
  7331  0039E4  6E14               	movwf	pad@buf+1,c
  7332  0039E6  C01F  F015         	movff	ctoa@w,pad@p
  7333  0039EA  C020  F016         	movff	ctoa@w+1,pad@p+1
  7334  0039EE  EC28  F01B         	call	_pad	;wreg free
  7335  0039F2  C011  F01C         	movff	?_pad,?_ctoa
  7336  0039F6  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7337  0039FA  0012               	return		;funcret
  7338  0039FC  FFFF               	dw	65535	; errata NOP
  7339  0039FE                     __end_of_ctoa:
  7340                           	opt callstack 0
  7341                           
  7342 ;; *************** function _pad *****************
  7343 ;; Defined at:
  7344 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7347 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7348 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7349 ;;		 -> dbuf(32), 
  7350 ;;  p               2   20[COMRAM] int 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  w               2   25[COMRAM] int 
  7353 ;;  i               2   23[COMRAM] int 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  2   16[COMRAM] int 
  7356 ;; Registers used:
  7357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7363 ;;      Params:         6       0       0       0       0       0       0
  7364 ;;      Locals:         4       0       0       0       0       0       0
  7365 ;;      Temps:          1       0       0       0       0       0       0
  7366 ;;      Totals:        11       0       0       0       0       0       0
  7367 ;;Total ram usage:       11 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    5
  7370 ;; This function calls:
  7371 ;;		_fputc
  7372 ;;		_fputs
  7373 ;;		_strlen
  7374 ;; This function is called by:
  7375 ;;		_ctoa
  7376 ;;		_dtoa
  7377 ;;		_otoa
  7378 ;;		_utoa
  7379 ;;		_xtoa
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text24
  7384  003650                     __ptext24:
  7385                           	opt callstack 0
  7386  003650                     _pad:
  7387                           	opt callstack 0
  7388  003650  FFFF               	dw	65535	; assembler added errata NOP
  7389                           
  7390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7391                           
  7392                           ;incstack = 0
  7393  003652  0100               	movlb	0	; () banked
  7394  003654  A195               	btfss	_flags& (0+255),0,b
  7395  003656  D00A               	goto	l3408
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7399  003658  C013  F00A         	movff	pad@buf,fputs@s
  7400  00365C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7401  003660  C011  F00C         	movff	pad@fp,fputs@fp
  7402  003664  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7403  003668  EC94  F01D         	call	_fputs	;wreg free
  7404  00366C                     l3408:
  7405  00366C  FFFF               	dw	65535	; assembler added errata NOP
  7406                           
  7407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7408  00366E  BE16               	btfsc	pad@p+1,7,c
  7409  003670  D005               	goto	l3412
  7410  003672  C015  F01A         	movff	pad@p,pad@w
  7411  003676  C016  F01B         	movff	pad@p+1,pad@w+1
  7412  00367A  D005               	goto	l360
  7413  00367C                     l3412:
  7414  00367C  FFFF               	dw	65535	; assembler added errata NOP
  7415  00367E  0E00               	movlw	0
  7416  003680  6E1B               	movwf	pad@w+1,c
  7417  003682  0E00               	movlw	0
  7418  003684  6E1A               	movwf	pad@w,c
  7419  003686                     l360:
  7420  003686  FFFF               	dw	65535	; assembler added errata NOP
  7421                           
  7422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7423  003688  0E00               	movlw	0
  7424  00368A  6E19               	movwf	pad@i+1,c
  7425  00368C  0E00               	movlw	0
  7426  00368E  6E18               	movwf	pad@i,c
  7427                           
  7428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7429  003690  D00D               	goto	l3418
  7430  003692                     l3414:
  7431  003692  FFFF               	dw	65535	; assembler added errata NOP
  7432                           
  7433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7434  003694  0E00               	movlw	0
  7435  003696  6E02               	movwf	fputc@c+1,c
  7436  003698  0E20               	movlw	32
  7437  00369A  6E01               	movwf	fputc@c,c
  7438  00369C  C011  F003         	movff	pad@fp,fputc@fp
  7439  0036A0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7440  0036A4  ECD2  F01A         	call	_fputc	;wreg free
  7441                           
  7442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7443  0036A8  4A18               	infsnz	pad@i,f,c
  7444  0036AA  2A19               	incf	pad@i+1,f,c
  7445  0036AC                     l3418:
  7446  0036AC  FFFF               	dw	65535	; assembler added errata NOP
  7447                           
  7448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7449  0036AE  501A               	movf	pad@w,w,c
  7450  0036B0  5C18               	subwf	pad@i,w,c
  7451  0036B2  5019               	movf	pad@i+1,w,c
  7452  0036B4  0A80               	xorlw	128
  7453  0036B6  6E17               	movwf	??_pad& (0+255),c
  7454  0036B8  501B               	movf	pad@w+1,w,c
  7455  0036BA  0A80               	xorlw	128
  7456  0036BC  5817               	subwfb	??_pad& (0+255),w,c
  7457  0036BE  A0D8               	btfss	status,0,c
  7458  0036C0  D7E8               	goto	l3414
  7459                           
  7460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7461  0036C2  0100               	movlb	0	; () banked
  7462  0036C4  B195               	btfsc	_flags& (0+255),0,b
  7463  0036C6  D00A               	goto	l3422
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7467  0036C8  C013  F00A         	movff	pad@buf,fputs@s
  7468  0036CC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7469  0036D0  C011  F00C         	movff	pad@fp,fputs@fp
  7470  0036D4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7471  0036D8  EC94  F01D         	call	_fputs	;wreg free
  7472  0036DC                     l3422:
  7473  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  7474                           
  7475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7476  0036DE  C013  F001         	movff	pad@buf,strlen@s
  7477  0036E2  C014  F002         	movff	pad@buf+1,strlen@s+1
  7478  0036E6  EC63  F01E         	call	_strlen	;wreg free
  7479  0036EA  501A               	movf	pad@w,w,c
  7480  0036EC  2401               	addwf	?_strlen,w,c
  7481  0036EE  6E11               	movwf	?_pad,c
  7482  0036F0  501B               	movf	pad@w+1,w,c
  7483  0036F2  2002               	addwfc	?_strlen+1,w,c
  7484  0036F4  6E12               	movwf	?_pad+1,c
  7485  0036F6  0012               	return		;funcret
  7486  0036F8  FFFF               	dw	65535	; errata NOP
  7487  0036FA                     __end_of_pad:
  7488                           	opt callstack 0
  7489                           
  7490 ;; *************** function _strlen *****************
  7491 ;; Defined at:
  7492 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7495 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7498 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2    0[COMRAM] unsigned int 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7508 ;;      Params:         2       0       0       0       0       0       0
  7509 ;;      Locals:         2       0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0
  7511 ;;      Totals:         4       0       0       0       0       0       0
  7512 ;;Total ram usage:        4 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    2
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_pad
  7519 ;;		_stoa
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text25
  7524  003CC6                     __ptext25:
  7525                           	opt callstack 0
  7526  003CC6                     _strlen:
  7527                           	opt callstack 0
  7528  003CC6  FFFF               	dw	65535	; assembler added errata NOP
  7529                           
  7530                           ;incstack = 0
  7531  003CC8  C001  F003         	movff	strlen@s,strlen@a
  7532  003CCC  C002  F004         	movff	strlen@s+1,strlen@a+1
  7533  003CD0  D003               	goto	l3394
  7534  003CD2                     l3392:
  7535  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  7536  003CD4  4A01               	infsnz	strlen@s,f,c
  7537  003CD6  2A02               	incf	strlen@s+1,f,c
  7538  003CD8                     l3394:
  7539  003CD8  FFFF               	dw	65535	; assembler added errata NOP
  7540  003CDA  C001  FFD9         	movff	strlen@s,fsr2l
  7541  003CDE  C002  FFDA         	movff	strlen@s+1,fsr2h
  7542  003CE2  50DF               	movf	indf2,w,c
  7543  003CE4  A4D8               	btfss	status,2,c
  7544  003CE6  D7F5               	goto	l3392
  7545  003CE8  5003               	movf	strlen@a,w,c
  7546  003CEA  5C01               	subwf	strlen@s,w,c
  7547  003CEC  6E01               	movwf	?_strlen,c
  7548  003CEE  5004               	movf	strlen@a+1,w,c
  7549  003CF0  5802               	subwfb	strlen@s+1,w,c
  7550  003CF2  6E02               	movwf	?_strlen+1,c
  7551  003CF4  0012               	return		;funcret
  7552  003CF6  FFFF               	dw	65535	; errata NOP
  7553  003CF8                     __end_of_strlen:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _fputs *****************
  7557 ;; Defined at:
  7558 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7561 ;;		 -> dbuf(32), 
  7562 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7563 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  i               2   14[COMRAM] int 
  7566 ;;  c               1   13[COMRAM] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  2    9[COMRAM] int 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7576 ;;      Params:         4       0       0       0       0       0       0
  7577 ;;      Locals:         3       0       0       0       0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0
  7579 ;;      Totals:         7       0       0       0       0       0       0
  7580 ;;Total ram usage:        7 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    4
  7583 ;; This function calls:
  7584 ;;		_fputc
  7585 ;; This function is called by:
  7586 ;;		_pad
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text26
  7591  003B28                     __ptext26:
  7592                           	opt callstack 0
  7593  003B28                     _fputs:
  7594                           	opt callstack 0
  7595  003B28  FFFF               	dw	65535	; assembler added errata NOP
  7596                           
  7597                           ;incstack = 0
  7598  003B2A  0E00               	movlw	0
  7599  003B2C  6E10               	movwf	fputs@i+1,c
  7600  003B2E  0E00               	movlw	0
  7601  003B30  6E0F               	movwf	fputs@i,c
  7602  003B32  D00C               	goto	l3388
  7603  003B34                     l3384:
  7604  003B34  FFFF               	dw	65535	; assembler added errata NOP
  7605  003B36  C00E  F001         	movff	fputs@c,fputc@c
  7606  003B3A  6A02               	clrf	fputc@c+1,c
  7607  003B3C  C00C  F003         	movff	fputs@fp,fputc@fp
  7608  003B40  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7609  003B44  ECD2  F01A         	call	_fputc	;wreg free
  7610  003B48  4A0F               	infsnz	fputs@i,f,c
  7611  003B4A  2A10               	incf	fputs@i+1,f,c
  7612  003B4C                     l3388:
  7613  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  7614  003B4E  500F               	movf	fputs@i,w,c
  7615  003B50  240A               	addwf	fputs@s,w,c
  7616  003B52  6ED9               	movwf	fsr2l,c
  7617  003B54  5010               	movf	fputs@i+1,w,c
  7618  003B56  200B               	addwfc	fputs@s+1,w,c
  7619  003B58  6EDA               	movwf	fsr2h,c
  7620  003B5A  50DF               	movf	indf2,w,c
  7621  003B5C  6E0E               	movwf	fputs@c,c
  7622  003B5E  500E               	movf	fputs@c,w,c
  7623  003B60  B4D8               	btfsc	status,2,c
  7624  003B62  0012               	return		;funcret
  7625  003B64  FFFF               	dw	65535	; assembler added errata NOP
  7626  003B66  D7E6               	goto	l3384
  7627  003B68  FFFF               	dw	65535	; errata NOP
  7628  003B6A                     __end_of_fputs:
  7629                           	opt callstack 0
  7630                           
  7631 ;; *************** function _fputc *****************
  7632 ;; Defined at:
  7633 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  c               2    0[COMRAM] int 
  7636 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7637 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  2    0[COMRAM] int 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7649 ;;      Params:         4       0       0       0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0
  7651 ;;      Temps:          5       0       0       0       0       0       0
  7652 ;;      Totals:         9       0       0       0       0       0       0
  7653 ;;Total ram usage:        9 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    3
  7656 ;; This function calls:
  7657 ;;		_putch
  7658 ;; This function is called by:
  7659 ;;		_pad
  7660 ;;		_stoa
  7661 ;;		_vfpfcnvrt
  7662 ;;		_fputs
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text27
  7667  0035A4                     __ptext27:
  7668                           	opt callstack 0
  7669  0035A4                     _fputc:
  7670                           	opt callstack 0
  7671  0035A4  FFFF               	dw	65535	; assembler added errata NOP
  7672                           
  7673                           ;incstack = 0
  7674  0035A6  5003               	movf	fputc@fp,w,c
  7675  0035A8  1004               	iorwf	fputc@fp+1,w,c
  7676  0035AA  B4D8               	btfsc	status,2,c
  7677  0035AC  D004               	goto	u2720
  7678  0035AE  5003               	movf	fputc@fp,w,c
  7679  0035B0  1004               	iorwf	fputc@fp+1,w,c
  7680  0035B2  A4D8               	btfss	status,2,c
  7681  0035B4  D005               	goto	l3374
  7682  0035B6                     u2720:
  7683  0035B6  FFFF               	dw	65535	; assembler added errata NOP
  7684  0035B8  5001               	movf	fputc@c,w,c
  7685  0035BA  EC42  F01F         	call	_putch
  7686  0035BE  D045               	goto	l1328
  7687  0035C0                     l3374:
  7688  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  7689  0035C2  EE20 F004          	lfsr	2,4
  7690  0035C6  5003               	movf	fputc@fp,w,c
  7691  0035C8  26D9               	addwf	fsr2l,f,c
  7692  0035CA  5004               	movf	fputc@fp+1,w,c
  7693  0035CC  22DA               	addwfc	fsr2h,f,c
  7694  0035CE  50DE               	movf	postinc2,w,c
  7695  0035D0  10DE               	iorwf	postinc2,w,c
  7696  0035D2  B4D8               	btfsc	status,2,c
  7697  0035D4  D016               	goto	u2740
  7698  0035D6  EE20 F004          	lfsr	2,4
  7699  0035DA  5003               	movf	fputc@fp,w,c
  7700  0035DC  26D9               	addwf	fsr2l,f,c
  7701  0035DE  5004               	movf	fputc@fp+1,w,c
  7702  0035E0  22DA               	addwfc	fsr2h,f,c
  7703  0035E2  EE10 F002          	lfsr	1,2
  7704  0035E6  5003               	movf	fputc@fp,w,c
  7705  0035E8  26E1               	addwf	fsr1l,f,c
  7706  0035EA  5004               	movf	fputc@fp+1,w,c
  7707  0035EC  22E2               	addwfc	fsr1h,f,c
  7708  0035EE  50DE               	movf	postinc2,w,c
  7709  0035F0  5CE6               	subwf	postinc1,w,c
  7710  0035F2  50E6               	movf	postinc1,w,c
  7711  0035F4  0A80               	xorlw	128
  7712  0035F6  6E09               	movwf	(??_fputc+4)& (0+255),c
  7713  0035F8  50DE               	movf	postinc2,w,c
  7714  0035FA  0A80               	xorlw	128
  7715  0035FC  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7716  0035FE  B0D8               	btfsc	status,0,c
  7717  003600  D024               	goto	l1328
  7718  003602                     u2740:
  7719  003602  FFFF               	dw	65535	; assembler added errata NOP
  7720  003604  EE20 F002          	lfsr	2,2
  7721  003608  5003               	movf	fputc@fp,w,c
  7722  00360A  26D9               	addwf	fsr2l,f,c
  7723  00360C  5004               	movf	fputc@fp+1,w,c
  7724  00360E  22DA               	addwfc	fsr2h,f,c
  7725  003610  CFDE F005          	movff	postinc2,??_fputc
  7726  003614  CFDD F006          	movff	postdec2,??_fputc+1
  7727  003618  C003  FFD9         	movff	fputc@fp,fsr2l
  7728  00361C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7729  003620  CFDE F007          	movff	postinc2,??_fputc+2
  7730  003624  CFDD F008          	movff	postdec2,??_fputc+3
  7731  003628  5005               	movf	??_fputc,w,c
  7732  00362A  2407               	addwf	??_fputc+2,w,c
  7733  00362C  6ED9               	movwf	fsr2l,c
  7734  00362E  5006               	movf	??_fputc+1,w,c
  7735  003630  2008               	addwfc	??_fputc+3,w,c
  7736  003632  6EDA               	movwf	fsr2h,c
  7737  003634  C001  FFDF         	movff	fputc@c,indf2
  7738  003638  EE20 F002          	lfsr	2,2
  7739  00363C  5003               	movf	fputc@fp,w,c
  7740  00363E  26D9               	addwf	fsr2l,f,c
  7741  003640  5004               	movf	fputc@fp+1,w,c
  7742  003642  22DA               	addwfc	fsr2h,f,c
  7743  003644  2ADE               	incf	postinc2,f,c
  7744  003646  0E00               	movlw	0
  7745  003648  22DD               	addwfc	postdec2,f,c
  7746  00364A                     l1328:
  7747  00364A  FFFF               	dw	65535	; assembler added errata NOP
  7748  00364C  0012               	return		;funcret
  7749  00364E  FFFF               	dw	65535	; errata NOP
  7750  003650                     __end_of_fputc:
  7751                           	opt callstack 0
  7752                           
  7753 ;; *************** function _putch *****************
  7754 ;; Defined at:
  7755 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  c               1    wreg     unsigned char 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  c               1    0[COMRAM] unsigned char 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7769 ;;      Params:         0       0       0       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    2
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_fputc
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text28
  7784  003E84                     __ptext28:
  7785                           	opt callstack 0
  7786  003E84                     _putch:
  7787                           	opt callstack 0
  7788  003E84  FFFF               	dw	65535	; assembler added errata NOP
  7789                           
  7790                           ;incstack = 0
  7791  003E86  0012               	return		;funcret
  7792  003E88  FFFF               	dw	65535	; errata NOP
  7793  003E8A                     __end_of_putch:
  7794                           	opt callstack 0
  7795                           
  7796 ;; *************** function _atoi *****************
  7797 ;; Defined at:
  7798 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7801 ;;		 -> STR_2(3), STR_1(4), 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  n               2   20[COMRAM] int 
  7804 ;;  neg             2   13[COMRAM] int 
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  2    7[COMRAM] int 
  7807 ;; Registers used:
  7808 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7814 ;;      Params:         2       0       0       0       0       0       0
  7815 ;;      Locals:         9       0       0       0       0       0       0
  7816 ;;      Temps:          4       0       0       0       0       0       0
  7817 ;;      Totals:        15       0       0       0       0       0       0
  7818 ;;Total ram usage:       15 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    3
  7821 ;; This function calls:
  7822 ;;		___wmul
  7823 ;;		_isdigit
  7824 ;;		_isspace
  7825 ;; This function is called by:
  7826 ;;		_vfpfcnvrt
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text29
  7831  002B12                     __ptext29:
  7832                           	opt callstack 0
  7833  002B12                     _atoi:
  7834                           	opt callstack 0
  7835  002B12  FFFF               	dw	65535	; assembler added errata NOP
  7836                           
  7837                           ;incstack = 0
  7838  002B14  0E00               	movlw	0
  7839  002B16  6E16               	movwf	atoi@n+1,c
  7840  002B18  0E00               	movlw	0
  7841  002B1A  6E15               	movwf	atoi@n,c
  7842  002B1C  0E00               	movlw	0
  7843  002B1E  6E0F               	movwf	atoi@neg+1,c
  7844  002B20  0E00               	movlw	0
  7845  002B22  6E0E               	movwf	atoi@neg,c
  7846  002B24  D003               	goto	l3860
  7847  002B26                     l3858:
  7848  002B26  FFFF               	dw	65535	; assembler added errata NOP
  7849  002B28  4A08               	infsnz	atoi@s,f,c
  7850  002B2A  2A09               	incf	atoi@s+1,f,c
  7851  002B2C                     l3860:
  7852  002B2C  FFFF               	dw	65535	; assembler added errata NOP
  7853  002B2E  0E01               	movlw	1
  7854  002B30  6E14               	movwf	_atoi$1731,c
  7855  002B32  C008  FFF6         	movff	atoi@s,tblptrl
  7856  002B36  C009  FFF7         	movff	atoi@s+1,tblptrh
  7857  002B3A                     	if	0	;tblptru may be non-zero
  7858  002B3A                     	endif
  7859  002B3A                     	if	0	;tblptru may be non-zero
  7860  002B3A                     	endif
  7861  002B3A  0008               	tblrd		*
  7862  002B3C  FFFF               	dw	65535	; errata NOP
  7863  002B3E  50F5               	movf	tablat,w,c
  7864  002B40  0A20               	xorlw	32
  7865  002B42  B4D8               	btfsc	status,2,c
  7866  002B44  D019               	goto	l3868
  7867  002B46  0EF7               	movlw	247
  7868  002B48  6E0A               	movwf	??_atoi& (0+255),c
  7869  002B4A  0EFF               	movlw	255
  7870  002B4C  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7871  002B4E  C008  FFF6         	movff	atoi@s,tblptrl
  7872  002B52  C009  FFF7         	movff	atoi@s+1,tblptrh
  7873  002B56                     	if	0	;tblptru may be non-zero
  7874  002B56                     	endif
  7875  002B56                     	if	0	;tblptru may be non-zero
  7876  002B56                     	endif
  7877  002B56  0008               	tblrd		*
  7878  002B58  FFFF               	dw	65535	; errata NOP
  7879  002B5A  50F5               	movf	tablat,w,c
  7880  002B5C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7881  002B5E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7882  002B60  500A               	movf	??_atoi,w,c
  7883  002B62  260C               	addwf	??_atoi+2,f,c
  7884  002B64  500B               	movf	??_atoi+1,w,c
  7885  002B66  220D               	addwfc	??_atoi+3,f,c
  7886  002B68  500D               	movf	??_atoi+3,w,c
  7887  002B6A  E104               	bnz	u3750
  7888  002B6C  0E05               	movlw	5
  7889  002B6E  5C0C               	subwf	??_atoi+2,w,c
  7890  002B70  A0D8               	btfss	status,0,c
  7891  002B72  D002               	goto	l3868
  7892  002B74                     u3750:
  7893  002B74  0E00               	movlw	0
  7894  002B76  6E14               	movwf	_atoi$1731,c
  7895  002B78                     l3868:
  7896  002B78  FFFF               	dw	65535	; assembler added errata NOP
  7897  002B7A  C014  F010         	movff	_atoi$1731,_atoi$1730
  7898  002B7E  6A11               	clrf	_atoi$1730+1,c
  7899  002B80  5010               	movf	_atoi$1730,w,c
  7900  002B82  1011               	iorwf	_atoi$1730+1,w,c
  7901  002B84  B4D8               	btfsc	status,2,c
  7902  002B86  D00A               	goto	l3878
  7903  002B88  D7CE               	goto	l3858
  7904  002B8A                     l3874:
  7905  002B8A  FFFF               	dw	65535	; assembler added errata NOP
  7906  002B8C  0E00               	movlw	0
  7907  002B8E  6E0F               	movwf	atoi@neg+1,c
  7908  002B90  0E01               	movlw	1
  7909  002B92  6E0E               	movwf	atoi@neg,c
  7910  002B94                     l3876:
  7911  002B94  FFFF               	dw	65535	; assembler added errata NOP
  7912  002B96  4A08               	infsnz	atoi@s,f,c
  7913  002B98  2A09               	incf	atoi@s+1,f,c
  7914  002B9A  D032               	goto	l3884
  7915  002B9C                     l3878:
  7916  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  7917  002B9E  C008  FFF6         	movff	atoi@s,tblptrl
  7918  002BA2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7919  002BA6                     	if	0	;tblptru may be non-zero
  7920  002BA6                     	endif
  7921  002BA6                     	if	0	;tblptru may be non-zero
  7922  002BA6                     	endif
  7923  002BA6  0008               	tblrd		*
  7924  002BA8  FFFF               	dw	65535	; errata NOP
  7925  002BAA  50F5               	movf	tablat,w,c
  7926  002BAC  6E0A               	movwf	??_atoi& (0+255),c
  7927  002BAE  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7928                           
  7929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7930                           ; Switch size 1, requested type "simple"
  7931                           ; Number of cases is 1, Range of values is 0 to 0
  7932                           ; switch strategies available:
  7933                           ; Name         Instructions Cycles
  7934                           ; simple_byte            4     3 (average)
  7935                           ;	Chosen strategy is simple_byte
  7936  002BB0  500B               	movf	??_atoi+1,w,c
  7937  002BB2  0A00               	xorlw	0	; case 0
  7938  002BB4  A4D8               	btfss	status,2,c
  7939  002BB6  D024               	goto	l3884
  7940                           
  7941                           ; Switch size 1, requested type "simple"
  7942                           ; Number of cases is 2, Range of values is 43 to 45
  7943                           ; switch strategies available:
  7944                           ; Name         Instructions Cycles
  7945                           ; simple_byte            7     4 (average)
  7946                           ;	Chosen strategy is simple_byte
  7947  002BB8  500A               	movf	??_atoi,w,c
  7948  002BBA  0A2B               	xorlw	43	; case 43
  7949  002BBC  B4D8               	btfsc	status,2,c
  7950  002BBE  D7EA               	goto	l3876
  7951  002BC0  0A06               	xorlw	6	; case 45
  7952  002BC2  B4D8               	btfsc	status,2,c
  7953  002BC4  D7E2               	goto	l3874
  7954  002BC6  D01C               	goto	l3884
  7955  002BC8                     l3880:
  7956  002BC8  FFFF               	dw	65535	; assembler added errata NOP
  7957  002BCA  C015  F001         	movff	atoi@n,___wmul@multiplier
  7958  002BCE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7959  002BD2  0E00               	movlw	0
  7960  002BD4  6E04               	movwf	___wmul@multiplicand+1,c
  7961  002BD6  0E0A               	movlw	10
  7962  002BD8  6E03               	movwf	___wmul@multiplicand,c
  7963  002BDA  EC92  F01E         	call	___wmul	;wreg free
  7964  002BDE  C008  FFF6         	movff	atoi@s,tblptrl
  7965  002BE2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7966  002BE6                     	if	0	;tblptru may be non-zero
  7967  002BE6                     	endif
  7968  002BE6                     	if	0	;tblptru may be non-zero
  7969  002BE6                     	endif
  7970  002BE6  0008               	tblrd		*
  7971  002BE8  FFFF               	dw	65535	; errata NOP
  7972  002BEA  50F5               	movf	tablat,w,c
  7973  002BEC  5E01               	subwf	?___wmul,f,c
  7974  002BEE  0E00               	movlw	0
  7975  002BF0  5A02               	subwfb	?___wmul+1,f,c
  7976  002BF2  0E30               	movlw	48
  7977  002BF4  2401               	addwf	?___wmul,w,c
  7978  002BF6  6E15               	movwf	atoi@n,c
  7979  002BF8  0E00               	movlw	0
  7980  002BFA  2002               	addwfc	?___wmul+1,w,c
  7981  002BFC  6E16               	movwf	atoi@n+1,c
  7982  002BFE  D7CA               	goto	l3876
  7983  002C00                     l3884:
  7984  002C00  FFFF               	dw	65535	; assembler added errata NOP
  7985  002C02  0ED0               	movlw	208
  7986  002C04  6E0A               	movwf	??_atoi& (0+255),c
  7987  002C06  0EFF               	movlw	255
  7988  002C08  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7989  002C0A  C008  FFF6         	movff	atoi@s,tblptrl
  7990  002C0E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7991  002C12                     	if	0	;tblptru may be non-zero
  7992  002C12                     	endif
  7993  002C12                     	if	0	;tblptru may be non-zero
  7994  002C12                     	endif
  7995  002C12  0008               	tblrd		*
  7996  002C14  FFFF               	dw	65535	; errata NOP
  7997  002C16  50F5               	movf	tablat,w,c
  7998  002C18  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7999  002C1A  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8000  002C1C  500A               	movf	??_atoi,w,c
  8001  002C1E  260C               	addwf	??_atoi+2,f,c
  8002  002C20  500B               	movf	??_atoi+1,w,c
  8003  002C22  220D               	addwfc	??_atoi+3,f,c
  8004  002C24  500D               	movf	??_atoi+3,w,c
  8005  002C26  E106               	bnz	u3770
  8006  002C28  0E0A               	movlw	10
  8007  002C2A  5C0C               	subwf	??_atoi+2,w,c
  8008  002C2C  B0D8               	btfsc	status,0,c
  8009  002C2E  D002               	goto	u3770
  8010  002C30  0E01               	movlw	1
  8011  002C32  D002               	goto	u3780
  8012  002C34                     u3770:
  8013  002C34  FFFF               	dw	65535	; assembler added errata NOP
  8014  002C36  0E00               	movlw	0
  8015  002C38                     u3780:
  8016  002C38  FFFF               	dw	65535	; assembler added errata NOP
  8017  002C3A  6E12               	movwf	_atoi$1732,c
  8018  002C3C  6A13               	clrf	_atoi$1732+1,c
  8019  002C3E  5012               	movf	_atoi$1732,w,c
  8020  002C40  1013               	iorwf	_atoi$1732+1,w,c
  8021  002C42  A4D8               	btfss	status,2,c
  8022  002C44  D7C1               	goto	l3880
  8023  002C46  500E               	movf	atoi@neg,w,c
  8024  002C48  100F               	iorwf	atoi@neg+1,w,c
  8025  002C4A  A4D8               	btfss	status,2,c
  8026  002C4C  D00D               	goto	l1282
  8027  002C4E  C015  F00A         	movff	atoi@n,??_atoi
  8028  002C52  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8029  002C56  1E0A               	comf	??_atoi,f,c
  8030  002C58  1E0B               	comf	??_atoi+1,f,c
  8031  002C5A  4A0A               	infsnz	??_atoi,f,c
  8032  002C5C  2A0B               	incf	??_atoi+1,f,c
  8033  002C5E  C00A  F008         	movff	??_atoi,?_atoi
  8034  002C62  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8035  002C66  D005               	goto	l1285
  8036  002C68                     l1282:
  8037  002C68  FFFF               	dw	65535	; assembler added errata NOP
  8038  002C6A  C015  F008         	movff	atoi@n,?_atoi
  8039  002C6E  C016  F009         	movff	atoi@n+1,?_atoi+1
  8040  002C72                     l1285:
  8041  002C72  FFFF               	dw	65535	; assembler added errata NOP
  8042  002C74  0012               	return		;funcret
  8043  002C76  FFFF               	dw	65535	; errata NOP
  8044  002C78                     __end_of_atoi:
  8045                           	opt callstack 0
  8046                           
  8047 ;; *************** function _isspace *****************
  8048 ;; Defined at:
  8049 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  c               2    0[COMRAM] int 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  2    0[COMRAM] int 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8063 ;;      Params:         2       0       0       0       0       0       0
  8064 ;;      Locals:         1       0       0       0       0       0       0
  8065 ;;      Temps:          4       0       0       0       0       0       0
  8066 ;;      Totals:         7       0       0       0       0       0       0
  8067 ;;Total ram usage:        7 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    2
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_atoi
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text30
  8078  003AE4                     __ptext30:
  8079                           	opt callstack 0
  8080  003AE4                     _isspace:
  8081                           	opt callstack 0
  8082  003AE4  FFFF               	dw	65535	; assembler added errata NOP
  8083                           
  8084                           ;incstack = 0
  8085  003AE6  0E01               	movlw	1
  8086  003AE8  6E07               	movwf	_isspace$1767,c
  8087  003AEA  0E20               	movlw	32
  8088  003AEC  1801               	xorwf	isspace@c,w,c
  8089  003AEE  1002               	iorwf	isspace@c+1,w,c
  8090  003AF0  B4D8               	btfsc	status,2,c
  8091  003AF2  D014               	goto	l3584
  8092  003AF4  0EF7               	movlw	247
  8093  003AF6  6E03               	movwf	??_isspace& (0+255),c
  8094  003AF8  0EFF               	movlw	255
  8095  003AFA  6E04               	movwf	(??_isspace+1)& (0+255),c
  8096  003AFC  C001  F005         	movff	isspace@c,??_isspace+2
  8097  003B00  C002  F006         	movff	isspace@c+1,??_isspace+3
  8098  003B04  5003               	movf	??_isspace,w,c
  8099  003B06  2605               	addwf	??_isspace+2,f,c
  8100  003B08  5004               	movf	??_isspace+1,w,c
  8101  003B0A  2206               	addwfc	??_isspace+3,f,c
  8102  003B0C  5006               	movf	??_isspace+3,w,c
  8103  003B0E  E104               	bnz	u3140
  8104  003B10  0E05               	movlw	5
  8105  003B12  5C05               	subwf	??_isspace+2,w,c
  8106  003B14  A0D8               	btfss	status,0,c
  8107  003B16  D002               	goto	l3584
  8108  003B18                     u3140:
  8109  003B18  0E00               	movlw	0
  8110  003B1A  6E07               	movwf	_isspace$1767,c
  8111  003B1C                     l3584:
  8112  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  8113  003B1E  C007  F001         	movff	_isspace$1767,?_isspace
  8114  003B22  6A02               	clrf	?_isspace+1,c
  8115  003B24  0012               	return		;funcret
  8116  003B26  FFFF               	dw	65535	; errata NOP
  8117  003B28                     __end_of_isspace:
  8118                           	opt callstack 0
  8119                           
  8120 ;; *************** function _isdigit *****************
  8121 ;; Defined at:
  8122 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  c               2    0[COMRAM] int 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  2    0[COMRAM] int 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8136 ;;      Params:         2       0       0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0
  8138 ;;      Temps:          4       0       0       0       0       0       0
  8139 ;;      Totals:         6       0       0       0       0       0       0
  8140 ;;Total ram usage:        6 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    2
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_vfpfcnvrt
  8147 ;;		_atoi
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text31
  8152  003C8E                     __ptext31:
  8153                           	opt callstack 0
  8154  003C8E                     _isdigit:
  8155                           	opt callstack 0
  8156  003C8E  FFFF               	dw	65535	; assembler added errata NOP
  8157                           
  8158                           ;incstack = 0
  8159  003C90  0ED0               	movlw	208
  8160  003C92  6E03               	movwf	??_isdigit& (0+255),c
  8161  003C94  0EFF               	movlw	255
  8162  003C96  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8163  003C98  C001  F005         	movff	isdigit@c,??_isdigit+2
  8164  003C9C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8165  003CA0  5003               	movf	??_isdigit,w,c
  8166  003CA2  2605               	addwf	??_isdigit+2,f,c
  8167  003CA4  5004               	movf	??_isdigit+1,w,c
  8168  003CA6  2206               	addwfc	??_isdigit+3,f,c
  8169  003CA8  5006               	movf	??_isdigit+3,w,c
  8170  003CAA  E106               	bnz	u2910
  8171  003CAC  0E0A               	movlw	10
  8172  003CAE  5C05               	subwf	??_isdigit+2,w,c
  8173  003CB0  B0D8               	btfsc	status,0,c
  8174  003CB2  D002               	goto	u2910
  8175  003CB4  0E01               	movlw	1
  8176  003CB6  D002               	goto	u2920
  8177  003CB8                     u2910:
  8178  003CB8  FFFF               	dw	65535	; assembler added errata NOP
  8179  003CBA  0E00               	movlw	0
  8180  003CBC                     u2920:
  8181  003CBC  FFFF               	dw	65535	; assembler added errata NOP
  8182  003CBE  6E01               	movwf	?_isdigit,c
  8183  003CC0  6A02               	clrf	?_isdigit+1,c
  8184  003CC2  0012               	return		;funcret
  8185  003CC4  FFFF               	dw	65535	; errata NOP
  8186  003CC6                     __end_of_isdigit:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function ___wmul *****************
  8190 ;; Defined at:
  8191 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  multiplier      2    0[COMRAM] unsigned int 
  8194 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  product         2    4[COMRAM] unsigned int 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2    0[COMRAM] unsigned int 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0, prodl, prodh
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8206 ;;      Params:         4       0       0       0       0       0       0
  8207 ;;      Locals:         2       0       0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0
  8209 ;;      Totals:         6       0       0       0       0       0       0
  8210 ;;Total ram usage:        6 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; Hardware stack levels required when called:    2
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_atoi
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text32
  8221  003D24                     __ptext32:
  8222                           	opt callstack 0
  8223  003D24                     ___wmul:
  8224                           	opt callstack 0
  8225  003D24  FFFF               	dw	65535	; assembler added errata NOP
  8226                           
  8227                           ;incstack = 0
  8228  003D26  5001               	movf	___wmul@multiplier,w,c
  8229  003D28  0203               	mulwf	___wmul@multiplicand,c
  8230  003D2A  CFF3 F005          	movff	prodl,___wmul@product
  8231  003D2E  CFF4 F006          	movff	prodh,___wmul@product+1
  8232  003D32  5001               	movf	___wmul@multiplier,w,c
  8233  003D34  0204               	mulwf	___wmul@multiplicand+1,c
  8234  003D36  50F3               	movf	prodl,w,c
  8235  003D38  2606               	addwf	___wmul@product+1,f,c
  8236  003D3A  5002               	movf	___wmul@multiplier+1,w,c
  8237  003D3C  0203               	mulwf	___wmul@multiplicand,c
  8238  003D3E  50F3               	movf	prodl,w,c
  8239  003D40  2606               	addwf	___wmul@product+1,f,c
  8240  003D42  C005  F001         	movff	___wmul@product,?___wmul
  8241  003D46  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8242  003D4A  0012               	return		;funcret
  8243  003D4C  FFFF               	dw	65535	; errata NOP
  8244  003D4E                     __end_of___wmul:
  8245                           	opt callstack 0
  8246                           
  8247 ;; *************** function _getchar *****************
  8248 ;; Defined at:
  8249 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;		None
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;		None
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  2   26[None  ] int 
  8256 ;; Registers used:
  8257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8263 ;;      Params:         0       0       0       0       0       0       0
  8264 ;;      Locals:         0       0       0       0       0       0       0
  8265 ;;      Temps:          0       0       0       0       0       0       0
  8266 ;;      Totals:         0       0       0       0       0       0       0
  8267 ;;Total ram usage:        0 bytes
  8268 ;; Hardware stack levels used:    1
  8269 ;; Hardware stack levels required when called:    4
  8270 ;; This function calls:
  8271 ;;		_fgetc
  8272 ;; This function is called by:
  8273 ;;		_int_to_char
  8274 ;;		_float_to_char
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text33
  8279  003E42                     __ptext33:
  8280                           	opt callstack 0
  8281  003E42                     _getchar:
  8282                           	opt callstack 0
  8283  003E42  FFFF               	dw	65535	; assembler added errata NOP
  8284                           
  8285                           ;	Return value of _getchar is never used
  8286                           
  8287                           ;incstack = 0
  8288  003E44  0E00               	movlw	0
  8289  003E46  6E03               	movwf	fgetc@fp,c
  8290  003E48  0E00               	movlw	0
  8291  003E4A  6E04               	movwf	fgetc@fp+1,c
  8292  003E4C  ECC5  F01B         	call	_fgetc	;wreg free
  8293  003E50  0012               	return		;funcret
  8294  003E52  FFFF               	dw	65535	; errata NOP
  8295  003E54                     __end_of_getchar:
  8296                           	opt callstack 0
  8297                           
  8298 ;; *************** function _fgetc *****************
  8299 ;; Defined at:
  8300 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8303 ;;		 -> NULL(0), 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  c               2    9[COMRAM] int 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  2    2[COMRAM] int 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8315 ;;      Params:         2       0       0       0       0       0       0
  8316 ;;      Locals:         2       0       0       0       0       0       0
  8317 ;;      Temps:          5       0       0       0       0       0       0
  8318 ;;      Totals:         9       0       0       0       0       0       0
  8319 ;;Total ram usage:        9 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:    3
  8322 ;; This function calls:
  8323 ;;		_getch
  8324 ;; This function is called by:
  8325 ;;		_getchar
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text34
  8330  00378A                     __ptext34:
  8331                           	opt callstack 0
  8332  00378A                     _fgetc:
  8333                           	opt callstack 0
  8334  00378A  FFFF               	dw	65535	; assembler added errata NOP
  8335                           
  8336                           ;incstack = 0
  8337  00378C  5003               	movf	fgetc@fp,w,c
  8338  00378E  1004               	iorwf	fgetc@fp+1,w,c
  8339  003790  A4D8               	btfss	status,2,c
  8340  003792  D012               	goto	l4520
  8341  003794  507E               	movf	_ungetcnt,w,c
  8342  003796  B4D8               	btfsc	status,2,c
  8343  003798  D007               	goto	l4518
  8344  00379A  0E00               	movlw	0
  8345  00379C  6E0B               	movwf	fgetc@c+1,c
  8346  00379E  0E00               	movlw	0
  8347  0037A0  6E0A               	movwf	fgetc@c,c
  8348  0037A2  0E00               	movlw	0
  8349  0037A4  6E7E               	movwf	_ungetcnt,c
  8350  0037A6  D02F               	goto	l4522
  8351  0037A8                     l4518:
  8352  0037A8  FFFF               	dw	65535	; assembler added errata NOP
  8353  0037AA  EC31  F01F         	call	_getch	;wreg free
  8354  0037AE  C001  F00A         	movff	?_getch,fgetc@c
  8355  0037B2  C002  F00B         	movff	?_getch+1,fgetc@c+1
  8356  0037B6  D027               	goto	l4522
  8357  0037B8                     l4520:
  8358  0037B8  FFFF               	dw	65535	; assembler added errata NOP
  8359  0037BA  EE20 F002          	lfsr	2,2
  8360  0037BE  5003               	movf	fgetc@fp,w,c
  8361  0037C0  26D9               	addwf	fsr2l,f,c
  8362  0037C2  5004               	movf	fgetc@fp+1,w,c
  8363  0037C4  22DA               	addwfc	fsr2h,f,c
  8364  0037C6  CFDE F005          	movff	postinc2,??_fgetc
  8365  0037CA  CFDD F006          	movff	postdec2,??_fgetc+1
  8366  0037CE  C003  FFD9         	movff	fgetc@fp,fsr2l
  8367  0037D2  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  8368  0037D6  CFDE F007          	movff	postinc2,??_fgetc+2
  8369  0037DA  CFDD F008          	movff	postdec2,??_fgetc+3
  8370  0037DE  5005               	movf	??_fgetc,w,c
  8371  0037E0  2407               	addwf	??_fgetc+2,w,c
  8372  0037E2  6ED9               	movwf	fsr2l,c
  8373  0037E4  5006               	movf	??_fgetc+1,w,c
  8374  0037E6  2008               	addwfc	??_fgetc+3,w,c
  8375  0037E8  6EDA               	movwf	fsr2h,c
  8376  0037EA  50DF               	movf	indf2,w,c
  8377  0037EC  6E09               	movwf	(??_fgetc+4)& (0+255),c
  8378  0037EE  5009               	movf	??_fgetc+4,w,c
  8379  0037F0  6E0A               	movwf	fgetc@c,c
  8380  0037F2  6A0B               	clrf	fgetc@c+1,c
  8381  0037F4  EE20 F002          	lfsr	2,2
  8382  0037F8  5003               	movf	fgetc@fp,w,c
  8383  0037FA  26D9               	addwf	fsr2l,f,c
  8384  0037FC  5004               	movf	fgetc@fp+1,w,c
  8385  0037FE  22DA               	addwfc	fsr2h,f,c
  8386  003800  2ADE               	incf	postinc2,f,c
  8387  003802  0E00               	movlw	0
  8388  003804  22DD               	addwfc	postdec2,f,c
  8389  003806                     l4522:
  8390  003806  FFFF               	dw	65535	; assembler added errata NOP
  8391  003808  C00A  F003         	movff	fgetc@c,?_fgetc
  8392  00380C  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  8393  003810  0012               	return		;funcret
  8394  003812  FFFF               	dw	65535	; errata NOP
  8395  003814                     __end_of_fgetc:
  8396                           	opt callstack 0
  8397                           
  8398 ;; *************** function _getch *****************
  8399 ;; Defined at:
  8400 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  2    0[COMRAM] int 
  8407 ;; Registers used:
  8408 ;;		None
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8414 ;;      Params:         2       0       0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0       0       0
  8417 ;;      Totals:         2       0       0       0       0       0       0
  8418 ;;Total ram usage:        2 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    2
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_fgetc
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text35
  8429  003E62                     __ptext35:
  8430                           	opt callstack 0
  8431  003E62                     _getch:
  8432                           	opt callstack 0
  8433  003E62  FFFF               	dw	65535	; assembler added errata NOP
  8434                           
  8435                           ;incstack = 0
  8436  003E64  6801               	setf	?_getch,c
  8437  003E66  6802               	setf	?_getch+1,c
  8438  003E68  0012               	return		;funcret
  8439  003E6A  FFFF               	dw	65535	; errata NOP
  8440  003E6C                     __end_of_getch:
  8441                           	opt callstack 0
  8442                           
  8443 ;; *************** function _initialize_TX *****************
  8444 ;; Defined at:
  8445 ;;		line 23 in file "serial.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8459 ;;      Params:         0       0       0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    2
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_main
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text36
  8474  003DF2                     __ptext36:
  8475                           	opt callstack 0
  8476  003DF2                     _initialize_TX:
  8477                           	opt callstack 0
  8478  003DF2  FFFF               	dw	65535	; assembler added errata NOP
  8479                           
  8480                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  8481                           
  8482                           ;incstack = 0
  8483  003DF4  8CAC               	bsf	4012,6,c	;volatile
  8484                           
  8485                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  8486  003DF6  8AAC               	bsf	4012,5,c	;volatile
  8487                           
  8488                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  8489  003DF8  98AC               	bcf	4012,4,c	;volatile
  8490                           
  8491                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  8492  003DFA  94AC               	bcf	4012,2,c	;volatile
  8493                           
  8494                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  8495  003DFC  80AC               	bsf	4012,0,c	;volatile
  8496                           
  8497                           ;serial.c: 29:   SPBRG = 25;
  8498  003DFE  0E19               	movlw	25
  8499  003E00  6EAF               	movwf	4015,c	;volatile
  8500  003E02  0012               	return		;funcret
  8501  003E04  FFFF               	dw	65535	; errata NOP
  8502  003E06                     __end_of_initialize_TX:
  8503                           	opt callstack 0
  8504                           
  8505 ;; *************** function _initialize_RX *****************
  8506 ;; Defined at:
  8507 ;;		line 32 in file "serial.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8521 ;;      Params:         0       0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    2
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_main
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text37
  8536  003E06                     __ptext37:
  8537                           	opt callstack 0
  8538  003E06                     _initialize_RX:
  8539                           	opt callstack 0
  8540  003E06  FFFF               	dw	65535	; assembler added errata NOP
  8541                           
  8542                           ;serial.c: 33:   RCSTA = 0x00;
  8543                           
  8544                           ;incstack = 0
  8545  003E08  0E00               	movlw	0
  8546  003E0A  6EAB               	movwf	4011,c	;volatile
  8547                           
  8548                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  8549  003E0C  8EAB               	bsf	4011,7,c	;volatile
  8550                           
  8551                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  8552  003E0E  8CAB               	bsf	4011,6,c	;volatile
  8553                           
  8554                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  8555  003E10  88AB               	bsf	4011,4,c	;volatile
  8556                           
  8557                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  8558  003E12  96AB               	bcf	4011,3,c	;volatile
  8559                           
  8560                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  8561  003E14  80AB               	bsf	4011,0,c	;volatile
  8562  003E16  0012               	return		;funcret
  8563  003E18  FFFF               	dw	65535	; errata NOP
  8564  003E1A                     __end_of_initialize_RX:
  8565                           	opt callstack 0
  8566                           
  8567 ;; *************** function _initialize_PWM *****************
  8568 ;; Defined at:
  8569 ;;		line 5 in file "pwm.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  freq            2    0[COMRAM] int 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2, status,0
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8583 ;;      Params:         2       0       0       0       0       0       0
  8584 ;;      Locals:         0       0       0       0       0       0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0
  8586 ;;      Totals:         2       0       0       0       0       0       0
  8587 ;;Total ram usage:        2 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    2
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		_main
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text38
  8598  003DDA                     __ptext38:
  8599                           	opt callstack 0
  8600  003DDA                     _initialize_PWM:
  8601                           	opt callstack 0
  8602  003DDA  FFFF               	dw	65535	; assembler added errata NOP
  8603                           
  8604                           ;pwm.c: 6:   T2CON &= ~(0x04);
  8605                           
  8606                           ;incstack = 0
  8607  003DDC  94CA               	bcf	4042,2,c	;volatile
  8608                           
  8609                           ;pwm.c: 7:   PR2 = 0xFF;
  8610  003DDE  68CB               	setf	4043,c	;volatile
  8611                           
  8612                           ;pwm.c: 8:   CCPR1L = 0xAA;
  8613  003DE0  0EAA               	movlw	170
  8614  003DE2  6EBE               	movwf	4030,c	;volatile
  8615                           
  8616                           ;pwm.c: 9:   CCP1CON |= 0x00;
  8617  003DE4  50BD               	movf	4029,w,c	;volatile
  8618                           
  8619                           ;pwm.c: 10:   T2CON = 0x07;
  8620  003DE6  0E07               	movlw	7
  8621  003DE8  6ECA               	movwf	4042,c	;volatile
  8622                           
  8623                           ;pwm.c: 11:   CCP1CON |= 0x0C;
  8624  003DEA  0E0C               	movlw	12
  8625  003DEC  12BD               	iorwf	4029,f,c	;volatile
  8626  003DEE  0012               	return		;funcret
  8627  003DF0  FFFF               	dw	65535	; errata NOP
  8628  003DF2                     __end_of_initialize_PWM:
  8629                           	opt callstack 0
  8630                           
  8631 ;; *************** function _get_temp *****************
  8632 ;; Defined at:
  8633 ;;		line 10 in file "temp_adc.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;		None
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  temp            4   55[COMRAM] float 
  8638 ;;  real_voltage    4   51[COMRAM] float 
  8639 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  4   47[COMRAM] float 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8649 ;;      Params:         4       0       0       0       0       0       0
  8650 ;;      Locals:        10       0       0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0
  8652 ;;      Totals:        14       0       0       0       0       0       0
  8653 ;;Total ram usage:       14 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    4
  8656 ;; This function calls:
  8657 ;;		_ADC_Init
  8658 ;;		_ADC_Read
  8659 ;;		___flmul
  8660 ;;		___flsub
  8661 ;;		___xxtofl
  8662 ;; This function is called by:
  8663 ;;		_main
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text39
  8668  00335C                     __ptext39:
  8669                           	opt callstack 0
  8670  00335C                     _get_temp:
  8671                           	opt callstack 0
  8672  00335C  FFFF               	dw	65535	; assembler added errata NOP
  8673                           
  8674                           ;temp_adc.c: 11:   ADC_Init();
  8675                           
  8676                           ;incstack = 0
  8677  00335E  EC2A  F01F         	call	_ADC_Init	;wreg free
  8678                           
  8679                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  8680  003362  90C1               	bcf	4033,0,c	;volatile
  8681                           
  8682                           ;temp_adc.c: 13:   TRISA |= 0x01;
  8683  003364  8092               	bsf	3986,0,c	;volatile
  8684                           
  8685                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  8686  003366  0E00               	movlw	0
  8687  003368  ECFF  F01C         	call	_ADC_Read
  8688  00336C  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  8689  003370  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  8690                           
  8691                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  8692  003374  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  8693  003378  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  8694  00337C  6A03               	clrf	___xxtofl@val+2,c
  8695  00337E  6A04               	clrf	___xxtofl@val+3,c
  8696  003380  0E00               	movlw	0
  8697  003382  ECEA  F016         	call	___xxtofl
  8698  003386  C001  F00F         	movff	?___xxtofl,___flmul@b
  8699  00338A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8700  00338E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8701  003392  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8702  003396  0E9F               	movlw	159
  8703  003398  6E13               	movwf	___flmul@a,c
  8704  00339A  0EAB               	movlw	171
  8705  00339C  6E14               	movwf	___flmul@a+1,c
  8706  00339E  0EAD               	movlw	173
  8707  0033A0  6E15               	movwf	___flmul@a+2,c
  8708  0033A2  0E3B               	movlw	59
  8709  0033A4  6E16               	movwf	___flmul@a+3,c
  8710  0033A6  EC17  F00E         	call	___flmul	;wreg free
  8711  0033AA  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  8712  0033AE  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  8713  0033B2  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  8714  0033B6  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  8715                           
  8716                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  8717  0033BA  0E00               	movlw	0
  8718  0033BC  6E28               	movwf	___flsub@b,c
  8719  0033BE  0E00               	movlw	0
  8720  0033C0  6E29               	movwf	___flsub@b+1,c
  8721  0033C2  0E48               	movlw	72
  8722  0033C4  6E2A               	movwf	___flsub@b+2,c
  8723  0033C6  0E43               	movlw	67
  8724  0033C8  6E2B               	movwf	___flsub@b+3,c
  8725  0033CA  0E00               	movlw	0
  8726  0033CC  6E13               	movwf	___flmul@a,c
  8727  0033CE  0E00               	movlw	0
  8728  0033D0  6E14               	movwf	___flmul@a+1,c
  8729  0033D2  0E0C               	movlw	12
  8730  0033D4  6E15               	movwf	___flmul@a+2,c
  8731  0033D6  0E42               	movlw	66
  8732  0033D8  6E16               	movwf	___flmul@a+3,c
  8733  0033DA  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  8734  0033DE  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  8735  0033E2  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  8736  0033E6  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  8737  0033EA  EC17  F00E         	call	___flmul	;wreg free
  8738  0033EE  C00F  F02C         	movff	?___flmul,___flsub@a
  8739  0033F2  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  8740  0033F6  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  8741  0033FA  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  8742  0033FE  EC29  F01D         	call	___flsub	;wreg free
  8743  003402  C028  F038         	movff	?___flsub,get_temp@temp
  8744  003406  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  8745  00340A  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  8746  00340E  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  8747                           
  8748                           ;temp_adc.c: 18:   return temp;
  8749  003412  C038  F030         	movff	get_temp@temp,?_get_temp
  8750  003416  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  8751  00341A  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  8752  00341E  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  8753  003422  0012               	return		;funcret
  8754  003424  FFFF               	dw	65535	; errata NOP
  8755  003426                     __end_of_get_temp:
  8756                           	opt callstack 0
  8757                           
  8758 ;; *************** function ___xxtofl *****************
  8759 ;; Defined at:
  8760 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  sign            1    wreg     unsigned char 
  8763 ;;  val             4    0[COMRAM] long 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  sign            1    8[COMRAM] unsigned char 
  8766 ;;  arg             4   10[COMRAM] unsigned long 
  8767 ;;  exp             1    9[COMRAM] unsigned char 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  4    0[COMRAM] unsigned char 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8777 ;;      Params:         4       0       0       0       0       0       0
  8778 ;;      Locals:         6       0       0       0       0       0       0
  8779 ;;      Temps:          4       0       0       0       0       0       0
  8780 ;;      Totals:        14       0       0       0       0       0       0
  8781 ;;Total ram usage:       14 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    2
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_get_temp
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text40
  8792  002DD4                     __ptext40:
  8793                           	opt callstack 0
  8794  002DD4                     ___xxtofl:
  8795                           	opt callstack 0
  8796  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  8797                           
  8798                           ;incstack = 0
  8799                           ;___xxtofl@sign stored from wreg
  8800  002DD6  6E09               	movwf	___xxtofl@sign,c
  8801  002DD8  5009               	movf	___xxtofl@sign,w,c
  8802  002DDA  A4D8               	btfss	status,2,c
  8803  002DDC  AE04               	btfss	___xxtofl@val+3,7,c
  8804  002DDE  D01A               	goto	l1231
  8805  002DE0  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8806  002DE4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8807  002DE8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8808  002DEC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8809  002DF0  1E05               	comf	??___xxtofl,f,c
  8810  002DF2  1E06               	comf	??___xxtofl+1,f,c
  8811  002DF4  1E07               	comf	??___xxtofl+2,f,c
  8812  002DF6  1E08               	comf	??___xxtofl+3,f,c
  8813  002DF8  2A05               	incf	??___xxtofl,f,c
  8814  002DFA  0E00               	movlw	0
  8815  002DFC  2206               	addwfc	??___xxtofl+1,f,c
  8816  002DFE  2207               	addwfc	??___xxtofl+2,f,c
  8817  002E00  2208               	addwfc	??___xxtofl+3,f,c
  8818  002E02  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8819  002E06  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8820  002E0A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8821  002E0E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8822  002E12  D009               	goto	l4730
  8823  002E14                     l1231:
  8824  002E14  FFFF               	dw	65535	; assembler added errata NOP
  8825  002E16  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8826  002E1A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8827  002E1E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8828  002E22  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8829  002E26                     l4730:
  8830  002E26  FFFF               	dw	65535	; assembler added errata NOP
  8831  002E28  5001               	movf	___xxtofl@val,w,c
  8832  002E2A  1002               	iorwf	___xxtofl@val+1,w,c
  8833  002E2C  1003               	iorwf	___xxtofl@val+2,w,c
  8834  002E2E  1004               	iorwf	___xxtofl@val+3,w,c
  8835  002E30  A4D8               	btfss	status,2,c
  8836  002E32  D009               	goto	l4736
  8837  002E34  0E00               	movlw	0
  8838  002E36  6E01               	movwf	?___xxtofl,c
  8839  002E38  0E00               	movlw	0
  8840  002E3A  6E02               	movwf	?___xxtofl+1,c
  8841  002E3C  0E00               	movlw	0
  8842  002E3E  6E03               	movwf	?___xxtofl+2,c
  8843  002E40  0E00               	movlw	0
  8844  002E42  6E04               	movwf	?___xxtofl+3,c
  8845  002E44  D072               	goto	l1234
  8846  002E46                     l4736:
  8847  002E46  FFFF               	dw	65535	; assembler added errata NOP
  8848  002E48  0E96               	movlw	150
  8849  002E4A  6E0A               	movwf	___xxtofl@exp,c
  8850  002E4C  D007               	goto	l4740
  8851  002E4E                     l4738:
  8852  002E4E  FFFF               	dw	65535	; assembler added errata NOP
  8853  002E50  2A0A               	incf	___xxtofl@exp,f,c
  8854  002E52  90D8               	bcf	status,0,c
  8855  002E54  320E               	rrcf	___xxtofl@arg+3,f,c
  8856  002E56  320D               	rrcf	___xxtofl@arg+2,f,c
  8857  002E58  320C               	rrcf	___xxtofl@arg+1,f,c
  8858  002E5A  320B               	rrcf	___xxtofl@arg,f,c
  8859  002E5C                     l4740:
  8860  002E5C  FFFF               	dw	65535	; assembler added errata NOP
  8861  002E5E  0E00               	movlw	0
  8862  002E60  140B               	andwf	___xxtofl@arg,w,c
  8863  002E62  6E05               	movwf	??___xxtofl& (0+255),c
  8864  002E64  0E00               	movlw	0
  8865  002E66  140C               	andwf	___xxtofl@arg+1,w,c
  8866  002E68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8867  002E6A  0E00               	movlw	0
  8868  002E6C  140D               	andwf	___xxtofl@arg+2,w,c
  8869  002E6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8870  002E70  0EFE               	movlw	254
  8871  002E72  140E               	andwf	___xxtofl@arg+3,w,c
  8872  002E74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8873  002E76  5005               	movf	??___xxtofl,w,c
  8874  002E78  1006               	iorwf	??___xxtofl+1,w,c
  8875  002E7A  1007               	iorwf	??___xxtofl+2,w,c
  8876  002E7C  1008               	iorwf	??___xxtofl+3,w,c
  8877  002E7E  B4D8               	btfsc	status,2,c
  8878  002E80  D00E               	goto	l1238
  8879  002E82  D7E5               	goto	l4738
  8880  002E84                     l4742:
  8881  002E84  FFFF               	dw	65535	; assembler added errata NOP
  8882  002E86  2A0A               	incf	___xxtofl@exp,f,c
  8883  002E88  0E01               	movlw	1
  8884  002E8A  260B               	addwf	___xxtofl@arg,f,c
  8885  002E8C  0E00               	movlw	0
  8886  002E8E  220C               	addwfc	___xxtofl@arg+1,f,c
  8887  002E90  220D               	addwfc	___xxtofl@arg+2,f,c
  8888  002E92  220E               	addwfc	___xxtofl@arg+3,f,c
  8889  002E94  90D8               	bcf	status,0,c
  8890  002E96  320E               	rrcf	___xxtofl@arg+3,f,c
  8891  002E98  320D               	rrcf	___xxtofl@arg+2,f,c
  8892  002E9A  320C               	rrcf	___xxtofl@arg+1,f,c
  8893  002E9C  320B               	rrcf	___xxtofl@arg,f,c
  8894  002E9E                     l1238:
  8895  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  8896  002EA0  0E00               	movlw	0
  8897  002EA2  140B               	andwf	___xxtofl@arg,w,c
  8898  002EA4  6E05               	movwf	??___xxtofl& (0+255),c
  8899  002EA6  0E00               	movlw	0
  8900  002EA8  140C               	andwf	___xxtofl@arg+1,w,c
  8901  002EAA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8902  002EAC  0E00               	movlw	0
  8903  002EAE  140D               	andwf	___xxtofl@arg+2,w,c
  8904  002EB0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8905  002EB2  0EFF               	movlw	255
  8906  002EB4  140E               	andwf	___xxtofl@arg+3,w,c
  8907  002EB6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8908  002EB8  5005               	movf	??___xxtofl,w,c
  8909  002EBA  1006               	iorwf	??___xxtofl+1,w,c
  8910  002EBC  1007               	iorwf	??___xxtofl+2,w,c
  8911  002EBE  1008               	iorwf	??___xxtofl+3,w,c
  8912  002EC0  B4D8               	btfsc	status,2,c
  8913  002EC2  D008               	goto	l4750
  8914  002EC4  D7DF               	goto	l4742
  8915  002EC6                     l4748:
  8916  002EC6  FFFF               	dw	65535	; assembler added errata NOP
  8917  002EC8  060A               	decf	___xxtofl@exp,f,c
  8918  002ECA  90D8               	bcf	status,0,c
  8919  002ECC  360B               	rlcf	___xxtofl@arg,f,c
  8920  002ECE  360C               	rlcf	___xxtofl@arg+1,f,c
  8921  002ED0  360D               	rlcf	___xxtofl@arg+2,f,c
  8922  002ED2  360E               	rlcf	___xxtofl@arg+3,f,c
  8923  002ED4                     l4750:
  8924  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  8925  002ED6  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8926  002ED8  D003               	goto	u5120
  8927  002EDA  0E02               	movlw	2
  8928  002EDC  600A               	cpfslt	___xxtofl@exp,c
  8929  002EDE  D7F3               	goto	l4748
  8930  002EE0                     u5120:
  8931  002EE0  FFFF               	dw	65535	; assembler added errata NOP
  8932  002EE2  A00A               	btfss	___xxtofl@exp,0,c
  8933  002EE4  9E0D               	bcf	___xxtofl@arg+2,7,c
  8934  002EE6  90D8               	bcf	status,0,c
  8935  002EE8  320A               	rrcf	___xxtofl@exp,f,c
  8936  002EEA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8937  002EEE  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8938  002EF0  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8939  002EF2  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8940  002EF4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8941  002EF8  6A07               	clrf	??___xxtofl+2,c
  8942  002EFA  6A06               	clrf	??___xxtofl+1,c
  8943  002EFC  6A05               	clrf	??___xxtofl,c
  8944  002EFE  5005               	movf	??___xxtofl,w,c
  8945  002F00  120B               	iorwf	___xxtofl@arg,f,c
  8946  002F02  5006               	movf	??___xxtofl+1,w,c
  8947  002F04  120C               	iorwf	___xxtofl@arg+1,f,c
  8948  002F06  5007               	movf	??___xxtofl+2,w,c
  8949  002F08  120D               	iorwf	___xxtofl@arg+2,f,c
  8950  002F0A  5008               	movf	??___xxtofl+3,w,c
  8951  002F0C  120E               	iorwf	___xxtofl@arg+3,f,c
  8952  002F0E  5009               	movf	___xxtofl@sign,w,c
  8953  002F10  A4D8               	btfss	status,2,c
  8954  002F12  AE04               	btfss	___xxtofl@val+3,7,c
  8955  002F14  D001               	goto	l4766
  8956  002F16  8E0E               	bsf	___xxtofl@arg+3,7,c
  8957  002F18                     l4766:
  8958  002F18  FFFF               	dw	65535	; assembler added errata NOP
  8959  002F1A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8960  002F1E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8961  002F22  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8962  002F26  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8963  002F2A                     l1234:
  8964  002F2A  FFFF               	dw	65535	; assembler added errata NOP
  8965  002F2C  0012               	return		;funcret
  8966  002F2E  FFFF               	dw	65535	; errata NOP
  8967  002F30                     __end_of___xxtofl:
  8968                           	opt callstack 0
  8969                           
  8970 ;; *************** function ___flsub *****************
  8971 ;; Defined at:
  8972 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  b               4   39[COMRAM] unsigned char 
  8975 ;;  a               4   43[COMRAM] unsigned char 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  4   39[COMRAM] unsigned char 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8987 ;;      Params:         8       0       0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0
  8990 ;;      Totals:         8       0       0       0       0       0       0
  8991 ;;Total ram usage:        8 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    3
  8994 ;; This function calls:
  8995 ;;		___fladd
  8996 ;; This function is called by:
  8997 ;;		_get_temp
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text41
  9002  003A52                     __ptext41:
  9003                           	opt callstack 0
  9004  003A52                     ___flsub:
  9005                           	opt callstack 0
  9006  003A52  FFFF               	dw	65535	; assembler added errata NOP
  9007                           
  9008                           ;incstack = 0
  9009  003A54  0E00               	movlw	0
  9010  003A56  1A2C               	xorwf	___flsub@a,f,c
  9011  003A58  0E00               	movlw	0
  9012  003A5A  1A2D               	xorwf	___flsub@a+1,f,c
  9013  003A5C  0E00               	movlw	0
  9014  003A5E  1A2E               	xorwf	___flsub@a+2,f,c
  9015  003A60  0E80               	movlw	128
  9016  003A62  1A2F               	xorwf	___flsub@a+3,f,c
  9017  003A64  C028  F001         	movff	___flsub@b,___fladd@b
  9018  003A68  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  9019  003A6C  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  9020  003A70  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  9021  003A74  C02C  F005         	movff	___flsub@a,___fladd@a
  9022  003A78  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  9023  003A7C  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  9024  003A80  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  9025  003A84  ECD8  F00F         	call	___fladd	;wreg free
  9026  003A88  C001  F028         	movff	?___fladd,?___flsub
  9027  003A8C  C002  F029         	movff	?___fladd+1,?___flsub+1
  9028  003A90  C003  F02A         	movff	?___fladd+2,?___flsub+2
  9029  003A94  C004  F02B         	movff	?___fladd+3,?___flsub+3
  9030  003A98  0012               	return		;funcret
  9031  003A9A  FFFF               	dw	65535	; errata NOP
  9032  003A9C                     __end_of___flsub:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function ___fladd *****************
  9036 ;; Defined at:
  9037 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  b               4    0[COMRAM] unsigned char 
  9040 ;;  a               4    4[COMRAM] unsigned char 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  grs             1   15[COMRAM] unsigned char 
  9043 ;;  bexp            1   14[COMRAM] unsigned char 
  9044 ;;  aexp            1   13[COMRAM] unsigned char 
  9045 ;;  signs           1   12[COMRAM] unsigned char 
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  4    0[COMRAM] unsigned char 
  9048 ;; Registers used:
  9049 ;;		wreg, status,2, status,0
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9055 ;;      Params:         8       0       0       0       0       0       0
  9056 ;;      Locals:         4       0       0       0       0       0       0
  9057 ;;      Temps:          4       0       0       0       0       0       0
  9058 ;;      Totals:        16       0       0       0       0       0       0
  9059 ;;Total ram usage:       16 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    2
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		___flsub
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text42
  9070  001FB0                     __ptext42:
  9071                           	opt callstack 0
  9072  001FB0                     ___fladd:
  9073                           	opt callstack 0
  9074  001FB0  FFFF               	dw	65535	; assembler added errata NOP
  9075                           
  9076                           ;incstack = 0
  9077  001FB2  5004               	movf	___fladd@b+3,w,c
  9078  001FB4  0B80               	andlw	128
  9079  001FB6  6E0D               	movwf	___fladd@signs,c
  9080  001FB8  5004               	movf	___fladd@b+3,w,c
  9081  001FBA  2404               	addwf	___fladd@b+3,w,c
  9082  001FBC  6E0F               	movwf	___fladd@bexp,c
  9083  001FBE  BE03               	btfsc	___fladd@b+2,7,c
  9084  001FC0  800F               	bsf	___fladd@bexp,0,c
  9085  001FC2  500F               	movf	___fladd@bexp,w,c
  9086  001FC4  B4D8               	btfsc	status,2,c
  9087  001FC6  D00E               	goto	l4326
  9088  001FC8  280F               	incf	___fladd@bexp,w,c
  9089  001FCA  A4D8               	btfss	status,2,c
  9090  001FCC  D008               	goto	l4322
  9091  001FCE  0E00               	movlw	0
  9092  001FD0  6E01               	movwf	___fladd@b,c
  9093  001FD2  0E00               	movlw	0
  9094  001FD4  6E02               	movwf	___fladd@b+1,c
  9095  001FD6  0E00               	movlw	0
  9096  001FD8  6E03               	movwf	___fladd@b+2,c
  9097  001FDA  0E00               	movlw	0
  9098  001FDC  6E04               	movwf	___fladd@b+3,c
  9099  001FDE                     l4322:
  9100  001FDE  FFFF               	dw	65535	; assembler added errata NOP
  9101  001FE0  8E03               	bsf	___fladd@b+2,7,c
  9102  001FE2  D007               	goto	L22
  9103  001FE4                     l4326:
  9104  001FE4  FFFF               	dw	65535	; assembler added errata NOP
  9105  001FE6  0E00               	movlw	0
  9106  001FE8  6E01               	movwf	___fladd@b,c
  9107  001FEA  0E00               	movlw	0
  9108  001FEC  6E02               	movwf	___fladd@b+1,c
  9109  001FEE  0E00               	movlw	0
  9110  001FF0  6E03               	movwf	___fladd@b+2,c
  9111  001FF2                     L22:
  9112  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  9113  001FF4  0E00               	movlw	0
  9114  001FF6  6E04               	movwf	___fladd@b+3,c
  9115  001FF8  5008               	movf	___fladd@a+3,w,c
  9116  001FFA  0B80               	andlw	128
  9117  001FFC  6E0E               	movwf	___fladd@aexp,c
  9118  001FFE  500D               	movf	___fladd@signs,w,c
  9119  002000  180E               	xorwf	___fladd@aexp,w,c
  9120  002002  A4D8               	btfss	status,2,c
  9121  002004  8C0D               	bsf	___fladd@signs,6,c
  9122  002006  5008               	movf	___fladd@a+3,w,c
  9123  002008  2408               	addwf	___fladd@a+3,w,c
  9124  00200A  6E0E               	movwf	___fladd@aexp,c
  9125  00200C  BE07               	btfsc	___fladd@a+2,7,c
  9126  00200E  800E               	bsf	___fladd@aexp,0,c
  9127  002010  500E               	movf	___fladd@aexp,w,c
  9128  002012  B4D8               	btfsc	status,2,c
  9129  002014  D00E               	goto	l4350
  9130  002016  280E               	incf	___fladd@aexp,w,c
  9131  002018  A4D8               	btfss	status,2,c
  9132  00201A  D008               	goto	l4346
  9133  00201C  0E00               	movlw	0
  9134  00201E  6E05               	movwf	___fladd@a,c
  9135  002020  0E00               	movlw	0
  9136  002022  6E06               	movwf	___fladd@a+1,c
  9137  002024  0E00               	movlw	0
  9138  002026  6E07               	movwf	___fladd@a+2,c
  9139  002028  0E00               	movlw	0
  9140  00202A  6E08               	movwf	___fladd@a+3,c
  9141  00202C                     l4346:
  9142  00202C  FFFF               	dw	65535	; assembler added errata NOP
  9143  00202E  8E07               	bsf	___fladd@a+2,7,c
  9144  002030  D007               	goto	L23
  9145  002032                     l4350:
  9146  002032  FFFF               	dw	65535	; assembler added errata NOP
  9147  002034  0E00               	movlw	0
  9148  002036  6E05               	movwf	___fladd@a,c
  9149  002038  0E00               	movlw	0
  9150  00203A  6E06               	movwf	___fladd@a+1,c
  9151  00203C  0E00               	movlw	0
  9152  00203E  6E07               	movwf	___fladd@a+2,c
  9153  002040                     L23:
  9154  002040  FFFF               	dw	65535	; assembler added errata NOP
  9155  002042  0E00               	movlw	0
  9156  002044  6E08               	movwf	___fladd@a+3,c
  9157  002046  500F               	movf	___fladd@bexp,w,c
  9158  002048  5C0E               	subwf	___fladd@aexp,w,c
  9159  00204A  B0D8               	btfsc	status,0,c
  9160  00204C  D023               	goto	l4388
  9161  00204E  AC0D               	btfss	___fladd@signs,6,c
  9162  002050  D002               	goto	l4358
  9163  002052  0E80               	movlw	128
  9164  002054  1A0D               	xorwf	___fladd@signs,f,c
  9165  002056                     l4358:
  9166  002056  FFFF               	dw	65535	; assembler added errata NOP
  9167  002058  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9168  00205C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9169  002060  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9170  002064  C001  F010         	movff	___fladd@b,___fladd@grs
  9171  002068  C005  F001         	movff	___fladd@a,___fladd@b
  9172  00206C  C010  F005         	movff	___fladd@grs,___fladd@a
  9173  002070  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9174  002074  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9175  002078  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9176  00207C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9177  002080  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9178  002084  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9179  002088  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9180  00208C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9181  002090  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9182  002094                     l4388:
  9183  002094  FFFF               	dw	65535	; assembler added errata NOP
  9184  002096  0E00               	movlw	0
  9185  002098  6E10               	movwf	___fladd@grs,c
  9186  00209A  500F               	movf	___fladd@bexp,w,c
  9187  00209C  C00E  F009         	movff	___fladd@aexp,??___fladd
  9188  0020A0  6A0A               	clrf	(??___fladd+1)& (0+255),c
  9189  0020A2  5E09               	subwf	??___fladd,f,c
  9190  0020A4  0E00               	movlw	0
  9191  0020A6  5A0A               	subwfb	??___fladd+1,f,c
  9192  0020A8  BE0A               	btfsc	??___fladd+1,7,c
  9193  0020AA  D031               	goto	l1105
  9194  0020AC  500A               	movf	??___fladd+1,w,c
  9195  0020AE  E104               	bnz	u4480
  9196  0020B0  0E1A               	movlw	26
  9197  0020B2  5C09               	subwf	??___fladd,w,c
  9198  0020B4  A0D8               	btfss	status,0,c
  9199  0020B6  D02B               	goto	l1105
  9200  0020B8                     u4480:
  9201  0020B8  5001               	movf	___fladd@b,w,c
  9202  0020BA  1002               	iorwf	___fladd@b+1,w,c
  9203  0020BC  1003               	iorwf	___fladd@b+2,w,c
  9204  0020BE  1004               	iorwf	___fladd@b+3,w,c
  9205  0020C0  B4D8               	btfsc	status,2,c
  9206  0020C2  D002               	goto	u4490
  9207  0020C4  0E01               	movlw	1
  9208  0020C6  D002               	goto	u4500
  9209  0020C8                     u4490:
  9210  0020C8  FFFF               	dw	65535	; assembler added errata NOP
  9211  0020CA  0E00               	movlw	0
  9212  0020CC                     u4500:
  9213  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  9214  0020CE  6E10               	movwf	___fladd@grs,c
  9215  0020D0  0E00               	movlw	0
  9216  0020D2  6E01               	movwf	___fladd@b,c
  9217  0020D4  0E00               	movlw	0
  9218  0020D6  6E02               	movwf	___fladd@b+1,c
  9219  0020D8  0E00               	movlw	0
  9220  0020DA  6E03               	movwf	___fladd@b+2,c
  9221  0020DC  0E00               	movlw	0
  9222  0020DE  6E04               	movwf	___fladd@b+3,c
  9223  0020E0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9224  0020E4  D019               	goto	u4530
  9225  0020E6                     l1106:
  9226  0020E6  FFFF               	dw	65535	; assembler added errata NOP
  9227  0020E8  A010               	btfss	___fladd@grs,0,c
  9228  0020EA  D005               	goto	l4400
  9229  0020EC  90D8               	bcf	status,0,c
  9230  0020EE  3010               	rrcf	___fladd@grs,w,c
  9231  0020F0  0901               	iorlw	1
  9232  0020F2  6E10               	movwf	___fladd@grs,c
  9233  0020F4  D003               	goto	l4402
  9234  0020F6                     l4400:
  9235  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  9236  0020F8  90D8               	bcf	status,0,c
  9237  0020FA  3210               	rrcf	___fladd@grs,f,c
  9238  0020FC                     l4402:
  9239  0020FC  FFFF               	dw	65535	; assembler added errata NOP
  9240  0020FE  B001               	btfsc	___fladd@b,0,c
  9241  002100  8E10               	bsf	___fladd@grs,7,c
  9242  002102  3404               	rlcf	___fladd@b+3,w,c
  9243  002104  3204               	rrcf	___fladd@b+3,f,c
  9244  002106  3203               	rrcf	___fladd@b+2,f,c
  9245  002108  3202               	rrcf	___fladd@b+1,f,c
  9246  00210A  3201               	rrcf	___fladd@b,f,c
  9247  00210C  2A0F               	incf	___fladd@bexp,f,c
  9248  00210E                     l1105:
  9249  00210E  FFFF               	dw	65535	; assembler added errata NOP
  9250  002110  500E               	movf	___fladd@aexp,w,c
  9251  002112  5C0F               	subwf	___fladd@bexp,w,c
  9252  002114  A0D8               	btfss	status,0,c
  9253  002116  D7E7               	goto	l1106
  9254  002118                     u4530:
  9255  002118  FFFF               	dw	65535	; assembler added errata NOP
  9256  00211A  BC0D               	btfsc	___fladd@signs,6,c
  9257  00211C  D021               	goto	l4434
  9258  00211E  500F               	movf	___fladd@bexp,w,c
  9259  002120  B4D8               	btfsc	status,2,c
  9260  002122  D065               	goto	u4620
  9261  002124  5005               	movf	___fladd@a,w,c
  9262  002126  2601               	addwf	___fladd@b,f,c
  9263  002128  5006               	movf	___fladd@a+1,w,c
  9264  00212A  2202               	addwfc	___fladd@b+1,f,c
  9265  00212C  5007               	movf	___fladd@a+2,w,c
  9266  00212E  2203               	addwfc	___fladd@b+2,f,c
  9267  002130  5008               	movf	___fladd@a+3,w,c
  9268  002132  2204               	addwfc	___fladd@b+3,f,c
  9269  002134  A004               	btfss	___fladd@b+3,0,c
  9270  002136  D07B               	goto	u4660
  9271  002138  A010               	btfss	___fladd@grs,0,c
  9272  00213A  D005               	goto	l4424
  9273  00213C  90D8               	bcf	status,0,c
  9274  00213E  3010               	rrcf	___fladd@grs,w,c
  9275  002140  0901               	iorlw	1
  9276  002142  6E10               	movwf	___fladd@grs,c
  9277  002144  D003               	goto	l4426
  9278  002146                     l4424:
  9279  002146  FFFF               	dw	65535	; assembler added errata NOP
  9280  002148  90D8               	bcf	status,0,c
  9281  00214A  3210               	rrcf	___fladd@grs,f,c
  9282  00214C                     l4426:
  9283  00214C  FFFF               	dw	65535	; assembler added errata NOP
  9284  00214E  B001               	btfsc	___fladd@b,0,c
  9285  002150  8E10               	bsf	___fladd@grs,7,c
  9286  002152  3404               	rlcf	___fladd@b+3,w,c
  9287  002154  3204               	rrcf	___fladd@b+3,f,c
  9288  002156  3203               	rrcf	___fladd@b+2,f,c
  9289  002158  3202               	rrcf	___fladd@b+1,f,c
  9290  00215A  3201               	rrcf	___fladd@b,f,c
  9291  00215C  2A0F               	incf	___fladd@bexp,f,c
  9292  00215E  D067               	goto	u4660
  9293  002160                     l4434:
  9294  002160  FFFF               	dw	65535	; assembler added errata NOP
  9295  002162  5005               	movf	___fladd@a,w,c
  9296  002164  5C01               	subwf	___fladd@b,w,c
  9297  002166  5006               	movf	___fladd@a+1,w,c
  9298  002168  5802               	subwfb	___fladd@b+1,w,c
  9299  00216A  5007               	movf	___fladd@a+2,w,c
  9300  00216C  5803               	subwfb	___fladd@b+2,w,c
  9301  00216E  5004               	movf	___fladd@b+3,w,c
  9302  002170  0A80               	xorlw	128
  9303  002172  6E09               	movwf	??___fladd& (0+255),c
  9304  002174  5008               	movf	___fladd@a+3,w,c
  9305  002176  0A80               	xorlw	128
  9306  002178  5809               	subwfb	??___fladd& (0+255),w,c
  9307  00217A  B0D8               	btfsc	status,0,c
  9308  00217C  D025               	goto	l4444
  9309  00217E  5001               	movf	___fladd@b,w,c
  9310  002180  5C05               	subwf	___fladd@a,w,c
  9311  002182  6E09               	movwf	??___fladd& (0+255),c
  9312  002184  5002               	movf	___fladd@b+1,w,c
  9313  002186  5806               	subwfb	___fladd@a+1,w,c
  9314  002188  6E0A               	movwf	(??___fladd+1)& (0+255),c
  9315  00218A  5003               	movf	___fladd@b+2,w,c
  9316  00218C  5807               	subwfb	___fladd@a+2,w,c
  9317  00218E  6E0B               	movwf	(??___fladd+2)& (0+255),c
  9318  002190  5004               	movf	___fladd@b+3,w,c
  9319  002192  5808               	subwfb	___fladd@a+3,w,c
  9320  002194  6E0C               	movwf	(??___fladd+3)& (0+255),c
  9321  002196  0EFF               	movlw	255
  9322  002198  2409               	addwf	??___fladd,w,c
  9323  00219A  6E01               	movwf	___fladd@b,c
  9324  00219C  0EFF               	movlw	255
  9325  00219E  200A               	addwfc	??___fladd+1,w,c
  9326  0021A0  6E02               	movwf	___fladd@b+1,c
  9327  0021A2  0EFF               	movlw	255
  9328  0021A4  200B               	addwfc	??___fladd+2,w,c
  9329  0021A6  6E03               	movwf	___fladd@b+2,c
  9330  0021A8  0EFF               	movlw	255
  9331  0021AA  200C               	addwfc	??___fladd+3,w,c
  9332  0021AC  6E04               	movwf	___fladd@b+3,c
  9333  0021AE  0E80               	movlw	128
  9334  0021B0  1A0D               	xorwf	___fladd@signs,f,c
  9335  0021B2  6C10               	negf	___fladd@grs,c
  9336  0021B4  5010               	movf	___fladd@grs,w,c
  9337  0021B6  A4D8               	btfss	status,2,c
  9338  0021B8  D010               	goto	l1121
  9339  0021BA  0E01               	movlw	1
  9340  0021BC  2601               	addwf	___fladd@b,f,c
  9341  0021BE  0E00               	movlw	0
  9342  0021C0  2202               	addwfc	___fladd@b+1,f,c
  9343  0021C2  2203               	addwfc	___fladd@b+2,f,c
  9344  0021C4  2204               	addwfc	___fladd@b+3,f,c
  9345  0021C6  D009               	goto	l1121
  9346  0021C8                     l4444:
  9347  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  9348  0021CA  5005               	movf	___fladd@a,w,c
  9349  0021CC  5E01               	subwf	___fladd@b,f,c
  9350  0021CE  5006               	movf	___fladd@a+1,w,c
  9351  0021D0  5A02               	subwfb	___fladd@b+1,f,c
  9352  0021D2  5007               	movf	___fladd@a+2,w,c
  9353  0021D4  5A03               	subwfb	___fladd@b+2,f,c
  9354  0021D6  5008               	movf	___fladd@a+3,w,c
  9355  0021D8  5A04               	subwfb	___fladd@b+3,f,c
  9356  0021DA                     l1121:
  9357  0021DA  FFFF               	dw	65535	; assembler added errata NOP
  9358  0021DC  5001               	movf	___fladd@b,w,c
  9359  0021DE  1002               	iorwf	___fladd@b+1,w,c
  9360  0021E0  1003               	iorwf	___fladd@b+2,w,c
  9361  0021E2  1004               	iorwf	___fladd@b+3,w,c
  9362  0021E4  A4D8               	btfss	status,2,c
  9363  0021E6  D020               	goto	l4468
  9364  0021E8  5010               	movf	___fladd@grs,w,c
  9365  0021EA  A4D8               	btfss	status,2,c
  9366  0021EC  D01D               	goto	l4468
  9367  0021EE                     u4620:
  9368  0021EE  FFFF               	dw	65535	; assembler added errata NOP
  9369  0021F0  0E00               	movlw	0
  9370  0021F2  6E01               	movwf	?___fladd,c
  9371  0021F4  0E00               	movlw	0
  9372  0021F6  6E02               	movwf	?___fladd+1,c
  9373  0021F8  0E00               	movlw	0
  9374  0021FA  6E03               	movwf	?___fladd+2,c
  9375  0021FC  0E00               	movlw	0
  9376  0021FE  6E04               	movwf	?___fladd+3,c
  9377  002200  D076               	goto	l1113
  9378  002202                     l4452:
  9379  002202  FFFF               	dw	65535	; assembler added errata NOP
  9380  002204  90D8               	bcf	status,0,c
  9381  002206  3601               	rlcf	___fladd@b,f,c
  9382  002208  3602               	rlcf	___fladd@b+1,f,c
  9383  00220A  3603               	rlcf	___fladd@b+2,f,c
  9384  00220C  3604               	rlcf	___fladd@b+3,f,c
  9385  00220E  BE10               	btfsc	___fladd@grs,7,c
  9386  002210  8001               	bsf	___fladd@b,0,c
  9387  002212  A010               	btfss	___fladd@grs,0,c
  9388  002214  D002               	goto	l4462
  9389  002216  80D8               	bsf	status,0,c
  9390  002218  D002               	goto	L24
  9391  00221A                     l4462:
  9392  00221A  FFFF               	dw	65535	; assembler added errata NOP
  9393  00221C  90D8               	bcf	status,0,c
  9394  00221E                     L24:
  9395  00221E  FFFF               	dw	65535	; assembler added errata NOP
  9396  002220  3610               	rlcf	___fladd@grs,f,c
  9397  002222  500F               	movf	___fladd@bexp,w,c
  9398  002224  A4D8               	btfss	status,2,c
  9399  002226  060F               	decf	___fladd@bexp,f,c
  9400  002228                     l4468:
  9401  002228  FFFF               	dw	65535	; assembler added errata NOP
  9402  00222A  AE03               	btfss	___fladd@b+2,7,c
  9403  00222C  D7EA               	goto	l4452
  9404  00222E                     u4660:
  9405  00222E  FFFF               	dw	65535	; assembler added errata NOP
  9406  002230  0E00               	movlw	0
  9407  002232  6E0E               	movwf	___fladd@aexp,c
  9408  002234  AE10               	btfss	___fladd@grs,7,c
  9409  002236  D00D               	goto	l1130
  9410  002238  C010  F009         	movff	___fladd@grs,??___fladd
  9411  00223C  0E7F               	movlw	127
  9412  00223E  1609               	andwf	??___fladd,f,c
  9413  002240  B4D8               	btfsc	status,2,c
  9414  002242  D004               	goto	l1131
  9415  002244                     u4680:
  9416  002244  FFFF               	dw	65535	; assembler added errata NOP
  9417  002246  0E01               	movlw	1
  9418  002248  6E0E               	movwf	___fladd@aexp,c
  9419  00224A  D003               	goto	l1130
  9420  00224C                     l1131:
  9421  00224C  FFFF               	dw	65535	; assembler added errata NOP
  9422  00224E  B001               	btfsc	___fladd@b,0,c
  9423  002250  D7F9               	goto	u4680
  9424  002252                     l1130:
  9425  002252  FFFF               	dw	65535	; assembler added errata NOP
  9426  002254  500E               	movf	___fladd@aexp,w,c
  9427  002256  B4D8               	btfsc	status,2,c
  9428  002258  D020               	goto	l4488
  9429  00225A  0E01               	movlw	1
  9430  00225C  2601               	addwf	___fladd@b,f,c
  9431  00225E  0E00               	movlw	0
  9432  002260  2202               	addwfc	___fladd@b+1,f,c
  9433  002262  2203               	addwfc	___fladd@b+2,f,c
  9434  002264  2204               	addwfc	___fladd@b+3,f,c
  9435  002266  A004               	btfss	___fladd@b+3,0,c
  9436  002268  D018               	goto	l4488
  9437  00226A  C001  F009         	movff	___fladd@b,??___fladd
  9438  00226E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9439  002272  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9440  002276  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9441  00227A  340C               	rlcf	??___fladd+3,w,c
  9442  00227C  320C               	rrcf	??___fladd+3,f,c
  9443  00227E  320B               	rrcf	??___fladd+2,f,c
  9444  002280  320A               	rrcf	??___fladd+1,f,c
  9445  002282  3209               	rrcf	??___fladd,f,c
  9446  002284  C009  F001         	movff	??___fladd,___fladd@b
  9447  002288  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9448  00228C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9449  002290  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9450  002294  280F               	incf	___fladd@bexp,w,c
  9451  002296  A4D8               	btfss	status,2,c
  9452  002298  2A0F               	incf	___fladd@bexp,f,c
  9453  00229A                     l4488:
  9454  00229A  FFFF               	dw	65535	; assembler added errata NOP
  9455  00229C  280F               	incf	___fladd@bexp,w,c
  9456  00229E  B4D8               	btfsc	status,2,c
  9457  0022A0  D003               	goto	u4740
  9458  0022A2  500F               	movf	___fladd@bexp,w,c
  9459  0022A4  A4D8               	btfss	status,2,c
  9460  0022A6  D00E               	goto	l4496
  9461  0022A8                     u4740:
  9462  0022A8  FFFF               	dw	65535	; assembler added errata NOP
  9463  0022AA  0E00               	movlw	0
  9464  0022AC  6E01               	movwf	___fladd@b,c
  9465  0022AE  0E00               	movlw	0
  9466  0022B0  6E02               	movwf	___fladd@b+1,c
  9467  0022B2  0E00               	movlw	0
  9468  0022B4  6E03               	movwf	___fladd@b+2,c
  9469  0022B6  0E00               	movlw	0
  9470  0022B8  6E04               	movwf	___fladd@b+3,c
  9471  0022BA  500F               	movf	___fladd@bexp,w,c
  9472  0022BC  A4D8               	btfss	status,2,c
  9473  0022BE  D002               	goto	l4496
  9474  0022C0  0E00               	movlw	0
  9475  0022C2  6E0D               	movwf	___fladd@signs,c
  9476  0022C4                     l4496:
  9477  0022C4  FFFF               	dw	65535	; assembler added errata NOP
  9478  0022C6  A00F               	btfss	___fladd@bexp,0,c
  9479  0022C8  D002               	goto	l4500
  9480  0022CA  8E03               	bsf	___fladd@b+2,7,c
  9481  0022CC  D002               	goto	l4502
  9482  0022CE                     l4500:
  9483  0022CE  FFFF               	dw	65535	; assembler added errata NOP
  9484  0022D0  9E03               	bcf	___fladd@b+2,7,c
  9485  0022D2                     l4502:
  9486  0022D2  FFFF               	dw	65535	; assembler added errata NOP
  9487  0022D4  90D8               	bcf	status,0,c
  9488  0022D6  300F               	rrcf	___fladd@bexp,w,c
  9489  0022D8  6E04               	movwf	___fladd@b+3,c
  9490  0022DA  BE0D               	btfsc	___fladd@signs,7,c
  9491  0022DC  8E04               	bsf	___fladd@b+3,7,c
  9492  0022DE  C001  F001         	movff	___fladd@b,?___fladd
  9493  0022E2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9494  0022E6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9495  0022EA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9496  0022EE                     l1113:
  9497  0022EE  FFFF               	dw	65535	; assembler added errata NOP
  9498  0022F0  0012               	return		;funcret
  9499  0022F2  FFFF               	dw	65535	; errata NOP
  9500  0022F4                     __end_of___fladd:
  9501                           	opt callstack 0
  9502                           
  9503 ;; *************** function ___flmul *****************
  9504 ;; Defined at:
  9505 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  b               4   14[COMRAM] unsigned char 
  9508 ;;  a               4   18[COMRAM] unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  prod            4   33[COMRAM] struct .
  9511 ;;  grs             4   27[COMRAM] unsigned long 
  9512 ;;  temp            2   37[COMRAM] struct .
  9513 ;;  bexp            1   32[COMRAM] unsigned char 
  9514 ;;  aexp            1   31[COMRAM] unsigned char 
  9515 ;;  sign            1   26[COMRAM] unsigned char 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  4   14[COMRAM] unsigned char 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0, prodl, prodh
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9525 ;;      Params:         8       0       0       0       0       0       0
  9526 ;;      Locals:        13       0       0       0       0       0       0
  9527 ;;      Temps:          4       0       0       0       0       0       0
  9528 ;;      Totals:        25       0       0       0       0       0       0
  9529 ;;Total ram usage:       25 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    2
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_get_temp
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text43
  9540  001C2E                     __ptext43:
  9541                           	opt callstack 0
  9542  001C2E                     ___flmul:
  9543                           	opt callstack 0
  9544  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  9545                           
  9546                           ;incstack = 0
  9547  001C30  5012               	movf	___flmul@b+3,w,c
  9548  001C32  0B80               	andlw	128
  9549  001C34  6E1B               	movwf	___flmul@sign,c
  9550  001C36  5012               	movf	___flmul@b+3,w,c
  9551  001C38  2412               	addwf	___flmul@b+3,w,c
  9552  001C3A  6E21               	movwf	___flmul@bexp,c
  9553  001C3C  BE11               	btfsc	___flmul@b+2,7,c
  9554  001C3E  8021               	bsf	___flmul@bexp,0,c
  9555  001C40  5021               	movf	___flmul@bexp,w,c
  9556  001C42  B4D8               	btfsc	status,2,c
  9557  001C44  D00E               	goto	l4602
  9558  001C46  2821               	incf	___flmul@bexp,w,c
  9559  001C48  A4D8               	btfss	status,2,c
  9560  001C4A  D008               	goto	l4600
  9561  001C4C  0E00               	movlw	0
  9562  001C4E  6E0F               	movwf	___flmul@b,c
  9563  001C50  0E00               	movlw	0
  9564  001C52  6E10               	movwf	___flmul@b+1,c
  9565  001C54  0E00               	movlw	0
  9566  001C56  6E11               	movwf	___flmul@b+2,c
  9567  001C58  0E00               	movlw	0
  9568  001C5A  6E12               	movwf	___flmul@b+3,c
  9569  001C5C                     l4600:
  9570  001C5C  FFFF               	dw	65535	; assembler added errata NOP
  9571  001C5E  8E11               	bsf	___flmul@b+2,7,c
  9572  001C60  D009               	goto	l4604
  9573  001C62                     l4602:
  9574  001C62  FFFF               	dw	65535	; assembler added errata NOP
  9575  001C64  0E00               	movlw	0
  9576  001C66  6E0F               	movwf	___flmul@b,c
  9577  001C68  0E00               	movlw	0
  9578  001C6A  6E10               	movwf	___flmul@b+1,c
  9579  001C6C  0E00               	movlw	0
  9580  001C6E  6E11               	movwf	___flmul@b+2,c
  9581  001C70  0E00               	movlw	0
  9582  001C72  6E12               	movwf	___flmul@b+3,c
  9583  001C74                     l4604:
  9584  001C74  FFFF               	dw	65535	; assembler added errata NOP
  9585  001C76  5016               	movf	___flmul@a+3,w,c
  9586  001C78  0B80               	andlw	128
  9587  001C7A  1A1B               	xorwf	___flmul@sign,f,c
  9588  001C7C  5016               	movf	___flmul@a+3,w,c
  9589  001C7E  2416               	addwf	___flmul@a+3,w,c
  9590  001C80  6E20               	movwf	___flmul@aexp,c
  9591  001C82  BE15               	btfsc	___flmul@a+2,7,c
  9592  001C84  8020               	bsf	___flmul@aexp,0,c
  9593  001C86  5020               	movf	___flmul@aexp,w,c
  9594  001C88  B4D8               	btfsc	status,2,c
  9595  001C8A  D00E               	goto	l4620
  9596  001C8C  2820               	incf	___flmul@aexp,w,c
  9597  001C8E  A4D8               	btfss	status,2,c
  9598  001C90  D008               	goto	l4618
  9599  001C92  0E00               	movlw	0
  9600  001C94  6E13               	movwf	___flmul@a,c
  9601  001C96  0E00               	movlw	0
  9602  001C98  6E14               	movwf	___flmul@a+1,c
  9603  001C9A  0E00               	movlw	0
  9604  001C9C  6E15               	movwf	___flmul@a+2,c
  9605  001C9E  0E00               	movlw	0
  9606  001CA0  6E16               	movwf	___flmul@a+3,c
  9607  001CA2                     l4618:
  9608  001CA2  FFFF               	dw	65535	; assembler added errata NOP
  9609  001CA4  8E15               	bsf	___flmul@a+2,7,c
  9610  001CA6  D009               	goto	l1190
  9611  001CA8                     l4620:
  9612  001CA8  FFFF               	dw	65535	; assembler added errata NOP
  9613  001CAA  0E00               	movlw	0
  9614  001CAC  6E13               	movwf	___flmul@a,c
  9615  001CAE  0E00               	movlw	0
  9616  001CB0  6E14               	movwf	___flmul@a+1,c
  9617  001CB2  0E00               	movlw	0
  9618  001CB4  6E15               	movwf	___flmul@a+2,c
  9619  001CB6  0E00               	movlw	0
  9620  001CB8  6E16               	movwf	___flmul@a+3,c
  9621  001CBA                     l1190:
  9622  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  9623  001CBC  5020               	movf	___flmul@aexp,w,c
  9624  001CBE  B4D8               	btfsc	status,2,c
  9625  001CC0  D003               	goto	u4940
  9626  001CC2  5021               	movf	___flmul@bexp,w,c
  9627  001CC4  A4D8               	btfss	status,2,c
  9628  001CC6  D00A               	goto	l4628
  9629  001CC8                     u4940:
  9630  001CC8  FFFF               	dw	65535	; assembler added errata NOP
  9631  001CCA  0E00               	movlw	0
  9632  001CCC  6E0F               	movwf	?___flmul,c
  9633  001CCE  0E00               	movlw	0
  9634  001CD0  6E10               	movwf	?___flmul+1,c
  9635  001CD2  0E00               	movlw	0
  9636  001CD4  6E11               	movwf	?___flmul+2,c
  9637  001CD6  0E00               	movlw	0
  9638  001CD8  6E12               	movwf	?___flmul+3,c
  9639  001CDA  D167               	goto	l1194
  9640  001CDC                     l4628:
  9641  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  9642  001CDE  5015               	movf	___flmul@a+2,w,c
  9643  001CE0  020F               	mulwf	___flmul@b,c
  9644  001CE2  CFF3 F026          	movff	prodl,___flmul@temp
  9645  001CE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  9646  001CEA  5026               	movf	___flmul@temp,w,c
  9647  001CEC  6E1C               	movwf	___flmul@grs,c
  9648  001CEE  6A1D               	clrf	___flmul@grs+1,c
  9649  001CF0  6A1E               	clrf	___flmul@grs+2,c
  9650  001CF2  6A1F               	clrf	___flmul@grs+3,c
  9651  001CF4  5027               	movf	___flmul@temp+1,w,c
  9652  001CF6  6E22               	movwf	___flmul@prod,c
  9653  001CF8  6A23               	clrf	___flmul@prod+1,c
  9654  001CFA  6A24               	clrf	___flmul@prod+2,c
  9655  001CFC  6A25               	clrf	___flmul@prod+3,c
  9656  001CFE  5014               	movf	___flmul@a+1,w,c
  9657  001D00  0210               	mulwf	___flmul@b+1,c
  9658  001D02  CFF3 F026          	movff	prodl,___flmul@temp
  9659  001D06  CFF4 F027          	movff	prodh,___flmul@temp+1
  9660  001D0A  5026               	movf	___flmul@temp,w,c
  9661  001D0C  261C               	addwf	___flmul@grs,f,c
  9662  001D0E  0E00               	movlw	0
  9663  001D10  221D               	addwfc	___flmul@grs+1,f,c
  9664  001D12  221E               	addwfc	___flmul@grs+2,f,c
  9665  001D14  221F               	addwfc	___flmul@grs+3,f,c
  9666  001D16  5027               	movf	___flmul@temp+1,w,c
  9667  001D18  2622               	addwf	___flmul@prod,f,c
  9668  001D1A  0E00               	movlw	0
  9669  001D1C  2223               	addwfc	___flmul@prod+1,f,c
  9670  001D1E  2224               	addwfc	___flmul@prod+2,f,c
  9671  001D20  2225               	addwfc	___flmul@prod+3,f,c
  9672  001D22  5013               	movf	___flmul@a,w,c
  9673  001D24  0211               	mulwf	___flmul@b+2,c
  9674  001D26  CFF3 F026          	movff	prodl,___flmul@temp
  9675  001D2A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9676  001D2E  5026               	movf	___flmul@temp,w,c
  9677  001D30  261C               	addwf	___flmul@grs,f,c
  9678  001D32  0E00               	movlw	0
  9679  001D34  221D               	addwfc	___flmul@grs+1,f,c
  9680  001D36  221E               	addwfc	___flmul@grs+2,f,c
  9681  001D38  221F               	addwfc	___flmul@grs+3,f,c
  9682  001D3A  5027               	movf	___flmul@temp+1,w,c
  9683  001D3C  2622               	addwf	___flmul@prod,f,c
  9684  001D3E  0E00               	movlw	0
  9685  001D40  2223               	addwfc	___flmul@prod+1,f,c
  9686  001D42  2224               	addwfc	___flmul@prod+2,f,c
  9687  001D44  2225               	addwfc	___flmul@prod+3,f,c
  9688  001D46  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9689  001D4A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9690  001D4E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9691  001D52  6A1C               	clrf	___flmul@grs,c
  9692  001D54  5013               	movf	___flmul@a,w,c
  9693  001D56  0210               	mulwf	___flmul@b+1,c
  9694  001D58  CFF3 F026          	movff	prodl,___flmul@temp
  9695  001D5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9696  001D60  5026               	movf	___flmul@temp,w,c
  9697  001D62  261C               	addwf	___flmul@grs,f,c
  9698  001D64  5027               	movf	___flmul@temp+1,w,c
  9699  001D66  221D               	addwfc	___flmul@grs+1,f,c
  9700  001D68  0E00               	movlw	0
  9701  001D6A  221E               	addwfc	___flmul@grs+2,f,c
  9702  001D6C  0E00               	movlw	0
  9703  001D6E  221F               	addwfc	___flmul@grs+3,f,c
  9704  001D70  5014               	movf	___flmul@a+1,w,c
  9705  001D72  020F               	mulwf	___flmul@b,c
  9706  001D74  CFF3 F026          	movff	prodl,___flmul@temp
  9707  001D78  CFF4 F027          	movff	prodh,___flmul@temp+1
  9708  001D7C  5026               	movf	___flmul@temp,w,c
  9709  001D7E  261C               	addwf	___flmul@grs,f,c
  9710  001D80  5027               	movf	___flmul@temp+1,w,c
  9711  001D82  221D               	addwfc	___flmul@grs+1,f,c
  9712  001D84  0E00               	movlw	0
  9713  001D86  221E               	addwfc	___flmul@grs+2,f,c
  9714  001D88  0E00               	movlw	0
  9715  001D8A  221F               	addwfc	___flmul@grs+3,f,c
  9716  001D8C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9717  001D90  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9718  001D94  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9719  001D98  6A1C               	clrf	___flmul@grs,c
  9720  001D9A  5013               	movf	___flmul@a,w,c
  9721  001D9C  020F               	mulwf	___flmul@b,c
  9722  001D9E  CFF3 F026          	movff	prodl,___flmul@temp
  9723  001DA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  9724  001DA6  5026               	movf	___flmul@temp,w,c
  9725  001DA8  261C               	addwf	___flmul@grs,f,c
  9726  001DAA  5027               	movf	___flmul@temp+1,w,c
  9727  001DAC  221D               	addwfc	___flmul@grs+1,f,c
  9728  001DAE  0E00               	movlw	0
  9729  001DB0  221E               	addwfc	___flmul@grs+2,f,c
  9730  001DB2  0E00               	movlw	0
  9731  001DB4  221F               	addwfc	___flmul@grs+3,f,c
  9732  001DB6  5015               	movf	___flmul@a+2,w,c
  9733  001DB8  0210               	mulwf	___flmul@b+1,c
  9734  001DBA  CFF3 F026          	movff	prodl,___flmul@temp
  9735  001DBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  9736  001DC2  5026               	movf	___flmul@temp,w,c
  9737  001DC4  2622               	addwf	___flmul@prod,f,c
  9738  001DC6  5027               	movf	___flmul@temp+1,w,c
  9739  001DC8  2223               	addwfc	___flmul@prod+1,f,c
  9740  001DCA  0E00               	movlw	0
  9741  001DCC  2224               	addwfc	___flmul@prod+2,f,c
  9742  001DCE  0E00               	movlw	0
  9743  001DD0  2225               	addwfc	___flmul@prod+3,f,c
  9744  001DD2  5014               	movf	___flmul@a+1,w,c
  9745  001DD4  0211               	mulwf	___flmul@b+2,c
  9746  001DD6  CFF3 F026          	movff	prodl,___flmul@temp
  9747  001DDA  CFF4 F027          	movff	prodh,___flmul@temp+1
  9748  001DDE  5026               	movf	___flmul@temp,w,c
  9749  001DE0  2622               	addwf	___flmul@prod,f,c
  9750  001DE2  5027               	movf	___flmul@temp+1,w,c
  9751  001DE4  2223               	addwfc	___flmul@prod+1,f,c
  9752  001DE6  0E00               	movlw	0
  9753  001DE8  2224               	addwfc	___flmul@prod+2,f,c
  9754  001DEA  0E00               	movlw	0
  9755  001DEC  2225               	addwfc	___flmul@prod+3,f,c
  9756  001DEE  5015               	movf	___flmul@a+2,w,c
  9757  001DF0  0211               	mulwf	___flmul@b+2,c
  9758  001DF2  CFF3 F026          	movff	prodl,___flmul@temp
  9759  001DF6  CFF4 F027          	movff	prodh,___flmul@temp+1
  9760  001DFA  5026               	movf	___flmul@temp,w,c
  9761  001DFC  6E17               	movwf	??___flmul& (0+255),c
  9762  001DFE  5027               	movf	___flmul@temp+1,w,c
  9763  001E00  6E18               	movwf	(??___flmul+1)& (0+255),c
  9764  001E02  6A19               	clrf	(??___flmul+2)& (0+255),c
  9765  001E04  6A1A               	clrf	(??___flmul+3)& (0+255),c
  9766  001E06  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9767  001E0A  C018  F019         	movff	??___flmul+1,??___flmul+2
  9768  001E0E  C017  F018         	movff	??___flmul,??___flmul+1
  9769  001E12  6A17               	clrf	??___flmul,c
  9770  001E14  5017               	movf	??___flmul,w,c
  9771  001E16  2622               	addwf	___flmul@prod,f,c
  9772  001E18  5018               	movf	??___flmul+1,w,c
  9773  001E1A  2223               	addwfc	___flmul@prod+1,f,c
  9774  001E1C  5019               	movf	??___flmul+2,w,c
  9775  001E1E  2224               	addwfc	___flmul@prod+2,f,c
  9776  001E20  501A               	movf	??___flmul+3,w,c
  9777  001E22  2225               	addwfc	___flmul@prod+3,f,c
  9778  001E24  C01C  F017         	movff	___flmul@grs,??___flmul
  9779  001E28  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9780  001E2C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9781  001E30  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9782  001E34  0E19               	movlw	25
  9783  001E36  D006               	goto	u4950
  9784  001E38                     u4955:
  9785  001E38  FFFF               	dw	65535	; assembler added errata NOP
  9786  001E3A  90D8               	bcf	status,0,c
  9787  001E3C  321A               	rrcf	??___flmul+3,f,c
  9788  001E3E  3219               	rrcf	??___flmul+2,f,c
  9789  001E40  3218               	rrcf	??___flmul+1,f,c
  9790  001E42  3217               	rrcf	??___flmul,f,c
  9791  001E44                     u4950:
  9792  001E44  FFFF               	dw	65535	; assembler added errata NOP
  9793  001E46  2EE8               	decfsz	wreg,f,c
  9794  001E48  D7F7               	goto	u4955
  9795  001E4A  5017               	movf	??___flmul,w,c
  9796  001E4C  2622               	addwf	___flmul@prod,f,c
  9797  001E4E  5018               	movf	??___flmul+1,w,c
  9798  001E50  2223               	addwfc	___flmul@prod+1,f,c
  9799  001E52  5019               	movf	??___flmul+2,w,c
  9800  001E54  2224               	addwfc	___flmul@prod+2,f,c
  9801  001E56  501A               	movf	??___flmul+3,w,c
  9802  001E58  2225               	addwfc	___flmul@prod+3,f,c
  9803  001E5A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9804  001E5E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9805  001E62  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9806  001E66  6A1C               	clrf	___flmul@grs,c
  9807  001E68  5020               	movf	___flmul@aexp,w,c
  9808  001E6A  C021  F017         	movff	___flmul@bexp,??___flmul
  9809  001E6E  6A18               	clrf	(??___flmul+1)& (0+255),c
  9810  001E70  2617               	addwf	??___flmul,f,c
  9811  001E72  0E00               	movlw	0
  9812  001E74  2218               	addwfc	??___flmul+1,f,c
  9813  001E76  0E82               	movlw	130
  9814  001E78  2417               	addwf	??___flmul,w,c
  9815  001E7A  6E26               	movwf	___flmul@temp,c
  9816  001E7C  0EFF               	movlw	255
  9817  001E7E  2018               	addwfc	??___flmul+1,w,c
  9818  001E80  6E27               	movwf	___flmul@temp+1,c
  9819  001E82  D010               	goto	l4676
  9820  001E84                     l4670:
  9821  001E84  FFFF               	dw	65535	; assembler added errata NOP
  9822  001E86  90D8               	bcf	status,0,c
  9823  001E88  3622               	rlcf	___flmul@prod,f,c
  9824  001E8A  3623               	rlcf	___flmul@prod+1,f,c
  9825  001E8C  3624               	rlcf	___flmul@prod+2,f,c
  9826  001E8E  3625               	rlcf	___flmul@prod+3,f,c
  9827  001E90  BE1F               	btfsc	___flmul@grs+3,7,c
  9828  001E92  8022               	bsf	___flmul@prod,0,c
  9829  001E94  90D8               	bcf	status,0,c
  9830  001E96  361C               	rlcf	___flmul@grs,f,c
  9831  001E98  361D               	rlcf	___flmul@grs+1,f,c
  9832  001E9A  361E               	rlcf	___flmul@grs+2,f,c
  9833  001E9C  361F               	rlcf	___flmul@grs+3,f,c
  9834  001E9E  0626               	decf	___flmul@temp,f,c
  9835  001EA0  A0D8               	btfss	status,0,c
  9836  001EA2  0627               	decf	___flmul@temp+1,f,c
  9837  001EA4                     l4676:
  9838  001EA4  FFFF               	dw	65535	; assembler added errata NOP
  9839  001EA6  AE24               	btfss	___flmul@prod+2,7,c
  9840  001EA8  D7ED               	goto	l4670
  9841  001EAA  0E00               	movlw	0
  9842  001EAC  6E20               	movwf	___flmul@aexp,c
  9843  001EAE  AE1F               	btfss	___flmul@grs+3,7,c
  9844  001EB0  D019               	goto	l1199
  9845  001EB2  0EFF               	movlw	255
  9846  001EB4  141C               	andwf	___flmul@grs,w,c
  9847  001EB6  6E17               	movwf	??___flmul& (0+255),c
  9848  001EB8  0EFF               	movlw	255
  9849  001EBA  141D               	andwf	___flmul@grs+1,w,c
  9850  001EBC  6E18               	movwf	(??___flmul+1)& (0+255),c
  9851  001EBE  0EFF               	movlw	255
  9852  001EC0  141E               	andwf	___flmul@grs+2,w,c
  9853  001EC2  6E19               	movwf	(??___flmul+2)& (0+255),c
  9854  001EC4  0E7F               	movlw	127
  9855  001EC6  141F               	andwf	___flmul@grs+3,w,c
  9856  001EC8  6E1A               	movwf	(??___flmul+3)& (0+255),c
  9857  001ECA  5017               	movf	??___flmul,w,c
  9858  001ECC  1018               	iorwf	??___flmul+1,w,c
  9859  001ECE  1019               	iorwf	??___flmul+2,w,c
  9860  001ED0  101A               	iorwf	??___flmul+3,w,c
  9861  001ED2  B4D8               	btfsc	status,2,c
  9862  001ED4  D004               	goto	l1200
  9863  001ED6                     u4990:
  9864  001ED6  FFFF               	dw	65535	; assembler added errata NOP
  9865  001ED8  0E01               	movlw	1
  9866  001EDA  6E20               	movwf	___flmul@aexp,c
  9867  001EDC  D003               	goto	l1199
  9868  001EDE                     l1200:
  9869  001EDE  FFFF               	dw	65535	; assembler added errata NOP
  9870  001EE0  B022               	btfsc	___flmul@prod,0,c
  9871  001EE2  D7F9               	goto	u4990
  9872  001EE4                     l1199:
  9873  001EE4  FFFF               	dw	65535	; assembler added errata NOP
  9874  001EE6  5020               	movf	___flmul@aexp,w,c
  9875  001EE8  B4D8               	btfsc	status,2,c
  9876  001EEA  D01F               	goto	l4696
  9877  001EEC  0E01               	movlw	1
  9878  001EEE  2622               	addwf	___flmul@prod,f,c
  9879  001EF0  0E00               	movlw	0
  9880  001EF2  2223               	addwfc	___flmul@prod+1,f,c
  9881  001EF4  2224               	addwfc	___flmul@prod+2,f,c
  9882  001EF6  2225               	addwfc	___flmul@prod+3,f,c
  9883  001EF8  A025               	btfss	___flmul@prod+3,0,c
  9884  001EFA  D017               	goto	l4696
  9885  001EFC  C022  F017         	movff	___flmul@prod,??___flmul
  9886  001F00  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9887  001F04  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9888  001F08  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9889  001F0C  341A               	rlcf	??___flmul+3,w,c
  9890  001F0E  321A               	rrcf	??___flmul+3,f,c
  9891  001F10  3219               	rrcf	??___flmul+2,f,c
  9892  001F12  3218               	rrcf	??___flmul+1,f,c
  9893  001F14  3217               	rrcf	??___flmul,f,c
  9894  001F16  C017  F022         	movff	??___flmul,___flmul@prod
  9895  001F1A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9896  001F1E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9897  001F22  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9898  001F26  4A26               	infsnz	___flmul@temp,f,c
  9899  001F28  2A27               	incf	___flmul@temp+1,f,c
  9900  001F2A                     l4696:
  9901  001F2A  FFFF               	dw	65535	; assembler added errata NOP
  9902  001F2C  BE27               	btfsc	___flmul@temp+1,7,c
  9903  001F2E  D00D               	goto	l4700
  9904  001F30  5027               	movf	___flmul@temp+1,w,c
  9905  001F32  E103               	bnz	u5030
  9906  001F34  2826               	incf	___flmul@temp,w,c
  9907  001F36  A0D8               	btfss	status,0,c
  9908  001F38  D008               	goto	l4700
  9909  001F3A                     u5030:
  9910  001F3A  0E00               	movlw	0
  9911  001F3C  6E22               	movwf	___flmul@prod,c
  9912  001F3E  0E00               	movlw	0
  9913  001F40  6E23               	movwf	___flmul@prod+1,c
  9914  001F42  0E80               	movlw	128
  9915  001F44  6E24               	movwf	___flmul@prod+2,c
  9916  001F46  0E7F               	movlw	127
  9917  001F48  D023               	goto	L25
  9918  001F4A                     l4700:
  9919  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  9920  001F4C  BE27               	btfsc	___flmul@temp+1,7,c
  9921  001F4E  D005               	goto	u5040
  9922  001F50  5027               	movf	___flmul@temp+1,w,c
  9923  001F52  E10F               	bnz	l1207
  9924  001F54  0426               	decf	___flmul@temp,w,c
  9925  001F56  B0D8               	btfsc	status,0,c
  9926  001F58  D00C               	goto	l1207
  9927  001F5A                     u5040:
  9928  001F5A  FFFF               	dw	65535	; assembler added errata NOP
  9929  001F5C  0E00               	movlw	0
  9930  001F5E  6E22               	movwf	___flmul@prod,c
  9931  001F60  0E00               	movlw	0
  9932  001F62  6E23               	movwf	___flmul@prod+1,c
  9933  001F64  0E00               	movlw	0
  9934  001F66  6E24               	movwf	___flmul@prod+2,c
  9935  001F68  0E00               	movlw	0
  9936  001F6A  6E25               	movwf	___flmul@prod+3,c
  9937  001F6C  0E00               	movlw	0
  9938  001F6E  6E1B               	movwf	___flmul@sign,c
  9939  001F70  D011               	goto	l4712
  9940  001F72                     l1207:
  9941  001F72  FFFF               	dw	65535	; assembler added errata NOP
  9942  001F74  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9943  001F78  0EFF               	movlw	255
  9944  001F7A  1622               	andwf	___flmul@prod,f,c
  9945  001F7C  0EFF               	movlw	255
  9946  001F7E  1623               	andwf	___flmul@prod+1,f,c
  9947  001F80  0E7F               	movlw	127
  9948  001F82  1624               	andwf	___flmul@prod+2,f,c
  9949  001F84  0E00               	movlw	0
  9950  001F86  1625               	andwf	___flmul@prod+3,f,c
  9951  001F88  B021               	btfsc	___flmul@bexp,0,c
  9952  001F8A  8E24               	bsf	___flmul@prod+2,7,c
  9953  001F8C  90D8               	bcf	status,0,c
  9954  001F8E  3021               	rrcf	___flmul@bexp,w,c
  9955  001F90                     L25:
  9956  001F90  FFFF               	dw	65535	; assembler added errata NOP
  9957  001F92  6E25               	movwf	___flmul@prod+3,c
  9958  001F94                     l4712:
  9959  001F94  FFFF               	dw	65535	; assembler added errata NOP
  9960  001F96  501B               	movf	___flmul@sign,w,c
  9961  001F98  1225               	iorwf	___flmul@prod+3,f,c
  9962  001F9A  C022  F00F         	movff	___flmul@prod,?___flmul
  9963  001F9E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9964  001FA2  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9965  001FA6  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9966  001FAA                     l1194:
  9967  001FAA  FFFF               	dw	65535	; assembler added errata NOP
  9968  001FAC  0012               	return		;funcret
  9969  001FAE  FFFF               	dw	65535	; errata NOP
  9970  001FB0                     __end_of___flmul:
  9971                           	opt callstack 0
  9972                           
  9973 ;; *************** function _ADC_Read *****************
  9974 ;; Defined at:
  9975 ;;		line 28 in file "adc.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  channel         1    wreg     unsigned char 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  channel         1    4[COMRAM] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[COMRAM] unsigned int 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9989 ;;      Params:         2       0       0       0       0       0       0
  9990 ;;      Locals:         1       0       0       0       0       0       0
  9991 ;;      Temps:          2       0       0       0       0       0       0
  9992 ;;      Totals:         5       0       0       0       0       0       0
  9993 ;;Total ram usage:        5 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    2
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_get_temp
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text44
 10004  0039FE                     __ptext44:
 10005                           	opt callstack 0
 10006  0039FE                     _ADC_Read:
 10007                           	opt callstack 0
 10008  0039FE  FFFF               	dw	65535	; assembler added errata NOP
 10009                           
 10010                           ;incstack = 0
 10011                           ;ADC_Read@channel stored from wreg
 10012  003A00  6E05               	movwf	ADC_Read@channel,c
 10013                           
 10014                           ;adc.c: 29:  if(channel > 7)
 10015  003A02  0E07               	movlw	7
 10016  003A04  6405               	cpfsgt	ADC_Read@channel,c
 10017  003A06  D005               	goto	l4578
 10018                           
 10019                           ;adc.c: 30:  return 0;
 10020  003A08  0E00               	movlw	0
 10021  003A0A  6E02               	movwf	?_ADC_Read+1,c
 10022  003A0C  0E00               	movlw	0
 10023  003A0E  6E01               	movwf	?_ADC_Read,c
 10024  003A10  D01D               	goto	l299
 10025  003A12                     l4578:
 10026  003A12  FFFF               	dw	65535	; assembler added errata NOP
 10027                           
 10028                           ;adc.c: 31:  ADCON0 &= 0xC5;
 10029  003A14  0EC5               	movlw	197
 10030  003A16  16C2               	andwf	4034,f,c	;volatile
 10031                           
 10032                           ;adc.c: 32:  ADCON0 |= channel<<3;
 10033  003A18  3805               	swapf	ADC_Read@channel,w,c	;volatile
 10034  003A1A  42E8               	rrncf	wreg,f,c
 10035  003A1C  0BF8               	andlw	248
 10036  003A1E  12C2               	iorwf	4034,f,c	;volatile
 10037                           
 10038                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
 10039  003A20  0E08               	movlw	8
 10040  003A22  6E03               	movwf	??_ADC_Read& (0+255),c
 10041  003A24  0ECB               	movlw	203
 10042  003A26                     u5467:
 10043  003A26  FFFF               	dw	65535	; errata NOP
 10044  003A28  2EE8               	decfsz	wreg,f,c
 10045  003A2A  D7FD               	bra	u5467
 10046  003A2C  2E03               	decfsz	??_ADC_Read& (0+255),f,c
 10047  003A2E  D7FB               	bra	u5467
 10048  003A30  D000               	nop2	
 10049                           
 10050                           ;adc.c: 34:  GO_nDONE = 1;
 10051  003A32  84C2               	bsf	4034,2,c	;volatile
 10052  003A34                     l300:
 10053  003A34  FFFF               	dw	65535	; assembler added errata NOP
 10054  003A36  B4C2               	btfsc	4034,2,c	;volatile
 10055  003A38  D7FD               	goto	l300
 10056                           
 10057                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
 10058  003A3A  50C4               	movf	4036,w,c	;volatile
 10059  003A3C  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
 10060  003A3E  6A03               	clrf	??_ADC_Read& (0+255),c
 10061  003A40  50C3               	movf	4035,w,c	;volatile
 10062  003A42  2403               	addwf	??_ADC_Read,w,c
 10063  003A44  6E01               	movwf	?_ADC_Read,c
 10064  003A46  0E00               	movlw	0
 10065  003A48  2004               	addwfc	??_ADC_Read+1,w,c
 10066  003A4A  6E02               	movwf	?_ADC_Read+1,c
 10067  003A4C                     l299:
 10068  003A4C  FFFF               	dw	65535	; assembler added errata NOP
 10069  003A4E  0012               	return		;funcret
 10070  003A50  FFFF               	dw	65535	; errata NOP
 10071  003A52                     __end_of_ADC_Read:
 10072                           	opt callstack 0
 10073                           
 10074 ;; *************** function _ADC_Init *****************
 10075 ;; Defined at:
 10076 ;;		line 23 in file "adc.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10090 ;;      Params:         0       0       0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0
 10093 ;;      Totals:         0       0       0       0       0       0       0
 10094 ;;Total ram usage:        0 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    2
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_get_temp
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text45
 10105  003E54                     __ptext45:
 10106                           	opt callstack 0
 10107  003E54                     _ADC_Init:
 10108                           	opt callstack 0
 10109  003E54  FFFF               	dw	65535	; assembler added errata NOP
 10110                           
 10111                           ;adc.c: 24:  ADCON0 = 0x81;
 10112                           
 10113                           ;incstack = 0
 10114  003E56  0E81               	movlw	129
 10115  003E58  6EC2               	movwf	4034,c	;volatile
 10116                           
 10117                           ;adc.c: 25:  ADCON1 = 0x80;
 10118  003E5A  0E80               	movlw	128
 10119  003E5C  6EC1               	movwf	4033,c	;volatile
 10120  003E5E  0012               	return		;funcret
 10121  003E60  FFFF               	dw	65535	; errata NOP
 10122  003E62                     __end_of_ADC_Init:
 10123                           	opt callstack 0
 10124                           
 10125 ;; *************** function ___lldiv *****************
 10126 ;; Defined at:
 10127 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  dividend        4    0[COMRAM] unsigned long 
 10130 ;;  divisor         4    4[COMRAM] unsigned long 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  quotient        4    8[COMRAM] unsigned long 
 10133 ;;  counter         1   12[COMRAM] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  4    0[COMRAM] unsigned long 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10143 ;;      Params:         8       0       0       0       0       0       0
 10144 ;;      Locals:         5       0       0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0
 10146 ;;      Totals:        13       0       0       0       0       0       0
 10147 ;;Total ram usage:       13 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    2
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text46
 10158  0036FA                     __ptext46:
 10159                           	opt callstack 0
 10160  0036FA                     ___lldiv:
 10161                           	opt callstack 0
 10162  0036FA  FFFF               	dw	65535	; assembler added errata NOP
 10163                           
 10164                           ;incstack = 0
 10165  0036FC  0E00               	movlw	0
 10166  0036FE  6E09               	movwf	___lldiv@quotient,c
 10167  003700  0E00               	movlw	0
 10168  003702  6E0A               	movwf	___lldiv@quotient+1,c
 10169  003704  0E00               	movlw	0
 10170  003706  6E0B               	movwf	___lldiv@quotient+2,c
 10171  003708  0E00               	movlw	0
 10172  00370A  6E0C               	movwf	___lldiv@quotient+3,c
 10173  00370C  5005               	movf	___lldiv@divisor,w,c
 10174  00370E  1006               	iorwf	___lldiv@divisor+1,w,c
 10175  003710  1007               	iorwf	___lldiv@divisor+2,w,c
 10176  003712  1008               	iorwf	___lldiv@divisor+3,w,c
 10177  003714  B4D8               	btfsc	status,2,c
 10178  003716  D02E               	goto	l603
 10179  003718  0E01               	movlw	1
 10180  00371A  6E0D               	movwf	___lldiv@counter,c
 10181  00371C  D007               	goto	l4952
 10182  00371E                     l4950:
 10183  00371E  FFFF               	dw	65535	; assembler added errata NOP
 10184  003720  90D8               	bcf	status,0,c
 10185  003722  3605               	rlcf	___lldiv@divisor,f,c
 10186  003724  3606               	rlcf	___lldiv@divisor+1,f,c
 10187  003726  3607               	rlcf	___lldiv@divisor+2,f,c
 10188  003728  3608               	rlcf	___lldiv@divisor+3,f,c
 10189  00372A  2A0D               	incf	___lldiv@counter,f,c
 10190  00372C                     l4952:
 10191  00372C  FFFF               	dw	65535	; assembler added errata NOP
 10192  00372E  AE08               	btfss	___lldiv@divisor+3,7,c
 10193  003730  D7F6               	goto	l4950
 10194  003732                     u5220:
 10195  003732  FFFF               	dw	65535	; assembler added errata NOP
 10196  003734  90D8               	bcf	status,0,c
 10197  003736  3609               	rlcf	___lldiv@quotient,f,c
 10198  003738  360A               	rlcf	___lldiv@quotient+1,f,c
 10199  00373A  360B               	rlcf	___lldiv@quotient+2,f,c
 10200  00373C  360C               	rlcf	___lldiv@quotient+3,f,c
 10201  00373E  5005               	movf	___lldiv@divisor,w,c
 10202  003740  5C01               	subwf	___lldiv@dividend,w,c
 10203  003742  5006               	movf	___lldiv@divisor+1,w,c
 10204  003744  5802               	subwfb	___lldiv@dividend+1,w,c
 10205  003746  5007               	movf	___lldiv@divisor+2,w,c
 10206  003748  5803               	subwfb	___lldiv@dividend+2,w,c
 10207  00374A  5008               	movf	___lldiv@divisor+3,w,c
 10208  00374C  5804               	subwfb	___lldiv@dividend+3,w,c
 10209  00374E  A0D8               	btfss	status,0,c
 10210  003750  D009               	goto	l4962
 10211  003752  5005               	movf	___lldiv@divisor,w,c
 10212  003754  5E01               	subwf	___lldiv@dividend,f,c
 10213  003756  5006               	movf	___lldiv@divisor+1,w,c
 10214  003758  5A02               	subwfb	___lldiv@dividend+1,f,c
 10215  00375A  5007               	movf	___lldiv@divisor+2,w,c
 10216  00375C  5A03               	subwfb	___lldiv@dividend+2,f,c
 10217  00375E  5008               	movf	___lldiv@divisor+3,w,c
 10218  003760  5A04               	subwfb	___lldiv@dividend+3,f,c
 10219  003762  8009               	bsf	___lldiv@quotient,0,c
 10220  003764                     l4962:
 10221  003764  FFFF               	dw	65535	; assembler added errata NOP
 10222  003766  90D8               	bcf	status,0,c
 10223  003768  3208               	rrcf	___lldiv@divisor+3,f,c
 10224  00376A  3207               	rrcf	___lldiv@divisor+2,f,c
 10225  00376C  3206               	rrcf	___lldiv@divisor+1,f,c
 10226  00376E  3205               	rrcf	___lldiv@divisor,f,c
 10227  003770  2E0D               	decfsz	___lldiv@counter,f,c
 10228  003772  D7DF               	goto	u5220
 10229  003774                     l603:
 10230  003774  FFFF               	dw	65535	; assembler added errata NOP
 10231  003776  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10232  00377A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10233  00377E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10234  003782  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10235  003786  0012               	return		;funcret
 10236  003788  FFFF               	dw	65535	; errata NOP
 10237  00378A                     __end_of___lldiv:
 10238                           	opt callstack 0
 10239                           
 10240 ;; *************** function ___fltol *****************
 10241 ;; Defined at:
 10242 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  f1              4   61[COMRAM] unsigned long 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  exp1            1   70[COMRAM] unsigned char 
 10247 ;;  sign1           1   69[COMRAM] unsigned char 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  4   61[COMRAM] long 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10257 ;;      Params:         4       0       0       0       0       0       0
 10258 ;;      Locals:         2       0       0       0       0       0       0
 10259 ;;      Temps:          4       0       0       0       0       0       0
 10260 ;;      Totals:        10       0       0       0       0       0       0
 10261 ;;Total ram usage:       10 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    2
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_main
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text47
 10272  003288                     __ptext47:
 10273                           	opt callstack 0
 10274  003288                     ___fltol:
 10275                           	opt callstack 0
 10276  003288  FFFF               	dw	65535	; assembler added errata NOP
 10277                           
 10278                           ;incstack = 0
 10279  00328A  3440               	rlcf	___fltol@f1+2,w,c
 10280  00328C  3441               	rlcf	___fltol@f1+3,w,c
 10281  00328E  6E47               	movwf	___fltol@exp1,c
 10282  003290  5047               	movf	___fltol@exp1,w,c
 10283  003292  A4D8               	btfss	status,2,c
 10284  003294  D00A               	goto	l4972
 10285  003296                     u5240:
 10286  003296  FFFF               	dw	65535	; assembler added errata NOP
 10287  003298  0E00               	movlw	0
 10288  00329A  6E3E               	movwf	?___fltol,c
 10289  00329C  0E00               	movlw	0
 10290  00329E  6E3F               	movwf	?___fltol+1,c
 10291  0032A0  0E00               	movlw	0
 10292  0032A2  6E40               	movwf	?___fltol+2,c
 10293  0032A4  0E00               	movlw	0
 10294  0032A6  6E41               	movwf	?___fltol+3,c
 10295  0032A8  D056               	goto	l873
 10296  0032AA                     l4972:
 10297  0032AA  FFFF               	dw	65535	; assembler added errata NOP
 10298  0032AC  C03E  F042         	movff	___fltol@f1,??___fltol
 10299  0032B0  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
 10300  0032B4  C040  F044         	movff	___fltol@f1+2,??___fltol+2
 10301  0032B8  C041  F045         	movff	___fltol@f1+3,??___fltol+3
 10302  0032BC  0E20               	movlw	32
 10303  0032BE  D006               	goto	u5250
 10304  0032C0                     u5255:
 10305  0032C0  FFFF               	dw	65535	; assembler added errata NOP
 10306  0032C2  90D8               	bcf	status,0,c
 10307  0032C4  3245               	rrcf	??___fltol+3,f,c
 10308  0032C6  3244               	rrcf	??___fltol+2,f,c
 10309  0032C8  3243               	rrcf	??___fltol+1,f,c
 10310  0032CA  3242               	rrcf	??___fltol,f,c
 10311  0032CC                     u5250:
 10312  0032CC  FFFF               	dw	65535	; assembler added errata NOP
 10313  0032CE  2EE8               	decfsz	wreg,f,c
 10314  0032D0  D7F7               	goto	u5255
 10315  0032D2  5042               	movf	??___fltol,w,c
 10316  0032D4  6E46               	movwf	___fltol@sign1,c
 10317  0032D6  8E40               	bsf	___fltol@f1+2,7,c
 10318  0032D8  0EFF               	movlw	255
 10319  0032DA  163E               	andwf	___fltol@f1,f,c
 10320  0032DC  0EFF               	movlw	255
 10321  0032DE  163F               	andwf	___fltol@f1+1,f,c
 10322  0032E0  0EFF               	movlw	255
 10323  0032E2  1640               	andwf	___fltol@f1+2,f,c
 10324  0032E4  0E00               	movlw	0
 10325  0032E6  1641               	andwf	___fltol@f1+3,f,c
 10326  0032E8  0E96               	movlw	150
 10327  0032EA  5E47               	subwf	___fltol@exp1,f,c
 10328  0032EC  AE47               	btfss	___fltol@exp1,7,c
 10329  0032EE  D00E               	goto	l4992
 10330  0032F0  5047               	movf	___fltol@exp1,w,c
 10331  0032F2  0A80               	xorlw	128
 10332  0032F4  0F97               	addlw	151
 10333  0032F6  A0D8               	btfss	status,0,c
 10334  0032F8  D7CE               	goto	u5240
 10335  0032FA                     l4988:
 10336  0032FA  FFFF               	dw	65535	; assembler added errata NOP
 10337  0032FC  90D8               	bcf	status,0,c
 10338  0032FE  3241               	rrcf	___fltol@f1+3,f,c
 10339  003300  3240               	rrcf	___fltol@f1+2,f,c
 10340  003302  323F               	rrcf	___fltol@f1+1,f,c
 10341  003304  323E               	rrcf	___fltol@f1,f,c
 10342  003306  3E47               	incfsz	___fltol@exp1,f,c
 10343  003308  D7F8               	goto	l4988
 10344  00330A  D010               	goto	u5290
 10345  00330C                     l4992:
 10346  00330C  FFFF               	dw	65535	; assembler added errata NOP
 10347  00330E  0E1F               	movlw	31
 10348  003310  6447               	cpfsgt	___fltol@exp1,c
 10349  003312  D008               	goto	l5000
 10350  003314  D7C0               	goto	u5240
 10351  003316                     l4998:
 10352  003316  FFFF               	dw	65535	; assembler added errata NOP
 10353  003318  90D8               	bcf	status,0,c
 10354  00331A  363E               	rlcf	___fltol@f1,f,c
 10355  00331C  363F               	rlcf	___fltol@f1+1,f,c
 10356  00331E  3640               	rlcf	___fltol@f1+2,f,c
 10357  003320  3641               	rlcf	___fltol@f1+3,f,c
 10358  003322  0647               	decf	___fltol@exp1,f,c
 10359  003324                     l5000:
 10360  003324  FFFF               	dw	65535	; assembler added errata NOP
 10361  003326  5047               	movf	___fltol@exp1,w,c
 10362  003328  A4D8               	btfss	status,2,c
 10363  00332A  D7F5               	goto	l4998
 10364  00332C                     u5290:
 10365  00332C  FFFF               	dw	65535	; assembler added errata NOP
 10366  00332E  5046               	movf	___fltol@sign1,w,c
 10367  003330  B4D8               	btfsc	status,2,c
 10368  003332  D008               	goto	l5006
 10369  003334  1E41               	comf	___fltol@f1+3,f,c
 10370  003336  1E40               	comf	___fltol@f1+2,f,c
 10371  003338  1E3F               	comf	___fltol@f1+1,f,c
 10372  00333A  6C3E               	negf	___fltol@f1,c
 10373  00333C  0E00               	movlw	0
 10374  00333E  223F               	addwfc	___fltol@f1+1,f,c
 10375  003340  2240               	addwfc	___fltol@f1+2,f,c
 10376  003342  2241               	addwfc	___fltol@f1+3,f,c
 10377  003344                     l5006:
 10378  003344  FFFF               	dw	65535	; assembler added errata NOP
 10379  003346  C03E  F03E         	movff	___fltol@f1,?___fltol
 10380  00334A  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
 10381  00334E  C040  F040         	movff	___fltol@f1+2,?___fltol+2
 10382  003352  C041  F041         	movff	___fltol@f1+3,?___fltol+3
 10383  003356                     l873:
 10384  003356  FFFF               	dw	65535	; assembler added errata NOP
 10385  003358  0012               	return		;funcret
 10386  00335A  FFFF               	dw	65535	; errata NOP
 10387  00335C                     __end_of___fltol:
 10388                           	opt callstack 0
 10389                           
 10390 ;; *************** function _UARTSendString *****************
 10391 ;; Defined at:
 10392 ;;		line 65 in file "serial.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10395 ;;		 -> STR_12(26), STR_11(3), STR_10(17), STR_9(3), 
 10396 ;;		 -> STR_8(24), STR_7(24), STR_6(13), STR_5(9), 
 10397 ;;		 -> STR_4(13), STR_3(9), int_to_char@result(10), 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  i               2   36[BANK0 ] int 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10409 ;;      Params:         0       2       0       0       0       0       0
 10410 ;;      Locals:         0       2       0       0       0       0       0
 10411 ;;      Temps:          0       2       0       0       0       0       0
 10412 ;;      Totals:         0       6       0       0       0       0       0
 10413 ;;Total ram usage:        6 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    3
 10416 ;; This function calls:
 10417 ;;		_UARTSendChar
 10418 ;; This function is called by:
 10419 ;;		_main
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text48
 10424  003814                     __ptext48:
 10425                           	opt callstack 0
 10426  003814                     _UARTSendString:
 10427                           	opt callstack 0
 10428  003814  FFFF               	dw	65535	; assembler added errata NOP
 10429                           
 10430                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
 10431                           
 10432                           ;incstack = 0
 10433  003816  9E94               	bcf	3988,7,c	;volatile
 10434                           
 10435                           ;serial.c: 67:   int i = 0;
 10436  003818  0E00               	movlw	0
 10437  00381A  0100               	movlb	0	; () banked
 10438  00381C  6FE0               	movwf	(UARTSendString@i+1)& (0+255),b
 10439  00381E  0E00               	movlw	0
 10440  003820  6FDF               	movwf	UARTSendString@i& (0+255),b
 10441                           
 10442                           ;serial.c: 68:   while (c[i] != '\0') {
 10443  003822  D01E               	goto	l4938
 10444  003824                     l4934:
 10445  003824  FFFF               	dw	65535	; assembler added errata NOP
 10446                           
 10447                           ;serial.c: 69:     UARTSendChar(c[i]);
 10448  003826  0100               	movlb	0	; () banked
 10449  003828  51DF               	movf	UARTSendString@i& (0+255),w,b
 10450  00382A  25DB               	addwf	UARTSendString@c& (0+255),w,b
 10451  00382C  6FDD               	movwf	??_UARTSendString& (0+255),b
 10452  00382E  51E0               	movf	(UARTSendString@i+1)& (0+255),w,b
 10453  003830  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10454  003832  6FDE               	movwf	(??_UARTSendString+1)& (0+255),b
 10455  003834  C0DD  FFF6         	movff	??_UARTSendString,tblptrl
 10456  003838  C0DE  FFF7         	movff	??_UARTSendString+1,tblptrh
 10457  00383C  6AF8               	clrf	tblptru,c
 10458  00383E  0E05               	movlw	(high __ramtop+-1)
 10459  003840  64F7               	cpfsgt	tblptrh,c
 10460  003842  D004               	bra	u5187
 10461  003844  0008               	tblrd		*
 10462  003846  FFFF               	dw	65535	; errata NOP
 10463  003848  50F5               	movf	tablat,w,c
 10464  00384A  D005               	bra	u5180
 10465  00384C                     u5187:
 10466  00384C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10467  003850  CFF7 FFEA          	movff	tblptrh,fsr0h
 10468  003854  50EF               	movf	indf0,w,c
 10469  003856                     u5180:
 10470  003856  EC17  F01F         	call	_UARTSendChar
 10471                           
 10472                           ;serial.c: 70:     i++;
 10473  00385A  0100               	movlb	0	; () banked
 10474  00385C  4BDF               	infsnz	UARTSendString@i& (0+255),f,b
 10475  00385E  2BE0               	incf	(UARTSendString@i+1)& (0+255),f,b
 10476  003860                     l4938:
 10477  003860  FFFF               	dw	65535	; assembler added errata NOP
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;serial.c: 68:   while (c[i] != '\0') {
 10481  003862  51DF               	movf	UARTSendString@i& (0+255),w,b
 10482  003864  25DB               	addwf	UARTSendString@c& (0+255),w,b
 10483  003866  6FDD               	movwf	??_UARTSendString& (0+255),b
 10484  003868  51E0               	movf	(UARTSendString@i+1)& (0+255),w,b
 10485  00386A  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10486  00386C  6FDE               	movwf	(??_UARTSendString+1)& (0+255),b
 10487  00386E  C0DD  FFF6         	movff	??_UARTSendString,tblptrl
 10488  003872  C0DE  FFF7         	movff	??_UARTSendString+1,tblptrh
 10489  003876  6AF8               	clrf	tblptru,c
 10490  003878  0E05               	movlw	(high __ramtop+-1)
 10491  00387A  64F7               	cpfsgt	tblptrh,c
 10492  00387C  D004               	bra	u5197
 10493  00387E  0008               	tblrd		*
 10494  003880  FFFF               	dw	65535	; errata NOP
 10495  003882  50F5               	movf	tablat,w,c
 10496  003884  D005               	bra	u5190
 10497  003886                     u5197:
 10498  003886  CFF6 FFE9          	movff	tblptrl,fsr0l
 10499  00388A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10500  00388E  50EF               	movf	indf0,w,c
 10501  003890                     u5190:
 10502  003890  0900               	iorlw	0
 10503  003892  B4D8               	btfsc	status,2,c
 10504  003894  0012               	return		;funcret
 10505  003896  FFFF               	dw	65535	; assembler added errata NOP
 10506  003898  D7C5               	goto	l4934
 10507  00389A  FFFF               	dw	65535	; errata NOP
 10508  00389C                     __end_of_UARTSendString:
 10509                           	opt callstack 0
 10510                           
 10511 ;; *************** function _UARTRecieveChar *****************
 10512 ;; Defined at:
 10513 ;;		line 53 in file "serial.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      unsigned char 
 10520 ;; Registers used:
 10521 ;;		wreg, status,2
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10527 ;;      Params:         0       0       0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0
 10529 ;;      Temps:          1       0       0       0       0       0       0
 10530 ;;      Totals:         1       0       0       0       0       0       0
 10531 ;;Total ram usage:        1 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; Hardware stack levels required when called:    2
 10534 ;; This function calls:
 10535 ;;		Nothing
 10536 ;; This function is called by:
 10537 ;;		_main
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           	psect	text49
 10542  003CF8                     __ptext49:
 10543                           	opt callstack 0
 10544  003CF8                     _UARTRecieveChar:
 10545                           	opt callstack 0
 10546  003CF8  FFFF               	dw	65535	; assembler added errata NOP
 10547                           
 10548                           ;serial.c: 54:   while (RCIF == 0) {
 10549                           
 10550                           ;incstack = 0
 10551  003CFA  D00E               	goto	l4908
 10552  003CFC                     l203:
 10553  003CFC  FFFF               	dw	65535	; assembler added errata NOP
 10554                           
 10555                           ;serial.c: 55:     if (RCSTAbits.OERR == 1) {
 10556  003CFE  A2AB               	btfss	4011,1,c	;volatile
 10557  003D00  D00B               	goto	l4908
 10558                           
 10559                           ;serial.c: 56:       RCSTAbits.OERR = 0;
 10560  003D02  92AB               	bcf	4011,1,c	;volatile
 10561                           
 10562                           ;serial.c: 57:       RCSTAbits.CREN = 0;
 10563  003D04  98AB               	bcf	4011,4,c	;volatile
 10564                           
 10565                           ;serial.c: 58:       RCSTAbits.CREN = 1;
 10566  003D06  88AB               	bsf	4011,4,c	;volatile
 10567                           
 10568                           ;serial.c: 59:       _delay((unsigned long)((10)*(16000000/4000.0)));
 10569  003D08  0E27               	movlw	39
 10570  003D0A  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 10571  003D0C  0EFC               	movlw	252
 10572  003D0E                     u5477:
 10573  003D0E  FFFF               	dw	65535	; errata NOP
 10574  003D10  2EE8               	decfsz	wreg,f,c
 10575  003D12  D7FD               	bra	u5477
 10576  003D14  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 10577  003D16  D7FB               	bra	u5477
 10578  003D18                     l4908:
 10579  003D18  FFFF               	dw	65535	; assembler added errata NOP
 10580                           
 10581                           ;serial.c: 54:   while (RCIF == 0) {
 10582  003D1A  AA9E               	btfss	3998,5,c	;volatile
 10583  003D1C  D7EF               	goto	l203
 10584                           
 10585                           ;serial.c: 62:   return RCREG1;
 10586  003D1E  50AE               	movf	4014,w,c	;volatile
 10587  003D20  0012               	return		;funcret
 10588  003D22  FFFF               	dw	65535	; errata NOP
 10589  003D24                     __end_of_UARTRecieveChar:
 10590                           	opt callstack 0
 10591                           
 10592 ;; *************** function _UARTNewLine *****************
 10593 ;; Defined at:
 10594 ;;		line 41 in file "serial.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;		None
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10608 ;;      Params:         0       0       0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0
 10611 ;;      Totals:         0       0       0       0       0       0       0
 10612 ;;Total ram usage:        0 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:    3
 10615 ;; This function calls:
 10616 ;;		_UARTSendChar
 10617 ;; This function is called by:
 10618 ;;		_main
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text50
 10623  003E1A                     __ptext50:
 10624                           	opt callstack 0
 10625  003E1A                     _UARTNewLine:
 10626                           	opt callstack 0
 10627  003E1A  FFFF               	dw	65535	; assembler added errata NOP
 10628                           
 10629                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
 10630                           
 10631                           ;incstack = 0
 10632  003E1C  9E94               	bcf	3988,7,c	;volatile
 10633                           
 10634                           ;serial.c: 43:   UARTSendChar(0x0a);
 10635  003E1E  0E0A               	movlw	10
 10636  003E20  EC17  F01F         	call	_UARTSendChar
 10637                           
 10638                           ;serial.c: 44:   UARTSendChar(0x0d);
 10639  003E24  0E0D               	movlw	13
 10640  003E26  EC17  F01F         	call	_UARTSendChar
 10641  003E2A  0012               	return		;funcret
 10642  003E2C  FFFF               	dw	65535	; errata NOP
 10643  003E2E                     __end_of_UARTNewLine:
 10644                           	opt callstack 0
 10645                           
 10646 ;; *************** function _UARTSendChar *****************
 10647 ;; Defined at:
 10648 ;;		line 47 in file "serial.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  c               1    wreg     unsigned char 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  c               1    0[COMRAM] unsigned char 
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10662 ;;      Params:         0       0       0       0       0       0       0
 10663 ;;      Locals:         1       0       0       0       0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0
 10665 ;;      Totals:         1       0       0       0       0       0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    2
 10669 ;; This function calls:
 10670 ;;		Nothing
 10671 ;; This function is called by:
 10672 ;;		_UARTNewLine
 10673 ;;		_UARTSendString
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           	psect	text51
 10678  003E2E                     __ptext51:
 10679                           	opt callstack 0
 10680  003E2E                     _UARTSendChar:
 10681                           	opt callstack 0
 10682  003E2E  FFFF               	dw	65535	; assembler added errata NOP
 10683                           
 10684                           ;incstack = 0
 10685                           ;UARTSendChar@c stored from wreg
 10686  003E30  6E01               	movwf	UARTSendChar@c,c
 10687                           
 10688                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
 10689  003E32  9E94               	bcf	3988,7,c	;volatile
 10690  003E34                     l196:
 10691  003E34  FFFF               	dw	65535	; assembler added errata NOP
 10692  003E36  A2AC               	btfss	4012,1,c	;volatile
 10693  003E38  D7FD               	goto	l196
 10694                           
 10695                           ;serial.c: 50:   TXREG = c;
 10696  003E3A  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 10697  003E3E  0012               	return		;funcret
 10698  003E40  FFFF               	dw	65535	; errata NOP
 10699  003E42                     __end_of_UARTSendChar:
 10700                           	opt callstack 0
 10701                           
 10702 ;; *************** function _Timer0_StartTimer *****************
 10703 ;; Defined at:
 10704 ;;		line 21 in file "timer.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  2  113[None  ] int 
 10711 ;; Registers used:
 10712 ;;		None
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10718 ;;      Params:         0       0       0       0       0       0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0
 10721 ;;      Totals:         0       0       0       0       0       0       0
 10722 ;;Total ram usage:        0 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    2
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_main
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text52
 10733  003E6C                     __ptext52:
 10734                           	opt callstack 0
 10735  003E6C                     _Timer0_StartTimer:
 10736                           	opt callstack 0
 10737  003E6C  FFFF               	dw	65535	; assembler added errata NOP
 10738                           
 10739                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10740                           
 10741                           ;incstack = 0
 10742  003E6E  8ED5               	bsf	4053,7,c	;volatile
 10743                           
 10744                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
 10745  003E70  0012               	return		;funcret
 10746  003E72  FFFF               	dw	65535	; errata NOP
 10747  003E74                     __end_of_Timer0_StartTimer:
 10748                           	opt callstack 0
 10749                           
 10750 ;; *************** function _Timer0_Init *****************
 10751 ;; Defined at:
 10752 ;;		line 8 in file "timer.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;		None
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10766 ;;      Params:         0       0       0       0       0       0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0
 10769 ;;      Totals:         0       0       0       0       0       0       0
 10770 ;;Total ram usage:        0 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    2
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_main
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text53
 10781  003D4E                     __ptext53:
 10782                           	opt callstack 0
 10783  003D4E                     _Timer0_Init:
 10784                           	opt callstack 0
 10785  003D4E  FFFF               	dw	65535	; assembler added errata NOP
 10786                           
 10787                           ;timer.c: 9:  time_ms = 0;
 10788                           
 10789                           ;incstack = 0
 10790  003D50  0E00               	movlw	0
 10791  003D52  0100               	movlb	0	; () banked
 10792  003D54  6F89               	movwf	_time_ms& (0+255),b	;volatile
 10793  003D56  0E00               	movlw	0
 10794  003D58  6F8A               	movwf	(_time_ms+1)& (0+255),b	;volatile
 10795  003D5A  0E00               	movlw	0
 10796  003D5C  6F8B               	movwf	(_time_ms+2)& (0+255),b	;volatile
 10797  003D5E  0E00               	movlw	0
 10798  003D60  6F8C               	movwf	(_time_ms+3)& (0+255),b	;volatile
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 10802  003D62  9CD5               	bcf	4053,6,c	;volatile
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;timer.c: 11:  TMR0H = 0xFF;
 10806  003D64  68D7               	setf	4055,c	;volatile
 10807                           
 10808                           ;timer.c: 12:  TMR0L = 0x34;
 10809  003D66  0E34               	movlw	52
 10810  003D68  6ED6               	movwf	4054,c	;volatile
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 10814  003D6A  94F2               	bcf	4082,2,c	;volatile
 10815                           
 10816                           ;timer.c: 14:  T0CON = 0x00;
 10817  003D6C  0E00               	movlw	0
 10818  003D6E  6ED5               	movwf	4053,c	;volatile
 10819                           
 10820                           ; BSR set to: 0
 10821  003D70  0012               	return		;funcret
 10822  003D72  FFFF               	dw	65535	; errata NOP
 10823  003D74                     __end_of_Timer0_Init:
 10824                           	opt callstack 0
 10825                           
 10826 ;; *************** function _timingISR *****************
 10827 ;; Defined at:
 10828 ;;		line 31 in file "timer.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10842 ;;      Params:         0       0       0       0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0
 10845 ;;      Totals:         0       0       0       0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    1
 10849 ;; This function calls:
 10850 ;;		i2_Timer0_StartTimer
 10851 ;; This function is called by:
 10852 ;;		Interrupt level 2
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	intcode
 10857  000008                     __pintcode:
 10858                           	opt callstack 0
 10859  000008                     _timingISR:
 10860                           	opt callstack 0
 10861  000008  FFFF               	dw	65535	; assembler added errata NOP
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;incstack = 0
 10865  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10866                           
 10867                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 10868  00000C  B4F2               	btfsc	4082,2,c	;volatile
 10869  00000E  AAF2               	btfss	4082,5,c	;volatile
 10870  000010  D00D               	goto	i2l261
 10871                           
 10872                           ;timer.c: 33:   TMR0IF = 0;
 10873  000012  94F2               	bcf	4082,2,c	;volatile
 10874                           
 10875                           ;timer.c: 34:   time_ms++;
 10876  000014  0E01               	movlw	1
 10877  000016  0100               	movlb	0	; () banked
 10878  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
 10879  00001A  0E00               	movlw	0
 10880  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 10881  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 10882  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;timer.c: 35:   TMR0H = 0xFF;
 10886  000022  68D7               	setf	4055,c	;volatile
 10887                           
 10888                           ; BSR set to: 0
 10889                           ;timer.c: 36:   TMR0L = 0x34;
 10890  000024  0E34               	movlw	52
 10891  000026  6ED6               	movwf	4054,c	;volatile
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;timer.c: 37:   Timer0_StartTimer();
 10895  000028  EC3A  F01F         	call	i2_Timer0_StartTimer	;wreg free
 10896  00002C                     i2l261:
 10897  00002C  FFFF               	dw	65535	; assembler added errata NOP
 10898  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10899  000030  0011               	retfie		f
 10900  000032  FFFF               	dw	65535	; errata NOP
 10901  000034                     __end_of_timingISR:
 10902                           	opt callstack 0
 10903                           
 10904 ;; *************** function i2_Timer0_StartTimer *****************
 10905 ;; Defined at:
 10906 ;;		line 21 in file "timer.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;		None
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  2    0[None  ] int 
 10913 ;; Registers used:
 10914 ;;		None
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10920 ;;      Params:         0       0       0       0       0       0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0
 10923 ;;      Totals:         0       0       0       0       0       0       0
 10924 ;;Total ram usage:        0 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_timingISR
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text55
 10934  003E74                     __ptext55:
 10935                           	opt callstack 0
 10936  003E74                     i2_Timer0_StartTimer:
 10937                           	opt callstack 0
 10938  003E74  FFFF               	dw	65535	; assembler added errata NOP
 10939                           
 10940                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10941                           
 10942                           ;incstack = 0
 10943  003E76  8ED5               	bsf	4053,7,c	;volatile
 10944                           
 10945                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 10946  003E78  0012               	return		;funcret
 10947  003E7A  FFFF               	dw	65535	; errata NOP
 10948  003E7C                     __end_ofi2_Timer0_StartTimer:
 10949                           	opt callstack 0
 10950                           
 10951                           	psect	rparam
 10952  0000                     
 10953                           	psect	temp
 10954  00007F                     btemp:
 10955                           	opt callstack 0
 10956  00007F                     	ds	1
 10957  0000                     int$flags	set	btemp
 10958  0000                     wtemp8	set	btemp+1
 10959  0000                     ttemp5	set	btemp+1
 10960  0000                     ttemp6	set	btemp+4
 10961  0000                     ttemp7	set	btemp+8
 10962                           tosu	equ	0xFFF
 10963                           tosh	equ	0xFFE
 10964                           tosl	equ	0xFFD
 10965                           stkptr	equ	0xFFC
 10966                           pclatu	equ	0xFFB
 10967                           pclath	equ	0xFFA
 10968                           pcl	equ	0xFF9
 10969                           tblptru	equ	0xFF8
 10970                           tblptrh	equ	0xFF7
 10971                           tblptrl	equ	0xFF6
 10972                           tablat	equ	0xFF5
 10973                           prodh	equ	0xFF4
 10974                           prodl	equ	0xFF3
 10975                           indf0	equ	0xFEF
 10976                           postinc0	equ	0xFEE
 10977                           postdec0	equ	0xFED
 10978                           preinc0	equ	0xFEC
 10979                           plusw0	equ	0xFEB
 10980                           fsr0h	equ	0xFEA
 10981                           fsr0l	equ	0xFE9
 10982                           wreg	equ	0xFE8
 10983                           indf1	equ	0xFE7
 10984                           postinc1	equ	0xFE6
 10985                           postdec1	equ	0xFE5
 10986                           preinc1	equ	0xFE4
 10987                           plusw1	equ	0xFE3
 10988                           fsr1h	equ	0xFE2
 10989                           fsr1l	equ	0xFE1
 10990                           bsr	equ	0xFE0
 10991                           indf2	equ	0xFDF
 10992                           postinc2	equ	0xFDE
 10993                           postdec2	equ	0xFDD
 10994                           preinc2	equ	0xFDC
 10995                           plusw2	equ	0xFDB
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8


Data Sizes:
    Strings     190
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     57     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_142(CODE[3]), STR_138(CODE[3]), STR_133(CODE[3]), STR_129(CODE[3]), 
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[4]), STR_111(CODE[4]), 
		 -> STR_106(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_91(CODE[4]), 
		 -> STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), STR_71(CODE[4]), 
		 -> STR_66(CODE[3]), STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), 
		 -> STR_46(CODE[3]), STR_42(CODE[3]), STR_37(CODE[3]), STR_33(CODE[3]), 
		 -> STR_28(CODE[3]), STR_24(CODE[3]), STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_142(CODE[3]), STR_138(CODE[3]), STR_133(CODE[3]), STR_129(CODE[3]), 
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[4]), STR_111(CODE[4]), 
		 -> STR_106(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_91(CODE[4]), 
		 -> STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), STR_71(CODE[4]), 
		 -> STR_66(CODE[3]), STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), 
		 -> STR_46(CODE[3]), STR_42(CODE[3]), STR_37(CODE[3]), STR_33(CODE[3]), 
		 -> STR_28(CODE[3]), STR_24(CODE[3]), STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1733_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 26
		 -> STR_12(CODE[26]), STR_11(CODE[3]), STR_10(CODE[17]), STR_9(CODE[3]), 
		 -> STR_8(CODE[24]), STR_7(CODE[24]), STR_6(CODE[13]), STR_5(CODE[9]), 
		 -> STR_4(CODE[13]), STR_3(CODE[9]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   57618
                                             38 BANK0     19    19      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                     _set_duty_cycle
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     167
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49486
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       6     4      2    1480
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   ___lldiv
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
   _set_duty_cycle
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     39      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      15        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 27 23:23:55 2019

                                                    main@stored_temp 00E9  
                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                        __CFG_OSC$HS 000000  
                                                                l203 3CFC  
                                                                l300 3A34  
                                                                l403 299A  
                                                                l405 29A4  
                                                                l149 18BE  
                                                                l423 2F9A  
                                                                l360 3686  
                                                                l442 27D8  
                                                                l603 3774  
                                                                l196 3E34  
                                                                l380 237C  
                                                                l444 27E2  
                                                                l519 185A  
                                                                l457 2580  
                                                                l378 2372  
                                                                l299 3A4C  
                                                                l459 258A  
                                                                l873 3356  
                                                       __CFG_CPB$OFF 000000  
                                                                _RC0 007C10  
                                                                _RB5 007C0D  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _abs 3BE2  
                                                                _lcd 0080  
                                                                _pad 3650  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                        main@address 00F2  
                                                   ?_UARTRecieveChar 0001  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1014 3262  
                                                               l1200 1EDE  
                                                               l1024 357E  
                                                               l1121 21DA  
                                                               l1113 22EE  
                                                               l1105 210E  
                                                               l1130 2252  
                                                               l1106 20E6  
                                                               l1131 224C  
                                                               ?_abs 0013  
                                                               l1207 1F72  
                                                               l1231 2E14  
                                                               l1234 2F2A  
                                                               l1251 3C0E  
                                                               l1190 1CBA  
                                                               l1238 2E9E  
                                                               l1254 3C18  
                                                               l1328 364A  
                                                               l1194 1FAA  
                                                               l1282 2C68  
                                                               l4010 0AA2  
                                                               l4100 0FB8  
                                                               l4004 09FC  
                                                               l1285 2C72  
                                                               l1382 34E2  
                                                               l4014 0ADC  
                                                               l1199 1EE4  
                                                               l5000 3324  
                                                               l1392 3998  
                                                               l4200 1434  
                                                               l4104 0FC4  
                                                               l4024 0B46  
                                                               l4114 1008  
                                                               l4034 0BC2  
                                                               l3412 367C  
                                                               l4124 1032  
                                                               l4108 0FF4  
                                                               l4044 0CA2  
                                                               l1397 39A2  
                                                               l5006 3344  
                                                               l3422 36DC  
                                                               l3414 3692  
                                                               l3510 30A2  
                                                               l4214 153E  
                                                               l4134 10C4  
                                                               l4062 0DFC  
                                                               l4054 0D4C  
                                                               l4400 20F6  
                                                               l3408 366C  
                                                               l3520 30FA  
                                                               l4160 123C  
                                                               l4152 11CA  
                                                               l4144 1130  
                                                               l5112 189C  
                                                               l4402 20FC  
                                                               l4322 1FDE  
                                                               l3418 36AC  
                                                               l3530 315E  
                                                               l3514 30C8  
                                                               l4242 1620  
                                                               l4306 38B2  
                                                               l4500 22CE  
                                                               l4228 15C0  
                                                               l4308 38DA  
                                                               l5116 18A4  
                                                               l4502 22D2  
                                                               l4350 2032  
                                                               l4326 1FE4  
                                                               l3374 35C0  
                                                               l3534 3186  
                                                               l3526 3146  
                                                               l3518 30E4  
                                                               l3622 239A  
                                                               l4270 17C0  
                                                               l4094 0F46  
                                                               l4086 0ED2  
                                                               l4078 0E52  
                                                               l4600 1C5C  
                                                               l4424 2146  
                                                               l4520 37B8  
                                                               l3384 3B34  
                                                               l3392 3CD2  
                                                               l3480 2D0E  
                                                               l3472 2CD0  
                                                               l3608 2350  
                                                               l3720 2F5C  
                                                               l3544 31D4  
                                                               l3800 25A0  
                                                               l4280 180E  
                                                               l4256 16F6  
                                                               l4192 13C0  
                                                               l4184 1340  
                                                               l4168 12EA  
                                                               l4602 1C62  
                                                               l4426 214C  
                                                               l4434 2160  
                                                               l4346 202C  
                                                               l4522 3806  
                                                               l3394 3CD8  
                                                               l3490 2D6E  
                                                               l3466 2CA6  
                                                               l3626 23AA  
                                                               l3730 2FB4  
                                                               l3546 31EA  
                                                               l5162 1A84  
                                                               l4700 1F4A  
                                                               l4620 1CA8  
                                                               l4604 1C74  
                                                               l4452 2202  
                                                               l4444 21C8  
                                                               l3388 3B4C  
                                                               l3660 2530  
                                                               l3636 24A4  
                                                               l3708 2AE4  
                                                               l3556 324A  
                                                               l3572 3566  
                                                               l3564 3504  
                                                               l4276 1800  
                                                               l4462 221A  
                                                               l4358 2056  
                                                               l4518 37A8  
                                                               l3478 2CF8  
                                                               l3494 2D86  
                                                               l3734 2FCE  
                                                               l3566 351A  
                                                               l3814 25F4  
                                                               l3806 25D0  
                                                               l4286 1822  
                                                               ?_pad 0011  
                                                               l4712 1F94  
                                                               l3584 3B1C  
                                                               l3592 39BE  
                                                               l3656 2514  
                                                               l3752 3050  
                                                               l3744 3018  
                                                               l3904 3452  
                                                               l4618 1CA2  
                                                               l4730 2E26  
                                                               l3594 39CC  
                                                               l3498 2DAE  
                                                               l3690 2A70  
                                                               l3738 2FF0  
                                                               l3906 3462  
                                                               l3930 0712  
                                                               l4628 1CDC  
                                                               l4468 2228  
                                                               l4388 2094  
                                                               l4740 2E5C  
                                                               l3860 2B2C  
                                                               l3748 3036  
                                                               l3852 2788  
                                                               l3828 268E  
                                                               l3836 270A  
                                                               l3940 0734  
                                                               l3932 0724  
                                                               l4670 1E84  
                                                               l4750 2ED4  
                                                               l4742 2E84  
                                                               l3678 29E4  
                                                               l3766 281A  
                                                               l5198 1C0E  
                                                               l4496 22C4  
                                                               l4488 229A  
                                                               l4736 2E46  
                                                               l3880 2BC8  
                                                               l3776 2908  
                                                               l3952 0752  
                                                               l3944 073C  
                                                               l3936 072C  
                                                               l3928 070C  
                                                               l4578 3A12  
                                                               l4738 2E4E  
                                                               l3874 2B8A  
                                                               l3858 2B26  
                                                               l3970 083A  
                                                               l3954 0798  
                                                               l4908 3D18  
                                                               l4676 1EA4  
                                                               l4748 2EC6  
                                                               l3884 2C00  
                                                               l3876 2B94  
                                                               l3868 2B78  
                                                               l3948 0744  
                                                               l4934 3824  
                                                               l4950 371E  
                                                               l4766 2F18  
                                                               l3878 2B9C  
                                                               l3990 0942  
                                                               l3966 080A  
                                                               l4952 372C  
                                                               l4696 1F2A  
                                                               l3968 082A  
                                                               l4938 3860  
                                                               l4962 3764  
                                                               l3986 0912  
                                                               l4972 32AA  
                                                               l3988 0932  
                                                               l4992 330C  
                                                               l4988 32FA  
                                                               l4998 3316  
                                                               STR_1 068E  
                                                               STR_2 06BC  
                                                               STR_3 0669  
                                                               STR_4 065C  
                                                               STR_5 0669  
                                                               STR_6 065C  
                                                               STR_7 0633  
                                                               STR_8 061B  
                                                               STR_9 06B9  
                                                               u3030 3100  
                                                               u3110 3520  
                                                               u3200 2366  
                                                               u4010 0A56  
                                                               u3140 3B18  
                                                               u3220 2392  
                                                               u3061 31B4  
                                                               u3230 24B4  
                                                               u4030 0B36  
                                                               u3160 231E  
                                                               u3320 298E  
                                                               u3080 31F0  
                                                               u3250 24D6  
                                                               u3170 2322  
                                                               u3330 2A4A  
                                                               u4050 0B80  
                                                               u3251 24D4  
                                                               u3411 2F3C  
                                                               u3260 24E6  
                                                               u3340 2A80  
                                                               u4300 1598  
                                                               u4140 0F00  
                                                               u5030 1F3A  
                                                               u3270 24EC  
                                                               u3510 27CC  
                                                               u4070 0C1C  
                                                               u3335 2A36  
                                                               u5040 1F5A  
                                                               u5120 2EE0  
                                                               u2720 35B6  
                                                               u3360 2AA2  
                                                               u3600 25F0  
                                                               u4320 15FA  
                                                               u3290 24FC  
                                                               u3370 2AB2  
                                                               u3610 262A  
                                                               u4090 0CFC  
                                                               u5220 3732  
                                                               u4500 20CC  
                                                               u2740 3602  
                                                               u3380 2AB8  
                                                               u3460 2FE4  
                                                               u3540 2934  
                                                               u3700 273E  
                                                               u3620 262E  
                                                               u4340 167A  
                                                               u4260 13EE  
                                                               u3541 2932  
                                                               u3701 273C  
                                                               u2910 3CB8  
                                                               u2830 3BF2  
                                                               u3550 2944  
                                                               u3710 274E  
                                                               u4190 10F2  
                                                               u5240 3296  
                                                               u2920 3CBC  
                                                               u3560 294A  
                                                               u2840 3C80  
                                                               u3720 2754  
                                                               u3640 2668  
                                                               u4360 1750  
                                                               u4280 148E  
                                                               u5250 32CC  
                                                               u4530 2118  
                                                               u3490 3066  
                                                               u2850 3C84  
                                                               u2770 3C48  
                                                               u3650 266C  
                                                               u5180 3856  
                                                               u4620 21EE  
                                                               u2860 3BD4  
                                                               u2780 3C4C  
                                                               u3580 2574  
                                                               u5190 3890  
                                                               u3750 2B74  
                                                               u2870 3BD8  
                                                               u3670 26E4  
                                                               u3910 0876  
                                                               u5255 32C0  
                                                               u2951 2CD8  
                                                               u4480 20B8  
                                                               u2880 397C  
                                                               u3680 271C  
                                                               u3920 087A  
                                                               u5417 19BE  
                                                               u5290 332C  
                                                               u4490 20C8  
                                                               u3770 2C34  
                                                               u2970 2D14  
                                                               u3850 34B8  
                                                               u2890 3980  
                                                               u3930 0888  
                                                               u5187 384C  
                                                               u3675 26D0  
                                                               u5427 1A72  
                                                               u4740 22A8  
                                                               u4660 222E  
                                                               u3780 2C38  
                                                               _RCIF 007CF5  
                                                               u5197 3886  
                                                               u5437 1B30  
                                                               u5447 1BCC  
                                                               u4680 2244  
                                                               u3960 097E  
                                                               u5457 1BEA  
                                                               u3970 0982  
                                                               u5467 3A26  
                                                               u4940 1CC8  
                                                               u3980 0990  
                                                               u5477 3D0E  
                                                               u4950 1E44  
                                                               u4955 1E38  
                                                               u4990 1ED6  
                                                   ??_initialize_PWM 0003  
                                                       __CFG_STVR$ON 000000  
                                                               abs@a 0013  
                                                               _dbuf 009B  
                                                               _flag 009A  
                                                 initialize_PWM@freq 0001  
                                                               _atoi 2B12  
                                                               _ctoa 39A8  
                                                               _main 1860  
                                                               _dtoa 22F4  
                                                               _prec 0093  
                                                               _otoa 2978  
                                                               _nout 008F  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr0h 000FEA  
                                                               fsr1h 000FE2  
                                                               indf0 000FEF  
                                                               fsr2h 000FDA  
                                                               fsr0l 000FE9  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 2F30  
                                                               btemp 007F  
                                                               _utoa 27B6  
                                                               _xtoa 255E  
                                                   __end_of_ADC_Init 3E62  
                                                   __end_of_ADC_Read 3A52  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                                  int_to_char@result 00CD  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 2DD4  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 22F4  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 31AC  
                                                              STR_10 064B  
                                                              STR_11 06B9  
                                                              STR_12 0601  
                                                              STR_13 0676  
                                                              STR_15 0676  
                                                              STR_31 0698  
                                                              STR_24 0677  
                                                              STR_40 069B  
                                                              STR_33 0698  
                                                              STR_17 067A  
                                                              STR_42 069B  
                                                              STR_19 067A  
                                                              STR_51 0682  
                                                              STR_35 069E  
                                                              STR_28 067B  
                                                              STR_44 06A1  
                                                              STR_37 069E  
                                                              STR_61 06AA  
                                                              STR_46 06A1  
                                                              STR_71 067E  
                                                              STR_56 0683  
                                                              STR_64 06AD  
                                                              STR_81 06A4  
                                                              STR_49 0682  
                                                              STR_66 06AD  
                                                              STR_91 0686  
                                                              STR_59 06AA  
                                                              STR_76 067F  
                                                              STR_84 06A7  
                                                              STR_69 067E  
                                                              STR_86 06A7  
                                                              STR_79 06A4  
                                                              STR_96 0687  
                                                    __end_of___flmul 1FB0  
                                                              STR_89 0686  
                                                              ?_otoa 001C  
                                                    __end_of___flsub 3A9C  
                                                    __end_of___fltol 335C  
                                                              ?_stoa 000A  
                                                    __end_of___lldiv 378A  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 3288  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 35A4  
                                                              i2l261 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_getchar 3E54  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _fgetc 378A  
                                                              _flags 0095  
                                                              _getch 3E62  
                                                              _errno 008D  
                                                              _fputc 35A4  
                                                    __end_of_isalpha 3BE2  
                                                              _fputs 3B28  
                                                    __end_of_isdigit 3CC6  
                                                    __end_of_read_op 3DDA  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 0091  
                                                              ctoa@c 001E  
                                                              _putch 3E84  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3C56  
                                                    __end_of_isspace 3B28  
                                                    __end_of_isupper 3C8E  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 3952  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 34E8  
                                                    __end_of_toupper 39A8  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1887 000D  
                                                    __initialization 3B6A  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2C78  
                                                       __end_of_ctoa 39FE  
                                                       __end_of_main 1C2E  
                                                       __end_of_dtoa 255E  
                                                       __end_of_otoa 2B12  
                                                       __end_of_stoa 3074  
                                                       __end_of_utoa 2978  
                                                       __end_of_xtoa 27B6  
                                                 int_to_char@the_num 00D7  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00E1  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             STR_101 068F  
                                                             ?_fputs 000A  
                                                             STR_111 068A  
                                                             STR_120 068B  
                                                             STR_104 06B0  
                                                             STR_113 0672  
                                                             STR_106 06B0  
                                                             _ADRESH 000FC4  
                                                             STR_115 0672  
                                                             STR_131 0692  
                                                             STR_124 0673  
                                                             STR_140 0695  
                                                             STR_133 0692  
                                                             STR_109 068A  
                                                             STR_142 0695  
                                                             _ADRESL 000FC3  
                                                             STR_127 06B3  
                                                             STR_136 06B6  
                                                             STR_129 06B3  
                                                             STR_138 06B6  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 2F30  
                                                      main@curr_time 00EF  
                                                      ??_Timer0_Init 0001  
                                                    write_op@address 0002  
                                                i2_Timer0_StartTimer 3E74  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 3426  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 3D24  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lldiv 0009  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 3B90  
                                            __size_of_UARTSendString 0088  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3CC6  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ??_read_op 0001  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 38FC  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                   __end_of_write_op 3D96  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 3B98  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                     __pcstackCOMRAM 0001  
                                                       __pidataBANK0 3E7C  
                                                      __end_of_fgetc 3814  
                                                      __end_of_getch 3E6C  
                                                      __end_of_fputc 3650  
                                                      __end_of_fputs 3B6A  
                                                __end_of_Timer0_Init 3D74  
                                                      __end_of_putch 3E8A  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 0080  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 3E06  
                                                      _initialize_TX 3DF2  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                            ?_strlen 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                           __size_of_UARTRecieveChar 002C  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 3D4E  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2C78  
                                                            ___fladd 1FB0  
                                                            ___aomod 3074  
                                                            ___flmul 1C2E  
                                                            ___flsub 3A52  
                                                            ___fltol 3288  
                                                            ___lldiv 36FA  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 31AC  
                                                            ___lomod 34E8  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 3814  
                                                            __pcinit 3B6A  
                                                            __ramtop 0600  
                                                            __ptext0 1860  
                                                            __ptext1 3D74  
                                                            __ptext2 3D96  
                                                            __ptext3 3DB8  
                                                            __ptext4 3A9C  
                                                            __ptext5 38FC  
                                                            __ptext6 389C  
                                                            __ptext7 06C0  
                                                            __ptext8 255E  
                                                            __ptext9 3952  
                                                          ?_write_op 0001  
                                                            _getchar 3E42  
                                                          _T0CONbits 000FD5  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3BA6  
                                                            _isdigit 3C8E  
                                                            _read_op 3DB8  
                                                         ??___xxtofl 0005  
                                                            _islower 3C1E  
                                                            _isspace 3AE4  
                                                            _isupper 3C56  
                                                            fgetc@fp 0003  
                                                            _time_ms 0089  
                                                            atoi@neg 000E  
                                                            _sprintf 38FC  
                                                         ??_get_temp 0034  
                                                            _strncmp 3426  
                                                            _toupper 3952  
                                               end_of_initialization 3B98  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                    ___lldiv@divisor 0005  
                                                  __end_of_timingISR 0034  
                                                    ___lldiv@counter 000D  
                                                  __end_of_vfpfcnvrt 1860  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 389C  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                         ??_write_op 0002  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 3D96  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 3E6C  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00DB  
                                                  ??_UARTRecieveChar 0001  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 3D4E  
                                                        vfpfcnvrt@vp 0067  
                                             __end_of_set_duty_cycle 3DB8  
                                          __end_of_Timer0_StartTimer 3E74  
                                                     __end_of_strlen 3CF8  
                                                start_initialization 3B6A  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 3C1E  
                                                        __end_of_pad 36FA  
                                                 set_duty_cycle@mask 0003  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00F4  
                                               __end_of_UARTSendChar 3E42  
                                        __end_ofi2_Timer0_StartTimer 3E7C  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 00BB  
                                              set_duty_cycle@upper_8 0002  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1730 0010  
                                                          _atoi$1731 0014  
                                                          _atoi$1732 0012  
                                                       ?_Timer0_Init 0001  
                                                          _main$2172 00E5  
                                                          _dtoa$1084 002E  
                                                      UARTSendChar@c 0001  
                                                     _initialize_PWM 3DDA  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lldiv 0001  
                                                           ?___lodiv 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           ?_read_op 0001  
                                                           _ADC_Init 3E54  
                                                           _ADC_Read 39FE  
                                                  __size_of_write_op 0022  
                                                           ?_islower 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 00BB  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00DB  
                                                    UARTSendString@i 00DF  
                                             __end_of_initialize_PWM 3DF2  
                                                __end_of_int_to_char 3AE4  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 0085  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 06C0  
                                                          _xtoa$1120 002F  
                                                          _xtoa$1121 0031  
                                                  ___wmul@multiplier 0001  
                                                          main@input 00F1  
                                                       _isspace$1767 0007  
                                                   main@time_elapsed 00EB  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 3B7E  
                                                    _UARTRecieveChar 3CF8  
                                                   ??_UARTSendString 00DD  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 3E2E  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lldiv 0090  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 00BD  
                                                           ___xxtofl 2DD4  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_read_op 0022  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 3C1E  
                                                           __ptext11 3C56  
                                                           __ptext20 3BE2  
                                                           __ptext12 3BA6  
                                                           __ptext21 3074  
                                                           __ptext13 27B6  
                                                           __ptext30 3AE4  
                                                           __ptext22 2C78  
                                                           __ptext14 34E8  
                                                           __ptext31 3C8E  
                                                           __ptext23 39A8  
                                                           __ptext15 31AC  
                                                           __ptext40 2DD4  
                                                           __ptext32 3D24  
                                                           __ptext24 3650  
                                                           __ptext16 3426  
                                                           __ptext41 3A52  
                                                           __ptext33 3E42  
                                                           __ptext25 3CC6  
                                                           __ptext17 2F30  
                                                           __ptext50 3E1A  
                                                           __ptext42 1FB0  
                                                           __ptext34 378A  
                                                           __ptext26 3B28  
                                                           __ptext18 2978  
                                                           __ptext51 3E2E  
                                                           __ptext43 1C2E  
                                                           __ptext35 3E62  
                                                           __ptext27 35A4  
                                                           __ptext19 22F4  
                                                           __ptext52 3E6C  
                                                           __ptext44 39FE  
                                                           __ptext36 3DF2  
                                                           __ptext28 3E84  
                                                           __ptext53 3D4E  
                                                           __ptext45 3E54  
                                                           __ptext37 3E06  
                                                           __ptext29 2B12  
                                                           __ptext46 36FA  
                                                           __ptext38 3DDA  
                                                           __ptext55 3E74  
                                                           __ptext47 3288  
                                                           __ptext39 335C  
                                                           __ptext48 3814  
                                                           __ptext49 3CF8  
                                                   __size_of_isupper 0038  
                                                           _get_temp 335C  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                    _interval_events 0097  
                                                       _UARTSendChar 3E2E  
                                                        _int_to_char 3A9C  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 03CE  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 3E1A  
                                              __end_of_initialize_TX 3E06  
                                                          stoa@F1152 00F4  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                     read_op@address 0001  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 0099  
                                                           _ungetcnt 007E  
                                                           _vfprintf 389C  
                                                   ___aomod@dividend 0001  
                                                           _write_op 3D74  
                                                    main@temperature 00ED  
                                                     _vfpfcnvrt$1135 005B  
                                                     _vfpfcnvrt$1136 005D  
                                                         _INTCONbits 000FF2  
                                            __end_of_UARTRecieveChar 3D24  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 3E8A  
                                                          sprintf@ap 00CB  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                   ___lldiv@dividend 0001  
                                                        _UARTNewLine 3E1A  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                      read_op@result 0002  
                                                           sprintf@f 00C5  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 00BB  
                                                   ___lldiv@quotient 0009  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                                       ___aomod@sign 0012  
