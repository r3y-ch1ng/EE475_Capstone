

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 25 21:00:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F452 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00121C                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for stoa@F1152
    73  00121C  28                 	db	40
    74  00121D  6E                 	db	110
    75  00121E  75                 	db	117
    76  00121F  6C                 	db	108
    77  001220  6C                 	db	108
    78  001221  29                 	db	41
    79  001222  00                 	db	0
    80  0000                     _CCP1CON	set	4029
    81  0000                     _CCPR1L	set	4030
    82  0000                     _PR2	set	4043
    83  0000                     _T2CON	set	4042
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADCON0	set	4034
    87  0000                     _SSPBUF	set	4041
    88  0000                     _SSPCON1	set	4038
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _T0CON	set	4053
    91  0000                     _TMR0L	set	4054
    92  0000                     _TMR0H	set	4055
    93  0000                     _T0CONbits	set	4053
    94  0000                     _ADCON1	set	4033
    95  0000                     _RCREG1	set	4014
    96  0000                     _TXREG	set	4013
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _RCSTA	set	4011
    99  0000                     _SPBRG	set	4015
   100  0000                     _TXSTAbits	set	4012
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _INTCONbits	set	4082
   103  0000                     _RCONbits	set	4048
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISA	set	3986
   106  0000                     _PORTA	set	3968
   107  0000                     _PORTD	set	3971
   108  0000                     _PORTB	set	3969
   109  0000                     _PORTCbits	set	3970
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISD	set	3989
   113  0000                     _GO_nDONE	set	32274
   114  0000                     _TMR0IE	set	32661
   115  0000                     _TMR0IF	set	32658
   116  0000                     _RCIF	set	31989
   117  0000                     _TMR2IP	set	31993
   118  0000                     _TMR2IE	set	31977
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	opt callstack 0
   123  000600  00                 	db	0
   124  000601                     STR_103:
   125  000601  68                 	db	104	;'h'
   126  000602  68                 	db	104	;'h'
   127  000603  58                 	db	88	;'X'
   128  000604  00                 	db	0
   129  000605                     STR_3:
   130  000605  68                 	db	104	;'h'
   131  000606  68                 	db	104	;'h'
   132  000607  64                 	db	100	;'d'
   133  000608  00                 	db	0
   134  000609                     STR_7:
   135  000609  68                 	db	104	;'h'
   136  00060A  68                 	db	104	;'h'
   137  00060B  69                 	db	105	;'i'
   138  00060C  00                 	db	0
   139  00060D                     STR_59:
   140  00060D  68                 	db	104	;'h'
   141  00060E  68                 	db	104	;'h'
   142  00060F  6E                 	db	110	;'n'
   143  000610  00                 	db	0
   144  000611                     STR_39:
   145  000611  68                 	db	104	;'h'
   146  000612  68                 	db	104	;'h'
   147  000613  6F                 	db	111	;'o'
   148  000614  00                 	db	0
   149  000615                     STR_79:
   150  000615  68                 	db	104	;'h'
   151  000616  68                 	db	104	;'h'
   152  000617  75                 	db	117	;'u'
   153  000618  00                 	db	0
   154  000619                     STR_99:
   155  000619  68                 	db	104	;'h'
   156  00061A  68                 	db	104	;'h'
   157  00061B  78                 	db	120	;'x'
   158  00061C  00                 	db	0
   159  00061D                     STR_1:
   160  00061D  25                 	db	37
   161  00061E  6C                 	db	108	;'l'
   162  00061F  75                 	db	117	;'u'
   163  000620  00                 	db	0
   164  000621                     STR_121:
   165  000621  6C                 	db	108	;'l'
   166  000622  58                 	db	88	;'X'
   167  000623  00                 	db	0
   168  000624                     STR_130:
   169  000624  7A                 	db	122	;'z'
   170  000625  58                 	db	88	;'X'
   171  000626  00                 	db	0
   172  000627                     STR_21:
   173  000627  6C                 	db	108	;'l'
   174  000628  64                 	db	100	;'d'
   175  000629  00                 	db	0
   176  00062A                     STR_30:
   177  00062A  7A                 	db	122	;'z'
   178  00062B  64                 	db	100	;'d'
   179  00062C  00                 	db	0
   180  00062D                     STR_25:
   181  00062D  6C                 	db	108	;'l'
   182  00062E  69                 	db	105	;'i'
   183  00062F  00                 	db	0
   184  000630                     STR_34:
   185  000630  7A                 	db	122	;'z'
   186  000631  69                 	db	105	;'i'
   187  000632  00                 	db	0
   188  000633                     STR_69:
   189  000633  6C                 	db	108	;'l'
   190  000634  6E                 	db	110	;'n'
   191  000635  00                 	db	0
   192  000636                     STR_74:
   193  000636  7A                 	db	122	;'z'
   194  000637  6E                 	db	110	;'n'
   195  000638  00                 	db	0
   196  000639                     STR_49:
   197  000639  6C                 	db	108	;'l'
   198  00063A  6F                 	db	111	;'o'
   199  00063B  00                 	db	0
   200  00063C                     STR_54:
   201  00063C  7A                 	db	122	;'z'
   202  00063D  6F                 	db	111	;'o'
   203  00063E  00                 	db	0
   204  00063F                     STR_94:
   205  00063F  7A                 	db	122	;'z'
   206  000640  75                 	db	117	;'u'
   207  000641  00                 	db	0
   208  000642                     STR_117:
   209  000642  6C                 	db	108	;'l'
   210  000643  78                 	db	120	;'x'
   211  000644  00                 	db	0
   212  000645                     STR_126:
   213  000645  7A                 	db	122	;'z'
   214  000646  78                 	db	120	;'x'
   215  000647  00                 	db	0
   216  000648  25                 	db	37
   217  000649  64                 	db	100	;'d'
   218  00064A  00                 	db	0
   219  0000                     
   220                           ; #config settings
   221  00064B  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           	psect	cinit
   224  0010E4                     __pcinit:
   225                           	opt callstack 0
   226  0010E4                     start_initialization:
   227                           	opt callstack 0
   228  0010E4                     __initialization:
   229                           	opt callstack 0
   230                           
   231                           ; Initialize objects allocated to COMRAM (7 bytes)
   232                           ; load TBLPTR registers with __pidataCOMRAM
   233  0010E4  0E1C               	movlw	low __pidataCOMRAM
   234  0010E6  6EF6               	movwf	tblptrl,c
   235  0010E8  0E12               	movlw	high __pidataCOMRAM
   236  0010EA  6EF7               	movwf	tblptrh,c
   237  0010EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   238  0010EE  6EF8               	movwf	tblptru,c
   239  0010F0  EE00  F068         	lfsr	0,__pdataCOMRAM
   240  0010F4  EE10 F007          	lfsr	1,7
   241  0010F8                     copy_data0:
   242  0010F8  0009               	tblrd		*+
   243  0010FA  CFF5 FFEE          	movff	tablat,postinc0
   244  0010FE  50E5               	movf	postdec1,w,c
   245  001100  50E1               	movf	fsr1l,w,c
   246  001102  E1FA               	bnz	copy_data0
   247                           
   248                           ; Clear objects allocated to BANK0 (32 bytes)
   249  001104  EE00  F080         	lfsr	0,__pbssBANK0
   250  001108  0E20               	movlw	32
   251  00110A                     clear_0:
   252  00110A  6AEE               	clrf	postinc0,c
   253  00110C  06E8               	decf	wreg,f,c
   254  00110E  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (28 bytes)
   257  001110  EE00  F04C         	lfsr	0,__pbssCOMRAM
   258  001114  0E1C               	movlw	28
   259  001116                     clear_1:
   260  001116  6AEE               	clrf	postinc0,c
   261  001118  06E8               	decf	wreg,f,c
   262  00111A  E1FD               	bnz	clear_1
   263  00111C                     end_of_initialization:
   264                           	opt callstack 0
   265  00111C                     __end_of__initialization:
   266                           	opt callstack 0
   267  00111C  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  00111E  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  001120  0E00               	movlw	low (__Lsmallconst shr (0+16))
   270  001122  6EF8               	movwf	tblptru,c
   271  001124  0E06               	movlw	high __Lsmallconst
   272  001126  6EF7               	movwf	tblptrh,c
   273  001128  0100               	movlb	0
   274  00112A  EF06  F008         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277  00004C                     __pbssCOMRAM:
   278                           	opt callstack 0
   279  00004C                     _lcd:
   280                           	opt callstack 0
   281  00004C                     	ds	5
   282  000051                     _time_ms_2:
   283                           	opt callstack 0
   284  000051                     	ds	4
   285  000055                     _time_ms:
   286                           	opt callstack 0
   287  000055                     	ds	4
   288  000059                     _errno:
   289                           	opt callstack 0
   290  000059                     	ds	2
   291  00005B                     	ds	2
   292  00005D                     	ds	2
   293  00005F                     	ds	2
   294  000061                     	ds	2
   295  000063                     _interval_events:
   296                           	opt callstack 0
   297  000063                     	ds	2
   298  000065                     	ds	1
   299  000066                     	ds	1
   300  000067                     _flag:
   301                           	opt callstack 0
   302  000067                     	ds	1
   303                           
   304                           	psect	dataCOMRAM
   305  000068                     __pdataCOMRAM:
   306                           	opt callstack 0
   307  000068                     	ds	7
   308                           
   309                           	psect	bssBANK0
   310  000080                     __pbssBANK0:
   311                           	opt callstack 0
   312  000080                     	ds	32
   313                           
   314                           	psect	cstackCOMRAM
   315  000001                     __pcstackCOMRAM:
   316                           	opt callstack 0
   317  000001                     ?_ADC_Read:
   318                           	opt callstack 0
   319  000001                     ?___fladd:
   320                           	opt callstack 0
   321  000001                     ?___xxtofl:
   322                           	opt callstack 0
   323  000001                     set_duty_cycle@lower_2:
   324                           	opt callstack 0
   325  000001                     initialize_PWM@freq:
   326                           	opt callstack 0
   327  000001                     ___fladd@b:
   328                           	opt callstack 0
   329  000001                     ___xxtofl@val:
   330                           	opt callstack 0
   331                           
   332                           ; 4 bytes @ 0x0
   333  000001                     	ds	1
   334  000002                     set_duty_cycle@upper_8:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000002                     	ds	1
   339  000003                     ??_ADC_Read:
   340  000003                     set_duty_cycle@mask:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x2
   344  000003                     	ds	2
   345  000005                     ??___xxtofl:
   346  000005                     ADC_Read@channel:
   347                           	opt callstack 0
   348  000005                     ___fladd@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x4
   352  000005                     	ds	4
   353  000009                     ??___fladd:
   354  000009                     ___xxtofl@sign:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     ___xxtofl@exp:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0x9
   363  00000A                     	ds	1
   364  00000B                     ___xxtofl@arg:
   365                           	opt callstack 0
   366                           
   367                           ; 4 bytes @ 0xA
   368  00000B                     	ds	2
   369  00000D                     ___fladd@signs:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00000D                     	ds	1
   374  00000E                     ___fladd@aexp:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  00000E                     	ds	1
   379  00000F                     ?___flmul:
   380                           	opt callstack 0
   381  00000F                     ___fladd@bexp:
   382                           	opt callstack 0
   383  00000F                     ___flmul@b:
   384                           	opt callstack 0
   385                           
   386                           ; 4 bytes @ 0xE
   387  00000F                     	ds	1
   388  000010                     ___fladd@grs:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0xF
   392  000010                     	ds	3
   393  000013                     ___flmul@a:
   394                           	opt callstack 0
   395                           
   396                           ; 4 bytes @ 0x12
   397  000013                     	ds	4
   398  000017                     ??___flmul:
   399                           
   400                           ; 1 bytes @ 0x16
   401  000017                     	ds	4
   402  00001B                     ___flmul@sign:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x1A
   406  00001B                     	ds	1
   407  00001C                     ___flmul@grs:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x1B
   411  00001C                     	ds	4
   412  000020                     ___flmul@aexp:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x1F
   416  000020                     	ds	1
   417  000021                     ___flmul@bexp:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x20
   421  000021                     	ds	1
   422  000022                     ___flmul@prod:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x21
   426  000022                     	ds	4
   427  000026                     ___flmul@temp:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x25
   431  000026                     	ds	2
   432  000028                     ?___flsub:
   433                           	opt callstack 0
   434  000028                     ___flsub@b:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x27
   438  000028                     	ds	4
   439  00002C                     ___flsub@a:
   440                           	opt callstack 0
   441                           
   442                           ; 4 bytes @ 0x2B
   443  00002C                     	ds	4
   444  000030                     ?_get_temp:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0x2F
   448  000030                     	ds	4
   449  000034                     get_temp@real_voltage:
   450                           	opt callstack 0
   451                           
   452                           ; 4 bytes @ 0x33
   453  000034                     	ds	4
   454  000038                     get_temp@temp:
   455                           	opt callstack 0
   456                           
   457                           ; 4 bytes @ 0x37
   458  000038                     	ds	4
   459  00003C                     get_temp@adc_voltage:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x3B
   463  00003C                     	ds	2
   464  00003E                     ?___fltol:
   465                           	opt callstack 0
   466  00003E                     ___fltol@f1:
   467                           	opt callstack 0
   468                           
   469                           ; 4 bytes @ 0x3D
   470  00003E                     	ds	4
   471  000042                     ??___fltol:
   472                           
   473                           ; 1 bytes @ 0x41
   474  000042                     	ds	4
   475  000046                     ___fltol@sign1:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x45
   479  000046                     	ds	1
   480  000047                     ___fltol@exp1:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x46
   484  000047                     	ds	1
   485  000048                     main@address:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x47
   489  000048                     	ds	2
   490  00004A                     main@temp:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x49
   494  00004A                     	ds	2
   495                           
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 26 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  temp            2   73[COMRAM] int 
   506 ;;  address         2   71[COMRAM] int 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   516 ;;      Params:         0       0       0       0       0       0       0
   517 ;;      Locals:         4       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0
   519 ;;      Totals:         4       0       0       0       0       0       0
   520 ;;Total ram usage:        4 bytes
   521 ;; Hardware stack levels required when called:    5
   522 ;; This function calls:
   523 ;;		_Timer0_Init
   524 ;;		_Timer0_StartTimer
   525 ;;		___fltol
   526 ;;		_get_temp
   527 ;;		_initialize_PWM
   528 ;;		_initialize_RX
   529 ;;		_initialize_TX
   530 ;;		_set_duty_cycle
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text0
   537  00100C                     __ptext0:
   538                           	opt callstack 0
   539  00100C                     _main:
   540                           	opt callstack 0
   541  00100C  FFFF               	dw	65535	; assembler added errata NOP
   542                           
   543                           ;main.c: 27:   TRISCbits.TRISC2 = 0;
   544                           
   545                           ;incstack = 0
   546  00100E  9494               	bcf	3988,2,c	;volatile
   547                           
   548                           ;main.c: 28:   TMR2IE = 1;
   549  001010  829D               	bsf	3997,1,c	;volatile
   550                           
   551                           ;main.c: 29:   TMR2IP = 1;
   552  001012  829F               	bsf	3999,1,c	;volatile
   553                           
   554                           ;main.c: 30:   RCONbits.IPEN = 1;
   555  001014  8ED0               	bsf	4048,7,c	;volatile
   556                           
   557                           ;main.c: 31:   initialize_PWM(0xFF);
   558  001016  0E00               	movlw	0
   559  001018  6E02               	movwf	initialize_PWM@freq+1,c
   560  00101A  6801               	setf	initialize_PWM@freq,c
   561  00101C  ECDF  F008         	call	_initialize_PWM	;wreg free
   562  001020                     l2702:
   563  001020  FFFF               	dw	65535	; assembler added errata NOP
   564                           
   565                           ;main.c: 33:     int address = 0;
   566  001022  0E00               	movlw	0
   567  001024  6E49               	movwf	main@address+1,c
   568  001026  0E00               	movlw	0
   569  001028  6E48               	movwf	main@address,c
   570                           
   571                           ;main.c: 34:     Timer0_Init();
   572  00102A  ECBC  F008         	call	_Timer0_Init	;wreg free
   573                           
   574                           ;main.c: 35:     Timer0_StartTimer();
   575  00102E  EC06  F009         	call	_Timer0_StartTimer	;wreg free
   576                           
   577                           ;main.c: 36:     initialize_TX();
   578  001032  ECEB  F008         	call	_initialize_TX	;wreg free
   579                           
   580                           ;main.c: 37:     initialize_RX();
   581  001036  ECF5  F008         	call	_initialize_RX	;wreg free
   582                           
   583                           ;main.c: 38:     TRISCbits.TRISC7 = 1;
   584  00103A  8E94               	bsf	3988,7,c	;volatile
   585                           
   586                           ;main.c: 39:     TRISCbits.TRISC6 = 0;
   587  00103C  9C94               	bcf	3988,6,c	;volatile
   588                           
   589                           ;main.c: 40:     int temp = (int) get_temp();
   590  00103E  ECA1  F007         	call	_get_temp	;wreg free
   591  001042  C030  F03E         	movff	?_get_temp,___fltol@f1
   592  001046  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
   593  00104A  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
   594  00104E  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
   595  001052  EC37  F007         	call	___fltol	;wreg free
   596  001056  C03E  F04A         	movff	?___fltol,main@temp
   597  00105A  C03F  F04B         	movff	?___fltol+1,main@temp+1
   598                           
   599                           ;main.c: 42:     address++;
   600  00105E  4A48               	infsnz	main@address,f,c
   601  001060  2A49               	incf	main@address+1,f,c
   602                           
   603                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   604  001062  9E94               	bcf	3988,7,c	;volatile
   605                           
   606                           ;main.c: 44:     if (temp < 100) set_duty_cycle(0xA0, 0x03);
   607  001064  BE4B               	btfsc	main@temp+1,7,c
   608  001066  D006               	goto	u1730
   609  001068  504B               	movf	main@temp+1,w,c
   610  00106A  E10B               	bnz	l2726
   611  00106C  0E64               	movlw	100
   612  00106E  5C4A               	subwf	main@temp,w,c
   613  001070  B0D8               	btfsc	status,0,c
   614  001072  D007               	goto	l2726
   615  001074                     u1730:
   616  001074  FFFF               	dw	65535	; assembler added errata NOP
   617  001076  0E03               	movlw	3
   618  001078  6E01               	movwf	set_duty_cycle@lower_2,c
   619  00107A  0EA0               	movlw	160
   620  00107C  ECCE  F008         	call	_set_duty_cycle
   621  001080  D7CF               	goto	l2702
   622  001082                     l2726:
   623  001082  FFFF               	dw	65535	; assembler added errata NOP
   624  001084  0E03               	movlw	3
   625  001086  6E01               	movwf	set_duty_cycle@lower_2,c
   626  001088  0EFF               	movlw	255
   627  00108A  ECCE  F008         	call	_set_duty_cycle
   628  00108E  D7C8               	goto	l2702
   629  001090                     __end_of_main:
   630                           	opt callstack 0
   631                           
   632 ;; *************** function _set_duty_cycle *****************
   633 ;; Defined at:
   634 ;;		line 18 in file "pwm.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  upper_8         1    wreg     unsigned char 
   637 ;;  lower_2         1    0[COMRAM] unsigned char 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  upper_8         1    1[COMRAM] unsigned char 
   640 ;;  mask            1    2[COMRAM] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   650 ;;      Params:         1       0       0       0       0       0       0
   651 ;;      Locals:         2       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0
   653 ;;      Totals:         3       0       0       0       0       0       0
   654 ;;Total ram usage:        3 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    2
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665  00119C                     __ptext1:
   666                           	opt callstack 0
   667  00119C                     _set_duty_cycle:
   668                           	opt callstack 0
   669  00119C  FFFF               	dw	65535	; assembler added errata NOP
   670                           
   671                           ;incstack = 0
   672                           ;set_duty_cycle@upper_8 stored from wreg
   673  00119E  6E02               	movwf	set_duty_cycle@upper_8,c
   674                           
   675                           ;pwm.c: 19:   CCPR1L = upper_8;
   676  0011A0  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
   677                           
   678                           ;pwm.c: 20:   char mask = 0;
   679  0011A4  0E00               	movlw	0
   680  0011A6  6E03               	movwf	set_duty_cycle@mask,c
   681                           
   682                           ;pwm.c: 21:   mask |= lower_2;
   683  0011A8  5001               	movf	set_duty_cycle@lower_2,w,c
   684  0011AA  1203               	iorwf	set_duty_cycle@mask,f,c
   685                           
   686                           ;pwm.c: 22:   mask = mask << 4;
   687  0011AC  3803               	swapf	set_duty_cycle@mask,w,c
   688  0011AE  0BF0               	andlw	240
   689  0011B0  6E03               	movwf	set_duty_cycle@mask,c
   690                           
   691                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
   692  0011B2  50BD               	movf	4029,w,c	;volatile
   693  0011B4  0BCF               	andlw	207
   694  0011B6  1003               	iorwf	set_duty_cycle@mask,w,c
   695  0011B8  6EBD               	movwf	4029,c	;volatile
   696  0011BA  0012               	return		;funcret
   697  0011BC  FFFF               	dw	65535	; errata NOP
   698  0011BE                     __end_of_set_duty_cycle:
   699                           	opt callstack 0
   700                           
   701 ;; *************** function _initialize_TX *****************
   702 ;; Defined at:
   703 ;;		line 23 in file "serial.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   717 ;;      Params:         0       0       0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    2
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text2
   732  0011D6                     __ptext2:
   733                           	opt callstack 0
   734  0011D6                     _initialize_TX:
   735                           	opt callstack 0
   736  0011D6  FFFF               	dw	65535	; assembler added errata NOP
   737                           
   738                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
   739                           
   740                           ;incstack = 0
   741  0011D8  8CAC               	bsf	4012,6,c	;volatile
   742                           
   743                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
   744  0011DA  8AAC               	bsf	4012,5,c	;volatile
   745                           
   746                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
   747  0011DC  98AC               	bcf	4012,4,c	;volatile
   748                           
   749                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
   750  0011DE  94AC               	bcf	4012,2,c	;volatile
   751                           
   752                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
   753  0011E0  80AC               	bsf	4012,0,c	;volatile
   754                           
   755                           ;serial.c: 29:   SPBRG = 25;
   756  0011E2  0E19               	movlw	25
   757  0011E4  6EAF               	movwf	4015,c	;volatile
   758  0011E6  0012               	return		;funcret
   759  0011E8  FFFF               	dw	65535	; errata NOP
   760  0011EA                     __end_of_initialize_TX:
   761                           	opt callstack 0
   762                           
   763 ;; *************** function _initialize_RX *****************
   764 ;; Defined at:
   765 ;;		line 32 in file "serial.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   779 ;;      Params:         0       0       0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    2
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text3
   794  0011EA                     __ptext3:
   795                           	opt callstack 0
   796  0011EA                     _initialize_RX:
   797                           	opt callstack 0
   798  0011EA  FFFF               	dw	65535	; assembler added errata NOP
   799                           
   800                           ;serial.c: 33:   RCSTA = 0x00;
   801                           
   802                           ;incstack = 0
   803  0011EC  0E00               	movlw	0
   804  0011EE  6EAB               	movwf	4011,c	;volatile
   805                           
   806                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
   807  0011F0  8EAB               	bsf	4011,7,c	;volatile
   808                           
   809                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
   810  0011F2  8CAB               	bsf	4011,6,c	;volatile
   811                           
   812                           ;serial.c: 36:   RCSTAbits.CREN = 1;
   813  0011F4  88AB               	bsf	4011,4,c	;volatile
   814                           
   815                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
   816  0011F6  96AB               	bcf	4011,3,c	;volatile
   817                           
   818                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
   819  0011F8  80AB               	bsf	4011,0,c	;volatile
   820  0011FA  0012               	return		;funcret
   821  0011FC  FFFF               	dw	65535	; errata NOP
   822  0011FE                     __end_of_initialize_RX:
   823                           	opt callstack 0
   824                           
   825 ;; *************** function _initialize_PWM *****************
   826 ;; Defined at:
   827 ;;		line 5 in file "pwm.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  freq            2    0[COMRAM] int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         2       0       0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    2
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text4
   856  0011BE                     __ptext4:
   857                           	opt callstack 0
   858  0011BE                     _initialize_PWM:
   859                           	opt callstack 0
   860  0011BE  FFFF               	dw	65535	; assembler added errata NOP
   861                           
   862                           ;pwm.c: 6:   T2CON &= ~(0x40);
   863                           
   864                           ;incstack = 0
   865  0011C0  9CCA               	bcf	4042,6,c	;volatile
   866                           
   867                           ;pwm.c: 7:   PR2 = 0xFF;
   868  0011C2  68CB               	setf	4043,c	;volatile
   869                           
   870                           ;pwm.c: 8:   CCPR1L = 0xAA;
   871  0011C4  0EAA               	movlw	170
   872  0011C6  6EBE               	movwf	4030,c	;volatile
   873                           
   874                           ;pwm.c: 9:   CCP1CON |= 0x00;
   875  0011C8  50BD               	movf	4029,w,c	;volatile
   876                           
   877                           ;pwm.c: 10:   T2CON = 0x07;
   878  0011CA  0E07               	movlw	7
   879  0011CC  6ECA               	movwf	4042,c	;volatile
   880                           
   881                           ;pwm.c: 11:   CCP1CON |= 0x0C;
   882  0011CE  0E0C               	movlw	12
   883  0011D0  12BD               	iorwf	4029,f,c	;volatile
   884  0011D2  0012               	return		;funcret
   885  0011D4  FFFF               	dw	65535	; errata NOP
   886  0011D6                     __end_of_initialize_PWM:
   887                           	opt callstack 0
   888                           
   889 ;; *************** function _get_temp *****************
   890 ;; Defined at:
   891 ;;		line 10 in file "temp_adc.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  temp            4   55[COMRAM] float 
   896 ;;  real_voltage    4   51[COMRAM] float 
   897 ;;  adc_voltage     2   59[COMRAM] unsigned int 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  4   47[COMRAM] float 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         4       0       0       0       0       0       0
   908 ;;      Locals:        10       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0
   910 ;;      Totals:        14       0       0       0       0       0       0
   911 ;;Total ram usage:       14 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    4
   914 ;; This function calls:
   915 ;;		_ADC_Init
   916 ;;		_ADC_Read
   917 ;;		___flmul
   918 ;;		___flsub
   919 ;;		___xxtofl
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text5
   926  000F42                     __ptext5:
   927                           	opt callstack 0
   928  000F42                     _get_temp:
   929                           	opt callstack 0
   930  000F42  FFFF               	dw	65535	; assembler added errata NOP
   931                           
   932                           ;temp_adc.c: 11:   ADC_Init();
   933                           
   934                           ;incstack = 0
   935  000F44  ECFF  F008         	call	_ADC_Init	;wreg free
   936                           
   937                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
   938  000F48  90C1               	bcf	4033,0,c	;volatile
   939                           
   940                           ;temp_adc.c: 13:   TRISA |= 0x01;
   941  000F4A  8092               	bsf	3986,0,c	;volatile
   942                           
   943                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
   944  000F4C  0E00               	movlw	0
   945  000F4E  EC48  F008         	call	_ADC_Read
   946  000F52  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
   947  000F56  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
   948                           
   949                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
   950  000F5A  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
   951  000F5E  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
   952  000F62  6A03               	clrf	___xxtofl@val+2,c
   953  000F64  6A04               	clrf	___xxtofl@val+3,c
   954  000F66  0E00               	movlw	0
   955  000F68  EC89  F006         	call	___xxtofl
   956  000F6C  C001  F00F         	movff	?___xxtofl,___flmul@b
   957  000F70  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   958  000F74  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   959  000F78  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   960  000F7C  0E9F               	movlw	159
   961  000F7E  6E13               	movwf	___flmul@a,c
   962  000F80  0EAB               	movlw	171
   963  000F82  6E14               	movwf	___flmul@a+1,c
   964  000F84  0EAD               	movlw	173
   965  000F86  6E15               	movwf	___flmul@a+2,c
   966  000F88  0E3B               	movlw	59
   967  000F8A  6E16               	movwf	___flmul@a+3,c
   968  000F8C  EC26  F003         	call	___flmul	;wreg free
   969  000F90  C00F  F034         	movff	?___flmul,get_temp@real_voltage
   970  000F94  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
   971  000F98  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
   972  000F9C  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
   973                           
   974                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
   975  000FA0  0E00               	movlw	0
   976  000FA2  6E28               	movwf	___flsub@b,c
   977  000FA4  0E00               	movlw	0
   978  000FA6  6E29               	movwf	___flsub@b+1,c
   979  000FA8  0E48               	movlw	72
   980  000FAA  6E2A               	movwf	___flsub@b+2,c
   981  000FAC  0E43               	movlw	67
   982  000FAE  6E2B               	movwf	___flsub@b+3,c
   983  000FB0  0E00               	movlw	0
   984  000FB2  6E13               	movwf	___flmul@a,c
   985  000FB4  0E00               	movlw	0
   986  000FB6  6E14               	movwf	___flmul@a+1,c
   987  000FB8  0E0C               	movlw	12
   988  000FBA  6E15               	movwf	___flmul@a+2,c
   989  000FBC  0E42               	movlw	66
   990  000FBE  6E16               	movwf	___flmul@a+3,c
   991  000FC0  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
   992  000FC4  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
   993  000FC8  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
   994  000FCC  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
   995  000FD0  EC26  F003         	call	___flmul	;wreg free
   996  000FD4  C00F  F02C         	movff	?___flmul,___flsub@a
   997  000FD8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
   998  000FDC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
   999  000FE0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  1000  000FE4  EC97  F008         	call	___flsub	;wreg free
  1001  000FE8  C028  F038         	movff	?___flsub,get_temp@temp
  1002  000FEC  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  1003  000FF0  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  1004  000FF4  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  1005                           
  1006                           ;temp_adc.c: 18:   return temp;
  1007  000FF8  C038  F030         	movff	get_temp@temp,?_get_temp
  1008  000FFC  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  1009  001000  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  1010  001004  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  1011  001008  0012               	return		;funcret
  1012  00100A  FFFF               	dw	65535	; errata NOP
  1013  00100C                     __end_of_get_temp:
  1014                           	opt callstack 0
  1015                           
  1016 ;; *************** function ___xxtofl *****************
  1017 ;; Defined at:
  1018 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  sign            1    wreg     unsigned char 
  1021 ;;  val             4    0[COMRAM] long 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  sign            1    8[COMRAM] unsigned char 
  1024 ;;  arg             4   10[COMRAM] unsigned long 
  1025 ;;  exp             1    9[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  4    0[COMRAM] unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1035 ;;      Params:         4       0       0       0       0       0       0
  1036 ;;      Locals:         6       0       0       0       0       0       0
  1037 ;;      Temps:          4       0       0       0       0       0       0
  1038 ;;      Totals:        14       0       0       0       0       0       0
  1039 ;;Total ram usage:       14 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_get_temp
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text6
  1050  000D12                     __ptext6:
  1051                           	opt callstack 0
  1052  000D12                     ___xxtofl:
  1053                           	opt callstack 0
  1054  000D12  FFFF               	dw	65535	; assembler added errata NOP
  1055                           
  1056                           ;incstack = 0
  1057                           ;___xxtofl@sign stored from wreg
  1058  000D14  6E09               	movwf	___xxtofl@sign,c
  1059  000D16  5009               	movf	___xxtofl@sign,w,c
  1060  000D18  A4D8               	btfss	status,2,c
  1061  000D1A  AE04               	btfss	___xxtofl@val+3,7,c
  1062  000D1C  D01A               	goto	l1217
  1063  000D1E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1064  000D22  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1065  000D26  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1066  000D2A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1067  000D2E  1E05               	comf	??___xxtofl,f,c
  1068  000D30  1E06               	comf	??___xxtofl+1,f,c
  1069  000D32  1E07               	comf	??___xxtofl+2,f,c
  1070  000D34  1E08               	comf	??___xxtofl+3,f,c
  1071  000D36  2A05               	incf	??___xxtofl,f,c
  1072  000D38  0E00               	movlw	0
  1073  000D3A  2206               	addwfc	??___xxtofl+1,f,c
  1074  000D3C  2207               	addwfc	??___xxtofl+2,f,c
  1075  000D3E  2208               	addwfc	??___xxtofl+3,f,c
  1076  000D40  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1077  000D44  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1078  000D48  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1079  000D4C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1080  000D50  D009               	goto	l2578
  1081  000D52                     l1217:
  1082  000D52  FFFF               	dw	65535	; assembler added errata NOP
  1083  000D54  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1084  000D58  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1085  000D5C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1086  000D60  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1087  000D64                     l2578:
  1088  000D64  FFFF               	dw	65535	; assembler added errata NOP
  1089  000D66  5001               	movf	___xxtofl@val,w,c
  1090  000D68  1002               	iorwf	___xxtofl@val+1,w,c
  1091  000D6A  1003               	iorwf	___xxtofl@val+2,w,c
  1092  000D6C  1004               	iorwf	___xxtofl@val+3,w,c
  1093  000D6E  A4D8               	btfss	status,2,c
  1094  000D70  D009               	goto	l2584
  1095  000D72  0E00               	movlw	0
  1096  000D74  6E01               	movwf	?___xxtofl,c
  1097  000D76  0E00               	movlw	0
  1098  000D78  6E02               	movwf	?___xxtofl+1,c
  1099  000D7A  0E00               	movlw	0
  1100  000D7C  6E03               	movwf	?___xxtofl+2,c
  1101  000D7E  0E00               	movlw	0
  1102  000D80  6E04               	movwf	?___xxtofl+3,c
  1103  000D82  D072               	goto	l1220
  1104  000D84                     l2584:
  1105  000D84  FFFF               	dw	65535	; assembler added errata NOP
  1106  000D86  0E96               	movlw	150
  1107  000D88  6E0A               	movwf	___xxtofl@exp,c
  1108  000D8A  D007               	goto	l2588
  1109  000D8C                     l2586:
  1110  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  1111  000D8E  2A0A               	incf	___xxtofl@exp,f,c
  1112  000D90  90D8               	bcf	status,0,c
  1113  000D92  320E               	rrcf	___xxtofl@arg+3,f,c
  1114  000D94  320D               	rrcf	___xxtofl@arg+2,f,c
  1115  000D96  320C               	rrcf	___xxtofl@arg+1,f,c
  1116  000D98  320B               	rrcf	___xxtofl@arg,f,c
  1117  000D9A                     l2588:
  1118  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  1119  000D9C  0E00               	movlw	0
  1120  000D9E  140B               	andwf	___xxtofl@arg,w,c
  1121  000DA0  6E05               	movwf	??___xxtofl& (0+255),c
  1122  000DA2  0E00               	movlw	0
  1123  000DA4  140C               	andwf	___xxtofl@arg+1,w,c
  1124  000DA6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1125  000DA8  0E00               	movlw	0
  1126  000DAA  140D               	andwf	___xxtofl@arg+2,w,c
  1127  000DAC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1128  000DAE  0EFE               	movlw	254
  1129  000DB0  140E               	andwf	___xxtofl@arg+3,w,c
  1130  000DB2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1131  000DB4  5005               	movf	??___xxtofl,w,c
  1132  000DB6  1006               	iorwf	??___xxtofl+1,w,c
  1133  000DB8  1007               	iorwf	??___xxtofl+2,w,c
  1134  000DBA  1008               	iorwf	??___xxtofl+3,w,c
  1135  000DBC  B4D8               	btfsc	status,2,c
  1136  000DBE  D00E               	goto	l1224
  1137  000DC0  D7E5               	goto	l2586
  1138  000DC2                     l2590:
  1139  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  1140  000DC4  2A0A               	incf	___xxtofl@exp,f,c
  1141  000DC6  0E01               	movlw	1
  1142  000DC8  260B               	addwf	___xxtofl@arg,f,c
  1143  000DCA  0E00               	movlw	0
  1144  000DCC  220C               	addwfc	___xxtofl@arg+1,f,c
  1145  000DCE  220D               	addwfc	___xxtofl@arg+2,f,c
  1146  000DD0  220E               	addwfc	___xxtofl@arg+3,f,c
  1147  000DD2  90D8               	bcf	status,0,c
  1148  000DD4  320E               	rrcf	___xxtofl@arg+3,f,c
  1149  000DD6  320D               	rrcf	___xxtofl@arg+2,f,c
  1150  000DD8  320C               	rrcf	___xxtofl@arg+1,f,c
  1151  000DDA  320B               	rrcf	___xxtofl@arg,f,c
  1152  000DDC                     l1224:
  1153  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  1154  000DDE  0E00               	movlw	0
  1155  000DE0  140B               	andwf	___xxtofl@arg,w,c
  1156  000DE2  6E05               	movwf	??___xxtofl& (0+255),c
  1157  000DE4  0E00               	movlw	0
  1158  000DE6  140C               	andwf	___xxtofl@arg+1,w,c
  1159  000DE8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1160  000DEA  0E00               	movlw	0
  1161  000DEC  140D               	andwf	___xxtofl@arg+2,w,c
  1162  000DEE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1163  000DF0  0EFF               	movlw	255
  1164  000DF2  140E               	andwf	___xxtofl@arg+3,w,c
  1165  000DF4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1166  000DF6  5005               	movf	??___xxtofl,w,c
  1167  000DF8  1006               	iorwf	??___xxtofl+1,w,c
  1168  000DFA  1007               	iorwf	??___xxtofl+2,w,c
  1169  000DFC  1008               	iorwf	??___xxtofl+3,w,c
  1170  000DFE  B4D8               	btfsc	status,2,c
  1171  000E00  D008               	goto	l2598
  1172  000E02  D7DF               	goto	l2590
  1173  000E04                     l2596:
  1174  000E04  FFFF               	dw	65535	; assembler added errata NOP
  1175  000E06  060A               	decf	___xxtofl@exp,f,c
  1176  000E08  90D8               	bcf	status,0,c
  1177  000E0A  360B               	rlcf	___xxtofl@arg,f,c
  1178  000E0C  360C               	rlcf	___xxtofl@arg+1,f,c
  1179  000E0E  360D               	rlcf	___xxtofl@arg+2,f,c
  1180  000E10  360E               	rlcf	___xxtofl@arg+3,f,c
  1181  000E12                     l2598:
  1182  000E12  FFFF               	dw	65535	; assembler added errata NOP
  1183  000E14  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1184  000E16  D003               	goto	u1620
  1185  000E18  0E02               	movlw	2
  1186  000E1A  600A               	cpfslt	___xxtofl@exp,c
  1187  000E1C  D7F3               	goto	l2596
  1188  000E1E                     u1620:
  1189  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  1190  000E20  A00A               	btfss	___xxtofl@exp,0,c
  1191  000E22  9E0D               	bcf	___xxtofl@arg+2,7,c
  1192  000E24  90D8               	bcf	status,0,c
  1193  000E26  320A               	rrcf	___xxtofl@exp,f,c
  1194  000E28  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1195  000E2C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1196  000E2E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1197  000E30  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1198  000E32  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1199  000E36  6A07               	clrf	??___xxtofl+2,c
  1200  000E38  6A06               	clrf	??___xxtofl+1,c
  1201  000E3A  6A05               	clrf	??___xxtofl,c
  1202  000E3C  5005               	movf	??___xxtofl,w,c
  1203  000E3E  120B               	iorwf	___xxtofl@arg,f,c
  1204  000E40  5006               	movf	??___xxtofl+1,w,c
  1205  000E42  120C               	iorwf	___xxtofl@arg+1,f,c
  1206  000E44  5007               	movf	??___xxtofl+2,w,c
  1207  000E46  120D               	iorwf	___xxtofl@arg+2,f,c
  1208  000E48  5008               	movf	??___xxtofl+3,w,c
  1209  000E4A  120E               	iorwf	___xxtofl@arg+3,f,c
  1210  000E4C  5009               	movf	___xxtofl@sign,w,c
  1211  000E4E  A4D8               	btfss	status,2,c
  1212  000E50  AE04               	btfss	___xxtofl@val+3,7,c
  1213  000E52  D001               	goto	l2614
  1214  000E54  8E0E               	bsf	___xxtofl@arg+3,7,c
  1215  000E56                     l2614:
  1216  000E56  FFFF               	dw	65535	; assembler added errata NOP
  1217  000E58  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1218  000E5C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1219  000E60  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1220  000E64  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1221  000E68                     l1220:
  1222  000E68  FFFF               	dw	65535	; assembler added errata NOP
  1223  000E6A  0012               	return		;funcret
  1224  000E6C  FFFF               	dw	65535	; errata NOP
  1225  000E6E                     __end_of___xxtofl:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function ___flsub *****************
  1229 ;; Defined at:
  1230 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  b               4   39[COMRAM] unsigned char 
  1233 ;;  a               4   43[COMRAM] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  4   39[COMRAM] unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         8       0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         8       0       0       0       0       0       0
  1249 ;;Total ram usage:        8 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    3
  1252 ;; This function calls:
  1253 ;;		___fladd
  1254 ;; This function is called by:
  1255 ;;		_get_temp
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text7
  1260  00112E                     __ptext7:
  1261                           	opt callstack 0
  1262  00112E                     ___flsub:
  1263                           	opt callstack 0
  1264  00112E  FFFF               	dw	65535	; assembler added errata NOP
  1265                           
  1266                           ;incstack = 0
  1267  001130  0E00               	movlw	0
  1268  001132  1A2C               	xorwf	___flsub@a,f,c
  1269  001134  0E00               	movlw	0
  1270  001136  1A2D               	xorwf	___flsub@a+1,f,c
  1271  001138  0E00               	movlw	0
  1272  00113A  1A2E               	xorwf	___flsub@a+2,f,c
  1273  00113C  0E80               	movlw	128
  1274  00113E  1A2F               	xorwf	___flsub@a+3,f,c
  1275  001140  C028  F001         	movff	___flsub@b,___fladd@b
  1276  001144  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  1277  001148  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  1278  00114C  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  1279  001150  C02C  F005         	movff	___flsub@a,___fladd@a
  1280  001154  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  1281  001158  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  1282  00115C  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  1283  001160  ECE7  F004         	call	___fladd	;wreg free
  1284  001164  C001  F028         	movff	?___fladd,?___flsub
  1285  001168  C002  F029         	movff	?___fladd+1,?___flsub+1
  1286  00116C  C003  F02A         	movff	?___fladd+2,?___flsub+2
  1287  001170  C004  F02B         	movff	?___fladd+3,?___flsub+3
  1288  001174  0012               	return		;funcret
  1289  001176  FFFF               	dw	65535	; errata NOP
  1290  001178                     __end_of___flsub:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function ___fladd *****************
  1294 ;; Defined at:
  1295 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  b               4    0[COMRAM] unsigned char 
  1298 ;;  a               4    4[COMRAM] unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  grs             1   15[COMRAM] unsigned char 
  1301 ;;  bexp            1   14[COMRAM] unsigned char 
  1302 ;;  aexp            1   13[COMRAM] unsigned char 
  1303 ;;  signs           1   12[COMRAM] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  4    0[COMRAM] unsigned char 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1313 ;;      Params:         8       0       0       0       0       0       0
  1314 ;;      Locals:         4       0       0       0       0       0       0
  1315 ;;      Temps:          4       0       0       0       0       0       0
  1316 ;;      Totals:        16       0       0       0       0       0       0
  1317 ;;Total ram usage:       16 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    2
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		___flsub
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text8
  1328  0009CE                     __ptext8:
  1329                           	opt callstack 0
  1330  0009CE                     ___fladd:
  1331                           	opt callstack 0
  1332  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  1333                           
  1334                           ;incstack = 0
  1335  0009D0  5004               	movf	___fladd@b+3,w,c
  1336  0009D2  0B80               	andlw	128
  1337  0009D4  6E0D               	movwf	___fladd@signs,c
  1338  0009D6  5004               	movf	___fladd@b+3,w,c
  1339  0009D8  2404               	addwf	___fladd@b+3,w,c
  1340  0009DA  6E0F               	movwf	___fladd@bexp,c
  1341  0009DC  BE03               	btfsc	___fladd@b+2,7,c
  1342  0009DE  800F               	bsf	___fladd@bexp,0,c
  1343  0009E0  500F               	movf	___fladd@bexp,w,c
  1344  0009E2  B4D8               	btfsc	status,2,c
  1345  0009E4  D00E               	goto	l2234
  1346  0009E6  280F               	incf	___fladd@bexp,w,c
  1347  0009E8  A4D8               	btfss	status,2,c
  1348  0009EA  D008               	goto	l2230
  1349  0009EC  0E00               	movlw	0
  1350  0009EE  6E01               	movwf	___fladd@b,c
  1351  0009F0  0E00               	movlw	0
  1352  0009F2  6E02               	movwf	___fladd@b+1,c
  1353  0009F4  0E00               	movlw	0
  1354  0009F6  6E03               	movwf	___fladd@b+2,c
  1355  0009F8  0E00               	movlw	0
  1356  0009FA  6E04               	movwf	___fladd@b+3,c
  1357  0009FC                     l2230:
  1358  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  1359  0009FE  8E03               	bsf	___fladd@b+2,7,c
  1360  000A00  D007               	goto	L1
  1361  000A02                     l2234:
  1362  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1363  000A04  0E00               	movlw	0
  1364  000A06  6E01               	movwf	___fladd@b,c
  1365  000A08  0E00               	movlw	0
  1366  000A0A  6E02               	movwf	___fladd@b+1,c
  1367  000A0C  0E00               	movlw	0
  1368  000A0E  6E03               	movwf	___fladd@b+2,c
  1369  000A10                     L1:
  1370  000A10  FFFF               	dw	65535	; assembler added errata NOP
  1371  000A12  0E00               	movlw	0
  1372  000A14  6E04               	movwf	___fladd@b+3,c
  1373  000A16  5008               	movf	___fladd@a+3,w,c
  1374  000A18  0B80               	andlw	128
  1375  000A1A  6E0E               	movwf	___fladd@aexp,c
  1376  000A1C  500D               	movf	___fladd@signs,w,c
  1377  000A1E  180E               	xorwf	___fladd@aexp,w,c
  1378  000A20  A4D8               	btfss	status,2,c
  1379  000A22  8C0D               	bsf	___fladd@signs,6,c
  1380  000A24  5008               	movf	___fladd@a+3,w,c
  1381  000A26  2408               	addwf	___fladd@a+3,w,c
  1382  000A28  6E0E               	movwf	___fladd@aexp,c
  1383  000A2A  BE07               	btfsc	___fladd@a+2,7,c
  1384  000A2C  800E               	bsf	___fladd@aexp,0,c
  1385  000A2E  500E               	movf	___fladd@aexp,w,c
  1386  000A30  B4D8               	btfsc	status,2,c
  1387  000A32  D00E               	goto	l2258
  1388  000A34  280E               	incf	___fladd@aexp,w,c
  1389  000A36  A4D8               	btfss	status,2,c
  1390  000A38  D008               	goto	l2254
  1391  000A3A  0E00               	movlw	0
  1392  000A3C  6E05               	movwf	___fladd@a,c
  1393  000A3E  0E00               	movlw	0
  1394  000A40  6E06               	movwf	___fladd@a+1,c
  1395  000A42  0E00               	movlw	0
  1396  000A44  6E07               	movwf	___fladd@a+2,c
  1397  000A46  0E00               	movlw	0
  1398  000A48  6E08               	movwf	___fladd@a+3,c
  1399  000A4A                     l2254:
  1400  000A4A  FFFF               	dw	65535	; assembler added errata NOP
  1401  000A4C  8E07               	bsf	___fladd@a+2,7,c
  1402  000A4E  D007               	goto	L2
  1403  000A50                     l2258:
  1404  000A50  FFFF               	dw	65535	; assembler added errata NOP
  1405  000A52  0E00               	movlw	0
  1406  000A54  6E05               	movwf	___fladd@a,c
  1407  000A56  0E00               	movlw	0
  1408  000A58  6E06               	movwf	___fladd@a+1,c
  1409  000A5A  0E00               	movlw	0
  1410  000A5C  6E07               	movwf	___fladd@a+2,c
  1411  000A5E                     L2:
  1412  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  1413  000A60  0E00               	movlw	0
  1414  000A62  6E08               	movwf	___fladd@a+3,c
  1415  000A64  500F               	movf	___fladd@bexp,w,c
  1416  000A66  5C0E               	subwf	___fladd@aexp,w,c
  1417  000A68  B0D8               	btfsc	status,0,c
  1418  000A6A  D023               	goto	l2296
  1419  000A6C  AC0D               	btfss	___fladd@signs,6,c
  1420  000A6E  D002               	goto	l2266
  1421  000A70  0E80               	movlw	128
  1422  000A72  1A0D               	xorwf	___fladd@signs,f,c
  1423  000A74                     l2266:
  1424  000A74  FFFF               	dw	65535	; assembler added errata NOP
  1425  000A76  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  1426  000A7A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1427  000A7E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  1428  000A82  C001  F010         	movff	___fladd@b,___fladd@grs
  1429  000A86  C005  F001         	movff	___fladd@a,___fladd@b
  1430  000A8A  C010  F005         	movff	___fladd@grs,___fladd@a
  1431  000A8E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  1432  000A92  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  1433  000A96  C010  F006         	movff	___fladd@grs,___fladd@a+1
  1434  000A9A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  1435  000A9E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  1436  000AA2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  1437  000AA6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  1438  000AAA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  1439  000AAE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  1440  000AB2                     l2296:
  1441  000AB2  FFFF               	dw	65535	; assembler added errata NOP
  1442  000AB4  0E00               	movlw	0
  1443  000AB6  6E10               	movwf	___fladd@grs,c
  1444  000AB8  500F               	movf	___fladd@bexp,w,c
  1445  000ABA  C00E  F009         	movff	___fladd@aexp,??___fladd
  1446  000ABE  6A0A               	clrf	(??___fladd+1)& (0+255),c
  1447  000AC0  5E09               	subwf	??___fladd,f,c
  1448  000AC2  0E00               	movlw	0
  1449  000AC4  5A0A               	subwfb	??___fladd+1,f,c
  1450  000AC6  BE0A               	btfsc	??___fladd+1,7,c
  1451  000AC8  D031               	goto	l1091
  1452  000ACA  500A               	movf	??___fladd+1,w,c
  1453  000ACC  E104               	bnz	u1050
  1454  000ACE  0E1A               	movlw	26
  1455  000AD0  5C09               	subwf	??___fladd,w,c
  1456  000AD2  A0D8               	btfss	status,0,c
  1457  000AD4  D02B               	goto	l1091
  1458  000AD6                     u1050:
  1459  000AD6  5001               	movf	___fladd@b,w,c
  1460  000AD8  1002               	iorwf	___fladd@b+1,w,c
  1461  000ADA  1003               	iorwf	___fladd@b+2,w,c
  1462  000ADC  1004               	iorwf	___fladd@b+3,w,c
  1463  000ADE  B4D8               	btfsc	status,2,c
  1464  000AE0  D002               	goto	u1060
  1465  000AE2  0E01               	movlw	1
  1466  000AE4  D002               	goto	u1070
  1467  000AE6                     u1060:
  1468  000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1469  000AE8  0E00               	movlw	0
  1470  000AEA                     u1070:
  1471  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  1472  000AEC  6E10               	movwf	___fladd@grs,c
  1473  000AEE  0E00               	movlw	0
  1474  000AF0  6E01               	movwf	___fladd@b,c
  1475  000AF2  0E00               	movlw	0
  1476  000AF4  6E02               	movwf	___fladd@b+1,c
  1477  000AF6  0E00               	movlw	0
  1478  000AF8  6E03               	movwf	___fladd@b+2,c
  1479  000AFA  0E00               	movlw	0
  1480  000AFC  6E04               	movwf	___fladd@b+3,c
  1481  000AFE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1482  000B02  D019               	goto	u1100
  1483  000B04                     l1092:
  1484  000B04  FFFF               	dw	65535	; assembler added errata NOP
  1485  000B06  A010               	btfss	___fladd@grs,0,c
  1486  000B08  D005               	goto	l2308
  1487  000B0A  90D8               	bcf	status,0,c
  1488  000B0C  3010               	rrcf	___fladd@grs,w,c
  1489  000B0E  0901               	iorlw	1
  1490  000B10  6E10               	movwf	___fladd@grs,c
  1491  000B12  D003               	goto	l2310
  1492  000B14                     l2308:
  1493  000B14  FFFF               	dw	65535	; assembler added errata NOP
  1494  000B16  90D8               	bcf	status,0,c
  1495  000B18  3210               	rrcf	___fladd@grs,f,c
  1496  000B1A                     l2310:
  1497  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  1498  000B1C  B001               	btfsc	___fladd@b,0,c
  1499  000B1E  8E10               	bsf	___fladd@grs,7,c
  1500  000B20  3404               	rlcf	___fladd@b+3,w,c
  1501  000B22  3204               	rrcf	___fladd@b+3,f,c
  1502  000B24  3203               	rrcf	___fladd@b+2,f,c
  1503  000B26  3202               	rrcf	___fladd@b+1,f,c
  1504  000B28  3201               	rrcf	___fladd@b,f,c
  1505  000B2A  2A0F               	incf	___fladd@bexp,f,c
  1506  000B2C                     l1091:
  1507  000B2C  FFFF               	dw	65535	; assembler added errata NOP
  1508  000B2E  500E               	movf	___fladd@aexp,w,c
  1509  000B30  5C0F               	subwf	___fladd@bexp,w,c
  1510  000B32  A0D8               	btfss	status,0,c
  1511  000B34  D7E7               	goto	l1092
  1512  000B36                     u1100:
  1513  000B36  FFFF               	dw	65535	; assembler added errata NOP
  1514  000B38  BC0D               	btfsc	___fladd@signs,6,c
  1515  000B3A  D021               	goto	l2342
  1516  000B3C  500F               	movf	___fladd@bexp,w,c
  1517  000B3E  B4D8               	btfsc	status,2,c
  1518  000B40  D065               	goto	u1190
  1519  000B42  5005               	movf	___fladd@a,w,c
  1520  000B44  2601               	addwf	___fladd@b,f,c
  1521  000B46  5006               	movf	___fladd@a+1,w,c
  1522  000B48  2202               	addwfc	___fladd@b+1,f,c
  1523  000B4A  5007               	movf	___fladd@a+2,w,c
  1524  000B4C  2203               	addwfc	___fladd@b+2,f,c
  1525  000B4E  5008               	movf	___fladd@a+3,w,c
  1526  000B50  2204               	addwfc	___fladd@b+3,f,c
  1527  000B52  A004               	btfss	___fladd@b+3,0,c
  1528  000B54  D07B               	goto	u1230
  1529  000B56  A010               	btfss	___fladd@grs,0,c
  1530  000B58  D005               	goto	l2332
  1531  000B5A  90D8               	bcf	status,0,c
  1532  000B5C  3010               	rrcf	___fladd@grs,w,c
  1533  000B5E  0901               	iorlw	1
  1534  000B60  6E10               	movwf	___fladd@grs,c
  1535  000B62  D003               	goto	l2334
  1536  000B64                     l2332:
  1537  000B64  FFFF               	dw	65535	; assembler added errata NOP
  1538  000B66  90D8               	bcf	status,0,c
  1539  000B68  3210               	rrcf	___fladd@grs,f,c
  1540  000B6A                     l2334:
  1541  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  1542  000B6C  B001               	btfsc	___fladd@b,0,c
  1543  000B6E  8E10               	bsf	___fladd@grs,7,c
  1544  000B70  3404               	rlcf	___fladd@b+3,w,c
  1545  000B72  3204               	rrcf	___fladd@b+3,f,c
  1546  000B74  3203               	rrcf	___fladd@b+2,f,c
  1547  000B76  3202               	rrcf	___fladd@b+1,f,c
  1548  000B78  3201               	rrcf	___fladd@b,f,c
  1549  000B7A  2A0F               	incf	___fladd@bexp,f,c
  1550  000B7C  D067               	goto	u1230
  1551  000B7E                     l2342:
  1552  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  1553  000B80  5005               	movf	___fladd@a,w,c
  1554  000B82  5C01               	subwf	___fladd@b,w,c
  1555  000B84  5006               	movf	___fladd@a+1,w,c
  1556  000B86  5802               	subwfb	___fladd@b+1,w,c
  1557  000B88  5007               	movf	___fladd@a+2,w,c
  1558  000B8A  5803               	subwfb	___fladd@b+2,w,c
  1559  000B8C  5004               	movf	___fladd@b+3,w,c
  1560  000B8E  0A80               	xorlw	128
  1561  000B90  6E09               	movwf	??___fladd& (0+255),c
  1562  000B92  5008               	movf	___fladd@a+3,w,c
  1563  000B94  0A80               	xorlw	128
  1564  000B96  5809               	subwfb	??___fladd& (0+255),w,c
  1565  000B98  B0D8               	btfsc	status,0,c
  1566  000B9A  D025               	goto	l2352
  1567  000B9C  5001               	movf	___fladd@b,w,c
  1568  000B9E  5C05               	subwf	___fladd@a,w,c
  1569  000BA0  6E09               	movwf	??___fladd& (0+255),c
  1570  000BA2  5002               	movf	___fladd@b+1,w,c
  1571  000BA4  5806               	subwfb	___fladd@a+1,w,c
  1572  000BA6  6E0A               	movwf	(??___fladd+1)& (0+255),c
  1573  000BA8  5003               	movf	___fladd@b+2,w,c
  1574  000BAA  5807               	subwfb	___fladd@a+2,w,c
  1575  000BAC  6E0B               	movwf	(??___fladd+2)& (0+255),c
  1576  000BAE  5004               	movf	___fladd@b+3,w,c
  1577  000BB0  5808               	subwfb	___fladd@a+3,w,c
  1578  000BB2  6E0C               	movwf	(??___fladd+3)& (0+255),c
  1579  000BB4  0EFF               	movlw	255
  1580  000BB6  2409               	addwf	??___fladd,w,c
  1581  000BB8  6E01               	movwf	___fladd@b,c
  1582  000BBA  0EFF               	movlw	255
  1583  000BBC  200A               	addwfc	??___fladd+1,w,c
  1584  000BBE  6E02               	movwf	___fladd@b+1,c
  1585  000BC0  0EFF               	movlw	255
  1586  000BC2  200B               	addwfc	??___fladd+2,w,c
  1587  000BC4  6E03               	movwf	___fladd@b+2,c
  1588  000BC6  0EFF               	movlw	255
  1589  000BC8  200C               	addwfc	??___fladd+3,w,c
  1590  000BCA  6E04               	movwf	___fladd@b+3,c
  1591  000BCC  0E80               	movlw	128
  1592  000BCE  1A0D               	xorwf	___fladd@signs,f,c
  1593  000BD0  6C10               	negf	___fladd@grs,c
  1594  000BD2  5010               	movf	___fladd@grs,w,c
  1595  000BD4  A4D8               	btfss	status,2,c
  1596  000BD6  D010               	goto	l1107
  1597  000BD8  0E01               	movlw	1
  1598  000BDA  2601               	addwf	___fladd@b,f,c
  1599  000BDC  0E00               	movlw	0
  1600  000BDE  2202               	addwfc	___fladd@b+1,f,c
  1601  000BE0  2203               	addwfc	___fladd@b+2,f,c
  1602  000BE2  2204               	addwfc	___fladd@b+3,f,c
  1603  000BE4  D009               	goto	l1107
  1604  000BE6                     l2352:
  1605  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  1606  000BE8  5005               	movf	___fladd@a,w,c
  1607  000BEA  5E01               	subwf	___fladd@b,f,c
  1608  000BEC  5006               	movf	___fladd@a+1,w,c
  1609  000BEE  5A02               	subwfb	___fladd@b+1,f,c
  1610  000BF0  5007               	movf	___fladd@a+2,w,c
  1611  000BF2  5A03               	subwfb	___fladd@b+2,f,c
  1612  000BF4  5008               	movf	___fladd@a+3,w,c
  1613  000BF6  5A04               	subwfb	___fladd@b+3,f,c
  1614  000BF8                     l1107:
  1615  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  1616  000BFA  5001               	movf	___fladd@b,w,c
  1617  000BFC  1002               	iorwf	___fladd@b+1,w,c
  1618  000BFE  1003               	iorwf	___fladd@b+2,w,c
  1619  000C00  1004               	iorwf	___fladd@b+3,w,c
  1620  000C02  A4D8               	btfss	status,2,c
  1621  000C04  D020               	goto	l2376
  1622  000C06  5010               	movf	___fladd@grs,w,c
  1623  000C08  A4D8               	btfss	status,2,c
  1624  000C0A  D01D               	goto	l2376
  1625  000C0C                     u1190:
  1626  000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1627  000C0E  0E00               	movlw	0
  1628  000C10  6E01               	movwf	?___fladd,c
  1629  000C12  0E00               	movlw	0
  1630  000C14  6E02               	movwf	?___fladd+1,c
  1631  000C16  0E00               	movlw	0
  1632  000C18  6E03               	movwf	?___fladd+2,c
  1633  000C1A  0E00               	movlw	0
  1634  000C1C  6E04               	movwf	?___fladd+3,c
  1635  000C1E  D076               	goto	l1099
  1636  000C20                     l2360:
  1637  000C20  FFFF               	dw	65535	; assembler added errata NOP
  1638  000C22  90D8               	bcf	status,0,c
  1639  000C24  3601               	rlcf	___fladd@b,f,c
  1640  000C26  3602               	rlcf	___fladd@b+1,f,c
  1641  000C28  3603               	rlcf	___fladd@b+2,f,c
  1642  000C2A  3604               	rlcf	___fladd@b+3,f,c
  1643  000C2C  BE10               	btfsc	___fladd@grs,7,c
  1644  000C2E  8001               	bsf	___fladd@b,0,c
  1645  000C30  A010               	btfss	___fladd@grs,0,c
  1646  000C32  D002               	goto	l2370
  1647  000C34  80D8               	bsf	status,0,c
  1648  000C36  D002               	goto	L3
  1649  000C38                     l2370:
  1650  000C38  FFFF               	dw	65535	; assembler added errata NOP
  1651  000C3A  90D8               	bcf	status,0,c
  1652  000C3C                     L3:
  1653  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  1654  000C3E  3610               	rlcf	___fladd@grs,f,c
  1655  000C40  500F               	movf	___fladd@bexp,w,c
  1656  000C42  A4D8               	btfss	status,2,c
  1657  000C44  060F               	decf	___fladd@bexp,f,c
  1658  000C46                     l2376:
  1659  000C46  FFFF               	dw	65535	; assembler added errata NOP
  1660  000C48  AE03               	btfss	___fladd@b+2,7,c
  1661  000C4A  D7EA               	goto	l2360
  1662  000C4C                     u1230:
  1663  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1664  000C4E  0E00               	movlw	0
  1665  000C50  6E0E               	movwf	___fladd@aexp,c
  1666  000C52  AE10               	btfss	___fladd@grs,7,c
  1667  000C54  D00D               	goto	l1116
  1668  000C56  C010  F009         	movff	___fladd@grs,??___fladd
  1669  000C5A  0E7F               	movlw	127
  1670  000C5C  1609               	andwf	??___fladd,f,c
  1671  000C5E  B4D8               	btfsc	status,2,c
  1672  000C60  D004               	goto	l1117
  1673  000C62                     u1250:
  1674  000C62  FFFF               	dw	65535	; assembler added errata NOP
  1675  000C64  0E01               	movlw	1
  1676  000C66  6E0E               	movwf	___fladd@aexp,c
  1677  000C68  D003               	goto	l1116
  1678  000C6A                     l1117:
  1679  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  1680  000C6C  B001               	btfsc	___fladd@b,0,c
  1681  000C6E  D7F9               	goto	u1250
  1682  000C70                     l1116:
  1683  000C70  FFFF               	dw	65535	; assembler added errata NOP
  1684  000C72  500E               	movf	___fladd@aexp,w,c
  1685  000C74  B4D8               	btfsc	status,2,c
  1686  000C76  D020               	goto	l2396
  1687  000C78  0E01               	movlw	1
  1688  000C7A  2601               	addwf	___fladd@b,f,c
  1689  000C7C  0E00               	movlw	0
  1690  000C7E  2202               	addwfc	___fladd@b+1,f,c
  1691  000C80  2203               	addwfc	___fladd@b+2,f,c
  1692  000C82  2204               	addwfc	___fladd@b+3,f,c
  1693  000C84  A004               	btfss	___fladd@b+3,0,c
  1694  000C86  D018               	goto	l2396
  1695  000C88  C001  F009         	movff	___fladd@b,??___fladd
  1696  000C8C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  1697  000C90  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  1698  000C94  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  1699  000C98  340C               	rlcf	??___fladd+3,w,c
  1700  000C9A  320C               	rrcf	??___fladd+3,f,c
  1701  000C9C  320B               	rrcf	??___fladd+2,f,c
  1702  000C9E  320A               	rrcf	??___fladd+1,f,c
  1703  000CA0  3209               	rrcf	??___fladd,f,c
  1704  000CA2  C009  F001         	movff	??___fladd,___fladd@b
  1705  000CA6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  1706  000CAA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  1707  000CAE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  1708  000CB2  280F               	incf	___fladd@bexp,w,c
  1709  000CB4  A4D8               	btfss	status,2,c
  1710  000CB6  2A0F               	incf	___fladd@bexp,f,c
  1711  000CB8                     l2396:
  1712  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  1713  000CBA  280F               	incf	___fladd@bexp,w,c
  1714  000CBC  B4D8               	btfsc	status,2,c
  1715  000CBE  D003               	goto	u1310
  1716  000CC0  500F               	movf	___fladd@bexp,w,c
  1717  000CC2  A4D8               	btfss	status,2,c
  1718  000CC4  D00E               	goto	l2404
  1719  000CC6                     u1310:
  1720  000CC6  FFFF               	dw	65535	; assembler added errata NOP
  1721  000CC8  0E00               	movlw	0
  1722  000CCA  6E01               	movwf	___fladd@b,c
  1723  000CCC  0E00               	movlw	0
  1724  000CCE  6E02               	movwf	___fladd@b+1,c
  1725  000CD0  0E00               	movlw	0
  1726  000CD2  6E03               	movwf	___fladd@b+2,c
  1727  000CD4  0E00               	movlw	0
  1728  000CD6  6E04               	movwf	___fladd@b+3,c
  1729  000CD8  500F               	movf	___fladd@bexp,w,c
  1730  000CDA  A4D8               	btfss	status,2,c
  1731  000CDC  D002               	goto	l2404
  1732  000CDE  0E00               	movlw	0
  1733  000CE0  6E0D               	movwf	___fladd@signs,c
  1734  000CE2                     l2404:
  1735  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  1736  000CE4  A00F               	btfss	___fladd@bexp,0,c
  1737  000CE6  D002               	goto	l2408
  1738  000CE8  8E03               	bsf	___fladd@b+2,7,c
  1739  000CEA  D002               	goto	l2410
  1740  000CEC                     l2408:
  1741  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  1742  000CEE  9E03               	bcf	___fladd@b+2,7,c
  1743  000CF0                     l2410:
  1744  000CF0  FFFF               	dw	65535	; assembler added errata NOP
  1745  000CF2  90D8               	bcf	status,0,c
  1746  000CF4  300F               	rrcf	___fladd@bexp,w,c
  1747  000CF6  6E04               	movwf	___fladd@b+3,c
  1748  000CF8  BE0D               	btfsc	___fladd@signs,7,c
  1749  000CFA  8E04               	bsf	___fladd@b+3,7,c
  1750  000CFC  C001  F001         	movff	___fladd@b,?___fladd
  1751  000D00  C002  F002         	movff	___fladd@b+1,?___fladd+1
  1752  000D04  C003  F003         	movff	___fladd@b+2,?___fladd+2
  1753  000D08  C004  F004         	movff	___fladd@b+3,?___fladd+3
  1754  000D0C                     l1099:
  1755  000D0C  FFFF               	dw	65535	; assembler added errata NOP
  1756  000D0E  0012               	return		;funcret
  1757  000D10  FFFF               	dw	65535	; errata NOP
  1758  000D12                     __end_of___fladd:
  1759                           	opt callstack 0
  1760                           
  1761 ;; *************** function ___flmul *****************
  1762 ;; Defined at:
  1763 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  b               4   14[COMRAM] unsigned char 
  1766 ;;  a               4   18[COMRAM] unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  prod            4   33[COMRAM] struct .
  1769 ;;  grs             4   27[COMRAM] unsigned long 
  1770 ;;  temp            2   37[COMRAM] struct .
  1771 ;;  bexp            1   32[COMRAM] unsigned char 
  1772 ;;  aexp            1   31[COMRAM] unsigned char 
  1773 ;;  sign            1   26[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  4   14[COMRAM] unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, prodl, prodh
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1783 ;;      Params:         8       0       0       0       0       0       0
  1784 ;;      Locals:        13       0       0       0       0       0       0
  1785 ;;      Temps:          4       0       0       0       0       0       0
  1786 ;;      Totals:        25       0       0       0       0       0       0
  1787 ;;Total ram usage:       25 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    2
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_get_temp
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text9
  1798  00064C                     __ptext9:
  1799                           	opt callstack 0
  1800  00064C                     ___flmul:
  1801                           	opt callstack 0
  1802  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1803                           
  1804                           ;incstack = 0
  1805  00064E  5012               	movf	___flmul@b+3,w,c
  1806  000650  0B80               	andlw	128
  1807  000652  6E1B               	movwf	___flmul@sign,c
  1808  000654  5012               	movf	___flmul@b+3,w,c
  1809  000656  2412               	addwf	___flmul@b+3,w,c
  1810  000658  6E21               	movwf	___flmul@bexp,c
  1811  00065A  BE11               	btfsc	___flmul@b+2,7,c
  1812  00065C  8021               	bsf	___flmul@bexp,0,c
  1813  00065E  5021               	movf	___flmul@bexp,w,c
  1814  000660  B4D8               	btfsc	status,2,c
  1815  000662  D00E               	goto	l2450
  1816  000664  2821               	incf	___flmul@bexp,w,c
  1817  000666  A4D8               	btfss	status,2,c
  1818  000668  D008               	goto	l2448
  1819  00066A  0E00               	movlw	0
  1820  00066C  6E0F               	movwf	___flmul@b,c
  1821  00066E  0E00               	movlw	0
  1822  000670  6E10               	movwf	___flmul@b+1,c
  1823  000672  0E00               	movlw	0
  1824  000674  6E11               	movwf	___flmul@b+2,c
  1825  000676  0E00               	movlw	0
  1826  000678  6E12               	movwf	___flmul@b+3,c
  1827  00067A                     l2448:
  1828  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1829  00067C  8E11               	bsf	___flmul@b+2,7,c
  1830  00067E  D009               	goto	l2452
  1831  000680                     l2450:
  1832  000680  FFFF               	dw	65535	; assembler added errata NOP
  1833  000682  0E00               	movlw	0
  1834  000684  6E0F               	movwf	___flmul@b,c
  1835  000686  0E00               	movlw	0
  1836  000688  6E10               	movwf	___flmul@b+1,c
  1837  00068A  0E00               	movlw	0
  1838  00068C  6E11               	movwf	___flmul@b+2,c
  1839  00068E  0E00               	movlw	0
  1840  000690  6E12               	movwf	___flmul@b+3,c
  1841  000692                     l2452:
  1842  000692  FFFF               	dw	65535	; assembler added errata NOP
  1843  000694  5016               	movf	___flmul@a+3,w,c
  1844  000696  0B80               	andlw	128
  1845  000698  1A1B               	xorwf	___flmul@sign,f,c
  1846  00069A  5016               	movf	___flmul@a+3,w,c
  1847  00069C  2416               	addwf	___flmul@a+3,w,c
  1848  00069E  6E20               	movwf	___flmul@aexp,c
  1849  0006A0  BE15               	btfsc	___flmul@a+2,7,c
  1850  0006A2  8020               	bsf	___flmul@aexp,0,c
  1851  0006A4  5020               	movf	___flmul@aexp,w,c
  1852  0006A6  B4D8               	btfsc	status,2,c
  1853  0006A8  D00E               	goto	l2468
  1854  0006AA  2820               	incf	___flmul@aexp,w,c
  1855  0006AC  A4D8               	btfss	status,2,c
  1856  0006AE  D008               	goto	l2466
  1857  0006B0  0E00               	movlw	0
  1858  0006B2  6E13               	movwf	___flmul@a,c
  1859  0006B4  0E00               	movlw	0
  1860  0006B6  6E14               	movwf	___flmul@a+1,c
  1861  0006B8  0E00               	movlw	0
  1862  0006BA  6E15               	movwf	___flmul@a+2,c
  1863  0006BC  0E00               	movlw	0
  1864  0006BE  6E16               	movwf	___flmul@a+3,c
  1865  0006C0                     l2466:
  1866  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1867  0006C2  8E15               	bsf	___flmul@a+2,7,c
  1868  0006C4  D009               	goto	l1176
  1869  0006C6                     l2468:
  1870  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1871  0006C8  0E00               	movlw	0
  1872  0006CA  6E13               	movwf	___flmul@a,c
  1873  0006CC  0E00               	movlw	0
  1874  0006CE  6E14               	movwf	___flmul@a+1,c
  1875  0006D0  0E00               	movlw	0
  1876  0006D2  6E15               	movwf	___flmul@a+2,c
  1877  0006D4  0E00               	movlw	0
  1878  0006D6  6E16               	movwf	___flmul@a+3,c
  1879  0006D8                     l1176:
  1880  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1881  0006DA  5020               	movf	___flmul@aexp,w,c
  1882  0006DC  B4D8               	btfsc	status,2,c
  1883  0006DE  D003               	goto	u1440
  1884  0006E0  5021               	movf	___flmul@bexp,w,c
  1885  0006E2  A4D8               	btfss	status,2,c
  1886  0006E4  D00A               	goto	l2476
  1887  0006E6                     u1440:
  1888  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  1889  0006E8  0E00               	movlw	0
  1890  0006EA  6E0F               	movwf	?___flmul,c
  1891  0006EC  0E00               	movlw	0
  1892  0006EE  6E10               	movwf	?___flmul+1,c
  1893  0006F0  0E00               	movlw	0
  1894  0006F2  6E11               	movwf	?___flmul+2,c
  1895  0006F4  0E00               	movlw	0
  1896  0006F6  6E12               	movwf	?___flmul+3,c
  1897  0006F8  D167               	goto	l1180
  1898  0006FA                     l2476:
  1899  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  1900  0006FC  5015               	movf	___flmul@a+2,w,c
  1901  0006FE  020F               	mulwf	___flmul@b,c
  1902  000700  CFF3 F026          	movff	prodl,___flmul@temp
  1903  000704  CFF4 F027          	movff	prodh,___flmul@temp+1
  1904  000708  5026               	movf	___flmul@temp,w,c
  1905  00070A  6E1C               	movwf	___flmul@grs,c
  1906  00070C  6A1D               	clrf	___flmul@grs+1,c
  1907  00070E  6A1E               	clrf	___flmul@grs+2,c
  1908  000710  6A1F               	clrf	___flmul@grs+3,c
  1909  000712  5027               	movf	___flmul@temp+1,w,c
  1910  000714  6E22               	movwf	___flmul@prod,c
  1911  000716  6A23               	clrf	___flmul@prod+1,c
  1912  000718  6A24               	clrf	___flmul@prod+2,c
  1913  00071A  6A25               	clrf	___flmul@prod+3,c
  1914  00071C  5014               	movf	___flmul@a+1,w,c
  1915  00071E  0210               	mulwf	___flmul@b+1,c
  1916  000720  CFF3 F026          	movff	prodl,___flmul@temp
  1917  000724  CFF4 F027          	movff	prodh,___flmul@temp+1
  1918  000728  5026               	movf	___flmul@temp,w,c
  1919  00072A  261C               	addwf	___flmul@grs,f,c
  1920  00072C  0E00               	movlw	0
  1921  00072E  221D               	addwfc	___flmul@grs+1,f,c
  1922  000730  221E               	addwfc	___flmul@grs+2,f,c
  1923  000732  221F               	addwfc	___flmul@grs+3,f,c
  1924  000734  5027               	movf	___flmul@temp+1,w,c
  1925  000736  2622               	addwf	___flmul@prod,f,c
  1926  000738  0E00               	movlw	0
  1927  00073A  2223               	addwfc	___flmul@prod+1,f,c
  1928  00073C  2224               	addwfc	___flmul@prod+2,f,c
  1929  00073E  2225               	addwfc	___flmul@prod+3,f,c
  1930  000740  5013               	movf	___flmul@a,w,c
  1931  000742  0211               	mulwf	___flmul@b+2,c
  1932  000744  CFF3 F026          	movff	prodl,___flmul@temp
  1933  000748  CFF4 F027          	movff	prodh,___flmul@temp+1
  1934  00074C  5026               	movf	___flmul@temp,w,c
  1935  00074E  261C               	addwf	___flmul@grs,f,c
  1936  000750  0E00               	movlw	0
  1937  000752  221D               	addwfc	___flmul@grs+1,f,c
  1938  000754  221E               	addwfc	___flmul@grs+2,f,c
  1939  000756  221F               	addwfc	___flmul@grs+3,f,c
  1940  000758  5027               	movf	___flmul@temp+1,w,c
  1941  00075A  2622               	addwf	___flmul@prod,f,c
  1942  00075C  0E00               	movlw	0
  1943  00075E  2223               	addwfc	___flmul@prod+1,f,c
  1944  000760  2224               	addwfc	___flmul@prod+2,f,c
  1945  000762  2225               	addwfc	___flmul@prod+3,f,c
  1946  000764  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1947  000768  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1948  00076C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1949  000770  6A1C               	clrf	___flmul@grs,c
  1950  000772  5013               	movf	___flmul@a,w,c
  1951  000774  0210               	mulwf	___flmul@b+1,c
  1952  000776  CFF3 F026          	movff	prodl,___flmul@temp
  1953  00077A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1954  00077E  5026               	movf	___flmul@temp,w,c
  1955  000780  261C               	addwf	___flmul@grs,f,c
  1956  000782  5027               	movf	___flmul@temp+1,w,c
  1957  000784  221D               	addwfc	___flmul@grs+1,f,c
  1958  000786  0E00               	movlw	0
  1959  000788  221E               	addwfc	___flmul@grs+2,f,c
  1960  00078A  0E00               	movlw	0
  1961  00078C  221F               	addwfc	___flmul@grs+3,f,c
  1962  00078E  5014               	movf	___flmul@a+1,w,c
  1963  000790  020F               	mulwf	___flmul@b,c
  1964  000792  CFF3 F026          	movff	prodl,___flmul@temp
  1965  000796  CFF4 F027          	movff	prodh,___flmul@temp+1
  1966  00079A  5026               	movf	___flmul@temp,w,c
  1967  00079C  261C               	addwf	___flmul@grs,f,c
  1968  00079E  5027               	movf	___flmul@temp+1,w,c
  1969  0007A0  221D               	addwfc	___flmul@grs+1,f,c
  1970  0007A2  0E00               	movlw	0
  1971  0007A4  221E               	addwfc	___flmul@grs+2,f,c
  1972  0007A6  0E00               	movlw	0
  1973  0007A8  221F               	addwfc	___flmul@grs+3,f,c
  1974  0007AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1975  0007AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1976  0007B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1977  0007B6  6A1C               	clrf	___flmul@grs,c
  1978  0007B8  5013               	movf	___flmul@a,w,c
  1979  0007BA  020F               	mulwf	___flmul@b,c
  1980  0007BC  CFF3 F026          	movff	prodl,___flmul@temp
  1981  0007C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  1982  0007C4  5026               	movf	___flmul@temp,w,c
  1983  0007C6  261C               	addwf	___flmul@grs,f,c
  1984  0007C8  5027               	movf	___flmul@temp+1,w,c
  1985  0007CA  221D               	addwfc	___flmul@grs+1,f,c
  1986  0007CC  0E00               	movlw	0
  1987  0007CE  221E               	addwfc	___flmul@grs+2,f,c
  1988  0007D0  0E00               	movlw	0
  1989  0007D2  221F               	addwfc	___flmul@grs+3,f,c
  1990  0007D4  5015               	movf	___flmul@a+2,w,c
  1991  0007D6  0210               	mulwf	___flmul@b+1,c
  1992  0007D8  CFF3 F026          	movff	prodl,___flmul@temp
  1993  0007DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  1994  0007E0  5026               	movf	___flmul@temp,w,c
  1995  0007E2  2622               	addwf	___flmul@prod,f,c
  1996  0007E4  5027               	movf	___flmul@temp+1,w,c
  1997  0007E6  2223               	addwfc	___flmul@prod+1,f,c
  1998  0007E8  0E00               	movlw	0
  1999  0007EA  2224               	addwfc	___flmul@prod+2,f,c
  2000  0007EC  0E00               	movlw	0
  2001  0007EE  2225               	addwfc	___flmul@prod+3,f,c
  2002  0007F0  5014               	movf	___flmul@a+1,w,c
  2003  0007F2  0211               	mulwf	___flmul@b+2,c
  2004  0007F4  CFF3 F026          	movff	prodl,___flmul@temp
  2005  0007F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2006  0007FC  5026               	movf	___flmul@temp,w,c
  2007  0007FE  2622               	addwf	___flmul@prod,f,c
  2008  000800  5027               	movf	___flmul@temp+1,w,c
  2009  000802  2223               	addwfc	___flmul@prod+1,f,c
  2010  000804  0E00               	movlw	0
  2011  000806  2224               	addwfc	___flmul@prod+2,f,c
  2012  000808  0E00               	movlw	0
  2013  00080A  2225               	addwfc	___flmul@prod+3,f,c
  2014  00080C  5015               	movf	___flmul@a+2,w,c
  2015  00080E  0211               	mulwf	___flmul@b+2,c
  2016  000810  CFF3 F026          	movff	prodl,___flmul@temp
  2017  000814  CFF4 F027          	movff	prodh,___flmul@temp+1
  2018  000818  5026               	movf	___flmul@temp,w,c
  2019  00081A  6E17               	movwf	??___flmul& (0+255),c
  2020  00081C  5027               	movf	___flmul@temp+1,w,c
  2021  00081E  6E18               	movwf	(??___flmul+1)& (0+255),c
  2022  000820  6A19               	clrf	(??___flmul+2)& (0+255),c
  2023  000822  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2024  000824  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2025  000828  C018  F019         	movff	??___flmul+1,??___flmul+2
  2026  00082C  C017  F018         	movff	??___flmul,??___flmul+1
  2027  000830  6A17               	clrf	??___flmul,c
  2028  000832  5017               	movf	??___flmul,w,c
  2029  000834  2622               	addwf	___flmul@prod,f,c
  2030  000836  5018               	movf	??___flmul+1,w,c
  2031  000838  2223               	addwfc	___flmul@prod+1,f,c
  2032  00083A  5019               	movf	??___flmul+2,w,c
  2033  00083C  2224               	addwfc	___flmul@prod+2,f,c
  2034  00083E  501A               	movf	??___flmul+3,w,c
  2035  000840  2225               	addwfc	___flmul@prod+3,f,c
  2036  000842  C01C  F017         	movff	___flmul@grs,??___flmul
  2037  000846  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2038  00084A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2039  00084E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2040  000852  0E19               	movlw	25
  2041  000854  D006               	goto	u1450
  2042  000856                     u1455:
  2043  000856  FFFF               	dw	65535	; assembler added errata NOP
  2044  000858  90D8               	bcf	status,0,c
  2045  00085A  321A               	rrcf	??___flmul+3,f,c
  2046  00085C  3219               	rrcf	??___flmul+2,f,c
  2047  00085E  3218               	rrcf	??___flmul+1,f,c
  2048  000860  3217               	rrcf	??___flmul,f,c
  2049  000862                     u1450:
  2050  000862  FFFF               	dw	65535	; assembler added errata NOP
  2051  000864  2EE8               	decfsz	wreg,f,c
  2052  000866  D7F7               	goto	u1455
  2053  000868  5017               	movf	??___flmul,w,c
  2054  00086A  2622               	addwf	___flmul@prod,f,c
  2055  00086C  5018               	movf	??___flmul+1,w,c
  2056  00086E  2223               	addwfc	___flmul@prod+1,f,c
  2057  000870  5019               	movf	??___flmul+2,w,c
  2058  000872  2224               	addwfc	___flmul@prod+2,f,c
  2059  000874  501A               	movf	??___flmul+3,w,c
  2060  000876  2225               	addwfc	___flmul@prod+3,f,c
  2061  000878  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2062  00087C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2063  000880  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2064  000884  6A1C               	clrf	___flmul@grs,c
  2065  000886  5020               	movf	___flmul@aexp,w,c
  2066  000888  C021  F017         	movff	___flmul@bexp,??___flmul
  2067  00088C  6A18               	clrf	(??___flmul+1)& (0+255),c
  2068  00088E  2617               	addwf	??___flmul,f,c
  2069  000890  0E00               	movlw	0
  2070  000892  2218               	addwfc	??___flmul+1,f,c
  2071  000894  0E82               	movlw	130
  2072  000896  2417               	addwf	??___flmul,w,c
  2073  000898  6E26               	movwf	___flmul@temp,c
  2074  00089A  0EFF               	movlw	255
  2075  00089C  2018               	addwfc	??___flmul+1,w,c
  2076  00089E  6E27               	movwf	___flmul@temp+1,c
  2077  0008A0  D010               	goto	l2524
  2078  0008A2                     l2518:
  2079  0008A2  FFFF               	dw	65535	; assembler added errata NOP
  2080  0008A4  90D8               	bcf	status,0,c
  2081  0008A6  3622               	rlcf	___flmul@prod,f,c
  2082  0008A8  3623               	rlcf	___flmul@prod+1,f,c
  2083  0008AA  3624               	rlcf	___flmul@prod+2,f,c
  2084  0008AC  3625               	rlcf	___flmul@prod+3,f,c
  2085  0008AE  BE1F               	btfsc	___flmul@grs+3,7,c
  2086  0008B0  8022               	bsf	___flmul@prod,0,c
  2087  0008B2  90D8               	bcf	status,0,c
  2088  0008B4  361C               	rlcf	___flmul@grs,f,c
  2089  0008B6  361D               	rlcf	___flmul@grs+1,f,c
  2090  0008B8  361E               	rlcf	___flmul@grs+2,f,c
  2091  0008BA  361F               	rlcf	___flmul@grs+3,f,c
  2092  0008BC  0626               	decf	___flmul@temp,f,c
  2093  0008BE  A0D8               	btfss	status,0,c
  2094  0008C0  0627               	decf	___flmul@temp+1,f,c
  2095  0008C2                     l2524:
  2096  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  2097  0008C4  AE24               	btfss	___flmul@prod+2,7,c
  2098  0008C6  D7ED               	goto	l2518
  2099  0008C8  0E00               	movlw	0
  2100  0008CA  6E20               	movwf	___flmul@aexp,c
  2101  0008CC  AE1F               	btfss	___flmul@grs+3,7,c
  2102  0008CE  D019               	goto	l1185
  2103  0008D0  0EFF               	movlw	255
  2104  0008D2  141C               	andwf	___flmul@grs,w,c
  2105  0008D4  6E17               	movwf	??___flmul& (0+255),c
  2106  0008D6  0EFF               	movlw	255
  2107  0008D8  141D               	andwf	___flmul@grs+1,w,c
  2108  0008DA  6E18               	movwf	(??___flmul+1)& (0+255),c
  2109  0008DC  0EFF               	movlw	255
  2110  0008DE  141E               	andwf	___flmul@grs+2,w,c
  2111  0008E0  6E19               	movwf	(??___flmul+2)& (0+255),c
  2112  0008E2  0E7F               	movlw	127
  2113  0008E4  141F               	andwf	___flmul@grs+3,w,c
  2114  0008E6  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2115  0008E8  5017               	movf	??___flmul,w,c
  2116  0008EA  1018               	iorwf	??___flmul+1,w,c
  2117  0008EC  1019               	iorwf	??___flmul+2,w,c
  2118  0008EE  101A               	iorwf	??___flmul+3,w,c
  2119  0008F0  B4D8               	btfsc	status,2,c
  2120  0008F2  D004               	goto	l1186
  2121  0008F4                     u1490:
  2122  0008F4  FFFF               	dw	65535	; assembler added errata NOP
  2123  0008F6  0E01               	movlw	1
  2124  0008F8  6E20               	movwf	___flmul@aexp,c
  2125  0008FA  D003               	goto	l1185
  2126  0008FC                     l1186:
  2127  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  2128  0008FE  B022               	btfsc	___flmul@prod,0,c
  2129  000900  D7F9               	goto	u1490
  2130  000902                     l1185:
  2131  000902  FFFF               	dw	65535	; assembler added errata NOP
  2132  000904  5020               	movf	___flmul@aexp,w,c
  2133  000906  B4D8               	btfsc	status,2,c
  2134  000908  D01F               	goto	l2544
  2135  00090A  0E01               	movlw	1
  2136  00090C  2622               	addwf	___flmul@prod,f,c
  2137  00090E  0E00               	movlw	0
  2138  000910  2223               	addwfc	___flmul@prod+1,f,c
  2139  000912  2224               	addwfc	___flmul@prod+2,f,c
  2140  000914  2225               	addwfc	___flmul@prod+3,f,c
  2141  000916  A025               	btfss	___flmul@prod+3,0,c
  2142  000918  D017               	goto	l2544
  2143  00091A  C022  F017         	movff	___flmul@prod,??___flmul
  2144  00091E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2145  000922  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2146  000926  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2147  00092A  341A               	rlcf	??___flmul+3,w,c
  2148  00092C  321A               	rrcf	??___flmul+3,f,c
  2149  00092E  3219               	rrcf	??___flmul+2,f,c
  2150  000930  3218               	rrcf	??___flmul+1,f,c
  2151  000932  3217               	rrcf	??___flmul,f,c
  2152  000934  C017  F022         	movff	??___flmul,___flmul@prod
  2153  000938  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2154  00093C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2155  000940  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2156  000944  4A26               	infsnz	___flmul@temp,f,c
  2157  000946  2A27               	incf	___flmul@temp+1,f,c
  2158  000948                     l2544:
  2159  000948  FFFF               	dw	65535	; assembler added errata NOP
  2160  00094A  BE27               	btfsc	___flmul@temp+1,7,c
  2161  00094C  D00D               	goto	l2548
  2162  00094E  5027               	movf	___flmul@temp+1,w,c
  2163  000950  E103               	bnz	u1530
  2164  000952  2826               	incf	___flmul@temp,w,c
  2165  000954  A0D8               	btfss	status,0,c
  2166  000956  D008               	goto	l2548
  2167  000958                     u1530:
  2168  000958  0E00               	movlw	0
  2169  00095A  6E22               	movwf	___flmul@prod,c
  2170  00095C  0E00               	movlw	0
  2171  00095E  6E23               	movwf	___flmul@prod+1,c
  2172  000960  0E80               	movlw	128
  2173  000962  6E24               	movwf	___flmul@prod+2,c
  2174  000964  0E7F               	movlw	127
  2175  000966  D023               	goto	L4
  2176  000968                     l2548:
  2177  000968  FFFF               	dw	65535	; assembler added errata NOP
  2178  00096A  BE27               	btfsc	___flmul@temp+1,7,c
  2179  00096C  D005               	goto	u1540
  2180  00096E  5027               	movf	___flmul@temp+1,w,c
  2181  000970  E10F               	bnz	l1193
  2182  000972  0426               	decf	___flmul@temp,w,c
  2183  000974  B0D8               	btfsc	status,0,c
  2184  000976  D00C               	goto	l1193
  2185  000978                     u1540:
  2186  000978  FFFF               	dw	65535	; assembler added errata NOP
  2187  00097A  0E00               	movlw	0
  2188  00097C  6E22               	movwf	___flmul@prod,c
  2189  00097E  0E00               	movlw	0
  2190  000980  6E23               	movwf	___flmul@prod+1,c
  2191  000982  0E00               	movlw	0
  2192  000984  6E24               	movwf	___flmul@prod+2,c
  2193  000986  0E00               	movlw	0
  2194  000988  6E25               	movwf	___flmul@prod+3,c
  2195  00098A  0E00               	movlw	0
  2196  00098C  6E1B               	movwf	___flmul@sign,c
  2197  00098E  D011               	goto	l2560
  2198  000990                     l1193:
  2199  000990  FFFF               	dw	65535	; assembler added errata NOP
  2200  000992  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2201  000996  0EFF               	movlw	255
  2202  000998  1622               	andwf	___flmul@prod,f,c
  2203  00099A  0EFF               	movlw	255
  2204  00099C  1623               	andwf	___flmul@prod+1,f,c
  2205  00099E  0E7F               	movlw	127
  2206  0009A0  1624               	andwf	___flmul@prod+2,f,c
  2207  0009A2  0E00               	movlw	0
  2208  0009A4  1625               	andwf	___flmul@prod+3,f,c
  2209  0009A6  B021               	btfsc	___flmul@bexp,0,c
  2210  0009A8  8E24               	bsf	___flmul@prod+2,7,c
  2211  0009AA  90D8               	bcf	status,0,c
  2212  0009AC  3021               	rrcf	___flmul@bexp,w,c
  2213  0009AE                     L4:
  2214  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  2215  0009B0  6E25               	movwf	___flmul@prod+3,c
  2216  0009B2                     l2560:
  2217  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  2218  0009B4  501B               	movf	___flmul@sign,w,c
  2219  0009B6  1225               	iorwf	___flmul@prod+3,f,c
  2220  0009B8  C022  F00F         	movff	___flmul@prod,?___flmul
  2221  0009BC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2222  0009C0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2223  0009C4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2224  0009C8                     l1180:
  2225  0009C8  FFFF               	dw	65535	; assembler added errata NOP
  2226  0009CA  0012               	return		;funcret
  2227  0009CC  FFFF               	dw	65535	; errata NOP
  2228  0009CE                     __end_of___flmul:
  2229                           	opt callstack 0
  2230                           
  2231 ;; *************** function _ADC_Read *****************
  2232 ;; Defined at:
  2233 ;;		line 28 in file "adc.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  channel         1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  channel         1    4[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  2    0[COMRAM] unsigned int 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2247 ;;      Params:         2       0       0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0
  2249 ;;      Temps:          2       0       0       0       0       0       0
  2250 ;;      Totals:         5       0       0       0       0       0       0
  2251 ;;Total ram usage:        5 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    2
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_get_temp
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text10
  2262  001090                     __ptext10:
  2263                           	opt callstack 0
  2264  001090                     _ADC_Read:
  2265                           	opt callstack 0
  2266  001090  FFFF               	dw	65535	; assembler added errata NOP
  2267                           
  2268                           ;incstack = 0
  2269                           ;ADC_Read@channel stored from wreg
  2270  001092  6E05               	movwf	ADC_Read@channel,c
  2271                           
  2272                           ;adc.c: 29:  if(channel > 7)
  2273  001094  0E07               	movlw	7
  2274  001096  6405               	cpfsgt	ADC_Read@channel,c
  2275  001098  D005               	goto	l2426
  2276                           
  2277                           ;adc.c: 30:  return 0;
  2278  00109A  0E00               	movlw	0
  2279  00109C  6E02               	movwf	?_ADC_Read+1,c
  2280  00109E  0E00               	movlw	0
  2281  0010A0  6E01               	movwf	?_ADC_Read,c
  2282  0010A2  D01D               	goto	l285
  2283  0010A4                     l2426:
  2284  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  2285                           
  2286                           ;adc.c: 31:  ADCON0 &= 0xC5;
  2287  0010A6  0EC5               	movlw	197
  2288  0010A8  16C2               	andwf	4034,f,c	;volatile
  2289                           
  2290                           ;adc.c: 32:  ADCON0 |= channel<<3;
  2291  0010AA  3805               	swapf	ADC_Read@channel,w,c	;volatile
  2292  0010AC  42E8               	rrncf	wreg,f,c
  2293  0010AE  0BF8               	andlw	248
  2294  0010B0  12C2               	iorwf	4034,f,c	;volatile
  2295                           
  2296                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  2297  0010B2  0E08               	movlw	8
  2298  0010B4  6E03               	movwf	??_ADC_Read& (0+255),c
  2299  0010B6  0ECB               	movlw	203
  2300  0010B8                     u1747:
  2301  0010B8  FFFF               	dw	65535	; errata NOP
  2302  0010BA  2EE8               	decfsz	wreg,f,c
  2303  0010BC  D7FD               	bra	u1747
  2304  0010BE  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  2305  0010C0  D7FB               	bra	u1747
  2306  0010C2  D000               	nop2	
  2307                           
  2308                           ;adc.c: 34:  GO_nDONE = 1;
  2309  0010C4  84C2               	bsf	4034,2,c	;volatile
  2310  0010C6                     l286:
  2311  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  2312  0010C8  B4C2               	btfsc	4034,2,c	;volatile
  2313  0010CA  D7FD               	goto	l286
  2314                           
  2315                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  2316  0010CC  50C4               	movf	4036,w,c	;volatile
  2317  0010CE  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  2318  0010D0  6A03               	clrf	??_ADC_Read& (0+255),c
  2319  0010D2  50C3               	movf	4035,w,c	;volatile
  2320  0010D4  2403               	addwf	??_ADC_Read,w,c
  2321  0010D6  6E01               	movwf	?_ADC_Read,c
  2322  0010D8  0E00               	movlw	0
  2323  0010DA  2004               	addwfc	??_ADC_Read+1,w,c
  2324  0010DC  6E02               	movwf	?_ADC_Read+1,c
  2325  0010DE                     l285:
  2326  0010DE  FFFF               	dw	65535	; assembler added errata NOP
  2327  0010E0  0012               	return		;funcret
  2328  0010E2  FFFF               	dw	65535	; errata NOP
  2329  0010E4                     __end_of_ADC_Read:
  2330                           	opt callstack 0
  2331                           
  2332 ;; *************** function _ADC_Init *****************
  2333 ;; Defined at:
  2334 ;;		line 23 in file "adc.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    2
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_get_temp
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text11
  2363  0011FE                     __ptext11:
  2364                           	opt callstack 0
  2365  0011FE                     _ADC_Init:
  2366                           	opt callstack 0
  2367  0011FE  FFFF               	dw	65535	; assembler added errata NOP
  2368                           
  2369                           ;adc.c: 24:  ADCON0 = 0x81;
  2370                           
  2371                           ;incstack = 0
  2372  001200  0E81               	movlw	129
  2373  001202  6EC2               	movwf	4034,c	;volatile
  2374                           
  2375                           ;adc.c: 25:  ADCON1 = 0x80;
  2376  001204  0E80               	movlw	128
  2377  001206  6EC1               	movwf	4033,c	;volatile
  2378  001208  0012               	return		;funcret
  2379  00120A  FFFF               	dw	65535	; errata NOP
  2380  00120C                     __end_of_ADC_Init:
  2381                           	opt callstack 0
  2382                           
  2383 ;; *************** function ___fltol *****************
  2384 ;; Defined at:
  2385 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  f1              4   61[COMRAM] void 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  exp1            1   70[COMRAM] unsigned char 
  2390 ;;  sign1           1   69[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  4   61[COMRAM] long 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2400 ;;      Params:         4       0       0       0       0       0       0
  2401 ;;      Locals:         2       0       0       0       0       0       0
  2402 ;;      Temps:          4       0       0       0       0       0       0
  2403 ;;      Totals:        10       0       0       0       0       0       0
  2404 ;;Total ram usage:       10 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    2
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text12
  2415  000E6E                     __ptext12:
  2416                           	opt callstack 0
  2417  000E6E                     ___fltol:
  2418                           	opt callstack 0
  2419  000E6E  FFFF               	dw	65535	; assembler added errata NOP
  2420                           
  2421                           ;incstack = 0
  2422  000E70  3440               	rlcf	___fltol@f1+2,w,c
  2423  000E72  3441               	rlcf	___fltol@f1+3,w,c
  2424  000E74  6E47               	movwf	___fltol@exp1,c
  2425  000E76  5047               	movf	___fltol@exp1,w,c
  2426  000E78  A4D8               	btfss	status,2,c
  2427  000E7A  D00A               	goto	l2660
  2428  000E7C                     u1660:
  2429  000E7C  FFFF               	dw	65535	; assembler added errata NOP
  2430  000E7E  0E00               	movlw	0
  2431  000E80  6E3E               	movwf	?___fltol,c
  2432  000E82  0E00               	movlw	0
  2433  000E84  6E3F               	movwf	?___fltol+1,c
  2434  000E86  0E00               	movlw	0
  2435  000E88  6E40               	movwf	?___fltol+2,c
  2436  000E8A  0E00               	movlw	0
  2437  000E8C  6E41               	movwf	?___fltol+3,c
  2438  000E8E  D056               	goto	l859
  2439  000E90                     l2660:
  2440  000E90  FFFF               	dw	65535	; assembler added errata NOP
  2441  000E92  C03E  F042         	movff	___fltol@f1,??___fltol
  2442  000E96  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  2443  000E9A  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  2444  000E9E  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  2445  000EA2  0E20               	movlw	32
  2446  000EA4  D006               	goto	u1670
  2447  000EA6                     u1675:
  2448  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  2449  000EA8  90D8               	bcf	status,0,c
  2450  000EAA  3245               	rrcf	??___fltol+3,f,c
  2451  000EAC  3244               	rrcf	??___fltol+2,f,c
  2452  000EAE  3243               	rrcf	??___fltol+1,f,c
  2453  000EB0  3242               	rrcf	??___fltol,f,c
  2454  000EB2                     u1670:
  2455  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  2456  000EB4  2EE8               	decfsz	wreg,f,c
  2457  000EB6  D7F7               	goto	u1675
  2458  000EB8  5042               	movf	??___fltol,w,c
  2459  000EBA  6E46               	movwf	___fltol@sign1,c
  2460  000EBC  8E40               	bsf	___fltol@f1+2,7,c
  2461  000EBE  0EFF               	movlw	255
  2462  000EC0  163E               	andwf	___fltol@f1,f,c
  2463  000EC2  0EFF               	movlw	255
  2464  000EC4  163F               	andwf	___fltol@f1+1,f,c
  2465  000EC6  0EFF               	movlw	255
  2466  000EC8  1640               	andwf	___fltol@f1+2,f,c
  2467  000ECA  0E00               	movlw	0
  2468  000ECC  1641               	andwf	___fltol@f1+3,f,c
  2469  000ECE  0E96               	movlw	150
  2470  000ED0  5E47               	subwf	___fltol@exp1,f,c
  2471  000ED2  AE47               	btfss	___fltol@exp1,7,c
  2472  000ED4  D00E               	goto	l2680
  2473  000ED6  5047               	movf	___fltol@exp1,w,c
  2474  000ED8  0A80               	xorlw	128
  2475  000EDA  0F97               	addlw	151
  2476  000EDC  A0D8               	btfss	status,0,c
  2477  000EDE  D7CE               	goto	u1660
  2478  000EE0                     l2676:
  2479  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2480  000EE2  90D8               	bcf	status,0,c
  2481  000EE4  3241               	rrcf	___fltol@f1+3,f,c
  2482  000EE6  3240               	rrcf	___fltol@f1+2,f,c
  2483  000EE8  323F               	rrcf	___fltol@f1+1,f,c
  2484  000EEA  323E               	rrcf	___fltol@f1,f,c
  2485  000EEC  3E47               	incfsz	___fltol@exp1,f,c
  2486  000EEE  D7F8               	goto	l2676
  2487  000EF0  D010               	goto	u1710
  2488  000EF2                     l2680:
  2489  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  2490  000EF4  0E1F               	movlw	31
  2491  000EF6  6447               	cpfsgt	___fltol@exp1,c
  2492  000EF8  D008               	goto	l2688
  2493  000EFA  D7C0               	goto	u1660
  2494  000EFC                     l2686:
  2495  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  2496  000EFE  90D8               	bcf	status,0,c
  2497  000F00  363E               	rlcf	___fltol@f1,f,c
  2498  000F02  363F               	rlcf	___fltol@f1+1,f,c
  2499  000F04  3640               	rlcf	___fltol@f1+2,f,c
  2500  000F06  3641               	rlcf	___fltol@f1+3,f,c
  2501  000F08  0647               	decf	___fltol@exp1,f,c
  2502  000F0A                     l2688:
  2503  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2504  000F0C  5047               	movf	___fltol@exp1,w,c
  2505  000F0E  A4D8               	btfss	status,2,c
  2506  000F10  D7F5               	goto	l2686
  2507  000F12                     u1710:
  2508  000F12  FFFF               	dw	65535	; assembler added errata NOP
  2509  000F14  5046               	movf	___fltol@sign1,w,c
  2510  000F16  B4D8               	btfsc	status,2,c
  2511  000F18  D008               	goto	l2694
  2512  000F1A  1E41               	comf	___fltol@f1+3,f,c
  2513  000F1C  1E40               	comf	___fltol@f1+2,f,c
  2514  000F1E  1E3F               	comf	___fltol@f1+1,f,c
  2515  000F20  6C3E               	negf	___fltol@f1,c
  2516  000F22  0E00               	movlw	0
  2517  000F24  223F               	addwfc	___fltol@f1+1,f,c
  2518  000F26  2240               	addwfc	___fltol@f1+2,f,c
  2519  000F28  2241               	addwfc	___fltol@f1+3,f,c
  2520  000F2A                     l2694:
  2521  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  2522  000F2C  C03E  F03E         	movff	___fltol@f1,?___fltol
  2523  000F30  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  2524  000F34  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  2525  000F38  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  2526  000F3C                     l859:
  2527  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  2528  000F3E  0012               	return		;funcret
  2529  000F40  FFFF               	dw	65535	; errata NOP
  2530  000F42                     __end_of___fltol:
  2531                           	opt callstack 0
  2532                           
  2533 ;; *************** function _Timer0_StartTimer *****************
  2534 ;; Defined at:
  2535 ;;		line 21 in file "timer.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2  117[None  ] int 
  2542 ;; Registers used:
  2543 ;;		None
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2549 ;;      Params:         0       0       0       0       0       0       0
  2550 ;;      Locals:         0       0       0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0
  2552 ;;      Totals:         0       0       0       0       0       0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    2
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text13
  2564  00120C                     __ptext13:
  2565                           	opt callstack 0
  2566  00120C                     _Timer0_StartTimer:
  2567                           	opt callstack 0
  2568  00120C  FFFF               	dw	65535	; assembler added errata NOP
  2569                           
  2570                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2571                           
  2572                           ;incstack = 0
  2573  00120E  8ED5               	bsf	4053,7,c	;volatile
  2574                           
  2575                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  2576  001210  0012               	return		;funcret
  2577  001212  FFFF               	dw	65535	; errata NOP
  2578  001214                     __end_of_Timer0_StartTimer:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function _Timer0_Init *****************
  2582 ;; Defined at:
  2583 ;;		line 8 in file "timer.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2597 ;;      Params:         0       0       0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    2
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text14
  2612  001178                     __ptext14:
  2613                           	opt callstack 0
  2614  001178                     _Timer0_Init:
  2615                           	opt callstack 0
  2616  001178  FFFF               	dw	65535	; assembler added errata NOP
  2617                           
  2618                           ;timer.c: 9:  time_ms = 0;
  2619                           
  2620                           ;incstack = 0
  2621  00117A  0E00               	movlw	0
  2622  00117C  6E55               	movwf	_time_ms,c	;volatile
  2623  00117E  0E00               	movlw	0
  2624  001180  6E56               	movwf	_time_ms+1,c	;volatile
  2625  001182  0E00               	movlw	0
  2626  001184  6E57               	movwf	_time_ms+2,c	;volatile
  2627  001186  0E00               	movlw	0
  2628  001188  6E58               	movwf	_time_ms+3,c	;volatile
  2629                           
  2630                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  2631  00118A  9CD5               	bcf	4053,6,c	;volatile
  2632                           
  2633                           ;timer.c: 11:  TMR0H = 0xFF;
  2634  00118C  68D7               	setf	4055,c	;volatile
  2635                           
  2636                           ;timer.c: 12:  TMR0L = 0x34;
  2637  00118E  0E34               	movlw	52
  2638  001190  6ED6               	movwf	4054,c	;volatile
  2639                           
  2640                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  2641  001192  94F2               	bcf	4082,2,c	;volatile
  2642                           
  2643                           ;timer.c: 14:  T0CON = 0x00;
  2644  001194  0E00               	movlw	0
  2645  001196  6ED5               	movwf	4053,c	;volatile
  2646  001198  0012               	return		;funcret
  2647  00119A  FFFF               	dw	65535	; errata NOP
  2648  00119C                     __end_of_Timer0_Init:
  2649                           	opt callstack 0
  2650                           
  2651 ;; *************** function _timingISR *****************
  2652 ;; Defined at:
  2653 ;;		line 31 in file "timer.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2667 ;;      Params:         0       0       0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		i2_Timer0_StartTimer
  2676 ;; This function is called by:
  2677 ;;		Interrupt level 2
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	intcode
  2682  000008                     __pintcode:
  2683                           	opt callstack 0
  2684  000008                     _timingISR:
  2685                           	opt callstack 0
  2686  000008  FFFF               	dw	65535	; assembler added errata NOP
  2687                           
  2688                           ;incstack = 0
  2689  00000A  826F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2690                           
  2691                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  2692  00000C  B4F2               	btfsc	4082,2,c	;volatile
  2693  00000E  AAF2               	btfss	4082,5,c	;volatile
  2694  000010  D00C               	goto	i2l247
  2695                           
  2696                           ;timer.c: 33:   TMR0IF = 0;
  2697  000012  94F2               	bcf	4082,2,c	;volatile
  2698                           
  2699                           ;timer.c: 34:   time_ms++;
  2700  000014  0E01               	movlw	1
  2701  000016  2655               	addwf	_time_ms,f,c	;volatile
  2702  000018  0E00               	movlw	0
  2703  00001A  2256               	addwfc	_time_ms+1,f,c	;volatile
  2704  00001C  2257               	addwfc	_time_ms+2,f,c	;volatile
  2705  00001E  2258               	addwfc	_time_ms+3,f,c	;volatile
  2706                           
  2707                           ;timer.c: 35:   TMR0H = 0xFF;
  2708  000020  68D7               	setf	4055,c	;volatile
  2709                           
  2710                           ;timer.c: 36:   TMR0L = 0x34;
  2711  000022  0E34               	movlw	52
  2712  000024  6ED6               	movwf	4054,c	;volatile
  2713                           
  2714                           ;timer.c: 37:   Timer0_StartTimer();
  2715  000026  EC0A  F009         	call	i2_Timer0_StartTimer	;wreg free
  2716  00002A                     i2l247:
  2717  00002A  FFFF               	dw	65535	; assembler added errata NOP
  2718  00002C  926F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2719  00002E  0011               	retfie		f
  2720  000030  FFFF               	dw	65535	; errata NOP
  2721  000032                     __end_of_timingISR:
  2722                           	opt callstack 0
  2723                           
  2724 ;; *************** function i2_Timer0_StartTimer *****************
  2725 ;; Defined at:
  2726 ;;		line 21 in file "timer.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  2    0[None  ] int 
  2733 ;; Registers used:
  2734 ;;		None
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         0       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:         0       0       0       0       0       0       0
  2744 ;;Total ram usage:        0 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_timingISR
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text16
  2754  001214                     __ptext16:
  2755                           	opt callstack 0
  2756  001214                     i2_Timer0_StartTimer:
  2757                           	opt callstack 0
  2758  001214  FFFF               	dw	65535	; assembler added errata NOP
  2759                           
  2760                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2761                           
  2762                           ;incstack = 0
  2763  001216  8ED5               	bsf	4053,7,c	;volatile
  2764                           
  2765                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  2766  001218  0012               	return		;funcret
  2767  00121A  FFFF               	dw	65535	; errata NOP
  2768  00121C                     __end_ofi2_Timer0_StartTimer:
  2769                           	opt callstack 0
  2770                           
  2771                           	psect	rparam
  2772  0000                     
  2773                           	psect	temp
  2774  00006F                     btemp:
  2775                           	opt callstack 0
  2776  00006F                     	ds	1
  2777  0000                     int$flags	set	btemp
  2778  0000                     wtemp8	set	btemp+1
  2779  0000                     ttemp5	set	btemp+1
  2780  0000                     ttemp6	set	btemp+4
  2781  0000                     ttemp7	set	btemp+8
  2782                           tosu	equ	0xFFF
  2783                           tosh	equ	0xFFE
  2784                           tosl	equ	0xFFD
  2785                           stkptr	equ	0xFFC
  2786                           pclatu	equ	0xFFB
  2787                           pclath	equ	0xFFA
  2788                           pcl	equ	0xFF9
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           prodh	equ	0xFF4
  2794                           prodl	equ	0xFF3
  2795                           indf0	equ	0xFEF
  2796                           postinc0	equ	0xFEE
  2797                           postdec0	equ	0xFED
  2798                           preinc0	equ	0xFEC
  2799                           plusw0	equ	0xFEB
  2800                           fsr0h	equ	0xFEA
  2801                           fsr0l	equ	0xFE9
  2802                           wreg	equ	0xFE8
  2803                           indf1	equ	0xFE7
  2804                           postinc1	equ	0xFE6
  2805                           postdec1	equ	0xFE5
  2806                           preinc1	equ	0xFE4
  2807                           plusw1	equ	0xFE3
  2808                           fsr1h	equ	0xFE2
  2809                           fsr1l	equ	0xFE1
  2810                           bsr	equ	0xFE0
  2811                           indf2	equ	0xFDF
  2812                           postinc2	equ	0xFDE
  2813                           postdec2	equ	0xFDD
  2814                           preinc2	equ	0xFDC
  2815                           plusw2	equ	0xFDB
  2816                           fsr2h	equ	0xFDA
  2817                           fsr2l	equ	0xFD9
  2818                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     75     110
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    S1811_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5641
                                             71 COMRAM     4     4      0
                        _Timer0_Init
                  _Timer0_StartTimer
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                     _set_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     243
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timingISR                                            0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (5) i2_Timer0_StartTimer                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _set_duty_cycle

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4B      6E       1       87.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      15        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 25 21:00:40 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                        __CFG_OSC$HS 000000  
                                                                l285 10DE  
                                                                l286 10C6  
                                                                l859 0F3C  
                                                       __CFG_CPB$OFF 000000  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _lcd 004C  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                        main@address 0048  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1107 0BF8  
                                                               l1116 0C70  
                                                               l1220 0E68  
                                                               l1117 0C6A  
                                                               l1224 0DDC  
                                                               l1217 0D52  
                                                               l1091 0B2C  
                                                               l1180 09C8  
                                                               l1092 0B04  
                                                               l2310 0B1A  
                                                               l2230 09FC  
                                                               l1176 06D8  
                                                               l1193 0990  
                                                               l1185 0902  
                                                               l1186 08FC  
                                                               l2410 0CF0  
                                                               l2234 0A02  
                                                               l1099 0D0C  
                                                               l2404 0CE2  
                                                               l2332 0B64  
                                                               l2308 0B14  
                                                               l2334 0B6A  
                                                               l2342 0B7E  
                                                               l2254 0A4A  
                                                               l2408 0CEC  
                                                               l2360 0C20  
                                                               l2352 0BE6  
                                                               l2426 10A4  
                                                               l2450 0680  
                                                               l2370 0C38  
                                                               l2266 0A74  
                                                               l2258 0A50  
                                                               l2524 08C2  
                                                               l2452 0692  
                                                               l2518 08A2  
                                                               l2614 0E56  
                                                               l2702 1020  
                                                               l2560 09B2  
                                                               l2544 0948  
                                                               l2448 067A  
                                                               l2376 0C46  
                                                               l2296 0AB2  
                                                               l2466 06C0  
                                                               l2660 0E90  
                                                               l2548 0968  
                                                               l2476 06FA  
                                                               l2468 06C6  
                                                               l2396 0CB8  
                                                               l2590 0DC2  
                                                               l2726 1082  
                                                               l2680 0EF2  
                                                               l2584 0D84  
                                                               l2586 0D8C  
                                                               l2578 0D64  
                                                               l2676 0EE0  
                                                               l2596 0E04  
                                                               l2588 0D9A  
                                                               l2694 0F2A  
                                                               l2686 0EFC  
                                                               l2598 0E12  
                                                               l2688 0F0A  
                                                               STR_1 061D  
                                                               STR_2 0648  
                                                               STR_3 0605  
                                                               STR_7 0609  
                                                               u1100 0B36  
                                                               u1050 0AD6  
                                                               u1060 0AE6  
                                                               u1310 0CC6  
                                                               u1230 0C4C  
                                                               u1070 0AEA  
                                                               u1250 0C62  
                                                               u1190 0C0C  
                                                               u1440 06E6  
                                                               u1530 0958  
                                                               u1450 0862  
                                                               u1540 0978  
                                                               u1620 0E1E  
                                                               u1710 0F12  
                                                               u1455 0856  
                                                               u1490 08F4  
                                                               u1730 1074  
                                                               u1660 0E7C  
                                                               u1670 0EB2  
                                                               u1675 0EA6  
                                                               u1747 10B8  
                                                               _RCIF 007CF5  
                                                   ??_initialize_PWM 0003  
                                                       __CFG_STVR$ON 000000  
                                                               _dbuf 0080  
                                                               _flag 0067  
                                                 initialize_PWM@freq 0001  
                                                               _main 100C  
                                                               _prec 005F  
                                                               _nout 005B  
                                                               fsr1l 000FE1  
                                                               btemp 006F  
                                                   __end_of_ADC_Init 120C  
                                                   __end_of_ADC_Read 10E4  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0032  
                                                       ___param_bank 000000  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___fladd 0D12  
                                                              ?_main 0001  
                                                       get_temp@temp 0038  
                                                              STR_21 0627  
                                                              STR_30 062A  
                                                              STR_25 062D  
                                                              STR_34 0630  
                                                              STR_54 063C  
                                                              STR_39 0611  
                                                              STR_49 0639  
                                                              STR_74 0636  
                                                              STR_59 060D  
                                                              STR_69 0633  
                                                              STR_94 063F  
                                                              STR_79 0615  
                                                    __end_of___flmul 09CE  
                                                              STR_99 0619  
                                                    __end_of___flsub 1178  
                                                    __end_of___fltol 0F42  
                                                              _T0CON 000FD5  
                                                              _T2CON 000FCA  
                                                              i2l247 002A  
                                                              _RCSTA 000FAB  
                                                              _TMR0H 000FD7  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _flags 0061  
                                                              _errno 0059  
                                                              _width 005D  
                                                              tablat 000FF5  
                                                              ttemp5 0070  
                                                              ttemp6 0073  
                                                              ttemp7 0077  
                                                              status 000FD8  
                                                              wtemp8 0070  
                                                    __initialization 10E4  
                                                       __end_of_main 1090  
                                                             ??_main 0048  
                                                      __activetblptr 000001  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             STR_103 0601  
                                                             STR_121 0621  
                                                             STR_130 0624  
                                                             _ADRESH 000FC4  
                                                             STR_117 0642  
                                                             STR_126 0645  
                                                             _ADRESL 000FC3  
                                                             _CCPR1L 000FBE  
                                                             _RCREG1 000FAE  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                   __end_of___xxtofl 0E6E  
                                                      ??_Timer0_Init 0001  
                                                i2_Timer0_StartTimer 1214  
                                                   __end_of_get_temp 100C  
                                                          ??___fladd 0009  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                    ADC_Read@channel 0005  
                                                             clear_0 110A  
                                                             clear_1 1116  
                                                       __pdataCOMRAM 0068  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                       __mediumconst 0000  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                       ___xxtofl@arg 000B  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 111C  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                     __pcstackCOMRAM 0001  
                                                __end_of_Timer0_Init 119C  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                         __pbssBANK0 0080  
                                                      _initialize_RX 11EA  
                                                      _initialize_TX 11D6  
                                                            _CCP1CON 000FBD  
                                                 __size_of_timingISR 002A  
                                                          ?___xxtofl 0001  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                            __Hparam 0000  
                                                        _Timer0_Init 1178  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___fladd 09CE  
                                                            ___flmul 064C  
                                                            ___flsub 112E  
                                                            ___fltol 0E6E  
                                                       __psmallconst 0600  
                                                            __pcinit 10E4  
                                                            __ramtop 0600  
                                                            __ptext0 100C  
                                                            __ptext1 119C  
                                                            __ptext2 11D6  
                                                            __ptext3 11EA  
                                                            __ptext4 11BE  
                                                            __ptext5 0F42  
                                                            __ptext6 0D12  
                                                            __ptext7 112E  
                                                            __ptext8 09CE  
                                                            __ptext9 064C  
                                                          _T0CONbits 000FD5  
                                                         ??___xxtofl 0005  
                                                            _time_ms 0055  
                                                         ??_get_temp 0034  
                                               end_of_initialization 111C  
                                                  __end_of_timingISR 0032  
                                                          _RCSTAbits 000FAB  
                                                            postdec1 000FE5  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                          _PORTCbits 000F82  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 119C  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 120C  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                      __pidataCOMRAM 121C  
                                             __end_of_set_duty_cycle 11BE  
                                          __end_of_Timer0_StartTimer 1214  
                                                start_initialization 10E4  
                                                 set_duty_cycle@mask 0003  
                                        __end_ofi2_Timer0_StartTimer 121C  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 004C  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                              set_duty_cycle@upper_8 0002  
                                                  __size_of___xxtofl 015C  
                                                  __size_of_get_temp 00CA  
                                                       ?_Timer0_Init 0001  
                                                     _initialize_PWM 11BE  
                                                          __pintcode 0008  
                                                           ?___fladd 0001  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                get_temp@adc_voltage 003C  
                                                        __smallconst 0600  
                                         __size_of_Timer0_StartTimer 0008  
                                                           _ADC_Init 11FE  
                                                           _ADC_Read 1090  
                                             __end_of_initialize_PWM 11D6  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 0051  
                                                          _timingISR 0008  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 10F8  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                                           __Lrparam 0000  
                                                       __Lsmallconst 0600  
                                                         ?_timingISR 0001  
                                                   __size_of___fladd 0344  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                           ___xxtofl 0D12  
                                                           __ptext10 1090  
                                                           __ptext11 11FE  
                                                           __ptext12 0E6E  
                                                           __ptext13 120C  
                                                           __ptext14 1178  
                                                           __ptext16 1214  
                                                           _get_temp 0F42  
                                                    _interval_events 0063  
                                                      __size_of_main 0084  
                                              __end_of_initialize_RX 11FE  
                                              __end_of_initialize_TX 11EA  
                                                          stoa@F1152 0068  
                                               __size_of_Timer0_Init 0024  
                                                           int$flags 006F  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 0066  
                                                           _ungetcnt 0065  
                                                           main@temp 004A  
                                                         _INTCONbits 000FF2  
                                                           intlevel2 1224  
                                                        ??_timingISR 0001  
                                               get_temp@real_voltage 0034  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
