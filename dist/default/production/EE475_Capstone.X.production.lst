

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 20 01:22:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 2.05
    71                           ; Generated 20/12/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4520 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataBANK0
   106  003A16                     __pidataBANK0:
   107                           	opt callstack 0
   108                           
   109                           ;initializer for stoa@F1152
   110  003A16  28                 	db	40
   111  003A17  6E                 	db	110
   112  003A18  75                 	db	117
   113  003A19  6C                 	db	108
   114  003A1A  6C                 	db	108
   115  003A1B  29                 	db	41
   116  003A1C  00                 	db	0
   117  0000                     _ADRESL	set	4035
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADCON0	set	4034
   120  0000                     _SSPBUF	set	4041
   121  0000                     _SSPCON1	set	4038
   122  0000                     _SSPSTATbits	set	4039
   123  0000                     _T0CON	set	4053
   124  0000                     _TMR0L	set	4054
   125  0000                     _TMR0H	set	4055
   126  0000                     _T0CONbits	set	4053
   127  0000                     _ADCON1	set	4033
   128  0000                     _RCREG1	set	4014
   129  0000                     _TXREG	set	4013
   130  0000                     _RCSTAbits	set	4011
   131  0000                     _RCSTA	set	4011
   132  0000                     _SPBRG	set	4015
   133  0000                     _TXSTAbits	set	4012
   134  0000                     _RCONbits	set	4048
   135  0000                     _INTCON2bits	set	4081
   136  0000                     _INTCONbits	set	4082
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISA	set	3986
   139  0000                     _PORTA	set	3968
   140  0000                     _PORTD	set	3971
   141  0000                     _PORTB	set	3969
   142  0000                     _PORTCbits	set	3970
   143  0000                     _TRISCbits	set	3988
   144  0000                     _TRISB	set	3987
   145  0000                     _TRISD	set	3989
   146  0000                     _GO_nDONE	set	32273
   147  0000                     _TMR0IE	set	32661
   148  0000                     _TMR0IF	set	32658
   149  0000                     _RCIF	set	31989
   150                           
   151                           	psect	smallconst
   152  000600                     __psmallconst:
   153                           	opt callstack 0
   154  000600  00                 	db	0
   155  000601                     STR_103:
   156  000601  68                 	db	104	;'h'
   157  000602  68                 	db	104	;'h'
   158  000603  58                 	db	88	;'X'
   159  000604  00                 	db	0
   160  000605                     STR_3:
   161  000605  68                 	db	104	;'h'
   162  000606  68                 	db	104	;'h'
   163  000607  64                 	db	100	;'d'
   164  000608  00                 	db	0
   165  000609                     STR_7:
   166  000609  68                 	db	104	;'h'
   167  00060A  68                 	db	104	;'h'
   168  00060B  69                 	db	105	;'i'
   169  00060C  00                 	db	0
   170  00060D                     STR_59:
   171  00060D  68                 	db	104	;'h'
   172  00060E  68                 	db	104	;'h'
   173  00060F  6E                 	db	110	;'n'
   174  000610  00                 	db	0
   175  000611                     STR_39:
   176  000611  68                 	db	104	;'h'
   177  000612  68                 	db	104	;'h'
   178  000613  6F                 	db	111	;'o'
   179  000614  00                 	db	0
   180  000615                     STR_79:
   181  000615  68                 	db	104	;'h'
   182  000616  68                 	db	104	;'h'
   183  000617  75                 	db	117	;'u'
   184  000618  00                 	db	0
   185  000619                     STR_99:
   186  000619  68                 	db	104	;'h'
   187  00061A  68                 	db	104	;'h'
   188  00061B  78                 	db	120	;'x'
   189  00061C  00                 	db	0
   190  00061D                     STR_1:
   191  00061D  25                 	db	37
   192  00061E  6C                 	db	108	;'l'
   193  00061F  75                 	db	117	;'u'
   194  000620  00                 	db	0
   195  000621                     STR_121:
   196  000621  6C                 	db	108	;'l'
   197  000622  58                 	db	88	;'X'
   198  000623  00                 	db	0
   199  000624                     STR_130:
   200  000624  7A                 	db	122	;'z'
   201  000625  58                 	db	88	;'X'
   202  000626  00                 	db	0
   203  000627                     STR_21:
   204  000627  6C                 	db	108	;'l'
   205  000628  64                 	db	100	;'d'
   206  000629  00                 	db	0
   207  00062A                     STR_30:
   208  00062A  7A                 	db	122	;'z'
   209  00062B  64                 	db	100	;'d'
   210  00062C  00                 	db	0
   211  00062D                     STR_25:
   212  00062D  6C                 	db	108	;'l'
   213  00062E  69                 	db	105	;'i'
   214  00062F  00                 	db	0
   215  000630                     STR_34:
   216  000630  7A                 	db	122	;'z'
   217  000631  69                 	db	105	;'i'
   218  000632  00                 	db	0
   219  000633                     STR_69:
   220  000633  6C                 	db	108	;'l'
   221  000634  6E                 	db	110	;'n'
   222  000635  00                 	db	0
   223  000636                     STR_74:
   224  000636  7A                 	db	122	;'z'
   225  000637  6E                 	db	110	;'n'
   226  000638  00                 	db	0
   227  000639                     STR_49:
   228  000639  6C                 	db	108	;'l'
   229  00063A  6F                 	db	111	;'o'
   230  00063B  00                 	db	0
   231  00063C                     STR_54:
   232  00063C  7A                 	db	122	;'z'
   233  00063D  6F                 	db	111	;'o'
   234  00063E  00                 	db	0
   235  00063F                     STR_94:
   236  00063F  7A                 	db	122	;'z'
   237  000640  75                 	db	117	;'u'
   238  000641  00                 	db	0
   239  000642                     STR_117:
   240  000642  6C                 	db	108	;'l'
   241  000643  78                 	db	120	;'x'
   242  000644  00                 	db	0
   243  000645                     STR_126:
   244  000645  7A                 	db	122	;'z'
   245  000646  78                 	db	120	;'x'
   246  000647  00                 	db	0
   247  000648  25                 	db	37
   248  000649  64                 	db	100	;'d'
   249  00064A  00                 	db	0
   250  0000                     
   251                           ; #config settings
   252  00064B  00                 	db	0	; dummy byte at the end
   253  0000                     
   254                           	psect	cinit
   255  00376A                     __pcinit:
   256                           	opt callstack 0
   257  00376A                     start_initialization:
   258                           	opt callstack 0
   259  00376A                     __initialization:
   260                           	opt callstack 0
   261                           
   262                           ; Initialize objects allocated to BANK0 (7 bytes)
   263                           ; load TBLPTR registers with __pidataBANK0
   264  00376A  0E16               	movlw	low __pidataBANK0
   265  00376C  6EF6               	movwf	tblptrl,c
   266  00376E  0E3A               	movlw	high __pidataBANK0
   267  003770  6EF7               	movwf	tblptrh,c
   268  003772  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   269  003774  6EF8               	movwf	tblptru,c
   270  003776  EE00  F0EA         	lfsr	0,__pdataBANK0
   271  00377A  EE10 F007          	lfsr	1,7
   272  00377E                     copy_data0:
   273  00377E  0009               	tblrd		*+
   274  003780  CFF5 FFEE          	movff	tablat,postinc0
   275  003784  50E5               	movf	postdec1,w,c
   276  003786  50E1               	movf	fsr1l,w,c
   277  003788  E1FA               	bnz	copy_data0
   278                           
   279                           ; Clear objects allocated to BANK0 (56 bytes)
   280  00378A  EE00  F080         	lfsr	0,__pbssBANK0
   281  00378E  0E38               	movlw	56
   282  003790                     clear_0:
   283  003790  6AEE               	clrf	postinc0,c
   284  003792  06E8               	decf	wreg,f,c
   285  003794  E1FD               	bnz	clear_0
   286  003796                     end_of_initialization:
   287                           	opt callstack 0
   288  003796                     __end_of__initialization:
   289                           	opt callstack 0
   290  003796  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   291  003798  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   292  00379A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293  00379C  6EF8               	movwf	tblptru,c
   294  00379E  0100               	movlb	0
   295  0037A0  EFC9  F016         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssBANK0
   298  000080                     __pbssBANK0:
   299                           	opt callstack 0
   300  000080                     _lcd:
   301                           	opt callstack 0
   302  000080                     	ds	5
   303  000085                     _time_ms:
   304                           	opt callstack 0
   305  000085                     	ds	4
   306  000089                     _errno:
   307                           	opt callstack 0
   308  000089                     	ds	2
   309  00008B                     _nout:
   310                           	opt callstack 0
   311  00008B                     	ds	2
   312  00008D                     _width:
   313                           	opt callstack 0
   314  00008D                     	ds	2
   315  00008F                     _prec:
   316                           	opt callstack 0
   317  00008F                     	ds	2
   318  000091                     _flags:
   319                           	opt callstack 0
   320  000091                     	ds	2
   321  000093                     _interval_events:
   322                           	opt callstack 0
   323  000093                     	ds	2
   324  000095                     _ungetcnt:
   325                           	opt callstack 0
   326  000095                     	ds	1
   327  000096                     	ds	1
   328  000097                     _flag:
   329                           	opt callstack 0
   330  000097                     	ds	1
   331  000098                     _dbuf:
   332                           	opt callstack 0
   333  000098                     	ds	32
   334                           
   335                           	psect	dataBANK0
   336  0000EA                     __pdataBANK0:
   337                           	opt callstack 0
   338  0000EA                     stoa@F1152:
   339                           	opt callstack 0
   340  0000EA                     	ds	7
   341                           
   342                           	psect	cstackBANK0
   343  0000B8                     __pcstackBANK0:
   344                           	opt callstack 0
   345  0000B8                     ?_sprintf:
   346                           	opt callstack 0
   347  0000B8                     sprintf@s:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x0
   351  0000B8                     	ds	2
   352  0000BA                     sprintf@fmt:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x2
   356  0000BA                     	ds	8
   357  0000C2                     sprintf@f:
   358                           	opt callstack 0
   359                           
   360                           ; 6 bytes @ 0xA
   361  0000C2                     	ds	6
   362  0000C8                     sprintf@ap:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x10
   366  0000C8                     	ds	2
   367  0000CA                     int_to_char@result:
   368                           	opt callstack 0
   369                           
   370                           ; 10 bytes @ 0x12
   371  0000CA                     	ds	10
   372  0000D4                     int_to_char@the_num:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x1C
   376  0000D4                     	ds	4
   377  0000D8                     UARTSendString@c:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x20
   381  0000D8                     	ds	2
   382  0000DA                     UARTSendString@i:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x22
   386  0000DA                     	ds	2
   387  0000DC                     read_op@address:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x24
   391  0000DC                     	ds	1
   392  0000DD                     read_op@i:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x25
   396  0000DD                     	ds	2
   397  0000DF                     read_op@result:
   398                           	opt callstack 0
   399                           
   400                           ; 1 bytes @ 0x27
   401  0000DF                     	ds	1
   402  0000E0                     read_op@mask:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x28
   406  0000E0                     	ds	1
   407  0000E1                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x29
   410  0000E1                     	ds	1
   411  0000E2                     main@temp:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x2A
   415  0000E2                     	ds	2
   416  0000E4                     main@stored_temp:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x2C
   420  0000E4                     	ds	2
   421  0000E6                     main@time_elapsed:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x2E
   425  0000E6                     	ds	2
   426  0000E8                     main@address:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x30
   430  0000E8                     	ds	2
   431                           
   432                           	psect	cstackCOMRAM
   433  000001                     __pcstackCOMRAM:
   434                           	opt callstack 0
   435  000001                     ?_ADC_Read:
   436                           	opt callstack 0
   437  000001                     ?_strlen:
   438                           	opt callstack 0
   439  000001                     ?_isupper:
   440                           	opt callstack 0
   441  000001                     ?_isalpha:
   442                           	opt callstack 0
   443  000001                     ?_isdigit:
   444                           	opt callstack 0
   445  000001                     ?_strncmp:
   446                           	opt callstack 0
   447  000001                     ?_isspace:
   448                           	opt callstack 0
   449  000001                     ?_getch:
   450                           	opt callstack 0
   451  000001                     ?_islower:
   452                           	opt callstack 0
   453  000001                     ?___wmul:
   454                           	opt callstack 0
   455  000001                     ?___lldiv:
   456                           	opt callstack 0
   457  000001                     ?___xxtofl:
   458                           	opt callstack 0
   459  000001                     ?___aodiv:
   460                           	opt callstack 0
   461  000001                     ?___aomod:
   462                           	opt callstack 0
   463  000001                     ?___lodiv:
   464                           	opt callstack 0
   465  000001                     ?___lomod:
   466                           	opt callstack 0
   467  000001                     UARTSendChar@c:
   468                           	opt callstack 0
   469  000001                     ___wmul@multiplier:
   470                           	opt callstack 0
   471  000001                     isalpha@c:
   472                           	opt callstack 0
   473  000001                     isdigit@c:
   474                           	opt callstack 0
   475  000001                     isspace@c:
   476                           	opt callstack 0
   477  000001                     isupper@c:
   478                           	opt callstack 0
   479  000001                     fputc@c:
   480                           	opt callstack 0
   481  000001                     strlen@s:
   482                           	opt callstack 0
   483  000001                     strncmp@_l:
   484                           	opt callstack 0
   485  000001                     islower@c:
   486                           	opt callstack 0
   487  000001                     ___lldiv@dividend:
   488                           	opt callstack 0
   489  000001                     ___xxtofl@val:
   490                           	opt callstack 0
   491  000001                     ___aodiv@dividend:
   492                           	opt callstack 0
   493  000001                     ___aomod@dividend:
   494                           	opt callstack 0
   495  000001                     ___lodiv@dividend:
   496                           	opt callstack 0
   497  000001                     ___lomod@dividend:
   498                           	opt callstack 0
   499                           
   500                           ; 8 bytes @ 0x0
   501  000001                     	ds	1
   502  000002                     
   503                           ; 1 bytes @ 0x1
   504  000002                     	ds	1
   505  000003                     ??_ADC_Read:
   506  000003                     ??_isupper:
   507  000003                     ??_isalpha:
   508  000003                     ??_isdigit:
   509  000003                     ??_isspace:
   510  000003                     ??_islower:
   511  000003                     ?_fgetc:
   512                           	opt callstack 0
   513  000003                     ___wmul@multiplicand:
   514                           	opt callstack 0
   515  000003                     fputc@fp:
   516                           	opt callstack 0
   517  000003                     fgetc@fp:
   518                           	opt callstack 0
   519  000003                     strlen@a:
   520                           	opt callstack 0
   521  000003                     strncmp@_r:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  000003                     	ds	2
   526  000005                     ??_fputc:
   527  000005                     ??_fgetc:
   528  000005                     ??___xxtofl:
   529  000005                     ADC_Read@channel:
   530                           	opt callstack 0
   531  000005                     ___wmul@product:
   532                           	opt callstack 0
   533  000005                     strncmp@n:
   534                           	opt callstack 0
   535  000005                     ___lldiv@divisor:
   536                           	opt callstack 0
   537                           
   538                           ; 4 bytes @ 0x4
   539  000005                     	ds	2
   540  000007                     ??_strncmp:
   541  000007                     ?_toupper:
   542                           	opt callstack 0
   543  000007                     _isspace$1733:
   544                           	opt callstack 0
   545  000007                     toupper@c:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x6
   549  000007                     	ds	1
   550  000008                     ?_atoi:
   551                           	opt callstack 0
   552  000008                     atoi@s:
   553                           	opt callstack 0
   554  000008                     strncmp@l:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x7
   558  000008                     	ds	1
   559  000009                     ??_toupper:
   560  000009                     ___xxtofl@sign:
   561                           	opt callstack 0
   562  000009                     ___lldiv@quotient:
   563                           	opt callstack 0
   564  000009                     ___aodiv@divisor:
   565                           	opt callstack 0
   566  000009                     ___aomod@divisor:
   567                           	opt callstack 0
   568  000009                     ___lodiv@divisor:
   569                           	opt callstack 0
   570  000009                     ___lomod@divisor:
   571                           	opt callstack 0
   572                           
   573                           ; 8 bytes @ 0x8
   574  000009                     	ds	1
   575  00000A                     ??_atoi:
   576  00000A                     ?_stoa:
   577                           	opt callstack 0
   578  00000A                     ___xxtofl@exp:
   579                           	opt callstack 0
   580  00000A                     stoa@fp:
   581                           	opt callstack 0
   582  00000A                     fputs@s:
   583                           	opt callstack 0
   584  00000A                     fgetc@c:
   585                           	opt callstack 0
   586  00000A                     strncmp@r:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x9
   590  00000A                     	ds	1
   591  00000B                     ___xxtofl@arg:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0xA
   595  00000B                     	ds	1
   596  00000C                     stoa@s:
   597                           	opt callstack 0
   598  00000C                     fputs@fp:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0xB
   602  00000C                     	ds	1
   603  00000D                     ___lldiv@counter:
   604                           	opt callstack 0
   605  00000D                     _toupper$1853:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0xC
   609  00000D                     	ds	1
   610  00000E                     ??_stoa:
   611  00000E                     write_op@data:
   612                           	opt callstack 0
   613  00000E                     fputs@c:
   614                           	opt callstack 0
   615  00000E                     atoi@neg:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0xD
   619  00000E                     	ds	1
   620  00000F                     ??_write_op:
   621  00000F                     ?___flmul:
   622                           	opt callstack 0
   623  00000F                     fputs@i:
   624                           	opt callstack 0
   625  00000F                     ___flmul@b:
   626                           	opt callstack 0
   627  00000F                     stoa@nuls:
   628                           	opt callstack 0
   629                           
   630                           ; 7 bytes @ 0xE
   631  00000F                     	ds	1
   632  000010                     write_op@address:
   633                           	opt callstack 0
   634  000010                     _atoi$1696:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0xF
   638  000010                     	ds	1
   639  000011                     ?_pad:
   640                           	opt callstack 0
   641  000011                     ___aodiv@counter:
   642                           	opt callstack 0
   643  000011                     ___aomod@counter:
   644                           	opt callstack 0
   645  000011                     ___lomod@counter:
   646                           	opt callstack 0
   647  000011                     pad@fp:
   648                           	opt callstack 0
   649  000011                     ___lodiv@quotient:
   650                           	opt callstack 0
   651                           
   652                           ; 8 bytes @ 0x10
   653  000011                     	ds	1
   654  000012                     ___aodiv@sign:
   655                           	opt callstack 0
   656  000012                     ___aomod@sign:
   657                           	opt callstack 0
   658  000012                     _atoi$1698:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x11
   662  000012                     	ds	1
   663  000013                     ?_abs:
   664                           	opt callstack 0
   665  000013                     pad@buf:
   666                           	opt callstack 0
   667  000013                     abs@a:
   668                           	opt callstack 0
   669  000013                     ___flmul@a:
   670                           	opt callstack 0
   671  000013                     ___aodiv@quotient:
   672                           	opt callstack 0
   673                           
   674                           ; 8 bytes @ 0x12
   675  000013                     	ds	1
   676  000014                     _atoi$1697:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x13
   680  000014                     	ds	1
   681  000015                     ??_abs:
   682  000015                     pad@p:
   683                           	opt callstack 0
   684  000015                     atoi@n:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x14
   688  000015                     	ds	1
   689  000016                     stoa@i:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x15
   693  000016                     	ds	1
   694  000017                     ??___flmul:
   695  000017                     ??_pad:
   696                           
   697                           ; 1 bytes @ 0x16
   698  000017                     	ds	1
   699  000018                     pad@i:
   700                           	opt callstack 0
   701  000018                     stoa@w:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x17
   705  000018                     	ds	1
   706  000019                     ___lodiv@counter:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x18
   710  000019                     	ds	1
   711  00001A                     pad@w:
   712                           	opt callstack 0
   713  00001A                     stoa@cp:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x19
   717  00001A                     	ds	1
   718  00001B                     ___flmul@sign:
   719                           	opt callstack 0
   720                           
   721                           ; 1 bytes @ 0x1A
   722  00001B                     	ds	1
   723  00001C                     ?_ctoa:
   724                           	opt callstack 0
   725  00001C                     ?_dtoa:
   726                           	opt callstack 0
   727  00001C                     ?_otoa:
   728                           	opt callstack 0
   729  00001C                     ?_utoa:
   730                           	opt callstack 0
   731  00001C                     ?_xtoa:
   732                           	opt callstack 0
   733  00001C                     ctoa@fp:
   734                           	opt callstack 0
   735  00001C                     dtoa@fp:
   736                           	opt callstack 0
   737  00001C                     otoa@fp:
   738                           	opt callstack 0
   739  00001C                     stoa@p:
   740                           	opt callstack 0
   741  00001C                     utoa@fp:
   742                           	opt callstack 0
   743  00001C                     xtoa@fp:
   744                           	opt callstack 0
   745  00001C                     ___flmul@grs:
   746                           	opt callstack 0
   747                           
   748                           ; 4 bytes @ 0x1B
   749  00001C                     	ds	2
   750  00001E                     ctoa@c:
   751                           	opt callstack 0
   752  00001E                     stoa@l:
   753                           	opt callstack 0
   754  00001E                     dtoa@d:
   755                           	opt callstack 0
   756  00001E                     otoa@d:
   757                           	opt callstack 0
   758  00001E                     utoa@d:
   759                           	opt callstack 0
   760  00001E                     xtoa@d:
   761                           	opt callstack 0
   762                           
   763                           ; 8 bytes @ 0x1D
   764  00001E                     	ds	1
   765  00001F                     ctoa@w:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x1E
   769  00001F                     	ds	1
   770  000020                     ___flmul@aexp:
   771                           	opt callstack 0
   772                           
   773                           ; 1 bytes @ 0x1F
   774  000020                     	ds	1
   775  000021                     ___flmul@bexp:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x20
   779  000021                     	ds	1
   780  000022                     ___flmul@prod:
   781                           	opt callstack 0
   782                           
   783                           ; 4 bytes @ 0x21
   784  000022                     	ds	4
   785  000026                     ??_dtoa:
   786  000026                     ??_otoa:
   787  000026                     ??_utoa:
   788  000026                     xtoa@x:
   789                           	opt callstack 0
   790  000026                     ___flmul@temp:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x25
   794  000026                     	ds	1
   795  000027                     ??_xtoa:
   796                           
   797                           ; 1 bytes @ 0x26
   798  000027                     	ds	1
   799  000028                     ?___fldiv:
   800                           	opt callstack 0
   801  000028                     ___fldiv@b:
   802                           	opt callstack 0
   803                           
   804                           ; 4 bytes @ 0x27
   805  000028                     	ds	4
   806  00002C                     ___fldiv@a:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x2B
   810  00002C                     	ds	2
   811  00002E                     _dtoa$1050:
   812                           	opt callstack 0
   813  00002E                     otoa@p:
   814                           	opt callstack 0
   815  00002E                     utoa@p:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x2D
   819  00002E                     	ds	1
   820  00002F                     _xtoa$1086:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x2E
   824  00002F                     	ds	1
   825  000030                     ??___fldiv:
   826  000030                     dtoa@p:
   827                           	opt callstack 0
   828  000030                     otoa@t:
   829                           	opt callstack 0
   830  000030                     utoa@w:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x2F
   834  000030                     	ds	1
   835  000031                     _xtoa$1087:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x30
   839  000031                     	ds	1
   840  000032                     dtoa@w:
   841                           	opt callstack 0
   842  000032                     otoa@w:
   843                           	opt callstack 0
   844  000032                     utoa@n:
   845                           	opt callstack 0
   846                           
   847                           ; 8 bytes @ 0x31
   848  000032                     	ds	1
   849  000033                     xtoa@p:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x32
   853  000033                     	ds	1
   854  000034                     dtoa@s:
   855                           	opt callstack 0
   856  000034                     ___fldiv@rem:
   857                           	opt callstack 0
   858  000034                     otoa@n:
   859                           	opt callstack 0
   860                           
   861                           ; 8 bytes @ 0x33
   862  000034                     	ds	1
   863  000035                     xtoa@w:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x34
   867  000035                     	ds	1
   868  000036                     dtoa@n:
   869                           	opt callstack 0
   870                           
   871                           ; 8 bytes @ 0x35
   872  000036                     	ds	1
   873  000037                     xtoa@n:
   874                           	opt callstack 0
   875                           
   876                           ; 8 bytes @ 0x36
   877  000037                     	ds	1
   878  000038                     ___fldiv@sign:
   879                           	opt callstack 0
   880                           
   881                           ; 1 bytes @ 0x37
   882  000038                     	ds	1
   883  000039                     ___fldiv@new_exp:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x38
   887  000039                     	ds	1
   888  00003A                     utoa@i:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x39
   892  00003A                     	ds	1
   893  00003B                     ___fldiv@grs:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x3A
   897  00003B                     	ds	1
   898  00003C                     otoa@i:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x3B
   902  00003C                     	ds	2
   903  00003E                     dtoa@i:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x3D
   907  00003E                     	ds	1
   908  00003F                     ___fldiv@bexp:
   909                           	opt callstack 0
   910  00003F                     xtoa@i:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x3E
   914  00003F                     	ds	1
   915  000040                     ___fldiv@aexp:
   916                           	opt callstack 0
   917                           
   918                           ; 1 bytes @ 0x3F
   919  000040                     	ds	1
   920  000041                     ?___fladd:
   921                           	opt callstack 0
   922  000041                     xtoa@c:
   923                           	opt callstack 0
   924  000041                     ___fladd@b:
   925                           	opt callstack 0
   926                           
   927                           ; 4 bytes @ 0x40
   928  000041                     	ds	2
   929  000043                     ?_vfpfcnvrt:
   930                           	opt callstack 0
   931  000043                     vfpfcnvrt@fp:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x42
   935  000043                     	ds	2
   936  000045                     vfpfcnvrt@fmt:
   937                           	opt callstack 0
   938  000045                     ___fladd@a:
   939                           	opt callstack 0
   940                           
   941                           ; 4 bytes @ 0x44
   942  000045                     	ds	2
   943  000047                     vfpfcnvrt@ap:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x46
   947  000047                     	ds	2
   948  000049                     ??___fladd:
   949  000049                     ??_vfpfcnvrt:
   950                           
   951                           ; 1 bytes @ 0x48
   952  000049                     	ds	4
   953  00004D                     ___fladd@signs:
   954                           	opt callstack 0
   955                           
   956                           ; 1 bytes @ 0x4C
   957  00004D                     	ds	1
   958  00004E                     ___fladd@aexp:
   959                           	opt callstack 0
   960                           
   961                           ; 1 bytes @ 0x4D
   962  00004E                     	ds	1
   963  00004F                     ___fladd@bexp:
   964                           	opt callstack 0
   965                           
   966                           ; 1 bytes @ 0x4E
   967  00004F                     	ds	1
   968  000050                     ___fladd@grs:
   969                           	opt callstack 0
   970                           
   971                           ; 1 bytes @ 0x4F
   972  000050                     	ds	1
   973  000051                     ?_get_temp:
   974                           	opt callstack 0
   975                           
   976                           ; 4 bytes @ 0x50
   977  000051                     	ds	4
   978  000055                     get_temp@real_voltage:
   979                           	opt callstack 0
   980                           
   981                           ; 4 bytes @ 0x54
   982  000055                     	ds	2
   983  000057                     vfpfcnvrt@cp:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x56
   987  000057                     	ds	2
   988  000059                     vfpfcnvrt@done:
   989                           	opt callstack 0
   990  000059                     get_temp@temp:
   991                           	opt callstack 0
   992                           
   993                           ; 4 bytes @ 0x58
   994  000059                     	ds	2
   995  00005B                     _vfpfcnvrt$1101:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x5A
   999  00005B                     	ds	2
  1000  00005D                     get_temp@adc_voltage:
  1001                           	opt callstack 0
  1002  00005D                     _vfpfcnvrt$1102:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x5C
  1006  00005D                     	ds	2
  1007  00005F                     ?___fltol:
  1008                           	opt callstack 0
  1009  00005F                     ___fltol@f1:
  1010                           	opt callstack 0
  1011  00005F                     vfpfcnvrt@ll:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x5E
  1015  00005F                     	ds	4
  1016  000063                     ??___fltol:
  1017                           
  1018                           ; 1 bytes @ 0x62
  1019  000063                     	ds	4
  1020  000067                     ___fltol@sign1:
  1021                           	opt callstack 0
  1022  000067                     vfpfcnvrt@vp:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x66
  1026  000067                     	ds	1
  1027  000068                     ___fltol@exp1:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x67
  1031  000068                     	ds	1
  1032  000069                     vfpfcnvrt@c:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x68
  1036  000069                     	ds	1
  1037  00006A                     vfpfcnvrt@llu:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x69
  1041  00006A                     	ds	8
  1042  000072                     ?_vfprintf:
  1043                           	opt callstack 0
  1044  000072                     vfprintf@fp:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x71
  1048  000072                     	ds	2
  1049  000074                     vfprintf@fmt:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x73
  1053  000074                     	ds	2
  1054  000076                     vfprintf@ap:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x75
  1058  000076                     	ds	2
  1059  000078                     vfprintf@cfmt:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x77
  1063  000078                     	ds	2
  1064  00007A                     ?_int_to_char:
  1065                           	opt callstack 0
  1066  00007A                     int_to_char@num:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x79
  1070  00007A                     	ds	4
  1071  00007E                     ??_read_op:
  1072                           
  1073                           ; 1 bytes @ 0x7D
  1074  00007E                     	ds	1
  1075                           
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 28 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  address         2   48[BANK0 ] int 
  1086 ;;  time_elapsed    2   46[BANK0 ] int 
  1087 ;;  stored_temp     2   44[BANK0 ] int 
  1088 ;;  temp            2   42[BANK0 ] int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1098 ;;      Params:         0       0       0       0       0       0       0
  1099 ;;      Locals:         0       8       0       0       0       0       0
  1100 ;;      Temps:          0       1       0       0       0       0       0
  1101 ;;      Totals:         0       9       0       0       0       0       0
  1102 ;;Total ram usage:        9 bytes
  1103 ;; Hardware stack levels required when called:   12
  1104 ;; This function calls:
  1105 ;;		_Timer0_Init
  1106 ;;		_Timer0_StartTimer
  1107 ;;		_UARTNewLine
  1108 ;;		_UARTSendString
  1109 ;;		___fltol
  1110 ;;		___lldiv
  1111 ;;		_get_temp
  1112 ;;		_initialize_RX
  1113 ;;		_initialize_TX
  1114 ;;		_int_to_char
  1115 ;;		_read_op
  1116 ;;		_write_op
  1117 ;; This function is called by:
  1118 ;;		Startup code after reset
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text0
  1123  002D92                     __ptext0:
  1124                           	opt callstack 0
  1125  002D92                     _main:
  1126                           	opt callstack 19
  1127                           
  1128                           ;incstack = 0
  1129  002D92  0E00               	movlw	0
  1130  002D94  0100               	movlb	0	; () banked
  1131  002D96  6FE9               	movwf	(main@address+1)& (0+255),b
  1132  002D98  0E00               	movlw	0
  1133  002D9A  6FE8               	movwf	main@address& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136  002D9C  ECA0  F01C         	call	_Timer0_Init	;wreg free
  1137  002DA0  EC12  F01D         	call	_Timer0_StartTimer	;wreg free
  1138  002DA4  ECE8  F01C         	call	_initialize_TX	;wreg free
  1139  002DA8  ECF0  F01C         	call	_initialize_RX	;wreg free
  1140  002DAC  8E94               	bsf	3988,7,c	;volatile
  1141  002DAE  9C94               	bcf	3988,6,c	;volatile
  1142  002DB0  EC47  F017         	call	_get_temp	;wreg free
  1143  002DB4  C051  F05F         	movff	?_get_temp,___fltol@f1
  1144  002DB8  C052  F060         	movff	?_get_temp+1,___fltol@f1+1
  1145  002DBC  C053  F061         	movff	?_get_temp+2,___fltol@f1+2
  1146  002DC0  C054  F062         	movff	?_get_temp+3,___fltol@f1+3
  1147  002DC4  EC23  F018         	call	___fltol	;wreg free
  1148  002DC8  C05F  F0E2         	movff	?___fltol,main@temp
  1149  002DCC  C060  F0E3         	movff	?___fltol+1,main@temp+1
  1150  002DD0  C0E2  F00E         	movff	main@temp,write_op@data
  1151  002DD4  0E00               	movlw	0
  1152  002DD6  EC52  F01B         	call	_write_op
  1153  002DDA  0100               	movlb	0	; () banked
  1154  002DDC  4BE8               	infsnz	main@address& (0+255),f,b
  1155  002DDE  2BE9               	incf	(main@address+1)& (0+255),f,b
  1156                           
  1157                           ; BSR set to: 0
  1158  002DE0  C085  F001         	movff	_time_ms,___lldiv@dividend	;volatile
  1159  002DE4  C086  F002         	movff	_time_ms+1,___lldiv@dividend+1	;volatile
  1160  002DE8  C087  F003         	movff	_time_ms+2,___lldiv@dividend+2	;volatile
  1161  002DEC  C088  F004         	movff	_time_ms+3,___lldiv@dividend+3	;volatile
  1162  002DF0  0E3C               	movlw	60
  1163  002DF2  6E05               	movwf	___lldiv@divisor,c
  1164  002DF4  0E00               	movlw	0
  1165  002DF6  6E06               	movwf	___lldiv@divisor+1,c
  1166  002DF8  0E00               	movlw	0
  1167  002DFA  6E07               	movwf	___lldiv@divisor+2,c
  1168  002DFC  0E00               	movlw	0
  1169  002DFE  6E08               	movwf	___lldiv@divisor+3,c
  1170  002E00  EC4D  F01A         	call	___lldiv	;wreg free
  1171  002E04  5001               	movf	?___lldiv,w,c
  1172  002E06  6E0E               	movwf	write_op@data,c
  1173  002E08  0100               	movlb	0	; () banked
  1174  002E0A  51E8               	movf	main@address& (0+255),w,b
  1175  002E0C  EC52  F01B         	call	_write_op
  1176  002E10  0100               	movlb	0	; () banked
  1177  002E12  07E8               	decf	main@address& (0+255),f,b
  1178  002E14  A0D8               	btfss	status,0,c
  1179  002E16  07E9               	decf	(main@address+1)& (0+255),f,b
  1180                           
  1181                           ; BSR set to: 0
  1182  002E18  51E8               	movf	main@address& (0+255),w,b
  1183  002E1A  ECC9  F019         	call	_read_op
  1184  002E1E  0100               	movlb	0	; () banked
  1185  002E20  6FE1               	movwf	??_main& (0+255),b
  1186  002E22  51E1               	movf	??_main& (0+255),w,b
  1187  002E24  6FE4               	movwf	main@stored_temp& (0+255),b
  1188  002E26  6BE5               	clrf	(main@stored_temp+1)& (0+255),b
  1189                           
  1190                           ; BSR set to: 0
  1191  002E28  4BE8               	infsnz	main@address& (0+255),f,b
  1192  002E2A  2BE9               	incf	(main@address+1)& (0+255),f,b
  1193                           
  1194                           ; BSR set to: 0
  1195  002E2C  51E8               	movf	main@address& (0+255),w,b
  1196  002E2E  ECC9  F019         	call	_read_op
  1197  002E32  0100               	movlb	0	; () banked
  1198  002E34  6FE1               	movwf	??_main& (0+255),b
  1199  002E36  51E1               	movf	??_main& (0+255),w,b
  1200  002E38  6FE6               	movwf	main@time_elapsed& (0+255),b
  1201  002E3A  6BE7               	clrf	(main@time_elapsed+1)& (0+255),b
  1202                           
  1203                           ; BSR set to: 0
  1204  002E3C  9E94               	bcf	3988,7,c	;volatile
  1205                           
  1206                           ; BSR set to: 0
  1207  002E3E  C0E4  F07A         	movff	main@stored_temp,int_to_char@num
  1208  002E42  C0E5  F07B         	movff	main@stored_temp+1,int_to_char@num+1
  1209  002E46  0E00               	movlw	0
  1210  002E48  BE7B               	btfsc	int_to_char@num+1,7,c
  1211  002E4A  0EFF               	movlw	-1
  1212  002E4C  6E7C               	movwf	int_to_char@num+2,c
  1213  002E4E  6E7D               	movwf	int_to_char@num+3,c
  1214  002E50  EC74  F01B         	call	_int_to_char	;wreg free
  1215  002E54  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1216  002E58  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1217  002E5C  ECD2  F01B         	call	_UARTSendString	;wreg free
  1218  002E60  ECE0  F01C         	call	_UARTNewLine	;wreg free
  1219  002E64  C0E6  F07A         	movff	main@time_elapsed,int_to_char@num
  1220  002E68  C0E7  F07B         	movff	main@time_elapsed+1,int_to_char@num+1
  1221  002E6C  0E00               	movlw	0
  1222  002E6E  BE7B               	btfsc	int_to_char@num+1,7,c
  1223  002E70  0EFF               	movlw	-1
  1224  002E72  6E7C               	movwf	int_to_char@num+2,c
  1225  002E74  6E7D               	movwf	int_to_char@num+3,c
  1226  002E76  EC74  F01B         	call	_int_to_char	;wreg free
  1227  002E7A  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1228  002E7E  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1229  002E82  ECD2  F01B         	call	_UARTSendString	;wreg free
  1230  002E86  ECE0  F01C         	call	_UARTNewLine	;wreg free
  1231  002E8A  EF07  F000         	goto	start
  1232  002E8E                     __end_of_main:
  1233                           	opt callstack 0
  1234                           
  1235 ;; *************** function _write_op *****************
  1236 ;; Defined at:
  1237 ;;		line 13 in file "drive_memory.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  address         1    wreg     unsigned char 
  1240 ;;  data            1   13[COMRAM] unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  address         1   15[COMRAM] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1252 ;;      Params:         1       0       0       0       0       0       0
  1253 ;;      Locals:         1       0       0       0       0       0       0
  1254 ;;      Temps:          1       0       0       0       0       0       0
  1255 ;;      Totals:         3       0       0       0       0       0       0
  1256 ;;Total ram usage:        3 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    2
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text1
  1267  0036A4                     __ptext1:
  1268                           	opt callstack 0
  1269  0036A4                     _write_op:
  1270                           	opt callstack 28
  1271                           
  1272                           ;incstack = 0
  1273                           ;write_op@address stored from wreg
  1274  0036A4  6E10               	movwf	write_op@address,c
  1275                           
  1276                           ;drive_memory.c: 14:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1277  0036A6  0E34               	movlw	52
  1278  0036A8  6E0F               	movwf	??_write_op& (0+255),c
  1279  0036AA  0EF2               	movlw	242
  1280  0036AC                     u5837:
  1281  0036AC  2EE8               	decfsz	wreg,f,c
  1282  0036AE  D7FE               	bra	u5837
  1283  0036B0  2E0F               	decfsz	??_write_op& (0+255),f,c
  1284  0036B2  D7FC               	bra	u5837
  1285                           
  1286                           ;drive_memory.c: 15:   TRISD = 0x00;
  1287  0036B4  0E00               	movlw	0
  1288  0036B6  6E95               	movwf	3989,c	;volatile
  1289                           
  1290                           ;drive_memory.c: 16:   TRISB &= ~(0x3f);
  1291  0036B8  0EC0               	movlw	192
  1292  0036BA  1693               	andwf	3987,f,c	;volatile
  1293                           
  1294                           ;drive_memory.c: 17:   TRISCbits.TRISC1 = 0;
  1295  0036BC  9294               	bcf	3988,1,c	;volatile
  1296                           
  1297                           ;drive_memory.c: 19:   PORTCbits.RC2 = 1;
  1298  0036BE  8482               	bsf	3970,2,c	;volatile
  1299                           
  1300                           ;drive_memory.c: 20:   PORTCbits.RC1 = 0;
  1301  0036C0  9282               	bcf	3970,1,c	;volatile
  1302                           
  1303                           ;drive_memory.c: 21:   PORTB = address;
  1304  0036C2  C010  FF81         	movff	write_op@address,3969	;volatile
  1305                           
  1306                           ;drive_memory.c: 22:   PORTD = data;
  1307  0036C6  C00E  FF83         	movff	write_op@data,3971	;volatile
  1308                           
  1309                           ;drive_memory.c: 23:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1310  0036CA  0E34               	movlw	52
  1311  0036CC  6E0F               	movwf	??_write_op& (0+255),c
  1312  0036CE  0EF2               	movlw	242
  1313  0036D0                     u5847:
  1314  0036D0  2EE8               	decfsz	wreg,f,c
  1315  0036D2  D7FE               	bra	u5847
  1316  0036D4  2E0F               	decfsz	??_write_op& (0+255),f,c
  1317  0036D6  D7FC               	bra	u5847
  1318                           
  1319                           ;drive_memory.c: 25:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1320  0036D8  0E34               	movlw	52
  1321  0036DA  6E0F               	movwf	??_write_op& (0+255),c
  1322  0036DC  0EF2               	movlw	242
  1323  0036DE                     u5857:
  1324  0036DE  2EE8               	decfsz	wreg,f,c
  1325  0036E0  D7FE               	bra	u5857
  1326  0036E2  2E0F               	decfsz	??_write_op& (0+255),f,c
  1327  0036E4  D7FC               	bra	u5857
  1328  0036E6  0012               	return		;funcret
  1329  0036E8                     __end_of_write_op:
  1330                           	opt callstack 0
  1331                           
  1332 ;; *************** function _read_op *****************
  1333 ;; Defined at:
  1334 ;;		line 28 in file "drive_memory.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  address         1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  address         1   36[BANK0 ] unsigned char 
  1339 ;;  i               2   37[BANK0 ] int 
  1340 ;;  mask            1   40[BANK0 ] unsigned char 
  1341 ;;  result          1   39[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1351 ;;      Params:         0       0       0       0       0       0       0
  1352 ;;      Locals:         0       5       0       0       0       0       0
  1353 ;;      Temps:          1       0       0       0       0       0       0
  1354 ;;      Totals:         1       5       0       0       0       0       0
  1355 ;;Total ram usage:        6 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:   11
  1358 ;; This function calls:
  1359 ;;		_UARTNewLine
  1360 ;;		_UARTSendString
  1361 ;;		_int_to_char
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text2
  1368  003392                     __ptext2:
  1369                           	opt callstack 0
  1370  003392                     _read_op:
  1371                           	opt callstack 19
  1372                           
  1373                           ;incstack = 0
  1374                           ;read_op@address stored from wreg
  1375  003392  0100               	movlb	0	; () banked
  1376  003394  6FDC               	movwf	read_op@address& (0+255),b
  1377                           
  1378                           ;drive_memory.c: 29:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1379  003396  0E34               	movlw	52
  1380  003398  6E7E               	movwf	??_read_op& (0+255),c
  1381  00339A  0EF2               	movlw	242
  1382  00339C                     u5867:
  1383  00339C  2EE8               	decfsz	wreg,f,c
  1384  00339E  D7FE               	bra	u5867
  1385  0033A0  2E7E               	decfsz	??_read_op& (0+255),f,c
  1386  0033A2  D7FC               	bra	u5867
  1387                           
  1388                           ;drive_memory.c: 30:   TRISD = 0xff;
  1389  0033A4  6895               	setf	3989,c	;volatile
  1390                           
  1391                           ;drive_memory.c: 31:   PORTB = address;
  1392  0033A6  C0DC  FF81         	movff	read_op@address,3969	;volatile
  1393                           
  1394                           ;drive_memory.c: 32:   PORTCbits.RC1 = 1;
  1395  0033AA  8282               	bsf	3970,1,c	;volatile
  1396                           
  1397                           ;drive_memory.c: 33:   PORTCbits.RC2 = 0;
  1398  0033AC  9482               	bcf	3970,2,c	;volatile
  1399                           
  1400                           ;drive_memory.c: 37:   char result = 0x00;
  1401  0033AE  0E00               	movlw	0
  1402  0033B0  0100               	movlb	0	; () banked
  1403  0033B2  6FDF               	movwf	read_op@result& (0+255),b
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;drive_memory.c: 38:   char mask = 0x01;
  1407  0033B4  0E01               	movlw	1
  1408  0033B6  6FE0               	movwf	read_op@mask& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;drive_memory.c: 39:   for (int i = 0; i < 8; i++) {
  1412  0033B8  0E00               	movlw	0
  1413  0033BA  6FDE               	movwf	(read_op@i+1)& (0+255),b
  1414  0033BC  0E00               	movlw	0
  1415  0033BE  6FDD               	movwf	read_op@i& (0+255),b
  1416  0033C0                     l4958:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;drive_memory.c: 40:     result |= (PORTD & mask);
  1420  0033C0  5083               	movf	3971,w,c	;volatile
  1421  0033C2  15E0               	andwf	read_op@mask& (0+255),w,b
  1422  0033C4  13DF               	iorwf	read_op@result& (0+255),f,b
  1423                           
  1424                           ;drive_memory.c: 41:     mask = mask << 1;
  1425  0033C6  51E0               	movf	read_op@mask& (0+255),w,b
  1426  0033C8  25E0               	addwf	read_op@mask& (0+255),w,b
  1427  0033CA  6FE0               	movwf	read_op@mask& (0+255),b
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;drive_memory.c: 42:   }
  1431  0033CC  4BDD               	infsnz	read_op@i& (0+255),f,b
  1432  0033CE  2BDE               	incf	(read_op@i+1)& (0+255),f,b
  1433                           
  1434                           ; BSR set to: 0
  1435  0033D0  BFDE               	btfsc	(read_op@i+1)& (0+255),7,b
  1436  0033D2  D7F6               	goto	l4958
  1437  0033D4  51DE               	movf	(read_op@i+1)& (0+255),w,b
  1438  0033D6  E104               	bnz	u5620
  1439  0033D8  0E08               	movlw	8
  1440  0033DA  5DDD               	subwf	read_op@i& (0+255),w,b
  1441  0033DC  A0D8               	btfss	status,0,c
  1442  0033DE  D7F0               	goto	l4958
  1443  0033E0                     u5620:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;drive_memory.c: 43:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1447  0033E0  0E34               	movlw	52
  1448  0033E2  6E7E               	movwf	??_read_op& (0+255),c
  1449  0033E4  0EF2               	movlw	242
  1450  0033E6                     u5877:
  1451  0033E6  2EE8               	decfsz	wreg,f,c
  1452  0033E8  D7FE               	bra	u5877
  1453  0033EA  2E7E               	decfsz	??_read_op& (0+255),f,c
  1454  0033EC  D7FC               	bra	u5877
  1455                           
  1456                           ;drive_memory.c: 45:   PORTCbits.RC2 = 1;
  1457  0033EE  8482               	bsf	3970,2,c	;volatile
  1458                           
  1459                           ;drive_memory.c: 46:   TRISCbits.TRISC7 = 0;
  1460  0033F0  9E94               	bcf	3988,7,c	;volatile
  1461                           
  1462                           ;drive_memory.c: 47:   UARTSendString(int_to_char(result));
  1463  0033F2  0100               	movlb	0	; () banked
  1464  0033F4  51DF               	movf	read_op@result& (0+255),w,b
  1465  0033F6  6E7A               	movwf	int_to_char@num,c
  1466  0033F8  6A7B               	clrf	int_to_char@num+1,c
  1467  0033FA  6A7C               	clrf	int_to_char@num+2,c
  1468  0033FC  6A7D               	clrf	int_to_char@num+3,c
  1469  0033FE  EC74  F01B         	call	_int_to_char	;wreg free
  1470  003402  C07A  F0D8         	movff	?_int_to_char,UARTSendString@c
  1471  003406  C07B  F0D9         	movff	?_int_to_char+1,UARTSendString@c+1
  1472  00340A  ECD2  F01B         	call	_UARTSendString	;wreg free
  1473                           
  1474                           ;drive_memory.c: 48:   UARTNewLine();
  1475  00340E  ECE0  F01C         	call	_UARTNewLine	;wreg free
  1476                           
  1477                           ;drive_memory.c: 49:   return result;
  1478  003412  0100               	movlb	0	; () banked
  1479  003414  51DF               	movf	read_op@result& (0+255),w,b
  1480                           
  1481                           ; BSR set to: 0
  1482  003416  0012               	return		;funcret
  1483  003418                     __end_of_read_op:
  1484                           	opt callstack 0
  1485                           
  1486 ;; *************** function _int_to_char *****************
  1487 ;; Defined at:
  1488 ;;		line 18 in file "lcd.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  num             4  121[COMRAM] unsigned long 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  result         10   18[BANK0 ] unsigned char [10]
  1493 ;;  the_num         4   28[BANK0 ] unsigned long 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2  121[COMRAM] PTR unsigned char 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1503 ;;      Params:         4       0       0       0       0       0       0
  1504 ;;      Locals:         0      14       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0
  1506 ;;      Totals:         4      14       0       0       0       0       0
  1507 ;;Total ram usage:       18 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:   10
  1510 ;; This function calls:
  1511 ;;		_getchar
  1512 ;;		_sprintf
  1513 ;; This function is called by:
  1514 ;;		_read_op
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text3
  1520  0036E8                     __ptext3:
  1521                           	opt callstack 0
  1522  0036E8                     _int_to_char:
  1523                           	opt callstack 19
  1524                           
  1525                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;incstack = 0
  1529  0036E8  C07A  F0D4         	movff	int_to_char@num,int_to_char@the_num
  1530  0036EC  C07B  F0D5         	movff	int_to_char@num+1,int_to_char@the_num+1
  1531  0036F0  C07C  F0D6         	movff	int_to_char@num+2,int_to_char@the_num+2
  1532  0036F4  C07D  F0D7         	movff	int_to_char@num+3,int_to_char@the_num+3
  1533                           
  1534                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1535  0036F8  0ECA               	movlw	low int_to_char@result
  1536  0036FA  0100               	movlb	0	; () banked
  1537  0036FC  6FB8               	movwf	sprintf@s& (0+255),b
  1538  0036FE  0E00               	movlw	high int_to_char@result
  1539  003700  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  1540  003702  0E1D               	movlw	low STR_1
  1541  003704  6FBA               	movwf	sprintf@fmt& (0+255),b
  1542  003706  0E06               	movlw	high STR_1
  1543  003708  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  1544  00370A  C0D4  F0BC         	movff	int_to_char@the_num,?_sprintf+4
  1545  00370E  C0D5  F0BD         	movff	int_to_char@the_num+1,?_sprintf+5
  1546  003712  C0D6  F0BE         	movff	int_to_char@the_num+2,?_sprintf+6
  1547  003716  C0D7  F0BF         	movff	int_to_char@the_num+3,?_sprintf+7
  1548  00371A  ECB9  F01A         	call	_sprintf	;wreg free
  1549                           
  1550                           ;lcd.c: 22:   getchar();
  1551  00371E  ECF8  F01C         	call	_getchar	;wreg free
  1552                           
  1553                           ;lcd.c: 23:   return result;
  1554  003722  0ECA               	movlw	low int_to_char@result
  1555  003724  6E7A               	movwf	?_int_to_char,c
  1556  003726  0E00               	movlw	high int_to_char@result
  1557  003728  6E7B               	movwf	?_int_to_char+1,c
  1558  00372A  0012               	return		;funcret
  1559  00372C                     __end_of_int_to_char:
  1560                           	opt callstack 0
  1561                           
  1562 ;; *************** function _sprintf *****************
  1563 ;; Defined at:
  1564 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1567 ;;		 -> int_to_char@result(10), 
  1568 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1569 ;;		 -> STR_1(4), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1572 ;;  ap              2   16[BANK0 ] PTR void [1]
  1573 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1574 ;;  ret             2    0        int 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  2    0[BANK0 ] int 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1584 ;;      Params:         0       8       0       0       0       0       0
  1585 ;;      Locals:         0      10       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0
  1587 ;;      Totals:         0      18       0       0       0       0       0
  1588 ;;Total ram usage:       18 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    9
  1591 ;; This function calls:
  1592 ;;		_vfprintf
  1593 ;; This function is called by:
  1594 ;;		_int_to_char
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text4
  1599  003572                     __ptext4:
  1600                           	opt callstack 0
  1601  003572                     _sprintf:
  1602                           	opt callstack 19
  1603                           
  1604                           ;incstack = 0
  1605  003572  0EBC               	movlw	low (?_sprintf+4)
  1606  003574  0100               	movlb	0	; () banked
  1607  003576  6FC8               	movwf	sprintf@ap& (0+255),b
  1608  003578  0E00               	movlw	high (?_sprintf+4)
  1609  00357A  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1610  00357C  C0B8  F0C2         	movff	sprintf@s,sprintf@f
  1611  003580  C0B9  F0C3         	movff	sprintf@s+1,sprintf@f+1
  1612                           
  1613                           ; BSR set to: 0
  1614  003584  0E00               	movlw	0
  1615  003586  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  1616  003588  0E00               	movlw	0
  1617  00358A  6FC4               	movwf	(sprintf@f+2)& (0+255),b
  1618                           
  1619                           ; BSR set to: 0
  1620  00358C  0E00               	movlw	0
  1621  00358E  6FC7               	movwf	(sprintf@f+5)& (0+255),b
  1622  003590  0E00               	movlw	0
  1623  003592  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  1624                           
  1625                           ; BSR set to: 0
  1626  003594  0EC2               	movlw	low sprintf@f
  1627  003596  6E72               	movwf	vfprintf@fp,c
  1628  003598  0E00               	movlw	high sprintf@f
  1629  00359A  6E73               	movwf	vfprintf@fp+1,c
  1630  00359C  C0BA  F074         	movff	sprintf@fmt,vfprintf@fmt
  1631  0035A0  C0BB  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1632  0035A4  0EC8               	movlw	low sprintf@ap
  1633  0035A6  6E76               	movwf	vfprintf@ap,c
  1634  0035A8  0E00               	movlw	high sprintf@ap
  1635  0035AA  6E77               	movwf	vfprintf@ap+1,c
  1636  0035AC  EC8E  F01A         	call	_vfprintf	;wreg free
  1637  0035B0  0100               	movlb	0	; () banked
  1638  0035B2  51C4               	movf	(sprintf@f+2)& (0+255),w,b
  1639  0035B4  25B8               	addwf	sprintf@s& (0+255),w,b
  1640  0035B6  6ED9               	movwf	fsr2l,c
  1641  0035B8  51C5               	movf	(sprintf@f+3)& (0+255),w,b
  1642  0035BA  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  1643  0035BC  6EDA               	movwf	fsr2h,c
  1644  0035BE  0E00               	movlw	0
  1645  0035C0  6EDF               	movwf	indf2,c
  1646                           
  1647                           ; BSR set to: 0
  1648  0035C2  0012               	return		;funcret
  1649  0035C4                     __end_of_sprintf:
  1650                           	opt callstack 0
  1651                           
  1652 ;; *************** function _vfprintf *****************
  1653 ;; Defined at:
  1654 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1657 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1658 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1659 ;;		 -> STR_2(3), STR_1(4), 
  1660 ;;  ap              2  117[COMRAM] PTR PTR void 
  1661 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1664 ;;		 -> STR_2(3), STR_1(4), 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2  113[COMRAM] int 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1674 ;;      Params:         6       0       0       0       0       0       0
  1675 ;;      Locals:         2       0       0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0
  1677 ;;      Totals:         8       0       0       0       0       0       0
  1678 ;;Total ram usage:        8 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    8
  1681 ;; This function calls:
  1682 ;;		_vfpfcnvrt
  1683 ;; This function is called by:
  1684 ;;		_sprintf
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text5
  1689  00351C                     __ptext5:
  1690                           	opt callstack 0
  1691  00351C                     _vfprintf:
  1692                           	opt callstack 19
  1693                           
  1694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;incstack = 0
  1698  00351C  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1699  003520  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1700                           
  1701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1702  003524  0E00               	movlw	0
  1703  003526  0100               	movlb	0	; () banked
  1704  003528  6F8C               	movwf	(_nout+1)& (0+255),b
  1705  00352A  0E00               	movlw	0
  1706  00352C  6F8B               	movwf	_nout& (0+255),b
  1707                           
  1708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1709  00352E  D013               	goto	l4300
  1710  003530                     l4298:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1714  003530  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1715  003534  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1716  003538  0E78               	movlw	low vfprintf@cfmt
  1717  00353A  6E45               	movwf	vfpfcnvrt@fmt,c
  1718  00353C  0E00               	movlw	high vfprintf@cfmt
  1719  00353E  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1720  003540  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1721  003544  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1722  003548  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1723  00354C  5043               	movf	?_vfpfcnvrt,w,c
  1724  00354E  0100               	movlb	0	; () banked
  1725  003550  278B               	addwf	_nout& (0+255),f,b
  1726  003552  5044               	movf	?_vfpfcnvrt+1,w,c
  1727  003554  238C               	addwfc	(_nout+1)& (0+255),f,b
  1728  003556                     l4300:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1732  003556  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1733  00355A  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1734  00355E                     	if	0	;tblptru may be non-zero
  1735  00355E                     	endif
  1736  00355E                     	if	0	;tblptru may be non-zero
  1737  00355E                     	endif
  1738  00355E  0008               	tblrd		*
  1739  003560  50F5               	movf	tablat,w,c
  1740  003562  0900               	iorlw	0
  1741  003564  A4D8               	btfss	status,2,c
  1742  003566  D7E4               	goto	l4298
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1746  003568  C08B  F072         	movff	_nout,?_vfprintf
  1747  00356C  C08C  F073         	movff	_nout+1,?_vfprintf+1
  1748                           
  1749                           ; BSR set to: 0
  1750  003570  0012               	return		;funcret
  1751  003572                     __end_of_vfprintf:
  1752                           	opt callstack 0
  1753                           
  1754 ;; *************** function _vfpfcnvrt *****************
  1755 ;; Defined at:
  1756 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1759 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1760 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1761 ;;		 -> vfprintf@cfmt(2), 
  1762 ;;  ap              2   70[COMRAM] PTR PTR void 
  1763 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  llu             8  105[COMRAM] unsigned long long 
  1766 ;;  ll              8   94[COMRAM] long long 
  1767 ;;  f               4    0        long long 
  1768 ;;  ct              3    0        unsigned char [3]
  1769 ;;  vp              2  102[COMRAM] PTR void 
  1770 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1771 ;;  done            2   88[COMRAM] int 
  1772 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1773 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1774 ;;  i               2    0        int 
  1775 ;;  c               1  104[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2   66[COMRAM] int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         6       0       0       0       0       0       0
  1786 ;;      Locals:        27       0       0       0       0       0       0
  1787 ;;      Temps:         14       0       0       0       0       0       0
  1788 ;;      Totals:        47       0       0       0       0       0       0
  1789 ;;Total ram usage:       47 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    7
  1792 ;; This function calls:
  1793 ;;		_atoi
  1794 ;;		_ctoa
  1795 ;;		_dtoa
  1796 ;;		_fputc
  1797 ;;		_isdigit
  1798 ;;		_otoa
  1799 ;;		_stoa
  1800 ;;		_strncmp
  1801 ;;		_utoa
  1802 ;;		_xtoa
  1803 ;; This function is called by:
  1804 ;;		_vfprintf
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text6
  1809  00064C                     __ptext6:
  1810                           	opt callstack 0
  1811  00064C                     _vfpfcnvrt:
  1812                           	opt callstack 19
  1813                           
  1814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;incstack = 0
  1818  00064C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1819  000650  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1820  000654  CFDE FFF6          	movff	postinc2,tblptrl
  1821  000658  CFDD FFF7          	movff	postdec2,tblptrh
  1822  00065C                     	if	0	;tblptru may be non-zero
  1823  00065C                     	endif
  1824  00065C                     	if	0	;tblptru may be non-zero
  1825  00065C                     	endif
  1826  00065C  0008               	tblrd		*
  1827  00065E  50F5               	movf	tablat,w,c
  1828  000660  0A25               	xorlw	37
  1829  000662  A4D8               	btfss	status,2,c
  1830  000664  EF5C  F00B         	goto	l4278
  1831                           
  1832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1833  000668  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834  00066C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835  000670  2ADE               	incf	postinc2,f,c
  1836  000672  0E00               	movlw	0
  1837  000674  22DD               	addwfc	postdec2,f,c
  1838                           
  1839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1840  000676  0E00               	movlw	0
  1841  000678  0100               	movlb	0	; () banked
  1842  00067A  6F8E               	movwf	(_width+1)& (0+255),b
  1843  00067C  0E00               	movlw	0
  1844  00067E  6F8D               	movwf	_width& (0+255),b
  1845  000680  C08D  F091         	movff	_width,_flags
  1846  000684  C08E  F092         	movff	_width+1,_flags+1
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1850  000688  698F               	setf	_prec& (0+255),b
  1851  00068A  6990               	setf	(_prec+1)& (0+255),b
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1855  00068C  0E00               	movlw	0
  1856  00068E  6E5A               	movwf	vfpfcnvrt@done+1,c
  1857  000690  0E00               	movlw	0
  1858  000692  D019               	goto	L1
  1859  000694                     l3920:
  1860                           
  1861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1862  000694  0100               	movlb	0	; () banked
  1863  000696  8191               	bsf	_flags& (0+255),0,b
  1864  000698                     l3922:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1868  000698  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  00069C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  0006A0  2ADE               	incf	postinc2,f,c
  1871  0006A2  0E00               	movlw	0
  1872  0006A4  22DD               	addwfc	postdec2,f,c
  1873                           
  1874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1875  0006A6  D032               	goto	l3946
  1876  0006A8                     l3924:
  1877                           
  1878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1879  0006A8  0100               	movlb	0	; () banked
  1880  0006AA  8391               	bsf	_flags& (0+255),1,b
  1881  0006AC  D7F5               	goto	l3922
  1882  0006AE                     l3928:
  1883                           
  1884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1885  0006AE  0100               	movlb	0	; () banked
  1886  0006B0  8591               	bsf	_flags& (0+255),2,b
  1887  0006B2  D7F2               	goto	l3922
  1888  0006B4                     l3932:
  1889                           
  1890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1891  0006B4  0100               	movlb	0	; () banked
  1892  0006B6  8791               	bsf	_flags& (0+255),3,b
  1893  0006B8  D7EF               	goto	l3922
  1894  0006BA                     l3936:
  1895                           
  1896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1897  0006BA  0100               	movlb	0	; () banked
  1898  0006BC  8991               	bsf	_flags& (0+255),4,b
  1899  0006BE  D7EC               	goto	l3922
  1900  0006C0                     l3940:
  1901                           
  1902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1903  0006C0  0E00               	movlw	0
  1904  0006C2  6E5A               	movwf	vfpfcnvrt@done+1,c
  1905  0006C4  0E01               	movlw	1
  1906  0006C6                     L1:
  1907  0006C6  6E59               	movwf	vfpfcnvrt@done,c
  1908                           
  1909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1910  0006C8  D021               	goto	l3946
  1911  0006CA                     l3944:
  1912  0006CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  0006CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  0006D2  CFDE FFF6          	movff	postinc2,tblptrl
  1915  0006D6  CFDD FFF7          	movff	postdec2,tblptrh
  1916  0006DA                     	if	0	;tblptru may be non-zero
  1917  0006DA                     	endif
  1918  0006DA                     	if	0	;tblptru may be non-zero
  1919  0006DA                     	endif
  1920  0006DA  0008               	tblrd		*
  1921  0006DC  50F5               	movf	tablat,w,c
  1922  0006DE  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1923  0006E0  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1924                           
  1925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 0 to 0
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ;	Chosen strategy is simple_byte
  1932  0006E2  504A               	movf	??_vfpfcnvrt+1,w,c
  1933  0006E4  0A00               	xorlw	0	; case 0
  1934  0006E6  A4D8               	btfss	status,2,c
  1935  0006E8  D7EB               	goto	l3940
  1936                           
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 5, Range of values is 32 to 48
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte           16     9 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943  0006EA  5049               	movf	??_vfpfcnvrt,w,c
  1944  0006EC  0A20               	xorlw	32	; case 32
  1945  0006EE  B4D8               	btfsc	status,2,c
  1946  0006F0  D7E1               	goto	l3932
  1947  0006F2  0A03               	xorlw	3	; case 35
  1948  0006F4  B4D8               	btfsc	status,2,c
  1949  0006F6  D7E1               	goto	l3936
  1950  0006F8  0A08               	xorlw	8	; case 43
  1951  0006FA  B4D8               	btfsc	status,2,c
  1952  0006FC  D7D8               	goto	l3928
  1953  0006FE  0A06               	xorlw	6	; case 45
  1954  000700  B4D8               	btfsc	status,2,c
  1955  000702  D7C8               	goto	l3920
  1956  000704  0A1D               	xorlw	29	; case 48
  1957  000706  B4D8               	btfsc	status,2,c
  1958  000708  D7CF               	goto	l3924
  1959  00070A  D7DA               	goto	l3940
  1960  00070C                     l3946:
  1961                           
  1962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1963  00070C  5059               	movf	vfpfcnvrt@done,w,c
  1964  00070E  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1965  000710  B4D8               	btfsc	status,2,c
  1966  000712  D7DB               	goto	l3944
  1967                           
  1968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1969  000714  0100               	movlb	0	; () banked
  1970  000716  B191               	btfsc	_flags& (0+255),0,b
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1974  000718  9391               	bcf	_flags& (0+255),1,b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1978  00071A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1979  00071E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1980  000722  CFDE FFF6          	movff	postinc2,tblptrl
  1981  000726  CFDD FFF7          	movff	postdec2,tblptrh
  1982  00072A                     	if	0	;tblptru may be non-zero
  1983  00072A                     	endif
  1984  00072A                     	if	0	;tblptru may be non-zero
  1985  00072A                     	endif
  1986  00072A  0008               	tblrd		*
  1987  00072C  50F5               	movf	tablat,w,c
  1988  00072E  0A2A               	xorlw	42
  1989  000730  A4D8               	btfss	status,2,c
  1990  000732  D023               	goto	l3958
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1994  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1995  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1996  00073C  2ADE               	incf	postinc2,f,c
  1997  00073E  0E00               	movlw	0
  1998  000740  22DD               	addwfc	postdec2,f,c
  1999                           
  2000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2001  000742  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2002  000746  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2003  00074A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2004  00074E  0E02               	movlw	2
  2005  000750  26DE               	addwf	postinc2,f,c
  2006  000752  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2007  000756  0E00               	movlw	0
  2008  000758  22DD               	addwfc	postdec2,f,c
  2009  00075A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2010  00075E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2011  000762  CFDE F08D          	movff	postinc2,_width
  2012  000766  CFDD F08E          	movff	postdec2,_width+1
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2016  00076A  AF8E               	btfss	(_width+1)& (0+255),7,b
  2017  00076C  D03F               	goto	u4150
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2021  00076E  8191               	bsf	_flags& (0+255),0,b
  2022                           
  2023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2024  000770  6D8D               	negf	_width& (0+255),b
  2025  000772  1F8E               	comf	(_width+1)& (0+255),f,b
  2026  000774  B0D8               	btfsc	status,0,c
  2027  000776  2B8E               	incf	(_width+1)& (0+255),f,b
  2028  000778  D039               	goto	u4150
  2029  00077A                     l3958:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2033  00077A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2034  00077E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  000782  CFDE F008          	movff	postinc2,atoi@s
  2036  000786  CFDD F009          	movff	postdec2,atoi@s+1
  2037  00078A  EC61  F014         	call	_atoi	;wreg free
  2038  00078E  C008  F08D         	movff	?_atoi,_width
  2039  000792  C009  F08E         	movff	?_atoi+1,_width+1
  2040                           
  2041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2042  000796  D007               	goto	l3962
  2043  000798                     l3960:
  2044                           
  2045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2046  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048  0007A0  2ADE               	incf	postinc2,f,c
  2049  0007A2  0E00               	movlw	0
  2050  0007A4  22DD               	addwfc	postdec2,f,c
  2051  0007A6                     l3962:
  2052  0007A6  0ED0               	movlw	208
  2053  0007A8  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2054  0007AA  0EFF               	movlw	255
  2055  0007AC  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2056  0007AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2057  0007B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2058  0007B6  CFDE FFF6          	movff	postinc2,tblptrl
  2059  0007BA  CFDD FFF7          	movff	postdec2,tblptrh
  2060  0007BE                     	if	0	;tblptru may be non-zero
  2061  0007BE                     	endif
  2062  0007BE                     	if	0	;tblptru may be non-zero
  2063  0007BE                     	endif
  2064  0007BE  0008               	tblrd		*
  2065  0007C0  50F5               	movf	tablat,w,c
  2066  0007C2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2067  0007C4  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2068  0007C6  5049               	movf	??_vfpfcnvrt,w,c
  2069  0007C8  264B               	addwf	??_vfpfcnvrt+2,f,c
  2070  0007CA  504A               	movf	??_vfpfcnvrt+1,w,c
  2071  0007CC  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2072  0007CE  504C               	movf	??_vfpfcnvrt+3,w,c
  2073  0007D0  E106               	bnz	u4130
  2074  0007D2  0E0A               	movlw	10
  2075  0007D4  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2076  0007D6  B0D8               	btfsc	status,0,c
  2077  0007D8  D002               	goto	u4130
  2078  0007DA  0E01               	movlw	1
  2079  0007DC  D001               	goto	u4140
  2080  0007DE                     u4130:
  2081  0007DE  0E00               	movlw	0
  2082  0007E0                     u4140:
  2083  0007E0  6E5B               	movwf	_vfpfcnvrt$1101,c
  2084  0007E2  6A5C               	clrf	_vfpfcnvrt$1101+1,c
  2085  0007E4  505B               	movf	_vfpfcnvrt$1101,w,c
  2086  0007E6  105C               	iorwf	_vfpfcnvrt$1101+1,w,c
  2087  0007E8  A4D8               	btfss	status,2,c
  2088  0007EA  D7D6               	goto	l3960
  2089  0007EC                     u4150:
  2090                           
  2091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2092  0007EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2093  0007F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2094  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  2095  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  2096  0007FC                     	if	0	;tblptru may be non-zero
  2097  0007FC                     	endif
  2098  0007FC                     	if	0	;tblptru may be non-zero
  2099  0007FC                     	endif
  2100  0007FC  0008               	tblrd		*
  2101  0007FE  50F5               	movf	tablat,w,c
  2102  000800  0A2E               	xorlw	46
  2103  000802  A4D8               	btfss	status,2,c
  2104  000804  D06E               	goto	u4200
  2105                           
  2106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2107  000806  0E00               	movlw	0
  2108  000808  0100               	movlb	0	; () banked
  2109  00080A  6F90               	movwf	(_prec+1)& (0+255),b
  2110  00080C  0E00               	movlw	0
  2111  00080E  6F8F               	movwf	_prec& (0+255),b
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2115  000810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  000814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  000818  2ADE               	incf	postinc2,f,c
  2118  00081A  0E00               	movlw	0
  2119  00081C  22DD               	addwfc	postdec2,f,c
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2123  00081E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2124  000822  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2125  000826  CFDE FFF6          	movff	postinc2,tblptrl
  2126  00082A  CFDD FFF7          	movff	postdec2,tblptrh
  2127  00082E                     	if	0	;tblptru may be non-zero
  2128  00082E                     	endif
  2129  00082E                     	if	0	;tblptru may be non-zero
  2130  00082E                     	endif
  2131  00082E  0008               	tblrd		*
  2132  000830  50F5               	movf	tablat,w,c
  2133  000832  0A2A               	xorlw	42
  2134  000834  A4D8               	btfss	status,2,c
  2135  000836  D01C               	goto	l3978
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2139  000838  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  00083C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  000840  2ADE               	incf	postinc2,f,c
  2142  000842  0E00               	movlw	0
  2143  000844  22DD               	addwfc	postdec2,f,c
  2144                           
  2145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2146  000846  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2147  00084A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2148  00084E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2149  000852  0E02               	movlw	2
  2150  000854  26DE               	addwf	postinc2,f,c
  2151  000856  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2152  00085A  0E00               	movlw	0
  2153  00085C  22DD               	addwfc	postdec2,f,c
  2154  00085E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2155  000862  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2156  000866  CFDE F08F          	movff	postinc2,_prec
  2157  00086A  CFDD F090          	movff	postdec2,_prec+1
  2158                           
  2159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2160  00086E  D039               	goto	u4200
  2161  000870                     l3978:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2165  000870  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2166  000874  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2167  000878  CFDE F008          	movff	postinc2,atoi@s
  2168  00087C  CFDD F009          	movff	postdec2,atoi@s+1
  2169  000880  EC61  F014         	call	_atoi	;wreg free
  2170  000884  C008  F08F         	movff	?_atoi,_prec
  2171  000888  C009  F090         	movff	?_atoi+1,_prec+1
  2172                           
  2173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2174  00088C  D007               	goto	l3982
  2175  00088E                     l3980:
  2176                           
  2177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2178  00088E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179  000892  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180  000896  2ADE               	incf	postinc2,f,c
  2181  000898  0E00               	movlw	0
  2182  00089A  22DD               	addwfc	postdec2,f,c
  2183  00089C                     l3982:
  2184  00089C  0ED0               	movlw	208
  2185  00089E  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2186  0008A0  0EFF               	movlw	255
  2187  0008A2  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2188  0008A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  0008A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
  2191  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
  2192  0008B4                     	if	0	;tblptru may be non-zero
  2193  0008B4                     	endif
  2194  0008B4                     	if	0	;tblptru may be non-zero
  2195  0008B4                     	endif
  2196  0008B4  0008               	tblrd		*
  2197  0008B6  50F5               	movf	tablat,w,c
  2198  0008B8  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2199  0008BA  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2200  0008BC  5049               	movf	??_vfpfcnvrt,w,c
  2201  0008BE  264B               	addwf	??_vfpfcnvrt+2,f,c
  2202  0008C0  504A               	movf	??_vfpfcnvrt+1,w,c
  2203  0008C2  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2204  0008C4  504C               	movf	??_vfpfcnvrt+3,w,c
  2205  0008C6  E106               	bnz	u4180
  2206  0008C8  0E0A               	movlw	10
  2207  0008CA  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2208  0008CC  B0D8               	btfsc	status,0,c
  2209  0008CE  D002               	goto	u4180
  2210  0008D0  0E01               	movlw	1
  2211  0008D2  D001               	goto	u4190
  2212  0008D4                     u4180:
  2213  0008D4  0E00               	movlw	0
  2214  0008D6                     u4190:
  2215  0008D6  6E5D               	movwf	_vfpfcnvrt$1102,c
  2216  0008D8  6A5E               	clrf	_vfpfcnvrt$1102+1,c
  2217  0008DA  505D               	movf	_vfpfcnvrt$1102,w,c
  2218  0008DC  105E               	iorwf	_vfpfcnvrt$1102+1,w,c
  2219  0008DE  A4D8               	btfss	status,2,c
  2220  0008E0  D7D6               	goto	l3980
  2221  0008E2                     u4200:
  2222                           
  2223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2224  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2225  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2226  0008EA  CFDE FFF6          	movff	postinc2,tblptrl
  2227  0008EE  CFDD FFF7          	movff	postdec2,tblptrh
  2228  0008F2                     	if	0	;tblptru may be non-zero
  2229  0008F2                     	endif
  2230  0008F2                     	if	0	;tblptru may be non-zero
  2231  0008F2                     	endif
  2232  0008F2  0008               	tblrd		*
  2233  0008F4  50F5               	movf	tablat,w,c
  2234  0008F6  0A63               	xorlw	99
  2235  0008F8  A4D8               	btfss	status,2,c
  2236  0008FA  D026               	goto	l3996
  2237                           
  2238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2239  0008FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  000900  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  000904  2ADE               	incf	postinc2,f,c
  2242  000906  0E00               	movlw	0
  2243  000908  22DD               	addwfc	postdec2,f,c
  2244                           
  2245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2246  00090A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2247  00090E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2248  000912  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2249  000916  0E02               	movlw	2
  2250  000918  26DE               	addwf	postinc2,f,c
  2251  00091A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2252  00091E  0E00               	movlw	0
  2253  000920  22DD               	addwfc	postdec2,f,c
  2254  000922  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2255  000926  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2256  00092A  50DF               	movf	indf2,w,c
  2257  00092C  6E69               	movwf	vfpfcnvrt@c,c
  2258                           
  2259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2260  00092E  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2261  000932  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2262  000936  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2263  00093A  ECE2  F01A         	call	_ctoa	;wreg free
  2264  00093E  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2265  000942  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2266  000946  0012               	return	
  2267  000948                     l3996:
  2268                           
  2269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2270  000948  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2271  00094C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2272  000950  CFDE F001          	movff	postinc2,strncmp@_l
  2273  000954  CFDD F002          	movff	postdec2,strncmp@_l+1
  2274  000958  0E05               	movlw	low STR_3
  2275  00095A  6E03               	movwf	strncmp@_r,c
  2276  00095C  0E06               	movlw	high STR_3
  2277  00095E  6E04               	movwf	strncmp@_r+1,c
  2278  000960  0E00               	movlw	0
  2279  000962  6E06               	movwf	strncmp@n+1,c
  2280  000964  0E03               	movlw	3
  2281  000966  6E05               	movwf	strncmp@n,c
  2282  000968  ECD7  F018         	call	_strncmp	;wreg free
  2283  00096C  5001               	movf	?_strncmp,w,c
  2284  00096E  1002               	iorwf	?_strncmp+1,w,c
  2285  000970  B4D8               	btfsc	status,2,c
  2286  000972  D016               	goto	u4230
  2287  000974  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2288  000978  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2289  00097C  CFDE F001          	movff	postinc2,strncmp@_l
  2290  000980  CFDD F002          	movff	postdec2,strncmp@_l+1
  2291  000984  0E09               	movlw	low STR_7
  2292  000986  6E03               	movwf	strncmp@_r,c
  2293  000988  0E06               	movlw	high STR_7
  2294  00098A  6E04               	movwf	strncmp@_r+1,c
  2295  00098C  0E00               	movlw	0
  2296  00098E  6E06               	movwf	strncmp@n+1,c
  2297  000990  0E03               	movlw	3
  2298  000992  6E05               	movwf	strncmp@n,c
  2299  000994  ECD7  F018         	call	_strncmp	;wreg free
  2300  000998  5001               	movf	?_strncmp,w,c
  2301  00099A  1002               	iorwf	?_strncmp+1,w,c
  2302  00099C  A4D8               	btfss	status,2,c
  2303  00099E  D03F               	goto	l4006
  2304  0009A0                     u4230:
  2305                           
  2306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2307  0009A0  0E03               	movlw	3
  2308  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2309  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2310  0009AA  26DE               	addwf	postinc2,f,c
  2311  0009AC  0E00               	movlw	0
  2312  0009AE  22DD               	addwfc	postdec2,f,c
  2313                           
  2314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2315  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2316  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2317  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2318  0009BC  0E02               	movlw	2
  2319  0009BE  26DE               	addwf	postinc2,f,c
  2320  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2321  0009C4  0E00               	movlw	0
  2322  0009C6  22DD               	addwfc	postdec2,f,c
  2323  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2324  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2325  0009D0  50DF               	movf	indf2,w,c
  2326  0009D2  6E5F               	movwf	vfpfcnvrt@ll,c
  2327  0009D4  0E00               	movlw	0
  2328  0009D6  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2329  0009D8  0EFF               	movlw	-1
  2330  0009DA  6E60               	movwf	vfpfcnvrt@ll+1,c
  2331  0009DC                     L2:
  2332  0009DC  6E61               	movwf	vfpfcnvrt@ll+2,c
  2333  0009DE  6E62               	movwf	vfpfcnvrt@ll+3,c
  2334  0009E0  6E63               	movwf	vfpfcnvrt@ll+4,c
  2335  0009E2  6E64               	movwf	vfpfcnvrt@ll+5,c
  2336  0009E4  6E65               	movwf	vfpfcnvrt@ll+6,c
  2337  0009E6  6E66               	movwf	vfpfcnvrt@ll+7,c
  2338  0009E8                     l4002:
  2339                           
  2340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2341  0009E8  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2342  0009EC  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2343  0009F0  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2344  0009F4  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2345  0009F8  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2346  0009FC  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2347  000A00  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2348  000A04  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2349  000A08  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2350  000A0C  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2351  000A10  ECE9  F00F         	call	_dtoa	;wreg free
  2352  000A14  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2353  000A18  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2354  000A1C  0012               	return	
  2355  000A1E                     l4006:
  2356                           
  2357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2358  000A1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2359  000A22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2360  000A26  CFDE F001          	movff	postinc2,strncmp@_l
  2361  000A2A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2362  000A2E  0E06               	movlw	low (STR_3+1)
  2363  000A30  6E03               	movwf	strncmp@_r,c
  2364  000A32  0E06               	movlw	high (STR_3+1)
  2365  000A34  6E04               	movwf	strncmp@_r+1,c
  2366  000A36  0E00               	movlw	0
  2367  000A38  6E06               	movwf	strncmp@n+1,c
  2368  000A3A  0E02               	movlw	2
  2369  000A3C  6E05               	movwf	strncmp@n,c
  2370  000A3E  ECD7  F018         	call	_strncmp	;wreg free
  2371  000A42  5001               	movf	?_strncmp,w,c
  2372  000A44  1002               	iorwf	?_strncmp+1,w,c
  2373  000A46  B4D8               	btfsc	status,2,c
  2374  000A48  D016               	goto	u4250
  2375  000A4A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2376  000A4E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2377  000A52  CFDE F001          	movff	postinc2,strncmp@_l
  2378  000A56  CFDD F002          	movff	postdec2,strncmp@_l+1
  2379  000A5A  0E0A               	movlw	low (STR_7+1)
  2380  000A5C  6E03               	movwf	strncmp@_r,c
  2381  000A5E  0E06               	movlw	high (STR_7+1)
  2382  000A60  6E04               	movwf	strncmp@_r+1,c
  2383  000A62  0E00               	movlw	0
  2384  000A64  6E06               	movwf	strncmp@n+1,c
  2385  000A66  0E02               	movlw	2
  2386  000A68  6E05               	movwf	strncmp@n,c
  2387  000A6A  ECD7  F018         	call	_strncmp	;wreg free
  2388  000A6E  5001               	movf	?_strncmp,w,c
  2389  000A70  1002               	iorwf	?_strncmp+1,w,c
  2390  000A72  A4D8               	btfss	status,2,c
  2391  000A74  D007               	goto	l4016
  2392  000A76                     u4250:
  2393                           
  2394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2395  000A76  0E02               	movlw	2
  2396  000A78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  000A7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  000A80  26DE               	addwf	postinc2,f,c
  2399  000A82  D01F               	goto	L10
  2400  000A84                     l4016:
  2401                           
  2402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2403  000A84  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404  000A88  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405  000A8C  CFDE FFF6          	movff	postinc2,tblptrl
  2406  000A90  CFDD FFF7          	movff	postdec2,tblptrh
  2407  000A94                     	if	0	;tblptru may be non-zero
  2408  000A94                     	endif
  2409  000A94                     	if	0	;tblptru may be non-zero
  2410  000A94                     	endif
  2411  000A94  0008               	tblrd		*
  2412  000A96  50F5               	movf	tablat,w,c
  2413  000A98  0A64               	xorlw	100
  2414  000A9A  B4D8               	btfsc	status,2,c
  2415  000A9C  D00D               	goto	u4270
  2416  000A9E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  000AA2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  000AA6  CFDE FFF6          	movff	postinc2,tblptrl
  2419  000AAA  CFDD FFF7          	movff	postdec2,tblptrh
  2420  000AAE                     	if	0	;tblptru may be non-zero
  2421  000AAE                     	endif
  2422  000AAE                     	if	0	;tblptru may be non-zero
  2423  000AAE                     	endif
  2424  000AAE  0008               	tblrd		*
  2425  000AB0  50F5               	movf	tablat,w,c
  2426  000AB2  0A69               	xorlw	105
  2427  000AB4  A4D8               	btfss	status,2,c
  2428  000AB6  D01F               	goto	l4026
  2429  000AB8                     u4270:
  2430                           
  2431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2432  000AB8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2433  000ABC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2434  000AC0  2ADE               	incf	postinc2,f,c
  2435  000AC2                     L10:
  2436  000AC2  0E00               	movlw	0
  2437  000AC4  22DD               	addwfc	postdec2,f,c
  2438                           
  2439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2440  000AC6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2441  000ACA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2442  000ACE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2443  000AD2  0E02               	movlw	2
  2444  000AD4  26DE               	addwf	postinc2,f,c
  2445  000AD6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2446  000ADA  0E00               	movlw	0
  2447  000ADC  22DD               	addwfc	postdec2,f,c
  2448  000ADE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2449  000AE2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2450  000AE6  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2451  000AEA  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2452  000AEE  0E00               	movlw	0
  2453  000AF0  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2454  000AF2  0EFF               	movlw	-1
  2455  000AF4  D773               	goto	L2
  2456  000AF6                     l4026:
  2457                           
  2458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2459  000AF6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2460  000AFA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2461  000AFE  CFDE F001          	movff	postinc2,strncmp@_l
  2462  000B02  CFDD F002          	movff	postdec2,strncmp@_l+1
  2463  000B06  0E27               	movlw	low STR_21
  2464  000B08  6E03               	movwf	strncmp@_r,c
  2465  000B0A  0E06               	movlw	high STR_21
  2466  000B0C  6E04               	movwf	strncmp@_r+1,c
  2467  000B0E  0E00               	movlw	0
  2468  000B10  6E06               	movwf	strncmp@n+1,c
  2469  000B12  0E02               	movlw	2
  2470  000B14  6E05               	movwf	strncmp@n,c
  2471  000B16  ECD7  F018         	call	_strncmp	;wreg free
  2472  000B1A  5001               	movf	?_strncmp,w,c
  2473  000B1C  1002               	iorwf	?_strncmp+1,w,c
  2474  000B1E  B4D8               	btfsc	status,2,c
  2475  000B20  D016               	goto	u4290
  2476  000B22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2477  000B26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2478  000B2A  CFDE F001          	movff	postinc2,strncmp@_l
  2479  000B2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2480  000B32  0E2D               	movlw	low STR_25
  2481  000B34  6E03               	movwf	strncmp@_r,c
  2482  000B36  0E06               	movlw	high STR_25
  2483  000B38  6E04               	movwf	strncmp@_r+1,c
  2484  000B3A  0E00               	movlw	0
  2485  000B3C  6E06               	movwf	strncmp@n+1,c
  2486  000B3E  0E02               	movlw	2
  2487  000B40  6E05               	movwf	strncmp@n,c
  2488  000B42  ECD7  F018         	call	_strncmp	;wreg free
  2489  000B46  5001               	movf	?_strncmp,w,c
  2490  000B48  1002               	iorwf	?_strncmp+1,w,c
  2491  000B4A  A4D8               	btfss	status,2,c
  2492  000B4C  D042               	goto	l4036
  2493  000B4E                     u4290:
  2494                           
  2495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2496  000B4E  0E02               	movlw	2
  2497  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  000B58  26DE               	addwf	postinc2,f,c
  2500  000B5A  0E00               	movlw	0
  2501  000B5C  22DD               	addwfc	postdec2,f,c
  2502                           
  2503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2504  000B5E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2505  000B62  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2506  000B66  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2507  000B6A  0E04               	movlw	4
  2508  000B6C  26DE               	addwf	postinc2,f,c
  2509  000B6E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2510  000B72  0E00               	movlw	0
  2511  000B74  22DD               	addwfc	postdec2,f,c
  2512  000B76  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2513  000B7A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2514  000B7E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2515  000B82  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2516  000B86  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2517  000B8A  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2518  000B8E  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2519  000B92  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2520  000B96  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2521  000B9A  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2522  000B9E  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2523  000BA0  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2524  000BA2  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2525  000BA4  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2526  000BA8  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2527  000BAC  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2528  000BB0  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2529  000BB4  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2530  000BB8  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2531  000BBC  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2532  000BC0  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2533  000BC4  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2534  000BC8  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2535  000BCC  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2536  000BD0  D70B               	goto	l4002
  2537  000BD2                     l4036:
  2538                           
  2539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2540  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2541  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2542  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  2543  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2544  000BE2  0E2A               	movlw	low STR_30
  2545  000BE4  6E03               	movwf	strncmp@_r,c
  2546  000BE6  0E06               	movlw	high STR_30
  2547  000BE8  6E04               	movwf	strncmp@_r+1,c
  2548  000BEA  0E00               	movlw	0
  2549  000BEC  6E06               	movwf	strncmp@n+1,c
  2550  000BEE  0E02               	movlw	2
  2551  000BF0  6E05               	movwf	strncmp@n,c
  2552  000BF2  ECD7  F018         	call	_strncmp	;wreg free
  2553  000BF6  5001               	movf	?_strncmp,w,c
  2554  000BF8  1002               	iorwf	?_strncmp+1,w,c
  2555  000BFA  B4D8               	btfsc	status,2,c
  2556  000BFC  D016               	goto	u4310
  2557  000BFE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2558  000C02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2559  000C06  CFDE F001          	movff	postinc2,strncmp@_l
  2560  000C0A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2561  000C0E  0E30               	movlw	low STR_34
  2562  000C10  6E03               	movwf	strncmp@_r,c
  2563  000C12  0E06               	movlw	high STR_34
  2564  000C14  6E04               	movwf	strncmp@_r+1,c
  2565  000C16  0E00               	movlw	0
  2566  000C18  6E06               	movwf	strncmp@n+1,c
  2567  000C1A  0E02               	movlw	2
  2568  000C1C  6E05               	movwf	strncmp@n,c
  2569  000C1E  ECD7  F018         	call	_strncmp	;wreg free
  2570  000C22  5001               	movf	?_strncmp,w,c
  2571  000C24  1002               	iorwf	?_strncmp+1,w,c
  2572  000C26  A4D8               	btfss	status,2,c
  2573  000C28  D027               	goto	l4046
  2574  000C2A                     u4310:
  2575                           
  2576                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2577  000C2A  0E02               	movlw	2
  2578  000C2C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2579  000C30  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2580  000C34  26DE               	addwf	postinc2,f,c
  2581  000C36  0E00               	movlw	0
  2582  000C38  22DD               	addwfc	postdec2,f,c
  2583                           
  2584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2585  000C3A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2586  000C3E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2587  000C42  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2588  000C46  0E02               	movlw	2
  2589  000C48  26DE               	addwf	postinc2,f,c
  2590  000C4A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2591  000C4E  0E00               	movlw	0
  2592  000C50  22DD               	addwfc	postdec2,f,c
  2593  000C52  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2594  000C56  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2595  000C5A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2596  000C5E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2597  000C62  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2598  000C66  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2599  000C6A  6A61               	clrf	vfpfcnvrt@ll+2,c
  2600  000C6C  6A62               	clrf	vfpfcnvrt@ll+3,c
  2601  000C6E  6A63               	clrf	vfpfcnvrt@ll+4,c
  2602  000C70  6A64               	clrf	vfpfcnvrt@ll+5,c
  2603  000C72  6A65               	clrf	vfpfcnvrt@ll+6,c
  2604  000C74  6A66               	clrf	vfpfcnvrt@ll+7,c
  2605  000C76  D6B8               	goto	l4002
  2606  000C78                     l4046:
  2607                           
  2608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2609  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  000C80  CFDE F001          	movff	postinc2,strncmp@_l
  2612  000C84  CFDD F002          	movff	postdec2,strncmp@_l+1
  2613  000C88  0E11               	movlw	low STR_39
  2614  000C8A  6E03               	movwf	strncmp@_r,c
  2615  000C8C  0E06               	movlw	high STR_39
  2616  000C8E  6E04               	movwf	strncmp@_r+1,c
  2617  000C90  0E00               	movlw	0
  2618  000C92  6E06               	movwf	strncmp@n+1,c
  2619  000C94  0E03               	movlw	3
  2620  000C96  6E05               	movwf	strncmp@n,c
  2621  000C98  ECD7  F018         	call	_strncmp	;wreg free
  2622  000C9C  5001               	movf	?_strncmp,w,c
  2623  000C9E  1002               	iorwf	?_strncmp+1,w,c
  2624  000CA0  A4D8               	btfss	status,2,c
  2625  000CA2  D03E               	goto	l4054
  2626                           
  2627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2628  000CA4  0E03               	movlw	3
  2629  000CA6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2630  000CAA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2631  000CAE  26DE               	addwf	postinc2,f,c
  2632  000CB0  0E00               	movlw	0
  2633  000CB2  22DD               	addwfc	postdec2,f,c
  2634                           
  2635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2636  000CB4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2637  000CB8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2638  000CBC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2639  000CC0  0E02               	movlw	2
  2640  000CC2  26DE               	addwf	postinc2,f,c
  2641  000CC4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2642  000CC8  0E00               	movlw	0
  2643  000CCA  22DD               	addwfc	postdec2,f,c
  2644  000CCC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2645  000CD0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2646  000CD4  50DF               	movf	indf2,w,c
  2647  000CD6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2648  000CD8  504B               	movf	??_vfpfcnvrt+2,w,c
  2649  000CDA  6E6A               	movwf	vfpfcnvrt@llu,c
  2650  000CDC  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2651  000CDE                     L3:
  2652  000CDE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2653  000CE0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2654  000CE2                     L4:
  2655  000CE2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2656  000CE4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2657  000CE6  6A70               	clrf	vfpfcnvrt@llu+6,c
  2658  000CE8  6A71               	clrf	vfpfcnvrt@llu+7,c
  2659                           
  2660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2661  000CEA  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2662  000CEE  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2663  000CF2  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2664  000CF6  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2665  000CFA  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2666  000CFE  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2667  000D02  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2668  000D06  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2669  000D0A  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2670  000D0E  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2671  000D12  ECFC  F012         	call	_otoa	;wreg free
  2672  000D16  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2673  000D1A  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2674  000D1E  0012               	return	
  2675  000D20                     l4054:
  2676                           
  2677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2678  000D20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2679  000D24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2680  000D28  CFDE F001          	movff	postinc2,strncmp@_l
  2681  000D2C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2682  000D30  0E12               	movlw	low (STR_39+1)
  2683  000D32  6E03               	movwf	strncmp@_r,c
  2684  000D34  0E06               	movlw	high (STR_39+1)
  2685  000D36  6E04               	movwf	strncmp@_r+1,c
  2686  000D38  0E00               	movlw	0
  2687  000D3A  6E06               	movwf	strncmp@n+1,c
  2688  000D3C  0E02               	movlw	2
  2689  000D3E  6E05               	movwf	strncmp@n,c
  2690  000D40  ECD7  F018         	call	_strncmp	;wreg free
  2691  000D44  5001               	movf	?_strncmp,w,c
  2692  000D46  1002               	iorwf	?_strncmp+1,w,c
  2693  000D48  B4D8               	btfsc	status,2,c
  2694  000D4A  D068               	goto	u4360
  2695                           
  2696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2697                           
  2698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2699                           
  2700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2701  000D4C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000D50  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  000D54  CFDE FFF6          	movff	postinc2,tblptrl
  2704  000D58  CFDD FFF7          	movff	postdec2,tblptrh
  2705  000D5C                     	if	0	;tblptru may be non-zero
  2706  000D5C                     	endif
  2707  000D5C                     	if	0	;tblptru may be non-zero
  2708  000D5C                     	endif
  2709  000D5C  0008               	tblrd		*
  2710  000D5E  50F5               	movf	tablat,w,c
  2711  000D60  0A6F               	xorlw	111
  2712  000D62  A4D8               	btfss	status,2,c
  2713  000D64  D006               	goto	l4070
  2714                           
  2715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2716  000D66  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2717  000D6A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2718  000D6E  2ADE               	incf	postinc2,f,c
  2719  000D70  D05B               	goto	L15
  2720  000D72                     l4070:
  2721                           
  2722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2723  000D72  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2724  000D76  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2725  000D7A  CFDE F001          	movff	postinc2,strncmp@_l
  2726  000D7E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2727  000D82  0E39               	movlw	low STR_49
  2728  000D84  6E03               	movwf	strncmp@_r,c
  2729  000D86  0E06               	movlw	high STR_49
  2730  000D88  6E04               	movwf	strncmp@_r+1,c
  2731  000D8A  0E00               	movlw	0
  2732  000D8C  6E06               	movwf	strncmp@n+1,c
  2733  000D8E  0E02               	movlw	2
  2734  000D90  6E05               	movwf	strncmp@n,c
  2735  000D92  ECD7  F018         	call	_strncmp	;wreg free
  2736  000D96  5001               	movf	?_strncmp,w,c
  2737  000D98  1002               	iorwf	?_strncmp+1,w,c
  2738  000D9A  A4D8               	btfss	status,2,c
  2739  000D9C  D029               	goto	l4078
  2740                           
  2741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2742  000D9E  0E02               	movlw	2
  2743  000DA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2744  000DA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2745  000DA8  26DE               	addwf	postinc2,f,c
  2746  000DAA  0E00               	movlw	0
  2747  000DAC  22DD               	addwfc	postdec2,f,c
  2748                           
  2749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2750  000DAE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2751  000DB2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2752  000DB6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2753  000DBA  0E04               	movlw	4
  2754  000DBC  26DE               	addwf	postinc2,f,c
  2755  000DBE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2756  000DC2  0E00               	movlw	0
  2757  000DC4  22DD               	addwfc	postdec2,f,c
  2758  000DC6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2759  000DCA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2760  000DCE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2761  000DD2  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2762  000DD6  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2763  000DDA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2764  000DDE  504B               	movf	??_vfpfcnvrt+2,w,c
  2765  000DE0  6E6A               	movwf	vfpfcnvrt@llu,c
  2766  000DE2  504C               	movf	??_vfpfcnvrt+3,w,c
  2767  000DE4  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2768  000DE6  504D               	movf	??_vfpfcnvrt+4,w,c
  2769  000DE8  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2770  000DEA  504E               	movf	??_vfpfcnvrt+5,w,c
  2771  000DEC  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2772  000DEE  D779               	goto	L4
  2773  000DF0                     l4078:
  2774                           
  2775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2776  000DF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2777  000DF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2778  000DF8  CFDE F001          	movff	postinc2,strncmp@_l
  2779  000DFC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2780  000E00  0E3C               	movlw	low STR_54
  2781  000E02  6E03               	movwf	strncmp@_r,c
  2782  000E04  0E06               	movlw	high STR_54
  2783  000E06  6E04               	movwf	strncmp@_r+1,c
  2784  000E08  0E00               	movlw	0
  2785  000E0A  6E06               	movwf	strncmp@n+1,c
  2786  000E0C  0E02               	movlw	2
  2787  000E0E  6E05               	movwf	strncmp@n,c
  2788  000E10  ECD7  F018         	call	_strncmp	;wreg free
  2789  000E14  5001               	movf	?_strncmp,w,c
  2790  000E16  1002               	iorwf	?_strncmp+1,w,c
  2791  000E18  A4D8               	btfss	status,2,c
  2792  000E1A  D021               	goto	l4086
  2793  000E1C                     u4360:
  2794                           
  2795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2796  000E1C  0E02               	movlw	2
  2797  000E1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798  000E22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799  000E26  26DE               	addwf	postinc2,f,c
  2800  000E28                     L15:
  2801  000E28  0E00               	movlw	0
  2802  000E2A  22DD               	addwfc	postdec2,f,c
  2803                           
  2804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2805  000E2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2806  000E30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2807  000E34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2808  000E38  0E02               	movlw	2
  2809  000E3A  26DE               	addwf	postinc2,f,c
  2810  000E3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2811  000E40  0E00               	movlw	0
  2812  000E42  22DD               	addwfc	postdec2,f,c
  2813  000E44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2814  000E48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2815  000E4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2816  000E50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2817  000E54  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2818  000E58  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2819  000E5C  D740               	goto	L3
  2820  000E5E                     l4086:
  2821                           
  2822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2823  000E5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  000E62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  000E66  CFDE F001          	movff	postinc2,strncmp@_l
  2826  000E6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2827  000E6E  0E0D               	movlw	low STR_59
  2828  000E70  6E03               	movwf	strncmp@_r,c
  2829  000E72  0E06               	movlw	high STR_59
  2830  000E74  6E04               	movwf	strncmp@_r+1,c
  2831  000E76  0E00               	movlw	0
  2832  000E78  6E06               	movwf	strncmp@n+1,c
  2833  000E7A  0E03               	movlw	3
  2834  000E7C  6E05               	movwf	strncmp@n,c
  2835  000E7E  ECD7  F018         	call	_strncmp	;wreg free
  2836  000E82  5001               	movf	?_strncmp,w,c
  2837  000E84  1002               	iorwf	?_strncmp+1,w,c
  2838  000E86  A4D8               	btfss	status,2,c
  2839  000E88  D027               	goto	l4096
  2840                           
  2841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2842  000E8A  0E03               	movlw	3
  2843  000E8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2844  000E90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2845  000E94  26DE               	addwf	postinc2,f,c
  2846  000E96  0E00               	movlw	0
  2847  000E98  22DD               	addwfc	postdec2,f,c
  2848                           
  2849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2850  000E9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2851  000E9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2852  000EA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2853  000EA6  0E02               	movlw	2
  2854  000EA8  26DE               	addwf	postinc2,f,c
  2855  000EAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2856  000EAE  0E00               	movlw	0
  2857  000EB0  22DD               	addwfc	postdec2,f,c
  2858  000EB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2859  000EB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2860  000EBA  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2861  000EBE  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2862                           
  2863                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2864  000EC2  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2865  000EC6  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2866  000ECA  C08B  FFDF         	movff	_nout,indf2
  2867  000ECE                     l4092:
  2868                           
  2869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2870  000ECE  0E00               	movlw	0
  2871  000ED0  6E44               	movwf	?_vfpfcnvrt+1,c
  2872  000ED2  0E00               	movlw	0
  2873  000ED4  6E43               	movwf	?_vfpfcnvrt,c
  2874  000ED6  0012               	return	
  2875  000ED8                     l4096:
  2876                           
  2877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2878  000ED8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2879  000EDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2880  000EE0  CFDE F001          	movff	postinc2,strncmp@_l
  2881  000EE4  CFDD F002          	movff	postdec2,strncmp@_l+1
  2882  000EE8  0E0E               	movlw	low (STR_59+1)
  2883  000EEA  6E03               	movwf	strncmp@_r,c
  2884  000EEC  0E06               	movlw	high (STR_59+1)
  2885  000EEE  6E04               	movwf	strncmp@_r+1,c
  2886  000EF0  0E00               	movlw	0
  2887  000EF2  6E06               	movwf	strncmp@n+1,c
  2888  000EF4  0E02               	movlw	2
  2889  000EF6  6E05               	movwf	strncmp@n,c
  2890  000EF8  ECD7  F018         	call	_strncmp	;wreg free
  2891  000EFC  5001               	movf	?_strncmp,w,c
  2892  000EFE  1002               	iorwf	?_strncmp+1,w,c
  2893  000F00  A4D8               	btfss	status,2,c
  2894  000F02  D00A               	goto	l4106
  2895  000F04  D07A               	goto	u4410
  2896  000F06                     l4100:
  2897                           
  2898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2899  000F06  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2900  000F0A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2901  000F0E  C08B  FFDE         	movff	_nout,postinc2
  2902  000F12  C08C  FFDD         	movff	_nout+1,postdec2
  2903  000F16  D7DB               	goto	l4092
  2904  000F18                     l4106:
  2905                           
  2906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2907  000F18  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2908  000F1C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2909  000F20  CFDE FFF6          	movff	postinc2,tblptrl
  2910  000F24  CFDD FFF7          	movff	postdec2,tblptrh
  2911  000F28                     	if	0	;tblptru may be non-zero
  2912  000F28                     	endif
  2913  000F28                     	if	0	;tblptru may be non-zero
  2914  000F28                     	endif
  2915  000F28  0008               	tblrd		*
  2916  000F2A  50F5               	movf	tablat,w,c
  2917  000F2C  0A6E               	xorlw	110
  2918  000F2E  A4D8               	btfss	status,2,c
  2919  000F30  D006               	goto	l4116
  2920                           
  2921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2922  000F32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2923  000F36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2924  000F3A  2ADE               	incf	postinc2,f,c
  2925  000F3C  D064               	goto	L12
  2926  000F3E                     l4116:
  2927                           
  2928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2929  000F3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  000F42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  000F46  CFDE F001          	movff	postinc2,strncmp@_l
  2932  000F4A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2933  000F4E  0E33               	movlw	low STR_69
  2934  000F50  6E03               	movwf	strncmp@_r,c
  2935  000F52  0E06               	movlw	high STR_69
  2936  000F54  6E04               	movwf	strncmp@_r+1,c
  2937  000F56  0E00               	movlw	0
  2938  000F58  6E06               	movwf	strncmp@n+1,c
  2939  000F5A  0E02               	movlw	2
  2940  000F5C  6E05               	movwf	strncmp@n,c
  2941  000F5E  ECD7  F018         	call	_strncmp	;wreg free
  2942  000F62  5001               	movf	?_strncmp,w,c
  2943  000F64  1002               	iorwf	?_strncmp+1,w,c
  2944  000F66  A4D8               	btfss	status,2,c
  2945  000F68  D032               	goto	l4126
  2946                           
  2947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2948  000F6A  0E02               	movlw	2
  2949  000F6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2950  000F70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2951  000F74  26DE               	addwf	postinc2,f,c
  2952  000F76  0E00               	movlw	0
  2953  000F78  22DD               	addwfc	postdec2,f,c
  2954                           
  2955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2956  000F7A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2957  000F7E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2958  000F82  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2959  000F86  0E02               	movlw	2
  2960  000F88  26DE               	addwf	postinc2,f,c
  2961  000F8A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2962  000F8E  0E00               	movlw	0
  2963  000F90  22DD               	addwfc	postdec2,f,c
  2964  000F92  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2965  000F96  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2966  000F9A  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2967  000F9E  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2968                           
  2969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2970  000FA2  C08B  F049         	movff	_nout,??_vfpfcnvrt
  2971  000FA6  C08C  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2972  000FAA  0E00               	movlw	0
  2973  000FAC  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2974  000FAE  0EFF               	movlw	255
  2975  000FB0  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2976  000FB2  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2977  000FB4  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2978  000FB8  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2979  000FBC  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2980  000FC0  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2981  000FC4  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2982  000FC8  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2983  000FCC  D780               	goto	l4092
  2984  000FCE                     l4126:
  2985                           
  2986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2987  000FCE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2988  000FD2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2989  000FD6  CFDE F001          	movff	postinc2,strncmp@_l
  2990  000FDA  CFDD F002          	movff	postdec2,strncmp@_l+1
  2991  000FDE  0E36               	movlw	low STR_74
  2992  000FE0  6E03               	movwf	strncmp@_r,c
  2993  000FE2  0E06               	movlw	high STR_74
  2994  000FE4  6E04               	movwf	strncmp@_r+1,c
  2995  000FE6  0E00               	movlw	0
  2996  000FE8  6E06               	movwf	strncmp@n+1,c
  2997  000FEA  0E02               	movlw	2
  2998  000FEC  6E05               	movwf	strncmp@n,c
  2999  000FEE  ECD7  F018         	call	_strncmp	;wreg free
  3000  000FF2  5001               	movf	?_strncmp,w,c
  3001  000FF4  1002               	iorwf	?_strncmp+1,w,c
  3002  000FF6  A4D8               	btfss	status,2,c
  3003  000FF8  D01D               	goto	l4136
  3004  000FFA                     u4410:
  3005                           
  3006                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3007  000FFA  0E02               	movlw	2
  3008  000FFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3009  001000  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3010  001004  26DE               	addwf	postinc2,f,c
  3011  001006                     L12:
  3012  001006  0E00               	movlw	0
  3013  001008  22DD               	addwfc	postdec2,f,c
  3014                           
  3015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3016  00100A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3017  00100E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3018  001012  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3019  001016  0E02               	movlw	2
  3020  001018  26DE               	addwf	postinc2,f,c
  3021  00101A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3022  00101E  0E00               	movlw	0
  3023  001020  22DD               	addwfc	postdec2,f,c
  3024  001022  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3025  001026  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3026  00102A  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3027  00102E  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3028  001032  D769               	goto	l4100
  3029  001034                     l4136:
  3030                           
  3031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3032  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3033  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3034  00103C  CFDE FFF6          	movff	postinc2,tblptrl
  3035  001040  CFDD FFF7          	movff	postdec2,tblptrh
  3036  001044                     	if	0	;tblptru may be non-zero
  3037  001044                     	endif
  3038  001044                     	if	0	;tblptru may be non-zero
  3039  001044                     	endif
  3040  001044  0008               	tblrd		*
  3041  001046  50F5               	movf	tablat,w,c
  3042  001048  0A70               	xorlw	112
  3043  00104A  A4D8               	btfss	status,2,c
  3044  00104C  D042               	goto	l4144
  3045                           
  3046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3047  00104E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3048  001052  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3049  001056  2ADE               	incf	postinc2,f,c
  3050  001058  0E00               	movlw	0
  3051  00105A  22DD               	addwfc	postdec2,f,c
  3052                           
  3053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3054  00105C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3055  001060  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3056  001064  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3057  001068  0E02               	movlw	2
  3058  00106A  26DE               	addwf	postinc2,f,c
  3059  00106C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3060  001070  0E00               	movlw	0
  3061  001072  22DD               	addwfc	postdec2,f,c
  3062  001074  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3063  001078  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3064  00107C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3065  001080  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3066  001084  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3067  001088  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3068  00108C  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3069  00108E  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3070  001090  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3071  001092  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3072  001094  6A70               	clrf	vfpfcnvrt@llu+6,c
  3073  001096  6A71               	clrf	vfpfcnvrt@llu+7,c
  3074                           
  3075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3076  001098  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3077  00109C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3078  0010A0  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3079  0010A4  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3080  0010A8  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3081  0010AC  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3082  0010B0  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3083  0010B4  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3084  0010B8  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3085  0010BC  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3086  0010C0  0E78               	movlw	120
  3087  0010C2  6E26               	movwf	xtoa@x,c
  3088  0010C4  EC0C  F011         	call	_xtoa	;wreg free
  3089  0010C8  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3090  0010CC  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3091  0010D0  0012               	return	
  3092  0010D2                     l4144:
  3093                           
  3094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3095  0010D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3096  0010D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3097  0010DA  CFDE FFF6          	movff	postinc2,tblptrl
  3098  0010DE  CFDD FFF7          	movff	postdec2,tblptrh
  3099  0010E2                     	if	0	;tblptru may be non-zero
  3100  0010E2                     	endif
  3101  0010E2                     	if	0	;tblptru may be non-zero
  3102  0010E2                     	endif
  3103  0010E2  0008               	tblrd		*
  3104  0010E4  50F5               	movf	tablat,w,c
  3105  0010E6  0A73               	xorlw	115
  3106  0010E8  A4D8               	btfss	status,2,c
  3107  0010EA  D02A               	goto	l4152
  3108                           
  3109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3110  0010EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3111  0010F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3112  0010F4  2ADE               	incf	postinc2,f,c
  3113  0010F6  0E00               	movlw	0
  3114  0010F8  22DD               	addwfc	postdec2,f,c
  3115                           
  3116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3117  0010FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3118  0010FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3119  001102  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3120  001106  0E02               	movlw	2
  3121  001108  26DE               	addwf	postinc2,f,c
  3122  00110A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3123  00110E  0E00               	movlw	0
  3124  001110  22DD               	addwfc	postdec2,f,c
  3125  001112  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3126  001116  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3127  00111A  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3128  00111E  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3129                           
  3130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3131  001122  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3132  001126  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3133  00112A  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3134  00112E  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3135  001132  ECA1  F015         	call	_stoa	;wreg free
  3136  001136  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3137  00113A  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3138  00113E  0012               	return	
  3139  001140                     l4152:
  3140                           
  3141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3142  001140  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3143  001144  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3144  001148  CFDE F001          	movff	postinc2,strncmp@_l
  3145  00114C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3146  001150  0E15               	movlw	low STR_79
  3147  001152  6E03               	movwf	strncmp@_r,c
  3148  001154  0E06               	movlw	high STR_79
  3149  001156  6E04               	movwf	strncmp@_r+1,c
  3150  001158  0E00               	movlw	0
  3151  00115A  6E06               	movwf	strncmp@n+1,c
  3152  00115C  0E03               	movlw	3
  3153  00115E  6E05               	movwf	strncmp@n,c
  3154  001160  ECD7  F018         	call	_strncmp	;wreg free
  3155  001164  5001               	movf	?_strncmp,w,c
  3156  001166  1002               	iorwf	?_strncmp+1,w,c
  3157  001168  A4D8               	btfss	status,2,c
  3158  00116A  D03E               	goto	l4160
  3159                           
  3160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3161  00116C  0E03               	movlw	3
  3162  00116E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3163  001172  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3164  001176  26DE               	addwf	postinc2,f,c
  3165  001178  0E00               	movlw	0
  3166  00117A  22DD               	addwfc	postdec2,f,c
  3167                           
  3168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3169  00117C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3170  001180  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3171  001184  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3172  001188  0E02               	movlw	2
  3173  00118A  26DE               	addwf	postinc2,f,c
  3174  00118C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3175  001190  0E00               	movlw	0
  3176  001192  22DD               	addwfc	postdec2,f,c
  3177  001194  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3178  001198  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3179  00119C  50DF               	movf	indf2,w,c
  3180  00119E  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3181  0011A0  504B               	movf	??_vfpfcnvrt+2,w,c
  3182  0011A2  6E6A               	movwf	vfpfcnvrt@llu,c
  3183  0011A4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3184  0011A6                     L6:
  3185  0011A6  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3186  0011A8  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3187  0011AA                     L7:
  3188  0011AA  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3189  0011AC  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3190  0011AE  6A70               	clrf	vfpfcnvrt@llu+6,c
  3191  0011B0  6A71               	clrf	vfpfcnvrt@llu+7,c
  3192                           
  3193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3194  0011B2  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3195  0011B6  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3196  0011BA  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3197  0011BE  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3198  0011C2  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3199  0011C6  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3200  0011CA  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3201  0011CE  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3202  0011D2  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3203  0011D6  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3204  0011DA  EC24  F012         	call	_utoa	;wreg free
  3205  0011DE  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3206  0011E2  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3207  0011E6  0012               	return	
  3208  0011E8                     l4160:
  3209                           
  3210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3211  0011E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3212  0011EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3213  0011F0  CFDE F001          	movff	postinc2,strncmp@_l
  3214  0011F4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3215  0011F8  0E16               	movlw	low (STR_79+1)
  3216  0011FA  6E03               	movwf	strncmp@_r,c
  3217  0011FC  0E06               	movlw	high (STR_79+1)
  3218  0011FE  6E04               	movwf	strncmp@_r+1,c
  3219  001200  0E00               	movlw	0
  3220  001202  6E06               	movwf	strncmp@n+1,c
  3221  001204  0E02               	movlw	2
  3222  001206  6E05               	movwf	strncmp@n,c
  3223  001208  ECD7  F018         	call	_strncmp	;wreg free
  3224  00120C  5001               	movf	?_strncmp,w,c
  3225  00120E  1002               	iorwf	?_strncmp+1,w,c
  3226  001210  B4D8               	btfsc	status,2,c
  3227  001212  D068               	goto	u4480
  3228                           
  3229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3230                           
  3231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3232                           
  3233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3234  001214  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235  001218  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236  00121C  CFDE FFF6          	movff	postinc2,tblptrl
  3237  001220  CFDD FFF7          	movff	postdec2,tblptrh
  3238  001224                     	if	0	;tblptru may be non-zero
  3239  001224                     	endif
  3240  001224                     	if	0	;tblptru may be non-zero
  3241  001224                     	endif
  3242  001224  0008               	tblrd		*
  3243  001226  50F5               	movf	tablat,w,c
  3244  001228  0A75               	xorlw	117
  3245  00122A  A4D8               	btfss	status,2,c
  3246  00122C  D006               	goto	l4176
  3247                           
  3248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3249  00122E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3250  001232  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3251  001236  2ADE               	incf	postinc2,f,c
  3252  001238  D05B               	goto	L16
  3253  00123A                     l4176:
  3254                           
  3255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3256  00123A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3257  00123E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3258  001242  CFDE F001          	movff	postinc2,strncmp@_l
  3259  001246  CFDD F002          	movff	postdec2,strncmp@_l+1
  3260  00124A  0E1E               	movlw	low (STR_1+1)
  3261  00124C  6E03               	movwf	strncmp@_r,c
  3262  00124E  0E06               	movlw	high (STR_1+1)
  3263  001250  6E04               	movwf	strncmp@_r+1,c
  3264  001252  0E00               	movlw	0
  3265  001254  6E06               	movwf	strncmp@n+1,c
  3266  001256  0E02               	movlw	2
  3267  001258  6E05               	movwf	strncmp@n,c
  3268  00125A  ECD7  F018         	call	_strncmp	;wreg free
  3269  00125E  5001               	movf	?_strncmp,w,c
  3270  001260  1002               	iorwf	?_strncmp+1,w,c
  3271  001262  A4D8               	btfss	status,2,c
  3272  001264  D029               	goto	l4184
  3273                           
  3274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3275  001266  0E02               	movlw	2
  3276  001268  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3277  00126C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3278  001270  26DE               	addwf	postinc2,f,c
  3279  001272  0E00               	movlw	0
  3280  001274  22DD               	addwfc	postdec2,f,c
  3281                           
  3282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3283  001276  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3284  00127A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3285  00127E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3286  001282  0E04               	movlw	4
  3287  001284  26DE               	addwf	postinc2,f,c
  3288  001286  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3289  00128A  0E00               	movlw	0
  3290  00128C  22DD               	addwfc	postdec2,f,c
  3291  00128E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3292  001292  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3293  001296  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3294  00129A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3295  00129E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3296  0012A2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3297  0012A6  504B               	movf	??_vfpfcnvrt+2,w,c
  3298  0012A8  6E6A               	movwf	vfpfcnvrt@llu,c
  3299  0012AA  504C               	movf	??_vfpfcnvrt+3,w,c
  3300  0012AC  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3301  0012AE  504D               	movf	??_vfpfcnvrt+4,w,c
  3302  0012B0  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3303  0012B2  504E               	movf	??_vfpfcnvrt+5,w,c
  3304  0012B4  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3305  0012B6  D779               	goto	L7
  3306  0012B8                     l4184:
  3307                           
  3308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3309  0012B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3310  0012BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3311  0012C0  CFDE F001          	movff	postinc2,strncmp@_l
  3312  0012C4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3313  0012C8  0E3F               	movlw	low STR_94
  3314  0012CA  6E03               	movwf	strncmp@_r,c
  3315  0012CC  0E06               	movlw	high STR_94
  3316  0012CE  6E04               	movwf	strncmp@_r+1,c
  3317  0012D0  0E00               	movlw	0
  3318  0012D2  6E06               	movwf	strncmp@n+1,c
  3319  0012D4  0E02               	movlw	2
  3320  0012D6  6E05               	movwf	strncmp@n,c
  3321  0012D8  ECD7  F018         	call	_strncmp	;wreg free
  3322  0012DC  5001               	movf	?_strncmp,w,c
  3323  0012DE  1002               	iorwf	?_strncmp+1,w,c
  3324  0012E0  A4D8               	btfss	status,2,c
  3325  0012E2  D021               	goto	l4192
  3326  0012E4                     u4480:
  3327                           
  3328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3329  0012E4  0E02               	movlw	2
  3330  0012E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  0012EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  0012EE  26DE               	addwf	postinc2,f,c
  3333  0012F0                     L16:
  3334  0012F0  0E00               	movlw	0
  3335  0012F2  22DD               	addwfc	postdec2,f,c
  3336                           
  3337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3338  0012F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3339  0012F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3340  0012FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3341  001300  0E02               	movlw	2
  3342  001302  26DE               	addwf	postinc2,f,c
  3343  001304  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3344  001308  0E00               	movlw	0
  3345  00130A  22DD               	addwfc	postdec2,f,c
  3346  00130C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3347  001310  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3348  001314  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3349  001318  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3350  00131C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3351  001320  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3352  001324  D740               	goto	L6
  3353  001326                     l4192:
  3354                           
  3355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3356  001326  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3357  00132A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3358  00132E  CFDE F001          	movff	postinc2,strncmp@_l
  3359  001332  CFDD F002          	movff	postdec2,strncmp@_l+1
  3360  001336  0E19               	movlw	low STR_99
  3361  001338  6E03               	movwf	strncmp@_r,c
  3362  00133A  0E06               	movlw	high STR_99
  3363  00133C  6E04               	movwf	strncmp@_r+1,c
  3364  00133E  0E00               	movlw	0
  3365  001340  6E06               	movwf	strncmp@n+1,c
  3366  001342  0E03               	movlw	3
  3367  001344  6E05               	movwf	strncmp@n,c
  3368  001346  ECD7  F018         	call	_strncmp	;wreg free
  3369  00134A  5001               	movf	?_strncmp,w,c
  3370  00134C  1002               	iorwf	?_strncmp+1,w,c
  3371  00134E  B4D8               	btfsc	status,2,c
  3372  001350  D016               	goto	u4500
  3373  001352  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3374  001356  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3375  00135A  CFDE F001          	movff	postinc2,strncmp@_l
  3376  00135E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3377  001362  0E01               	movlw	low STR_103
  3378  001364  6E03               	movwf	strncmp@_r,c
  3379  001366  0E06               	movlw	high STR_103
  3380  001368  6E04               	movwf	strncmp@_r+1,c
  3381  00136A  0E00               	movlw	0
  3382  00136C  6E06               	movwf	strncmp@n+1,c
  3383  00136E  0E03               	movlw	3
  3384  001370  6E05               	movwf	strncmp@n,c
  3385  001372  ECD7  F018         	call	_strncmp	;wreg free
  3386  001376  5001               	movf	?_strncmp,w,c
  3387  001378  1002               	iorwf	?_strncmp+1,w,c
  3388  00137A  A4D8               	btfss	status,2,c
  3389  00137C  D053               	goto	l4206
  3390  00137E                     u4500:
  3391                           
  3392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3393  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3394  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3395  001386  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3396  00138A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3397  00138E  0E02               	movlw	2
  3398  001390  2649               	addwf	??_vfpfcnvrt,f,c
  3399  001392  0E00               	movlw	0
  3400  001394  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3401  001396  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3402  00139A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3403  00139E                     	if	0	;tblptru may be non-zero
  3404  00139E                     	endif
  3405  00139E                     	if	0	;tblptru may be non-zero
  3406  00139E                     	endif
  3407  00139E  0008               	tblrd		*
  3408  0013A0  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3409                           
  3410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3411  0013A4  0E03               	movlw	3
  3412  0013A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3413  0013AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3414  0013AE  26DE               	addwf	postinc2,f,c
  3415  0013B0  0E00               	movlw	0
  3416  0013B2  22DD               	addwfc	postdec2,f,c
  3417                           
  3418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3419  0013B4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3420  0013B8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3421  0013BC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3422  0013C0  0E02               	movlw	2
  3423  0013C2  26DE               	addwf	postinc2,f,c
  3424  0013C4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3425  0013C8  0E00               	movlw	0
  3426  0013CA  22DD               	addwfc	postdec2,f,c
  3427  0013CC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3428  0013D0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3429  0013D4  50DF               	movf	indf2,w,c
  3430  0013D6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3431  0013D8  504B               	movf	??_vfpfcnvrt+2,w,c
  3432  0013DA  6E6A               	movwf	vfpfcnvrt@llu,c
  3433  0013DC  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3434  0013DE                     L8:
  3435  0013DE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3436  0013E0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3437  0013E2                     L9:
  3438  0013E2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3439  0013E4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3440  0013E6  6A70               	clrf	vfpfcnvrt@llu+6,c
  3441  0013E8  6A71               	clrf	vfpfcnvrt@llu+7,c
  3442                           
  3443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3444  0013EA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3445  0013EE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3446  0013F2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3447  0013F6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3448  0013FA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3449  0013FE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3450  001402  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3451  001406  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3452  00140A  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3453  00140E  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3454  001412  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3455  001416  EC0C  F011         	call	_xtoa	;wreg free
  3456  00141A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3457  00141E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3458  001422  0012               	return	
  3459  001424                     l4206:
  3460                           
  3461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3462  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3463  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  00142C  CFDE F001          	movff	postinc2,strncmp@_l
  3465  001430  CFDD F002          	movff	postdec2,strncmp@_l+1
  3466  001434  0E1A               	movlw	low (STR_99+1)
  3467  001436  6E03               	movwf	strncmp@_r,c
  3468  001438  0E06               	movlw	high (STR_99+1)
  3469  00143A  6E04               	movwf	strncmp@_r+1,c
  3470  00143C  0E00               	movlw	0
  3471  00143E  6E06               	movwf	strncmp@n+1,c
  3472  001440  0E02               	movlw	2
  3473  001442  6E05               	movwf	strncmp@n,c
  3474  001444  ECD7  F018         	call	_strncmp	;wreg free
  3475  001448  5001               	movf	?_strncmp,w,c
  3476  00144A  1002               	iorwf	?_strncmp+1,w,c
  3477  00144C  B4D8               	btfsc	status,2,c
  3478  00144E  D0D5               	goto	u4580
  3479  001450  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3480  001454  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3481  001458  CFDE F001          	movff	postinc2,strncmp@_l
  3482  00145C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3483  001460  0E02               	movlw	low (STR_103+1)
  3484  001462  6E03               	movwf	strncmp@_r,c
  3485  001464  0E06               	movlw	high (STR_103+1)
  3486  001466  6E04               	movwf	strncmp@_r+1,c
  3487  001468  0E00               	movlw	0
  3488  00146A  6E06               	movwf	strncmp@n+1,c
  3489  00146C  0E02               	movlw	2
  3490  00146E  6E05               	movwf	strncmp@n,c
  3491  001470  ECD7  F018         	call	_strncmp	;wreg free
  3492  001474  5001               	movf	?_strncmp,w,c
  3493  001476  1002               	iorwf	?_strncmp+1,w,c
  3494  001478  B4D8               	btfsc	status,2,c
  3495  00147A  D0BF               	goto	u4580
  3496                           
  3497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3498                           
  3499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1267:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3500                           
  3501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1266:             *fmt += ((s
      +                          izeof("hx")/sizeof("hx"[0]))-1);
  3502                           
  3503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3504  00147C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3505  001480  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  001484  CFDE FFF6          	movff	postinc2,tblptrl
  3507  001488  CFDD FFF7          	movff	postdec2,tblptrh
  3508  00148C                     	if	0	;tblptru may be non-zero
  3509  00148C                     	endif
  3510  00148C                     	if	0	;tblptru may be non-zero
  3511  00148C                     	endif
  3512  00148C  0008               	tblrd		*
  3513  00148E  50F5               	movf	tablat,w,c
  3514  001490  0A78               	xorlw	120
  3515  001492  B4D8               	btfsc	status,2,c
  3516  001494  D00D               	goto	u4540
  3517  001496  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3518  00149A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3519  00149E  CFDE FFF6          	movff	postinc2,tblptrl
  3520  0014A2  CFDD FFF7          	movff	postdec2,tblptrh
  3521  0014A6                     	if	0	;tblptru may be non-zero
  3522  0014A6                     	endif
  3523  0014A6                     	if	0	;tblptru may be non-zero
  3524  0014A6                     	endif
  3525  0014A6  0008               	tblrd		*
  3526  0014A8  50F5               	movf	tablat,w,c
  3527  0014AA  0A58               	xorlw	88
  3528  0014AC  A4D8               	btfss	status,2,c
  3529  0014AE  D011               	goto	l4234
  3530  0014B0                     u4540:
  3531                           
  3532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3533  0014B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3534  0014B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3535  0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  3536  0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  3537  0014C0                     	if	0	;tblptru may be non-zero
  3538  0014C0                     	endif
  3539  0014C0                     	if	0	;tblptru may be non-zero
  3540  0014C0                     	endif
  3541  0014C0  0008               	tblrd		*
  3542  0014C2  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3543                           
  3544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3545  0014C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  0014CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  0014CE  2ADE               	incf	postinc2,f,c
  3548  0014D0  D0AD               	goto	L27
  3549  0014D2                     l4234:
  3550                           
  3551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3552  0014D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3553  0014D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3554  0014DA  CFDE F001          	movff	postinc2,strncmp@_l
  3555  0014DE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3556  0014E2  0E42               	movlw	low STR_117
  3557  0014E4  6E03               	movwf	strncmp@_r,c
  3558  0014E6  0E06               	movlw	high STR_117
  3559  0014E8  6E04               	movwf	strncmp@_r+1,c
  3560  0014EA  0E00               	movlw	0
  3561  0014EC  6E06               	movwf	strncmp@n+1,c
  3562  0014EE  0E02               	movlw	2
  3563  0014F0  6E05               	movwf	strncmp@n,c
  3564  0014F2  ECD7  F018         	call	_strncmp	;wreg free
  3565  0014F6  5001               	movf	?_strncmp,w,c
  3566  0014F8  1002               	iorwf	?_strncmp+1,w,c
  3567  0014FA  B4D8               	btfsc	status,2,c
  3568  0014FC  D016               	goto	u4560
  3569  0014FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3570  001502  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3571  001506  CFDE F001          	movff	postinc2,strncmp@_l
  3572  00150A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3573  00150E  0E21               	movlw	low STR_121
  3574  001510  6E03               	movwf	strncmp@_r,c
  3575  001512  0E06               	movlw	high STR_121
  3576  001514  6E04               	movwf	strncmp@_r+1,c
  3577  001516  0E00               	movlw	0
  3578  001518  6E06               	movwf	strncmp@n+1,c
  3579  00151A  0E02               	movlw	2
  3580  00151C  6E05               	movwf	strncmp@n,c
  3581  00151E  ECD7  F018         	call	_strncmp	;wreg free
  3582  001522  5001               	movf	?_strncmp,w,c
  3583  001524  1002               	iorwf	?_strncmp+1,w,c
  3584  001526  A4D8               	btfss	status,2,c
  3585  001528  D03C               	goto	l4248
  3586  00152A                     u4560:
  3587                           
  3588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3589  00152A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3590  00152E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  001532  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3592  001536  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3593  00153A  0E01               	movlw	1
  3594  00153C  2649               	addwf	??_vfpfcnvrt,f,c
  3595  00153E  0E00               	movlw	0
  3596  001540  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3597  001542  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3598  001546  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3599  00154A                     	if	0	;tblptru may be non-zero
  3600  00154A                     	endif
  3601  00154A                     	if	0	;tblptru may be non-zero
  3602  00154A                     	endif
  3603  00154A  0008               	tblrd		*
  3604  00154C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3605                           
  3606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3607  001550  0E02               	movlw	2
  3608  001552  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3609  001556  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3610  00155A  26DE               	addwf	postinc2,f,c
  3611  00155C  0E00               	movlw	0
  3612  00155E  22DD               	addwfc	postdec2,f,c
  3613                           
  3614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3615  001560  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3616  001564  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3617  001568  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3618  00156C  0E04               	movlw	4
  3619  00156E  26DE               	addwf	postinc2,f,c
  3620  001570  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3621  001574  0E00               	movlw	0
  3622  001576  22DD               	addwfc	postdec2,f,c
  3623  001578  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3624  00157C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3625  001580  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3626  001584  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3627  001588  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3628  00158C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3629  001590  504B               	movf	??_vfpfcnvrt+2,w,c
  3630  001592  6E6A               	movwf	vfpfcnvrt@llu,c
  3631  001594  504C               	movf	??_vfpfcnvrt+3,w,c
  3632  001596  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3633  001598  504D               	movf	??_vfpfcnvrt+4,w,c
  3634  00159A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3635  00159C  504E               	movf	??_vfpfcnvrt+5,w,c
  3636  00159E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3637  0015A0  D720               	goto	L9
  3638  0015A2                     l4248:
  3639                           
  3640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3641  0015A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3642  0015A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  0015AA  CFDE F001          	movff	postinc2,strncmp@_l
  3644  0015AE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3645  0015B2  0E45               	movlw	low STR_126
  3646  0015B4  6E03               	movwf	strncmp@_r,c
  3647  0015B6  0E06               	movlw	high STR_126
  3648  0015B8  6E04               	movwf	strncmp@_r+1,c
  3649  0015BA  0E00               	movlw	0
  3650  0015BC  6E06               	movwf	strncmp@n+1,c
  3651  0015BE  0E02               	movlw	2
  3652  0015C0  6E05               	movwf	strncmp@n,c
  3653  0015C2  ECD7  F018         	call	_strncmp	;wreg free
  3654  0015C6  5001               	movf	?_strncmp,w,c
  3655  0015C8  1002               	iorwf	?_strncmp+1,w,c
  3656  0015CA  B4D8               	btfsc	status,2,c
  3657  0015CC  D016               	goto	u4580
  3658  0015CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3659  0015D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3660  0015D6  CFDE F001          	movff	postinc2,strncmp@_l
  3661  0015DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3662  0015DE  0E24               	movlw	low STR_130
  3663  0015E0  6E03               	movwf	strncmp@_r,c
  3664  0015E2  0E06               	movlw	high STR_130
  3665  0015E4  6E04               	movwf	strncmp@_r+1,c
  3666  0015E6  0E00               	movlw	0
  3667  0015E8  6E06               	movwf	strncmp@n+1,c
  3668  0015EA  0E02               	movlw	2
  3669  0015EC  6E05               	movwf	strncmp@n,c
  3670  0015EE  ECD7  F018         	call	_strncmp	;wreg free
  3671  0015F2  5001               	movf	?_strncmp,w,c
  3672  0015F4  1002               	iorwf	?_strncmp+1,w,c
  3673  0015F6  A4D8               	btfss	status,2,c
  3674  0015F8  D034               	goto	l4262
  3675  0015FA                     u4580:
  3676                           
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3678  0015FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3679  0015FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3680  001602  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3681  001606  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3682  00160A  0E01               	movlw	1
  3683  00160C  2649               	addwf	??_vfpfcnvrt,f,c
  3684  00160E  0E00               	movlw	0
  3685  001610  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3686  001612  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3687  001616  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3688  00161A                     	if	0	;tblptru may be non-zero
  3689  00161A                     	endif
  3690  00161A                     	if	0	;tblptru may be non-zero
  3691  00161A                     	endif
  3692  00161A  0008               	tblrd		*
  3693  00161C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3694                           
  3695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3696  001620  0E02               	movlw	2
  3697  001622  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  001626  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  00162A  26DE               	addwf	postinc2,f,c
  3700  00162C                     L27:
  3701  00162C  0E00               	movlw	0
  3702  00162E  22DD               	addwfc	postdec2,f,c
  3703                           
  3704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3705  001630  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3706  001634  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3707  001638  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3708  00163C  0E02               	movlw	2
  3709  00163E  26DE               	addwf	postinc2,f,c
  3710  001640  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3711  001644  0E00               	movlw	0
  3712  001646  22DD               	addwfc	postdec2,f,c
  3713  001648  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3714  00164C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3715  001650  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3716  001654  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3717  001658  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3718  00165C  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3719  001660  D6BE               	goto	L8
  3720  001662                     l4262:
  3721                           
  3722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3723  001662  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3724  001666  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3725  00166A  CFDE FFF6          	movff	postinc2,tblptrl
  3726  00166E  CFDD FFF7          	movff	postdec2,tblptrh
  3727  001672                     	if	0	;tblptru may be non-zero
  3728  001672                     	endif
  3729  001672                     	if	0	;tblptru may be non-zero
  3730  001672                     	endif
  3731  001672  0008               	tblrd		*
  3732  001674  50F5               	movf	tablat,w,c
  3733  001676  0A25               	xorlw	37
  3734  001678  A4D8               	btfss	status,2,c
  3735  00167A  D016               	goto	l4272
  3736                           
  3737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3738  00167C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3739  001680  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3740  001684  2ADE               	incf	postinc2,f,c
  3741  001686  0E00               	movlw	0
  3742  001688  22DD               	addwfc	postdec2,f,c
  3743                           
  3744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3745  00168A  0E00               	movlw	0
  3746  00168C  6E02               	movwf	fputc@c+1,c
  3747  00168E  0E25               	movlw	37
  3748  001690  6E01               	movwf	fputc@c,c
  3749  001692  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3750  001696  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3751  00169A  EC2C  F019         	call	_fputc	;wreg free
  3752  00169E                     l4268:
  3753                           
  3754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3755  00169E  0E00               	movlw	0
  3756  0016A0  6E44               	movwf	?_vfpfcnvrt+1,c
  3757  0016A2  0E01               	movlw	1
  3758  0016A4  6E43               	movwf	?_vfpfcnvrt,c
  3759  0016A6  0012               	return	
  3760  0016A8                     l4272:
  3761                           
  3762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3763  0016A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3764  0016AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  0016B0  2ADE               	incf	postinc2,f,c
  3766  0016B2  0E00               	movlw	0
  3767  0016B4  22DD               	addwfc	postdec2,f,c
  3768  0016B6  D40B               	goto	l4092
  3769  0016B8                     l4278:
  3770                           
  3771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3772  0016B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3773  0016BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3774  0016C0  CFDE FFF6          	movff	postinc2,tblptrl
  3775  0016C4  CFDD FFF7          	movff	postdec2,tblptrh
  3776  0016C8                     	if	0	;tblptru may be non-zero
  3777  0016C8                     	endif
  3778  0016C8                     	if	0	;tblptru may be non-zero
  3779  0016C8                     	endif
  3780  0016C8  0008               	tblrd		*
  3781  0016CA  50F5               	movf	tablat,w,c
  3782  0016CC  6E01               	movwf	fputc@c,c
  3783  0016CE  6A02               	clrf	fputc@c+1,c
  3784  0016D0  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3785  0016D4  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3786  0016D8  EC2C  F019         	call	_fputc	;wreg free
  3787                           
  3788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3789  0016DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3790  0016E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  0016E4  2ADE               	incf	postinc2,f,c
  3792  0016E6  0E00               	movlw	0
  3793  0016E8  22DD               	addwfc	postdec2,f,c
  3794  0016EA  D7D9               	goto	l4268
  3795  0016EC                     __end_of_vfpfcnvrt:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function _xtoa *****************
  3799 ;; Defined at:
  3800 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3803 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3804 ;;  d               8   29[COMRAM] unsigned long long 
  3805 ;;  x               1   37[COMRAM] unsigned char 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  n               8   54[COMRAM] unsigned long long 
  3808 ;;  c               2   64[COMRAM] int 
  3809 ;;  i               2   62[COMRAM] int 
  3810 ;;  w               2   52[COMRAM] int 
  3811 ;;  p               2   50[COMRAM] int 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2   27[COMRAM] int 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3821 ;;      Params:        11       0       0       0       0       0       0
  3822 ;;      Locals:        20       0       0       0       0       0       0
  3823 ;;      Temps:          8       0       0       0       0       0       0
  3824 ;;      Totals:        39       0       0       0       0       0       0
  3825 ;;Total ram usage:       39 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    6
  3828 ;; This function calls:
  3829 ;;		_isalpha
  3830 ;;		_isupper
  3831 ;;		_pad
  3832 ;;		_toupper
  3833 ;; This function is called by:
  3834 ;;		_vfpfcnvrt
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text7
  3839  002218                     __ptext7:
  3840                           	opt callstack 0
  3841  002218                     _xtoa:
  3842                           	opt callstack 19
  3843                           
  3844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3845                           
  3846                           ;incstack = 0
  3847  002218  0100               	movlb	0	; () banked
  3848  00221A  AF90               	btfss	(_prec+1)& (0+255),7,b
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3852  00221C  9391               	bcf	_flags& (0+255),1,b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3856  00221E  BF90               	btfsc	(_prec+1)& (0+255),7,b
  3857  002220  D005               	goto	u3800
  3858  002222  5190               	movf	(_prec+1)& (0+255),w,b
  3859  002224  E108               	bnz	l421
  3860  002226  058F               	decf	_prec& (0+255),w,b
  3861  002228  B0D8               	btfsc	status,0,c
  3862  00222A  D005               	goto	l421
  3863  00222C                     u3800:
  3864                           
  3865                           ; BSR set to: 0
  3866  00222C  0E00               	movlw	0
  3867  00222E  6E34               	movwf	xtoa@p+1,c
  3868  002230  0E01               	movlw	1
  3869  002232  6E33               	movwf	xtoa@p,c
  3870  002234  D004               	goto	l423
  3871  002236                     l421:
  3872                           
  3873                           ; BSR set to: 0
  3874  002236  C08F  F033         	movff	_prec,xtoa@p
  3875  00223A  C090  F034         	movff	_prec+1,xtoa@p+1
  3876  00223E                     l423:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3880  00223E  C08D  F035         	movff	_width,xtoa@w
  3881  002242  C08E  F036         	movff	_width+1,xtoa@w+1
  3882                           
  3883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3884  002246  A991               	btfss	_flags& (0+255),4,b
  3885  002248  D004               	goto	l3792
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3889  00224A  0EFE               	movlw	254
  3890  00224C  2635               	addwf	xtoa@w,f,c
  3891  00224E  0EFF               	movlw	255
  3892  002250  2236               	addwfc	xtoa@w+1,f,c
  3893  002252                     l3792:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3897  002252  C01E  F037         	movff	xtoa@d,xtoa@n
  3898  002256  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3899  00225A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3900  00225E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3901  002262  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3902  002266  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3903  00226A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3904  00226E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3908  002272  0E00               	movlw	0
  3909  002274  6E40               	movwf	xtoa@i+1,c
  3910  002276  0E1F               	movlw	31
  3911  002278  6E3F               	movwf	xtoa@i,c
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3915  00227A  0E00               	movlw	0
  3916  00227C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  3917                           
  3918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3919  00227E  D093               	goto	l3828
  3920  002280                     l3798:
  3921                           
  3922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3923  002280  063F               	decf	xtoa@i,f,c
  3924  002282  A0D8               	btfss	status,0,c
  3925  002284  0640               	decf	xtoa@i+1,f,c
  3926                           
  3927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3928  002286  0E0F               	movlw	15
  3929  002288  1437               	andwf	xtoa@n,w,c
  3930  00228A  6E41               	movwf	xtoa@c,c
  3931  00228C  6A42               	clrf	xtoa@c+1,c
  3932                           
  3933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3934  00228E  BE42               	btfsc	xtoa@c+1,7,c
  3935  002290  D008               	goto	l3806
  3936  002292  5042               	movf	xtoa@c+1,w,c
  3937  002294  E104               	bnz	u3820
  3938  002296  0E0A               	movlw	10
  3939  002298  5C41               	subwf	xtoa@c,w,c
  3940  00229A  A0D8               	btfss	status,0,c
  3941  00229C  D002               	goto	l3806
  3942  00229E                     u3820:
  3943  00229E  0E57               	movlw	87
  3944  0022A0  D001               	goto	L17
  3945  0022A2                     l3806:
  3946  0022A2  0E30               	movlw	48
  3947  0022A4                     L17:
  3948  0022A4  2441               	addwf	xtoa@c,w,c
  3949  0022A6  6E41               	movwf	xtoa@c,c
  3950  0022A8  0E00               	movlw	0
  3951  0022AA  2042               	addwfc	xtoa@c+1,w,c
  3952  0022AC  6E42               	movwf	xtoa@c+1,c
  3953                           
  3954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3955  0022AE  0EBF               	movlw	191
  3956  0022B0  6E27               	movwf	??_xtoa& (0+255),c
  3957  0022B2  0EFF               	movlw	255
  3958  0022B4  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3959  0022B6  5026               	movf	xtoa@x,w,c
  3960  0022B8  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3961  0022BA  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3962  0022BC  5027               	movf	??_xtoa,w,c
  3963  0022BE  2629               	addwf	??_xtoa+2,f,c
  3964  0022C0  5028               	movf	??_xtoa+1,w,c
  3965  0022C2  222A               	addwfc	??_xtoa+3,f,c
  3966  0022C4  502A               	movf	??_xtoa+3,w,c
  3967  0022C6  E106               	bnz	u3830
  3968  0022C8  0E1A               	movlw	26
  3969  0022CA  5C29               	subwf	??_xtoa+2,w,c
  3970  0022CC  B0D8               	btfsc	status,0,c
  3971  0022CE  D002               	goto	u3830
  3972  0022D0  0E01               	movlw	1
  3973  0022D2  D001               	goto	u3840
  3974  0022D4                     u3830:
  3975  0022D4  0E00               	movlw	0
  3976  0022D6                     u3840:
  3977  0022D6  6E2F               	movwf	_xtoa$1086,c
  3978  0022D8  6A30               	clrf	_xtoa$1086+1,c
  3979  0022DA  502F               	movf	_xtoa$1086,w,c
  3980  0022DC  1030               	iorwf	_xtoa$1086+1,w,c
  3981  0022DE  B4D8               	btfsc	status,2,c
  3982  0022E0  D027               	goto	l3820
  3983  0022E2  0E9F               	movlw	159
  3984  0022E4  6E27               	movwf	??_xtoa& (0+255),c
  3985  0022E6  0EFF               	movlw	255
  3986  0022E8  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3987  0022EA  0E20               	movlw	32
  3988  0022EC  1041               	iorwf	xtoa@c,w,c
  3989  0022EE  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3990  0022F0  0E00               	movlw	0
  3991  0022F2  1042               	iorwf	xtoa@c+1,w,c
  3992  0022F4  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3993  0022F6  5027               	movf	??_xtoa,w,c
  3994  0022F8  2629               	addwf	??_xtoa+2,f,c
  3995  0022FA  5028               	movf	??_xtoa+1,w,c
  3996  0022FC  222A               	addwfc	??_xtoa+3,f,c
  3997  0022FE  502A               	movf	??_xtoa+3,w,c
  3998  002300  E106               	bnz	u3860
  3999  002302  0E1A               	movlw	26
  4000  002304  5C29               	subwf	??_xtoa+2,w,c
  4001  002306  B0D8               	btfsc	status,0,c
  4002  002308  D002               	goto	u3860
  4003  00230A  0E01               	movlw	1
  4004  00230C  D001               	goto	u3870
  4005  00230E                     u3860:
  4006  00230E  0E00               	movlw	0
  4007  002310                     u3870:
  4008  002310  6E31               	movwf	_xtoa$1087,c
  4009  002312  6A32               	clrf	_xtoa$1087+1,c
  4010  002314  5031               	movf	_xtoa$1087,w,c
  4011  002316  1032               	iorwf	_xtoa$1087+1,w,c
  4012  002318  B4D8               	btfsc	status,2,c
  4013  00231A  D00A               	goto	l3820
  4014                           
  4015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4016  00231C  C041  F007         	movff	xtoa@c,toupper@c
  4017  002320  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4018  002324  EC09  F01B         	call	_toupper	;wreg free
  4019  002328  C007  F041         	movff	?_toupper,xtoa@c
  4020  00232C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4021  002330                     l3820:
  4022                           
  4023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4024  002330  0E98               	movlw	low _dbuf
  4025  002332  243F               	addwf	xtoa@i,w,c
  4026  002334  6ED9               	movwf	fsr2l,c
  4027  002336  0E00               	movlw	high _dbuf
  4028  002338  2040               	addwfc	xtoa@i+1,w,c
  4029  00233A  6EDA               	movwf	fsr2h,c
  4030  00233C  C041  FFDF         	movff	xtoa@c,indf2
  4031                           
  4032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4033  002340  0633               	decf	xtoa@p,f,c
  4034  002342  A0D8               	btfss	status,0,c
  4035  002344  0634               	decf	xtoa@p+1,f,c
  4036                           
  4037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4038  002346  0635               	decf	xtoa@w,f,c
  4039  002348  A0D8               	btfss	status,0,c
  4040  00234A  0636               	decf	xtoa@w+1,f,c
  4041                           
  4042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4043  00234C  C037  F027         	movff	xtoa@n,??_xtoa
  4044  002350  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4045  002354  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4046  002358  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4047  00235C  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4048  002360  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4049  002364  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4050  002368  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4051  00236C  0E05               	movlw	5
  4052  00236E  D009               	goto	u3890
  4053  002370                     u3895:
  4054  002370  90D8               	bcf	status,0,c
  4055  002372  322E               	rrcf	??_xtoa+7,f,c
  4056  002374  322D               	rrcf	??_xtoa+6,f,c
  4057  002376  322C               	rrcf	??_xtoa+5,f,c
  4058  002378  322B               	rrcf	??_xtoa+4,f,c
  4059  00237A  322A               	rrcf	??_xtoa+3,f,c
  4060  00237C  3229               	rrcf	??_xtoa+2,f,c
  4061  00237E  3228               	rrcf	??_xtoa+1,f,c
  4062  002380  3227               	rrcf	??_xtoa,f,c
  4063  002382                     u3890:
  4064  002382  2EE8               	decfsz	wreg,f,c
  4065  002384  D7F5               	goto	u3895
  4066  002386  C027  F037         	movff	??_xtoa,xtoa@n
  4067  00238A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4068  00238E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4069  002392  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4070  002396  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4071  00239A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4072  00239E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4073  0023A2  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4074  0023A6                     l3828:
  4075                           
  4076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4077  0023A6  BE40               	btfsc	xtoa@i+1,7,c
  4078  0023A8  D021               	goto	u3940
  4079  0023AA  5040               	movf	xtoa@i+1,w,c
  4080  0023AC  E104               	bnz	u3900
  4081  0023AE  0E02               	movlw	2
  4082  0023B0  5C3F               	subwf	xtoa@i,w,c
  4083  0023B2  A0D8               	btfss	status,0,c
  4084  0023B4  D01B               	goto	u3940
  4085  0023B6                     u3900:
  4086  0023B6  5037               	movf	xtoa@n,w,c
  4087  0023B8  1038               	iorwf	xtoa@n+1,w,c
  4088  0023BA  1039               	iorwf	xtoa@n+2,w,c
  4089  0023BC  103A               	iorwf	xtoa@n+3,w,c
  4090  0023BE  103B               	iorwf	xtoa@n+4,w,c
  4091  0023C0  103C               	iorwf	xtoa@n+5,w,c
  4092  0023C2  103D               	iorwf	xtoa@n+6,w,c
  4093  0023C4  103E               	iorwf	xtoa@n+7,w,c
  4094  0023C6  A4D8               	btfss	status,2,c
  4095  0023C8  D75B               	goto	l3798
  4096  0023CA  BE34               	btfsc	xtoa@p+1,7,c
  4097  0023CC  D005               	goto	u3920
  4098  0023CE  5034               	movf	xtoa@p+1,w,c
  4099  0023D0  E102               	bnz	u3921
  4100  0023D2  0433               	decf	xtoa@p,w,c
  4101  0023D4  B0D8               	btfsc	status,0,c
  4102  0023D6                     u3921:
  4103  0023D6  D754               	goto	l3798
  4104  0023D8                     u3920:
  4105  0023D8  BE36               	btfsc	xtoa@w+1,7,c
  4106  0023DA  D008               	goto	u3940
  4107  0023DC  5036               	movf	xtoa@w+1,w,c
  4108  0023DE  E103               	bnz	u3930
  4109  0023E0  0435               	decf	xtoa@w,w,c
  4110  0023E2  A0D8               	btfss	status,0,c
  4111  0023E4  D003               	goto	u3940
  4112  0023E6                     u3930:
  4113  0023E6  0100               	movlb	0	; () banked
  4114  0023E8  B391               	btfsc	_flags& (0+255),1,b
  4115  0023EA  D74A               	goto	l3798
  4116  0023EC                     u3940:
  4117                           
  4118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4119  0023EC  0100               	movlb	0	; () banked
  4120  0023EE  A991               	btfss	_flags& (0+255),4,b
  4121  0023F0  D016               	goto	l3844
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4125  0023F2  063F               	decf	xtoa@i,f,c
  4126  0023F4  A0D8               	btfss	status,0,c
  4127  0023F6  0640               	decf	xtoa@i+1,f,c
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4131  0023F8  0E98               	movlw	low _dbuf
  4132  0023FA  243F               	addwf	xtoa@i,w,c
  4133  0023FC  6ED9               	movwf	fsr2l,c
  4134  0023FE  0E00               	movlw	high _dbuf
  4135  002400  2040               	addwfc	xtoa@i+1,w,c
  4136  002402  6EDA               	movwf	fsr2h,c
  4137  002404  C026  FFDF         	movff	xtoa@x,indf2
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4141  002408  063F               	decf	xtoa@i,f,c
  4142  00240A  A0D8               	btfss	status,0,c
  4143  00240C  0640               	decf	xtoa@i+1,f,c
  4144                           
  4145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4146  00240E  0E98               	movlw	low _dbuf
  4147  002410  243F               	addwf	xtoa@i,w,c
  4148  002412  6ED9               	movwf	fsr2l,c
  4149  002414  0E00               	movlw	high _dbuf
  4150  002416  2040               	addwfc	xtoa@i+1,w,c
  4151  002418  6EDA               	movwf	fsr2h,c
  4152  00241A  0E30               	movlw	48
  4153  00241C  6EDF               	movwf	indf2,c
  4154  00241E                     l3844:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4158  00241E  C01C  F011         	movff	xtoa@fp,pad@fp
  4159  002422  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4160  002426  0E98               	movlw	low _dbuf
  4161  002428  243F               	addwf	xtoa@i,w,c
  4162  00242A  6E13               	movwf	pad@buf,c
  4163  00242C  0E00               	movlw	high _dbuf
  4164  00242E  2040               	addwfc	xtoa@i+1,w,c
  4165  002430  6E14               	movwf	pad@buf+1,c
  4166  002432  C035  F015         	movff	xtoa@w,pad@p
  4167  002436  C036  F016         	movff	xtoa@w+1,pad@p+1
  4168  00243A  EC7C  F019         	call	_pad	;wreg free
  4169  00243E  C011  F01C         	movff	?_pad,?_xtoa
  4170  002442  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4171  002446  0012               	return		;funcret
  4172  002448                     __end_of_xtoa:
  4173                           	opt callstack 0
  4174                           
  4175 ;; *************** function _toupper *****************
  4176 ;; Defined at:
  4177 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  c               2    6[COMRAM] int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    6[COMRAM] int 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4191 ;;      Params:         2       0       0       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0       0       0
  4193 ;;      Temps:          4       0       0       0       0       0       0
  4194 ;;      Totals:         8       0       0       0       0       0       0
  4195 ;;Total ram usage:        8 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    3
  4198 ;; This function calls:
  4199 ;;		_islower
  4200 ;; This function is called by:
  4201 ;;		_xtoa
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text8
  4206  003612                     __ptext8:
  4207                           	opt callstack 0
  4208  003612                     _toupper:
  4209                           	opt callstack 21
  4210                           
  4211                           ;incstack = 0
  4212  003612  0E9F               	movlw	159
  4213  003614  6E09               	movwf	??_toupper& (0+255),c
  4214  003616  0EFF               	movlw	255
  4215  003618  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4216  00361A  C007  F00B         	movff	toupper@c,??_toupper+2
  4217  00361E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4218  003622  5009               	movf	??_toupper,w,c
  4219  003624  260B               	addwf	??_toupper+2,f,c
  4220  003626  500A               	movf	??_toupper+1,w,c
  4221  003628  220C               	addwfc	??_toupper+3,f,c
  4222  00362A  500C               	movf	??_toupper+3,w,c
  4223  00362C  E106               	bnz	u3100
  4224  00362E  0E1A               	movlw	26
  4225  003630  5C0B               	subwf	??_toupper+2,w,c
  4226  003632  B0D8               	btfsc	status,0,c
  4227  003634  D002               	goto	u3100
  4228  003636  0E01               	movlw	1
  4229  003638  D001               	goto	u3110
  4230  00363A                     u3100:
  4231  00363A  0E00               	movlw	0
  4232  00363C                     u3110:
  4233  00363C  6E0D               	movwf	_toupper$1853,c
  4234  00363E  6A0E               	clrf	_toupper$1853+1,c
  4235  003640  500D               	movf	_toupper$1853,w,c
  4236  003642  100E               	iorwf	_toupper$1853+1,w,c
  4237  003644  B4D8               	btfsc	status,2,c
  4238  003646  D005               	goto	l1356
  4239  003648  0E5F               	movlw	95
  4240  00364A  1407               	andwf	toupper@c,w,c
  4241  00364C  6E07               	movwf	?_toupper,c
  4242  00364E  6A08               	clrf	?_toupper+1,c
  4243  003650  0012               	return	
  4244  003652                     l1356:
  4245  003652  C007  F007         	movff	toupper@c,?_toupper
  4246  003656  C008  F008         	movff	toupper@c+1,?_toupper+1
  4247  00365A  0012               	return		;funcret
  4248  00365C                     __end_of_toupper:
  4249                           	opt callstack 0
  4250                           
  4251 ;; *************** function _islower *****************
  4252 ;; Defined at:
  4253 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  c               2    0[COMRAM] int 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    0[COMRAM] int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4267 ;;      Params:         2       0       0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0
  4269 ;;      Temps:          4       0       0       0       0       0       0
  4270 ;;      Totals:         6       0       0       0       0       0       0
  4271 ;;Total ram usage:        6 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    2
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_toupper
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text9
  4282  0038B0                     __ptext9:
  4283                           	opt callstack 0
  4284  0038B0                     _islower:
  4285                           	opt callstack 21
  4286                           
  4287                           ;incstack = 0
  4288  0038B0  0E9F               	movlw	159
  4289  0038B2  6E03               	movwf	??_islower& (0+255),c
  4290  0038B4  0EFF               	movlw	255
  4291  0038B6  6E04               	movwf	(??_islower+1)& (0+255),c
  4292  0038B8  C001  F005         	movff	islower@c,??_islower+2
  4293  0038BC  C002  F006         	movff	islower@c+1,??_islower+3
  4294  0038C0  5003               	movf	??_islower,w,c
  4295  0038C2  2605               	addwf	??_islower+2,f,c
  4296  0038C4  5004               	movf	??_islower+1,w,c
  4297  0038C6  2206               	addwfc	??_islower+3,f,c
  4298  0038C8  5006               	movf	??_islower+3,w,c
  4299  0038CA  E106               	bnz	u2990
  4300  0038CC  0E1A               	movlw	26
  4301  0038CE  5C05               	subwf	??_islower+2,w,c
  4302  0038D0  B0D8               	btfsc	status,0,c
  4303  0038D2  D002               	goto	u2990
  4304  0038D4  0E01               	movlw	1
  4305  0038D6  D001               	goto	u3000
  4306  0038D8                     u2990:
  4307  0038D8  0E00               	movlw	0
  4308  0038DA                     u3000:
  4309  0038DA  6E01               	movwf	?_islower,c
  4310  0038DC  6A02               	clrf	?_islower+1,c
  4311  0038DE  0012               	return		;funcret
  4312  0038E0                     __end_of_islower:
  4313                           	opt callstack 0
  4314                           
  4315 ;; *************** function _isupper *****************
  4316 ;; Defined at:
  4317 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  c               2    0[COMRAM] int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2    0[COMRAM] int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4331 ;;      Params:         2       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0
  4334 ;;      Totals:         6       0       0       0       0       0       0
  4335 ;;Total ram usage:        6 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    2
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_xtoa
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text10
  4346  0038E0                     __ptext10:
  4347                           	opt callstack 0
  4348  0038E0                     _isupper:
  4349                           	opt callstack 22
  4350                           
  4351                           ;incstack = 0
  4352  0038E0  0EBF               	movlw	191
  4353  0038E2  6E03               	movwf	??_isupper& (0+255),c
  4354  0038E4  0EFF               	movlw	255
  4355  0038E6  6E04               	movwf	(??_isupper+1)& (0+255),c
  4356  0038E8  C001  F005         	movff	isupper@c,??_isupper+2
  4357  0038EC  C002  F006         	movff	isupper@c+1,??_isupper+3
  4358  0038F0  5003               	movf	??_isupper,w,c
  4359  0038F2  2605               	addwf	??_isupper+2,f,c
  4360  0038F4  5004               	movf	??_isupper+1,w,c
  4361  0038F6  2206               	addwfc	??_isupper+3,f,c
  4362  0038F8  5006               	movf	??_isupper+3,w,c
  4363  0038FA  E106               	bnz	u3060
  4364  0038FC  0E1A               	movlw	26
  4365  0038FE  5C05               	subwf	??_isupper+2,w,c
  4366  003900  B0D8               	btfsc	status,0,c
  4367  003902  D002               	goto	u3060
  4368  003904  0E01               	movlw	1
  4369  003906  D001               	goto	u3070
  4370  003908                     u3060:
  4371  003908  0E00               	movlw	0
  4372  00390A                     u3070:
  4373  00390A  6E01               	movwf	?_isupper,c
  4374  00390C  6A02               	clrf	?_isupper+1,c
  4375  00390E  0012               	return		;funcret
  4376  003910                     __end_of_isupper:
  4377                           	opt callstack 0
  4378                           
  4379 ;; *************** function _isalpha *****************
  4380 ;; Defined at:
  4381 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  c               2    0[COMRAM] int 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    0[COMRAM] int 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         2       0       0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0
  4397 ;;      Temps:          4       0       0       0       0       0       0
  4398 ;;      Totals:         6       0       0       0       0       0       0
  4399 ;;Total ram usage:        6 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    2
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_xtoa
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text11
  4410  003816                     __ptext11:
  4411                           	opt callstack 0
  4412  003816                     _isalpha:
  4413                           	opt callstack 22
  4414                           
  4415                           ;incstack = 0
  4416  003816  0E9F               	movlw	159
  4417  003818  6E03               	movwf	??_isalpha& (0+255),c
  4418  00381A  0EFF               	movlw	255
  4419  00381C  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4420  00381E  0E20               	movlw	32
  4421  003820  1001               	iorwf	isalpha@c,w,c
  4422  003822  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4423  003824  0E00               	movlw	0
  4424  003826  1002               	iorwf	isalpha@c+1,w,c
  4425  003828  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4426  00382A  5003               	movf	??_isalpha,w,c
  4427  00382C  2605               	addwf	??_isalpha+2,f,c
  4428  00382E  5004               	movf	??_isalpha+1,w,c
  4429  003830  2206               	addwfc	??_isalpha+3,f,c
  4430  003832  5006               	movf	??_isalpha+3,w,c
  4431  003834  E106               	bnz	u3080
  4432  003836  0E1A               	movlw	26
  4433  003838  5C05               	subwf	??_isalpha+2,w,c
  4434  00383A  B0D8               	btfsc	status,0,c
  4435  00383C  D002               	goto	u3080
  4436  00383E  0E01               	movlw	1
  4437  003840  D001               	goto	u3090
  4438  003842                     u3080:
  4439  003842  0E00               	movlw	0
  4440  003844                     u3090:
  4441  003844  6E01               	movwf	?_isalpha,c
  4442  003846  6A02               	clrf	?_isalpha+1,c
  4443  003848  0012               	return		;funcret
  4444  00384A                     __end_of_isalpha:
  4445                           	opt callstack 0
  4446                           
  4447 ;; *************** function _utoa *****************
  4448 ;; Defined at:
  4449 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4452 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4453 ;;  d               8   29[COMRAM] unsigned long long 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  n               8   49[COMRAM] unsigned long long 
  4456 ;;  i               2   57[COMRAM] int 
  4457 ;;  w               2   47[COMRAM] int 
  4458 ;;  p               2   45[COMRAM] int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2   27[COMRAM] int 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4468 ;;      Params:        10       0       0       0       0       0       0
  4469 ;;      Locals:        14       0       0       0       0       0       0
  4470 ;;      Temps:          8       0       0       0       0       0       0
  4471 ;;      Totals:        32       0       0       0       0       0       0
  4472 ;;Total ram usage:       32 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    6
  4475 ;; This function calls:
  4476 ;;		___lodiv
  4477 ;;		___lomod
  4478 ;;		_pad
  4479 ;; This function is called by:
  4480 ;;		_vfpfcnvrt
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text12
  4485  002448                     __ptext12:
  4486                           	opt callstack 0
  4487  002448                     _utoa:
  4488                           	opt callstack 19
  4489                           
  4490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4491                           
  4492                           ;incstack = 0
  4493  002448  0100               	movlb	0	; () banked
  4494  00244A  AF90               	btfss	(_prec+1)& (0+255),7,b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4498  00244C  9391               	bcf	_flags& (0+255),1,b
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4502  00244E  BF90               	btfsc	(_prec+1)& (0+255),7,b
  4503  002450  D005               	goto	u3730
  4504  002452  5190               	movf	(_prec+1)& (0+255),w,b
  4505  002454  E108               	bnz	l406
  4506  002456  058F               	decf	_prec& (0+255),w,b
  4507  002458  B0D8               	btfsc	status,0,c
  4508  00245A  D005               	goto	l406
  4509  00245C                     u3730:
  4510                           
  4511                           ; BSR set to: 0
  4512  00245C  0E00               	movlw	0
  4513  00245E  6E2F               	movwf	utoa@p+1,c
  4514  002460  0E01               	movlw	1
  4515  002462  6E2E               	movwf	utoa@p,c
  4516  002464  D004               	goto	l408
  4517  002466                     l406:
  4518                           
  4519                           ; BSR set to: 0
  4520  002466  C08F  F02E         	movff	_prec,utoa@p
  4521  00246A  C090  F02F         	movff	_prec+1,utoa@p+1
  4522  00246E                     l408:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4526  00246E  C08D  F030         	movff	_width,utoa@w
  4527  002472  C08E  F031         	movff	_width+1,utoa@w+1
  4528                           
  4529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4530  002476  C01E  F032         	movff	utoa@d,utoa@n
  4531  00247A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4532  00247E  C020  F034         	movff	utoa@d+2,utoa@n+2
  4533  002482  C021  F035         	movff	utoa@d+3,utoa@n+3
  4534  002486  C022  F036         	movff	utoa@d+4,utoa@n+4
  4535  00248A  C023  F037         	movff	utoa@d+5,utoa@n+5
  4536  00248E  C024  F038         	movff	utoa@d+6,utoa@n+6
  4537  002492  C025  F039         	movff	utoa@d+7,utoa@n+7
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4541  002496  0E00               	movlw	0
  4542  002498  6E3B               	movwf	utoa@i+1,c
  4543  00249A  0E1F               	movlw	31
  4544  00249C  6E3A               	movwf	utoa@i,c
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4548  00249E  0E00               	movlw	0
  4549  0024A0  6FB7               	movwf	(_dbuf+31)& (0+255),b
  4550                           
  4551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4552  0024A2  D076               	goto	l3768
  4553  0024A4                     l3758:
  4554                           
  4555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4556  0024A4  063A               	decf	utoa@i,f,c
  4557  0024A6  A0D8               	btfss	status,0,c
  4558  0024A8  063B               	decf	utoa@i+1,f,c
  4559                           
  4560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4561  0024AA  0E98               	movlw	low _dbuf
  4562  0024AC  243A               	addwf	utoa@i,w,c
  4563  0024AE  6ED9               	movwf	fsr2l,c
  4564  0024B0  0E00               	movlw	high _dbuf
  4565  0024B2  203B               	addwfc	utoa@i+1,w,c
  4566  0024B4  6EDA               	movwf	fsr2h,c
  4567  0024B6  C032  F001         	movff	utoa@n,___lomod@dividend
  4568  0024BA  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4569  0024BE  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4570  0024C2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4571  0024C6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4572  0024CA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4573  0024CE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4574  0024D2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4575  0024D6  0E0A               	movlw	10
  4576  0024D8  6E09               	movwf	___lomod@divisor,c
  4577  0024DA  0E00               	movlw	0
  4578  0024DC  6E0A               	movwf	___lomod@divisor+1,c
  4579  0024DE  0E00               	movlw	0
  4580  0024E0  6E0B               	movwf	___lomod@divisor+2,c
  4581  0024E2  0E00               	movlw	0
  4582  0024E4  6E0C               	movwf	___lomod@divisor+3,c
  4583  0024E6  0E00               	movlw	0
  4584  0024E8  6E0D               	movwf	___lomod@divisor+4,c
  4585  0024EA  0E00               	movlw	0
  4586  0024EC  6E0E               	movwf	___lomod@divisor+5,c
  4587  0024EE  0E00               	movlw	0
  4588  0024F0  6E0F               	movwf	___lomod@divisor+6,c
  4589  0024F2  0E00               	movlw	0
  4590  0024F4  6E10               	movwf	___lomod@divisor+7,c
  4591  0024F6  EC80  F018         	call	___lomod	;wreg free
  4592  0024FA  C001  F026         	movff	?___lomod,??_utoa
  4593  0024FE  C002  F027         	movff	?___lomod+1,??_utoa+1
  4594  002502  C003  F028         	movff	?___lomod+2,??_utoa+2
  4595  002506  C004  F029         	movff	?___lomod+3,??_utoa+3
  4596  00250A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4597  00250E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4598  002512  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4599  002516  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4600  00251A  5026               	movf	??_utoa,w,c
  4601  00251C  0F30               	addlw	48
  4602  00251E  6EDF               	movwf	indf2,c
  4603                           
  4604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4605  002520  062E               	decf	utoa@p,f,c
  4606  002522  A0D8               	btfss	status,0,c
  4607  002524  062F               	decf	utoa@p+1,f,c
  4608                           
  4609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4610  002526  0630               	decf	utoa@w,f,c
  4611  002528  A0D8               	btfss	status,0,c
  4612  00252A  0631               	decf	utoa@w+1,f,c
  4613                           
  4614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4615  00252C  C032  F001         	movff	utoa@n,___lodiv@dividend
  4616  002530  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4617  002534  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4618  002538  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4619  00253C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4620  002540  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4621  002544  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4622  002548  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4623  00254C  0E0A               	movlw	10
  4624  00254E  6E09               	movwf	___lodiv@divisor,c
  4625  002550  0E00               	movlw	0
  4626  002552  6E0A               	movwf	___lodiv@divisor+1,c
  4627  002554  0E00               	movlw	0
  4628  002556  6E0B               	movwf	___lodiv@divisor+2,c
  4629  002558  0E00               	movlw	0
  4630  00255A  6E0C               	movwf	___lodiv@divisor+3,c
  4631  00255C  0E00               	movlw	0
  4632  00255E  6E0D               	movwf	___lodiv@divisor+4,c
  4633  002560  0E00               	movlw	0
  4634  002562  6E0E               	movwf	___lodiv@divisor+5,c
  4635  002564  0E00               	movlw	0
  4636  002566  6E0F               	movwf	___lodiv@divisor+6,c
  4637  002568  0E00               	movlw	0
  4638  00256A  6E10               	movwf	___lodiv@divisor+7,c
  4639  00256C  ECBC  F017         	call	___lodiv	;wreg free
  4640  002570  C001  F032         	movff	?___lodiv,utoa@n
  4641  002574  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4642  002578  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4643  00257C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4644  002580  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4645  002584  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4646  002588  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4647  00258C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4648  002590                     l3768:
  4649                           
  4650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4651  002590  503A               	movf	utoa@i,w,c
  4652  002592  103B               	iorwf	utoa@i+1,w,c
  4653  002594  B4D8               	btfsc	status,2,c
  4654  002596  D01B               	goto	u3780
  4655  002598  5032               	movf	utoa@n,w,c
  4656  00259A  1033               	iorwf	utoa@n+1,w,c
  4657  00259C  1034               	iorwf	utoa@n+2,w,c
  4658  00259E  1035               	iorwf	utoa@n+3,w,c
  4659  0025A0  1036               	iorwf	utoa@n+4,w,c
  4660  0025A2  1037               	iorwf	utoa@n+5,w,c
  4661  0025A4  1038               	iorwf	utoa@n+6,w,c
  4662  0025A6  1039               	iorwf	utoa@n+7,w,c
  4663  0025A8  A4D8               	btfss	status,2,c
  4664  0025AA  D77C               	goto	l3758
  4665  0025AC  BE2F               	btfsc	utoa@p+1,7,c
  4666  0025AE  D005               	goto	u3760
  4667  0025B0  502F               	movf	utoa@p+1,w,c
  4668  0025B2  E102               	bnz	u3761
  4669  0025B4  042E               	decf	utoa@p,w,c
  4670  0025B6  B0D8               	btfsc	status,0,c
  4671  0025B8                     u3761:
  4672  0025B8  D775               	goto	l3758
  4673  0025BA                     u3760:
  4674  0025BA  BE31               	btfsc	utoa@w+1,7,c
  4675  0025BC  D008               	goto	u3780
  4676  0025BE  5031               	movf	utoa@w+1,w,c
  4677  0025C0  E103               	bnz	u3770
  4678  0025C2  0430               	decf	utoa@w,w,c
  4679  0025C4  A0D8               	btfss	status,0,c
  4680  0025C6  D003               	goto	u3780
  4681  0025C8                     u3770:
  4682  0025C8  0100               	movlb	0	; () banked
  4683  0025CA  B391               	btfsc	_flags& (0+255),1,b
  4684  0025CC  D76B               	goto	l3758
  4685  0025CE                     u3780:
  4686                           
  4687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4688  0025CE  C01C  F011         	movff	utoa@fp,pad@fp
  4689  0025D2  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4690  0025D6  0E98               	movlw	low _dbuf
  4691  0025D8  243A               	addwf	utoa@i,w,c
  4692  0025DA  6E13               	movwf	pad@buf,c
  4693  0025DC  0E00               	movlw	high _dbuf
  4694  0025DE  203B               	addwfc	utoa@i+1,w,c
  4695  0025E0  6E14               	movwf	pad@buf+1,c
  4696  0025E2  C030  F015         	movff	utoa@w,pad@p
  4697  0025E6  C031  F016         	movff	utoa@w+1,pad@p+1
  4698  0025EA  EC7C  F019         	call	_pad	;wreg free
  4699  0025EE  C011  F01C         	movff	?_pad,?_utoa
  4700  0025F2  C012  F01D         	movff	?_pad+1,?_utoa+1
  4701  0025F6  0012               	return		;funcret
  4702  0025F8                     __end_of_utoa:
  4703                           	opt callstack 0
  4704                           
  4705 ;; *************** function ___lomod *****************
  4706 ;; Defined at:
  4707 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  dividend        8    0[COMRAM] unsigned long long 
  4710 ;;  divisor         8    8[COMRAM] unsigned long long 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  counter         1   16[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  8    0[COMRAM] unsigned long long 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4722 ;;      Params:        16       0       0       0       0       0       0
  4723 ;;      Locals:         1       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0
  4725 ;;      Totals:        17       0       0       0       0       0       0
  4726 ;;Total ram usage:       17 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    2
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_utoa
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text13
  4737  003100                     __ptext13:
  4738                           	opt callstack 0
  4739  003100                     ___lomod:
  4740                           	opt callstack 22
  4741                           
  4742                           ;incstack = 0
  4743  003100  5009               	movf	___lomod@divisor,w,c
  4744  003102  100A               	iorwf	___lomod@divisor+1,w,c
  4745  003104  100B               	iorwf	___lomod@divisor+2,w,c
  4746  003106  100C               	iorwf	___lomod@divisor+3,w,c
  4747  003108  100D               	iorwf	___lomod@divisor+4,w,c
  4748  00310A  100E               	iorwf	___lomod@divisor+5,w,c
  4749  00310C  100F               	iorwf	___lomod@divisor+6,w,c
  4750  00310E  1010               	iorwf	___lomod@divisor+7,w,c
  4751  003110  B4D8               	btfsc	status,2,c
  4752  003112  D03C               	goto	l988
  4753  003114  0E01               	movlw	1
  4754  003116  6E11               	movwf	___lomod@counter,c
  4755  003118  D00A               	goto	l3558
  4756  00311A                     l3556:
  4757  00311A  90D8               	bcf	status,0,c
  4758  00311C  3609               	rlcf	___lomod@divisor,f,c
  4759  00311E  360A               	rlcf	___lomod@divisor+1,f,c
  4760  003120  360B               	rlcf	___lomod@divisor+2,f,c
  4761  003122  360C               	rlcf	___lomod@divisor+3,f,c
  4762  003124  360D               	rlcf	___lomod@divisor+4,f,c
  4763  003126  360E               	rlcf	___lomod@divisor+5,f,c
  4764  003128  360F               	rlcf	___lomod@divisor+6,f,c
  4765  00312A  3610               	rlcf	___lomod@divisor+7,f,c
  4766  00312C  2A11               	incf	___lomod@counter,f,c
  4767  00312E                     l3558:
  4768  00312E  AE10               	btfss	___lomod@divisor+7,7,c
  4769  003130  D7F4               	goto	l3556
  4770  003132                     u3330:
  4771  003132  5009               	movf	___lomod@divisor,w,c
  4772  003134  5C01               	subwf	___lomod@dividend,w,c
  4773  003136  500A               	movf	___lomod@divisor+1,w,c
  4774  003138  5802               	subwfb	___lomod@dividend+1,w,c
  4775  00313A  500B               	movf	___lomod@divisor+2,w,c
  4776  00313C  5803               	subwfb	___lomod@dividend+2,w,c
  4777  00313E  500C               	movf	___lomod@divisor+3,w,c
  4778  003140  5804               	subwfb	___lomod@dividend+3,w,c
  4779  003142  500D               	movf	___lomod@divisor+4,w,c
  4780  003144  5805               	subwfb	___lomod@dividend+4,w,c
  4781  003146  500E               	movf	___lomod@divisor+5,w,c
  4782  003148  5806               	subwfb	___lomod@dividend+5,w,c
  4783  00314A  500F               	movf	___lomod@divisor+6,w,c
  4784  00314C  5807               	subwfb	___lomod@dividend+6,w,c
  4785  00314E  5010               	movf	___lomod@divisor+7,w,c
  4786  003150  5808               	subwfb	___lomod@dividend+7,w,c
  4787  003152  A0D8               	btfss	status,0,c
  4788  003154  D010               	goto	l3564
  4789  003156  5009               	movf	___lomod@divisor,w,c
  4790  003158  5E01               	subwf	___lomod@dividend,f,c
  4791  00315A  500A               	movf	___lomod@divisor+1,w,c
  4792  00315C  5A02               	subwfb	___lomod@dividend+1,f,c
  4793  00315E  500B               	movf	___lomod@divisor+2,w,c
  4794  003160  5A03               	subwfb	___lomod@dividend+2,f,c
  4795  003162  500C               	movf	___lomod@divisor+3,w,c
  4796  003164  5A04               	subwfb	___lomod@dividend+3,f,c
  4797  003166  500D               	movf	___lomod@divisor+4,w,c
  4798  003168  5A05               	subwfb	___lomod@dividend+4,f,c
  4799  00316A  500E               	movf	___lomod@divisor+5,w,c
  4800  00316C  5A06               	subwfb	___lomod@dividend+5,f,c
  4801  00316E  500F               	movf	___lomod@divisor+6,w,c
  4802  003170  5A07               	subwfb	___lomod@dividend+6,f,c
  4803  003172  5010               	movf	___lomod@divisor+7,w,c
  4804  003174  5A08               	subwfb	___lomod@dividend+7,f,c
  4805  003176                     l3564:
  4806  003176  90D8               	bcf	status,0,c
  4807  003178  3210               	rrcf	___lomod@divisor+7,f,c
  4808  00317A  320F               	rrcf	___lomod@divisor+6,f,c
  4809  00317C  320E               	rrcf	___lomod@divisor+5,f,c
  4810  00317E  320D               	rrcf	___lomod@divisor+4,f,c
  4811  003180  320C               	rrcf	___lomod@divisor+3,f,c
  4812  003182  320B               	rrcf	___lomod@divisor+2,f,c
  4813  003184  320A               	rrcf	___lomod@divisor+1,f,c
  4814  003186  3209               	rrcf	___lomod@divisor,f,c
  4815  003188  2E11               	decfsz	___lomod@counter,f,c
  4816  00318A  D7D3               	goto	u3330
  4817  00318C                     l988:
  4818  00318C  C001  F001         	movff	___lomod@dividend,?___lomod
  4819  003190  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4820  003194  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4821  003198  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4822  00319C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4823  0031A0  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4824  0031A4  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4825  0031A8  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4826  0031AC  0012               	return		;funcret
  4827  0031AE                     __end_of___lomod:
  4828                           	opt callstack 0
  4829                           
  4830 ;; *************** function ___lodiv *****************
  4831 ;; Defined at:
  4832 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  dividend        8    0[COMRAM] unsigned long long 
  4835 ;;  divisor         8    8[COMRAM] unsigned long long 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  quotient        8   16[COMRAM] unsigned long long 
  4838 ;;  counter         1   24[COMRAM] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  8    0[COMRAM] unsigned long long 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4848 ;;      Params:        16       0       0       0       0       0       0
  4849 ;;      Locals:         9       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0
  4851 ;;      Totals:        25       0       0       0       0       0       0
  4852 ;;Total ram usage:       25 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    2
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_utoa
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text14
  4863  002F78                     __ptext14:
  4864                           	opt callstack 0
  4865  002F78                     ___lodiv:
  4866                           	opt callstack 22
  4867                           
  4868                           ;incstack = 0
  4869  002F78  EE20  F011         	lfsr	2,___lodiv@quotient
  4870  002F7C  0E07               	movlw	7
  4871  002F7E                     u3281:
  4872  002F7E  6ADE               	clrf	postinc2,c
  4873  002F80  06E8               	decf	wreg,f,c
  4874  002F82  E2FD               	bc	u3281
  4875  002F84  5009               	movf	___lodiv@divisor,w,c
  4876  002F86  100A               	iorwf	___lodiv@divisor+1,w,c
  4877  002F88  100B               	iorwf	___lodiv@divisor+2,w,c
  4878  002F8A  100C               	iorwf	___lodiv@divisor+3,w,c
  4879  002F8C  100D               	iorwf	___lodiv@divisor+4,w,c
  4880  002F8E  100E               	iorwf	___lodiv@divisor+5,w,c
  4881  002F90  100F               	iorwf	___lodiv@divisor+6,w,c
  4882  002F92  1010               	iorwf	___lodiv@divisor+7,w,c
  4883  002F94  B4D8               	btfsc	status,2,c
  4884  002F96  D046               	goto	l978
  4885  002F98  0E01               	movlw	1
  4886  002F9A  6E19               	movwf	___lodiv@counter,c
  4887  002F9C  D00A               	goto	l3538
  4888  002F9E                     l3536:
  4889  002F9E  90D8               	bcf	status,0,c
  4890  002FA0  3609               	rlcf	___lodiv@divisor,f,c
  4891  002FA2  360A               	rlcf	___lodiv@divisor+1,f,c
  4892  002FA4  360B               	rlcf	___lodiv@divisor+2,f,c
  4893  002FA6  360C               	rlcf	___lodiv@divisor+3,f,c
  4894  002FA8  360D               	rlcf	___lodiv@divisor+4,f,c
  4895  002FAA  360E               	rlcf	___lodiv@divisor+5,f,c
  4896  002FAC  360F               	rlcf	___lodiv@divisor+6,f,c
  4897  002FAE  3610               	rlcf	___lodiv@divisor+7,f,c
  4898  002FB0  2A19               	incf	___lodiv@counter,f,c
  4899  002FB2                     l3538:
  4900  002FB2  AE10               	btfss	___lodiv@divisor+7,7,c
  4901  002FB4  D7F4               	goto	l3536
  4902  002FB6                     u3300:
  4903  002FB6  90D8               	bcf	status,0,c
  4904  002FB8  3611               	rlcf	___lodiv@quotient,f,c
  4905  002FBA  3612               	rlcf	___lodiv@quotient+1,f,c
  4906  002FBC  3613               	rlcf	___lodiv@quotient+2,f,c
  4907  002FBE  3614               	rlcf	___lodiv@quotient+3,f,c
  4908  002FC0  3615               	rlcf	___lodiv@quotient+4,f,c
  4909  002FC2  3616               	rlcf	___lodiv@quotient+5,f,c
  4910  002FC4  3617               	rlcf	___lodiv@quotient+6,f,c
  4911  002FC6  3618               	rlcf	___lodiv@quotient+7,f,c
  4912  002FC8  5009               	movf	___lodiv@divisor,w,c
  4913  002FCA  5C01               	subwf	___lodiv@dividend,w,c
  4914  002FCC  500A               	movf	___lodiv@divisor+1,w,c
  4915  002FCE  5802               	subwfb	___lodiv@dividend+1,w,c
  4916  002FD0  500B               	movf	___lodiv@divisor+2,w,c
  4917  002FD2  5803               	subwfb	___lodiv@dividend+2,w,c
  4918  002FD4  500C               	movf	___lodiv@divisor+3,w,c
  4919  002FD6  5804               	subwfb	___lodiv@dividend+3,w,c
  4920  002FD8  500D               	movf	___lodiv@divisor+4,w,c
  4921  002FDA  5805               	subwfb	___lodiv@dividend+4,w,c
  4922  002FDC  500E               	movf	___lodiv@divisor+5,w,c
  4923  002FDE  5806               	subwfb	___lodiv@dividend+5,w,c
  4924  002FE0  500F               	movf	___lodiv@divisor+6,w,c
  4925  002FE2  5807               	subwfb	___lodiv@dividend+6,w,c
  4926  002FE4  5010               	movf	___lodiv@divisor+7,w,c
  4927  002FE6  5808               	subwfb	___lodiv@dividend+7,w,c
  4928  002FE8  A0D8               	btfss	status,0,c
  4929  002FEA  D011               	goto	l3548
  4930  002FEC  5009               	movf	___lodiv@divisor,w,c
  4931  002FEE  5E01               	subwf	___lodiv@dividend,f,c
  4932  002FF0  500A               	movf	___lodiv@divisor+1,w,c
  4933  002FF2  5A02               	subwfb	___lodiv@dividend+1,f,c
  4934  002FF4  500B               	movf	___lodiv@divisor+2,w,c
  4935  002FF6  5A03               	subwfb	___lodiv@dividend+2,f,c
  4936  002FF8  500C               	movf	___lodiv@divisor+3,w,c
  4937  002FFA  5A04               	subwfb	___lodiv@dividend+3,f,c
  4938  002FFC  500D               	movf	___lodiv@divisor+4,w,c
  4939  002FFE  5A05               	subwfb	___lodiv@dividend+4,f,c
  4940  003000  500E               	movf	___lodiv@divisor+5,w,c
  4941  003002  5A06               	subwfb	___lodiv@dividend+5,f,c
  4942  003004  500F               	movf	___lodiv@divisor+6,w,c
  4943  003006  5A07               	subwfb	___lodiv@dividend+6,f,c
  4944  003008  5010               	movf	___lodiv@divisor+7,w,c
  4945  00300A  5A08               	subwfb	___lodiv@dividend+7,f,c
  4946  00300C  8011               	bsf	___lodiv@quotient,0,c
  4947  00300E                     l3548:
  4948  00300E  90D8               	bcf	status,0,c
  4949  003010  3210               	rrcf	___lodiv@divisor+7,f,c
  4950  003012  320F               	rrcf	___lodiv@divisor+6,f,c
  4951  003014  320E               	rrcf	___lodiv@divisor+5,f,c
  4952  003016  320D               	rrcf	___lodiv@divisor+4,f,c
  4953  003018  320C               	rrcf	___lodiv@divisor+3,f,c
  4954  00301A  320B               	rrcf	___lodiv@divisor+2,f,c
  4955  00301C  320A               	rrcf	___lodiv@divisor+1,f,c
  4956  00301E  3209               	rrcf	___lodiv@divisor,f,c
  4957  003020  2E19               	decfsz	___lodiv@counter,f,c
  4958  003022  D7C9               	goto	u3300
  4959  003024                     l978:
  4960  003024  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4961  003028  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4962  00302C  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4963  003030  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4964  003034  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4965  003038  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4966  00303C  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4967  003040  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4968  003044  0012               	return		;funcret
  4969  003046                     __end_of___lodiv:
  4970                           	opt callstack 0
  4971                           
  4972 ;; *************** function _strncmp *****************
  4973 ;; Defined at:
  4974 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4977 ;;		 -> STR_2(3), STR_1(4), 
  4978 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4979 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4980 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4981 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4982 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4983 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4984 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4985 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4986 ;;  n               2    4[COMRAM] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4989 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4990 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4991 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4992 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4993 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4994 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4995 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4996 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4997 ;;		 -> STR_2(3), STR_1(4), 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  2    0[COMRAM] int 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5007 ;;      Params:         6       0       0       0       0       0       0
  5008 ;;      Locals:         4       0       0       0       0       0       0
  5009 ;;      Temps:          1       0       0       0       0       0       0
  5010 ;;      Totals:        11       0       0       0       0       0       0
  5011 ;;Total ram usage:       11 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    2
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_vfpfcnvrt
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text15
  5022  0031AE                     __ptext15:
  5023                           	opt callstack 0
  5024  0031AE                     _strncmp:
  5025                           	opt callstack 23
  5026                           
  5027                           ;incstack = 0
  5028  0031AE  C001  F008         	movff	strncmp@_l,strncmp@l
  5029  0031B2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5030  0031B6  C003  F00A         	movff	strncmp@_r,strncmp@r
  5031  0031BA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5032  0031BE  0605               	decf	strncmp@n,f,c
  5033  0031C0  A0D8               	btfss	status,0,c
  5034  0031C2  0606               	decf	strncmp@n+1,f,c
  5035  0031C4  2805               	incf	strncmp@n,w,c
  5036  0031C6  E10F               	bnz	l3898
  5037  0031C8  2806               	incf	strncmp@n+1,w,c
  5038  0031CA  A4D8               	btfss	status,2,c
  5039  0031CC  D00C               	goto	l3898
  5040  0031CE  0E00               	movlw	0
  5041  0031D0  6E02               	movwf	?_strncmp+1,c
  5042  0031D2  0E00               	movlw	0
  5043  0031D4  6E01               	movwf	?_strncmp,c
  5044  0031D6  0012               	return	
  5045  0031D8                     l3896:
  5046  0031D8  4A08               	infsnz	strncmp@l,f,c
  5047  0031DA  2A09               	incf	strncmp@l+1,f,c
  5048  0031DC  4A0A               	infsnz	strncmp@r,f,c
  5049  0031DE  2A0B               	incf	strncmp@r+1,f,c
  5050  0031E0  0605               	decf	strncmp@n,f,c
  5051  0031E2  A0D8               	btfss	status,0,c
  5052  0031E4  0606               	decf	strncmp@n+1,f,c
  5053  0031E6                     l3898:
  5054  0031E6  C008  FFF6         	movff	strncmp@l,tblptrl
  5055  0031EA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5056  0031EE                     	if	0	;tblptru may be non-zero
  5057  0031EE                     	endif
  5058  0031EE                     	if	0	;tblptru may be non-zero
  5059  0031EE                     	endif
  5060  0031EE  0008               	tblrd		*
  5061  0031F0  50F5               	movf	tablat,w,c
  5062  0031F2  0900               	iorlw	0
  5063  0031F4  B4D8               	btfsc	status,2,c
  5064  0031F6  D01D               	goto	u4070
  5065  0031F8  C00A  FFF6         	movff	strncmp@r,tblptrl
  5066  0031FC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5067  003200                     	if	0	;tblptru may be non-zero
  5068  003200                     	endif
  5069  003200                     	if	0	;tblptru may be non-zero
  5070  003200                     	endif
  5071  003200  0008               	tblrd		*
  5072  003202  50F5               	movf	tablat,w,c
  5073  003204  0900               	iorlw	0
  5074  003206  B4D8               	btfsc	status,2,c
  5075  003208  D014               	goto	u4070
  5076  00320A  5005               	movf	strncmp@n,w,c
  5077  00320C  1006               	iorwf	strncmp@n+1,w,c
  5078  00320E  B4D8               	btfsc	status,2,c
  5079  003210  D010               	goto	u4070
  5080  003212  C008  FFF6         	movff	strncmp@l,tblptrl
  5081  003216  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5082  00321A                     	if	0	;tblptru may be non-zero
  5083  00321A                     	endif
  5084  00321A                     	if	0	;tblptru may be non-zero
  5085  00321A                     	endif
  5086  00321A  0008               	tblrd		*
  5087  00321C  CFF5 F007          	movff	tablat,??_strncmp
  5088  003220  C00A  FFF6         	movff	strncmp@r,tblptrl
  5089  003224  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5090  003228                     	if	0	;tblptru may be non-zero
  5091  003228                     	endif
  5092  003228                     	if	0	;tblptru may be non-zero
  5093  003228                     	endif
  5094  003228  0008               	tblrd		*
  5095  00322A  50F5               	movf	tablat,w,c
  5096  00322C  1807               	xorwf	??_strncmp,w,c
  5097  00322E  B4D8               	btfsc	status,2,c
  5098  003230  D7D3               	goto	l3896
  5099  003232                     u4070:
  5100  003232  C008  FFF6         	movff	strncmp@l,tblptrl
  5101  003236  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5102  00323A                     	if	0	;tblptru may be non-zero
  5103  00323A                     	endif
  5104  00323A                     	if	0	;tblptru may be non-zero
  5105  00323A                     	endif
  5106  00323A  0008               	tblrd		*
  5107  00323C  CFF5 F007          	movff	tablat,??_strncmp
  5108  003240  C00A  FFF6         	movff	strncmp@r,tblptrl
  5109  003244  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5110  003248                     	if	0	;tblptru may be non-zero
  5111  003248                     	endif
  5112  003248                     	if	0	;tblptru may be non-zero
  5113  003248                     	endif
  5114  003248  0008               	tblrd		*
  5115  00324A  50F5               	movf	tablat,w,c
  5116  00324C  5C07               	subwf	??_strncmp,w,c
  5117  00324E  6E01               	movwf	?_strncmp,c
  5118  003250  6A02               	clrf	?_strncmp+1,c
  5119  003252  A0D8               	btfss	status,0,c
  5120  003254  0602               	decf	?_strncmp+1,f,c
  5121  003256  0012               	return		;funcret
  5122  003258                     __end_of_strncmp:
  5123                           	opt callstack 0
  5124                           
  5125 ;; *************** function _stoa *****************
  5126 ;; Defined at:
  5127 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5130 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5131 ;;  s               2   11[COMRAM] PTR unsigned char 
  5132 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5135 ;;  l               2   29[COMRAM] int 
  5136 ;;  p               2   27[COMRAM] int 
  5137 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5138 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5139 ;;  w               2   23[COMRAM] int 
  5140 ;;  i               2   21[COMRAM] int 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2    9[COMRAM] int 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5150 ;;      Params:         4       0       0       0       0       0       0
  5151 ;;      Locals:        17       0       0       0       0       0       0
  5152 ;;      Temps:          1       0       0       0       0       0       0
  5153 ;;      Totals:        22       0       0       0       0       0       0
  5154 ;;Total ram usage:       22 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    4
  5157 ;; This function calls:
  5158 ;;		_fputc
  5159 ;;		_strlen
  5160 ;; This function is called by:
  5161 ;;		_vfpfcnvrt
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text16
  5166  002B42                     __ptext16:
  5167                           	opt callstack 0
  5168  002B42                     _stoa:
  5169                           	opt callstack 21
  5170                           
  5171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5172                           
  5173                           ;incstack = 0
  5174  002B42  EE20  F0EA         	lfsr	2,stoa@F1152
  5175  002B46  EE10  F00F         	lfsr	1,stoa@nuls
  5176  002B4A  0E06               	movlw	6
  5177  002B4C                     u3631:
  5178  002B4C  CFDB FFE3          	movff	plusw2,plusw1
  5179  002B50  06E8               	decf	wreg,f,c
  5180  002B52  E2FC               	bc	u3631
  5181                           
  5182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5183  002B54  C00C  F01A         	movff	stoa@s,stoa@cp
  5184  002B58  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5185                           
  5186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5187  002B5C  501A               	movf	stoa@cp,w,c
  5188  002B5E  101B               	iorwf	stoa@cp+1,w,c
  5189  002B60  A4D8               	btfss	status,2,c
  5190  002B62  D004               	goto	l3712
  5191                           
  5192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5193  002B64  0E0F               	movlw	low stoa@nuls
  5194  002B66  6E1A               	movwf	stoa@cp,c
  5195  002B68  0E00               	movlw	high stoa@nuls
  5196  002B6A  6E1B               	movwf	stoa@cp+1,c
  5197  002B6C                     l3712:
  5198                           
  5199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5200  002B6C  C01A  F001         	movff	stoa@cp,strlen@s
  5201  002B70  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5202  002B74  ECB8  F01C         	call	_strlen	;wreg free
  5203  002B78  C001  F01E         	movff	?_strlen,stoa@l
  5204  002B7C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5205                           
  5206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5207  002B80  C08F  F01C         	movff	_prec,stoa@p
  5208  002B84  C090  F01D         	movff	_prec+1,stoa@p+1
  5209                           
  5210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5211  002B88  BE1D               	btfsc	stoa@p+1,7,c
  5212  002B8A  D00E               	goto	l387
  5213  002B8C  501E               	movf	stoa@l,w,c
  5214  002B8E  5C1C               	subwf	stoa@p,w,c
  5215  002B90  501D               	movf	stoa@p+1,w,c
  5216  002B92  0A80               	xorlw	128
  5217  002B94  6E0E               	movwf	??_stoa& (0+255),c
  5218  002B96  501F               	movf	stoa@l+1,w,c
  5219  002B98  0A80               	xorlw	128
  5220  002B9A  580E               	subwfb	??_stoa& (0+255),w,c
  5221  002B9C  B0D8               	btfsc	status,0,c
  5222  002B9E  D004               	goto	l387
  5223  002BA0  C01C  F01E         	movff	stoa@p,stoa@l
  5224  002BA4  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5225  002BA8                     l387:
  5226                           
  5227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5228  002BA8  C01E  F01C         	movff	stoa@l,stoa@p
  5229  002BAC  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5230                           
  5231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5232  002BB0  C08D  F018         	movff	_width,stoa@w
  5233  002BB4  C08E  F019         	movff	_width+1,stoa@w+1
  5234                           
  5235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5236  002BB8  0100               	movlb	0	; () banked
  5237  002BBA  A191               	btfss	_flags& (0+255),0,b
  5238  002BBC  D00D               	goto	l3726
  5239  002BBE  D016               	goto	u3680
  5240  002BC0                     l3722:
  5241                           
  5242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5243  002BC0  0E00               	movlw	0
  5244  002BC2  6E02               	movwf	fputc@c+1,c
  5245  002BC4  0E20               	movlw	32
  5246  002BC6  6E01               	movwf	fputc@c,c
  5247  002BC8  C00A  F003         	movff	stoa@fp,fputc@fp
  5248  002BCC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5249  002BD0  EC2C  F019         	call	_fputc	;wreg free
  5250                           
  5251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5252  002BD4  4A1E               	infsnz	stoa@l,f,c
  5253  002BD6  2A1F               	incf	stoa@l+1,f,c
  5254  002BD8                     l3726:
  5255                           
  5256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5257  002BD8  5018               	movf	stoa@w,w,c
  5258  002BDA  5C1E               	subwf	stoa@l,w,c
  5259  002BDC  501F               	movf	stoa@l+1,w,c
  5260  002BDE  0A80               	xorlw	128
  5261  002BE0  6E0E               	movwf	??_stoa& (0+255),c
  5262  002BE2  5019               	movf	stoa@w+1,w,c
  5263  002BE4  0A80               	xorlw	128
  5264  002BE6  580E               	subwfb	??_stoa& (0+255),w,c
  5265  002BE8  A0D8               	btfss	status,0,c
  5266  002BEA  D7EA               	goto	l3722
  5267  002BEC                     u3680:
  5268                           
  5269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5270  002BEC  0E00               	movlw	0
  5271  002BEE  6E17               	movwf	stoa@i+1,c
  5272  002BF0  0E00               	movlw	0
  5273  002BF2  6E16               	movwf	stoa@i,c
  5274                           
  5275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5276  002BF4  D013               	goto	l3736
  5277  002BF6                     l3730:
  5278                           
  5279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5280  002BF6  C01A  FFD9         	movff	stoa@cp,fsr2l
  5281  002BFA  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5282  002BFE  50DF               	movf	indf2,w,c
  5283  002C00  6E0E               	movwf	??_stoa& (0+255),c
  5284  002C02  500E               	movf	??_stoa,w,c
  5285  002C04  6E01               	movwf	fputc@c,c
  5286  002C06  6A02               	clrf	fputc@c+1,c
  5287  002C08  C00A  F003         	movff	stoa@fp,fputc@fp
  5288  002C0C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5289  002C10  EC2C  F019         	call	_fputc	;wreg free
  5290                           
  5291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5292  002C14  4A1A               	infsnz	stoa@cp,f,c
  5293  002C16  2A1B               	incf	stoa@cp+1,f,c
  5294                           
  5295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5296  002C18  4A16               	infsnz	stoa@i,f,c
  5297  002C1A  2A17               	incf	stoa@i+1,f,c
  5298  002C1C                     l3736:
  5299                           
  5300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5301  002C1C  501C               	movf	stoa@p,w,c
  5302  002C1E  5C16               	subwf	stoa@i,w,c
  5303  002C20  5017               	movf	stoa@i+1,w,c
  5304  002C22  0A80               	xorlw	128
  5305  002C24  6E0E               	movwf	??_stoa& (0+255),c
  5306  002C26  501D               	movf	stoa@p+1,w,c
  5307  002C28  0A80               	xorlw	128
  5308  002C2A  580E               	subwfb	??_stoa& (0+255),w,c
  5309  002C2C  A0D8               	btfss	status,0,c
  5310  002C2E  D7E3               	goto	l3730
  5311                           
  5312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5313  002C30  0100               	movlb	0	; () banked
  5314  002C32  B191               	btfsc	_flags& (0+255),0,b
  5315  002C34  D00D               	goto	l3744
  5316  002C36  D016               	goto	u3710
  5317  002C38                     l3740:
  5318                           
  5319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5320  002C38  0E00               	movlw	0
  5321  002C3A  6E02               	movwf	fputc@c+1,c
  5322  002C3C  0E20               	movlw	32
  5323  002C3E  6E01               	movwf	fputc@c,c
  5324  002C40  C00A  F003         	movff	stoa@fp,fputc@fp
  5325  002C44  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5326  002C48  EC2C  F019         	call	_fputc	;wreg free
  5327                           
  5328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5329  002C4C  4A1E               	infsnz	stoa@l,f,c
  5330  002C4E  2A1F               	incf	stoa@l+1,f,c
  5331  002C50                     l3744:
  5332                           
  5333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5334  002C50  5018               	movf	stoa@w,w,c
  5335  002C52  5C1E               	subwf	stoa@l,w,c
  5336  002C54  501F               	movf	stoa@l+1,w,c
  5337  002C56  0A80               	xorlw	128
  5338  002C58  6E0E               	movwf	??_stoa& (0+255),c
  5339  002C5A  5019               	movf	stoa@w+1,w,c
  5340  002C5C  0A80               	xorlw	128
  5341  002C5E  580E               	subwfb	??_stoa& (0+255),w,c
  5342  002C60  A0D8               	btfss	status,0,c
  5343  002C62  D7EA               	goto	l3740
  5344  002C64                     u3710:
  5345                           
  5346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5347                           
  5348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5349  002C64  C01E  F00A         	movff	stoa@l,?_stoa
  5350  002C68  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5351  002C6C  0012               	return		;funcret
  5352  002C6E                     __end_of_stoa:
  5353                           	opt callstack 0
  5354                           
  5355 ;; *************** function _otoa *****************
  5356 ;; Defined at:
  5357 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5360 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5361 ;;  d               8   29[COMRAM] unsigned long long 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  n               8   51[COMRAM] unsigned long long 
  5364 ;;  i               2   59[COMRAM] int 
  5365 ;;  w               2   49[COMRAM] int 
  5366 ;;  t               2   47[COMRAM] int 
  5367 ;;  p               2   45[COMRAM] int 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2   27[COMRAM] int 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5377 ;;      Params:        10       0       0       0       0       0       0
  5378 ;;      Locals:        16       0       0       0       0       0       0
  5379 ;;      Temps:          8       0       0       0       0       0       0
  5380 ;;      Totals:        34       0       0       0       0       0       0
  5381 ;;Total ram usage:       34 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    6
  5384 ;; This function calls:
  5385 ;;		_pad
  5386 ;; This function is called by:
  5387 ;;		_vfpfcnvrt
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text17
  5392  0025F8                     __ptext17:
  5393                           	opt callstack 0
  5394  0025F8                     _otoa:
  5395                           	opt callstack 19
  5396                           
  5397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5398                           
  5399                           ;incstack = 0
  5400  0025F8  0100               	movlb	0	; () banked
  5401  0025FA  AF90               	btfss	(_prec+1)& (0+255),7,b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5405  0025FC  9391               	bcf	_flags& (0+255),1,b
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5409  0025FE  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5410  002600  D005               	goto	u3540
  5411  002602  5190               	movf	(_prec+1)& (0+255),w,b
  5412  002604  E108               	bnz	l367
  5413  002606  058F               	decf	_prec& (0+255),w,b
  5414  002608  B0D8               	btfsc	status,0,c
  5415  00260A  D005               	goto	l367
  5416  00260C                     u3540:
  5417                           
  5418                           ; BSR set to: 0
  5419  00260C  0E00               	movlw	0
  5420  00260E  6E2F               	movwf	otoa@p+1,c
  5421  002610  0E01               	movlw	1
  5422  002612  6E2E               	movwf	otoa@p,c
  5423  002614  D004               	goto	l369
  5424  002616                     l367:
  5425                           
  5426                           ; BSR set to: 0
  5427  002616  C08F  F02E         	movff	_prec,otoa@p
  5428  00261A  C090  F02F         	movff	_prec+1,otoa@p+1
  5429  00261E                     l369:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5433  00261E  C08D  F032         	movff	_width,otoa@w
  5434  002622  C08E  F033         	movff	_width+1,otoa@w+1
  5435                           
  5436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5437  002626  C01E  F034         	movff	otoa@d,otoa@n
  5438  00262A  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5439  00262E  C020  F036         	movff	otoa@d+2,otoa@n+2
  5440  002632  C021  F037         	movff	otoa@d+3,otoa@n+3
  5441  002636  C022  F038         	movff	otoa@d+4,otoa@n+4
  5442  00263A  C023  F039         	movff	otoa@d+5,otoa@n+5
  5443  00263E  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5444  002642  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5448  002646  0E00               	movlw	0
  5449  002648  6E3D               	movwf	otoa@i+1,c
  5450  00264A  0E1F               	movlw	31
  5451  00264C  6E3C               	movwf	otoa@i,c
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5455  00264E  0E00               	movlw	0
  5456  002650  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5460  002652  0E00               	movlw	0
  5461  002654  6E31               	movwf	otoa@t+1,c
  5462  002656  0E00               	movlw	0
  5463  002658  6E30               	movwf	otoa@t,c
  5464                           
  5465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5466  00265A  D043               	goto	l3682
  5467  00265C                     l3670:
  5468                           
  5469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5470  00265C  063C               	decf	otoa@i,f,c
  5471  00265E  A0D8               	btfss	status,0,c
  5472  002660  063D               	decf	otoa@i+1,f,c
  5473                           
  5474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5475  002662  0E07               	movlw	7
  5476  002664  1434               	andwf	otoa@n,w,c
  5477  002666  6E30               	movwf	otoa@t,c
  5478  002668  6A31               	clrf	otoa@t+1,c
  5479                           
  5480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5481  00266A  0E98               	movlw	low _dbuf
  5482  00266C  243C               	addwf	otoa@i,w,c
  5483  00266E  6ED9               	movwf	fsr2l,c
  5484  002670  0E00               	movlw	high _dbuf
  5485  002672  203D               	addwfc	otoa@i+1,w,c
  5486  002674  6EDA               	movwf	fsr2h,c
  5487  002676  5030               	movf	otoa@t,w,c
  5488  002678  0F30               	addlw	48
  5489  00267A  6EDF               	movwf	indf2,c
  5490                           
  5491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5492  00267C  062E               	decf	otoa@p,f,c
  5493  00267E  A0D8               	btfss	status,0,c
  5494  002680  062F               	decf	otoa@p+1,f,c
  5495                           
  5496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5497  002682  0632               	decf	otoa@w,f,c
  5498  002684  A0D8               	btfss	status,0,c
  5499  002686  0633               	decf	otoa@w+1,f,c
  5500                           
  5501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5502  002688  C034  F026         	movff	otoa@n,??_otoa
  5503  00268C  C035  F027         	movff	otoa@n+1,??_otoa+1
  5504  002690  C036  F028         	movff	otoa@n+2,??_otoa+2
  5505  002694  C037  F029         	movff	otoa@n+3,??_otoa+3
  5506  002698  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5507  00269C  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5508  0026A0  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5509  0026A4  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5510  0026A8  0E04               	movlw	4
  5511  0026AA  D009               	goto	u3550
  5512  0026AC                     u3555:
  5513  0026AC  90D8               	bcf	status,0,c
  5514  0026AE  322D               	rrcf	??_otoa+7,f,c
  5515  0026B0  322C               	rrcf	??_otoa+6,f,c
  5516  0026B2  322B               	rrcf	??_otoa+5,f,c
  5517  0026B4  322A               	rrcf	??_otoa+4,f,c
  5518  0026B6  3229               	rrcf	??_otoa+3,f,c
  5519  0026B8  3228               	rrcf	??_otoa+2,f,c
  5520  0026BA  3227               	rrcf	??_otoa+1,f,c
  5521  0026BC  3226               	rrcf	??_otoa,f,c
  5522  0026BE                     u3550:
  5523  0026BE  2EE8               	decfsz	wreg,f,c
  5524  0026C0  D7F5               	goto	u3555
  5525  0026C2  C026  F034         	movff	??_otoa,otoa@n
  5526  0026C6  C027  F035         	movff	??_otoa+1,otoa@n+1
  5527  0026CA  C028  F036         	movff	??_otoa+2,otoa@n+2
  5528  0026CE  C029  F037         	movff	??_otoa+3,otoa@n+3
  5529  0026D2  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5530  0026D6  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5531  0026DA  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5532  0026DE  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5533  0026E2                     l3682:
  5534                           
  5535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5536  0026E2  BE3D               	btfsc	otoa@i+1,7,c
  5537  0026E4  D020               	goto	u3600
  5538  0026E6  503D               	movf	otoa@i+1,w,c
  5539  0026E8  E103               	bnz	u3560
  5540  0026EA  043C               	decf	otoa@i,w,c
  5541  0026EC  A0D8               	btfss	status,0,c
  5542  0026EE  D01B               	goto	u3600
  5543  0026F0                     u3560:
  5544  0026F0  5034               	movf	otoa@n,w,c
  5545  0026F2  1035               	iorwf	otoa@n+1,w,c
  5546  0026F4  1036               	iorwf	otoa@n+2,w,c
  5547  0026F6  1037               	iorwf	otoa@n+3,w,c
  5548  0026F8  1038               	iorwf	otoa@n+4,w,c
  5549  0026FA  1039               	iorwf	otoa@n+5,w,c
  5550  0026FC  103A               	iorwf	otoa@n+6,w,c
  5551  0026FE  103B               	iorwf	otoa@n+7,w,c
  5552  002700  A4D8               	btfss	status,2,c
  5553  002702  D7AC               	goto	l3670
  5554  002704  BE2F               	btfsc	otoa@p+1,7,c
  5555  002706  D005               	goto	u3580
  5556  002708  502F               	movf	otoa@p+1,w,c
  5557  00270A  E1A8               	bnz	l3670
  5558  00270C  042E               	decf	otoa@p,w,c
  5559  00270E  B0D8               	btfsc	status,0,c
  5560  002710  D7A5               	goto	l3670
  5561  002712                     u3580:
  5562  002712  BE33               	btfsc	otoa@w+1,7,c
  5563  002714  D008               	goto	u3600
  5564  002716  5033               	movf	otoa@w+1,w,c
  5565  002718  E103               	bnz	u3590
  5566  00271A  0432               	decf	otoa@w,w,c
  5567  00271C  A0D8               	btfss	status,0,c
  5568  00271E  D003               	goto	u3600
  5569  002720                     u3590:
  5570  002720  0100               	movlb	0	; () banked
  5571  002722  B391               	btfsc	_flags& (0+255),1,b
  5572  002724  D79B               	goto	l3670
  5573  002726                     u3600:
  5574                           
  5575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5576  002726  0100               	movlb	0	; () banked
  5577  002728  A991               	btfss	_flags& (0+255),4,b
  5578  00272A  D012               	goto	l3700
  5579                           
  5580                           ; BSR set to: 0
  5581  00272C  5030               	movf	otoa@t,w,c
  5582  00272E  1031               	iorwf	otoa@t+1,w,c
  5583  002730  B4D8               	btfsc	status,2,c
  5584  002732  D00E               	goto	l3700
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5588  002734  063C               	decf	otoa@i,f,c
  5589  002736  A0D8               	btfss	status,0,c
  5590  002738  063D               	decf	otoa@i+1,f,c
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5594  00273A  0E98               	movlw	low _dbuf
  5595  00273C  243C               	addwf	otoa@i,w,c
  5596  00273E  6ED9               	movwf	fsr2l,c
  5597  002740  0E00               	movlw	high _dbuf
  5598  002742  203D               	addwfc	otoa@i+1,w,c
  5599  002744  6EDA               	movwf	fsr2h,c
  5600  002746  0E30               	movlw	48
  5601  002748  6EDF               	movwf	indf2,c
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5605  00274A  0632               	decf	otoa@w,f,c
  5606  00274C  A0D8               	btfss	status,0,c
  5607  00274E  0633               	decf	otoa@w+1,f,c
  5608  002750                     l3700:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5612  002750  C01C  F011         	movff	otoa@fp,pad@fp
  5613  002754  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5614  002758  0E98               	movlw	low _dbuf
  5615  00275A  243C               	addwf	otoa@i,w,c
  5616  00275C  6E13               	movwf	pad@buf,c
  5617  00275E  0E00               	movlw	high _dbuf
  5618  002760  203D               	addwfc	otoa@i+1,w,c
  5619  002762  6E14               	movwf	pad@buf+1,c
  5620  002764  C032  F015         	movff	otoa@w,pad@p
  5621  002768  C033  F016         	movff	otoa@w+1,pad@p+1
  5622  00276C  EC7C  F019         	call	_pad	;wreg free
  5623  002770  C011  F01C         	movff	?_pad,?_otoa
  5624  002774  C012  F01D         	movff	?_pad+1,?_otoa+1
  5625  002778  0012               	return		;funcret
  5626  00277A                     __end_of_otoa:
  5627                           	opt callstack 0
  5628                           
  5629 ;; *************** function _dtoa *****************
  5630 ;; Defined at:
  5631 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5634 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5635 ;;  d               8   29[COMRAM] long long 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  n               8   53[COMRAM] long long 
  5638 ;;  i               2   61[COMRAM] int 
  5639 ;;  s               2   51[COMRAM] int 
  5640 ;;  w               2   49[COMRAM] int 
  5641 ;;  p               2   47[COMRAM] int 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2   27[COMRAM] int 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5651 ;;      Params:        10       0       0       0       0       0       0
  5652 ;;      Locals:        18       0       0       0       0       0       0
  5653 ;;      Temps:          8       0       0       0       0       0       0
  5654 ;;      Totals:        36       0       0       0       0       0       0
  5655 ;;Total ram usage:       36 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    6
  5658 ;; This function calls:
  5659 ;;		___aodiv
  5660 ;;		___aomod
  5661 ;;		_abs
  5662 ;;		_pad
  5663 ;; This function is called by:
  5664 ;;		_vfpfcnvrt
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text18
  5669  001FD2                     __ptext18:
  5670                           	opt callstack 0
  5671  001FD2                     _dtoa:
  5672                           	opt callstack 19
  5673                           
  5674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5675                           
  5676                           ;incstack = 0
  5677  001FD2  C01E  F036         	movff	dtoa@d,dtoa@n
  5678  001FD6  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5679  001FDA  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5680  001FDE  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5681  001FE2  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5682  001FE6  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5683  001FEA  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5684  001FEE  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5685                           
  5686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5687  001FF2  AE3D               	btfss	dtoa@n+7,7,c
  5688  001FF4  D002               	goto	u3380
  5689  001FF6  0E01               	movlw	1
  5690  001FF8  D001               	goto	u3390
  5691  001FFA                     u3380:
  5692  001FFA  0E00               	movlw	0
  5693  001FFC                     u3390:
  5694  001FFC  6E34               	movwf	dtoa@s,c
  5695  001FFE  6A35               	clrf	dtoa@s+1,c
  5696                           
  5697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5698  002000  5034               	movf	dtoa@s,w,c
  5699  002002  1035               	iorwf	dtoa@s+1,w,c
  5700  002004  B4D8               	btfsc	status,2,c
  5701  002006  D010               	goto	l3600
  5702                           
  5703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5704  002008  1E3D               	comf	dtoa@n+7,f,c
  5705  00200A  1E3C               	comf	dtoa@n+6,f,c
  5706  00200C  1E3B               	comf	dtoa@n+5,f,c
  5707  00200E  1E3A               	comf	dtoa@n+4,f,c
  5708  002010  1E39               	comf	dtoa@n+3,f,c
  5709  002012  1E38               	comf	dtoa@n+2,f,c
  5710  002014  1E37               	comf	dtoa@n+1,f,c
  5711  002016  6C36               	negf	dtoa@n,c
  5712  002018  0E00               	movlw	0
  5713  00201A  2237               	addwfc	dtoa@n+1,f,c
  5714  00201C  2238               	addwfc	dtoa@n+2,f,c
  5715  00201E  2239               	addwfc	dtoa@n+3,f,c
  5716  002020  223A               	addwfc	dtoa@n+4,f,c
  5717  002022  223B               	addwfc	dtoa@n+5,f,c
  5718  002024  223C               	addwfc	dtoa@n+6,f,c
  5719  002026  223D               	addwfc	dtoa@n+7,f,c
  5720  002028                     l3600:
  5721                           
  5722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5723  002028  0100               	movlb	0	; () banked
  5724  00202A  AF90               	btfss	(_prec+1)& (0+255),7,b
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5728  00202C  9391               	bcf	_flags& (0+255),1,b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5732  00202E  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5733  002030  D005               	goto	u3420
  5734  002032  5190               	movf	(_prec+1)& (0+255),w,b
  5735  002034  E108               	bnz	l342
  5736  002036  058F               	decf	_prec& (0+255),w,b
  5737  002038  B0D8               	btfsc	status,0,c
  5738  00203A  D005               	goto	l342
  5739  00203C                     u3420:
  5740                           
  5741                           ; BSR set to: 0
  5742  00203C  0E00               	movlw	0
  5743  00203E  6E31               	movwf	dtoa@p+1,c
  5744  002040  0E01               	movlw	1
  5745  002042  6E30               	movwf	dtoa@p,c
  5746  002044  D004               	goto	l344
  5747  002046                     l342:
  5748                           
  5749                           ; BSR set to: 0
  5750  002046  C08F  F030         	movff	_prec,dtoa@p
  5751  00204A  C090  F031         	movff	_prec+1,dtoa@p+1
  5752  00204E                     l344:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5756  00204E  C08D  F032         	movff	_width,dtoa@w
  5757  002052  C08E  F033         	movff	_width+1,dtoa@w+1
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5761  002056  5034               	movf	dtoa@s,w,c
  5762  002058  1035               	iorwf	dtoa@s+1,w,c
  5763  00205A  A4D8               	btfss	status,2,c
  5764  00205C  D002               	goto	u3440
  5765                           
  5766                           ; BSR set to: 0
  5767  00205E  A591               	btfss	_flags& (0+255),2,b
  5768  002060  D003               	goto	l3614
  5769  002062                     u3440:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5773  002062  0632               	decf	dtoa@w,f,c
  5774  002064  A0D8               	btfss	status,0,c
  5775  002066  0633               	decf	dtoa@w+1,f,c
  5776  002068                     l3614:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5780  002068  0E00               	movlw	0
  5781  00206A  6E3F               	movwf	dtoa@i+1,c
  5782  00206C  0E1F               	movlw	31
  5783  00206E  6E3E               	movwf	dtoa@i,c
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5787  002070  0E00               	movlw	0
  5788  002072  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5789                           
  5790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5791  002074  D07C               	goto	l3628
  5792  002076                     l3618:
  5793                           
  5794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5795  002076  063E               	decf	dtoa@i,f,c
  5796  002078  A0D8               	btfss	status,0,c
  5797  00207A  063F               	decf	dtoa@i+1,f,c
  5798                           
  5799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5800  00207C  0E98               	movlw	low _dbuf
  5801  00207E  243E               	addwf	dtoa@i,w,c
  5802  002080  6ED9               	movwf	fsr2l,c
  5803  002082  0E00               	movlw	high _dbuf
  5804  002084  203F               	addwfc	dtoa@i+1,w,c
  5805  002086  6EDA               	movwf	fsr2h,c
  5806  002088  C036  F001         	movff	dtoa@n,___aomod@dividend
  5807  00208C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5808  002090  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5809  002094  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5810  002098  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5811  00209C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5812  0020A0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5813  0020A4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5814  0020A8  0E0A               	movlw	10
  5815  0020AA  6E09               	movwf	___aomod@divisor,c
  5816  0020AC  0E00               	movlw	0
  5817  0020AE  6E0A               	movwf	___aomod@divisor+1,c
  5818  0020B0  0E00               	movlw	0
  5819  0020B2  6E0B               	movwf	___aomod@divisor+2,c
  5820  0020B4  0E00               	movlw	0
  5821  0020B6  6E0C               	movwf	___aomod@divisor+3,c
  5822  0020B8  0E00               	movlw	0
  5823  0020BA  6E0D               	movwf	___aomod@divisor+4,c
  5824  0020BC  0E00               	movlw	0
  5825  0020BE  6E0E               	movwf	___aomod@divisor+5,c
  5826  0020C0  0E00               	movlw	0
  5827  0020C2  6E0F               	movwf	___aomod@divisor+6,c
  5828  0020C4  0E00               	movlw	0
  5829  0020C6  6E10               	movwf	___aomod@divisor+7,c
  5830  0020C8  EC37  F016         	call	___aomod	;wreg free
  5831  0020CC  C001  F026         	movff	?___aomod,??_dtoa
  5832  0020D0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5833  0020D4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5834  0020D8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5835  0020DC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5836  0020E0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5837  0020E4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5838  0020E8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5839  0020EC  C026  F013         	movff	??_dtoa,abs@a
  5840  0020F0  C028  F014         	movff	??_dtoa+2,abs@a+1
  5841  0020F4  EC3F  F01C         	call	_abs	;wreg free
  5842  0020F8  5013               	movf	?_abs,w,c
  5843  0020FA  0F30               	addlw	48
  5844  0020FC  6EDF               	movwf	indf2,c
  5845                           
  5846                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5847  0020FE  0630               	decf	dtoa@p,f,c
  5848  002100  A0D8               	btfss	status,0,c
  5849  002102  0631               	decf	dtoa@p+1,f,c
  5850                           
  5851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5852  002104  0632               	decf	dtoa@w,f,c
  5853  002106  A0D8               	btfss	status,0,c
  5854  002108  0633               	decf	dtoa@w+1,f,c
  5855                           
  5856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5857  00210A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5858  00210E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5859  002112  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5860  002116  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5861  00211A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5862  00211E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5863  002122  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5864  002126  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5865  00212A  0E0A               	movlw	10
  5866  00212C  6E09               	movwf	___aodiv@divisor,c
  5867  00212E  0E00               	movlw	0
  5868  002130  6E0A               	movwf	___aodiv@divisor+1,c
  5869  002132  0E00               	movlw	0
  5870  002134  6E0B               	movwf	___aodiv@divisor+2,c
  5871  002136  0E00               	movlw	0
  5872  002138  6E0C               	movwf	___aodiv@divisor+3,c
  5873  00213A  0E00               	movlw	0
  5874  00213C  6E0D               	movwf	___aodiv@divisor+4,c
  5875  00213E  0E00               	movlw	0
  5876  002140  6E0E               	movwf	___aodiv@divisor+5,c
  5877  002142  0E00               	movlw	0
  5878  002144  6E0F               	movwf	___aodiv@divisor+6,c
  5879  002146  0E00               	movlw	0
  5880  002148  6E10               	movwf	___aodiv@divisor+7,c
  5881  00214A  ECBD  F013         	call	___aodiv	;wreg free
  5882  00214E  C001  F036         	movff	?___aodiv,dtoa@n
  5883  002152  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5884  002156  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5885  00215A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5886  00215E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5887  002162  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5888  002166  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5889  00216A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5890  00216E                     l3628:
  5891                           
  5892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5893  00216E  BE3F               	btfsc	dtoa@i+1,7,c
  5894  002170  D020               	goto	u3490
  5895  002172  503F               	movf	dtoa@i+1,w,c
  5896  002174  E103               	bnz	u3450
  5897  002176  043E               	decf	dtoa@i,w,c
  5898  002178  A0D8               	btfss	status,0,c
  5899  00217A  D01B               	goto	u3490
  5900  00217C                     u3450:
  5901  00217C  5036               	movf	dtoa@n,w,c
  5902  00217E  1037               	iorwf	dtoa@n+1,w,c
  5903  002180  1038               	iorwf	dtoa@n+2,w,c
  5904  002182  1039               	iorwf	dtoa@n+3,w,c
  5905  002184  103A               	iorwf	dtoa@n+4,w,c
  5906  002186  103B               	iorwf	dtoa@n+5,w,c
  5907  002188  103C               	iorwf	dtoa@n+6,w,c
  5908  00218A  103D               	iorwf	dtoa@n+7,w,c
  5909  00218C  A4D8               	btfss	status,2,c
  5910  00218E  D773               	goto	l3618
  5911  002190  BE31               	btfsc	dtoa@p+1,7,c
  5912  002192  D005               	goto	u3470
  5913  002194  5031               	movf	dtoa@p+1,w,c
  5914  002196  E102               	bnz	u3471
  5915  002198  0430               	decf	dtoa@p,w,c
  5916  00219A  B0D8               	btfsc	status,0,c
  5917  00219C                     u3471:
  5918  00219C  D76C               	goto	l3618
  5919  00219E                     u3470:
  5920  00219E  BE33               	btfsc	dtoa@w+1,7,c
  5921  0021A0  D008               	goto	u3490
  5922  0021A2  5033               	movf	dtoa@w+1,w,c
  5923  0021A4  E103               	bnz	u3480
  5924  0021A6  0432               	decf	dtoa@w,w,c
  5925  0021A8  A0D8               	btfss	status,0,c
  5926  0021AA  D003               	goto	u3490
  5927  0021AC                     u3480:
  5928  0021AC  0100               	movlb	0	; () banked
  5929  0021AE  B391               	btfsc	_flags& (0+255),1,b
  5930  0021B0  D762               	goto	l3618
  5931  0021B2                     u3490:
  5932                           
  5933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5934  0021B2  5034               	movf	dtoa@s,w,c
  5935  0021B4  1035               	iorwf	dtoa@s+1,w,c
  5936  0021B6  A4D8               	btfss	status,2,c
  5937  0021B8  D003               	goto	u3510
  5938  0021BA  0100               	movlb	0	; () banked
  5939  0021BC  A591               	btfss	_flags& (0+255),2,b
  5940  0021BE  D017               	goto	l3652
  5941  0021C0                     u3510:
  5942                           
  5943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5944  0021C0  063E               	decf	dtoa@i,f,c
  5945  0021C2  A0D8               	btfss	status,0,c
  5946  0021C4  063F               	decf	dtoa@i+1,f,c
  5947                           
  5948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5949  0021C6  5034               	movf	dtoa@s,w,c
  5950  0021C8  1035               	iorwf	dtoa@s+1,w,c
  5951  0021CA  A4D8               	btfss	status,2,c
  5952  0021CC  D004               	goto	l3648
  5953  0021CE  0E00               	movlw	0
  5954  0021D0  6E2F               	movwf	_dtoa$1050+1,c
  5955  0021D2  0E2B               	movlw	43
  5956  0021D4  D003               	goto	L18
  5957  0021D6                     l3648:
  5958  0021D6  0E00               	movlw	0
  5959  0021D8  6E2F               	movwf	_dtoa$1050+1,c
  5960  0021DA  0E2D               	movlw	45
  5961  0021DC                     L18:
  5962  0021DC  6E2E               	movwf	_dtoa$1050,c
  5963  0021DE  0E98               	movlw	low _dbuf
  5964  0021E0  243E               	addwf	dtoa@i,w,c
  5965  0021E2  6ED9               	movwf	fsr2l,c
  5966  0021E4  0E00               	movlw	high _dbuf
  5967  0021E6  203F               	addwfc	dtoa@i+1,w,c
  5968  0021E8  6EDA               	movwf	fsr2h,c
  5969  0021EA  C02E  FFDF         	movff	_dtoa$1050,indf2
  5970  0021EE                     l3652:
  5971                           
  5972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5973  0021EE  C01C  F011         	movff	dtoa@fp,pad@fp
  5974  0021F2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5975  0021F6  0E98               	movlw	low _dbuf
  5976  0021F8  243E               	addwf	dtoa@i,w,c
  5977  0021FA  6E13               	movwf	pad@buf,c
  5978  0021FC  0E00               	movlw	high _dbuf
  5979  0021FE  203F               	addwfc	dtoa@i+1,w,c
  5980  002200  6E14               	movwf	pad@buf+1,c
  5981  002202  C032  F015         	movff	dtoa@w,pad@p
  5982  002206  C033  F016         	movff	dtoa@w+1,pad@p+1
  5983  00220A  EC7C  F019         	call	_pad	;wreg free
  5984  00220E  C011  F01C         	movff	?_pad,?_dtoa
  5985  002212  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5986  002216  0012               	return		;funcret
  5987  002218                     __end_of_dtoa:
  5988                           	opt callstack 0
  5989                           
  5990 ;; *************** function _abs *****************
  5991 ;; Defined at:
  5992 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  a               2   18[COMRAM] int 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  2   18[COMRAM] int 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6006 ;;      Params:         2       0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0
  6008 ;;      Temps:          2       0       0       0       0       0       0
  6009 ;;      Totals:         4       0       0       0       0       0       0
  6010 ;;Total ram usage:        4 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    2
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_dtoa
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text19
  6021  00387E                     __ptext19:
  6022                           	opt callstack 0
  6023  00387E                     _abs:
  6024                           	opt callstack 22
  6025                           
  6026                           ;incstack = 0
  6027  00387E  BE14               	btfsc	abs@a+1,7,c
  6028  003880  D005               	goto	u3050
  6029  003882  5014               	movf	abs@a+1,w,c
  6030  003884  E110               	bnz	l1215
  6031  003886  0413               	decf	abs@a,w,c
  6032  003888  B0D8               	btfsc	status,0,c
  6033  00388A  D00D               	goto	l1215
  6034  00388C                     u3050:
  6035  00388C  C013  F015         	movff	abs@a,??_abs
  6036  003890  C014  F016         	movff	abs@a+1,??_abs+1
  6037  003894  1E15               	comf	??_abs,f,c
  6038  003896  1E16               	comf	??_abs+1,f,c
  6039  003898  4A15               	infsnz	??_abs,f,c
  6040  00389A  2A16               	incf	??_abs+1,f,c
  6041  00389C  C015  F013         	movff	??_abs,?_abs
  6042  0038A0  C016  F014         	movff	??_abs+1,?_abs+1
  6043  0038A4  0012               	return	
  6044  0038A6                     l1215:
  6045  0038A6  C013  F013         	movff	abs@a,?_abs
  6046  0038AA  C014  F014         	movff	abs@a+1,?_abs+1
  6047  0038AE  0012               	return		;funcret
  6048  0038B0                     __end_of_abs:
  6049                           	opt callstack 0
  6050                           
  6051 ;; *************** function ___aomod *****************
  6052 ;; Defined at:
  6053 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  dividend        8    0[COMRAM] long long 
  6056 ;;  divisor         8    8[COMRAM] long long 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  sign            1   17[COMRAM] unsigned char 
  6059 ;;  counter         1   16[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  8    0[COMRAM] long long 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6069 ;;      Params:        16       0       0       0       0       0       0
  6070 ;;      Locals:         2       0       0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0
  6072 ;;      Totals:        18       0       0       0       0       0       0
  6073 ;;Total ram usage:       18 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    2
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_dtoa
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text20
  6084  002C6E                     __ptext20:
  6085                           	opt callstack 0
  6086  002C6E                     ___aomod:
  6087                           	opt callstack 22
  6088                           
  6089                           ;incstack = 0
  6090  002C6E  0E00               	movlw	0
  6091  002C70  6E12               	movwf	___aomod@sign,c
  6092  002C72  AE08               	btfss	___aomod@dividend+7,7,c
  6093  002C74  D012               	goto	l3502
  6094  002C76  1E08               	comf	___aomod@dividend+7,f,c
  6095  002C78  1E07               	comf	___aomod@dividend+6,f,c
  6096  002C7A  1E06               	comf	___aomod@dividend+5,f,c
  6097  002C7C  1E05               	comf	___aomod@dividend+4,f,c
  6098  002C7E  1E04               	comf	___aomod@dividend+3,f,c
  6099  002C80  1E03               	comf	___aomod@dividend+2,f,c
  6100  002C82  1E02               	comf	___aomod@dividend+1,f,c
  6101  002C84  6C01               	negf	___aomod@dividend,c
  6102  002C86  0E00               	movlw	0
  6103  002C88  2202               	addwfc	___aomod@dividend+1,f,c
  6104  002C8A  2203               	addwfc	___aomod@dividend+2,f,c
  6105  002C8C  2204               	addwfc	___aomod@dividend+3,f,c
  6106  002C8E  2205               	addwfc	___aomod@dividend+4,f,c
  6107  002C90  2206               	addwfc	___aomod@dividend+5,f,c
  6108  002C92  2207               	addwfc	___aomod@dividend+6,f,c
  6109  002C94  2208               	addwfc	___aomod@dividend+7,f,c
  6110  002C96  0E01               	movlw	1
  6111  002C98  6E12               	movwf	___aomod@sign,c
  6112  002C9A                     l3502:
  6113  002C9A  AE10               	btfss	___aomod@divisor+7,7,c
  6114  002C9C  D010               	goto	l3506
  6115  002C9E  1E10               	comf	___aomod@divisor+7,f,c
  6116  002CA0  1E0F               	comf	___aomod@divisor+6,f,c
  6117  002CA2  1E0E               	comf	___aomod@divisor+5,f,c
  6118  002CA4  1E0D               	comf	___aomod@divisor+4,f,c
  6119  002CA6  1E0C               	comf	___aomod@divisor+3,f,c
  6120  002CA8  1E0B               	comf	___aomod@divisor+2,f,c
  6121  002CAA  1E0A               	comf	___aomod@divisor+1,f,c
  6122  002CAC  6C09               	negf	___aomod@divisor,c
  6123  002CAE  0E00               	movlw	0
  6124  002CB0  220A               	addwfc	___aomod@divisor+1,f,c
  6125  002CB2  220B               	addwfc	___aomod@divisor+2,f,c
  6126  002CB4  220C               	addwfc	___aomod@divisor+3,f,c
  6127  002CB6  220D               	addwfc	___aomod@divisor+4,f,c
  6128  002CB8  220E               	addwfc	___aomod@divisor+5,f,c
  6129  002CBA  220F               	addwfc	___aomod@divisor+6,f,c
  6130  002CBC  2210               	addwfc	___aomod@divisor+7,f,c
  6131  002CBE                     l3506:
  6132  002CBE  5009               	movf	___aomod@divisor,w,c
  6133  002CC0  100A               	iorwf	___aomod@divisor+1,w,c
  6134  002CC2  100B               	iorwf	___aomod@divisor+2,w,c
  6135  002CC4  100C               	iorwf	___aomod@divisor+3,w,c
  6136  002CC6  100D               	iorwf	___aomod@divisor+4,w,c
  6137  002CC8  100E               	iorwf	___aomod@divisor+5,w,c
  6138  002CCA  100F               	iorwf	___aomod@divisor+6,w,c
  6139  002CCC  1010               	iorwf	___aomod@divisor+7,w,c
  6140  002CCE  B4D8               	btfsc	status,2,c
  6141  002CD0  D03C               	goto	l3522
  6142  002CD2  0E01               	movlw	1
  6143  002CD4  6E11               	movwf	___aomod@counter,c
  6144  002CD6  D00A               	goto	l3512
  6145  002CD8                     l3510:
  6146  002CD8  90D8               	bcf	status,0,c
  6147  002CDA  3609               	rlcf	___aomod@divisor,f,c
  6148  002CDC  360A               	rlcf	___aomod@divisor+1,f,c
  6149  002CDE  360B               	rlcf	___aomod@divisor+2,f,c
  6150  002CE0  360C               	rlcf	___aomod@divisor+3,f,c
  6151  002CE2  360D               	rlcf	___aomod@divisor+4,f,c
  6152  002CE4  360E               	rlcf	___aomod@divisor+5,f,c
  6153  002CE6  360F               	rlcf	___aomod@divisor+6,f,c
  6154  002CE8  3610               	rlcf	___aomod@divisor+7,f,c
  6155  002CEA  2A11               	incf	___aomod@counter,f,c
  6156  002CEC                     l3512:
  6157  002CEC  AE10               	btfss	___aomod@divisor+7,7,c
  6158  002CEE  D7F4               	goto	l3510
  6159  002CF0                     u3250:
  6160  002CF0  5009               	movf	___aomod@divisor,w,c
  6161  002CF2  5C01               	subwf	___aomod@dividend,w,c
  6162  002CF4  500A               	movf	___aomod@divisor+1,w,c
  6163  002CF6  5802               	subwfb	___aomod@dividend+1,w,c
  6164  002CF8  500B               	movf	___aomod@divisor+2,w,c
  6165  002CFA  5803               	subwfb	___aomod@dividend+2,w,c
  6166  002CFC  500C               	movf	___aomod@divisor+3,w,c
  6167  002CFE  5804               	subwfb	___aomod@dividend+3,w,c
  6168  002D00  500D               	movf	___aomod@divisor+4,w,c
  6169  002D02  5805               	subwfb	___aomod@dividend+4,w,c
  6170  002D04  500E               	movf	___aomod@divisor+5,w,c
  6171  002D06  5806               	subwfb	___aomod@dividend+5,w,c
  6172  002D08  500F               	movf	___aomod@divisor+6,w,c
  6173  002D0A  5807               	subwfb	___aomod@dividend+6,w,c
  6174  002D0C  5010               	movf	___aomod@divisor+7,w,c
  6175  002D0E  5808               	subwfb	___aomod@dividend+7,w,c
  6176  002D10  A0D8               	btfss	status,0,c
  6177  002D12  D010               	goto	l3518
  6178  002D14  5009               	movf	___aomod@divisor,w,c
  6179  002D16  5E01               	subwf	___aomod@dividend,f,c
  6180  002D18  500A               	movf	___aomod@divisor+1,w,c
  6181  002D1A  5A02               	subwfb	___aomod@dividend+1,f,c
  6182  002D1C  500B               	movf	___aomod@divisor+2,w,c
  6183  002D1E  5A03               	subwfb	___aomod@dividend+2,f,c
  6184  002D20  500C               	movf	___aomod@divisor+3,w,c
  6185  002D22  5A04               	subwfb	___aomod@dividend+3,f,c
  6186  002D24  500D               	movf	___aomod@divisor+4,w,c
  6187  002D26  5A05               	subwfb	___aomod@dividend+4,f,c
  6188  002D28  500E               	movf	___aomod@divisor+5,w,c
  6189  002D2A  5A06               	subwfb	___aomod@dividend+5,f,c
  6190  002D2C  500F               	movf	___aomod@divisor+6,w,c
  6191  002D2E  5A07               	subwfb	___aomod@dividend+6,f,c
  6192  002D30  5010               	movf	___aomod@divisor+7,w,c
  6193  002D32  5A08               	subwfb	___aomod@dividend+7,f,c
  6194  002D34                     l3518:
  6195  002D34  90D8               	bcf	status,0,c
  6196  002D36  3210               	rrcf	___aomod@divisor+7,f,c
  6197  002D38  320F               	rrcf	___aomod@divisor+6,f,c
  6198  002D3A  320E               	rrcf	___aomod@divisor+5,f,c
  6199  002D3C  320D               	rrcf	___aomod@divisor+4,f,c
  6200  002D3E  320C               	rrcf	___aomod@divisor+3,f,c
  6201  002D40  320B               	rrcf	___aomod@divisor+2,f,c
  6202  002D42  320A               	rrcf	___aomod@divisor+1,f,c
  6203  002D44  3209               	rrcf	___aomod@divisor,f,c
  6204  002D46  2E11               	decfsz	___aomod@counter,f,c
  6205  002D48  D7D3               	goto	u3250
  6206  002D4A                     l3522:
  6207  002D4A  5012               	movf	___aomod@sign,w,c
  6208  002D4C  B4D8               	btfsc	status,2,c
  6209  002D4E  D010               	goto	l3526
  6210  002D50  1E08               	comf	___aomod@dividend+7,f,c
  6211  002D52  1E07               	comf	___aomod@dividend+6,f,c
  6212  002D54  1E06               	comf	___aomod@dividend+5,f,c
  6213  002D56  1E05               	comf	___aomod@dividend+4,f,c
  6214  002D58  1E04               	comf	___aomod@dividend+3,f,c
  6215  002D5A  1E03               	comf	___aomod@dividend+2,f,c
  6216  002D5C  1E02               	comf	___aomod@dividend+1,f,c
  6217  002D5E  6C01               	negf	___aomod@dividend,c
  6218  002D60  0E00               	movlw	0
  6219  002D62  2202               	addwfc	___aomod@dividend+1,f,c
  6220  002D64  2203               	addwfc	___aomod@dividend+2,f,c
  6221  002D66  2204               	addwfc	___aomod@dividend+3,f,c
  6222  002D68  2205               	addwfc	___aomod@dividend+4,f,c
  6223  002D6A  2206               	addwfc	___aomod@dividend+5,f,c
  6224  002D6C  2207               	addwfc	___aomod@dividend+6,f,c
  6225  002D6E  2208               	addwfc	___aomod@dividend+7,f,c
  6226  002D70                     l3526:
  6227  002D70  C001  F001         	movff	___aomod@dividend,?___aomod
  6228  002D74  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6229  002D78  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6230  002D7C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6231  002D80  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6232  002D84  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6233  002D88  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6234  002D8C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6235  002D90  0012               	return		;funcret
  6236  002D92                     __end_of___aomod:
  6237                           	opt callstack 0
  6238                           
  6239 ;; *************** function ___aodiv *****************
  6240 ;; Defined at:
  6241 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  dividend        8    0[COMRAM] long long 
  6244 ;;  divisor         8    8[COMRAM] long long 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  quotient        8   18[COMRAM] long long 
  6247 ;;  sign            1   17[COMRAM] unsigned char 
  6248 ;;  counter         1   16[COMRAM] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  8    0[COMRAM] long long 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:        16       0       0       0       0       0       0
  6259 ;;      Locals:        10       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0
  6261 ;;      Totals:        26       0       0       0       0       0       0
  6262 ;;Total ram usage:       26 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    2
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_dtoa
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text21
  6273  00277A                     __ptext21:
  6274                           	opt callstack 0
  6275  00277A                     ___aodiv:
  6276                           	opt callstack 22
  6277                           
  6278                           ;incstack = 0
  6279  00277A  0E00               	movlw	0
  6280  00277C  6E12               	movwf	___aodiv@sign,c
  6281  00277E  AE10               	btfss	___aodiv@divisor+7,7,c
  6282  002780  D012               	goto	l3458
  6283  002782  1E10               	comf	___aodiv@divisor+7,f,c
  6284  002784  1E0F               	comf	___aodiv@divisor+6,f,c
  6285  002786  1E0E               	comf	___aodiv@divisor+5,f,c
  6286  002788  1E0D               	comf	___aodiv@divisor+4,f,c
  6287  00278A  1E0C               	comf	___aodiv@divisor+3,f,c
  6288  00278C  1E0B               	comf	___aodiv@divisor+2,f,c
  6289  00278E  1E0A               	comf	___aodiv@divisor+1,f,c
  6290  002790  6C09               	negf	___aodiv@divisor,c
  6291  002792  0E00               	movlw	0
  6292  002794  220A               	addwfc	___aodiv@divisor+1,f,c
  6293  002796  220B               	addwfc	___aodiv@divisor+2,f,c
  6294  002798  220C               	addwfc	___aodiv@divisor+3,f,c
  6295  00279A  220D               	addwfc	___aodiv@divisor+4,f,c
  6296  00279C  220E               	addwfc	___aodiv@divisor+5,f,c
  6297  00279E  220F               	addwfc	___aodiv@divisor+6,f,c
  6298  0027A0  2210               	addwfc	___aodiv@divisor+7,f,c
  6299  0027A2  0E01               	movlw	1
  6300  0027A4  6E12               	movwf	___aodiv@sign,c
  6301  0027A6                     l3458:
  6302  0027A6  AE08               	btfss	___aodiv@dividend+7,7,c
  6303  0027A8  D012               	goto	l3464
  6304  0027AA  1E08               	comf	___aodiv@dividend+7,f,c
  6305  0027AC  1E07               	comf	___aodiv@dividend+6,f,c
  6306  0027AE  1E06               	comf	___aodiv@dividend+5,f,c
  6307  0027B0  1E05               	comf	___aodiv@dividend+4,f,c
  6308  0027B2  1E04               	comf	___aodiv@dividend+3,f,c
  6309  0027B4  1E03               	comf	___aodiv@dividend+2,f,c
  6310  0027B6  1E02               	comf	___aodiv@dividend+1,f,c
  6311  0027B8  6C01               	negf	___aodiv@dividend,c
  6312  0027BA  0E00               	movlw	0
  6313  0027BC  2202               	addwfc	___aodiv@dividend+1,f,c
  6314  0027BE  2203               	addwfc	___aodiv@dividend+2,f,c
  6315  0027C0  2204               	addwfc	___aodiv@dividend+3,f,c
  6316  0027C2  2205               	addwfc	___aodiv@dividend+4,f,c
  6317  0027C4  2206               	addwfc	___aodiv@dividend+5,f,c
  6318  0027C6  2207               	addwfc	___aodiv@dividend+6,f,c
  6319  0027C8  2208               	addwfc	___aodiv@dividend+7,f,c
  6320  0027CA  0E01               	movlw	1
  6321  0027CC  1A12               	xorwf	___aodiv@sign,f,c
  6322  0027CE                     l3464:
  6323  0027CE  EE20  F013         	lfsr	2,___aodiv@quotient
  6324  0027D2  0E07               	movlw	7
  6325  0027D4                     u3171:
  6326  0027D4  6ADE               	clrf	postinc2,c
  6327  0027D6  06E8               	decf	wreg,f,c
  6328  0027D8  E2FD               	bc	u3171
  6329  0027DA  5009               	movf	___aodiv@divisor,w,c
  6330  0027DC  100A               	iorwf	___aodiv@divisor+1,w,c
  6331  0027DE  100B               	iorwf	___aodiv@divisor+2,w,c
  6332  0027E0  100C               	iorwf	___aodiv@divisor+3,w,c
  6333  0027E2  100D               	iorwf	___aodiv@divisor+4,w,c
  6334  0027E4  100E               	iorwf	___aodiv@divisor+5,w,c
  6335  0027E6  100F               	iorwf	___aodiv@divisor+6,w,c
  6336  0027E8  1010               	iorwf	___aodiv@divisor+7,w,c
  6337  0027EA  B4D8               	btfsc	status,2,c
  6338  0027EC  D046               	goto	l3486
  6339  0027EE  0E01               	movlw	1
  6340  0027F0  6E11               	movwf	___aodiv@counter,c
  6341  0027F2  D00A               	goto	l3472
  6342  0027F4                     l3470:
  6343  0027F4  90D8               	bcf	status,0,c
  6344  0027F6  3609               	rlcf	___aodiv@divisor,f,c
  6345  0027F8  360A               	rlcf	___aodiv@divisor+1,f,c
  6346  0027FA  360B               	rlcf	___aodiv@divisor+2,f,c
  6347  0027FC  360C               	rlcf	___aodiv@divisor+3,f,c
  6348  0027FE  360D               	rlcf	___aodiv@divisor+4,f,c
  6349  002800  360E               	rlcf	___aodiv@divisor+5,f,c
  6350  002802  360F               	rlcf	___aodiv@divisor+6,f,c
  6351  002804  3610               	rlcf	___aodiv@divisor+7,f,c
  6352  002806  2A11               	incf	___aodiv@counter,f,c
  6353  002808                     l3472:
  6354  002808  AE10               	btfss	___aodiv@divisor+7,7,c
  6355  00280A  D7F4               	goto	l3470
  6356  00280C                     u3190:
  6357  00280C  90D8               	bcf	status,0,c
  6358  00280E  3613               	rlcf	___aodiv@quotient,f,c
  6359  002810  3614               	rlcf	___aodiv@quotient+1,f,c
  6360  002812  3615               	rlcf	___aodiv@quotient+2,f,c
  6361  002814  3616               	rlcf	___aodiv@quotient+3,f,c
  6362  002816  3617               	rlcf	___aodiv@quotient+4,f,c
  6363  002818  3618               	rlcf	___aodiv@quotient+5,f,c
  6364  00281A  3619               	rlcf	___aodiv@quotient+6,f,c
  6365  00281C  361A               	rlcf	___aodiv@quotient+7,f,c
  6366  00281E  5009               	movf	___aodiv@divisor,w,c
  6367  002820  5C01               	subwf	___aodiv@dividend,w,c
  6368  002822  500A               	movf	___aodiv@divisor+1,w,c
  6369  002824  5802               	subwfb	___aodiv@dividend+1,w,c
  6370  002826  500B               	movf	___aodiv@divisor+2,w,c
  6371  002828  5803               	subwfb	___aodiv@dividend+2,w,c
  6372  00282A  500C               	movf	___aodiv@divisor+3,w,c
  6373  00282C  5804               	subwfb	___aodiv@dividend+3,w,c
  6374  00282E  500D               	movf	___aodiv@divisor+4,w,c
  6375  002830  5805               	subwfb	___aodiv@dividend+4,w,c
  6376  002832  500E               	movf	___aodiv@divisor+5,w,c
  6377  002834  5806               	subwfb	___aodiv@dividend+5,w,c
  6378  002836  500F               	movf	___aodiv@divisor+6,w,c
  6379  002838  5807               	subwfb	___aodiv@dividend+6,w,c
  6380  00283A  5010               	movf	___aodiv@divisor+7,w,c
  6381  00283C  5808               	subwfb	___aodiv@dividend+7,w,c
  6382  00283E  A0D8               	btfss	status,0,c
  6383  002840  D011               	goto	l3482
  6384  002842  5009               	movf	___aodiv@divisor,w,c
  6385  002844  5E01               	subwf	___aodiv@dividend,f,c
  6386  002846  500A               	movf	___aodiv@divisor+1,w,c
  6387  002848  5A02               	subwfb	___aodiv@dividend+1,f,c
  6388  00284A  500B               	movf	___aodiv@divisor+2,w,c
  6389  00284C  5A03               	subwfb	___aodiv@dividend+2,f,c
  6390  00284E  500C               	movf	___aodiv@divisor+3,w,c
  6391  002850  5A04               	subwfb	___aodiv@dividend+3,f,c
  6392  002852  500D               	movf	___aodiv@divisor+4,w,c
  6393  002854  5A05               	subwfb	___aodiv@dividend+4,f,c
  6394  002856  500E               	movf	___aodiv@divisor+5,w,c
  6395  002858  5A06               	subwfb	___aodiv@dividend+5,f,c
  6396  00285A  500F               	movf	___aodiv@divisor+6,w,c
  6397  00285C  5A07               	subwfb	___aodiv@dividend+6,f,c
  6398  00285E  5010               	movf	___aodiv@divisor+7,w,c
  6399  002860  5A08               	subwfb	___aodiv@dividend+7,f,c
  6400  002862  8013               	bsf	___aodiv@quotient,0,c
  6401  002864                     l3482:
  6402  002864  90D8               	bcf	status,0,c
  6403  002866  3210               	rrcf	___aodiv@divisor+7,f,c
  6404  002868  320F               	rrcf	___aodiv@divisor+6,f,c
  6405  00286A  320E               	rrcf	___aodiv@divisor+5,f,c
  6406  00286C  320D               	rrcf	___aodiv@divisor+4,f,c
  6407  00286E  320C               	rrcf	___aodiv@divisor+3,f,c
  6408  002870  320B               	rrcf	___aodiv@divisor+2,f,c
  6409  002872  320A               	rrcf	___aodiv@divisor+1,f,c
  6410  002874  3209               	rrcf	___aodiv@divisor,f,c
  6411  002876  2E11               	decfsz	___aodiv@counter,f,c
  6412  002878  D7C9               	goto	u3190
  6413  00287A                     l3486:
  6414  00287A  5012               	movf	___aodiv@sign,w,c
  6415  00287C  B4D8               	btfsc	status,2,c
  6416  00287E  D010               	goto	l3490
  6417  002880  1E1A               	comf	___aodiv@quotient+7,f,c
  6418  002882  1E19               	comf	___aodiv@quotient+6,f,c
  6419  002884  1E18               	comf	___aodiv@quotient+5,f,c
  6420  002886  1E17               	comf	___aodiv@quotient+4,f,c
  6421  002888  1E16               	comf	___aodiv@quotient+3,f,c
  6422  00288A  1E15               	comf	___aodiv@quotient+2,f,c
  6423  00288C  1E14               	comf	___aodiv@quotient+1,f,c
  6424  00288E  6C13               	negf	___aodiv@quotient,c
  6425  002890  0E00               	movlw	0
  6426  002892  2214               	addwfc	___aodiv@quotient+1,f,c
  6427  002894  2215               	addwfc	___aodiv@quotient+2,f,c
  6428  002896  2216               	addwfc	___aodiv@quotient+3,f,c
  6429  002898  2217               	addwfc	___aodiv@quotient+4,f,c
  6430  00289A  2218               	addwfc	___aodiv@quotient+5,f,c
  6431  00289C  2219               	addwfc	___aodiv@quotient+6,f,c
  6432  00289E  221A               	addwfc	___aodiv@quotient+7,f,c
  6433  0028A0                     l3490:
  6434  0028A0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6435  0028A4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6436  0028A8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6437  0028AC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6438  0028B0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6439  0028B4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6440  0028B8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6441  0028BC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6442  0028C0  0012               	return		;funcret
  6443  0028C2                     __end_of___aodiv:
  6444                           	opt callstack 0
  6445                           
  6446 ;; *************** function _ctoa *****************
  6447 ;; Defined at:
  6448 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6451 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6452 ;;  c               1   29[COMRAM] unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  w               2   30[COMRAM] int 
  6455 ;;  l               2    0        int 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2   27[COMRAM] int 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6465 ;;      Params:         3       0       0       0       0       0       0
  6466 ;;      Locals:         2       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0
  6468 ;;      Totals:         5       0       0       0       0       0       0
  6469 ;;Total ram usage:        5 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    6
  6472 ;; This function calls:
  6473 ;;		_pad
  6474 ;; This function is called by:
  6475 ;;		_vfpfcnvrt
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text22
  6480  0035C4                     __ptext22:
  6481                           	opt callstack 0
  6482  0035C4                     _ctoa:
  6483                           	opt callstack 19
  6484                           
  6485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6486                           
  6487                           ;incstack = 0
  6488  0035C4  0100               	movlb	0	; () banked
  6489  0035C6  518D               	movf	_width& (0+255),w,b
  6490  0035C8  118E               	iorwf	(_width+1)& (0+255),w,b
  6491  0035CA  A4D8               	btfss	status,2,c
  6492  0035CC  D005               	goto	l3584
  6493                           
  6494                           ; BSR set to: 0
  6495  0035CE  C08D  F01F         	movff	_width,ctoa@w
  6496  0035D2  C08E  F020         	movff	_width+1,ctoa@w+1
  6497  0035D6  D006               	goto	l3586
  6498  0035D8                     l3584:
  6499                           
  6500                           ; BSR set to: 0
  6501  0035D8  0EFF               	movlw	255
  6502  0035DA  258D               	addwf	_width& (0+255),w,b
  6503  0035DC  6E1F               	movwf	ctoa@w,c
  6504  0035DE  0EFF               	movlw	255
  6505  0035E0  218E               	addwfc	(_width+1)& (0+255),w,b
  6506  0035E2  6E20               	movwf	ctoa@w+1,c
  6507  0035E4                     l3586:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6511  0035E4  C01E  F098         	movff	ctoa@c,_dbuf
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6515  0035E8  0E00               	movlw	0
  6516  0035EA  6F99               	movwf	(_dbuf+1)& (0+255),b
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6520  0035EC  C01C  F011         	movff	ctoa@fp,pad@fp
  6521  0035F0  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6522  0035F4  0E98               	movlw	low _dbuf
  6523  0035F6  6E13               	movwf	pad@buf,c
  6524  0035F8  0E00               	movlw	high _dbuf
  6525  0035FA  6E14               	movwf	pad@buf+1,c
  6526  0035FC  C01F  F015         	movff	ctoa@w,pad@p
  6527  003600  C020  F016         	movff	ctoa@w+1,pad@p+1
  6528  003604  EC7C  F019         	call	_pad	;wreg free
  6529  003608  C011  F01C         	movff	?_pad,?_ctoa
  6530  00360C  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6531  003610  0012               	return		;funcret
  6532  003612                     __end_of_ctoa:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _pad *****************
  6536 ;; Defined at:
  6537 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6540 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6541 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6542 ;;		 -> dbuf(32), 
  6543 ;;  p               2   20[COMRAM] int 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  w               2   25[COMRAM] int 
  6546 ;;  i               2   23[COMRAM] int 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  2   16[COMRAM] int 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6556 ;;      Params:         6       0       0       0       0       0       0
  6557 ;;      Locals:         4       0       0       0       0       0       0
  6558 ;;      Temps:          1       0       0       0       0       0       0
  6559 ;;      Totals:        11       0       0       0       0       0       0
  6560 ;;Total ram usage:       11 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    5
  6563 ;; This function calls:
  6564 ;;		_fputc
  6565 ;;		_fputs
  6566 ;;		_strlen
  6567 ;; This function is called by:
  6568 ;;		_ctoa
  6569 ;;		_dtoa
  6570 ;;		_otoa
  6571 ;;		_utoa
  6572 ;;		_xtoa
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text23
  6577  0032F8                     __ptext23:
  6578                           	opt callstack 0
  6579  0032F8                     _pad:
  6580                           	opt callstack 19
  6581                           
  6582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6583                           
  6584                           ;incstack = 0
  6585  0032F8  0100               	movlb	0	; () banked
  6586  0032FA  A191               	btfss	_flags& (0+255),0,b
  6587  0032FC  D00A               	goto	l3400
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6591  0032FE  C013  F00A         	movff	pad@buf,fputs@s
  6592  003302  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6593  003306  C011  F00C         	movff	pad@fp,fputs@fp
  6594  00330A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6595  00330E  ECEF  F01B         	call	_fputs	;wreg free
  6596  003312                     l3400:
  6597                           
  6598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6599  003312  BE16               	btfsc	pad@p+1,7,c
  6600  003314  D005               	goto	l3404
  6601  003316  C015  F01A         	movff	pad@p,pad@w
  6602  00331A  C016  F01B         	movff	pad@p+1,pad@w+1
  6603  00331E  D004               	goto	l324
  6604  003320                     l3404:
  6605  003320  0E00               	movlw	0
  6606  003322  6E1B               	movwf	pad@w+1,c
  6607  003324  0E00               	movlw	0
  6608  003326  6E1A               	movwf	pad@w,c
  6609  003328                     l324:
  6610                           
  6611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6612  003328  0E00               	movlw	0
  6613  00332A  6E19               	movwf	pad@i+1,c
  6614  00332C  0E00               	movlw	0
  6615  00332E  6E18               	movwf	pad@i,c
  6616                           
  6617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6618  003330  D00C               	goto	l3410
  6619  003332                     l3406:
  6620                           
  6621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6622  003332  0E00               	movlw	0
  6623  003334  6E02               	movwf	fputc@c+1,c
  6624  003336  0E20               	movlw	32
  6625  003338  6E01               	movwf	fputc@c,c
  6626  00333A  C011  F003         	movff	pad@fp,fputc@fp
  6627  00333E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6628  003342  EC2C  F019         	call	_fputc	;wreg free
  6629                           
  6630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6631  003346  4A18               	infsnz	pad@i,f,c
  6632  003348  2A19               	incf	pad@i+1,f,c
  6633  00334A                     l3410:
  6634                           
  6635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6636  00334A  501A               	movf	pad@w,w,c
  6637  00334C  5C18               	subwf	pad@i,w,c
  6638  00334E  5019               	movf	pad@i+1,w,c
  6639  003350  0A80               	xorlw	128
  6640  003352  6E17               	movwf	??_pad& (0+255),c
  6641  003354  501B               	movf	pad@w+1,w,c
  6642  003356  0A80               	xorlw	128
  6643  003358  5817               	subwfb	??_pad& (0+255),w,c
  6644  00335A  A0D8               	btfss	status,0,c
  6645  00335C  D7EA               	goto	l3406
  6646                           
  6647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6648  00335E  0100               	movlb	0	; () banked
  6649  003360  B191               	btfsc	_flags& (0+255),0,b
  6650  003362  D00A               	goto	l3414
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6654  003364  C013  F00A         	movff	pad@buf,fputs@s
  6655  003368  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6656  00336C  C011  F00C         	movff	pad@fp,fputs@fp
  6657  003370  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6658  003374  ECEF  F01B         	call	_fputs	;wreg free
  6659  003378                     l3414:
  6660                           
  6661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6662  003378  C013  F001         	movff	pad@buf,strlen@s
  6663  00337C  C014  F002         	movff	pad@buf+1,strlen@s+1
  6664  003380  ECB8  F01C         	call	_strlen	;wreg free
  6665  003384  501A               	movf	pad@w,w,c
  6666  003386  2401               	addwf	?_strlen,w,c
  6667  003388  6E11               	movwf	?_pad,c
  6668  00338A  501B               	movf	pad@w+1,w,c
  6669  00338C  2002               	addwfc	?_strlen+1,w,c
  6670  00338E  6E12               	movwf	?_pad+1,c
  6671  003390  0012               	return		;funcret
  6672  003392                     __end_of_pad:
  6673                           	opt callstack 0
  6674                           
  6675 ;; *************** function _strlen *****************
  6676 ;; Defined at:
  6677 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6680 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6683 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    0[COMRAM] unsigned int 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6693 ;;      Params:         2       0       0       0       0       0       0
  6694 ;;      Locals:         2       0       0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0
  6696 ;;      Totals:         4       0       0       0       0       0       0
  6697 ;;Total ram usage:        4 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    2
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_pad
  6704 ;;		_stoa
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text24
  6709  003970                     __ptext24:
  6710                           	opt callstack 0
  6711  003970                     _strlen:
  6712                           	opt callstack 21
  6713                           
  6714                           ;incstack = 0
  6715  003970  C001  F003         	movff	strlen@s,strlen@a
  6716  003974  C002  F004         	movff	strlen@s+1,strlen@a+1
  6717  003978  D002               	goto	l3386
  6718  00397A                     l3384:
  6719  00397A  4A01               	infsnz	strlen@s,f,c
  6720  00397C  2A02               	incf	strlen@s+1,f,c
  6721  00397E                     l3386:
  6722  00397E  C001  FFD9         	movff	strlen@s,fsr2l
  6723  003982  C002  FFDA         	movff	strlen@s+1,fsr2h
  6724  003986  50DF               	movf	indf2,w,c
  6725  003988  A4D8               	btfss	status,2,c
  6726  00398A  D7F7               	goto	l3384
  6727  00398C  5003               	movf	strlen@a,w,c
  6728  00398E  5C01               	subwf	strlen@s,w,c
  6729  003990  6E01               	movwf	?_strlen,c
  6730  003992  5004               	movf	strlen@a+1,w,c
  6731  003994  5802               	subwfb	strlen@s+1,w,c
  6732  003996  6E02               	movwf	?_strlen+1,c
  6733  003998  0012               	return		;funcret
  6734  00399A                     __end_of_strlen:
  6735                           	opt callstack 0
  6736                           
  6737 ;; *************** function _fputs *****************
  6738 ;; Defined at:
  6739 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6742 ;;		 -> dbuf(32), 
  6743 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6744 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  i               2   14[COMRAM] int 
  6747 ;;  c               1   13[COMRAM] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2    9[COMRAM] int 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6757 ;;      Params:         4       0       0       0       0       0       0
  6758 ;;      Locals:         3       0       0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0
  6760 ;;      Totals:         7       0       0       0       0       0       0
  6761 ;;Total ram usage:        7 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    4
  6764 ;; This function calls:
  6765 ;;		_fputc
  6766 ;; This function is called by:
  6767 ;;		_pad
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text25
  6772  0037DE                     __ptext25:
  6773                           	opt callstack 0
  6774  0037DE                     _fputs:
  6775                           	opt callstack 19
  6776                           
  6777                           ;incstack = 0
  6778  0037DE  0E00               	movlw	0
  6779  0037E0  6E10               	movwf	fputs@i+1,c
  6780  0037E2  0E00               	movlw	0
  6781  0037E4  6E0F               	movwf	fputs@i,c
  6782  0037E6  D00B               	goto	l3380
  6783  0037E8                     l3376:
  6784  0037E8  C00E  F001         	movff	fputs@c,fputc@c
  6785  0037EC  6A02               	clrf	fputc@c+1,c
  6786  0037EE  C00C  F003         	movff	fputs@fp,fputc@fp
  6787  0037F2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6788  0037F6  EC2C  F019         	call	_fputc	;wreg free
  6789  0037FA  4A0F               	infsnz	fputs@i,f,c
  6790  0037FC  2A10               	incf	fputs@i+1,f,c
  6791  0037FE                     l3380:
  6792  0037FE  500F               	movf	fputs@i,w,c
  6793  003800  240A               	addwf	fputs@s,w,c
  6794  003802  6ED9               	movwf	fsr2l,c
  6795  003804  5010               	movf	fputs@i+1,w,c
  6796  003806  200B               	addwfc	fputs@s+1,w,c
  6797  003808  6EDA               	movwf	fsr2h,c
  6798  00380A  50DF               	movf	indf2,w,c
  6799  00380C  6E0E               	movwf	fputs@c,c
  6800  00380E  500E               	movf	fputs@c,w,c
  6801  003810  B4D8               	btfsc	status,2,c
  6802  003812  0012               	return	
  6803  003814  D7E9               	goto	l3376
  6804  003816                     __end_of_fputs:
  6805                           	opt callstack 0
  6806                           
  6807 ;; *************** function _fputc *****************
  6808 ;; Defined at:
  6809 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  c               2    0[COMRAM] int 
  6812 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6813 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2    0[COMRAM] int 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6825 ;;      Params:         4       0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0
  6827 ;;      Temps:          5       0       0       0       0       0       0
  6828 ;;      Totals:         9       0       0       0       0       0       0
  6829 ;;Total ram usage:        9 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    3
  6832 ;; This function calls:
  6833 ;;		_putch
  6834 ;; This function is called by:
  6835 ;;		_pad
  6836 ;;		_stoa
  6837 ;;		_vfpfcnvrt
  6838 ;;		_fputs
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text26
  6843  003258                     __ptext26:
  6844                           	opt callstack 0
  6845  003258                     _fputc:
  6846                           	opt callstack 19
  6847                           
  6848                           ;incstack = 0
  6849  003258  5003               	movf	fputc@fp,w,c
  6850  00325A  1004               	iorwf	fputc@fp+1,w,c
  6851  00325C  B4D8               	btfsc	status,2,c
  6852  00325E  D004               	goto	u2940
  6853  003260  5003               	movf	fputc@fp,w,c
  6854  003262  1004               	iorwf	fputc@fp+1,w,c
  6855  003264  A4D8               	btfss	status,2,c
  6856  003266  D004               	goto	l3366
  6857  003268                     u2940:
  6858  003268  5001               	movf	fputc@c,w,c
  6859  00326A  EC16  F01D         	call	_putch
  6860  00326E  0012               	return	
  6861  003270                     l3366:
  6862  003270  EE20 F004          	lfsr	2,4
  6863  003274  5003               	movf	fputc@fp,w,c
  6864  003276  26D9               	addwf	fsr2l,f,c
  6865  003278  5004               	movf	fputc@fp+1,w,c
  6866  00327A  22DA               	addwfc	fsr2h,f,c
  6867  00327C  50DE               	movf	postinc2,w,c
  6868  00327E  10DE               	iorwf	postinc2,w,c
  6869  003280  B4D8               	btfsc	status,2,c
  6870  003282  D016               	goto	u2960
  6871  003284  EE20 F004          	lfsr	2,4
  6872  003288  5003               	movf	fputc@fp,w,c
  6873  00328A  26D9               	addwf	fsr2l,f,c
  6874  00328C  5004               	movf	fputc@fp+1,w,c
  6875  00328E  22DA               	addwfc	fsr2h,f,c
  6876  003290  EE10 F002          	lfsr	1,2
  6877  003294  5003               	movf	fputc@fp,w,c
  6878  003296  26E1               	addwf	fsr1l,f,c
  6879  003298  5004               	movf	fputc@fp+1,w,c
  6880  00329A  22E2               	addwfc	fsr1h,f,c
  6881  00329C  50DE               	movf	postinc2,w,c
  6882  00329E  5CE6               	subwf	postinc1,w,c
  6883  0032A0  50E6               	movf	postinc1,w,c
  6884  0032A2  0A80               	xorlw	128
  6885  0032A4  6E09               	movwf	(??_fputc+4)& (0+255),c
  6886  0032A6  50DE               	movf	postinc2,w,c
  6887  0032A8  0A80               	xorlw	128
  6888  0032AA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6889  0032AC  B0D8               	btfsc	status,0,c
  6890  0032AE  0012               	return	
  6891  0032B0                     u2960:
  6892  0032B0  EE20 F002          	lfsr	2,2
  6893  0032B4  5003               	movf	fputc@fp,w,c
  6894  0032B6  26D9               	addwf	fsr2l,f,c
  6895  0032B8  5004               	movf	fputc@fp+1,w,c
  6896  0032BA  22DA               	addwfc	fsr2h,f,c
  6897  0032BC  CFDE F005          	movff	postinc2,??_fputc
  6898  0032C0  CFDD F006          	movff	postdec2,??_fputc+1
  6899  0032C4  C003  FFD9         	movff	fputc@fp,fsr2l
  6900  0032C8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6901  0032CC  CFDE F007          	movff	postinc2,??_fputc+2
  6902  0032D0  CFDD F008          	movff	postdec2,??_fputc+3
  6903  0032D4  5005               	movf	??_fputc,w,c
  6904  0032D6  2407               	addwf	??_fputc+2,w,c
  6905  0032D8  6ED9               	movwf	fsr2l,c
  6906  0032DA  5006               	movf	??_fputc+1,w,c
  6907  0032DC  2008               	addwfc	??_fputc+3,w,c
  6908  0032DE  6EDA               	movwf	fsr2h,c
  6909  0032E0  C001  FFDF         	movff	fputc@c,indf2
  6910  0032E4  EE20 F002          	lfsr	2,2
  6911  0032E8  5003               	movf	fputc@fp,w,c
  6912  0032EA  26D9               	addwf	fsr2l,f,c
  6913  0032EC  5004               	movf	fputc@fp+1,w,c
  6914  0032EE  22DA               	addwfc	fsr2h,f,c
  6915  0032F0  2ADE               	incf	postinc2,f,c
  6916  0032F2  0E00               	movlw	0
  6917  0032F4  22DD               	addwfc	postdec2,f,c
  6918  0032F6  0012               	return		;funcret
  6919  0032F8                     __end_of_fputc:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function _putch *****************
  6923 ;; Defined at:
  6924 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  c               1    wreg     unsigned char 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  c               1    0[COMRAM] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6938 ;;      Params:         0       0       0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0
  6941 ;;      Totals:         0       0       0       0       0       0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    2
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_fputc
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text27
  6953  003A2C                     __ptext27:
  6954                           	opt callstack 0
  6955  003A2C                     _putch:
  6956                           	opt callstack 19
  6957                           
  6958                           ;incstack = 0
  6959  003A2C  0012               	return		;funcret
  6960  003A2E                     __end_of_putch:
  6961                           	opt callstack 0
  6962                           
  6963 ;; *************** function _atoi *****************
  6964 ;; Defined at:
  6965 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6968 ;;		 -> STR_2(3), STR_1(4), 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  n               2   20[COMRAM] int 
  6971 ;;  neg             2   13[COMRAM] int 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2    7[COMRAM] int 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6981 ;;      Params:         2       0       0       0       0       0       0
  6982 ;;      Locals:         9       0       0       0       0       0       0
  6983 ;;      Temps:          4       0       0       0       0       0       0
  6984 ;;      Totals:        15       0       0       0       0       0       0
  6985 ;;Total ram usage:       15 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    3
  6988 ;; This function calls:
  6989 ;;		___wmul
  6990 ;;		_isdigit
  6991 ;;		_isspace
  6992 ;; This function is called by:
  6993 ;;		_vfpfcnvrt
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text28
  6998  0028C2                     __ptext28:
  6999                           	opt callstack 0
  7000  0028C2                     _atoi:
  7001                           	opt callstack 22
  7002                           
  7003                           ;incstack = 0
  7004  0028C2  0E00               	movlw	0
  7005  0028C4  6E16               	movwf	atoi@n+1,c
  7006  0028C6  0E00               	movlw	0
  7007  0028C8  6E15               	movwf	atoi@n,c
  7008  0028CA  0E00               	movlw	0
  7009  0028CC  6E0F               	movwf	atoi@neg+1,c
  7010  0028CE  0E00               	movlw	0
  7011  0028D0  6E0E               	movwf	atoi@neg,c
  7012  0028D2  D002               	goto	l3852
  7013  0028D4                     l3850:
  7014  0028D4  4A08               	infsnz	atoi@s,f,c
  7015  0028D6  2A09               	incf	atoi@s+1,f,c
  7016  0028D8                     l3852:
  7017  0028D8  0E01               	movlw	1
  7018  0028DA  6E14               	movwf	_atoi$1697,c
  7019  0028DC  C008  FFF6         	movff	atoi@s,tblptrl
  7020  0028E0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7021  0028E4                     	if	0	;tblptru may be non-zero
  7022  0028E4                     	endif
  7023  0028E4                     	if	0	;tblptru may be non-zero
  7024  0028E4                     	endif
  7025  0028E4  0008               	tblrd		*
  7026  0028E6  50F5               	movf	tablat,w,c
  7027  0028E8  0A20               	xorlw	32
  7028  0028EA  B4D8               	btfsc	status,2,c
  7029  0028EC  D018               	goto	l3860
  7030  0028EE  0EF7               	movlw	247
  7031  0028F0  6E0A               	movwf	??_atoi& (0+255),c
  7032  0028F2  0EFF               	movlw	255
  7033  0028F4  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7034  0028F6  C008  FFF6         	movff	atoi@s,tblptrl
  7035  0028FA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7036  0028FE                     	if	0	;tblptru may be non-zero
  7037  0028FE                     	endif
  7038  0028FE                     	if	0	;tblptru may be non-zero
  7039  0028FE                     	endif
  7040  0028FE  0008               	tblrd		*
  7041  002900  50F5               	movf	tablat,w,c
  7042  002902  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7043  002904  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7044  002906  500A               	movf	??_atoi,w,c
  7045  002908  260C               	addwf	??_atoi+2,f,c
  7046  00290A  500B               	movf	??_atoi+1,w,c
  7047  00290C  220D               	addwfc	??_atoi+3,f,c
  7048  00290E  500D               	movf	??_atoi+3,w,c
  7049  002910  E104               	bnz	u3970
  7050  002912  0E05               	movlw	5
  7051  002914  5C0C               	subwf	??_atoi+2,w,c
  7052  002916  A0D8               	btfss	status,0,c
  7053  002918  D002               	goto	l3860
  7054  00291A                     u3970:
  7055  00291A  0E00               	movlw	0
  7056  00291C  6E14               	movwf	_atoi$1697,c
  7057  00291E                     l3860:
  7058  00291E  C014  F010         	movff	_atoi$1697,_atoi$1696
  7059  002922  6A11               	clrf	_atoi$1696+1,c
  7060  002924  5010               	movf	_atoi$1696,w,c
  7061  002926  1011               	iorwf	_atoi$1696+1,w,c
  7062  002928  B4D8               	btfsc	status,2,c
  7063  00292A  D008               	goto	l3870
  7064  00292C  D7D3               	goto	l3850
  7065  00292E                     l3866:
  7066  00292E  0E00               	movlw	0
  7067  002930  6E0F               	movwf	atoi@neg+1,c
  7068  002932  0E01               	movlw	1
  7069  002934  6E0E               	movwf	atoi@neg,c
  7070  002936                     l3868:
  7071  002936  4A08               	infsnz	atoi@s,f,c
  7072  002938  2A09               	incf	atoi@s+1,f,c
  7073  00293A  D02E               	goto	l3876
  7074  00293C                     l3870:
  7075  00293C  C008  FFF6         	movff	atoi@s,tblptrl
  7076  002940  C009  FFF7         	movff	atoi@s+1,tblptrh
  7077  002944                     	if	0	;tblptru may be non-zero
  7078  002944                     	endif
  7079  002944                     	if	0	;tblptru may be non-zero
  7080  002944                     	endif
  7081  002944  0008               	tblrd		*
  7082  002946  50F5               	movf	tablat,w,c
  7083  002948  6E0A               	movwf	??_atoi& (0+255),c
  7084  00294A  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7085                           
  7086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7087                           ; Switch size 1, requested type "simple"
  7088                           ; Number of cases is 1, Range of values is 0 to 0
  7089                           ; switch strategies available:
  7090                           ; Name         Instructions Cycles
  7091                           ; simple_byte            4     3 (average)
  7092                           ;	Chosen strategy is simple_byte
  7093  00294C  500B               	movf	??_atoi+1,w,c
  7094  00294E  0A00               	xorlw	0	; case 0
  7095  002950  A4D8               	btfss	status,2,c
  7096  002952  D022               	goto	l3876
  7097                           
  7098                           ; Switch size 1, requested type "simple"
  7099                           ; Number of cases is 2, Range of values is 43 to 45
  7100                           ; switch strategies available:
  7101                           ; Name         Instructions Cycles
  7102                           ; simple_byte            7     4 (average)
  7103                           ;	Chosen strategy is simple_byte
  7104  002954  500A               	movf	??_atoi,w,c
  7105  002956  0A2B               	xorlw	43	; case 43
  7106  002958  B4D8               	btfsc	status,2,c
  7107  00295A  D7ED               	goto	l3868
  7108  00295C  0A06               	xorlw	6	; case 45
  7109  00295E  B4D8               	btfsc	status,2,c
  7110  002960  D7E6               	goto	l3866
  7111  002962  D01A               	goto	l3876
  7112  002964                     l3872:
  7113  002964  C015  F001         	movff	atoi@n,___wmul@multiplier
  7114  002968  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7115  00296C  0E00               	movlw	0
  7116  00296E  6E04               	movwf	___wmul@multiplicand+1,c
  7117  002970  0E0A               	movlw	10
  7118  002972  6E03               	movwf	___wmul@multiplicand,c
  7119  002974  ECCD  F01C         	call	___wmul	;wreg free
  7120  002978  C008  FFF6         	movff	atoi@s,tblptrl
  7121  00297C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7122  002980                     	if	0	;tblptru may be non-zero
  7123  002980                     	endif
  7124  002980                     	if	0	;tblptru may be non-zero
  7125  002980                     	endif
  7126  002980  0008               	tblrd		*
  7127  002982  50F5               	movf	tablat,w,c
  7128  002984  5E01               	subwf	?___wmul,f,c
  7129  002986  0E00               	movlw	0
  7130  002988  5A02               	subwfb	?___wmul+1,f,c
  7131  00298A  0E30               	movlw	48
  7132  00298C  2401               	addwf	?___wmul,w,c
  7133  00298E  6E15               	movwf	atoi@n,c
  7134  002990  0E00               	movlw	0
  7135  002992  2002               	addwfc	?___wmul+1,w,c
  7136  002994  6E16               	movwf	atoi@n+1,c
  7137  002996  D7CF               	goto	l3868
  7138  002998                     l3876:
  7139  002998  0ED0               	movlw	208
  7140  00299A  6E0A               	movwf	??_atoi& (0+255),c
  7141  00299C  0EFF               	movlw	255
  7142  00299E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7143  0029A0  C008  FFF6         	movff	atoi@s,tblptrl
  7144  0029A4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7145  0029A8                     	if	0	;tblptru may be non-zero
  7146  0029A8                     	endif
  7147  0029A8                     	if	0	;tblptru may be non-zero
  7148  0029A8                     	endif
  7149  0029A8  0008               	tblrd		*
  7150  0029AA  50F5               	movf	tablat,w,c
  7151  0029AC  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7152  0029AE  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7153  0029B0  500A               	movf	??_atoi,w,c
  7154  0029B2  260C               	addwf	??_atoi+2,f,c
  7155  0029B4  500B               	movf	??_atoi+1,w,c
  7156  0029B6  220D               	addwfc	??_atoi+3,f,c
  7157  0029B8  500D               	movf	??_atoi+3,w,c
  7158  0029BA  E106               	bnz	u3990
  7159  0029BC  0E0A               	movlw	10
  7160  0029BE  5C0C               	subwf	??_atoi+2,w,c
  7161  0029C0  B0D8               	btfsc	status,0,c
  7162  0029C2  D002               	goto	u3990
  7163  0029C4  0E01               	movlw	1
  7164  0029C6  D001               	goto	u4000
  7165  0029C8                     u3990:
  7166  0029C8  0E00               	movlw	0
  7167  0029CA                     u4000:
  7168  0029CA  6E12               	movwf	_atoi$1698,c
  7169  0029CC  6A13               	clrf	_atoi$1698+1,c
  7170  0029CE  5012               	movf	_atoi$1698,w,c
  7171  0029D0  1013               	iorwf	_atoi$1698+1,w,c
  7172  0029D2  A4D8               	btfss	status,2,c
  7173  0029D4  D7C7               	goto	l3872
  7174  0029D6  500E               	movf	atoi@neg,w,c
  7175  0029D8  100F               	iorwf	atoi@neg+1,w,c
  7176  0029DA  A4D8               	btfss	status,2,c
  7177  0029DC  D00D               	goto	l1246
  7178  0029DE  C015  F00A         	movff	atoi@n,??_atoi
  7179  0029E2  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7180  0029E6  1E0A               	comf	??_atoi,f,c
  7181  0029E8  1E0B               	comf	??_atoi+1,f,c
  7182  0029EA  4A0A               	infsnz	??_atoi,f,c
  7183  0029EC  2A0B               	incf	??_atoi+1,f,c
  7184  0029EE  C00A  F008         	movff	??_atoi,?_atoi
  7185  0029F2  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7186  0029F6  0012               	return	
  7187  0029F8                     l1246:
  7188  0029F8  C015  F008         	movff	atoi@n,?_atoi
  7189  0029FC  C016  F009         	movff	atoi@n+1,?_atoi+1
  7190  002A00  0012               	return		;funcret
  7191  002A02                     __end_of_atoi:
  7192                           	opt callstack 0
  7193                           
  7194 ;; *************** function _isspace *****************
  7195 ;; Defined at:
  7196 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  c               2    0[COMRAM] int 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  2    0[COMRAM] int 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7210 ;;      Params:         2       0       0       0       0       0       0
  7211 ;;      Locals:         1       0       0       0       0       0       0
  7212 ;;      Temps:          4       0       0       0       0       0       0
  7213 ;;      Totals:         7       0       0       0       0       0       0
  7214 ;;Total ram usage:        7 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    2
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_atoi
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text29
  7225  00372C                     __ptext29:
  7226                           	opt callstack 0
  7227  00372C                     _isspace:
  7228                           	opt callstack 22
  7229                           
  7230                           ;incstack = 0
  7231  00372C  0E01               	movlw	1
  7232  00372E  6E07               	movwf	_isspace$1733,c
  7233  003730  0E20               	movlw	32
  7234  003732  1801               	xorwf	isspace@c,w,c
  7235  003734  1002               	iorwf	isspace@c+1,w,c
  7236  003736  B4D8               	btfsc	status,2,c
  7237  003738  D014               	goto	l3576
  7238  00373A  0EF7               	movlw	247
  7239  00373C  6E03               	movwf	??_isspace& (0+255),c
  7240  00373E  0EFF               	movlw	255
  7241  003740  6E04               	movwf	(??_isspace+1)& (0+255),c
  7242  003742  C001  F005         	movff	isspace@c,??_isspace+2
  7243  003746  C002  F006         	movff	isspace@c+1,??_isspace+3
  7244  00374A  5003               	movf	??_isspace,w,c
  7245  00374C  2605               	addwf	??_isspace+2,f,c
  7246  00374E  5004               	movf	??_isspace+1,w,c
  7247  003750  2206               	addwfc	??_isspace+3,f,c
  7248  003752  5006               	movf	??_isspace+3,w,c
  7249  003754  E104               	bnz	u3360
  7250  003756  0E05               	movlw	5
  7251  003758  5C05               	subwf	??_isspace+2,w,c
  7252  00375A  A0D8               	btfss	status,0,c
  7253  00375C  D002               	goto	l3576
  7254  00375E                     u3360:
  7255  00375E  0E00               	movlw	0
  7256  003760  6E07               	movwf	_isspace$1733,c
  7257  003762                     l3576:
  7258  003762  C007  F001         	movff	_isspace$1733,?_isspace
  7259  003766  6A02               	clrf	?_isspace+1,c
  7260  003768  0012               	return		;funcret
  7261  00376A                     __end_of_isspace:
  7262                           	opt callstack 0
  7263                           
  7264 ;; *************** function _isdigit *****************
  7265 ;; Defined at:
  7266 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  c               2    0[COMRAM] int 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2    0[COMRAM] int 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7280 ;;      Params:         2       0       0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0
  7282 ;;      Temps:          4       0       0       0       0       0       0
  7283 ;;      Totals:         6       0       0       0       0       0       0
  7284 ;;Total ram usage:        6 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    2
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_vfpfcnvrt
  7291 ;;		_atoi
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text30
  7296  003910                     __ptext30:
  7297                           	opt callstack 0
  7298  003910                     _isdigit:
  7299                           	opt callstack 23
  7300                           
  7301                           ;incstack = 0
  7302  003910  0ED0               	movlw	208
  7303  003912  6E03               	movwf	??_isdigit& (0+255),c
  7304  003914  0EFF               	movlw	255
  7305  003916  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7306  003918  C001  F005         	movff	isdigit@c,??_isdigit+2
  7307  00391C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7308  003920  5003               	movf	??_isdigit,w,c
  7309  003922  2605               	addwf	??_isdigit+2,f,c
  7310  003924  5004               	movf	??_isdigit+1,w,c
  7311  003926  2206               	addwfc	??_isdigit+3,f,c
  7312  003928  5006               	movf	??_isdigit+3,w,c
  7313  00392A  E106               	bnz	u3130
  7314  00392C  0E0A               	movlw	10
  7315  00392E  5C05               	subwf	??_isdigit+2,w,c
  7316  003930  B0D8               	btfsc	status,0,c
  7317  003932  D002               	goto	u3130
  7318  003934  0E01               	movlw	1
  7319  003936  D001               	goto	u3140
  7320  003938                     u3130:
  7321  003938  0E00               	movlw	0
  7322  00393A                     u3140:
  7323  00393A  6E01               	movwf	?_isdigit,c
  7324  00393C  6A02               	clrf	?_isdigit+1,c
  7325  00393E  0012               	return		;funcret
  7326  003940                     __end_of_isdigit:
  7327                           	opt callstack 0
  7328                           
  7329 ;; *************** function ___wmul *****************
  7330 ;; Defined at:
  7331 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  multiplier      2    0[COMRAM] unsigned int 
  7334 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  product         2    4[COMRAM] unsigned int 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  2    0[COMRAM] unsigned int 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, prodl, prodh
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7346 ;;      Params:         4       0       0       0       0       0       0
  7347 ;;      Locals:         2       0       0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0
  7349 ;;      Totals:         6       0       0       0       0       0       0
  7350 ;;Total ram usage:        6 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    2
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_atoi
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text31
  7361  00399A                     __ptext31:
  7362                           	opt callstack 0
  7363  00399A                     ___wmul:
  7364                           	opt callstack 22
  7365                           
  7366                           ;incstack = 0
  7367  00399A  5001               	movf	___wmul@multiplier,w,c
  7368  00399C  0203               	mulwf	___wmul@multiplicand,c
  7369  00399E  CFF3 F005          	movff	prodl,___wmul@product
  7370  0039A2  CFF4 F006          	movff	prodh,___wmul@product+1
  7371  0039A6  5001               	movf	___wmul@multiplier,w,c
  7372  0039A8  0204               	mulwf	___wmul@multiplicand+1,c
  7373  0039AA  50F3               	movf	prodl,w,c
  7374  0039AC  2606               	addwf	___wmul@product+1,f,c
  7375  0039AE  5002               	movf	___wmul@multiplier+1,w,c
  7376  0039B0  0203               	mulwf	___wmul@multiplicand,c
  7377  0039B2  50F3               	movf	prodl,w,c
  7378  0039B4  2606               	addwf	___wmul@product+1,f,c
  7379  0039B6  C005  F001         	movff	___wmul@product,?___wmul
  7380  0039BA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7381  0039BE  0012               	return		;funcret
  7382  0039C0                     __end_of___wmul:
  7383                           	opt callstack 0
  7384                           
  7385 ;; *************** function _getchar *****************
  7386 ;; Defined at:
  7387 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2   32[None  ] int 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7401 ;;      Params:         0       0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    4
  7408 ;; This function calls:
  7409 ;;		_fgetc
  7410 ;; This function is called by:
  7411 ;;		_int_to_char
  7412 ;;		_float_to_char
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text32
  7417  0039F0                     __ptext32:
  7418                           	opt callstack 0
  7419  0039F0                     _getchar:
  7420                           	opt callstack 24
  7421                           
  7422                           ;	Return value of _getchar is never used
  7423                           
  7424                           ;incstack = 0
  7425  0039F0  0E00               	movlw	0
  7426  0039F2  6E03               	movwf	fgetc@fp,c
  7427  0039F4  0E00               	movlw	0
  7428  0039F6  6E04               	movwf	fgetc@fp+1,c
  7429  0039F8  EC0C  F01A         	call	_fgetc	;wreg free
  7430  0039FC  0012               	return		;funcret
  7431  0039FE                     __end_of_getchar:
  7432                           	opt callstack 0
  7433                           
  7434 ;; *************** function _fgetc *****************
  7435 ;; Defined at:
  7436 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7439 ;;		 -> NULL(0), 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  c               2    9[COMRAM] int 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  2    2[COMRAM] int 
  7444 ;; Registers used:
  7445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7451 ;;      Params:         2       0       0       0       0       0       0
  7452 ;;      Locals:         2       0       0       0       0       0       0
  7453 ;;      Temps:          5       0       0       0       0       0       0
  7454 ;;      Totals:         9       0       0       0       0       0       0
  7455 ;;Total ram usage:        9 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    3
  7458 ;; This function calls:
  7459 ;;		_getch
  7460 ;; This function is called by:
  7461 ;;		_getchar
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text33
  7466  003418                     __ptext33:
  7467                           	opt callstack 0
  7468  003418                     _fgetc:
  7469                           	opt callstack 24
  7470                           
  7471                           ;incstack = 0
  7472  003418  5003               	movf	fgetc@fp,w,c
  7473  00341A  1004               	iorwf	fgetc@fp+1,w,c
  7474  00341C  A4D8               	btfss	status,2,c
  7475  00341E  D012               	goto	l4310
  7476  003420  0100               	movlb	0	; () banked
  7477  003422  5195               	movf	_ungetcnt& (0+255),w,b
  7478  003424  B4D8               	btfsc	status,2,c
  7479  003426  D007               	goto	l4308
  7480                           
  7481                           ; BSR set to: 0
  7482  003428  0E00               	movlw	0
  7483  00342A  6E0B               	movwf	fgetc@c+1,c
  7484  00342C  0E00               	movlw	0
  7485  00342E  6E0A               	movwf	fgetc@c,c
  7486  003430  0E00               	movlw	0
  7487  003432  6F95               	movwf	_ungetcnt& (0+255),b
  7488  003434  D02D               	goto	l4312
  7489  003436                     l4308:
  7490                           
  7491                           ; BSR set to: 0
  7492  003436  EC0F  F01D         	call	_getch	;wreg free
  7493  00343A  C001  F00A         	movff	?_getch,fgetc@c
  7494  00343E  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7495  003442  D026               	goto	l4312
  7496  003444                     l4310:
  7497  003444  EE20 F002          	lfsr	2,2
  7498  003448  5003               	movf	fgetc@fp,w,c
  7499  00344A  26D9               	addwf	fsr2l,f,c
  7500  00344C  5004               	movf	fgetc@fp+1,w,c
  7501  00344E  22DA               	addwfc	fsr2h,f,c
  7502  003450  CFDE F005          	movff	postinc2,??_fgetc
  7503  003454  CFDD F006          	movff	postdec2,??_fgetc+1
  7504  003458  C003  FFD9         	movff	fgetc@fp,fsr2l
  7505  00345C  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7506  003460  CFDE F007          	movff	postinc2,??_fgetc+2
  7507  003464  CFDD F008          	movff	postdec2,??_fgetc+3
  7508  003468  5005               	movf	??_fgetc,w,c
  7509  00346A  2407               	addwf	??_fgetc+2,w,c
  7510  00346C  6ED9               	movwf	fsr2l,c
  7511  00346E  5006               	movf	??_fgetc+1,w,c
  7512  003470  2008               	addwfc	??_fgetc+3,w,c
  7513  003472  6EDA               	movwf	fsr2h,c
  7514  003474  50DF               	movf	indf2,w,c
  7515  003476  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7516  003478  5009               	movf	??_fgetc+4,w,c
  7517  00347A  6E0A               	movwf	fgetc@c,c
  7518  00347C  6A0B               	clrf	fgetc@c+1,c
  7519  00347E  EE20 F002          	lfsr	2,2
  7520  003482  5003               	movf	fgetc@fp,w,c
  7521  003484  26D9               	addwf	fsr2l,f,c
  7522  003486  5004               	movf	fgetc@fp+1,w,c
  7523  003488  22DA               	addwfc	fsr2h,f,c
  7524  00348A  2ADE               	incf	postinc2,f,c
  7525  00348C  0E00               	movlw	0
  7526  00348E  22DD               	addwfc	postdec2,f,c
  7527  003490                     l4312:
  7528  003490  C00A  F003         	movff	fgetc@c,?_fgetc
  7529  003494  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7530  003498  0012               	return		;funcret
  7531  00349A                     __end_of_fgetc:
  7532                           	opt callstack 0
  7533                           
  7534 ;; *************** function _getch *****************
  7535 ;; Defined at:
  7536 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  2    0[COMRAM] int 
  7543 ;; Registers used:
  7544 ;;		None
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7550 ;;      Params:         2       0       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0
  7553 ;;      Totals:         2       0       0       0       0       0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    2
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_fgetc
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text34
  7565  003A1E                     __ptext34:
  7566                           	opt callstack 0
  7567  003A1E                     _getch:
  7568                           	opt callstack 24
  7569                           
  7570                           ;incstack = 0
  7571  003A1E  6801               	setf	?_getch,c
  7572  003A20  6802               	setf	?_getch+1,c
  7573  003A22  0012               	return		;funcret
  7574  003A24                     __end_of_getch:
  7575                           	opt callstack 0
  7576                           
  7577 ;; *************** function _UARTSendString *****************
  7578 ;; Defined at:
  7579 ;;		line 65 in file "serial.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  c               2   32[BANK0 ] PTR unsigned char 
  7582 ;;		 -> int_to_char@result(10), 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  i               2   34[BANK0 ] int 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7594 ;;      Params:         0       2       0       0       0       0       0
  7595 ;;      Locals:         0       2       0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0
  7597 ;;      Totals:         0       4       0       0       0       0       0
  7598 ;;Total ram usage:        4 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    3
  7601 ;; This function calls:
  7602 ;;		_UARTSendChar
  7603 ;; This function is called by:
  7604 ;;		_read_op
  7605 ;;		_main
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text35
  7610  0037A4                     __ptext35:
  7611                           	opt callstack 0
  7612  0037A4                     _UARTSendString:
  7613                           	opt callstack 26
  7614                           
  7615                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  7616                           
  7617                           ;incstack = 0
  7618  0037A4  9E94               	bcf	3988,7,c	;volatile
  7619                           
  7620                           ;serial.c: 67:   int i = 0;
  7621  0037A6  0E00               	movlw	0
  7622  0037A8  0100               	movlb	0	; () banked
  7623  0037AA  6FDB               	movwf	(UARTSendString@i+1)& (0+255),b
  7624  0037AC  0E00               	movlw	0
  7625  0037AE  6FDA               	movwf	UARTSendString@i& (0+255),b
  7626                           
  7627                           ;serial.c: 68:   while (c[i] != '\0') {
  7628  0037B0  D00C               	goto	l4354
  7629  0037B2                     l4350:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;serial.c: 69:     UARTSendChar(c[i]);
  7633  0037B2  51DA               	movf	UARTSendString@i& (0+255),w,b
  7634  0037B4  25D8               	addwf	UARTSendString@c& (0+255),w,b
  7635  0037B6  6ED9               	movwf	fsr2l,c
  7636  0037B8  51DB               	movf	(UARTSendString@i+1)& (0+255),w,b
  7637  0037BA  21D9               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7638  0037BC  6EDA               	movwf	fsr2h,c
  7639  0037BE  50DF               	movf	indf2,w,c
  7640  0037C0  ECFF  F01C         	call	_UARTSendChar
  7641                           
  7642                           ;serial.c: 70:     i++;
  7643  0037C4  0100               	movlb	0	; () banked
  7644  0037C6  4BDA               	infsnz	UARTSendString@i& (0+255),f,b
  7645  0037C8  2BDB               	incf	(UARTSendString@i+1)& (0+255),f,b
  7646  0037CA                     l4354:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;serial.c: 68:   while (c[i] != '\0') {
  7650  0037CA  51DA               	movf	UARTSendString@i& (0+255),w,b
  7651  0037CC  25D8               	addwf	UARTSendString@c& (0+255),w,b
  7652  0037CE  6ED9               	movwf	fsr2l,c
  7653  0037D0  51DB               	movf	(UARTSendString@i+1)& (0+255),w,b
  7654  0037D2  21D9               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7655  0037D4  6EDA               	movwf	fsr2h,c
  7656  0037D6  50DF               	movf	indf2,w,c
  7657  0037D8  B4D8               	btfsc	status,2,c
  7658  0037DA  0012               	return	
  7659  0037DC  D7EA               	goto	l4350
  7660  0037DE                     __end_of_UARTSendString:
  7661                           	opt callstack 0
  7662                           
  7663 ;; *************** function _UARTNewLine *****************
  7664 ;; Defined at:
  7665 ;;		line 41 in file "serial.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7679 ;;      Params:         0       0       0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0
  7682 ;;      Totals:         0       0       0       0       0       0       0
  7683 ;;Total ram usage:        0 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    3
  7686 ;; This function calls:
  7687 ;;		_UARTSendChar
  7688 ;; This function is called by:
  7689 ;;		_read_op
  7690 ;;		_main
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text36
  7695  0039C0                     __ptext36:
  7696                           	opt callstack 0
  7697  0039C0                     _UARTNewLine:
  7698                           	opt callstack 26
  7699                           
  7700                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;incstack = 0
  7704  0039C0  9E94               	bcf	3988,7,c	;volatile
  7705                           
  7706                           ;serial.c: 43:   UARTSendChar(0x0a);
  7707  0039C2  0E0A               	movlw	10
  7708  0039C4  ECFF  F01C         	call	_UARTSendChar
  7709                           
  7710                           ;serial.c: 44:   UARTSendChar(0x0d);
  7711  0039C8  0E0D               	movlw	13
  7712  0039CA  ECFF  F01C         	call	_UARTSendChar
  7713  0039CE  0012               	return		;funcret
  7714  0039D0                     __end_of_UARTNewLine:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _UARTSendChar *****************
  7718 ;; Defined at:
  7719 ;;		line 47 in file "serial.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  c               1    wreg     unsigned char 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  c               1    0[COMRAM] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7733 ;;      Params:         0       0       0       0       0       0       0
  7734 ;;      Locals:         1       0       0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0
  7736 ;;      Totals:         1       0       0       0       0       0       0
  7737 ;;Total ram usage:        1 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    2
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_UARTNewLine
  7744 ;;		_UARTSendString
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text37
  7749  0039FE                     __ptext37:
  7750                           	opt callstack 0
  7751  0039FE                     _UARTSendChar:
  7752                           	opt callstack 26
  7753                           
  7754                           ;incstack = 0
  7755                           ;UARTSendChar@c stored from wreg
  7756  0039FE  6E01               	movwf	UARTSendChar@c,c
  7757                           
  7758                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  7759  003A00  9E94               	bcf	3988,7,c	;volatile
  7760  003A02                     l175:
  7761  003A02  A2AC               	btfss	4012,1,c	;volatile
  7762  003A04  D7FE               	goto	l175
  7763                           
  7764                           ;serial.c: 50:   TXREG = c;
  7765  003A06  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  7766  003A0A  0012               	return		;funcret
  7767  003A0C                     __end_of_UARTSendChar:
  7768                           	opt callstack 0
  7769                           
  7770 ;; *************** function _initialize_TX *****************
  7771 ;; Defined at:
  7772 ;;		line 23 in file "serial.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7786 ;;      Params:         0       0       0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0
  7789 ;;      Totals:         0       0       0       0       0       0       0
  7790 ;;Total ram usage:        0 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    2
  7793 ;; This function calls:
  7794 ;;		Nothing
  7795 ;; This function is called by:
  7796 ;;		_main
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text38
  7801  0039D0                     __ptext38:
  7802                           	opt callstack 0
  7803  0039D0                     _initialize_TX:
  7804                           	opt callstack 28
  7805                           
  7806                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7807                           
  7808                           ;incstack = 0
  7809  0039D0  8CAC               	bsf	4012,6,c	;volatile
  7810                           
  7811                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7812  0039D2  8AAC               	bsf	4012,5,c	;volatile
  7813                           
  7814                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7815  0039D4  98AC               	bcf	4012,4,c	;volatile
  7816                           
  7817                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7818  0039D6  94AC               	bcf	4012,2,c	;volatile
  7819                           
  7820                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7821  0039D8  80AC               	bsf	4012,0,c	;volatile
  7822                           
  7823                           ;serial.c: 29:   SPBRG = 25;
  7824  0039DA  0E19               	movlw	25
  7825  0039DC  6EAF               	movwf	4015,c	;volatile
  7826  0039DE  0012               	return		;funcret
  7827  0039E0                     __end_of_initialize_TX:
  7828                           	opt callstack 0
  7829                           
  7830 ;; *************** function _initialize_RX *****************
  7831 ;; Defined at:
  7832 ;;		line 32 in file "serial.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7846 ;;      Params:         0       0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    2
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_main
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text39
  7861  0039E0                     __ptext39:
  7862                           	opt callstack 0
  7863  0039E0                     _initialize_RX:
  7864                           	opt callstack 28
  7865                           
  7866                           ;serial.c: 33:   RCSTA = 0x00;
  7867                           
  7868                           ;incstack = 0
  7869  0039E0  0E00               	movlw	0
  7870  0039E2  6EAB               	movwf	4011,c	;volatile
  7871                           
  7872                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7873  0039E4  8EAB               	bsf	4011,7,c	;volatile
  7874                           
  7875                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7876  0039E6  8CAB               	bsf	4011,6,c	;volatile
  7877                           
  7878                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7879  0039E8  88AB               	bsf	4011,4,c	;volatile
  7880                           
  7881                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7882  0039EA  96AB               	bcf	4011,3,c	;volatile
  7883                           
  7884                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7885  0039EC  80AB               	bsf	4011,0,c	;volatile
  7886  0039EE  0012               	return		;funcret
  7887  0039F0                     __end_of_initialize_RX:
  7888                           	opt callstack 0
  7889                           
  7890 ;; *************** function _get_temp *****************
  7891 ;; Defined at:
  7892 ;;		line 10 in file "temp_adc.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  temp            4   88[COMRAM] float 
  7897 ;;  real_voltage    4   84[COMRAM] float 
  7898 ;;  adc_voltage     2   92[COMRAM] unsigned int 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  4   80[COMRAM] float 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7908 ;;      Params:         4       0       0       0       0       0       0
  7909 ;;      Locals:        10       0       0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0
  7911 ;;      Totals:        14       0       0       0       0       0       0
  7912 ;;Total ram usage:       14 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    3
  7915 ;; This function calls:
  7916 ;;		_ADC_Init
  7917 ;;		_ADC_Read
  7918 ;;		___fladd
  7919 ;;		___fldiv
  7920 ;;		___flmul
  7921 ;;		___xxtofl
  7922 ;; This function is called by:
  7923 ;;		_main
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text40
  7928  002E8E                     __ptext40:
  7929                           	opt callstack 0
  7930  002E8E                     _get_temp:
  7931                           	opt callstack 27
  7932                           
  7933                           ;temp_adc.c: 11:   ADC_Init();
  7934                           
  7935                           ;incstack = 0
  7936  002E8E  EC06  F01D         	call	_ADC_Init	;wreg free
  7937                           
  7938                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  7939  002E92  90C1               	bcf	4033,0,c	;volatile
  7940                           
  7941                           ;temp_adc.c: 13:   TRISA |= 0x01;
  7942  002E94  8092               	bsf	3986,0,c	;volatile
  7943                           
  7944                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  7945  002E96  0E00               	movlw	0
  7946  002E98  EC2E  F01B         	call	_ADC_Read
  7947  002E9C  C001  F05D         	movff	?_ADC_Read,get_temp@adc_voltage
  7948  002EA0  C002  F05E         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  7949                           
  7950                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  7951  002EA4  C05D  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  7952  002EA8  C05E  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  7953  002EAC  6A03               	clrf	___xxtofl@val+2,c
  7954  002EAE  6A04               	clrf	___xxtofl@val+3,c
  7955  002EB0  0E00               	movlw	0
  7956  002EB2  EC01  F015         	call	___xxtofl
  7957  002EB6  C001  F00F         	movff	?___xxtofl,___flmul@b
  7958  002EBA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7959  002EBE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7960  002EC2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7961  002EC6  0E9F               	movlw	159
  7962  002EC8  6E13               	movwf	___flmul@a,c
  7963  002ECA  0EAB               	movlw	171
  7964  002ECC  6E14               	movwf	___flmul@a+1,c
  7965  002ECE  0EAD               	movlw	173
  7966  002ED0  6E15               	movwf	___flmul@a+2,c
  7967  002ED2  0E3B               	movlw	59
  7968  002ED4  6E16               	movwf	___flmul@a+3,c
  7969  002ED6  EC76  F00B         	call	___flmul	;wreg free
  7970  002EDA  C00F  F055         	movff	?___flmul,get_temp@real_voltage
  7971  002EDE  C010  F056         	movff	?___flmul+1,get_temp@real_voltage+1
  7972  002EE2  C011  F057         	movff	?___flmul+2,get_temp@real_voltage+2
  7973  002EE6  C012  F058         	movff	?___flmul+3,get_temp@real_voltage+3
  7974                           
  7975                           ;temp_adc.c: 17:   float temp = (175.0 * real_voltage / 5.0) + 25.0;
  7976  002EEA  0E00               	movlw	0
  7977  002EEC  6E2C               	movwf	___fldiv@a,c
  7978  002EEE  0E00               	movlw	0
  7979  002EF0  6E2D               	movwf	___fldiv@a+1,c
  7980  002EF2  0EA0               	movlw	160
  7981  002EF4  6E2E               	movwf	___fldiv@a+2,c
  7982  002EF6  0E40               	movlw	64
  7983  002EF8  6E2F               	movwf	___fldiv@a+3,c
  7984  002EFA  0E00               	movlw	0
  7985  002EFC  6E13               	movwf	___flmul@a,c
  7986  002EFE  0E00               	movlw	0
  7987  002F00  6E14               	movwf	___flmul@a+1,c
  7988  002F02  0E2F               	movlw	47
  7989  002F04  6E15               	movwf	___flmul@a+2,c
  7990  002F06  0E43               	movlw	67
  7991  002F08  6E16               	movwf	___flmul@a+3,c
  7992  002F0A  C055  F00F         	movff	get_temp@real_voltage,___flmul@b
  7993  002F0E  C056  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  7994  002F12  C057  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  7995  002F16  C058  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  7996  002F1A  EC76  F00B         	call	___flmul	;wreg free
  7997  002F1E  C00F  F028         	movff	?___flmul,___fldiv@b
  7998  002F22  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7999  002F26  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  8000  002F2A  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  8001  002F2E  ECA5  F00E         	call	___fldiv	;wreg free
  8002  002F32  C028  F041         	movff	?___fldiv,___fladd@b
  8003  002F36  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  8004  002F3A  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  8005  002F3E  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  8006  002F42  0E00               	movlw	0
  8007  002F44  6E45               	movwf	___fladd@a,c
  8008  002F46  0E00               	movlw	0
  8009  002F48  6E46               	movwf	___fladd@a+1,c
  8010  002F4A  0EC8               	movlw	200
  8011  002F4C  6E47               	movwf	___fladd@a+2,c
  8012  002F4E  0E41               	movlw	65
  8013  002F50  6E48               	movwf	___fladd@a+3,c
  8014  002F52  EC1F  F00D         	call	___fladd	;wreg free
  8015  002F56  C041  F059         	movff	?___fladd,get_temp@temp
  8016  002F5A  C042  F05A         	movff	?___fladd+1,get_temp@temp+1
  8017  002F5E  C043  F05B         	movff	?___fladd+2,get_temp@temp+2
  8018  002F62  C044  F05C         	movff	?___fladd+3,get_temp@temp+3
  8019                           
  8020                           ;temp_adc.c: 18:   return temp;
  8021  002F66  C059  F051         	movff	get_temp@temp,?_get_temp
  8022  002F6A  C05A  F052         	movff	get_temp@temp+1,?_get_temp+1
  8023  002F6E  C05B  F053         	movff	get_temp@temp+2,?_get_temp+2
  8024  002F72  C05C  F054         	movff	get_temp@temp+3,?_get_temp+3
  8025  002F76  0012               	return		;funcret
  8026  002F78                     __end_of_get_temp:
  8027                           	opt callstack 0
  8028                           
  8029 ;; *************** function ___xxtofl *****************
  8030 ;; Defined at:
  8031 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  sign            1    wreg     unsigned char 
  8034 ;;  val             4    0[COMRAM] long 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  sign            1    8[COMRAM] unsigned char 
  8037 ;;  arg             4   10[COMRAM] unsigned long 
  8038 ;;  exp             1    9[COMRAM] unsigned char 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  4    0[COMRAM] unsigned char 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2, status,0
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8048 ;;      Params:         4       0       0       0       0       0       0
  8049 ;;      Locals:         6       0       0       0       0       0       0
  8050 ;;      Temps:          4       0       0       0       0       0       0
  8051 ;;      Totals:        14       0       0       0       0       0       0
  8052 ;;Total ram usage:       14 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    2
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_get_temp
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text41
  8063  002A02                     __ptext41:
  8064                           	opt callstack 0
  8065  002A02                     ___xxtofl:
  8066                           	opt callstack 27
  8067                           
  8068                           ;incstack = 0
  8069                           ;___xxtofl@sign stored from wreg
  8070  002A02  6E09               	movwf	___xxtofl@sign,c
  8071  002A04  5009               	movf	___xxtofl@sign,w,c
  8072  002A06  A4D8               	btfss	status,2,c
  8073  002A08  AE04               	btfss	___xxtofl@val+3,7,c
  8074  002A0A  D01A               	goto	l1195
  8075  002A0C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8076  002A10  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8077  002A14  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8078  002A18  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8079  002A1C  1E05               	comf	??___xxtofl,f,c
  8080  002A1E  1E06               	comf	??___xxtofl+1,f,c
  8081  002A20  1E07               	comf	??___xxtofl+2,f,c
  8082  002A22  1E08               	comf	??___xxtofl+3,f,c
  8083  002A24  2A05               	incf	??___xxtofl,f,c
  8084  002A26  0E00               	movlw	0
  8085  002A28  2206               	addwfc	??___xxtofl+1,f,c
  8086  002A2A  2207               	addwfc	??___xxtofl+2,f,c
  8087  002A2C  2208               	addwfc	??___xxtofl+3,f,c
  8088  002A2E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8089  002A32  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8090  002A36  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8091  002A3A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8092  002A3E  D008               	goto	l4878
  8093  002A40                     l1195:
  8094  002A40  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8095  002A44  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8096  002A48  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8097  002A4C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8098  002A50                     l4878:
  8099  002A50  5001               	movf	___xxtofl@val,w,c
  8100  002A52  1002               	iorwf	___xxtofl@val+1,w,c
  8101  002A54  1003               	iorwf	___xxtofl@val+2,w,c
  8102  002A56  1004               	iorwf	___xxtofl@val+3,w,c
  8103  002A58  A4D8               	btfss	status,2,c
  8104  002A5A  D009               	goto	l4884
  8105  002A5C  0E00               	movlw	0
  8106  002A5E  6E01               	movwf	?___xxtofl,c
  8107  002A60  0E00               	movlw	0
  8108  002A62  6E02               	movwf	?___xxtofl+1,c
  8109  002A64  0E00               	movlw	0
  8110  002A66  6E03               	movwf	?___xxtofl+2,c
  8111  002A68  0E00               	movlw	0
  8112  002A6A  6E04               	movwf	?___xxtofl+3,c
  8113  002A6C  0012               	return	
  8114  002A6E                     l4884:
  8115  002A6E  0E96               	movlw	150
  8116  002A70  6E0A               	movwf	___xxtofl@exp,c
  8117  002A72  D006               	goto	l4888
  8118  002A74                     l4886:
  8119  002A74  2A0A               	incf	___xxtofl@exp,f,c
  8120  002A76  90D8               	bcf	status,0,c
  8121  002A78  320E               	rrcf	___xxtofl@arg+3,f,c
  8122  002A7A  320D               	rrcf	___xxtofl@arg+2,f,c
  8123  002A7C  320C               	rrcf	___xxtofl@arg+1,f,c
  8124  002A7E  320B               	rrcf	___xxtofl@arg,f,c
  8125  002A80                     l4888:
  8126  002A80  0E00               	movlw	0
  8127  002A82  140B               	andwf	___xxtofl@arg,w,c
  8128  002A84  6E05               	movwf	??___xxtofl& (0+255),c
  8129  002A86  0E00               	movlw	0
  8130  002A88  140C               	andwf	___xxtofl@arg+1,w,c
  8131  002A8A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8132  002A8C  0E00               	movlw	0
  8133  002A8E  140D               	andwf	___xxtofl@arg+2,w,c
  8134  002A90  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8135  002A92  0EFE               	movlw	254
  8136  002A94  140E               	andwf	___xxtofl@arg+3,w,c
  8137  002A96  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8138  002A98  5005               	movf	??___xxtofl,w,c
  8139  002A9A  1006               	iorwf	??___xxtofl+1,w,c
  8140  002A9C  1007               	iorwf	??___xxtofl+2,w,c
  8141  002A9E  1008               	iorwf	??___xxtofl+3,w,c
  8142  002AA0  B4D8               	btfsc	status,2,c
  8143  002AA2  D00D               	goto	l1202
  8144  002AA4  D7E7               	goto	l4886
  8145  002AA6                     l4890:
  8146  002AA6  2A0A               	incf	___xxtofl@exp,f,c
  8147  002AA8  0E01               	movlw	1
  8148  002AAA  260B               	addwf	___xxtofl@arg,f,c
  8149  002AAC  0E00               	movlw	0
  8150  002AAE  220C               	addwfc	___xxtofl@arg+1,f,c
  8151  002AB0  220D               	addwfc	___xxtofl@arg+2,f,c
  8152  002AB2  220E               	addwfc	___xxtofl@arg+3,f,c
  8153  002AB4  90D8               	bcf	status,0,c
  8154  002AB6  320E               	rrcf	___xxtofl@arg+3,f,c
  8155  002AB8  320D               	rrcf	___xxtofl@arg+2,f,c
  8156  002ABA  320C               	rrcf	___xxtofl@arg+1,f,c
  8157  002ABC  320B               	rrcf	___xxtofl@arg,f,c
  8158  002ABE                     l1202:
  8159  002ABE  0E00               	movlw	0
  8160  002AC0  140B               	andwf	___xxtofl@arg,w,c
  8161  002AC2  6E05               	movwf	??___xxtofl& (0+255),c
  8162  002AC4  0E00               	movlw	0
  8163  002AC6  140C               	andwf	___xxtofl@arg+1,w,c
  8164  002AC8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8165  002ACA  0E00               	movlw	0
  8166  002ACC  140D               	andwf	___xxtofl@arg+2,w,c
  8167  002ACE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8168  002AD0  0EFF               	movlw	255
  8169  002AD2  140E               	andwf	___xxtofl@arg+3,w,c
  8170  002AD4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8171  002AD6  5005               	movf	??___xxtofl,w,c
  8172  002AD8  1006               	iorwf	??___xxtofl+1,w,c
  8173  002ADA  1007               	iorwf	??___xxtofl+2,w,c
  8174  002ADC  1008               	iorwf	??___xxtofl+3,w,c
  8175  002ADE  B4D8               	btfsc	status,2,c
  8176  002AE0  D007               	goto	l4898
  8177  002AE2  D7E1               	goto	l4890
  8178  002AE4                     l4896:
  8179  002AE4  060A               	decf	___xxtofl@exp,f,c
  8180  002AE6  90D8               	bcf	status,0,c
  8181  002AE8  360B               	rlcf	___xxtofl@arg,f,c
  8182  002AEA  360C               	rlcf	___xxtofl@arg+1,f,c
  8183  002AEC  360D               	rlcf	___xxtofl@arg+2,f,c
  8184  002AEE  360E               	rlcf	___xxtofl@arg+3,f,c
  8185  002AF0                     l4898:
  8186  002AF0  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8187  002AF2  D003               	goto	u5580
  8188  002AF4  0E02               	movlw	2
  8189  002AF6  600A               	cpfslt	___xxtofl@exp,c
  8190  002AF8  D7F5               	goto	l4896
  8191  002AFA                     u5580:
  8192  002AFA  A00A               	btfss	___xxtofl@exp,0,c
  8193  002AFC  9E0D               	bcf	___xxtofl@arg+2,7,c
  8194  002AFE  90D8               	bcf	status,0,c
  8195  002B00  320A               	rrcf	___xxtofl@exp,f,c
  8196  002B02  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8197  002B06  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8198  002B08  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8199  002B0A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8200  002B0C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8201  002B10  6A07               	clrf	??___xxtofl+2,c
  8202  002B12  6A06               	clrf	??___xxtofl+1,c
  8203  002B14  6A05               	clrf	??___xxtofl,c
  8204  002B16  5005               	movf	??___xxtofl,w,c
  8205  002B18  120B               	iorwf	___xxtofl@arg,f,c
  8206  002B1A  5006               	movf	??___xxtofl+1,w,c
  8207  002B1C  120C               	iorwf	___xxtofl@arg+1,f,c
  8208  002B1E  5007               	movf	??___xxtofl+2,w,c
  8209  002B20  120D               	iorwf	___xxtofl@arg+2,f,c
  8210  002B22  5008               	movf	??___xxtofl+3,w,c
  8211  002B24  120E               	iorwf	___xxtofl@arg+3,f,c
  8212  002B26  5009               	movf	___xxtofl@sign,w,c
  8213  002B28  A4D8               	btfss	status,2,c
  8214  002B2A  AE04               	btfss	___xxtofl@val+3,7,c
  8215  002B2C  D001               	goto	l4914
  8216  002B2E  8E0E               	bsf	___xxtofl@arg+3,7,c
  8217  002B30                     l4914:
  8218  002B30  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8219  002B34  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8220  002B38  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8221  002B3C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8222  002B40  0012               	return		;funcret
  8223  002B42                     __end_of___xxtofl:
  8224                           	opt callstack 0
  8225                           
  8226 ;; *************** function ___flmul *****************
  8227 ;; Defined at:
  8228 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  b               4   14[COMRAM] unsigned char 
  8231 ;;  a               4   18[COMRAM] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  prod            4   33[COMRAM] struct .
  8234 ;;  grs             4   27[COMRAM] unsigned long 
  8235 ;;  temp            2   37[COMRAM] struct .
  8236 ;;  bexp            1   32[COMRAM] unsigned char 
  8237 ;;  aexp            1   31[COMRAM] unsigned char 
  8238 ;;  sign            1   26[COMRAM] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  4   14[COMRAM] unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0, prodl, prodh
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8248 ;;      Params:         8       0       0       0       0       0       0
  8249 ;;      Locals:        13       0       0       0       0       0       0
  8250 ;;      Temps:          4       0       0       0       0       0       0
  8251 ;;      Totals:        25       0       0       0       0       0       0
  8252 ;;Total ram usage:       25 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    2
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_get_temp
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text42
  8263  0016EC                     __ptext42:
  8264                           	opt callstack 0
  8265  0016EC                     ___flmul:
  8266                           	opt callstack 27
  8267                           
  8268                           ;incstack = 0
  8269  0016EC  5012               	movf	___flmul@b+3,w,c
  8270  0016EE  0B80               	andlw	128
  8271  0016F0  6E1B               	movwf	___flmul@sign,c
  8272  0016F2  5012               	movf	___flmul@b+3,w,c
  8273  0016F4  2412               	addwf	___flmul@b+3,w,c
  8274  0016F6  6E21               	movwf	___flmul@bexp,c
  8275  0016F8  BE11               	btfsc	___flmul@b+2,7,c
  8276  0016FA  8021               	bsf	___flmul@bexp,0,c
  8277  0016FC  5021               	movf	___flmul@bexp,w,c
  8278  0016FE  B4D8               	btfsc	status,2,c
  8279  001700  D00D               	goto	l4756
  8280  001702  2821               	incf	___flmul@bexp,w,c
  8281  001704  A4D8               	btfss	status,2,c
  8282  001706  D008               	goto	l4754
  8283  001708  0E00               	movlw	0
  8284  00170A  6E0F               	movwf	___flmul@b,c
  8285  00170C  0E00               	movlw	0
  8286  00170E  6E10               	movwf	___flmul@b+1,c
  8287  001710  0E00               	movlw	0
  8288  001712  6E11               	movwf	___flmul@b+2,c
  8289  001714  0E00               	movlw	0
  8290  001716  6E12               	movwf	___flmul@b+3,c
  8291  001718                     l4754:
  8292  001718  8E11               	bsf	___flmul@b+2,7,c
  8293  00171A  D008               	goto	l4758
  8294  00171C                     l4756:
  8295  00171C  0E00               	movlw	0
  8296  00171E  6E0F               	movwf	___flmul@b,c
  8297  001720  0E00               	movlw	0
  8298  001722  6E10               	movwf	___flmul@b+1,c
  8299  001724  0E00               	movlw	0
  8300  001726  6E11               	movwf	___flmul@b+2,c
  8301  001728  0E00               	movlw	0
  8302  00172A  6E12               	movwf	___flmul@b+3,c
  8303  00172C                     l4758:
  8304  00172C  5016               	movf	___flmul@a+3,w,c
  8305  00172E  0B80               	andlw	128
  8306  001730  1A1B               	xorwf	___flmul@sign,f,c
  8307  001732  5016               	movf	___flmul@a+3,w,c
  8308  001734  2416               	addwf	___flmul@a+3,w,c
  8309  001736  6E20               	movwf	___flmul@aexp,c
  8310  001738  BE15               	btfsc	___flmul@a+2,7,c
  8311  00173A  8020               	bsf	___flmul@aexp,0,c
  8312  00173C  5020               	movf	___flmul@aexp,w,c
  8313  00173E  B4D8               	btfsc	status,2,c
  8314  001740  D00D               	goto	l4774
  8315  001742  2820               	incf	___flmul@aexp,w,c
  8316  001744  A4D8               	btfss	status,2,c
  8317  001746  D008               	goto	l4772
  8318  001748  0E00               	movlw	0
  8319  00174A  6E13               	movwf	___flmul@a,c
  8320  00174C  0E00               	movlw	0
  8321  00174E  6E14               	movwf	___flmul@a+1,c
  8322  001750  0E00               	movlw	0
  8323  001752  6E15               	movwf	___flmul@a+2,c
  8324  001754  0E00               	movlw	0
  8325  001756  6E16               	movwf	___flmul@a+3,c
  8326  001758                     l4772:
  8327  001758  8E15               	bsf	___flmul@a+2,7,c
  8328  00175A  D008               	goto	l1154
  8329  00175C                     l4774:
  8330  00175C  0E00               	movlw	0
  8331  00175E  6E13               	movwf	___flmul@a,c
  8332  001760  0E00               	movlw	0
  8333  001762  6E14               	movwf	___flmul@a+1,c
  8334  001764  0E00               	movlw	0
  8335  001766  6E15               	movwf	___flmul@a+2,c
  8336  001768  0E00               	movlw	0
  8337  00176A  6E16               	movwf	___flmul@a+3,c
  8338  00176C                     l1154:
  8339  00176C  5020               	movf	___flmul@aexp,w,c
  8340  00176E  B4D8               	btfsc	status,2,c
  8341  001770  D003               	goto	u5400
  8342  001772  5021               	movf	___flmul@bexp,w,c
  8343  001774  A4D8               	btfss	status,2,c
  8344  001776  D009               	goto	l4782
  8345  001778                     u5400:
  8346  001778  0E00               	movlw	0
  8347  00177A  6E0F               	movwf	?___flmul,c
  8348  00177C  0E00               	movlw	0
  8349  00177E  6E10               	movwf	?___flmul+1,c
  8350  001780  0E00               	movlw	0
  8351  001782  6E11               	movwf	?___flmul+2,c
  8352  001784  0E00               	movlw	0
  8353  001786  6E12               	movwf	?___flmul+3,c
  8354  001788  0012               	return	
  8355  00178A                     l4782:
  8356  00178A  5015               	movf	___flmul@a+2,w,c
  8357  00178C  020F               	mulwf	___flmul@b,c
  8358  00178E  CFF3 F026          	movff	prodl,___flmul@temp
  8359  001792  CFF4 F027          	movff	prodh,___flmul@temp+1
  8360  001796  5026               	movf	___flmul@temp,w,c
  8361  001798  6E1C               	movwf	___flmul@grs,c
  8362  00179A  6A1D               	clrf	___flmul@grs+1,c
  8363  00179C  6A1E               	clrf	___flmul@grs+2,c
  8364  00179E  6A1F               	clrf	___flmul@grs+3,c
  8365  0017A0  5027               	movf	___flmul@temp+1,w,c
  8366  0017A2  6E22               	movwf	___flmul@prod,c
  8367  0017A4  6A23               	clrf	___flmul@prod+1,c
  8368  0017A6  6A24               	clrf	___flmul@prod+2,c
  8369  0017A8  6A25               	clrf	___flmul@prod+3,c
  8370  0017AA  5014               	movf	___flmul@a+1,w,c
  8371  0017AC  0210               	mulwf	___flmul@b+1,c
  8372  0017AE  CFF3 F026          	movff	prodl,___flmul@temp
  8373  0017B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  8374  0017B6  5026               	movf	___flmul@temp,w,c
  8375  0017B8  261C               	addwf	___flmul@grs,f,c
  8376  0017BA  0E00               	movlw	0
  8377  0017BC  221D               	addwfc	___flmul@grs+1,f,c
  8378  0017BE  221E               	addwfc	___flmul@grs+2,f,c
  8379  0017C0  221F               	addwfc	___flmul@grs+3,f,c
  8380  0017C2  5027               	movf	___flmul@temp+1,w,c
  8381  0017C4  2622               	addwf	___flmul@prod,f,c
  8382  0017C6  0E00               	movlw	0
  8383  0017C8  2223               	addwfc	___flmul@prod+1,f,c
  8384  0017CA  2224               	addwfc	___flmul@prod+2,f,c
  8385  0017CC  2225               	addwfc	___flmul@prod+3,f,c
  8386  0017CE  5013               	movf	___flmul@a,w,c
  8387  0017D0  0211               	mulwf	___flmul@b+2,c
  8388  0017D2  CFF3 F026          	movff	prodl,___flmul@temp
  8389  0017D6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8390  0017DA  5026               	movf	___flmul@temp,w,c
  8391  0017DC  261C               	addwf	___flmul@grs,f,c
  8392  0017DE  0E00               	movlw	0
  8393  0017E0  221D               	addwfc	___flmul@grs+1,f,c
  8394  0017E2  221E               	addwfc	___flmul@grs+2,f,c
  8395  0017E4  221F               	addwfc	___flmul@grs+3,f,c
  8396  0017E6  5027               	movf	___flmul@temp+1,w,c
  8397  0017E8  2622               	addwf	___flmul@prod,f,c
  8398  0017EA  0E00               	movlw	0
  8399  0017EC  2223               	addwfc	___flmul@prod+1,f,c
  8400  0017EE  2224               	addwfc	___flmul@prod+2,f,c
  8401  0017F0  2225               	addwfc	___flmul@prod+3,f,c
  8402  0017F2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8403  0017F6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8404  0017FA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8405  0017FE  6A1C               	clrf	___flmul@grs,c
  8406  001800  5013               	movf	___flmul@a,w,c
  8407  001802  0210               	mulwf	___flmul@b+1,c
  8408  001804  CFF3 F026          	movff	prodl,___flmul@temp
  8409  001808  CFF4 F027          	movff	prodh,___flmul@temp+1
  8410  00180C  5026               	movf	___flmul@temp,w,c
  8411  00180E  261C               	addwf	___flmul@grs,f,c
  8412  001810  5027               	movf	___flmul@temp+1,w,c
  8413  001812  221D               	addwfc	___flmul@grs+1,f,c
  8414  001814  0E00               	movlw	0
  8415  001816  221E               	addwfc	___flmul@grs+2,f,c
  8416  001818  0E00               	movlw	0
  8417  00181A  221F               	addwfc	___flmul@grs+3,f,c
  8418  00181C  5014               	movf	___flmul@a+1,w,c
  8419  00181E  020F               	mulwf	___flmul@b,c
  8420  001820  CFF3 F026          	movff	prodl,___flmul@temp
  8421  001824  CFF4 F027          	movff	prodh,___flmul@temp+1
  8422  001828  5026               	movf	___flmul@temp,w,c
  8423  00182A  261C               	addwf	___flmul@grs,f,c
  8424  00182C  5027               	movf	___flmul@temp+1,w,c
  8425  00182E  221D               	addwfc	___flmul@grs+1,f,c
  8426  001830  0E00               	movlw	0
  8427  001832  221E               	addwfc	___flmul@grs+2,f,c
  8428  001834  0E00               	movlw	0
  8429  001836  221F               	addwfc	___flmul@grs+3,f,c
  8430  001838  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8431  00183C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8432  001840  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8433  001844  6A1C               	clrf	___flmul@grs,c
  8434  001846  5013               	movf	___flmul@a,w,c
  8435  001848  020F               	mulwf	___flmul@b,c
  8436  00184A  CFF3 F026          	movff	prodl,___flmul@temp
  8437  00184E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8438  001852  5026               	movf	___flmul@temp,w,c
  8439  001854  261C               	addwf	___flmul@grs,f,c
  8440  001856  5027               	movf	___flmul@temp+1,w,c
  8441  001858  221D               	addwfc	___flmul@grs+1,f,c
  8442  00185A  0E00               	movlw	0
  8443  00185C  221E               	addwfc	___flmul@grs+2,f,c
  8444  00185E  0E00               	movlw	0
  8445  001860  221F               	addwfc	___flmul@grs+3,f,c
  8446  001862  5015               	movf	___flmul@a+2,w,c
  8447  001864  0210               	mulwf	___flmul@b+1,c
  8448  001866  CFF3 F026          	movff	prodl,___flmul@temp
  8449  00186A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8450  00186E  5026               	movf	___flmul@temp,w,c
  8451  001870  2622               	addwf	___flmul@prod,f,c
  8452  001872  5027               	movf	___flmul@temp+1,w,c
  8453  001874  2223               	addwfc	___flmul@prod+1,f,c
  8454  001876  0E00               	movlw	0
  8455  001878  2224               	addwfc	___flmul@prod+2,f,c
  8456  00187A  0E00               	movlw	0
  8457  00187C  2225               	addwfc	___flmul@prod+3,f,c
  8458  00187E  5014               	movf	___flmul@a+1,w,c
  8459  001880  0211               	mulwf	___flmul@b+2,c
  8460  001882  CFF3 F026          	movff	prodl,___flmul@temp
  8461  001886  CFF4 F027          	movff	prodh,___flmul@temp+1
  8462  00188A  5026               	movf	___flmul@temp,w,c
  8463  00188C  2622               	addwf	___flmul@prod,f,c
  8464  00188E  5027               	movf	___flmul@temp+1,w,c
  8465  001890  2223               	addwfc	___flmul@prod+1,f,c
  8466  001892  0E00               	movlw	0
  8467  001894  2224               	addwfc	___flmul@prod+2,f,c
  8468  001896  0E00               	movlw	0
  8469  001898  2225               	addwfc	___flmul@prod+3,f,c
  8470  00189A  5015               	movf	___flmul@a+2,w,c
  8471  00189C  0211               	mulwf	___flmul@b+2,c
  8472  00189E  CFF3 F026          	movff	prodl,___flmul@temp
  8473  0018A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  8474  0018A6  5026               	movf	___flmul@temp,w,c
  8475  0018A8  6E17               	movwf	??___flmul& (0+255),c
  8476  0018AA  5027               	movf	___flmul@temp+1,w,c
  8477  0018AC  6E18               	movwf	(??___flmul+1)& (0+255),c
  8478  0018AE  6A19               	clrf	(??___flmul+2)& (0+255),c
  8479  0018B0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8480  0018B2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8481  0018B6  C018  F019         	movff	??___flmul+1,??___flmul+2
  8482  0018BA  C017  F018         	movff	??___flmul,??___flmul+1
  8483  0018BE  6A17               	clrf	??___flmul,c
  8484  0018C0  5017               	movf	??___flmul,w,c
  8485  0018C2  2622               	addwf	___flmul@prod,f,c
  8486  0018C4  5018               	movf	??___flmul+1,w,c
  8487  0018C6  2223               	addwfc	___flmul@prod+1,f,c
  8488  0018C8  5019               	movf	??___flmul+2,w,c
  8489  0018CA  2224               	addwfc	___flmul@prod+2,f,c
  8490  0018CC  501A               	movf	??___flmul+3,w,c
  8491  0018CE  2225               	addwfc	___flmul@prod+3,f,c
  8492  0018D0  C01C  F017         	movff	___flmul@grs,??___flmul
  8493  0018D4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8494  0018D8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8495  0018DC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8496  0018E0  0E19               	movlw	25
  8497  0018E2  D005               	goto	u5410
  8498  0018E4                     u5415:
  8499  0018E4  90D8               	bcf	status,0,c
  8500  0018E6  321A               	rrcf	??___flmul+3,f,c
  8501  0018E8  3219               	rrcf	??___flmul+2,f,c
  8502  0018EA  3218               	rrcf	??___flmul+1,f,c
  8503  0018EC  3217               	rrcf	??___flmul,f,c
  8504  0018EE                     u5410:
  8505  0018EE  2EE8               	decfsz	wreg,f,c
  8506  0018F0  D7F9               	goto	u5415
  8507  0018F2  5017               	movf	??___flmul,w,c
  8508  0018F4  2622               	addwf	___flmul@prod,f,c
  8509  0018F6  5018               	movf	??___flmul+1,w,c
  8510  0018F8  2223               	addwfc	___flmul@prod+1,f,c
  8511  0018FA  5019               	movf	??___flmul+2,w,c
  8512  0018FC  2224               	addwfc	___flmul@prod+2,f,c
  8513  0018FE  501A               	movf	??___flmul+3,w,c
  8514  001900  2225               	addwfc	___flmul@prod+3,f,c
  8515  001902  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8516  001906  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8517  00190A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8518  00190E  6A1C               	clrf	___flmul@grs,c
  8519  001910  5020               	movf	___flmul@aexp,w,c
  8520  001912  C021  F017         	movff	___flmul@bexp,??___flmul
  8521  001916  6A18               	clrf	(??___flmul+1)& (0+255),c
  8522  001918  2617               	addwf	??___flmul,f,c
  8523  00191A  0E00               	movlw	0
  8524  00191C  2218               	addwfc	??___flmul+1,f,c
  8525  00191E  0E82               	movlw	130
  8526  001920  2417               	addwf	??___flmul,w,c
  8527  001922  6E26               	movwf	___flmul@temp,c
  8528  001924  0EFF               	movlw	255
  8529  001926  2018               	addwfc	??___flmul+1,w,c
  8530  001928  6E27               	movwf	___flmul@temp+1,c
  8531  00192A  D00F               	goto	l4830
  8532  00192C                     l4824:
  8533  00192C  90D8               	bcf	status,0,c
  8534  00192E  3622               	rlcf	___flmul@prod,f,c
  8535  001930  3623               	rlcf	___flmul@prod+1,f,c
  8536  001932  3624               	rlcf	___flmul@prod+2,f,c
  8537  001934  3625               	rlcf	___flmul@prod+3,f,c
  8538  001936  BE1F               	btfsc	___flmul@grs+3,7,c
  8539  001938  8022               	bsf	___flmul@prod,0,c
  8540  00193A  90D8               	bcf	status,0,c
  8541  00193C  361C               	rlcf	___flmul@grs,f,c
  8542  00193E  361D               	rlcf	___flmul@grs+1,f,c
  8543  001940  361E               	rlcf	___flmul@grs+2,f,c
  8544  001942  361F               	rlcf	___flmul@grs+3,f,c
  8545  001944  0626               	decf	___flmul@temp,f,c
  8546  001946  A0D8               	btfss	status,0,c
  8547  001948  0627               	decf	___flmul@temp+1,f,c
  8548  00194A                     l4830:
  8549  00194A  AE24               	btfss	___flmul@prod+2,7,c
  8550  00194C  D7EF               	goto	l4824
  8551  00194E  0E00               	movlw	0
  8552  001950  6E20               	movwf	___flmul@aexp,c
  8553  001952  AE1F               	btfss	___flmul@grs+3,7,c
  8554  001954  D017               	goto	l1163
  8555  001956  0EFF               	movlw	255
  8556  001958  141C               	andwf	___flmul@grs,w,c
  8557  00195A  6E17               	movwf	??___flmul& (0+255),c
  8558  00195C  0EFF               	movlw	255
  8559  00195E  141D               	andwf	___flmul@grs+1,w,c
  8560  001960  6E18               	movwf	(??___flmul+1)& (0+255),c
  8561  001962  0EFF               	movlw	255
  8562  001964  141E               	andwf	___flmul@grs+2,w,c
  8563  001966  6E19               	movwf	(??___flmul+2)& (0+255),c
  8564  001968  0E7F               	movlw	127
  8565  00196A  141F               	andwf	___flmul@grs+3,w,c
  8566  00196C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  8567  00196E  5017               	movf	??___flmul,w,c
  8568  001970  1018               	iorwf	??___flmul+1,w,c
  8569  001972  1019               	iorwf	??___flmul+2,w,c
  8570  001974  101A               	iorwf	??___flmul+3,w,c
  8571  001976  B4D8               	btfsc	status,2,c
  8572  001978  D003               	goto	l1164
  8573  00197A                     u5450:
  8574  00197A  0E01               	movlw	1
  8575  00197C  6E20               	movwf	___flmul@aexp,c
  8576  00197E  D002               	goto	l1163
  8577  001980                     l1164:
  8578  001980  B022               	btfsc	___flmul@prod,0,c
  8579  001982  D7FB               	goto	u5450
  8580  001984                     l1163:
  8581  001984  5020               	movf	___flmul@aexp,w,c
  8582  001986  B4D8               	btfsc	status,2,c
  8583  001988  D01F               	goto	l4850
  8584  00198A  0E01               	movlw	1
  8585  00198C  2622               	addwf	___flmul@prod,f,c
  8586  00198E  0E00               	movlw	0
  8587  001990  2223               	addwfc	___flmul@prod+1,f,c
  8588  001992  2224               	addwfc	___flmul@prod+2,f,c
  8589  001994  2225               	addwfc	___flmul@prod+3,f,c
  8590  001996  A025               	btfss	___flmul@prod+3,0,c
  8591  001998  D017               	goto	l4850
  8592  00199A  C022  F017         	movff	___flmul@prod,??___flmul
  8593  00199E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8594  0019A2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8595  0019A6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8596  0019AA  341A               	rlcf	??___flmul+3,w,c
  8597  0019AC  321A               	rrcf	??___flmul+3,f,c
  8598  0019AE  3219               	rrcf	??___flmul+2,f,c
  8599  0019B0  3218               	rrcf	??___flmul+1,f,c
  8600  0019B2  3217               	rrcf	??___flmul,f,c
  8601  0019B4  C017  F022         	movff	??___flmul,___flmul@prod
  8602  0019B8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8603  0019BC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8604  0019C0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8605  0019C4  4A26               	infsnz	___flmul@temp,f,c
  8606  0019C6  2A27               	incf	___flmul@temp+1,f,c
  8607  0019C8                     l4850:
  8608  0019C8  BE27               	btfsc	___flmul@temp+1,7,c
  8609  0019CA  D00D               	goto	l4854
  8610  0019CC  5027               	movf	___flmul@temp+1,w,c
  8611  0019CE  E103               	bnz	u5490
  8612  0019D0  2826               	incf	___flmul@temp,w,c
  8613  0019D2  A0D8               	btfss	status,0,c
  8614  0019D4  D008               	goto	l4854
  8615  0019D6                     u5490:
  8616  0019D6  0E00               	movlw	0
  8617  0019D8  6E22               	movwf	___flmul@prod,c
  8618  0019DA  0E00               	movlw	0
  8619  0019DC  6E23               	movwf	___flmul@prod+1,c
  8620  0019DE  0E80               	movlw	128
  8621  0019E0  6E24               	movwf	___flmul@prod+2,c
  8622  0019E2  0E7F               	movlw	127
  8623  0019E4  D020               	goto	L19
  8624  0019E6                     l4854:
  8625  0019E6  BE27               	btfsc	___flmul@temp+1,7,c
  8626  0019E8  D005               	goto	u5500
  8627  0019EA  5027               	movf	___flmul@temp+1,w,c
  8628  0019EC  E10E               	bnz	l1171
  8629  0019EE  0426               	decf	___flmul@temp,w,c
  8630  0019F0  B0D8               	btfsc	status,0,c
  8631  0019F2  D00B               	goto	l1171
  8632  0019F4                     u5500:
  8633  0019F4  0E00               	movlw	0
  8634  0019F6  6E22               	movwf	___flmul@prod,c
  8635  0019F8  0E00               	movlw	0
  8636  0019FA  6E23               	movwf	___flmul@prod+1,c
  8637  0019FC  0E00               	movlw	0
  8638  0019FE  6E24               	movwf	___flmul@prod+2,c
  8639  001A00  0E00               	movlw	0
  8640  001A02  6E25               	movwf	___flmul@prod+3,c
  8641  001A04  0E00               	movlw	0
  8642  001A06  6E1B               	movwf	___flmul@sign,c
  8643  001A08  D00F               	goto	l4866
  8644  001A0A                     l1171:
  8645  001A0A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8646  001A0E  0EFF               	movlw	255
  8647  001A10  1622               	andwf	___flmul@prod,f,c
  8648  001A12  0EFF               	movlw	255
  8649  001A14  1623               	andwf	___flmul@prod+1,f,c
  8650  001A16  0E7F               	movlw	127
  8651  001A18  1624               	andwf	___flmul@prod+2,f,c
  8652  001A1A  0E00               	movlw	0
  8653  001A1C  1625               	andwf	___flmul@prod+3,f,c
  8654  001A1E  B021               	btfsc	___flmul@bexp,0,c
  8655  001A20  8E24               	bsf	___flmul@prod+2,7,c
  8656  001A22  90D8               	bcf	status,0,c
  8657  001A24  3021               	rrcf	___flmul@bexp,w,c
  8658  001A26                     L19:
  8659  001A26  6E25               	movwf	___flmul@prod+3,c
  8660  001A28                     l4866:
  8661  001A28  501B               	movf	___flmul@sign,w,c
  8662  001A2A  1225               	iorwf	___flmul@prod+3,f,c
  8663  001A2C  C022  F00F         	movff	___flmul@prod,?___flmul
  8664  001A30  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8665  001A34  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8666  001A38  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8667  001A3C  0012               	return		;funcret
  8668  001A3E                     __end_of___flmul:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function ___fldiv *****************
  8672 ;; Defined at:
  8673 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  b               4   39[COMRAM] unsigned char 
  8676 ;;  a               4   43[COMRAM] unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  grs             4   58[COMRAM] unsigned long 
  8679 ;;  rem             4   51[COMRAM] unsigned long 
  8680 ;;  new_exp         2   56[COMRAM] short 
  8681 ;;  aexp            1   63[COMRAM] unsigned char 
  8682 ;;  bexp            1   62[COMRAM] unsigned char 
  8683 ;;  sign            1   55[COMRAM] unsigned char 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  4   39[COMRAM] unsigned char 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2, status,0
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8693 ;;      Params:         8       0       0       0       0       0       0
  8694 ;;      Locals:        13       0       0       0       0       0       0
  8695 ;;      Temps:          4       0       0       0       0       0       0
  8696 ;;      Totals:        25       0       0       0       0       0       0
  8697 ;;Total ram usage:       25 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:    2
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_get_temp
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text43
  8708  001D4A                     __ptext43:
  8709                           	opt callstack 0
  8710  001D4A                     ___fldiv:
  8711                           	opt callstack 27
  8712                           
  8713                           ;incstack = 0
  8714  001D4A  502B               	movf	___fldiv@b+3,w,c
  8715  001D4C  0B80               	andlw	128
  8716  001D4E  6E38               	movwf	___fldiv@sign,c
  8717  001D50  502B               	movf	___fldiv@b+3,w,c
  8718  001D52  242B               	addwf	___fldiv@b+3,w,c
  8719  001D54  6E3F               	movwf	___fldiv@bexp,c
  8720  001D56  BE2A               	btfsc	___fldiv@b+2,7,c
  8721  001D58  803F               	bsf	___fldiv@bexp,0,c
  8722  001D5A  503F               	movf	___fldiv@bexp,w,c
  8723  001D5C  B4D8               	btfsc	status,2,c
  8724  001D5E  D00D               	goto	l4620
  8725  001D60  283F               	incf	___fldiv@bexp,w,c
  8726  001D62  A4D8               	btfss	status,2,c
  8727  001D64  D008               	goto	l4616
  8728  001D66  0E00               	movlw	0
  8729  001D68  6E28               	movwf	___fldiv@b,c
  8730  001D6A  0E00               	movlw	0
  8731  001D6C  6E29               	movwf	___fldiv@b+1,c
  8732  001D6E  0E00               	movlw	0
  8733  001D70  6E2A               	movwf	___fldiv@b+2,c
  8734  001D72  0E00               	movlw	0
  8735  001D74  6E2B               	movwf	___fldiv@b+3,c
  8736  001D76                     l4616:
  8737  001D76  8E2A               	bsf	___fldiv@b+2,7,c
  8738  001D78  D006               	goto	L20
  8739  001D7A                     l4620:
  8740  001D7A  0E00               	movlw	0
  8741  001D7C  6E28               	movwf	___fldiv@b,c
  8742  001D7E  0E00               	movlw	0
  8743  001D80  6E29               	movwf	___fldiv@b+1,c
  8744  001D82  0E00               	movlw	0
  8745  001D84  6E2A               	movwf	___fldiv@b+2,c
  8746  001D86                     L20:
  8747  001D86  0E00               	movlw	0
  8748  001D88  6E2B               	movwf	___fldiv@b+3,c
  8749  001D8A  502F               	movf	___fldiv@a+3,w,c
  8750  001D8C  0B80               	andlw	128
  8751  001D8E  1A38               	xorwf	___fldiv@sign,f,c
  8752  001D90  502F               	movf	___fldiv@a+3,w,c
  8753  001D92  242F               	addwf	___fldiv@a+3,w,c
  8754  001D94  6E40               	movwf	___fldiv@aexp,c
  8755  001D96  BE2E               	btfsc	___fldiv@a+2,7,c
  8756  001D98  8040               	bsf	___fldiv@aexp,0,c
  8757  001D9A  5040               	movf	___fldiv@aexp,w,c
  8758  001D9C  B4D8               	btfsc	status,2,c
  8759  001D9E  D00D               	goto	l4640
  8760  001DA0  2840               	incf	___fldiv@aexp,w,c
  8761  001DA2  A4D8               	btfss	status,2,c
  8762  001DA4  D008               	goto	l4636
  8763  001DA6  0E00               	movlw	0
  8764  001DA8  6E2C               	movwf	___fldiv@a,c
  8765  001DAA  0E00               	movlw	0
  8766  001DAC  6E2D               	movwf	___fldiv@a+1,c
  8767  001DAE  0E00               	movlw	0
  8768  001DB0  6E2E               	movwf	___fldiv@a+2,c
  8769  001DB2  0E00               	movlw	0
  8770  001DB4  6E2F               	movwf	___fldiv@a+3,c
  8771  001DB6                     l4636:
  8772  001DB6  8E2E               	bsf	___fldiv@a+2,7,c
  8773  001DB8  D006               	goto	L21
  8774  001DBA                     l4640:
  8775  001DBA  0E00               	movlw	0
  8776  001DBC  6E2C               	movwf	___fldiv@a,c
  8777  001DBE  0E00               	movlw	0
  8778  001DC0  6E2D               	movwf	___fldiv@a+1,c
  8779  001DC2  0E00               	movlw	0
  8780  001DC4  6E2E               	movwf	___fldiv@a+2,c
  8781  001DC6                     L21:
  8782  001DC6  0E00               	movlw	0
  8783  001DC8  6E2F               	movwf	___fldiv@a+3,c
  8784  001DCA  502C               	movf	___fldiv@a,w,c
  8785  001DCC  102D               	iorwf	___fldiv@a+1,w,c
  8786  001DCE  102E               	iorwf	___fldiv@a+2,w,c
  8787  001DD0  102F               	iorwf	___fldiv@a+3,w,c
  8788  001DD2  A4D8               	btfss	status,2,c
  8789  001DD4  D017               	goto	l4654
  8790  001DD6  0E00               	movlw	0
  8791  001DD8  6E28               	movwf	___fldiv@b,c
  8792  001DDA  0E00               	movlw	0
  8793  001DDC  6E29               	movwf	___fldiv@b+1,c
  8794  001DDE  0E00               	movlw	0
  8795  001DE0  6E2A               	movwf	___fldiv@b+2,c
  8796  001DE2  0E00               	movlw	0
  8797  001DE4  6E2B               	movwf	___fldiv@b+3,c
  8798  001DE6  0E80               	movlw	128
  8799  001DE8  122A               	iorwf	___fldiv@b+2,f,c
  8800  001DEA  0E7F               	movlw	127
  8801  001DEC  122B               	iorwf	___fldiv@b+3,f,c
  8802  001DEE                     l4648:
  8803  001DEE  5038               	movf	___fldiv@sign,w,c
  8804  001DF0  122B               	iorwf	___fldiv@b+3,f,c
  8805  001DF2  C028  F028         	movff	___fldiv@b,?___fldiv
  8806  001DF6  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  8807  001DFA  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  8808  001DFE  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  8809  001E02  0012               	return	
  8810  001E04                     l4654:
  8811  001E04  503F               	movf	___fldiv@bexp,w,c
  8812  001E06  A4D8               	btfss	status,2,c
  8813  001E08  D009               	goto	l4662
  8814  001E0A  0E00               	movlw	0
  8815  001E0C  6E28               	movwf	?___fldiv,c
  8816  001E0E  0E00               	movlw	0
  8817  001E10  6E29               	movwf	?___fldiv+1,c
  8818  001E12  0E00               	movlw	0
  8819  001E14  6E2A               	movwf	?___fldiv+2,c
  8820  001E16  0E00               	movlw	0
  8821  001E18  6E2B               	movwf	?___fldiv+3,c
  8822  001E1A  0012               	return	
  8823  001E1C                     l4662:
  8824  001E1C  5040               	movf	___fldiv@aexp,w,c
  8825  001E1E  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  8826  001E22  6A31               	clrf	(??___fldiv+1)& (0+255),c
  8827  001E24  5E30               	subwf	??___fldiv,f,c
  8828  001E26  0E00               	movlw	0
  8829  001E28  5A31               	subwfb	??___fldiv+1,f,c
  8830  001E2A  0E7F               	movlw	127
  8831  001E2C  2430               	addwf	??___fldiv,w,c
  8832  001E2E  6E39               	movwf	___fldiv@new_exp,c
  8833  001E30  0E00               	movlw	0
  8834  001E32  2031               	addwfc	??___fldiv+1,w,c
  8835  001E34  6E3A               	movwf	___fldiv@new_exp+1,c
  8836  001E36  C028  F034         	movff	___fldiv@b,___fldiv@rem
  8837  001E3A  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  8838  001E3E  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  8839  001E42  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  8840  001E46  0E00               	movlw	0
  8841  001E48  6E28               	movwf	___fldiv@b,c
  8842  001E4A  0E00               	movlw	0
  8843  001E4C  6E29               	movwf	___fldiv@b+1,c
  8844  001E4E  0E00               	movlw	0
  8845  001E50  6E2A               	movwf	___fldiv@b+2,c
  8846  001E52  0E00               	movlw	0
  8847  001E54  6E2B               	movwf	___fldiv@b+3,c
  8848  001E56  0E00               	movlw	0
  8849  001E58  6E3B               	movwf	___fldiv@grs,c
  8850  001E5A  0E00               	movlw	0
  8851  001E5C  6E3C               	movwf	___fldiv@grs+1,c
  8852  001E5E  0E00               	movlw	0
  8853  001E60  6E3D               	movwf	___fldiv@grs+2,c
  8854  001E62  0E00               	movlw	0
  8855  001E64  6E3E               	movwf	___fldiv@grs+3,c
  8856  001E66  0E00               	movlw	0
  8857  001E68  6E40               	movwf	___fldiv@aexp,c
  8858  001E6A  D028               	goto	l1124
  8859  001E6C                     l4672:
  8860  001E6C  5040               	movf	___fldiv@aexp,w,c
  8861  001E6E  B4D8               	btfsc	status,2,c
  8862  001E70  D011               	goto	l4680
  8863  001E72  90D8               	bcf	status,0,c
  8864  001E74  3634               	rlcf	___fldiv@rem,f,c
  8865  001E76  3635               	rlcf	___fldiv@rem+1,f,c
  8866  001E78  3636               	rlcf	___fldiv@rem+2,f,c
  8867  001E7A  3637               	rlcf	___fldiv@rem+3,f,c
  8868  001E7C  90D8               	bcf	status,0,c
  8869  001E7E  3628               	rlcf	___fldiv@b,f,c
  8870  001E80  3629               	rlcf	___fldiv@b+1,f,c
  8871  001E82  362A               	rlcf	___fldiv@b+2,f,c
  8872  001E84  362B               	rlcf	___fldiv@b+3,f,c
  8873  001E86  BE3E               	btfsc	___fldiv@grs+3,7,c
  8874  001E88  8028               	bsf	___fldiv@b,0,c
  8875  001E8A  90D8               	bcf	status,0,c
  8876  001E8C  363B               	rlcf	___fldiv@grs,f,c
  8877  001E8E  363C               	rlcf	___fldiv@grs+1,f,c
  8878  001E90  363D               	rlcf	___fldiv@grs+2,f,c
  8879  001E92  363E               	rlcf	___fldiv@grs+3,f,c
  8880  001E94                     l4680:
  8881  001E94  502C               	movf	___fldiv@a,w,c
  8882  001E96  5C34               	subwf	___fldiv@rem,w,c
  8883  001E98  502D               	movf	___fldiv@a+1,w,c
  8884  001E9A  5835               	subwfb	___fldiv@rem+1,w,c
  8885  001E9C  502E               	movf	___fldiv@a+2,w,c
  8886  001E9E  5836               	subwfb	___fldiv@rem+2,w,c
  8887  001EA0  502F               	movf	___fldiv@a+3,w,c
  8888  001EA2  5837               	subwfb	___fldiv@rem+3,w,c
  8889  001EA4  A0D8               	btfss	status,0,c
  8890  001EA6  D009               	goto	l4686
  8891  001EA8  8C3E               	bsf	___fldiv@grs+3,6,c
  8892  001EAA  502C               	movf	___fldiv@a,w,c
  8893  001EAC  5E34               	subwf	___fldiv@rem,f,c
  8894  001EAE  502D               	movf	___fldiv@a+1,w,c
  8895  001EB0  5A35               	subwfb	___fldiv@rem+1,f,c
  8896  001EB2  502E               	movf	___fldiv@a+2,w,c
  8897  001EB4  5A36               	subwfb	___fldiv@rem+2,f,c
  8898  001EB6  502F               	movf	___fldiv@a+3,w,c
  8899  001EB8  5A37               	subwfb	___fldiv@rem+3,f,c
  8900  001EBA                     l4686:
  8901  001EBA  2A40               	incf	___fldiv@aexp,f,c
  8902  001EBC                     l1124:
  8903  001EBC  0E19               	movlw	25
  8904  001EBE  6440               	cpfsgt	___fldiv@aexp,c
  8905  001EC0  D7D5               	goto	l4672
  8906  001EC2  5034               	movf	___fldiv@rem,w,c
  8907  001EC4  1035               	iorwf	___fldiv@rem+1,w,c
  8908  001EC6  1036               	iorwf	___fldiv@rem+2,w,c
  8909  001EC8  1037               	iorwf	___fldiv@rem+3,w,c
  8910  001ECA  B4D8               	btfsc	status,2,c
  8911  001ECC  D011               	goto	l4698
  8912  001ECE  803B               	bsf	___fldiv@grs,0,c
  8913  001ED0  D00F               	goto	l4698
  8914  001ED2                     l4692:
  8915  001ED2  90D8               	bcf	status,0,c
  8916  001ED4  3628               	rlcf	___fldiv@b,f,c
  8917  001ED6  3629               	rlcf	___fldiv@b+1,f,c
  8918  001ED8  362A               	rlcf	___fldiv@b+2,f,c
  8919  001EDA  362B               	rlcf	___fldiv@b+3,f,c
  8920  001EDC  BE3E               	btfsc	___fldiv@grs+3,7,c
  8921  001EDE  8028               	bsf	___fldiv@b,0,c
  8922  001EE0  90D8               	bcf	status,0,c
  8923  001EE2  363B               	rlcf	___fldiv@grs,f,c
  8924  001EE4  363C               	rlcf	___fldiv@grs+1,f,c
  8925  001EE6  363D               	rlcf	___fldiv@grs+2,f,c
  8926  001EE8  363E               	rlcf	___fldiv@grs+3,f,c
  8927  001EEA  0639               	decf	___fldiv@new_exp,f,c
  8928  001EEC  A0D8               	btfss	status,0,c
  8929  001EEE  063A               	decf	___fldiv@new_exp+1,f,c
  8930  001EF0                     l4698:
  8931  001EF0  AE2A               	btfss	___fldiv@b+2,7,c
  8932  001EF2  D7EF               	goto	l4692
  8933  001EF4  0E00               	movlw	0
  8934  001EF6  6E40               	movwf	___fldiv@aexp,c
  8935  001EF8  AE3E               	btfss	___fldiv@grs+3,7,c
  8936  001EFA  D017               	goto	l1135
  8937  001EFC  0EFF               	movlw	255
  8938  001EFE  143B               	andwf	___fldiv@grs,w,c
  8939  001F00  6E30               	movwf	??___fldiv& (0+255),c
  8940  001F02  0EFF               	movlw	255
  8941  001F04  143C               	andwf	___fldiv@grs+1,w,c
  8942  001F06  6E31               	movwf	(??___fldiv+1)& (0+255),c
  8943  001F08  0EFF               	movlw	255
  8944  001F0A  143D               	andwf	___fldiv@grs+2,w,c
  8945  001F0C  6E32               	movwf	(??___fldiv+2)& (0+255),c
  8946  001F0E  0E7F               	movlw	127
  8947  001F10  143E               	andwf	___fldiv@grs+3,w,c
  8948  001F12  6E33               	movwf	(??___fldiv+3)& (0+255),c
  8949  001F14  5030               	movf	??___fldiv,w,c
  8950  001F16  1031               	iorwf	??___fldiv+1,w,c
  8951  001F18  1032               	iorwf	??___fldiv+2,w,c
  8952  001F1A  1033               	iorwf	??___fldiv+3,w,c
  8953  001F1C  B4D8               	btfsc	status,2,c
  8954  001F1E  D003               	goto	l1136
  8955  001F20                     u5260:
  8956  001F20  0E01               	movlw	1
  8957  001F22  6E40               	movwf	___fldiv@aexp,c
  8958  001F24  D002               	goto	l1135
  8959  001F26                     l1136:
  8960  001F26  B028               	btfsc	___fldiv@b,0,c
  8961  001F28  D7FB               	goto	u5260
  8962  001F2A                     l1135:
  8963  001F2A  5040               	movf	___fldiv@aexp,w,c
  8964  001F2C  B4D8               	btfsc	status,2,c
  8965  001F2E  D01F               	goto	l4718
  8966  001F30  0E01               	movlw	1
  8967  001F32  2628               	addwf	___fldiv@b,f,c
  8968  001F34  0E00               	movlw	0
  8969  001F36  2229               	addwfc	___fldiv@b+1,f,c
  8970  001F38  222A               	addwfc	___fldiv@b+2,f,c
  8971  001F3A  222B               	addwfc	___fldiv@b+3,f,c
  8972  001F3C  A02B               	btfss	___fldiv@b+3,0,c
  8973  001F3E  D017               	goto	l4718
  8974  001F40  C028  F030         	movff	___fldiv@b,??___fldiv
  8975  001F44  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  8976  001F48  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  8977  001F4C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  8978  001F50  3433               	rlcf	??___fldiv+3,w,c
  8979  001F52  3233               	rrcf	??___fldiv+3,f,c
  8980  001F54  3232               	rrcf	??___fldiv+2,f,c
  8981  001F56  3231               	rrcf	??___fldiv+1,f,c
  8982  001F58  3230               	rrcf	??___fldiv,f,c
  8983  001F5A  C030  F028         	movff	??___fldiv,___fldiv@b
  8984  001F5E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  8985  001F62  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  8986  001F66  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  8987  001F6A  4A39               	infsnz	___fldiv@new_exp,f,c
  8988  001F6C  2A3A               	incf	___fldiv@new_exp+1,f,c
  8989  001F6E                     l4718:
  8990  001F6E  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  8991  001F70  D010               	goto	l4722
  8992  001F72  503A               	movf	___fldiv@new_exp+1,w,c
  8993  001F74  E103               	bnz	u5300
  8994  001F76  2839               	incf	___fldiv@new_exp,w,c
  8995  001F78  A0D8               	btfss	status,0,c
  8996  001F7A  D00B               	goto	l4722
  8997  001F7C                     u5300:
  8998  001F7C  0E00               	movlw	0
  8999  001F7E  6E3A               	movwf	___fldiv@new_exp+1,c
  9000  001F80  6839               	setf	___fldiv@new_exp,c
  9001  001F82  0E00               	movlw	0
  9002  001F84  6E28               	movwf	___fldiv@b,c
  9003  001F86  0E00               	movlw	0
  9004  001F88  6E29               	movwf	___fldiv@b+1,c
  9005  001F8A  0E00               	movlw	0
  9006  001F8C  6E2A               	movwf	___fldiv@b+2,c
  9007  001F8E  0E00               	movlw	0
  9008  001F90  6E2B               	movwf	___fldiv@b+3,c
  9009  001F92                     l4722:
  9010  001F92  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  9011  001F94  D005               	goto	u5310
  9012  001F96  503A               	movf	___fldiv@new_exp+1,w,c
  9013  001F98  E111               	bnz	l4726
  9014  001F9A  0439               	decf	___fldiv@new_exp,w,c
  9015  001F9C  B0D8               	btfsc	status,0,c
  9016  001F9E  D00E               	goto	l4726
  9017  001FA0                     u5310:
  9018  001FA0  0E00               	movlw	0
  9019  001FA2  6E3A               	movwf	___fldiv@new_exp+1,c
  9020  001FA4  0E00               	movlw	0
  9021  001FA6  6E39               	movwf	___fldiv@new_exp,c
  9022  001FA8  0E00               	movlw	0
  9023  001FAA  6E28               	movwf	___fldiv@b,c
  9024  001FAC  0E00               	movlw	0
  9025  001FAE  6E29               	movwf	___fldiv@b+1,c
  9026  001FB0  0E00               	movlw	0
  9027  001FB2  6E2A               	movwf	___fldiv@b+2,c
  9028  001FB4  0E00               	movlw	0
  9029  001FB6  6E2B               	movwf	___fldiv@b+3,c
  9030  001FB8  0E00               	movlw	0
  9031  001FBA  6E38               	movwf	___fldiv@sign,c
  9032  001FBC                     l4726:
  9033  001FBC  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  9034  001FC0  A03F               	btfss	___fldiv@bexp,0,c
  9035  001FC2  D002               	goto	l4732
  9036  001FC4  8E2A               	bsf	___fldiv@b+2,7,c
  9037  001FC6  D001               	goto	l4734
  9038  001FC8                     l4732:
  9039  001FC8  9E2A               	bcf	___fldiv@b+2,7,c
  9040  001FCA                     l4734:
  9041  001FCA  90D8               	bcf	status,0,c
  9042  001FCC  303F               	rrcf	___fldiv@bexp,w,c
  9043  001FCE  6E2B               	movwf	___fldiv@b+3,c
  9044  001FD0  D70E               	goto	l4648
  9045  001FD2                     __end_of___fldiv:
  9046                           	opt callstack 0
  9047                           
  9048 ;; *************** function ___fladd *****************
  9049 ;; Defined at:
  9050 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  b               4   64[COMRAM] unsigned char 
  9053 ;;  a               4   68[COMRAM] unsigned char 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  grs             1   79[COMRAM] unsigned char 
  9056 ;;  bexp            1   78[COMRAM] unsigned char 
  9057 ;;  aexp            1   77[COMRAM] unsigned char 
  9058 ;;  signs           1   76[COMRAM] unsigned char 
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  4   64[COMRAM] unsigned char 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9068 ;;      Params:         8       0       0       0       0       0       0
  9069 ;;      Locals:         4       0       0       0       0       0       0
  9070 ;;      Temps:          4       0       0       0       0       0       0
  9071 ;;      Totals:        16       0       0       0       0       0       0
  9072 ;;Total ram usage:       16 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    2
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_get_temp
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text44
  9083  001A3E                     __ptext44:
  9084                           	opt callstack 0
  9085  001A3E                     ___fladd:
  9086                           	opt callstack 27
  9087                           
  9088                           ;incstack = 0
  9089  001A3E  5044               	movf	___fladd@b+3,w,c
  9090  001A40  0B80               	andlw	128
  9091  001A42  6E4D               	movwf	___fladd@signs,c
  9092  001A44  5044               	movf	___fladd@b+3,w,c
  9093  001A46  2444               	addwf	___fladd@b+3,w,c
  9094  001A48  6E4F               	movwf	___fladd@bexp,c
  9095  001A4A  BE43               	btfsc	___fladd@b+2,7,c
  9096  001A4C  804F               	bsf	___fladd@bexp,0,c
  9097  001A4E  504F               	movf	___fladd@bexp,w,c
  9098  001A50  B4D8               	btfsc	status,2,c
  9099  001A52  D00D               	goto	l4418
  9100  001A54  284F               	incf	___fladd@bexp,w,c
  9101  001A56  A4D8               	btfss	status,2,c
  9102  001A58  D008               	goto	l4414
  9103  001A5A  0E00               	movlw	0
  9104  001A5C  6E41               	movwf	___fladd@b,c
  9105  001A5E  0E00               	movlw	0
  9106  001A60  6E42               	movwf	___fladd@b+1,c
  9107  001A62  0E00               	movlw	0
  9108  001A64  6E43               	movwf	___fladd@b+2,c
  9109  001A66  0E00               	movlw	0
  9110  001A68  6E44               	movwf	___fladd@b+3,c
  9111  001A6A                     l4414:
  9112  001A6A  8E43               	bsf	___fladd@b+2,7,c
  9113  001A6C  D006               	goto	L22
  9114  001A6E                     l4418:
  9115  001A6E  0E00               	movlw	0
  9116  001A70  6E41               	movwf	___fladd@b,c
  9117  001A72  0E00               	movlw	0
  9118  001A74  6E42               	movwf	___fladd@b+1,c
  9119  001A76  0E00               	movlw	0
  9120  001A78  6E43               	movwf	___fladd@b+2,c
  9121  001A7A                     L22:
  9122  001A7A  0E00               	movlw	0
  9123  001A7C  6E44               	movwf	___fladd@b+3,c
  9124  001A7E  5048               	movf	___fladd@a+3,w,c
  9125  001A80  0B80               	andlw	128
  9126  001A82  6E4E               	movwf	___fladd@aexp,c
  9127  001A84  504D               	movf	___fladd@signs,w,c
  9128  001A86  184E               	xorwf	___fladd@aexp,w,c
  9129  001A88  A4D8               	btfss	status,2,c
  9130  001A8A  8C4D               	bsf	___fladd@signs,6,c
  9131  001A8C  5048               	movf	___fladd@a+3,w,c
  9132  001A8E  2448               	addwf	___fladd@a+3,w,c
  9133  001A90  6E4E               	movwf	___fladd@aexp,c
  9134  001A92  BE47               	btfsc	___fladd@a+2,7,c
  9135  001A94  804E               	bsf	___fladd@aexp,0,c
  9136  001A96  504E               	movf	___fladd@aexp,w,c
  9137  001A98  B4D8               	btfsc	status,2,c
  9138  001A9A  D00D               	goto	l4442
  9139  001A9C  284E               	incf	___fladd@aexp,w,c
  9140  001A9E  A4D8               	btfss	status,2,c
  9141  001AA0  D008               	goto	l4438
  9142  001AA2  0E00               	movlw	0
  9143  001AA4  6E45               	movwf	___fladd@a,c
  9144  001AA6  0E00               	movlw	0
  9145  001AA8  6E46               	movwf	___fladd@a+1,c
  9146  001AAA  0E00               	movlw	0
  9147  001AAC  6E47               	movwf	___fladd@a+2,c
  9148  001AAE  0E00               	movlw	0
  9149  001AB0  6E48               	movwf	___fladd@a+3,c
  9150  001AB2                     l4438:
  9151  001AB2  8E47               	bsf	___fladd@a+2,7,c
  9152  001AB4  D006               	goto	L23
  9153  001AB6                     l4442:
  9154  001AB6  0E00               	movlw	0
  9155  001AB8  6E45               	movwf	___fladd@a,c
  9156  001ABA  0E00               	movlw	0
  9157  001ABC  6E46               	movwf	___fladd@a+1,c
  9158  001ABE  0E00               	movlw	0
  9159  001AC0  6E47               	movwf	___fladd@a+2,c
  9160  001AC2                     L23:
  9161  001AC2  0E00               	movlw	0
  9162  001AC4  6E48               	movwf	___fladd@a+3,c
  9163  001AC6  504F               	movf	___fladd@bexp,w,c
  9164  001AC8  5C4E               	subwf	___fladd@aexp,w,c
  9165  001ACA  B0D8               	btfsc	status,0,c
  9166  001ACC  D022               	goto	l4480
  9167  001ACE  AC4D               	btfss	___fladd@signs,6,c
  9168  001AD0  D002               	goto	l4450
  9169  001AD2  0E80               	movlw	128
  9170  001AD4  1A4D               	xorwf	___fladd@signs,f,c
  9171  001AD6                     l4450:
  9172  001AD6  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  9173  001ADA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  9174  001ADE  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  9175  001AE2  C041  F050         	movff	___fladd@b,___fladd@grs
  9176  001AE6  C045  F041         	movff	___fladd@a,___fladd@b
  9177  001AEA  C050  F045         	movff	___fladd@grs,___fladd@a
  9178  001AEE  C042  F050         	movff	___fladd@b+1,___fladd@grs
  9179  001AF2  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  9180  001AF6  C050  F046         	movff	___fladd@grs,___fladd@a+1
  9181  001AFA  C043  F050         	movff	___fladd@b+2,___fladd@grs
  9182  001AFE  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  9183  001B02  C050  F047         	movff	___fladd@grs,___fladd@a+2
  9184  001B06  C044  F050         	movff	___fladd@b+3,___fladd@grs
  9185  001B0A  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  9186  001B0E  C050  F048         	movff	___fladd@grs,___fladd@a+3
  9187  001B12                     l4480:
  9188  001B12  0E00               	movlw	0
  9189  001B14  6E50               	movwf	___fladd@grs,c
  9190  001B16  504F               	movf	___fladd@bexp,w,c
  9191  001B18  C04E  F049         	movff	___fladd@aexp,??___fladd
  9192  001B1C  6A4A               	clrf	(??___fladd+1)& (0+255),c
  9193  001B1E  5E49               	subwf	??___fladd,f,c
  9194  001B20  0E00               	movlw	0
  9195  001B22  5A4A               	subwfb	??___fladd+1,f,c
  9196  001B24  BE4A               	btfsc	??___fladd+1,7,c
  9197  001B26  D02C               	goto	l1069
  9198  001B28  504A               	movf	??___fladd+1,w,c
  9199  001B2A  E104               	bnz	u4800
  9200  001B2C  0E1A               	movlw	26
  9201  001B2E  5C49               	subwf	??___fladd,w,c
  9202  001B30  A0D8               	btfss	status,0,c
  9203  001B32  D026               	goto	l1069
  9204  001B34                     u4800:
  9205  001B34  5041               	movf	___fladd@b,w,c
  9206  001B36  1042               	iorwf	___fladd@b+1,w,c
  9207  001B38  1043               	iorwf	___fladd@b+2,w,c
  9208  001B3A  1044               	iorwf	___fladd@b+3,w,c
  9209  001B3C  B4D8               	btfsc	status,2,c
  9210  001B3E  D002               	goto	u4810
  9211  001B40  0E01               	movlw	1
  9212  001B42  D001               	goto	u4820
  9213  001B44                     u4810:
  9214  001B44  0E00               	movlw	0
  9215  001B46                     u4820:
  9216  001B46  6E50               	movwf	___fladd@grs,c
  9217  001B48  0E00               	movlw	0
  9218  001B4A  6E41               	movwf	___fladd@b,c
  9219  001B4C  0E00               	movlw	0
  9220  001B4E  6E42               	movwf	___fladd@b+1,c
  9221  001B50  0E00               	movlw	0
  9222  001B52  6E43               	movwf	___fladd@b+2,c
  9223  001B54  0E00               	movlw	0
  9224  001B56  6E44               	movwf	___fladd@b+3,c
  9225  001B58  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  9226  001B5C  D015               	goto	u4850
  9227  001B5E                     l1070:
  9228  001B5E  A050               	btfss	___fladd@grs,0,c
  9229  001B60  D005               	goto	l4492
  9230  001B62  90D8               	bcf	status,0,c
  9231  001B64  3050               	rrcf	___fladd@grs,w,c
  9232  001B66  0901               	iorlw	1
  9233  001B68  6E50               	movwf	___fladd@grs,c
  9234  001B6A  D002               	goto	l4494
  9235  001B6C                     l4492:
  9236  001B6C  90D8               	bcf	status,0,c
  9237  001B6E  3250               	rrcf	___fladd@grs,f,c
  9238  001B70                     l4494:
  9239  001B70  B041               	btfsc	___fladd@b,0,c
  9240  001B72  8E50               	bsf	___fladd@grs,7,c
  9241  001B74  3444               	rlcf	___fladd@b+3,w,c
  9242  001B76  3244               	rrcf	___fladd@b+3,f,c
  9243  001B78  3243               	rrcf	___fladd@b+2,f,c
  9244  001B7A  3242               	rrcf	___fladd@b+1,f,c
  9245  001B7C  3241               	rrcf	___fladd@b,f,c
  9246  001B7E  2A4F               	incf	___fladd@bexp,f,c
  9247  001B80                     l1069:
  9248  001B80  504E               	movf	___fladd@aexp,w,c
  9249  001B82  5C4F               	subwf	___fladd@bexp,w,c
  9250  001B84  A0D8               	btfss	status,0,c
  9251  001B86  D7EB               	goto	l1070
  9252  001B88                     u4850:
  9253  001B88  BC4D               	btfsc	___fladd@signs,6,c
  9254  001B8A  D028               	goto	l4526
  9255  001B8C  504F               	movf	___fladd@bexp,w,c
  9256  001B8E  A4D8               	btfss	status,2,c
  9257  001B90  D009               	goto	l4508
  9258  001B92  0E00               	movlw	0
  9259  001B94  6E41               	movwf	?___fladd,c
  9260  001B96  0E00               	movlw	0
  9261  001B98  6E42               	movwf	?___fladd+1,c
  9262  001B9A  0E00               	movlw	0
  9263  001B9C  6E43               	movwf	?___fladd+2,c
  9264  001B9E  0E00               	movlw	0
  9265  001BA0  6E44               	movwf	?___fladd+3,c
  9266  001BA2  0012               	return	
  9267  001BA4                     l4508:
  9268  001BA4  5045               	movf	___fladd@a,w,c
  9269  001BA6  2641               	addwf	___fladd@b,f,c
  9270  001BA8  5046               	movf	___fladd@a+1,w,c
  9271  001BAA  2242               	addwfc	___fladd@b+1,f,c
  9272  001BAC  5047               	movf	___fladd@a+2,w,c
  9273  001BAE  2243               	addwfc	___fladd@b+2,f,c
  9274  001BB0  5048               	movf	___fladd@a+3,w,c
  9275  001BB2  2244               	addwfc	___fladd@b+3,f,c
  9276  001BB4  A044               	btfss	___fladd@b+3,0,c
  9277  001BB6  D071               	goto	u4980
  9278  001BB8  A050               	btfss	___fladd@grs,0,c
  9279  001BBA  D005               	goto	l4516
  9280  001BBC  90D8               	bcf	status,0,c
  9281  001BBE  3050               	rrcf	___fladd@grs,w,c
  9282  001BC0  0901               	iorlw	1
  9283  001BC2  6E50               	movwf	___fladd@grs,c
  9284  001BC4  D002               	goto	l4518
  9285  001BC6                     l4516:
  9286  001BC6  90D8               	bcf	status,0,c
  9287  001BC8  3250               	rrcf	___fladd@grs,f,c
  9288  001BCA                     l4518:
  9289  001BCA  B041               	btfsc	___fladd@b,0,c
  9290  001BCC  8E50               	bsf	___fladd@grs,7,c
  9291  001BCE  3444               	rlcf	___fladd@b+3,w,c
  9292  001BD0  3244               	rrcf	___fladd@b+3,f,c
  9293  001BD2  3243               	rrcf	___fladd@b+2,f,c
  9294  001BD4  3242               	rrcf	___fladd@b+1,f,c
  9295  001BD6  3241               	rrcf	___fladd@b,f,c
  9296  001BD8  2A4F               	incf	___fladd@bexp,f,c
  9297  001BDA  D05F               	goto	u4980
  9298  001BDC                     l4526:
  9299  001BDC  5045               	movf	___fladd@a,w,c
  9300  001BDE  5C41               	subwf	___fladd@b,w,c
  9301  001BE0  5046               	movf	___fladd@a+1,w,c
  9302  001BE2  5842               	subwfb	___fladd@b+1,w,c
  9303  001BE4  5047               	movf	___fladd@a+2,w,c
  9304  001BE6  5843               	subwfb	___fladd@b+2,w,c
  9305  001BE8  5044               	movf	___fladd@b+3,w,c
  9306  001BEA  0A80               	xorlw	128
  9307  001BEC  6E49               	movwf	??___fladd& (0+255),c
  9308  001BEE  5048               	movf	___fladd@a+3,w,c
  9309  001BF0  0A80               	xorlw	128
  9310  001BF2  5849               	subwfb	??___fladd& (0+255),w,c
  9311  001BF4  B0D8               	btfsc	status,0,c
  9312  001BF6  D025               	goto	l4536
  9313  001BF8  5041               	movf	___fladd@b,w,c
  9314  001BFA  5C45               	subwf	___fladd@a,w,c
  9315  001BFC  6E49               	movwf	??___fladd& (0+255),c
  9316  001BFE  5042               	movf	___fladd@b+1,w,c
  9317  001C00  5846               	subwfb	___fladd@a+1,w,c
  9318  001C02  6E4A               	movwf	(??___fladd+1)& (0+255),c
  9319  001C04  5043               	movf	___fladd@b+2,w,c
  9320  001C06  5847               	subwfb	___fladd@a+2,w,c
  9321  001C08  6E4B               	movwf	(??___fladd+2)& (0+255),c
  9322  001C0A  5044               	movf	___fladd@b+3,w,c
  9323  001C0C  5848               	subwfb	___fladd@a+3,w,c
  9324  001C0E  6E4C               	movwf	(??___fladd+3)& (0+255),c
  9325  001C10  0EFF               	movlw	255
  9326  001C12  2449               	addwf	??___fladd,w,c
  9327  001C14  6E41               	movwf	___fladd@b,c
  9328  001C16  0EFF               	movlw	255
  9329  001C18  204A               	addwfc	??___fladd+1,w,c
  9330  001C1A  6E42               	movwf	___fladd@b+1,c
  9331  001C1C  0EFF               	movlw	255
  9332  001C1E  204B               	addwfc	??___fladd+2,w,c
  9333  001C20  6E43               	movwf	___fladd@b+2,c
  9334  001C22  0EFF               	movlw	255
  9335  001C24  204C               	addwfc	??___fladd+3,w,c
  9336  001C26  6E44               	movwf	___fladd@b+3,c
  9337  001C28  0E80               	movlw	128
  9338  001C2A  1A4D               	xorwf	___fladd@signs,f,c
  9339  001C2C  6C50               	negf	___fladd@grs,c
  9340  001C2E  5050               	movf	___fladd@grs,w,c
  9341  001C30  A4D8               	btfss	status,2,c
  9342  001C32  D00F               	goto	l1085
  9343  001C34  0E01               	movlw	1
  9344  001C36  2641               	addwf	___fladd@b,f,c
  9345  001C38  0E00               	movlw	0
  9346  001C3A  2242               	addwfc	___fladd@b+1,f,c
  9347  001C3C  2243               	addwfc	___fladd@b+2,f,c
  9348  001C3E  2244               	addwfc	___fladd@b+3,f,c
  9349  001C40  D008               	goto	l1085
  9350  001C42                     l4536:
  9351  001C42  5045               	movf	___fladd@a,w,c
  9352  001C44  5E41               	subwf	___fladd@b,f,c
  9353  001C46  5046               	movf	___fladd@a+1,w,c
  9354  001C48  5A42               	subwfb	___fladd@b+1,f,c
  9355  001C4A  5047               	movf	___fladd@a+2,w,c
  9356  001C4C  5A43               	subwfb	___fladd@b+2,f,c
  9357  001C4E  5048               	movf	___fladd@a+3,w,c
  9358  001C50  5A44               	subwfb	___fladd@b+3,f,c
  9359  001C52                     l1085:
  9360  001C52  5041               	movf	___fladd@b,w,c
  9361  001C54  1042               	iorwf	___fladd@b+1,w,c
  9362  001C56  1043               	iorwf	___fladd@b+2,w,c
  9363  001C58  1044               	iorwf	___fladd@b+3,w,c
  9364  001C5A  A4D8               	btfss	status,2,c
  9365  001C5C  D01C               	goto	l4560
  9366  001C5E  5050               	movf	___fladd@grs,w,c
  9367  001C60  A4D8               	btfss	status,2,c
  9368  001C62  D019               	goto	l4560
  9369  001C64  0E00               	movlw	0
  9370  001C66  6E41               	movwf	?___fladd,c
  9371  001C68  0E00               	movlw	0
  9372  001C6A  6E42               	movwf	?___fladd+1,c
  9373  001C6C  0E00               	movlw	0
  9374  001C6E  6E43               	movwf	?___fladd+2,c
  9375  001C70  0E00               	movlw	0
  9376  001C72  6E44               	movwf	?___fladd+3,c
  9377  001C74  0012               	return	
  9378  001C76                     l4544:
  9379  001C76  90D8               	bcf	status,0,c
  9380  001C78  3641               	rlcf	___fladd@b,f,c
  9381  001C7A  3642               	rlcf	___fladd@b+1,f,c
  9382  001C7C  3643               	rlcf	___fladd@b+2,f,c
  9383  001C7E  3644               	rlcf	___fladd@b+3,f,c
  9384  001C80  BE50               	btfsc	___fladd@grs,7,c
  9385  001C82  8041               	bsf	___fladd@b,0,c
  9386  001C84  A050               	btfss	___fladd@grs,0,c
  9387  001C86  D002               	goto	l4554
  9388  001C88  80D8               	bsf	status,0,c
  9389  001C8A  D001               	goto	L24
  9390  001C8C                     l4554:
  9391  001C8C  90D8               	bcf	status,0,c
  9392  001C8E                     L24:
  9393  001C8E  3650               	rlcf	___fladd@grs,f,c
  9394  001C90  504F               	movf	___fladd@bexp,w,c
  9395  001C92  A4D8               	btfss	status,2,c
  9396  001C94  064F               	decf	___fladd@bexp,f,c
  9397  001C96                     l4560:
  9398  001C96  AE43               	btfss	___fladd@b+2,7,c
  9399  001C98  D7EE               	goto	l4544
  9400  001C9A                     u4980:
  9401  001C9A  0E00               	movlw	0
  9402  001C9C  6E4E               	movwf	___fladd@aexp,c
  9403  001C9E  AE50               	btfss	___fladd@grs,7,c
  9404  001CA0  D00B               	goto	l1094
  9405  001CA2  C050  F049         	movff	___fladd@grs,??___fladd
  9406  001CA6  0E7F               	movlw	127
  9407  001CA8  1649               	andwf	??___fladd,f,c
  9408  001CAA  B4D8               	btfsc	status,2,c
  9409  001CAC  D003               	goto	l1095
  9410  001CAE                     u5000:
  9411  001CAE  0E01               	movlw	1
  9412  001CB0  6E4E               	movwf	___fladd@aexp,c
  9413  001CB2  D002               	goto	l1094
  9414  001CB4                     l1095:
  9415  001CB4  B041               	btfsc	___fladd@b,0,c
  9416  001CB6  D7FB               	goto	u5000
  9417  001CB8                     l1094:
  9418  001CB8  504E               	movf	___fladd@aexp,w,c
  9419  001CBA  B4D8               	btfsc	status,2,c
  9420  001CBC  D020               	goto	l4580
  9421  001CBE  0E01               	movlw	1
  9422  001CC0  2641               	addwf	___fladd@b,f,c
  9423  001CC2  0E00               	movlw	0
  9424  001CC4  2242               	addwfc	___fladd@b+1,f,c
  9425  001CC6  2243               	addwfc	___fladd@b+2,f,c
  9426  001CC8  2244               	addwfc	___fladd@b+3,f,c
  9427  001CCA  A044               	btfss	___fladd@b+3,0,c
  9428  001CCC  D018               	goto	l4580
  9429  001CCE  C041  F049         	movff	___fladd@b,??___fladd
  9430  001CD2  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  9431  001CD6  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  9432  001CDA  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  9433  001CDE  344C               	rlcf	??___fladd+3,w,c
  9434  001CE0  324C               	rrcf	??___fladd+3,f,c
  9435  001CE2  324B               	rrcf	??___fladd+2,f,c
  9436  001CE4  324A               	rrcf	??___fladd+1,f,c
  9437  001CE6  3249               	rrcf	??___fladd,f,c
  9438  001CE8  C049  F041         	movff	??___fladd,___fladd@b
  9439  001CEC  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  9440  001CF0  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  9441  001CF4  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  9442  001CF8  284F               	incf	___fladd@bexp,w,c
  9443  001CFA  A4D8               	btfss	status,2,c
  9444  001CFC  2A4F               	incf	___fladd@bexp,f,c
  9445  001CFE                     l4580:
  9446  001CFE  284F               	incf	___fladd@bexp,w,c
  9447  001D00  B4D8               	btfsc	status,2,c
  9448  001D02  D003               	goto	u5060
  9449  001D04  504F               	movf	___fladd@bexp,w,c
  9450  001D06  A4D8               	btfss	status,2,c
  9451  001D08  D00D               	goto	l4588
  9452  001D0A                     u5060:
  9453  001D0A  0E00               	movlw	0
  9454  001D0C  6E41               	movwf	___fladd@b,c
  9455  001D0E  0E00               	movlw	0
  9456  001D10  6E42               	movwf	___fladd@b+1,c
  9457  001D12  0E00               	movlw	0
  9458  001D14  6E43               	movwf	___fladd@b+2,c
  9459  001D16  0E00               	movlw	0
  9460  001D18  6E44               	movwf	___fladd@b+3,c
  9461  001D1A  504F               	movf	___fladd@bexp,w,c
  9462  001D1C  A4D8               	btfss	status,2,c
  9463  001D1E  D002               	goto	l4588
  9464  001D20  0E00               	movlw	0
  9465  001D22  6E4D               	movwf	___fladd@signs,c
  9466  001D24                     l4588:
  9467  001D24  A04F               	btfss	___fladd@bexp,0,c
  9468  001D26  D002               	goto	l4592
  9469  001D28  8E43               	bsf	___fladd@b+2,7,c
  9470  001D2A  D001               	goto	l4594
  9471  001D2C                     l4592:
  9472  001D2C  9E43               	bcf	___fladd@b+2,7,c
  9473  001D2E                     l4594:
  9474  001D2E  90D8               	bcf	status,0,c
  9475  001D30  304F               	rrcf	___fladd@bexp,w,c
  9476  001D32  6E44               	movwf	___fladd@b+3,c
  9477  001D34  BE4D               	btfsc	___fladd@signs,7,c
  9478  001D36  8E44               	bsf	___fladd@b+3,7,c
  9479  001D38  C041  F041         	movff	___fladd@b,?___fladd
  9480  001D3C  C042  F042         	movff	___fladd@b+1,?___fladd+1
  9481  001D40  C043  F043         	movff	___fladd@b+2,?___fladd+2
  9482  001D44  C044  F044         	movff	___fladd@b+3,?___fladd+3
  9483  001D48  0012               	return		;funcret
  9484  001D4A                     __end_of___fladd:
  9485                           	opt callstack 0
  9486                           
  9487 ;; *************** function _ADC_Read *****************
  9488 ;; Defined at:
  9489 ;;		line 28 in file "adc.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  channel         1    wreg     unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  channel         1    4[COMRAM] unsigned char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  2    0[COMRAM] unsigned int 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9503 ;;      Params:         2       0       0       0       0       0       0
  9504 ;;      Locals:         1       0       0       0       0       0       0
  9505 ;;      Temps:          2       0       0       0       0       0       0
  9506 ;;      Totals:         5       0       0       0       0       0       0
  9507 ;;Total ram usage:        5 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    2
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_get_temp
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text45
  9518  00365C                     __ptext45:
  9519                           	opt callstack 0
  9520  00365C                     _ADC_Read:
  9521                           	opt callstack 27
  9522                           
  9523                           ;incstack = 0
  9524                           ;ADC_Read@channel stored from wreg
  9525  00365C  6E05               	movwf	ADC_Read@channel,c
  9526                           
  9527                           ;adc.c: 29:  if(channel > 7)
  9528  00365E  0E07               	movlw	7
  9529  003660  6405               	cpfsgt	ADC_Read@channel,c
  9530  003662  D005               	goto	l4392
  9531                           
  9532                           ;adc.c: 30:  return 0;
  9533  003664  0E00               	movlw	0
  9534  003666  6E02               	movwf	?_ADC_Read+1,c
  9535  003668  0E00               	movlw	0
  9536  00366A  6E01               	movwf	?_ADC_Read,c
  9537  00366C  0012               	return	
  9538  00366E                     l4392:
  9539                           
  9540                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9541  00366E  0EC5               	movlw	197
  9542  003670  16C2               	andwf	4034,f,c	;volatile
  9543                           
  9544                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9545  003672  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9546  003674  42E8               	rrncf	wreg,f,c
  9547  003676  0BF8               	andlw	248
  9548  003678  12C2               	iorwf	4034,f,c	;volatile
  9549                           
  9550                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9551  00367A  0E0B               	movlw	11
  9552  00367C  6E03               	movwf	??_ADC_Read& (0+255),c
  9553  00367E  0E62               	movlw	98
  9554  003680                     u5887:
  9555  003680  2EE8               	decfsz	wreg,f,c
  9556  003682  D7FE               	bra	u5887
  9557  003684  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9558  003686  D7FC               	bra	u5887
  9559  003688  D000               	nop2	
  9560                           
  9561                           ;adc.c: 34:  GO_nDONE = 1;
  9562  00368A  82C2               	bsf	4034,1,c	;volatile
  9563  00368C                     l283:
  9564  00368C  B2C2               	btfsc	4034,1,c	;volatile
  9565  00368E  D7FE               	goto	l283
  9566                           
  9567                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9568  003690  50C4               	movf	4036,w,c	;volatile
  9569  003692  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9570  003694  6A03               	clrf	??_ADC_Read& (0+255),c
  9571  003696  50C3               	movf	4035,w,c	;volatile
  9572  003698  2403               	addwf	??_ADC_Read,w,c
  9573  00369A  6E01               	movwf	?_ADC_Read,c
  9574  00369C  0E00               	movlw	0
  9575  00369E  2004               	addwfc	??_ADC_Read+1,w,c
  9576  0036A0  6E02               	movwf	?_ADC_Read+1,c
  9577  0036A2  0012               	return		;funcret
  9578  0036A4                     __end_of_ADC_Read:
  9579                           	opt callstack 0
  9580                           
  9581 ;; *************** function _ADC_Init *****************
  9582 ;; Defined at:
  9583 ;;		line 23 in file "adc.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9597 ;;      Params:         0       0       0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0
  9600 ;;      Totals:         0       0       0       0       0       0       0
  9601 ;;Total ram usage:        0 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    2
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_get_temp
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text46
  9612  003A0C                     __ptext46:
  9613                           	opt callstack 0
  9614  003A0C                     _ADC_Init:
  9615                           	opt callstack 27
  9616                           
  9617                           ;adc.c: 24:  ADCON0 = 0x81;
  9618                           
  9619                           ;incstack = 0
  9620  003A0C  0E81               	movlw	129
  9621  003A0E  6EC2               	movwf	4034,c	;volatile
  9622                           
  9623                           ;adc.c: 25:  ADCON1 = 0x80;
  9624  003A10  0E80               	movlw	128
  9625  003A12  6EC1               	movwf	4033,c	;volatile
  9626  003A14  0012               	return		;funcret
  9627  003A16                     __end_of_ADC_Init:
  9628                           	opt callstack 0
  9629                           
  9630 ;; *************** function ___lldiv *****************
  9631 ;; Defined at:
  9632 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  dividend        4    0[COMRAM] unsigned long 
  9635 ;;  divisor         4    4[COMRAM] unsigned long 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;  quotient        4    8[COMRAM] unsigned long 
  9638 ;;  counter         1   12[COMRAM] unsigned char 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  4    0[COMRAM] unsigned long 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9648 ;;      Params:         8       0       0       0       0       0       0
  9649 ;;      Locals:         5       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0
  9651 ;;      Totals:        13       0       0       0       0       0       0
  9652 ;;Total ram usage:       13 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    2
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_main
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text47
  9663  00349A                     __ptext47:
  9664                           	opt callstack 0
  9665  00349A                     ___lldiv:
  9666                           	opt callstack 28
  9667                           
  9668                           ;incstack = 0
  9669  00349A  0E00               	movlw	0
  9670  00349C  6E09               	movwf	___lldiv@quotient,c
  9671  00349E  0E00               	movlw	0
  9672  0034A0  6E0A               	movwf	___lldiv@quotient+1,c
  9673  0034A2  0E00               	movlw	0
  9674  0034A4  6E0B               	movwf	___lldiv@quotient+2,c
  9675  0034A6  0E00               	movlw	0
  9676  0034A8  6E0C               	movwf	___lldiv@quotient+3,c
  9677  0034AA  5005               	movf	___lldiv@divisor,w,c
  9678  0034AC  1006               	iorwf	___lldiv@divisor+1,w,c
  9679  0034AE  1007               	iorwf	___lldiv@divisor+2,w,c
  9680  0034B0  1008               	iorwf	___lldiv@divisor+3,w,c
  9681  0034B2  B4D8               	btfsc	status,2,c
  9682  0034B4  D02A               	goto	l567
  9683  0034B6  0E01               	movlw	1
  9684  0034B8  6E0D               	movwf	___lldiv@counter,c
  9685  0034BA  D006               	goto	l5062
  9686  0034BC                     l5060:
  9687  0034BC  90D8               	bcf	status,0,c
  9688  0034BE  3605               	rlcf	___lldiv@divisor,f,c
  9689  0034C0  3606               	rlcf	___lldiv@divisor+1,f,c
  9690  0034C2  3607               	rlcf	___lldiv@divisor+2,f,c
  9691  0034C4  3608               	rlcf	___lldiv@divisor+3,f,c
  9692  0034C6  2A0D               	incf	___lldiv@counter,f,c
  9693  0034C8                     l5062:
  9694  0034C8  AE08               	btfss	___lldiv@divisor+3,7,c
  9695  0034CA  D7F8               	goto	l5060
  9696  0034CC                     u5650:
  9697  0034CC  90D8               	bcf	status,0,c
  9698  0034CE  3609               	rlcf	___lldiv@quotient,f,c
  9699  0034D0  360A               	rlcf	___lldiv@quotient+1,f,c
  9700  0034D2  360B               	rlcf	___lldiv@quotient+2,f,c
  9701  0034D4  360C               	rlcf	___lldiv@quotient+3,f,c
  9702  0034D6  5005               	movf	___lldiv@divisor,w,c
  9703  0034D8  5C01               	subwf	___lldiv@dividend,w,c
  9704  0034DA  5006               	movf	___lldiv@divisor+1,w,c
  9705  0034DC  5802               	subwfb	___lldiv@dividend+1,w,c
  9706  0034DE  5007               	movf	___lldiv@divisor+2,w,c
  9707  0034E0  5803               	subwfb	___lldiv@dividend+2,w,c
  9708  0034E2  5008               	movf	___lldiv@divisor+3,w,c
  9709  0034E4  5804               	subwfb	___lldiv@dividend+3,w,c
  9710  0034E6  A0D8               	btfss	status,0,c
  9711  0034E8  D009               	goto	l5072
  9712  0034EA  5005               	movf	___lldiv@divisor,w,c
  9713  0034EC  5E01               	subwf	___lldiv@dividend,f,c
  9714  0034EE  5006               	movf	___lldiv@divisor+1,w,c
  9715  0034F0  5A02               	subwfb	___lldiv@dividend+1,f,c
  9716  0034F2  5007               	movf	___lldiv@divisor+2,w,c
  9717  0034F4  5A03               	subwfb	___lldiv@dividend+2,f,c
  9718  0034F6  5008               	movf	___lldiv@divisor+3,w,c
  9719  0034F8  5A04               	subwfb	___lldiv@dividend+3,f,c
  9720  0034FA  8009               	bsf	___lldiv@quotient,0,c
  9721  0034FC                     l5072:
  9722  0034FC  90D8               	bcf	status,0,c
  9723  0034FE  3208               	rrcf	___lldiv@divisor+3,f,c
  9724  003500  3207               	rrcf	___lldiv@divisor+2,f,c
  9725  003502  3206               	rrcf	___lldiv@divisor+1,f,c
  9726  003504  3205               	rrcf	___lldiv@divisor,f,c
  9727  003506  2E0D               	decfsz	___lldiv@counter,f,c
  9728  003508  D7E1               	goto	u5650
  9729  00350A                     l567:
  9730  00350A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9731  00350E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9732  003512  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9733  003516  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9734  00351A  0012               	return		;funcret
  9735  00351C                     __end_of___lldiv:
  9736                           	opt callstack 0
  9737                           
  9738 ;; *************** function ___fltol *****************
  9739 ;; Defined at:
  9740 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  f1              4   94[COMRAM] unsigned long 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  exp1            1  103[COMRAM] unsigned char 
  9745 ;;  sign1           1  102[COMRAM] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  4   94[COMRAM] long 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9755 ;;      Params:         4       0       0       0       0       0       0
  9756 ;;      Locals:         2       0       0       0       0       0       0
  9757 ;;      Temps:          4       0       0       0       0       0       0
  9758 ;;      Totals:        10       0       0       0       0       0       0
  9759 ;;Total ram usage:       10 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    2
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_main
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text48
  9770  003046                     __ptext48:
  9771                           	opt callstack 0
  9772  003046                     ___fltol:
  9773                           	opt callstack 28
  9774                           
  9775                           ;incstack = 0
  9776  003046  3461               	rlcf	___fltol@f1+2,w,c
  9777  003048  3462               	rlcf	___fltol@f1+3,w,c
  9778  00304A  6E68               	movwf	___fltol@exp1,c
  9779  00304C  5068               	movf	___fltol@exp1,w,c
  9780  00304E  A4D8               	btfss	status,2,c
  9781  003050  D009               	goto	l5082
  9782  003052                     u5670:
  9783  003052  0E00               	movlw	0
  9784  003054  6E5F               	movwf	?___fltol,c
  9785  003056  0E00               	movlw	0
  9786  003058  6E60               	movwf	?___fltol+1,c
  9787  00305A  0E00               	movlw	0
  9788  00305C  6E61               	movwf	?___fltol+2,c
  9789  00305E  0E00               	movlw	0
  9790  003060  6E62               	movwf	?___fltol+3,c
  9791  003062  0012               	return	
  9792  003064                     l5082:
  9793  003064  C05F  F063         	movff	___fltol@f1,??___fltol
  9794  003068  C060  F064         	movff	___fltol@f1+1,??___fltol+1
  9795  00306C  C061  F065         	movff	___fltol@f1+2,??___fltol+2
  9796  003070  C062  F066         	movff	___fltol@f1+3,??___fltol+3
  9797  003074  0E20               	movlw	32
  9798  003076  D005               	goto	u5680
  9799  003078                     u5685:
  9800  003078  90D8               	bcf	status,0,c
  9801  00307A  3266               	rrcf	??___fltol+3,f,c
  9802  00307C  3265               	rrcf	??___fltol+2,f,c
  9803  00307E  3264               	rrcf	??___fltol+1,f,c
  9804  003080  3263               	rrcf	??___fltol,f,c
  9805  003082                     u5680:
  9806  003082  2EE8               	decfsz	wreg,f,c
  9807  003084  D7F9               	goto	u5685
  9808  003086  5063               	movf	??___fltol,w,c
  9809  003088  6E67               	movwf	___fltol@sign1,c
  9810  00308A  8E61               	bsf	___fltol@f1+2,7,c
  9811  00308C  0EFF               	movlw	255
  9812  00308E  165F               	andwf	___fltol@f1,f,c
  9813  003090  0EFF               	movlw	255
  9814  003092  1660               	andwf	___fltol@f1+1,f,c
  9815  003094  0EFF               	movlw	255
  9816  003096  1661               	andwf	___fltol@f1+2,f,c
  9817  003098  0E00               	movlw	0
  9818  00309A  1662               	andwf	___fltol@f1+3,f,c
  9819  00309C  0E96               	movlw	150
  9820  00309E  5E68               	subwf	___fltol@exp1,f,c
  9821  0030A0  AE68               	btfss	___fltol@exp1,7,c
  9822  0030A2  D00D               	goto	l5102
  9823  0030A4  5068               	movf	___fltol@exp1,w,c
  9824  0030A6  0A80               	xorlw	128
  9825  0030A8  0F97               	addlw	151
  9826  0030AA  A0D8               	btfss	status,0,c
  9827  0030AC  D7D2               	goto	u5670
  9828  0030AE                     l5098:
  9829  0030AE  90D8               	bcf	status,0,c
  9830  0030B0  3262               	rrcf	___fltol@f1+3,f,c
  9831  0030B2  3261               	rrcf	___fltol@f1+2,f,c
  9832  0030B4  3260               	rrcf	___fltol@f1+1,f,c
  9833  0030B6  325F               	rrcf	___fltol@f1,f,c
  9834  0030B8  3E68               	incfsz	___fltol@exp1,f,c
  9835  0030BA  D7F9               	goto	l5098
  9836  0030BC  D00D               	goto	u5720
  9837  0030BE                     l5102:
  9838  0030BE  0E1F               	movlw	31
  9839  0030C0  6468               	cpfsgt	___fltol@exp1,c
  9840  0030C2  D007               	goto	l5110
  9841  0030C4  D7C6               	goto	u5670
  9842  0030C6                     l5108:
  9843  0030C6  90D8               	bcf	status,0,c
  9844  0030C8  365F               	rlcf	___fltol@f1,f,c
  9845  0030CA  3660               	rlcf	___fltol@f1+1,f,c
  9846  0030CC  3661               	rlcf	___fltol@f1+2,f,c
  9847  0030CE  3662               	rlcf	___fltol@f1+3,f,c
  9848  0030D0  0668               	decf	___fltol@exp1,f,c
  9849  0030D2                     l5110:
  9850  0030D2  5068               	movf	___fltol@exp1,w,c
  9851  0030D4  A4D8               	btfss	status,2,c
  9852  0030D6  D7F7               	goto	l5108
  9853  0030D8                     u5720:
  9854  0030D8  5067               	movf	___fltol@sign1,w,c
  9855  0030DA  B4D8               	btfsc	status,2,c
  9856  0030DC  D008               	goto	l5116
  9857  0030DE  1E62               	comf	___fltol@f1+3,f,c
  9858  0030E0  1E61               	comf	___fltol@f1+2,f,c
  9859  0030E2  1E60               	comf	___fltol@f1+1,f,c
  9860  0030E4  6C5F               	negf	___fltol@f1,c
  9861  0030E6  0E00               	movlw	0
  9862  0030E8  2260               	addwfc	___fltol@f1+1,f,c
  9863  0030EA  2261               	addwfc	___fltol@f1+2,f,c
  9864  0030EC  2262               	addwfc	___fltol@f1+3,f,c
  9865  0030EE                     l5116:
  9866  0030EE  C05F  F05F         	movff	___fltol@f1,?___fltol
  9867  0030F2  C060  F060         	movff	___fltol@f1+1,?___fltol+1
  9868  0030F6  C061  F061         	movff	___fltol@f1+2,?___fltol+2
  9869  0030FA  C062  F062         	movff	___fltol@f1+3,?___fltol+3
  9870  0030FE  0012               	return		;funcret
  9871  003100                     __end_of___fltol:
  9872                           	opt callstack 0
  9873                           
  9874 ;; *************** function _Timer0_StartTimer *****************
  9875 ;; Defined at:
  9876 ;;		line 27 in file "timer.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  2  107[None  ] int 
  9883 ;; Registers used:
  9884 ;;		None
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9890 ;;      Params:         0       0       0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0
  9893 ;;      Totals:         0       0       0       0       0       0       0
  9894 ;;Total ram usage:        0 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    2
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_main
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text49
  9905  003A24                     __ptext49:
  9906                           	opt callstack 0
  9907  003A24                     _Timer0_StartTimer:
  9908                           	opt callstack 28
  9909                           
  9910                           ;timer.c: 28:  T0CONbits.TMR0ON = 1;
  9911                           
  9912                           ;incstack = 0
  9913  003A24  8ED5               	bsf	4053,7,c	;volatile
  9914                           
  9915                           ;timer.c: 29:  return 0;;	Return value of _Timer0_StartTimer is never used
  9916  003A26  0012               	return		;funcret
  9917  003A28                     __end_of_Timer0_StartTimer:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _Timer0_Init *****************
  9921 ;; Defined at:
  9922 ;;		line 8 in file "timer.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;		None
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;		None
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9936 ;;      Params:         0       0       0       0       0       0       0
  9937 ;;      Locals:         0       0       0       0       0       0       0
  9938 ;;      Temps:          0       0       0       0       0       0       0
  9939 ;;      Totals:         0       0       0       0       0       0       0
  9940 ;;Total ram usage:        0 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    2
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_main
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text50
  9951  003940                     __ptext50:
  9952                           	opt callstack 0
  9953  003940                     _Timer0_Init:
  9954                           	opt callstack 28
  9955                           
  9956                           ;timer.c: 9:  time_ms = 0;
  9957                           
  9958                           ;incstack = 0
  9959  003940  0E00               	movlw	0
  9960  003942  0100               	movlb	0	; () banked
  9961  003944  6F85               	movwf	_time_ms& (0+255),b	;volatile
  9962  003946  0E00               	movlw	0
  9963  003948  6F86               	movwf	(_time_ms+1)& (0+255),b	;volatile
  9964  00394A  0E00               	movlw	0
  9965  00394C  6F87               	movwf	(_time_ms+2)& (0+255),b	;volatile
  9966  00394E  0E00               	movlw	0
  9967  003950  6F88               	movwf	(_time_ms+3)& (0+255),b	;volatile
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  9971  003952  9CD5               	bcf	4053,6,c	;volatile
  9972                           
  9973                           ;timer.c: 11:  if (flag) {
  9974  003954  5197               	movf	_flag& (0+255),w,b
  9975  003956  B4D8               	btfsc	status,2,c
  9976  003958  D003               	goto	l5016
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;timer.c: 12:   TMR0H = 0xFF;
  9980  00395A  68D7               	setf	4055,c	;volatile
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;timer.c: 13:   TMR0L = 0x34;
  9984  00395C  0E34               	movlw	52
  9985  00395E  D003               	goto	L25
  9986  003960                     l5016:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;timer.c: 16:   TMR0H = 0xFE;
  9990  003960  0EFE               	movlw	254
  9991  003962  6ED7               	movwf	4055,c	;volatile
  9992                           
  9993                           ;timer.c: 17:   TMR0L = 0x0B;
  9994  003964  0E0B               	movlw	11
  9995  003966                     L25:
  9996  003966  6ED6               	movwf	4054,c	;volatile
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;timer.c: 19:  INTCONbits.TMR0IF = 0;
 10000  003968  94F2               	bcf	4082,2,c	;volatile
 10001                           
 10002                           ;timer.c: 20:  T0CON = 0x00;
 10003  00396A  0E00               	movlw	0
 10004  00396C  6ED5               	movwf	4053,c	;volatile
 10005                           
 10006                           ; BSR set to: 0
 10007  00396E  0012               	return		;funcret
 10008  003970                     __end_of_Timer0_Init:
 10009                           	opt callstack 0
 10010                           
 10011 ;; *************** function _timingISR *****************
 10012 ;; Defined at:
 10013 ;;		line 37 in file "timer.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg, status,2, status,0, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10027 ;;      Params:         0       0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:    1
 10034 ;; This function calls:
 10035 ;;		i2_Timer0_StartTimer
 10036 ;; This function is called by:
 10037 ;;		Interrupt level 2
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	intcode
 10042  000008                     __pintcode:
 10043                           	opt callstack 0
 10044  000008                     _timingISR:
 10045                           	opt callstack 19
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;incstack = 0
 10049  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10050  00000A  ED25  F01C         	call	int_func,f	;refresh shadow registers
 10051                           
 10052                           	psect	intcode_body
 10053  00384A                     __pintcode_body:
 10054                           	opt callstack 19
 10055  00384A                     int_func:
 10056                           	opt callstack 19
 10057  00384A  0006               	pop		; remove dummy address from shadow register refresh
 10058                           
 10059                           ;timer.c: 38:  if (TMR0IF && TMR0IE) {
 10060  00384C  B4F2               	btfsc	4082,2,c	;volatile
 10061  00384E  AAF2               	btfss	4082,5,c	;volatile
 10062  003850  D014               	goto	i2l244
 10063                           
 10064                           ;timer.c: 39:   TMR0IF = 0;
 10065  003852  94F2               	bcf	4082,2,c	;volatile
 10066                           
 10067                           ;timer.c: 40:   time_ms++;
 10068  003854  0E01               	movlw	1
 10069  003856  0100               	movlb	0	; () banked
 10070  003858  2785               	addwf	_time_ms& (0+255),f,b	;volatile
 10071  00385A  0E00               	movlw	0
 10072  00385C  2386               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 10073  00385E  2387               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 10074  003860  2388               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;timer.c: 41:   if (flag) {
 10078  003862  5197               	movf	_flag& (0+255),w,b
 10079  003864  B4D8               	btfsc	status,2,c
 10080  003866  D003               	goto	i2l5256
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;timer.c: 42:    TMR0H = 0xFF;
 10084  003868  68D7               	setf	4055,c	;volatile
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;timer.c: 43:    TMR0L = 0x34;
 10088  00386A  0E34               	movlw	52
 10089  00386C  D003               	goto	L26
 10090  00386E                     i2l5256:
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;timer.c: 46:    TMR0H = 0xFE;
 10094  00386E  0EFE               	movlw	254
 10095  003870  6ED7               	movwf	4055,c	;volatile
 10096                           
 10097                           ;timer.c: 47:    TMR0L = 0x0B;
 10098  003872  0E0B               	movlw	11
 10099  003874                     L26:
 10100  003874  6ED6               	movwf	4054,c	;volatile
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;timer.c: 49:   Timer0_StartTimer();
 10104  003876  EC14  F01D         	call	i2_Timer0_StartTimer	;wreg free
 10105  00387A                     i2l244:
 10106  00387A  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10107  00387C  0011               	retfie		f
 10108  00387E                     __end_of_timingISR:
 10109                           	opt callstack 0
 10110                           
 10111 ;; *************** function i2_Timer0_StartTimer *****************
 10112 ;; Defined at:
 10113 ;;		line 27 in file "timer.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;		None
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    0[None  ] int 
 10120 ;; Registers used:
 10121 ;;		None
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10127 ;;      Params:         0       0       0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0
 10130 ;;      Totals:         0       0       0       0       0       0       0
 10131 ;;Total ram usage:        0 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_timingISR
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text52
 10141  003A28                     __ptext52:
 10142                           	opt callstack 0
 10143  003A28                     i2_Timer0_StartTimer:
 10144                           	opt callstack 19
 10145                           
 10146                           ;timer.c: 28:  T0CONbits.TMR0ON = 1;
 10147                           
 10148                           ;incstack = 0
 10149  003A28  8ED5               	bsf	4053,7,c	;volatile
 10150                           
 10151                           ;timer.c: 29:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 10152  003A2A  0012               	return		;funcret
 10153  003A2C                     __end_ofi2_Timer0_StartTimer:
 10154                           	opt callstack 0
 10155                           
 10156                           	psect	rparam
 10157  0000                     
 10158                           	psect	temp
 10159  00007F                     btemp:
 10160                           	opt callstack 0
 10161  00007F                     	ds	1
 10162  0000                     int$flags	set	btemp
 10163  0000                     wtemp8	set	btemp+1
 10164  0000                     ttemp5	set	btemp+1
 10165  0000                     ttemp6	set	btemp+4
 10166  0000                     ttemp7	set	btemp+8
 10167                           tosu	equ	0xFFF
 10168                           tosh	equ	0xFFE
 10169                           tosl	equ	0xFFD
 10170                           stkptr	equ	0xFFC
 10171                           pclatu	equ	0xFFB
 10172                           pclath	equ	0xFFA
 10173                           pcl	equ	0xFF9
 10174                           tblptru	equ	0xFF8
 10175                           tblptrh	equ	0xFF7
 10176                           tblptrl	equ	0xFF6
 10177                           tablat	equ	0xFF5
 10178                           prodh	equ	0xFF4
 10179                           prodl	equ	0xFF3
 10180                           indf0	equ	0xFEF
 10181                           postinc0	equ	0xFEE
 10182                           postdec0	equ	0xFED
 10183                           preinc0	equ	0xFEC
 10184                           plusw0	equ	0xFEB
 10185                           fsr0h	equ	0xFEA
 10186                           fsr0l	equ	0xFE9
 10187                           wreg	equ	0xFE8
 10188                           indf1	equ	0xFE7
 10189                           postinc1	equ	0xFE6
 10190                           postdec1	equ	0xFE5
 10191                           preinc1	equ	0xFE4
 10192                           plusw1	equ	0xFE3
 10193                           fsr1h	equ	0xFE2
 10194                           fsr1l	equ	0xFE1
 10195                           bsr	equ	0xFE0
 10196                           indf2	equ	0xFDF
 10197                           postinc2	equ	0xFDE
 10198                           postdec2	equ	0xFDD
 10199                           preinc2	equ	0xFDC
 10200                           plusw2	equ	0xFDB
 10201                           fsr2h	equ	0xFDA
 10202                           fsr2l	equ	0xFD9
 10203                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     50     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1699_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S189$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_read_op
    _write_op->___lldiv
    _read_op->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar
    _get_temp->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_read_op
    _read_op->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  106266
                                             41 BANK0      9     9      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             3     2      1     196
                                             13 COMRAM     3     2      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_op                                              6     6      0   49628
                                            125 COMRAM     1     1      0
                                             36 BANK0      5     5      0
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49106
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       4     2      2     340
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    6194
                                             80 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             94 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   ___lldiv
   _get_temp
     _ADC_Init
     _ADC_Read
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _write_op
     ___lldiv (ARG)

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     32      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF      15        0.0%
DATA                 0      0      EF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 20 01:22:13 2019

             main@stored_temp 00E4                  ___fldiv@aexp 0040                  ___fldiv@bexp 003F  
                ___fldiv@sign 0038                   _SSPSTATbits 000FC7           ___wmul@multiplicand 0003  
                         l324 3328                           l421 2236                           l342 2046  
                         l406 2466                           l175 3A02                           l423 223E  
                         l344 204E                           l408 246E                           l283 368C  
                         l367 2616                           l369 261E                           l387 2BA8  
                         l567 350A                           l978 3024                           l988 318C  
                         _abs 387E                           _lcd 0080                           _pad 32F8  
                         wreg 000FE8                  ___flmul@aexp 0020                  ___flmul@bexp 0021  
                 main@address 00E8                  ___flmul@sign 001B                  ___flmul@temp 0026  
                ___flmul@prod 0022                  ___fltol@exp1 0068                  __CFG_WDT$OFF 000000  
                        l1202 2ABE                          ?_abs 0013                          l1124 1EBC  
                        l1070 1B5E                          l1135 1F2A                          l1215 38A6  
                        l1136 1F26                          l1154 176C                          l1171 1A0A  
                        l1163 1984                          l1164 1980                          l1085 1C52  
                        l1069 1B80                          l1094 1CB8                          l1246 29F8  
                        l1095 1CB4                          l4002 09E8                          l1195 2A40  
                        l1356 3652                          l4100 0F06                          l4006 0A1E  
                        l3400 3312                          l4016 0A84                          l3410 334A  
                        l4106 0F18                          l4026 0AF6                          l3404 3320  
                        l4116 0F3E                          l4036 0BD2                          l4300 3556  
                        l5110 30D2                          l5102 30BE                          l4310 3444  
                        l3414 3378                          l3406 3332                          l3510 2CD8  
                        l3502 2C9A                          l4206 1424                          l4126 0FCE  
                        l4070 0D72                          l4054 0D20                          l4046 0C78  
                        l5016 3960                          l4312 3490                          l3512 2CEC  
                        l3600 2028                          l4160 11E8                          l4152 1140  
                        l4144 10D2                          l4136 1034                          l3522 2D4A  
                        l3506 2CBE                          l4234 14D2                          l5116 30EE  
                        l5108 30C6                          l5060 34BC                          l4308 3436  
                        l3380 37FE                          l3700 2750                          l4092 0ECE  
                        l5062 34C8                          l4414 1A6A                          l4350 37B2  
                        l3366 3270                          l3470 27F4                          l3526 2D70  
                        l3518 2D34                          l3614 2068                          l4262 1662  
                        l4086 0E5E                          l4078 0DF0                          l5072 34FC  
                        l3376 37E8                          l3384 397A                          l3472 2808  
                        l3464 27CE                          l3712 2B6C                          l3536 2F9E  
                        l4272 16A8                          l4248 15A2                          l4192 1326  
                        l4184 12B8                          l4176 123A                          l4096 0ED8  
                        l5082 3064                          l4450 1AD6                          l4442 1AB6  
                        l4418 1A6E                          l4354 37CA                          l3386 397E  
                        l3490 28A0                          l3482 2864                          l3458 27A6  
                        l3618 2076                          l3730 2BF6                          l3722 2BC0  
                        l3538 2FB2                          l4516 1BC6                          l4508 1BA4  
                        l4620 1D7A                          l3652 21EE                          l3628 216E  
                        l3740 2C38                          l3548 300E                          l3564 3176  
                        l3556 311A                          l3820 2330                          l4268 169E  
                        l4518 1BCA                          l4526 1BDC                          l4438 1AB2  
                        l3486 287A                          l3670 265C                          l3726 2BD8  
                        l3558 312E                          l3806 22A2                          l4278 16B8  
                        ?_pad 0011                          l4392 366E                          l4544 1C76  
                        l4560 1C96                          l4536 1C42                          l4480 1B12  
                        l4640 1DBA                          l4616 1D76                          l3576 3762  
                        l3584 35D8                          l3648 21D6                          l3744 2C50  
                        l3736 2C1C                          l3920 0694                          l5098 30AE  
                        l4554 1C8C                          l4722 1F92                          l3850 28D4  
                        l3586 35E4                          l3682 26E2                          l3922 0698  
                        l4298 3530                          l4580 1CFE                          l4492 1B6C  
                        l4732 1FC8                          l4636 1DB6                          l3860 291E  
                        l3852 28D8                          l3844 241E                          l3828 23A6  
                        l3940 06C0                          l3932 06B4                          l3924 06A8  
                        l4494 1B70                          l4734 1FCA                          l4726 1FBC  
                        l4718 1F6E                          l4662 1E1C                          l4654 1E04  
                        l4830 194A                          l3870 293C                          l3758 24A4  
                        l4592 1D2C                          l4680 1E94                          l4672 1E6C  
                        l4648 1DEE                          l4824 192C                          l3872 2964  
                        l3768 2590                          l3792 2252                          l3960 0798  
                        l3944 06CA                          l3936 06BA                          l3928 06AE  
                        l4594 1D2E                          l4850 19C8                          l4754 1718  
                        l4914 2B30                          l3866 292E                          l3962 07A6  
                        l3946 070C                          l4588 1D24                          l4692 1ED2  
                        l4772 1758                          l4756 171C                          l3876 2998  
                        l3868 2936                          l3980 088E                          l4686 1EBA  
                        l4854 19E6                          l4782 178A                          l4774 175C  
                        l4758 172C                          l3798 2280                          l3982 089C  
                        l3958 077A                          l3896 31D8                          l4698 1EF0  
                        l4866 1A28                          l4890 2AA6                          l3898 31E6  
                        l3978 0870                          l4884 2A6E                          l3996 0948  
                        l4886 2A74                          l4878 2A50                          l4958 33C0  
                        l4896 2AE4                          l4888 2A80                          l4898 2AF0  
                        STR_1 061D                          STR_2 0648                          STR_3 0605  
                        STR_5 0605                          STR_7 0609                          STR_9 0609  
                        u3000 38DA                          u3100 363A                          u3110 363C  
                        u4000 29CA                          u3130 3938                          u3050 388C  
                        u3140 393A                          u3300 2FB6                          u3060 3908  
                        u3070 390A                          u5000 1CAE                          u3080 3842  
                        u4200 08E2                          u3250 2CF0                          u3330 3132  
                        u3090 3844                          u4130 07DE                          u3171 27D4  
                        u3420 203C                          u4140 07E0                          u3190 280C  
                        u3510 21C0                          u4070 3232                          u4310 0C2A  
                        u4230 09A0                          u4150 07EC                          u3360 375E  
                        u3440 2062                          u3600 2726                          u3281 2F7E  
                        u3450 217C                          u4410 0FFA                          u4250 0A76  
                        u5060 1D0A                          u5300 1F7C                          u3380 1FFA  
                        u3540 260C                          u4500 137E                          u4180 08D4  
                        u5310 1FA0                          u3470 219E                          u3390 1FFC  
                        u3550 26BE                          u3710 2C64                          u4270 0AB8  
                        u4190 08D6                          u3471 219C                          u3631 2B4C  
                        u5400 1778                          u3480 21AC                          u3560 26F0  
                        u3800 222C                          u4360 0E1C                          u5410 18EE  
                        u3490 21B2                          u3730 245C                          u4290 0B4E  
                        u3555 26AC                          u5260 1F20                          u5500 19F4  
                        u2940 3268                          u3580 2712                          u3900 23B6  
                        u3820 229E                          u4540 14B0                          u3590 2720  
                        u3830 22D4                          u5415 18E4                          u4800 1B34  
                        u2960 32B0                          u3680 2BEC                          u3760 25BA  
                        u3920 23D8                          u3840 22D6                          u4560 152A  
                        u4480 12E4                          u3761 25B8                          u3921 23D6  
                        u4810 1B44                          u5450 197A                          u3770 25C8  
                        u3930 23E6                          u4820 1B46                          u3780 25CE  
                        u3940 23EC                          u3860 230E                          u4580 15FA  
                        u5620 33E0                          _RCIF 007CF5                          u2990 38D8  
                        u3870 2310                          u5720 30D8                          u5650 34CC  
                        u4850 1B88                          u5490 19D6                          u3970 291A  
                        u3890 2382                          u5580 2AFA                          u5670 3052  
                        u3990 29C8                          u3895 2370                          u5680 3082  
                        u4980 1C9A                          u5685 3078                          u5837 36AC  
                        u5847 36D0                          u5857 36DE                          u5867 339C  
                        u5877 33E6                          u5887 3680                          abs@a 0013  
                        _dbuf 0098                          _flag 0097                          _atoi 28C2  
                        _ctoa 35C4                          _main 2D92                          _dtoa 1FD2  
                        _prec 008F                          _otoa 25F8                          _nout 008B  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                          _stoa 2B42  
                        btemp 007F                          _utoa 2448                          _xtoa 2218  
            __end_of_ADC_Init 3A16              __end_of_ADC_Read 36A4                          prodh 000FF4  
                        prodl 000FF3                          start 000E               ___fldiv@new_exp 0039  
                ___param_bank 000000             int_to_char@result 00CA                         ??_abs 0015  
                       ??_pad 0017                 ___fltol@sign1 0067               __end_of___aodiv 28C2  
                       ?_atoi 0008                         ?_ctoa 001C               __end_of___fladd 1D4A  
                       ?_main 0001                         ?_dtoa 001C                  get_temp@temp 0059  
             __end_of___aomod 2D92               __end_of___fldiv 1FD2                         STR_21 0627  
                       STR_14 0606                         STR_30 062A                         STR_23 0627  
                       STR_32 062A                         STR_41 0611                         STR_25 062D  
                       STR_18 060A                         STR_34 0630                         STR_27 062D  
                       STR_51 0639                         STR_36 0630                         STR_61 060D  
                       STR_46 0612                         STR_54 063C                         STR_71 0633  
                       STR_39 0611                         STR_56 063C                         STR_81 0615  
                       STR_49 0639                         STR_66 060E                         STR_74 0636  
                       STR_91 061E                         STR_59 060D                         STR_76 0636  
                       STR_69 0633                         STR_86 0616                         STR_94 063F  
                       STR_79 0615                         STR_96 063F               __end_of___flmul 1A3E  
                       ?_otoa 001C                         STR_99 0619               __end_of___fltol 3100  
                       ?_stoa 000A               __end_of___lldiv 351C                         ?_utoa 001C  
                       _T0CON 000FD5               __end_of___lodiv 3046                         ?_xtoa 001C  
             __end_of___lomod 31AE                         i2l244 387A                         _RCSTA 000FAB  
                vfpfcnvrt@fmt 0045                         _TMR0H 000FD7                  vfpfcnvrt@llu 006A  
                       _TMR0L 000FD6                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TXREG 000FAD               __end_of_getchar 39FE                         _fgetc 3418  
                       _flags 0091                         _getch 3A1E                         _errno 0089  
                       _fputc 3258               __end_of_isalpha 384A                         _fputs 37DE  
             __end_of_isdigit 3940               __end_of_read_op 3418                         atoi@n 0015  
                       pad@fp 0011                         atoi@s 0008                         _width 008D  
                       ctoa@c 001E                         _putch 3A2C                         ctoa@w 001F  
                       dtoa@d 001E                         dtoa@i 003E                         dtoa@n 0036  
                       dtoa@p 0030                         dtoa@s 0034                         dtoa@w 0032  
             __end_of_islower 38E0               __end_of_isspace 376A               __end_of_isupper 3910  
                       tablat 000FF5                  ?_int_to_char 007A                         otoa@d 001E  
                       otoa@i 003C                         otoa@n 0034                         otoa@p 002E  
                       otoa@t 0030                         otoa@w 0032                         plusw1 000FE3  
                       plusw2 000FDB                         stoa@i 0016                         stoa@l 001E  
                       stoa@p 001C                         stoa@s 000C                         stoa@w 0018  
                       ttemp5 0080                         ttemp6 0083                         ttemp7 0087  
                       utoa@d 001E                         utoa@i 003A                         utoa@n 0032  
                       utoa@p 002E                         utoa@w 0030                         status 000FD8  
                       wtemp8 0080               __end_of_sprintf 35C4                         xtoa@c 0041  
                       xtoa@d 001E                         xtoa@i 003F                         xtoa@n 0037  
                       xtoa@p 0033                         xtoa@w 0035                         xtoa@x 0026  
             __end_of_strncmp 3258               __end_of_toupper 365C              ___lodiv@dividend 0001  
                _toupper$1853 000D               __initialization 376A                int_to_char@num 007A  
                __end_of_atoi 2A02                  __end_of_ctoa 3612                  __end_of_main 2E8E  
                __end_of_dtoa 2218                  __end_of_otoa 277A                  __end_of_stoa 2C6E  
                __end_of_utoa 25F8                  __end_of_xtoa 2448            int_to_char@the_num 00D4  
                      ??_atoi 000A                        ??_ctoa 001F                        ??_main 00E1  
                      ??_dtoa 0026                        ??_otoa 0026                        ??_stoa 000E  
                      ??_utoa 0026                        ??_xtoa 0027                 __activetblptr 000002  
            ___lodiv@quotient 0011                        ?_fgetc 0003                        ?_getch 0001  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        ?_fputc 0001  
                      STR_101 0619                        STR_110 061A                        ?_fputs 000A  
                      STR_103 0601                        STR_105 0601                        STR_121 0621  
                      STR_114 0602                        STR_130 0624                        _ADRESH 000FC4  
                      STR_123 0621                        STR_132 0624                        STR_117 0642  
                      STR_126 0645                        _ADRESL 000FC3                        STR_119 0642  
                      STR_128 0645                        ?_putch 0001                        i2l5256 386E  
                      _RCREG1 000FAE                 vfpfcnvrt@done 0059                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _SSPBUF 000FC9                  ?_UARTNewLine 0001  
            __end_of___xxtofl 2B42                 ??_Timer0_Init 0001               write_op@address 0010  
         i2_Timer0_StartTimer 3A28                  vfprintf@cfmt 0078              __end_of_get_temp 2F78  
                   ??___aodiv 0011                     ??___fladd 0049                     ??___aomod 0011  
                      ___wmul 399A                     ??___fldiv 0030                     ??___flmul 0017  
                   ??___fltol 0063                     ??___lldiv 0009                     ??___lodiv 0011  
                   ??___lomod 0011               ADC_Read@channel 0005                        clear_0 3790  
     __size_of_UARTSendString 003A                        fgetc@c 000A                        pad@buf 0013  
                      ctoa@fp 001C                        dtoa@fp 001C                     ??_getchar 000C  
                      _strlen 3970                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                        fputs@s 000A                     ??_isalpha 0003  
                   ??_isdigit 0003                     ??_read_op 007E                     ?_ADC_Init 0001  
                   ?_ADC_Read 0001                     ??_islower 0003                  __mediumconst 0000  
                   ??_isspace 0003                        otoa@fp 001C          ?i2_Timer0_StartTimer 0001  
                      tblptrh 000FF7                     ??_isupper 0003                        tblptrl 000FF6  
                      tblptru 000FF8                   read_op@mask 00E0                        stoa@cp 001A  
      __size_of_initialize_RX 0010        __size_of_initialize_TX 0010                        stoa@fp 000A  
                      putch@c 0001              __end_of_vfprintf 3572                        utoa@fp 001C  
                   ??_sprintf 007A                        xtoa@fp 001C                     ??_strncmp 0007  
                   ??_toupper 0009                  ___xxtofl@arg 000B              __end_of_write_op 36E8  
                ___xxtofl@exp 000A                  ___xxtofl@val 0001                    __accesstop 0080  
     __end_of__initialization 3796                 ___rparam_used 000001                    ___fltol@f1 005F  
              __pcstackCOMRAM 0001                  __pidataBANK0 3A16                 __end_of_fgetc 349A  
               __end_of_getch 3A24                 __end_of_fputc 32F8                 __end_of_fputs 3816  
         __end_of_Timer0_Init 3970                 __end_of_putch 3A2E                    ??_ADC_Init 0001  
                  ??_ADC_Read 0003         ??i2_Timer0_StartTimer 0001                       ??_fgetc 0005  
                     ??_getch 0003                       ??_fputc 0005                       ??_fputs 000E  
                     ??_putch 0001                    __pbssBANK0 0080          __size_of_int_to_char 0044  
               _initialize_RX 39E0                 _initialize_TX 39D0                       ?___wmul 0001  
                     ?_strlen 0001            __size_of_timingISR 3876                     ?___xxtofl 0001  
          __size_of_vfpfcnvrt 10A0                       _SSPCON1 000FC6                     ?_get_temp 0051  
            ___lomod@dividend 0001                 ?_UARTSendChar 0001                       __Hparam 0000  
        __size_of_UARTNewLine 0010                   _Timer0_Init 3940                ?_initialize_RX 0001  
              ?_initialize_TX 0001                       __Lparam 0000                       ___aodiv 277A  
                     ___fladd 1A3E                       ___aomod 2C6E                       ___fldiv 1D4A  
                     ___flmul 16EC                       ___fltol 3046                       ___lldiv 349A  
             __size_of___wmul 0026                       ___lodiv 2F78                       ___lomod 3100  
                   ?_vfprintf 0072                  __psmallconst 0600                _UARTSendString 37A4  
                     __pcinit 376A                       __ramtop 0600                       __ptext0 2D92  
                     __ptext1 36A4                       __ptext2 3392                       __ptext3 36E8  
                     __ptext4 3572                       __ptext5 351C                       __ptext6 064C  
                     __ptext7 2218                       __ptext8 3612                       __ptext9 38B0  
                   ?_write_op 000E                       _getchar 39F0                     _T0CONbits 000FD5  
             __size_of_strlen 002A                  __size_of_abs 0032                  __size_of_pad 009A  
                     _isalpha 3816                       _isdigit 3910                       _read_op 3392  
                  ??___xxtofl 0005                       _islower 38B0                       _isspace 372C  
                     _isupper 38E0                       fgetc@fp 0003                       _time_ms 0085  
                     atoi@neg 000E                       _sprintf 3572                    ??_get_temp 0055  
                     _strncmp 31AE                __pintcode_body 384A                       _toupper 3612  
        end_of_initialization 3796                ??_UARTSendChar 0001                       fputc@fp 0003  
               __Lmediumconst 0000                       int_func 384A                       fputs@fp 000C  
             ___lldiv@divisor 0005             __end_of_timingISR 387E               ___lldiv@counter 000D  
           __end_of_vfpfcnvrt 16EC                     _RCSTAbits 000FAB        __end_of_UARTSendString 37DE  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 0078  
                     strlen@a 0003                       strlen@s 0001                     _PORTCbits 000F82  
                  ??_write_op 000F                   ___fladd@grs 0050                 ___xxtofl@sign 0009  
                   _TRISCbits 000F94             _Timer0_StartTimer 3A24                   ___fldiv@grs 003B  
                 ___fldiv@rem 0034             __size_of_ADC_Init 000A             __size_of_ADC_Read 0048  
          ?_Timer0_StartTimer 0001                   ___flmul@grs 001C                     _TXSTAbits 000FAC  
             ??_initialize_RX 0001               ??_initialize_TX 0001           ??_Timer0_StartTimer 0001  
                write_op@data 000E               ?_UARTSendString 00D8                   vfpfcnvrt@ap 0047  
                 vfpfcnvrt@cp 0057                   vfpfcnvrt@fp 0043                   vfpfcnvrt@ll 005F  
              __end_of___wmul 39C0                   vfpfcnvrt@vp 0067     __end_of_Timer0_StartTimer 3A28  
              __end_of_strlen 399A           start_initialization 376A               ___lodiv@divisor 0009  
             ___lodiv@counter 0019                   __end_of_abs 38B0                   __end_of_pad 3392  
                 vfprintf@fmt 0074                      ??___wmul 0005                   __pdataBANK0 00EA  
        __end_of_UARTSendChar 3A0C   __end_ofi2_Timer0_StartTimer 3A2C                      ??_strlen 0003  
                   ___fladd@a 0045                     ___fladd@b 0041                     ___fldiv@a 002C  
                   ___fldiv@b 0028                     ___flmul@a 0013                     ___flmul@b 000F  
               __pcstackBANK0 00B8              ___aodiv@dividend 0001             __size_of___xxtofl 0140  
               ??_int_to_char 007E             __size_of_get_temp 00EA                     _atoi$1696 0010  
                   _atoi$1697 0014                     _atoi$1698 0012                  ?_Timer0_Init 0001  
                   _dtoa$1050 002E                 UARTSendChar@c 0001                     __pintcode 0008  
                    ?___aodiv 0001                      ?___fladd 0041                      ?___aomod 0001  
                    ?___fldiv 0028              ___aodiv@quotient 0013                      ?___flmul 000F  
                    ?___fltol 005F                      ?___lldiv 0001                      ?___lodiv 0001  
                    ?___lomod 0001           get_temp@adc_voltage 005D             __size_of_vfprintf 0056  
                    ?_getchar 0001               ___lomod@divisor 0009                   __smallconst 0600  
             ___lomod@counter 0011    __size_of_Timer0_StartTimer 0004                      ?_isalpha 0001  
                    ?_isdigit 0001                      ?_read_op 0001                      _ADC_Init 3A0C  
                    _ADC_Read 365C             __size_of_write_op 0044                      ?_islower 0001  
                    ?_isspace 0001                      ?_isupper 0001                __size_of_fgetc 0082  
              __size_of_getch 0006                      ?_sprintf 00B8                __size_of_fputc 00A0  
              __size_of_fputs 0038                      ?_strncmp 0001                      ?_toupper 0007  
              __size_of_putch 0002                 ??_UARTNewLine 0002                ___wmul@product 0005  
             UARTSendString@c 00D8               UARTSendString@i 00DA           __end_of_int_to_char 372C  
                    _GO_nDONE 007E11                      _RCONbits 000FD0                     _timingISR 0008  
                   _vfpfcnvrt 064C                     _xtoa$1086 002F                     _xtoa$1087 0031  
           ___wmul@multiplier 0001                  _isspace$1733 0007              main@time_elapsed 00E6  
                  vfpfcnvrt@c 0069                   _INTCON2bits 000FF1                     copy_data0 377E  
            ??_UARTSendString 007E                      __Hrparam 0000         __size_of_UARTSendChar 000E  
                  vfprintf@ap 0076                      __Lrparam 0000                    vfprintf@fp 0072  
         __end_of_UARTNewLine 39D0                    ?_timingISR 0001              __size_of___aodiv 0148  
            __size_of___fladd 030C              __size_of___aomod 0124              __size_of___fldiv 0288  
            __size_of___flmul 0352              __size_of___fltol 00BA              __size_of___lldiv 0082  
            __size_of___lodiv 00CE              __size_of___lomod 00AE                    ?_vfpfcnvrt 0043  
             ___aodiv@divisor 0009               ___aodiv@counter 0011              __size_of_getchar 000E  
                  sprintf@fmt 00BA                      ___xxtofl 2A02              __size_of_isalpha 0034  
            __size_of_isdigit 0030              __size_of_read_op 0086              __size_of_islower 0030  
            __size_of_isspace 003E                      __ptext10 38E0                      __ptext11 3816  
                    __ptext20 2C6E                      __ptext12 2448                      __ptext21 277A  
                    __ptext13 3100                      __ptext30 3910                      __ptext22 35C4  
                    __ptext14 2F78                      __ptext31 399A                      __ptext23 32F8  
                    __ptext15 31AE                      __ptext40 2E8E                      __ptext32 39F0  
                    __ptext24 3970                      __ptext16 2B42                      __ptext41 2A02  
                    __ptext33 3418                      __ptext25 37DE                      __ptext17 25F8  
                    __ptext50 3940                      __ptext42 16EC                      __ptext34 3A1E  
                    __ptext26 3258                      __ptext18 1FD2                      __ptext43 1D4A  
                    __ptext35 37A4                      __ptext27 3A2C                      __ptext19 387E  
                    __ptext52 3A28                      __ptext44 1A3E                      __ptext36 39C0  
                    __ptext28 28C2                      __ptext45 365C                      __ptext37 39FE  
                    __ptext29 372C                      __ptext46 3A0C                      __ptext38 39D0  
                    __ptext47 349A                      __ptext39 39E0                      __ptext48 3046  
                    __ptext49 3A24              __size_of_isupper 0030                      _get_temp 2E8E  
            __size_of_sprintf 0052              __size_of_strncmp 00AA              __size_of_toupper 004A  
             _interval_events 0093                  _UARTSendChar 39FE                   _int_to_char 36E8  
               __size_of_atoi 0140                 __size_of_ctoa 004E                 __size_of_main 00FC  
               __size_of_dtoa 0246                 __size_of_otoa 0182                 __size_of_stoa 012C  
               __size_of_utoa 01B0                 __size_of_xtoa 0230         __end_of_initialize_RX 39F0  
       __end_of_initialize_TX 39E0                     stoa@F1152 00EA          __size_of_Timer0_Init 0030  
                    int$flags 007F                read_op@address 00DC                      _ungetbuf 0096  
                    _ungetcnt 0095                      _vfprintf 351C                      main@temp 00E2  
            ___aomod@dividend 0001                      _write_op 36A4                _vfpfcnvrt$1101 005B  
              _vfpfcnvrt$1102 005D                    _INTCONbits 000FF2                      isalpha@c 0001  
                    isdigit@c 0001                      read_op@i 00DD                      intlevel2 0000  
                   sprintf@ap 00C8                      islower@c 0001                      isspace@c 0001  
            ___lldiv@dividend 0001                   _UARTNewLine 39C0                      isupper@c 0001  
                   strncmp@_l 0001                     strncmp@_r 0003                   ??_timingISR 0001  
             ___aomod@divisor 0009                   ??_vfpfcnvrt 0049                      stoa@nuls 000F  
             ___aomod@counter 0011                 read_op@result 00DF                      sprintf@f 00C2  
        get_temp@real_voltage 0055                      sprintf@s 00B8              ___lldiv@quotient 0009  
                    strncmp@l 0008                      strncmp@n 0005                      strncmp@r 000A  
                    toupper@c 0007  __size_ofi2_Timer0_StartTimer 0004                 ___fladd@signs 004D  
                ___aodiv@sign 0012                  ___fladd@aexp 004E                  ___fladd@bexp 004F  
                ___aomod@sign 0012  
