

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 27 04:59:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F452 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  002FA0                     __pidataBANK0:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for stoa@F1152
    99  002FA0  28                 	db	40
   100  002FA1  6E                 	db	110
   101  002FA2  75                 	db	117
   102  002FA3  6C                 	db	108
   103  002FA4  6C                 	db	108
   104  002FA5  29                 	db	41
   105  002FA6  00                 	db	0
   106  0000                     _CCP1CON	set	4029
   107  0000                     _CCPR1L	set	4030
   108  0000                     _PR2	set	4043
   109  0000                     _T2CON	set	4042
   110  0000                     _ADRESL	set	4035
   111  0000                     _ADRESH	set	4036
   112  0000                     _ADCON0	set	4034
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPCON1	set	4038
   115  0000                     _SSPSTATbits	set	4039
   116  0000                     _T0CON	set	4053
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR0H	set	4055
   119  0000                     _T0CONbits	set	4053
   120  0000                     _ADCON1	set	4033
   121  0000                     _RCREG1	set	4014
   122  0000                     _TXREG	set	4013
   123  0000                     _RCSTAbits	set	4011
   124  0000                     _RCSTA	set	4011
   125  0000                     _SPBRG	set	4015
   126  0000                     _TXSTAbits	set	4012
   127  0000                     _RCONbits	set	4048
   128  0000                     _TRISCbits	set	3988
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TRISA	set	3986
   132  0000                     _PORTA	set	3968
   133  0000                     _PORTD	set	3971
   134  0000                     _PORTB	set	3969
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISC	set	3988
   138  0000                     _GO_nDONE	set	32274
   139  0000                     _TMR0IE	set	32661
   140  0000                     _TMR0IF	set	32658
   141  0000                     _RCIF	set	31989
   142  0000                     _RC0	set	31760
   143  0000                     _RB5	set	31757
   144                           
   145                           	psect	smallconst
   146  000600                     __psmallconst:
   147                           	opt callstack 0
   148  000600  00                 	db	0
   149  000601                     STR_103:
   150  000601  68                 	db	104	;'h'
   151  000602  68                 	db	104	;'h'
   152  000603  58                 	db	88	;'X'
   153  000604  00                 	db	0
   154  000605                     STR_3:
   155  000605  68                 	db	104	;'h'
   156  000606  68                 	db	104	;'h'
   157  000607  64                 	db	100	;'d'
   158  000608  00                 	db	0
   159  000609                     STR_7:
   160  000609  68                 	db	104	;'h'
   161  00060A  68                 	db	104	;'h'
   162  00060B  69                 	db	105	;'i'
   163  00060C  00                 	db	0
   164  00060D                     STR_59:
   165  00060D  68                 	db	104	;'h'
   166  00060E  68                 	db	104	;'h'
   167  00060F  6E                 	db	110	;'n'
   168  000610  00                 	db	0
   169  000611                     STR_39:
   170  000611  68                 	db	104	;'h'
   171  000612  68                 	db	104	;'h'
   172  000613  6F                 	db	111	;'o'
   173  000614  00                 	db	0
   174  000615                     STR_79:
   175  000615  68                 	db	104	;'h'
   176  000616  68                 	db	104	;'h'
   177  000617  75                 	db	117	;'u'
   178  000618  00                 	db	0
   179  000619                     STR_99:
   180  000619  68                 	db	104	;'h'
   181  00061A  68                 	db	104	;'h'
   182  00061B  78                 	db	120	;'x'
   183  00061C  00                 	db	0
   184  00061D                     STR_1:
   185  00061D  25                 	db	37
   186  00061E  6C                 	db	108	;'l'
   187  00061F  75                 	db	117	;'u'
   188  000620  00                 	db	0
   189  000621                     STR_121:
   190  000621  6C                 	db	108	;'l'
   191  000622  58                 	db	88	;'X'
   192  000623  00                 	db	0
   193  000624                     STR_130:
   194  000624  7A                 	db	122	;'z'
   195  000625  58                 	db	88	;'X'
   196  000626  00                 	db	0
   197  000627                     STR_21:
   198  000627  6C                 	db	108	;'l'
   199  000628  64                 	db	100	;'d'
   200  000629  00                 	db	0
   201  00062A                     STR_30:
   202  00062A  7A                 	db	122	;'z'
   203  00062B  64                 	db	100	;'d'
   204  00062C  00                 	db	0
   205  00062D                     STR_25:
   206  00062D  6C                 	db	108	;'l'
   207  00062E  69                 	db	105	;'i'
   208  00062F  00                 	db	0
   209  000630                     STR_34:
   210  000630  7A                 	db	122	;'z'
   211  000631  69                 	db	105	;'i'
   212  000632  00                 	db	0
   213  000633                     STR_69:
   214  000633  6C                 	db	108	;'l'
   215  000634  6E                 	db	110	;'n'
   216  000635  00                 	db	0
   217  000636                     STR_74:
   218  000636  7A                 	db	122	;'z'
   219  000637  6E                 	db	110	;'n'
   220  000638  00                 	db	0
   221  000639                     STR_49:
   222  000639  6C                 	db	108	;'l'
   223  00063A  6F                 	db	111	;'o'
   224  00063B  00                 	db	0
   225  00063C                     STR_54:
   226  00063C  7A                 	db	122	;'z'
   227  00063D  6F                 	db	111	;'o'
   228  00063E  00                 	db	0
   229  00063F                     STR_94:
   230  00063F  7A                 	db	122	;'z'
   231  000640  75                 	db	117	;'u'
   232  000641  00                 	db	0
   233  000642                     STR_117:
   234  000642  6C                 	db	108	;'l'
   235  000643  78                 	db	120	;'x'
   236  000644  00                 	db	0
   237  000645                     STR_126:
   238  000645  7A                 	db	122	;'z'
   239  000646  78                 	db	120	;'x'
   240  000647  00                 	db	0
   241  000648  25                 	db	37
   242  000649  64                 	db	100	;'d'
   243  00064A  00                 	db	0
   244  0000                     
   245                           ; #config settings
   246  00064B  00                 	db	0	; dummy byte at the end
   247  0000                     
   248                           	psect	cinit
   249  002D30                     __pcinit:
   250                           	opt callstack 0
   251  002D30                     start_initialization:
   252                           	opt callstack 0
   253  002D30                     __initialization:
   254                           	opt callstack 0
   255                           
   256                           ; Initialize objects allocated to BANK0 (7 bytes)
   257                           ; load TBLPTR registers with __pidataBANK0
   258  002D30  0EA0               	movlw	low __pidataBANK0
   259  002D32  6EF6               	movwf	tblptrl,c
   260  002D34  0E2F               	movlw	high __pidataBANK0
   261  002D36  6EF7               	movwf	tblptrh,c
   262  002D38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   263  002D3A  6EF8               	movwf	tblptru,c
   264  002D3C  EE00  F0E1         	lfsr	0,__pdataBANK0
   265  002D40  EE10 F007          	lfsr	1,7
   266  002D44                     copy_data0:
   267  002D44  0009               	tblrd		*+
   268  002D46  CFF5 FFEE          	movff	tablat,postinc0
   269  002D4A  50E5               	movf	postdec1,w,c
   270  002D4C  50E1               	movf	fsr1l,w,c
   271  002D4E  E1FA               	bnz	copy_data0
   272                           
   273                           ; Clear objects allocated to BANK0 (59 bytes)
   274  002D50  EE00  F080         	lfsr	0,__pbssBANK0
   275  002D54  0E3B               	movlw	59
   276  002D56                     clear_0:
   277  002D56  6AEE               	clrf	postinc0,c
   278  002D58  06E8               	decf	wreg,f,c
   279  002D5A  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to COMRAM (1 bytes)
   282  002D5C  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   283  002D5E                     end_of_initialization:
   284                           	opt callstack 0
   285  002D5E                     __end_of__initialization:
   286                           	opt callstack 0
   287  002D5E  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288  002D60  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  002D62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  002D64  6EF8               	movwf	tblptru,c
   291  002D66  0100               	movlb	0
   292  002D68  EF08  F012         	goto	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMRAM
   295  00007E                     __pbssCOMRAM:
   296                           	opt callstack 0
   297  00007E                     _ungetcnt:
   298                           	opt callstack 0
   299  00007E                     	ds	1
   300                           
   301                           	psect	bssBANK0
   302  000080                     __pbssBANK0:
   303                           	opt callstack 0
   304  000080                     _lcd:
   305                           	opt callstack 0
   306  000080                     	ds	5
   307  000085                     _time_ms_2:
   308                           	opt callstack 0
   309  000085                     	ds	4
   310  000089                     _time_ms:
   311                           	opt callstack 0
   312  000089                     	ds	4
   313  00008D                     _errno:
   314                           	opt callstack 0
   315  00008D                     	ds	2
   316  00008F                     _nout:
   317                           	opt callstack 0
   318  00008F                     	ds	2
   319  000091                     _width:
   320                           	opt callstack 0
   321  000091                     	ds	2
   322  000093                     _prec:
   323                           	opt callstack 0
   324  000093                     	ds	2
   325  000095                     _flags:
   326                           	opt callstack 0
   327  000095                     	ds	2
   328  000097                     _interval_events:
   329                           	opt callstack 0
   330  000097                     	ds	2
   331  000099                     	ds	1
   332  00009A                     _flag:
   333                           	opt callstack 0
   334  00009A                     	ds	1
   335  00009B                     _dbuf:
   336                           	opt callstack 0
   337  00009B                     	ds	32
   338                           
   339                           	psect	dataBANK0
   340  0000E1                     __pdataBANK0:
   341                           	opt callstack 0
   342  0000E1                     stoa@F1152:
   343                           	opt callstack 0
   344  0000E1                     	ds	7
   345                           
   346                           	psect	cstackBANK0
   347  0000BB                     __pcstackBANK0:
   348                           	opt callstack 0
   349  0000BB                     ?_sprintf:
   350                           	opt callstack 0
   351  0000BB                     sprintf@s:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x0
   355  0000BB                     	ds	2
   356  0000BD                     sprintf@fmt:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  0000BD                     	ds	8
   361  0000C5                     sprintf@f:
   362                           	opt callstack 0
   363                           
   364                           ; 6 bytes @ 0xA
   365  0000C5                     	ds	6
   366  0000CB                     sprintf@ap:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x10
   370  0000CB                     	ds	2
   371  0000CD                     int_to_char@result:
   372                           	opt callstack 0
   373                           
   374                           ; 10 bytes @ 0x12
   375  0000CD                     	ds	10
   376  0000D7                     int_to_char@the_num:
   377                           	opt callstack 0
   378                           
   379                           ; 4 bytes @ 0x1C
   380  0000D7                     	ds	4
   381  0000DB                     UARTSendString@c:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x20
   385  0000DB                     	ds	2
   386  0000DD                     UARTSendString@i:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x22
   390  0000DD                     	ds	2
   391  0000DF                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x24
   394  0000DF                     	ds	2
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	opt callstack 0
   399  000001                     ?_strlen:
   400                           	opt callstack 0
   401  000001                     ?_isupper:
   402                           	opt callstack 0
   403  000001                     ?_isalpha:
   404                           	opt callstack 0
   405  000001                     ?_isdigit:
   406                           	opt callstack 0
   407  000001                     ?_strncmp:
   408                           	opt callstack 0
   409  000001                     ?_isspace:
   410                           	opt callstack 0
   411  000001                     ?_getch:
   412                           	opt callstack 0
   413  000001                     ?_islower:
   414                           	opt callstack 0
   415  000001                     ?___wmul:
   416                           	opt callstack 0
   417  000001                     ?___aodiv:
   418                           	opt callstack 0
   419  000001                     ?___aomod:
   420                           	opt callstack 0
   421  000001                     ?___lodiv:
   422                           	opt callstack 0
   423  000001                     ?___lomod:
   424                           	opt callstack 0
   425  000001                     write_op@data:
   426                           	opt callstack 0
   427  000001                     read_op@address:
   428                           	opt callstack 0
   429  000001                     UARTSendChar@c:
   430                           	opt callstack 0
   431  000001                     ___wmul@multiplier:
   432                           	opt callstack 0
   433  000001                     isalpha@c:
   434                           	opt callstack 0
   435  000001                     isdigit@c:
   436                           	opt callstack 0
   437  000001                     isspace@c:
   438                           	opt callstack 0
   439  000001                     isupper@c:
   440                           	opt callstack 0
   441  000001                     fputc@c:
   442                           	opt callstack 0
   443  000001                     strlen@s:
   444                           	opt callstack 0
   445  000001                     strncmp@_l:
   446                           	opt callstack 0
   447  000001                     islower@c:
   448                           	opt callstack 0
   449  000001                     ___aodiv@dividend:
   450                           	opt callstack 0
   451  000001                     ___aomod@dividend:
   452                           	opt callstack 0
   453  000001                     ___lodiv@dividend:
   454                           	opt callstack 0
   455  000001                     ___lomod@dividend:
   456                           	opt callstack 0
   457                           
   458                           ; 8 bytes @ 0x0
   459  000001                     	ds	1
   460  000002                     write_op@address:
   461                           	opt callstack 0
   462  000002                     read_op@result:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x1
   466  000002                     	ds	1
   467  000003                     ??_isupper:
   468  000003                     ??_isalpha:
   469  000003                     ??_isdigit:
   470  000003                     ??_isspace:
   471  000003                     ??_islower:
   472  000003                     ?_fgetc:
   473                           	opt callstack 0
   474  000003                     ___wmul@multiplicand:
   475                           	opt callstack 0
   476  000003                     fputc@fp:
   477                           	opt callstack 0
   478  000003                     fgetc@fp:
   479                           	opt callstack 0
   480  000003                     strlen@a:
   481                           	opt callstack 0
   482  000003                     strncmp@_r:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  000003                     	ds	2
   487  000005                     ??_fputc:
   488  000005                     ??_fgetc:
   489  000005                     ___wmul@product:
   490                           	opt callstack 0
   491  000005                     strncmp@n:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x4
   495  000005                     	ds	2
   496  000007                     ??_strncmp:
   497  000007                     ?_toupper:
   498                           	opt callstack 0
   499  000007                     _isspace$1733:
   500                           	opt callstack 0
   501  000007                     toupper@c:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x6
   505  000007                     	ds	1
   506  000008                     ?_atoi:
   507                           	opt callstack 0
   508  000008                     atoi@s:
   509                           	opt callstack 0
   510  000008                     strncmp@l:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x7
   514  000008                     	ds	1
   515  000009                     ??_toupper:
   516  000009                     ___aodiv@divisor:
   517                           	opt callstack 0
   518  000009                     ___aomod@divisor:
   519                           	opt callstack 0
   520  000009                     ___lodiv@divisor:
   521                           	opt callstack 0
   522  000009                     ___lomod@divisor:
   523                           	opt callstack 0
   524                           
   525                           ; 8 bytes @ 0x8
   526  000009                     	ds	1
   527  00000A                     ??_atoi:
   528  00000A                     ?_stoa:
   529                           	opt callstack 0
   530  00000A                     stoa@fp:
   531                           	opt callstack 0
   532  00000A                     fputs@s:
   533                           	opt callstack 0
   534  00000A                     fgetc@c:
   535                           	opt callstack 0
   536  00000A                     strncmp@r:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x9
   540  00000A                     	ds	2
   541  00000C                     stoa@s:
   542                           	opt callstack 0
   543  00000C                     fputs@fp:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0xB
   547  00000C                     	ds	1
   548  00000D                     _toupper$1853:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0xC
   552  00000D                     	ds	1
   553  00000E                     ??_stoa:
   554  00000E                     fputs@c:
   555                           	opt callstack 0
   556  00000E                     atoi@neg:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0xD
   560  00000E                     	ds	1
   561  00000F                     fputs@i:
   562                           	opt callstack 0
   563  00000F                     stoa@nuls:
   564                           	opt callstack 0
   565                           
   566                           ; 7 bytes @ 0xE
   567  00000F                     	ds	1
   568  000010                     _atoi$1696:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0xF
   572  000010                     	ds	1
   573  000011                     ?_pad:
   574                           	opt callstack 0
   575  000011                     ___aodiv@counter:
   576                           	opt callstack 0
   577  000011                     ___aomod@counter:
   578                           	opt callstack 0
   579  000011                     ___lomod@counter:
   580                           	opt callstack 0
   581  000011                     pad@fp:
   582                           	opt callstack 0
   583  000011                     ___lodiv@quotient:
   584                           	opt callstack 0
   585                           
   586                           ; 8 bytes @ 0x10
   587  000011                     	ds	1
   588  000012                     ___aodiv@sign:
   589                           	opt callstack 0
   590  000012                     ___aomod@sign:
   591                           	opt callstack 0
   592  000012                     _atoi$1698:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x11
   596  000012                     	ds	1
   597  000013                     ?_abs:
   598                           	opt callstack 0
   599  000013                     pad@buf:
   600                           	opt callstack 0
   601  000013                     abs@a:
   602                           	opt callstack 0
   603  000013                     ___aodiv@quotient:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x12
   607  000013                     	ds	1
   608  000014                     _atoi$1697:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x13
   612  000014                     	ds	1
   613  000015                     ??_abs:
   614  000015                     pad@p:
   615                           	opt callstack 0
   616  000015                     atoi@n:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x14
   620  000015                     	ds	1
   621  000016                     stoa@i:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x15
   625  000016                     	ds	1
   626  000017                     ??_pad:
   627                           
   628                           ; 1 bytes @ 0x16
   629  000017                     	ds	1
   630  000018                     pad@i:
   631                           	opt callstack 0
   632  000018                     stoa@w:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x17
   636  000018                     	ds	1
   637  000019                     ___lodiv@counter:
   638                           	opt callstack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  000019                     	ds	1
   642  00001A                     pad@w:
   643                           	opt callstack 0
   644  00001A                     stoa@cp:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x19
   648  00001A                     	ds	2
   649  00001C                     ?_ctoa:
   650                           	opt callstack 0
   651  00001C                     ?_dtoa:
   652                           	opt callstack 0
   653  00001C                     ?_otoa:
   654                           	opt callstack 0
   655  00001C                     ?_utoa:
   656                           	opt callstack 0
   657  00001C                     ?_xtoa:
   658                           	opt callstack 0
   659  00001C                     ctoa@fp:
   660                           	opt callstack 0
   661  00001C                     dtoa@fp:
   662                           	opt callstack 0
   663  00001C                     otoa@fp:
   664                           	opt callstack 0
   665  00001C                     stoa@p:
   666                           	opt callstack 0
   667  00001C                     utoa@fp:
   668                           	opt callstack 0
   669  00001C                     xtoa@fp:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x1B
   673  00001C                     	ds	2
   674  00001E                     ctoa@c:
   675                           	opt callstack 0
   676  00001E                     stoa@l:
   677                           	opt callstack 0
   678  00001E                     dtoa@d:
   679                           	opt callstack 0
   680  00001E                     otoa@d:
   681                           	opt callstack 0
   682  00001E                     utoa@d:
   683                           	opt callstack 0
   684  00001E                     xtoa@d:
   685                           	opt callstack 0
   686                           
   687                           ; 8 bytes @ 0x1D
   688  00001E                     	ds	1
   689  00001F                     ctoa@w:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x1E
   693  00001F                     	ds	7
   694  000026                     ??_dtoa:
   695  000026                     ??_otoa:
   696  000026                     ??_utoa:
   697  000026                     xtoa@x:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x25
   701  000026                     	ds	1
   702  000027                     ??_xtoa:
   703                           
   704                           ; 1 bytes @ 0x26
   705  000027                     	ds	7
   706  00002E                     _dtoa$1050:
   707                           	opt callstack 0
   708  00002E                     otoa@p:
   709                           	opt callstack 0
   710  00002E                     utoa@p:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x2D
   714  00002E                     	ds	1
   715  00002F                     _xtoa$1086:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x2E
   719  00002F                     	ds	1
   720  000030                     dtoa@p:
   721                           	opt callstack 0
   722  000030                     otoa@t:
   723                           	opt callstack 0
   724  000030                     utoa@w:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x2F
   728  000030                     	ds	1
   729  000031                     _xtoa$1087:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x30
   733  000031                     	ds	1
   734  000032                     dtoa@w:
   735                           	opt callstack 0
   736  000032                     otoa@w:
   737                           	opt callstack 0
   738  000032                     utoa@n:
   739                           	opt callstack 0
   740                           
   741                           ; 8 bytes @ 0x31
   742  000032                     	ds	1
   743  000033                     xtoa@p:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x32
   747  000033                     	ds	1
   748  000034                     dtoa@s:
   749                           	opt callstack 0
   750  000034                     otoa@n:
   751                           	opt callstack 0
   752                           
   753                           ; 8 bytes @ 0x33
   754  000034                     	ds	1
   755  000035                     xtoa@w:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x34
   759  000035                     	ds	1
   760  000036                     dtoa@n:
   761                           	opt callstack 0
   762                           
   763                           ; 8 bytes @ 0x35
   764  000036                     	ds	1
   765  000037                     xtoa@n:
   766                           	opt callstack 0
   767                           
   768                           ; 8 bytes @ 0x36
   769  000037                     	ds	3
   770  00003A                     utoa@i:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x39
   774  00003A                     	ds	2
   775  00003C                     otoa@i:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x3B
   779  00003C                     	ds	2
   780  00003E                     dtoa@i:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x3D
   784  00003E                     	ds	1
   785  00003F                     xtoa@i:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x3E
   789  00003F                     	ds	2
   790  000041                     xtoa@c:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x40
   794  000041                     	ds	2
   795  000043                     ?_vfpfcnvrt:
   796                           	opt callstack 0
   797  000043                     vfpfcnvrt@fp:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x42
   801  000043                     	ds	2
   802  000045                     vfpfcnvrt@fmt:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x44
   806  000045                     	ds	2
   807  000047                     vfpfcnvrt@ap:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x46
   811  000047                     	ds	2
   812  000049                     ??_vfpfcnvrt:
   813                           
   814                           ; 1 bytes @ 0x48
   815  000049                     	ds	14
   816  000057                     vfpfcnvrt@cp:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x56
   820  000057                     	ds	2
   821  000059                     vfpfcnvrt@done:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x58
   825  000059                     	ds	2
   826  00005B                     _vfpfcnvrt$1101:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x5A
   830  00005B                     	ds	2
   831  00005D                     _vfpfcnvrt$1102:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x5C
   835  00005D                     	ds	2
   836  00005F                     vfpfcnvrt@ll:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x5E
   840  00005F                     	ds	8
   841  000067                     vfpfcnvrt@vp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x66
   845  000067                     	ds	2
   846  000069                     vfpfcnvrt@c:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x68
   850  000069                     	ds	1
   851  00006A                     vfpfcnvrt@llu:
   852                           	opt callstack 0
   853                           
   854                           ; 8 bytes @ 0x69
   855  00006A                     	ds	8
   856  000072                     ?_vfprintf:
   857                           	opt callstack 0
   858  000072                     vfprintf@fp:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x71
   862  000072                     	ds	2
   863  000074                     vfprintf@fmt:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x73
   867  000074                     	ds	2
   868  000076                     vfprintf@ap:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x75
   872  000076                     	ds	2
   873  000078                     vfprintf@cfmt:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x77
   877  000078                     	ds	2
   878  00007A                     ?_int_to_char:
   879                           	opt callstack 0
   880  00007A                     int_to_char@num:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0x79
   884  00007A                     	ds	4
   885  00007E                     
   886                           ; 1 bytes @ 0x7D
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 61 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0
   908 ;;      Temps:          0       2       0       0       0       0       0
   909 ;;      Totals:         0       2       0       0       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels required when called:   11
   912 ;; This function calls:
   913 ;;		_UARTNewLine
   914 ;;		_UARTSendString
   915 ;;		_initialize_RX
   916 ;;		_initialize_TX
   917 ;;		_int_to_char
   918 ;;		_read_op
   919 ;;		_write_op
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926  002410                     __ptext0:
   927                           	opt callstack 0
   928  002410                     _main:
   929                           	opt callstack 0
   930  002410  FFFF               	dw	65535	; assembler added errata NOP
   931                           
   932                           ;main.c: 62:   INTCONbits.RBIE = 0;
   933                           
   934                           ;incstack = 0
   935  002412  96F2               	bcf	4082,3,c	;volatile
   936                           
   937                           ;main.c: 63:   INTCON2bits.RBPU = 1;
   938  002414  8EF1               	bsf	4081,7,c	;volatile
   939                           
   940                           ;main.c: 65:   initialize_TX();
   941  002416  EC96  F017         	call	_initialize_TX	;wreg free
   942                           
   943                           ;main.c: 66:   initialize_RX();
   944  00241A  ECA0  F017         	call	_initialize_RX	;wreg free
   945                           
   946                           ;main.c: 67:   TRISCbits.TRISC7 = 1;
   947  00241E  8E94               	bsf	3988,7,c	;volatile
   948                           
   949                           ;main.c: 68:   TRISCbits.TRISC6 = 0;
   950  002420  9C94               	bcf	3988,6,c	;volatile
   951                           
   952                           ;main.c: 69:   TRISCbits.TRISC7 = 0;
   953  002422  9E94               	bcf	3988,7,c	;volatile
   954  002424                     l3920:
   955  002424  FFFF               	dw	65535	; assembler added errata NOP
   956                           
   957                           ;main.c: 71:     write_op(3, 3);
   958  002426  0E03               	movlw	3
   959  002428  6E01               	movwf	write_op@data,c
   960  00242A  0E03               	movlw	3
   961  00242C  EC74  F017         	call	_write_op
   962                           
   963                           ;main.c: 72:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   964  002430  0E10               	movlw	16
   965  002432  0100               	movlb	0	; () banked
   966  002434  6FE0               	movwf	(??_main+1)& (0+255),b
   967  002436  0E3B               	movlw	59
   968  002438  6FDF               	movwf	??_main& (0+255),b
   969  00243A  0E99               	movlw	153
   970  00243C                     u3737:
   971  00243C  FFFF               	dw	65535	; errata NOP
   972  00243E  2EE8               	decfsz	wreg,f,c
   973  002440  D7FD               	bra	u3737
   974  002442  2FDF               	decfsz	??_main& (0+255),f,b
   975  002444  D7FB               	bra	u3737
   976  002446  2FE0               	decfsz	(??_main+1)& (0+255),f,b
   977  002448  D7F9               	bra	u3737
   978  00244A  F000               	nop	
   979                           
   980                           ;main.c: 73:     write_op(2, 2);
   981  00244C  0E02               	movlw	2
   982  00244E  6E01               	movwf	write_op@data,c
   983  002450  0E02               	movlw	2
   984  002452  EC74  F017         	call	_write_op
   985                           
   986                           ;main.c: 74:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   987  002456  0E10               	movlw	16
   988  002458  0100               	movlb	0	; () banked
   989  00245A  6FE0               	movwf	(??_main+1)& (0+255),b
   990  00245C  0E3B               	movlw	59
   991  00245E  6FDF               	movwf	??_main& (0+255),b
   992  002460  0E99               	movlw	153
   993  002462                     u3747:
   994  002462  FFFF               	dw	65535	; errata NOP
   995  002464  2EE8               	decfsz	wreg,f,c
   996  002466  D7FD               	bra	u3747
   997  002468  2FDF               	decfsz	??_main& (0+255),f,b
   998  00246A  D7FB               	bra	u3747
   999  00246C  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1000  00246E  D7F9               	bra	u3747
  1001  002470  F000               	nop	
  1002                           
  1003                           ;main.c: 75:     write_op(1, 1);
  1004  002472  0E01               	movlw	1
  1005  002474  6E01               	movwf	write_op@data,c
  1006  002476  0E01               	movlw	1
  1007  002478  EC74  F017         	call	_write_op
  1008                           
  1009                           ;main.c: 76:     UARTSendString(int_to_char(read_op(3)));
  1010  00247C  0E03               	movlw	3
  1011  00247E  EC85  F017         	call	_read_op
  1012  002482  0100               	movlb	0	; () banked
  1013  002484  6FDF               	movwf	??_main& (0+255),b
  1014  002486  51DF               	movf	??_main& (0+255),w,b
  1015  002488  6E7A               	movwf	int_to_char@num,c
  1016  00248A  6A7B               	clrf	int_to_char@num+1,c
  1017  00248C  6A7C               	clrf	int_to_char@num+2,c
  1018  00248E  6A7D               	clrf	int_to_char@num+3,c
  1019  002490  EC0F  F016         	call	_int_to_char	;wreg free
  1020  002494  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1021  002498  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1022  00249C  EC55  F016         	call	_UARTSendString	;wreg free
  1023                           
  1024                           ;main.c: 77:     UARTNewLine();
  1025  0024A0  ECAA  F017         	call	_UARTNewLine	;wreg free
  1026                           
  1027                           ;main.c: 78:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1028  0024A4  0E10               	movlw	16
  1029  0024A6  0100               	movlb	0	; () banked
  1030  0024A8  6FE0               	movwf	(??_main+1)& (0+255),b
  1031  0024AA  0E3B               	movlw	59
  1032  0024AC  6FDF               	movwf	??_main& (0+255),b
  1033  0024AE  0E99               	movlw	153
  1034  0024B0                     u3757:
  1035  0024B0  FFFF               	dw	65535	; errata NOP
  1036  0024B2  2EE8               	decfsz	wreg,f,c
  1037  0024B4  D7FD               	bra	u3757
  1038  0024B6  2FDF               	decfsz	??_main& (0+255),f,b
  1039  0024B8  D7FB               	bra	u3757
  1040  0024BA  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1041  0024BC  D7F9               	bra	u3757
  1042  0024BE  F000               	nop	
  1043                           
  1044                           ;main.c: 79:     UARTSendString(int_to_char(read_op(2)));
  1045  0024C0  0E02               	movlw	2
  1046  0024C2  EC85  F017         	call	_read_op
  1047  0024C6  0100               	movlb	0	; () banked
  1048  0024C8  6FDF               	movwf	??_main& (0+255),b
  1049  0024CA  51DF               	movf	??_main& (0+255),w,b
  1050  0024CC  6E7A               	movwf	int_to_char@num,c
  1051  0024CE  6A7B               	clrf	int_to_char@num+1,c
  1052  0024D0  6A7C               	clrf	int_to_char@num+2,c
  1053  0024D2  6A7D               	clrf	int_to_char@num+3,c
  1054  0024D4  EC0F  F016         	call	_int_to_char	;wreg free
  1055  0024D8  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1056  0024DC  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1057  0024E0  EC55  F016         	call	_UARTSendString	;wreg free
  1058                           
  1059                           ;main.c: 80:     UARTNewLine();
  1060  0024E4  ECAA  F017         	call	_UARTNewLine	;wreg free
  1061                           
  1062                           ;main.c: 81:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1063  0024E8  0E10               	movlw	16
  1064  0024EA  0100               	movlb	0	; () banked
  1065  0024EC  6FE0               	movwf	(??_main+1)& (0+255),b
  1066  0024EE  0E3B               	movlw	59
  1067  0024F0  6FDF               	movwf	??_main& (0+255),b
  1068  0024F2  0E99               	movlw	153
  1069  0024F4                     u3767:
  1070  0024F4  FFFF               	dw	65535	; errata NOP
  1071  0024F6  2EE8               	decfsz	wreg,f,c
  1072  0024F8  D7FD               	bra	u3767
  1073  0024FA  2FDF               	decfsz	??_main& (0+255),f,b
  1074  0024FC  D7FB               	bra	u3767
  1075  0024FE  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1076  002500  D7F9               	bra	u3767
  1077  002502  F000               	nop	
  1078                           
  1079                           ;main.c: 82:     UARTSendString(int_to_char(read_op(1)));
  1080  002504  0E01               	movlw	1
  1081  002506  EC85  F017         	call	_read_op
  1082  00250A  0100               	movlb	0	; () banked
  1083  00250C  6FDF               	movwf	??_main& (0+255),b
  1084  00250E  51DF               	movf	??_main& (0+255),w,b
  1085  002510  6E7A               	movwf	int_to_char@num,c
  1086  002512  6A7B               	clrf	int_to_char@num+1,c
  1087  002514  6A7C               	clrf	int_to_char@num+2,c
  1088  002516  6A7D               	clrf	int_to_char@num+3,c
  1089  002518  EC0F  F016         	call	_int_to_char	;wreg free
  1090  00251C  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1091  002520  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1092  002524  EC55  F016         	call	_UARTSendString	;wreg free
  1093                           
  1094                           ;main.c: 83:     UARTNewLine();
  1095  002528  ECAA  F017         	call	_UARTNewLine	;wreg free
  1096                           
  1097                           ;main.c: 84:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1098  00252C  0E10               	movlw	16
  1099  00252E  0100               	movlb	0	; () banked
  1100  002530  6FE0               	movwf	(??_main+1)& (0+255),b
  1101  002532  0E3B               	movlw	59
  1102  002534  6FDF               	movwf	??_main& (0+255),b
  1103  002536  0E99               	movlw	153
  1104  002538                     u3777:
  1105  002538  FFFF               	dw	65535	; errata NOP
  1106  00253A  2EE8               	decfsz	wreg,f,c
  1107  00253C  D7FD               	bra	u3777
  1108  00253E  2FDF               	decfsz	??_main& (0+255),f,b
  1109  002540  D7FB               	bra	u3777
  1110  002542  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1111  002544  D7F9               	bra	u3777
  1112  002546  F000               	nop	
  1113  002548  D76D               	goto	l3920
  1114  00254A                     __end_of_main:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _write_op *****************
  1118 ;; Defined at:
  1119 ;;		line 9 in file "drive_memory.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  address         1    wreg     unsigned char 
  1122 ;;  data            1    0[COMRAM] unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  address         1    1[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         1       0       0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  002EE8                     __ptext1:
  1150                           	opt callstack 0
  1151  002EE8                     _write_op:
  1152                           	opt callstack 0
  1153  002EE8  FFFF               	dw	65535	; assembler added errata NOP
  1154                           
  1155                           ;incstack = 0
  1156                           ;write_op@address stored from wreg
  1157  002EEA  6E02               	movwf	write_op@address,c
  1158                           
  1159                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1160  002EEC  9094               	bcf	3988,0,c	;volatile
  1161                           
  1162                           ;drive_memory.c: 12:   TRISD = 0x00;
  1163  002EEE  0E00               	movlw	0
  1164  002EF0  6E95               	movwf	3989,c	;volatile
  1165                           
  1166                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1167  002EF2  0EC0               	movlw	192
  1168  002EF4  1693               	andwf	3987,f,c	;volatile
  1169                           
  1170                           ;drive_memory.c: 14:   PORTB = address;
  1171  002EF6  C002  FF81         	movff	write_op@address,3969	;volatile
  1172                           
  1173                           ;drive_memory.c: 15:   RB5 = 0;
  1174  002EFA  9A81               	bcf	3969,5,c	;volatile
  1175                           
  1176                           ;drive_memory.c: 17:   RC0 = 1;
  1177  002EFC  8082               	bsf	3970,0,c	;volatile
  1178                           
  1179                           ;drive_memory.c: 21:   RC0 = 0;
  1180  002EFE  9082               	bcf	3970,0,c	;volatile
  1181                           
  1182                           ;drive_memory.c: 23:   PORTD = data;
  1183                           
  1184                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1185  002F00  C001  FF83         	movff	write_op@data,3971	;volatile
  1186                           
  1187                           ;drive_memory.c: 26:   RC0 = 1;
  1188                           
  1189                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1190  002F04  8082               	bsf	3970,0,c	;volatile
  1191  002F06  0012               	return		;funcret
  1192  002F08  FFFF               	dw	65535	; errata NOP
  1193  002F0A                     __end_of_write_op:
  1194                           	opt callstack 0
  1195                           
  1196 ;; *************** function _read_op *****************
  1197 ;; Defined at:
  1198 ;;		line 30 in file "drive_memory.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  address         1    wreg     unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  address         1    0[COMRAM] unsigned char 
  1203 ;;  result          1    1[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      unsigned char 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         0       0       0       0       0       0       0
  1214 ;;      Locals:         2       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text2
  1228  002F0A                     __ptext2:
  1229                           	opt callstack 0
  1230  002F0A                     _read_op:
  1231                           	opt callstack 0
  1232  002F0A  FFFF               	dw	65535	; assembler added errata NOP
  1233                           
  1234                           ;incstack = 0
  1235                           ;read_op@address stored from wreg
  1236  002F0C  6E01               	movwf	read_op@address,c
  1237                           
  1238                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  1239  002F0E  9094               	bcf	3988,0,c	;volatile
  1240                           
  1241                           ;drive_memory.c: 33:   TRISD = 0xFF;
  1242  002F10  6895               	setf	3989,c	;volatile
  1243                           
  1244                           ;drive_memory.c: 34:   TRISB &= ~(0x3f);
  1245  002F12  0EC0               	movlw	192
  1246  002F14  1693               	andwf	3987,f,c	;volatile
  1247                           
  1248                           ;drive_memory.c: 35:   PORTB = address;
  1249  002F16  C001  FF81         	movff	read_op@address,3969	;volatile
  1250                           
  1251                           ;drive_memory.c: 36:   RB5 = 1;
  1252  002F1A  8A81               	bsf	3969,5,c	;volatile
  1253                           
  1254                           ;drive_memory.c: 38:   RC0 = 1;
  1255  002F1C  8082               	bsf	3970,0,c	;volatile
  1256                           
  1257                           ;drive_memory.c: 40:   RB5 = 0;
  1258  002F1E  9A81               	bcf	3969,5,c	;volatile
  1259                           
  1260                           ;drive_memory.c: 44:   RB5 = 1;
  1261                           
  1262                           ;drive_memory.c: 41:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  1263  002F20  8A81               	bsf	3969,5,c	;volatile
  1264                           
  1265                           ;drive_memory.c: 46:   char result = PORTD;
  1266  002F22  CF83 F002          	movff	3971,read_op@result	;volatile
  1267                           
  1268                           ;drive_memory.c: 47:   return result;
  1269  002F26  5002               	movf	read_op@result,w,c
  1270  002F28  0012               	return		;funcret
  1271  002F2A  FFFF               	dw	65535	; errata NOP
  1272  002F2C                     __end_of_read_op:
  1273                           	opt callstack 0
  1274                           
  1275 ;; *************** function _int_to_char *****************
  1276 ;; Defined at:
  1277 ;;		line 18 in file "lcd.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  num             4  121[COMRAM] unsigned long 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  result         10   18[BANK0 ] unsigned char [10]
  1282 ;;  the_num         4   28[BANK0 ] unsigned long 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2  121[COMRAM] PTR unsigned char 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1292 ;;      Params:         4       0       0       0       0       0       0
  1293 ;;      Locals:         0      14       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0
  1295 ;;      Totals:         4      14       0       0       0       0       0
  1296 ;;Total ram usage:       18 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:   10
  1299 ;; This function calls:
  1300 ;;		_getchar
  1301 ;;		_sprintf
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text3
  1308  002C1E                     __ptext3:
  1309                           	opt callstack 0
  1310  002C1E                     _int_to_char:
  1311                           	opt callstack 0
  1312  002C1E  FFFF               	dw	65535	; assembler added errata NOP
  1313                           
  1314                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1315                           
  1316                           ;incstack = 0
  1317  002C20  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  1318  002C24  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  1319  002C28  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  1320  002C2C  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  1321                           
  1322                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1323  002C30  0ECD               	movlw	low int_to_char@result
  1324  002C32  0100               	movlb	0	; () banked
  1325  002C34  6FBB               	movwf	sprintf@s& (0+255),b
  1326  002C36  0E00               	movlw	high int_to_char@result
  1327  002C38  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  1328  002C3A  0E1D               	movlw	low STR_1
  1329  002C3C  6FBD               	movwf	sprintf@fmt& (0+255),b
  1330  002C3E  0E06               	movlw	high STR_1
  1331  002C40  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  1332  002C42  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  1333  002C46  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  1334  002C4A  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  1335  002C4E  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  1336  002C52  EC8E  F015         	call	_sprintf	;wreg free
  1337                           
  1338                           ;lcd.c: 22:   getchar();
  1339  002C56  ECBE  F017         	call	_getchar	;wreg free
  1340                           
  1341                           ;lcd.c: 23:   return result;
  1342  002C5A  0ECD               	movlw	low int_to_char@result
  1343  002C5C  6E7A               	movwf	?_int_to_char,c
  1344  002C5E  0E00               	movlw	high int_to_char@result
  1345  002C60  6E7B               	movwf	?_int_to_char+1,c
  1346  002C62  0012               	return		;funcret
  1347  002C64  FFFF               	dw	65535	; errata NOP
  1348  002C66                     __end_of_int_to_char:
  1349                           	opt callstack 0
  1350                           
  1351 ;; *************** function _sprintf *****************
  1352 ;; Defined at:
  1353 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1356 ;;		 -> int_to_char@result(10), 
  1357 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1358 ;;		 -> STR_1(4), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1361 ;;  ap              2   16[BANK0 ] PTR void [1]
  1362 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1363 ;;  ret             2    0        int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    0[BANK0 ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1373 ;;      Params:         0       8       0       0       0       0       0
  1374 ;;      Locals:         0      10       0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0
  1376 ;;      Totals:         0      18       0       0       0       0       0
  1377 ;;Total ram usage:       18 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    9
  1380 ;; This function calls:
  1381 ;;		_vfprintf
  1382 ;; This function is called by:
  1383 ;;		_int_to_char
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text4
  1388  002B1C                     __ptext4:
  1389                           	opt callstack 0
  1390  002B1C                     _sprintf:
  1391                           	opt callstack 0
  1392  002B1C  FFFF               	dw	65535	; assembler added errata NOP
  1393                           
  1394                           ;incstack = 0
  1395  002B1E  0EBF               	movlw	low (?_sprintf+4)
  1396  002B20  0100               	movlb	0	; () banked
  1397  002B22  6FCB               	movwf	sprintf@ap& (0+255),b
  1398  002B24  0E00               	movlw	high (?_sprintf+4)
  1399  002B26  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1400  002B28  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  1401  002B2C  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  1402                           
  1403                           ; BSR set to: 0
  1404  002B30  0E00               	movlw	0
  1405  002B32  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  1406  002B34  0E00               	movlw	0
  1407  002B36  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  1408                           
  1409                           ; BSR set to: 0
  1410  002B38  0E00               	movlw	0
  1411  002B3A  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  1412  002B3C  0E00               	movlw	0
  1413  002B3E  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  1414                           
  1415                           ; BSR set to: 0
  1416  002B40  0EC5               	movlw	low sprintf@f
  1417  002B42  6E72               	movwf	vfprintf@fp,c
  1418  002B44  0E00               	movlw	high sprintf@f
  1419  002B46  6E73               	movwf	vfprintf@fp+1,c
  1420  002B48  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  1421  002B4C  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1422  002B50  0ECB               	movlw	low sprintf@ap
  1423  002B52  6E76               	movwf	vfprintf@ap,c
  1424  002B54  0E00               	movlw	high sprintf@ap
  1425  002B56  6E77               	movwf	vfprintf@ap+1,c
  1426  002B58  EC5E  F015         	call	_vfprintf	;wreg free
  1427  002B5C  0100               	movlb	0	; () banked
  1428  002B5E  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  1429  002B60  25BB               	addwf	sprintf@s& (0+255),w,b
  1430  002B62  6ED9               	movwf	fsr2l,c
  1431  002B64  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  1432  002B66  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1433  002B68  6EDA               	movwf	fsr2h,c
  1434  002B6A  0E00               	movlw	0
  1435  002B6C  6EDF               	movwf	indf2,c
  1436                           
  1437                           ; BSR set to: 0
  1438  002B6E  0012               	return		;funcret
  1439  002B70  FFFF               	dw	65535	; errata NOP
  1440  002B72                     __end_of_sprintf:
  1441                           	opt callstack 0
  1442                           
  1443 ;; *************** function _vfprintf *****************
  1444 ;; Defined at:
  1445 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1448 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1449 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1450 ;;		 -> STR_2(3), STR_1(4), 
  1451 ;;  ap              2  117[COMRAM] PTR PTR void 
  1452 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1455 ;;		 -> STR_2(3), STR_1(4), 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2  113[COMRAM] int 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1465 ;;      Params:         6       0       0       0       0       0       0
  1466 ;;      Locals:         2       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0
  1468 ;;      Totals:         8       0       0       0       0       0       0
  1469 ;;Total ram usage:        8 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    8
  1472 ;; This function calls:
  1473 ;;		_vfpfcnvrt
  1474 ;; This function is called by:
  1475 ;;		_sprintf
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text5
  1480  002ABC                     __ptext5:
  1481                           	opt callstack 0
  1482  002ABC                     _vfprintf:
  1483                           	opt callstack 0
  1484  002ABC  FFFF               	dw	65535	; assembler added errata NOP
  1485                           
  1486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;incstack = 0
  1490  002ABE  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1491  002AC2  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1492                           
  1493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1494  002AC6  0E00               	movlw	0
  1495  002AC8  0100               	movlb	0	; () banked
  1496  002ACA  6F90               	movwf	(_nout+1)& (0+255),b
  1497  002ACC  0E00               	movlw	0
  1498  002ACE  6F8F               	movwf	_nout& (0+255),b
  1499                           
  1500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1501  002AD0  D014               	goto	l3690
  1502  002AD2                     l3688:
  1503  002AD2  FFFF               	dw	65535	; assembler added errata NOP
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1507  002AD4  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1508  002AD8  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1509  002ADC  0E78               	movlw	low vfprintf@cfmt
  1510  002ADE  6E45               	movwf	vfpfcnvrt@fmt,c
  1511  002AE0  0E00               	movlw	high vfprintf@cfmt
  1512  002AE2  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1513  002AE4  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1514  002AE8  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1515  002AEC  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1516  002AF0  5043               	movf	?_vfpfcnvrt,w,c
  1517  002AF2  0100               	movlb	0	; () banked
  1518  002AF4  278F               	addwf	_nout& (0+255),f,b
  1519  002AF6  5044               	movf	?_vfpfcnvrt+1,w,c
  1520  002AF8  2390               	addwfc	(_nout+1)& (0+255),f,b
  1521  002AFA                     l3690:
  1522  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1526  002AFC  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1527  002B00  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1528  002B04                     	if	0	;tblptru may be non-zero
  1529  002B04                     	endif
  1530  002B04                     	if	0	;tblptru may be non-zero
  1531  002B04                     	endif
  1532  002B04  0008               	tblrd		*
  1533  002B06  FFFF               	dw	65535	; errata NOP
  1534  002B08  50F5               	movf	tablat,w,c
  1535  002B0A  0900               	iorlw	0
  1536  002B0C  A4D8               	btfss	status,2,c
  1537  002B0E  D7E1               	goto	l3688
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1541  002B10  C08F  F072         	movff	_nout,?_vfprintf
  1542  002B14  C090  F073         	movff	_nout+1,?_vfprintf+1
  1543                           
  1544                           ; BSR set to: 0
  1545  002B18  0012               	return		;funcret
  1546  002B1A  FFFF               	dw	65535	; errata NOP
  1547  002B1C                     __end_of_vfprintf:
  1548                           	opt callstack 0
  1549                           
  1550 ;; *************** function _vfpfcnvrt *****************
  1551 ;; Defined at:
  1552 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1555 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1556 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1557 ;;		 -> vfprintf@cfmt(2), 
  1558 ;;  ap              2   70[COMRAM] PTR PTR void 
  1559 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  llu             8  105[COMRAM] unsigned long long 
  1562 ;;  ll              8   94[COMRAM] long long 
  1563 ;;  f               4    0        long long 
  1564 ;;  ct              3    0        unsigned char [3]
  1565 ;;  vp              2  102[COMRAM] PTR void 
  1566 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1567 ;;  done            2   88[COMRAM] int 
  1568 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1569 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1570 ;;  i               2    0        int 
  1571 ;;  c               1  104[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2   66[COMRAM] int 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1581 ;;      Params:         6       0       0       0       0       0       0
  1582 ;;      Locals:        27       0       0       0       0       0       0
  1583 ;;      Temps:         14       0       0       0       0       0       0
  1584 ;;      Totals:        47       0       0       0       0       0       0
  1585 ;;Total ram usage:       47 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    7
  1588 ;; This function calls:
  1589 ;;		_atoi
  1590 ;;		_ctoa
  1591 ;;		_dtoa
  1592 ;;		_fputc
  1593 ;;		_isdigit
  1594 ;;		_otoa
  1595 ;;		_stoa
  1596 ;;		_strncmp
  1597 ;;		_utoa
  1598 ;;		_xtoa
  1599 ;; This function is called by:
  1600 ;;		_vfprintf
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text6
  1605  00064C                     __ptext6:
  1606                           	opt callstack 0
  1607  00064C                     _vfpfcnvrt:
  1608                           	opt callstack 0
  1609  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1610                           
  1611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;incstack = 0
  1615  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1616  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1617  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1618  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1619  00065E                     	if	0	;tblptru may be non-zero
  1620  00065E                     	endif
  1621  00065E                     	if	0	;tblptru may be non-zero
  1622  00065E                     	endif
  1623  00065E  0008               	tblrd		*
  1624  000660  FFFF               	dw	65535	; errata NOP
  1625  000662  50F5               	movf	tablat,w,c
  1626  000664  0A25               	xorlw	37
  1627  000666  A4D8               	btfss	status,2,c
  1628  000668  EFD7  F00B         	goto	l3668
  1629                           
  1630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1631  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633  000674  2ADE               	incf	postinc2,f,c
  1634  000676  0E00               	movlw	0
  1635  000678  22DD               	addwfc	postdec2,f,c
  1636                           
  1637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1638  00067A  0E00               	movlw	0
  1639  00067C  0100               	movlb	0	; () banked
  1640  00067E  6F92               	movwf	(_width+1)& (0+255),b
  1641  000680  0E00               	movlw	0
  1642  000682  6F91               	movwf	_width& (0+255),b
  1643  000684  C091  F095         	movff	_width,_flags
  1644  000688  C092  F096         	movff	_width+1,_flags+1
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1648  00068C  6993               	setf	_prec& (0+255),b
  1649  00068E  6994               	setf	(_prec+1)& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1653  000690  0E00               	movlw	0
  1654  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1655  000694  0E00               	movlw	0
  1656  000696  D020               	goto	L1
  1657  000698                     l3310:
  1658  000698  FFFF               	dw	65535	; assembler added errata NOP
  1659                           
  1660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1661  00069A  0100               	movlb	0	; () banked
  1662  00069C  8195               	bsf	_flags& (0+255),0,b
  1663  00069E                     l3312:
  1664  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1668  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  0006A8  2ADE               	incf	postinc2,f,c
  1671  0006AA  0E00               	movlw	0
  1672  0006AC  22DD               	addwfc	postdec2,f,c
  1673                           
  1674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1675  0006AE  D03A               	goto	l3336
  1676  0006B0                     l3314:
  1677  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1678                           
  1679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1680  0006B2  0100               	movlb	0	; () banked
  1681  0006B4  8395               	bsf	_flags& (0+255),1,b
  1682  0006B6  D7F3               	goto	l3312
  1683  0006B8                     l3318:
  1684  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1685                           
  1686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1687  0006BA  0100               	movlb	0	; () banked
  1688  0006BC  8595               	bsf	_flags& (0+255),2,b
  1689  0006BE  D7EF               	goto	l3312
  1690  0006C0                     l3322:
  1691  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1692                           
  1693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1694  0006C2  0100               	movlb	0	; () banked
  1695  0006C4  8795               	bsf	_flags& (0+255),3,b
  1696  0006C6  D7EB               	goto	l3312
  1697  0006C8                     l3326:
  1698  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1699                           
  1700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1701  0006CA  0100               	movlb	0	; () banked
  1702  0006CC  8995               	bsf	_flags& (0+255),4,b
  1703  0006CE  D7E7               	goto	l3312
  1704  0006D0                     l3330:
  1705  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1706                           
  1707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1708  0006D2  0E00               	movlw	0
  1709  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1710  0006D6  0E01               	movlw	1
  1711  0006D8                     L1:
  1712  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1713  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1714                           
  1715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1716  0006DC  D023               	goto	l3336
  1717  0006DE                     l3334:
  1718  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1719  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1720  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1721  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1722  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1723  0006F0                     	if	0	;tblptru may be non-zero
  1724  0006F0                     	endif
  1725  0006F0                     	if	0	;tblptru may be non-zero
  1726  0006F0                     	endif
  1727  0006F0  0008               	tblrd		*
  1728  0006F2  FFFF               	dw	65535	; errata NOP
  1729  0006F4  50F5               	movf	tablat,w,c
  1730  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1731  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1732                           
  1733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1734                           ; Switch size 1, requested type "simple"
  1735                           ; Number of cases is 1, Range of values is 0 to 0
  1736                           ; switch strategies available:
  1737                           ; Name         Instructions Cycles
  1738                           ; simple_byte            4     3 (average)
  1739                           ;	Chosen strategy is simple_byte
  1740  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1741  0006FC  0A00               	xorlw	0	; case 0
  1742  0006FE  A4D8               	btfss	status,2,c
  1743  000700  D7E7               	goto	l3330
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 5, Range of values is 32 to 48
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte           16     9 (average)
  1750                           ;	Chosen strategy is simple_byte
  1751  000702  5049               	movf	??_vfpfcnvrt,w,c
  1752  000704  0A20               	xorlw	32	; case 32
  1753  000706  B4D8               	btfsc	status,2,c
  1754  000708  D7DB               	goto	l3322
  1755  00070A  0A03               	xorlw	3	; case 35
  1756  00070C  B4D8               	btfsc	status,2,c
  1757  00070E  D7DC               	goto	l3326
  1758  000710  0A08               	xorlw	8	; case 43
  1759  000712  B4D8               	btfsc	status,2,c
  1760  000714  D7D1               	goto	l3318
  1761  000716  0A06               	xorlw	6	; case 45
  1762  000718  B4D8               	btfsc	status,2,c
  1763  00071A  D7BE               	goto	l3310
  1764  00071C  0A1D               	xorlw	29	; case 48
  1765  00071E  B4D8               	btfsc	status,2,c
  1766  000720  D7C7               	goto	l3314
  1767  000722  D7D6               	goto	l3330
  1768  000724                     l3336:
  1769  000724  FFFF               	dw	65535	; assembler added errata NOP
  1770                           
  1771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1772  000726  5059               	movf	vfpfcnvrt@done,w,c
  1773  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1774  00072A  B4D8               	btfsc	status,2,c
  1775  00072C  D7D8               	goto	l3334
  1776                           
  1777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1778  00072E  0100               	movlb	0	; () banked
  1779  000730  B195               	btfsc	_flags& (0+255),0,b
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1783  000732  9395               	bcf	_flags& (0+255),1,b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1787  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1790  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1791  000744                     	if	0	;tblptru may be non-zero
  1792  000744                     	endif
  1793  000744                     	if	0	;tblptru may be non-zero
  1794  000744                     	endif
  1795  000744  0008               	tblrd		*
  1796  000746  FFFF               	dw	65535	; errata NOP
  1797  000748  50F5               	movf	tablat,w,c
  1798  00074A  0A2A               	xorlw	42
  1799  00074C  A4D8               	btfss	status,2,c
  1800  00074E  D023               	goto	l3348
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1804  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806  000758  2ADE               	incf	postinc2,f,c
  1807  00075A  0E00               	movlw	0
  1808  00075C  22DD               	addwfc	postdec2,f,c
  1809                           
  1810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1811  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1812  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1813  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1814  00076A  0E02               	movlw	2
  1815  00076C  26DE               	addwf	postinc2,f,c
  1816  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1817  000772  0E00               	movlw	0
  1818  000774  22DD               	addwfc	postdec2,f,c
  1819  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1820  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1821  00077E  CFDE F091          	movff	postinc2,_width
  1822  000782  CFDD F092          	movff	postdec2,_width+1
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  1826  000786  AF92               	btfss	(_width+1)& (0+255),7,b
  1827  000788  D045               	goto	u3110
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  1831  00078A  8195               	bsf	_flags& (0+255),0,b
  1832                           
  1833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  1834  00078C  6D91               	negf	_width& (0+255),b
  1835  00078E  1F92               	comf	(_width+1)& (0+255),f,b
  1836  000790  B0D8               	btfsc	status,0,c
  1837  000792  2B92               	incf	(_width+1)& (0+255),f,b
  1838  000794  D03F               	goto	u3110
  1839  000796                     l3348:
  1840  000796  FFFF               	dw	65535	; assembler added errata NOP
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  1844  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1845  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1846  0007A0  CFDE F008          	movff	postinc2,atoi@s
  1847  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  1848  0007A8  EC05  F010         	call	_atoi	;wreg free
  1849  0007AC  C008  F091         	movff	?_atoi,_width
  1850  0007B0  C009  F092         	movff	?_atoi+1,_width+1
  1851                           
  1852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1853  0007B4  D008               	goto	l3352
  1854  0007B6                     l3350:
  1855  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  1856                           
  1857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  1858  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  0007C0  2ADE               	incf	postinc2,f,c
  1861  0007C2  0E00               	movlw	0
  1862  0007C4  22DD               	addwfc	postdec2,f,c
  1863  0007C6                     l3352:
  1864  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  1865  0007C8  0ED0               	movlw	208
  1866  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1867  0007CC  0EFF               	movlw	255
  1868  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1869  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1870  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1871  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  1872  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  1873  0007E0                     	if	0	;tblptru may be non-zero
  1874  0007E0                     	endif
  1875  0007E0                     	if	0	;tblptru may be non-zero
  1876  0007E0                     	endif
  1877  0007E0  0008               	tblrd		*
  1878  0007E2  FFFF               	dw	65535	; errata NOP
  1879  0007E4  50F5               	movf	tablat,w,c
  1880  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1881  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1882  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  1883  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  1884  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  1885  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1886  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  1887  0007F4  E106               	bnz	u3090
  1888  0007F6  0E0A               	movlw	10
  1889  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1890  0007FA  B0D8               	btfsc	status,0,c
  1891  0007FC  D002               	goto	u3090
  1892  0007FE  0E01               	movlw	1
  1893  000800  D002               	goto	u3100
  1894  000802                     u3090:
  1895  000802  FFFF               	dw	65535	; assembler added errata NOP
  1896  000804  0E00               	movlw	0
  1897  000806                     u3100:
  1898  000806  FFFF               	dw	65535	; assembler added errata NOP
  1899  000808  6E5B               	movwf	_vfpfcnvrt$1101,c
  1900  00080A  6A5C               	clrf	_vfpfcnvrt$1101+1,c
  1901  00080C  505B               	movf	_vfpfcnvrt$1101,w,c
  1902  00080E  105C               	iorwf	_vfpfcnvrt$1101+1,w,c
  1903  000810  A4D8               	btfss	status,2,c
  1904  000812  D7D1               	goto	l3350
  1905  000814                     u3110:
  1906  000814  FFFF               	dw	65535	; assembler added errata NOP
  1907                           
  1908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1909  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1910  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1911  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1912  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1913  000826                     	if	0	;tblptru may be non-zero
  1914  000826                     	endif
  1915  000826                     	if	0	;tblptru may be non-zero
  1916  000826                     	endif
  1917  000826  0008               	tblrd		*
  1918  000828  FFFF               	dw	65535	; errata NOP
  1919  00082A  50F5               	movf	tablat,w,c
  1920  00082C  0A2E               	xorlw	46
  1921  00082E  A4D8               	btfss	status,2,c
  1922  000830  D075               	goto	u3160
  1923                           
  1924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1925  000832  0E00               	movlw	0
  1926  000834  0100               	movlb	0	; () banked
  1927  000836  6F94               	movwf	(_prec+1)& (0+255),b
  1928  000838  0E00               	movlw	0
  1929  00083A  6F93               	movwf	_prec& (0+255),b
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1933  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  000844  2ADE               	incf	postinc2,f,c
  1936  000846  0E00               	movlw	0
  1937  000848  22DD               	addwfc	postdec2,f,c
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1941  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943  000852  CFDE FFF6          	movff	postinc2,tblptrl
  1944  000856  CFDD FFF7          	movff	postdec2,tblptrh
  1945  00085A                     	if	0	;tblptru may be non-zero
  1946  00085A                     	endif
  1947  00085A                     	if	0	;tblptru may be non-zero
  1948  00085A                     	endif
  1949  00085A  0008               	tblrd		*
  1950  00085C  FFFF               	dw	65535	; errata NOP
  1951  00085E  50F5               	movf	tablat,w,c
  1952  000860  0A2A               	xorlw	42
  1953  000862  A4D8               	btfss	status,2,c
  1954  000864  D01C               	goto	l3368
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1958  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  00086E  2ADE               	incf	postinc2,f,c
  1961  000870  0E00               	movlw	0
  1962  000872  22DD               	addwfc	postdec2,f,c
  1963                           
  1964                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1965  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1966  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1967  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1968  000880  0E02               	movlw	2
  1969  000882  26DE               	addwf	postinc2,f,c
  1970  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1971  000888  0E00               	movlw	0
  1972  00088A  22DD               	addwfc	postdec2,f,c
  1973  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1974  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1975  000894  CFDE F093          	movff	postinc2,_prec
  1976  000898  CFDD F094          	movff	postdec2,_prec+1
  1977                           
  1978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1979  00089C  D03F               	goto	u3160
  1980  00089E                     l3368:
  1981  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1985  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1986  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1987  0008A8  CFDE F008          	movff	postinc2,atoi@s
  1988  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  1989  0008B0  EC05  F010         	call	_atoi	;wreg free
  1990  0008B4  C008  F093         	movff	?_atoi,_prec
  1991  0008B8  C009  F094         	movff	?_atoi+1,_prec+1
  1992                           
  1993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1994  0008BC  D008               	goto	l3372
  1995  0008BE                     l3370:
  1996  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1997                           
  1998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1999  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  0008C8  2ADE               	incf	postinc2,f,c
  2002  0008CA  0E00               	movlw	0
  2003  0008CC  22DD               	addwfc	postdec2,f,c
  2004  0008CE                     l3372:
  2005  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  2006  0008D0  0ED0               	movlw	208
  2007  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2008  0008D4  0EFF               	movlw	255
  2009  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2010  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2011  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2012  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  2013  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  2014  0008E8                     	if	0	;tblptru may be non-zero
  2015  0008E8                     	endif
  2016  0008E8                     	if	0	;tblptru may be non-zero
  2017  0008E8                     	endif
  2018  0008E8  0008               	tblrd		*
  2019  0008EA  FFFF               	dw	65535	; errata NOP
  2020  0008EC  50F5               	movf	tablat,w,c
  2021  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2022  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2023  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  2024  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  2025  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  2026  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2027  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  2028  0008FC  E106               	bnz	u3140
  2029  0008FE  0E0A               	movlw	10
  2030  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2031  000902  B0D8               	btfsc	status,0,c
  2032  000904  D002               	goto	u3140
  2033  000906  0E01               	movlw	1
  2034  000908  D002               	goto	u3150
  2035  00090A                     u3140:
  2036  00090A  FFFF               	dw	65535	; assembler added errata NOP
  2037  00090C  0E00               	movlw	0
  2038  00090E                     u3150:
  2039  00090E  FFFF               	dw	65535	; assembler added errata NOP
  2040  000910  6E5D               	movwf	_vfpfcnvrt$1102,c
  2041  000912  6A5E               	clrf	_vfpfcnvrt$1102+1,c
  2042  000914  505D               	movf	_vfpfcnvrt$1102,w,c
  2043  000916  105E               	iorwf	_vfpfcnvrt$1102+1,w,c
  2044  000918  A4D8               	btfss	status,2,c
  2045  00091A  D7D1               	goto	l3370
  2046  00091C                     u3160:
  2047  00091C  FFFF               	dw	65535	; assembler added errata NOP
  2048                           
  2049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2050  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2051  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  000926  CFDE FFF6          	movff	postinc2,tblptrl
  2053  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  2054  00092E                     	if	0	;tblptru may be non-zero
  2055  00092E                     	endif
  2056  00092E                     	if	0	;tblptru may be non-zero
  2057  00092E                     	endif
  2058  00092E  0008               	tblrd		*
  2059  000930  FFFF               	dw	65535	; errata NOP
  2060  000932  50F5               	movf	tablat,w,c
  2061  000934  0A63               	xorlw	99
  2062  000936  A4D8               	btfss	status,2,c
  2063  000938  D027               	goto	l3386
  2064                           
  2065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2066  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068  000942  2ADE               	incf	postinc2,f,c
  2069  000944  0E00               	movlw	0
  2070  000946  22DD               	addwfc	postdec2,f,c
  2071                           
  2072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2073  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2074  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2075  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2076  000954  0E02               	movlw	2
  2077  000956  26DE               	addwf	postinc2,f,c
  2078  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2079  00095C  0E00               	movlw	0
  2080  00095E  22DD               	addwfc	postdec2,f,c
  2081  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2082  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2083  000968  50DF               	movf	indf2,w,c
  2084  00096A  6E69               	movwf	vfpfcnvrt@c,c
  2085                           
  2086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2087  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2088  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2089  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2090  000978  ECE4  F015         	call	_ctoa	;wreg free
  2091  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2092  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2093  000984  EFF3  F00B         	goto	l497
  2094  000988                     l3386:
  2095  000988  FFFF               	dw	65535	; assembler added errata NOP
  2096                           
  2097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2098  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2099  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2100  000992  CFDE F001          	movff	postinc2,strncmp@_l
  2101  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  2102  00099A  0E05               	movlw	low STR_3
  2103  00099C  6E03               	movwf	strncmp@_r,c
  2104  00099E  0E06               	movlw	high STR_3
  2105  0009A0  6E04               	movwf	strncmp@_r+1,c
  2106  0009A2  0E00               	movlw	0
  2107  0009A4  6E06               	movwf	strncmp@n+1,c
  2108  0009A6  0E03               	movlw	3
  2109  0009A8  6E05               	movwf	strncmp@n,c
  2110  0009AA  ECAF  F013         	call	_strncmp	;wreg free
  2111  0009AE  5001               	movf	?_strncmp,w,c
  2112  0009B0  1002               	iorwf	?_strncmp+1,w,c
  2113  0009B2  B4D8               	btfsc	status,2,c
  2114  0009B4  D016               	goto	u3190
  2115  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  2118  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2119  0009C6  0E09               	movlw	low STR_7
  2120  0009C8  6E03               	movwf	strncmp@_r,c
  2121  0009CA  0E06               	movlw	high STR_7
  2122  0009CC  6E04               	movwf	strncmp@_r+1,c
  2123  0009CE  0E00               	movlw	0
  2124  0009D0  6E06               	movwf	strncmp@n+1,c
  2125  0009D2  0E03               	movlw	3
  2126  0009D4  6E05               	movwf	strncmp@n,c
  2127  0009D6  ECAF  F013         	call	_strncmp	;wreg free
  2128  0009DA  5001               	movf	?_strncmp,w,c
  2129  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2130  0009DE  A4D8               	btfss	status,2,c
  2131  0009E0  D043               	goto	l3396
  2132  0009E2                     u3190:
  2133  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2134                           
  2135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2136  0009E4  0E03               	movlw	3
  2137  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2138  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2139  0009EE  26DE               	addwf	postinc2,f,c
  2140  0009F0  0E00               	movlw	0
  2141  0009F2  22DD               	addwfc	postdec2,f,c
  2142                           
  2143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2144  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2145  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2146  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2147  000A00  0E02               	movlw	2
  2148  000A02  26DE               	addwf	postinc2,f,c
  2149  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2150  000A08  0E00               	movlw	0
  2151  000A0A  22DD               	addwfc	postdec2,f,c
  2152  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2153  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2154  000A14  50DF               	movf	indf2,w,c
  2155  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2156  000A18  0E00               	movlw	0
  2157  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2158  000A1C  0EFF               	movlw	-1
  2159  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2160  000A20                     L2:
  2161  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2162  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2163  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2164  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2165  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2166  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2167  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2168  000A2E                     l3392:
  2169  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2170                           
  2171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2172  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2173  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2174  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2175  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2176  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2177  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2178  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2179  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2180  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2181  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2182  000A58  ECF6  F00B         	call	_dtoa	;wreg free
  2183  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2184  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2185  000A64  EFF3  F00B         	goto	l497
  2186  000A68                     l3396:
  2187  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2188                           
  2189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2190  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2191  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2192  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2193  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2194  000A7A  0E06               	movlw	low (STR_3+1)
  2195  000A7C  6E03               	movwf	strncmp@_r,c
  2196  000A7E  0E06               	movlw	high (STR_3+1)
  2197  000A80  6E04               	movwf	strncmp@_r+1,c
  2198  000A82  0E00               	movlw	0
  2199  000A84  6E06               	movwf	strncmp@n+1,c
  2200  000A86  0E02               	movlw	2
  2201  000A88  6E05               	movwf	strncmp@n,c
  2202  000A8A  ECAF  F013         	call	_strncmp	;wreg free
  2203  000A8E  5001               	movf	?_strncmp,w,c
  2204  000A90  1002               	iorwf	?_strncmp+1,w,c
  2205  000A92  B4D8               	btfsc	status,2,c
  2206  000A94  D016               	goto	u3210
  2207  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2208  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2209  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2210  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2211  000AA6  0E0A               	movlw	low (STR_7+1)
  2212  000AA8  6E03               	movwf	strncmp@_r,c
  2213  000AAA  0E06               	movlw	high (STR_7+1)
  2214  000AAC  6E04               	movwf	strncmp@_r+1,c
  2215  000AAE  0E00               	movlw	0
  2216  000AB0  6E06               	movwf	strncmp@n+1,c
  2217  000AB2  0E02               	movlw	2
  2218  000AB4  6E05               	movwf	strncmp@n,c
  2219  000AB6  ECAF  F013         	call	_strncmp	;wreg free
  2220  000ABA  5001               	movf	?_strncmp,w,c
  2221  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2222  000ABE  A4D8               	btfss	status,2,c
  2223  000AC0  D008               	goto	l3406
  2224  000AC2                     u3210:
  2225  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2226                           
  2227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2228  000AC4  0E02               	movlw	2
  2229  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2230  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2231  000ACE  26DE               	addwf	postinc2,f,c
  2232  000AD0  D023               	goto	L12
  2233  000AD2                     l3406:
  2234  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2235                           
  2236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2237  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2240  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2241  000AE4                     	if	0	;tblptru may be non-zero
  2242  000AE4                     	endif
  2243  000AE4                     	if	0	;tblptru may be non-zero
  2244  000AE4                     	endif
  2245  000AE4  0008               	tblrd		*
  2246  000AE6  FFFF               	dw	65535	; errata NOP
  2247  000AE8  50F5               	movf	tablat,w,c
  2248  000AEA  0A64               	xorlw	100
  2249  000AEC  B4D8               	btfsc	status,2,c
  2250  000AEE  D00E               	goto	u3230
  2251  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2254  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2255  000B00                     	if	0	;tblptru may be non-zero
  2256  000B00                     	endif
  2257  000B00                     	if	0	;tblptru may be non-zero
  2258  000B00                     	endif
  2259  000B00  0008               	tblrd		*
  2260  000B02  FFFF               	dw	65535	; errata NOP
  2261  000B04  50F5               	movf	tablat,w,c
  2262  000B06  0A69               	xorlw	105
  2263  000B08  A4D8               	btfss	status,2,c
  2264  000B0A  D021               	goto	l3416
  2265  000B0C                     u3230:
  2266  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2267                           
  2268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2269  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  000B16  2ADE               	incf	postinc2,f,c
  2272  000B18                     L12:
  2273  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2274  000B1A  0E00               	movlw	0
  2275  000B1C  22DD               	addwfc	postdec2,f,c
  2276                           
  2277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2278  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2279  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2280  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2281  000B2A  0E02               	movlw	2
  2282  000B2C  26DE               	addwf	postinc2,f,c
  2283  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2284  000B32  0E00               	movlw	0
  2285  000B34  22DD               	addwfc	postdec2,f,c
  2286  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2287  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2288  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2289  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2290  000B46  0E00               	movlw	0
  2291  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2292  000B4A  0EFF               	movlw	-1
  2293  000B4C  D769               	goto	L2
  2294  000B4E                     l3416:
  2295  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2296                           
  2297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2298  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2299  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2300  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2301  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2302  000B60  0E27               	movlw	low STR_21
  2303  000B62  6E03               	movwf	strncmp@_r,c
  2304  000B64  0E06               	movlw	high STR_21
  2305  000B66  6E04               	movwf	strncmp@_r+1,c
  2306  000B68  0E00               	movlw	0
  2307  000B6A  6E06               	movwf	strncmp@n+1,c
  2308  000B6C  0E02               	movlw	2
  2309  000B6E  6E05               	movwf	strncmp@n,c
  2310  000B70  ECAF  F013         	call	_strncmp	;wreg free
  2311  000B74  5001               	movf	?_strncmp,w,c
  2312  000B76  1002               	iorwf	?_strncmp+1,w,c
  2313  000B78  B4D8               	btfsc	status,2,c
  2314  000B7A  D016               	goto	u3250
  2315  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2318  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2319  000B8C  0E2D               	movlw	low STR_25
  2320  000B8E  6E03               	movwf	strncmp@_r,c
  2321  000B90  0E06               	movlw	high STR_25
  2322  000B92  6E04               	movwf	strncmp@_r+1,c
  2323  000B94  0E00               	movlw	0
  2324  000B96  6E06               	movwf	strncmp@n+1,c
  2325  000B98  0E02               	movlw	2
  2326  000B9A  6E05               	movwf	strncmp@n,c
  2327  000B9C  ECAF  F013         	call	_strncmp	;wreg free
  2328  000BA0  5001               	movf	?_strncmp,w,c
  2329  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2330  000BA4  A4D8               	btfss	status,2,c
  2331  000BA6  D043               	goto	l3426
  2332  000BA8                     u3250:
  2333  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2334                           
  2335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2336  000BAA  0E02               	movlw	2
  2337  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  000BB4  26DE               	addwf	postinc2,f,c
  2340  000BB6  0E00               	movlw	0
  2341  000BB8  22DD               	addwfc	postdec2,f,c
  2342                           
  2343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2344  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2345  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2346  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2347  000BC6  0E04               	movlw	4
  2348  000BC8  26DE               	addwf	postinc2,f,c
  2349  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2350  000BCE  0E00               	movlw	0
  2351  000BD0  22DD               	addwfc	postdec2,f,c
  2352  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2353  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2354  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2355  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2356  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2357  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2358  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2359  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2360  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2361  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2362  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2363  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2364  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2365  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2366  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2367  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2368  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2369  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2370  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2371  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2372  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2373  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2374  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2375  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2376  000C2C  D700               	goto	l3392
  2377  000C2E                     l3426:
  2378  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2379                           
  2380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2381  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2384  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2385  000C40  0E2A               	movlw	low STR_30
  2386  000C42  6E03               	movwf	strncmp@_r,c
  2387  000C44  0E06               	movlw	high STR_30
  2388  000C46  6E04               	movwf	strncmp@_r+1,c
  2389  000C48  0E00               	movlw	0
  2390  000C4A  6E06               	movwf	strncmp@n+1,c
  2391  000C4C  0E02               	movlw	2
  2392  000C4E  6E05               	movwf	strncmp@n,c
  2393  000C50  ECAF  F013         	call	_strncmp	;wreg free
  2394  000C54  5001               	movf	?_strncmp,w,c
  2395  000C56  1002               	iorwf	?_strncmp+1,w,c
  2396  000C58  B4D8               	btfsc	status,2,c
  2397  000C5A  D016               	goto	u3270
  2398  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2399  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2401  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2402  000C6C  0E30               	movlw	low STR_34
  2403  000C6E  6E03               	movwf	strncmp@_r,c
  2404  000C70  0E06               	movlw	high STR_34
  2405  000C72  6E04               	movwf	strncmp@_r+1,c
  2406  000C74  0E00               	movlw	0
  2407  000C76  6E06               	movwf	strncmp@n+1,c
  2408  000C78  0E02               	movlw	2
  2409  000C7A  6E05               	movwf	strncmp@n,c
  2410  000C7C  ECAF  F013         	call	_strncmp	;wreg free
  2411  000C80  5001               	movf	?_strncmp,w,c
  2412  000C82  1002               	iorwf	?_strncmp+1,w,c
  2413  000C84  A4D8               	btfss	status,2,c
  2414  000C86  D028               	goto	l3436
  2415  000C88                     u3270:
  2416  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2419  000C8A  0E02               	movlw	2
  2420  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  000C94  26DE               	addwf	postinc2,f,c
  2423  000C96  0E00               	movlw	0
  2424  000C98  22DD               	addwfc	postdec2,f,c
  2425                           
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2427  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2428  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2429  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2430  000CA6  0E02               	movlw	2
  2431  000CA8  26DE               	addwf	postinc2,f,c
  2432  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2433  000CAE  0E00               	movlw	0
  2434  000CB0  22DD               	addwfc	postdec2,f,c
  2435  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2436  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2437  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2438  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2439  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2440  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2441  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2442  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2443  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2444  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2445  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2446  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2447  000CD6  D6AB               	goto	l3392
  2448  000CD8                     l3436:
  2449  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2450                           
  2451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2452  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2455  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2456  000CEA  0E11               	movlw	low STR_39
  2457  000CEC  6E03               	movwf	strncmp@_r,c
  2458  000CEE  0E06               	movlw	high STR_39
  2459  000CF0  6E04               	movwf	strncmp@_r+1,c
  2460  000CF2  0E00               	movlw	0
  2461  000CF4  6E06               	movwf	strncmp@n+1,c
  2462  000CF6  0E03               	movlw	3
  2463  000CF8  6E05               	movwf	strncmp@n,c
  2464  000CFA  ECAF  F013         	call	_strncmp	;wreg free
  2465  000CFE  5001               	movf	?_strncmp,w,c
  2466  000D00  1002               	iorwf	?_strncmp+1,w,c
  2467  000D02  A4D8               	btfss	status,2,c
  2468  000D04  D041               	goto	l3444
  2469                           
  2470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2471  000D06  0E03               	movlw	3
  2472  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  000D10  26DE               	addwf	postinc2,f,c
  2475  000D12  0E00               	movlw	0
  2476  000D14  22DD               	addwfc	postdec2,f,c
  2477                           
  2478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2479  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2480  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2481  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2482  000D22  0E02               	movlw	2
  2483  000D24  26DE               	addwf	postinc2,f,c
  2484  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2485  000D2A  0E00               	movlw	0
  2486  000D2C  22DD               	addwfc	postdec2,f,c
  2487  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2488  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2489  000D36  50DF               	movf	indf2,w,c
  2490  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2491  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2492  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2493  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2494  000D40                     L3:
  2495  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2496  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2497  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2498  000D46                     L4:
  2499  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2500  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2501  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2502  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2503  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2504                           
  2505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2506  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2507  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2508  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2509  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2510  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2511  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2512  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2513  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2514  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2515  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2516  000D78  EC38  F00F         	call	_otoa	;wreg free
  2517  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2518  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2519  000D84  EFF3  F00B         	goto	l497
  2520  000D88                     l3444:
  2521  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2522                           
  2523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2524  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2525  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2526  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2527  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2528  000D9A  0E12               	movlw	low (STR_39+1)
  2529  000D9C  6E03               	movwf	strncmp@_r,c
  2530  000D9E  0E06               	movlw	high (STR_39+1)
  2531  000DA0  6E04               	movwf	strncmp@_r+1,c
  2532  000DA2  0E00               	movlw	0
  2533  000DA4  6E06               	movwf	strncmp@n+1,c
  2534  000DA6  0E02               	movlw	2
  2535  000DA8  6E05               	movwf	strncmp@n,c
  2536  000DAA  ECAF  F013         	call	_strncmp	;wreg free
  2537  000DAE  5001               	movf	?_strncmp,w,c
  2538  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2539  000DB2  B4D8               	btfsc	status,2,c
  2540  000DB4  D06B               	goto	u3320
  2541                           
  2542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2543                           
  2544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2545                           
  2546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2547  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2548  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2549  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2550  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2551  000DC6                     	if	0	;tblptru may be non-zero
  2552  000DC6                     	endif
  2553  000DC6                     	if	0	;tblptru may be non-zero
  2554  000DC6                     	endif
  2555  000DC6  0008               	tblrd		*
  2556  000DC8  FFFF               	dw	65535	; errata NOP
  2557  000DCA  50F5               	movf	tablat,w,c
  2558  000DCC  0A6F               	xorlw	111
  2559  000DCE  A4D8               	btfss	status,2,c
  2560  000DD0  D006               	goto	l3460
  2561                           
  2562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2563  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  000DDA  2ADE               	incf	postinc2,f,c
  2566  000DDC  D05E               	goto	L17
  2567  000DDE                     l3460:
  2568  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2569                           
  2570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2571  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2572  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2573  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2574  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2575  000DF0  0E39               	movlw	low STR_49
  2576  000DF2  6E03               	movwf	strncmp@_r,c
  2577  000DF4  0E06               	movlw	high STR_49
  2578  000DF6  6E04               	movwf	strncmp@_r+1,c
  2579  000DF8  0E00               	movlw	0
  2580  000DFA  6E06               	movwf	strncmp@n+1,c
  2581  000DFC  0E02               	movlw	2
  2582  000DFE  6E05               	movwf	strncmp@n,c
  2583  000E00  ECAF  F013         	call	_strncmp	;wreg free
  2584  000E04  5001               	movf	?_strncmp,w,c
  2585  000E06  1002               	iorwf	?_strncmp+1,w,c
  2586  000E08  A4D8               	btfss	status,2,c
  2587  000E0A  D029               	goto	l3468
  2588                           
  2589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2590  000E0C  0E02               	movlw	2
  2591  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2592  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2593  000E16  26DE               	addwf	postinc2,f,c
  2594  000E18  0E00               	movlw	0
  2595  000E1A  22DD               	addwfc	postdec2,f,c
  2596                           
  2597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2598  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2599  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2600  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2601  000E28  0E04               	movlw	4
  2602  000E2A  26DE               	addwf	postinc2,f,c
  2603  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2604  000E30  0E00               	movlw	0
  2605  000E32  22DD               	addwfc	postdec2,f,c
  2606  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2607  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2608  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2609  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2610  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2611  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2612  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2613  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2614  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2615  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2616  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2617  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2618  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2619  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2620  000E5C  D774               	goto	L4
  2621  000E5E                     l3468:
  2622  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2623                           
  2624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2625  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2626  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2627  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2628  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2629  000E70  0E3C               	movlw	low STR_54
  2630  000E72  6E03               	movwf	strncmp@_r,c
  2631  000E74  0E06               	movlw	high STR_54
  2632  000E76  6E04               	movwf	strncmp@_r+1,c
  2633  000E78  0E00               	movlw	0
  2634  000E7A  6E06               	movwf	strncmp@n+1,c
  2635  000E7C  0E02               	movlw	2
  2636  000E7E  6E05               	movwf	strncmp@n,c
  2637  000E80  ECAF  F013         	call	_strncmp	;wreg free
  2638  000E84  5001               	movf	?_strncmp,w,c
  2639  000E86  1002               	iorwf	?_strncmp+1,w,c
  2640  000E88  A4D8               	btfss	status,2,c
  2641  000E8A  D023               	goto	l3476
  2642  000E8C                     u3320:
  2643  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2644                           
  2645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2646  000E8E  0E02               	movlw	2
  2647  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  000E98  26DE               	addwf	postinc2,f,c
  2650  000E9A                     L17:
  2651  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2652  000E9C  0E00               	movlw	0
  2653  000E9E  22DD               	addwfc	postdec2,f,c
  2654                           
  2655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2656  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2657  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2658  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2659  000EAC  0E02               	movlw	2
  2660  000EAE  26DE               	addwf	postinc2,f,c
  2661  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2662  000EB4  0E00               	movlw	0
  2663  000EB6  22DD               	addwfc	postdec2,f,c
  2664  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2665  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2666  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2667  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2668  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2669  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2670  000ED0  D737               	goto	L3
  2671  000ED2                     l3476:
  2672  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2673                           
  2674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2675  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2678  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2679  000EE4  0E0D               	movlw	low STR_59
  2680  000EE6  6E03               	movwf	strncmp@_r,c
  2681  000EE8  0E06               	movlw	high STR_59
  2682  000EEA  6E04               	movwf	strncmp@_r+1,c
  2683  000EEC  0E00               	movlw	0
  2684  000EEE  6E06               	movwf	strncmp@n+1,c
  2685  000EF0  0E03               	movlw	3
  2686  000EF2  6E05               	movwf	strncmp@n,c
  2687  000EF4  ECAF  F013         	call	_strncmp	;wreg free
  2688  000EF8  5001               	movf	?_strncmp,w,c
  2689  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2690  000EFC  A4D8               	btfss	status,2,c
  2691  000EFE  D028               	goto	l3486
  2692                           
  2693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2694  000F00  0E03               	movlw	3
  2695  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2696  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2697  000F0A  26DE               	addwf	postinc2,f,c
  2698  000F0C  0E00               	movlw	0
  2699  000F0E  22DD               	addwfc	postdec2,f,c
  2700                           
  2701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2702  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2703  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2704  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2705  000F1C  0E02               	movlw	2
  2706  000F1E  26DE               	addwf	postinc2,f,c
  2707  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2708  000F24  0E00               	movlw	0
  2709  000F26  22DD               	addwfc	postdec2,f,c
  2710  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2711  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2712  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2713  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2714                           
  2715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2716  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2717  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2718  000F40  C08F  FFDF         	movff	_nout,indf2
  2719  000F44                     l3482:
  2720  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2721                           
  2722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2723  000F46  0E00               	movlw	0
  2724  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2725  000F4A  0E00               	movlw	0
  2726  000F4C  EFCA  F00B         	goto	L5
  2727  000F50                     l3486:
  2728  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2729                           
  2730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2731  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2732  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2733  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2734  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2735  000F62  0E0E               	movlw	low (STR_59+1)
  2736  000F64  6E03               	movwf	strncmp@_r,c
  2737  000F66  0E06               	movlw	high (STR_59+1)
  2738  000F68  6E04               	movwf	strncmp@_r+1,c
  2739  000F6A  0E00               	movlw	0
  2740  000F6C  6E06               	movwf	strncmp@n+1,c
  2741  000F6E  0E02               	movlw	2
  2742  000F70  6E05               	movwf	strncmp@n,c
  2743  000F72  ECAF  F013         	call	_strncmp	;wreg free
  2744  000F76  5001               	movf	?_strncmp,w,c
  2745  000F78  1002               	iorwf	?_strncmp+1,w,c
  2746  000F7A  A4D8               	btfss	status,2,c
  2747  000F7C  D00B               	goto	l3496
  2748  000F7E  D07F               	goto	u3370
  2749  000F80                     l3490:
  2750  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2751                           
  2752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2753  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2754  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2755  000F8A  C08F  FFDE         	movff	_nout,postinc2
  2756  000F8E  C090  FFDD         	movff	_nout+1,postdec2
  2757  000F92  D7D8               	goto	l3482
  2758  000F94                     l3496:
  2759  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2760                           
  2761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2762  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2763  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2764  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2765  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2766  000FA6                     	if	0	;tblptru may be non-zero
  2767  000FA6                     	endif
  2768  000FA6                     	if	0	;tblptru may be non-zero
  2769  000FA6                     	endif
  2770  000FA6  0008               	tblrd		*
  2771  000FA8  FFFF               	dw	65535	; errata NOP
  2772  000FAA  50F5               	movf	tablat,w,c
  2773  000FAC  0A6E               	xorlw	110
  2774  000FAE  A4D8               	btfss	status,2,c
  2775  000FB0  D006               	goto	l3506
  2776                           
  2777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2778  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2779  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2780  000FBA  2ADE               	incf	postinc2,f,c
  2781  000FBC  D067               	goto	L14
  2782  000FBE                     l3506:
  2783  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2784                           
  2785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2786  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2787  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2788  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2789  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2790  000FD0  0E33               	movlw	low STR_69
  2791  000FD2  6E03               	movwf	strncmp@_r,c
  2792  000FD4  0E06               	movlw	high STR_69
  2793  000FD6  6E04               	movwf	strncmp@_r+1,c
  2794  000FD8  0E00               	movlw	0
  2795  000FDA  6E06               	movwf	strncmp@n+1,c
  2796  000FDC  0E02               	movlw	2
  2797  000FDE  6E05               	movwf	strncmp@n,c
  2798  000FE0  ECAF  F013         	call	_strncmp	;wreg free
  2799  000FE4  5001               	movf	?_strncmp,w,c
  2800  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2801  000FE8  A4D8               	btfss	status,2,c
  2802  000FEA  D032               	goto	l3516
  2803                           
  2804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2805  000FEC  0E02               	movlw	2
  2806  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2807  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2808  000FF6  26DE               	addwf	postinc2,f,c
  2809  000FF8  0E00               	movlw	0
  2810  000FFA  22DD               	addwfc	postdec2,f,c
  2811                           
  2812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2813  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2814  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2815  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2816  001008  0E02               	movlw	2
  2817  00100A  26DE               	addwf	postinc2,f,c
  2818  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2819  001010  0E00               	movlw	0
  2820  001012  22DD               	addwfc	postdec2,f,c
  2821  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2822  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2823  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2824  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2825                           
  2826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2827  001024  C08F  F049         	movff	_nout,??_vfpfcnvrt
  2828  001028  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2829  00102C  0E00               	movlw	0
  2830  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2831  001030  0EFF               	movlw	255
  2832  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2833  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2834  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2835  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2836  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2837  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2838  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2839  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2840  00104E  D77A               	goto	l3482
  2841  001050                     l3516:
  2842  001050  FFFF               	dw	65535	; assembler added errata NOP
  2843                           
  2844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2845  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2846  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2847  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  2848  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2849  001062  0E36               	movlw	low STR_74
  2850  001064  6E03               	movwf	strncmp@_r,c
  2851  001066  0E06               	movlw	high STR_74
  2852  001068  6E04               	movwf	strncmp@_r+1,c
  2853  00106A  0E00               	movlw	0
  2854  00106C  6E06               	movwf	strncmp@n+1,c
  2855  00106E  0E02               	movlw	2
  2856  001070  6E05               	movwf	strncmp@n,c
  2857  001072  ECAF  F013         	call	_strncmp	;wreg free
  2858  001076  5001               	movf	?_strncmp,w,c
  2859  001078  1002               	iorwf	?_strncmp+1,w,c
  2860  00107A  A4D8               	btfss	status,2,c
  2861  00107C  D01F               	goto	l3526
  2862  00107E                     u3370:
  2863  00107E  FFFF               	dw	65535	; assembler added errata NOP
  2864                           
  2865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  2866  001080  0E02               	movlw	2
  2867  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2868  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2869  00108A  26DE               	addwf	postinc2,f,c
  2870  00108C                     L14:
  2871  00108C  FFFF               	dw	65535	; assembler added errata NOP
  2872  00108E  0E00               	movlw	0
  2873  001090  22DD               	addwfc	postdec2,f,c
  2874                           
  2875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2876  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2877  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2878  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2879  00109E  0E02               	movlw	2
  2880  0010A0  26DE               	addwf	postinc2,f,c
  2881  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2882  0010A6  0E00               	movlw	0
  2883  0010A8  22DD               	addwfc	postdec2,f,c
  2884  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2885  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2886  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2887  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2888  0010BA  D762               	goto	l3490
  2889  0010BC                     l3526:
  2890  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2891                           
  2892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  2893  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2894  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2895  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  2896  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  2897  0010CE                     	if	0	;tblptru may be non-zero
  2898  0010CE                     	endif
  2899  0010CE                     	if	0	;tblptru may be non-zero
  2900  0010CE                     	endif
  2901  0010CE  0008               	tblrd		*
  2902  0010D0  FFFF               	dw	65535	; errata NOP
  2903  0010D2  50F5               	movf	tablat,w,c
  2904  0010D4  0A70               	xorlw	112
  2905  0010D6  A4D8               	btfss	status,2,c
  2906  0010D8  D03E               	goto	l3534
  2907                           
  2908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  2909  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2910  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2911  0010E2  2ADE               	incf	postinc2,f,c
  2912  0010E4  0E00               	movlw	0
  2913  0010E6  22DD               	addwfc	postdec2,f,c
  2914                           
  2915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2916  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2917  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2918  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2919  0010F4  0E02               	movlw	2
  2920  0010F6  26DE               	addwf	postinc2,f,c
  2921  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2922  0010FC  0E00               	movlw	0
  2923  0010FE  22DD               	addwfc	postdec2,f,c
  2924  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2925  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2926  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2927  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2928  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2929  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2930  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2931  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2932  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2933  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2934  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  2935  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  2936                           
  2937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  2938  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2939  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2940  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2941  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2942  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2943  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2944  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2945  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2946  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2947  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2948  00114C  0E78               	movlw	120
  2949  00114E  6E26               	movwf	xtoa@x,c
  2950  001150  EC2B  F00D         	call	_xtoa	;wreg free
  2951  001154  D1B4               	goto	L7
  2952  001156                     l3534:
  2953  001156  FFFF               	dw	65535	; assembler added errata NOP
  2954                           
  2955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  2956  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2957  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2958  001160  CFDE FFF6          	movff	postinc2,tblptrl
  2959  001164  CFDD FFF7          	movff	postdec2,tblptrh
  2960  001168                     	if	0	;tblptru may be non-zero
  2961  001168                     	endif
  2962  001168                     	if	0	;tblptru may be non-zero
  2963  001168                     	endif
  2964  001168  0008               	tblrd		*
  2965  00116A  FFFF               	dw	65535	; errata NOP
  2966  00116C  50F5               	movf	tablat,w,c
  2967  00116E  0A73               	xorlw	115
  2968  001170  A4D8               	btfss	status,2,c
  2969  001172  D02A               	goto	l3542
  2970                           
  2971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  2972  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2973  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2974  00117C  2ADE               	incf	postinc2,f,c
  2975  00117E  0E00               	movlw	0
  2976  001180  22DD               	addwfc	postdec2,f,c
  2977                           
  2978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  2979  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2980  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2981  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2982  00118E  0E02               	movlw	2
  2983  001190  26DE               	addwf	postinc2,f,c
  2984  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2985  001196  0E00               	movlw	0
  2986  001198  22DD               	addwfc	postdec2,f,c
  2987  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2988  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2989  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  2990  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  2991                           
  2992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  2993  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2994  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2995  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2996  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2997  0011BA  EC66  F011         	call	_stoa	;wreg free
  2998  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2999  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3000  0011C6  D30F               	goto	l497
  3001  0011C8                     l3542:
  3002  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  3003                           
  3004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3005  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3006  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3007  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  3008  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3009  0011DA  0E15               	movlw	low STR_79
  3010  0011DC  6E03               	movwf	strncmp@_r,c
  3011  0011DE  0E06               	movlw	high STR_79
  3012  0011E0  6E04               	movwf	strncmp@_r+1,c
  3013  0011E2  0E00               	movlw	0
  3014  0011E4  6E06               	movwf	strncmp@n+1,c
  3015  0011E6  0E03               	movlw	3
  3016  0011E8  6E05               	movwf	strncmp@n,c
  3017  0011EA  ECAF  F013         	call	_strncmp	;wreg free
  3018  0011EE  5001               	movf	?_strncmp,w,c
  3019  0011F0  1002               	iorwf	?_strncmp+1,w,c
  3020  0011F2  A4D8               	btfss	status,2,c
  3021  0011F4  D040               	goto	l3550
  3022                           
  3023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3024  0011F6  0E03               	movlw	3
  3025  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3026  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3027  001200  26DE               	addwf	postinc2,f,c
  3028  001202  0E00               	movlw	0
  3029  001204  22DD               	addwfc	postdec2,f,c
  3030                           
  3031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3032  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3033  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3034  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3035  001212  0E02               	movlw	2
  3036  001214  26DE               	addwf	postinc2,f,c
  3037  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3038  00121A  0E00               	movlw	0
  3039  00121C  22DD               	addwfc	postdec2,f,c
  3040  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3041  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3042  001226  50DF               	movf	indf2,w,c
  3043  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3044  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  3045  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  3046  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3047  001230                     L8:
  3048  001230  FFFF               	dw	65535	; assembler added errata NOP
  3049  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3050  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3051  001236                     L9:
  3052  001236  FFFF               	dw	65535	; assembler added errata NOP
  3053  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3054  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3055  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  3056  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  3057                           
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3059  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3060  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3061  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3062  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3063  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3064  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3065  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3066  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3067  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3068  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3069  001268  EC57  F00E         	call	_utoa	;wreg free
  3070  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3071  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3072  001274  D2B8               	goto	l497
  3073  001276                     l3550:
  3074  001276  FFFF               	dw	65535	; assembler added errata NOP
  3075                           
  3076                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3077  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3078  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3079  001280  CFDE F001          	movff	postinc2,strncmp@_l
  3080  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  3081  001288  0E16               	movlw	low (STR_79+1)
  3082  00128A  6E03               	movwf	strncmp@_r,c
  3083  00128C  0E06               	movlw	high (STR_79+1)
  3084  00128E  6E04               	movwf	strncmp@_r+1,c
  3085  001290  0E00               	movlw	0
  3086  001292  6E06               	movwf	strncmp@n+1,c
  3087  001294  0E02               	movlw	2
  3088  001296  6E05               	movwf	strncmp@n,c
  3089  001298  ECAF  F013         	call	_strncmp	;wreg free
  3090  00129C  5001               	movf	?_strncmp,w,c
  3091  00129E  1002               	iorwf	?_strncmp+1,w,c
  3092  0012A0  B4D8               	btfsc	status,2,c
  3093  0012A2  D06B               	goto	u3440
  3094                           
  3095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3096                           
  3097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3098                           
  3099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3100  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3101  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3102  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  3103  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  3104  0012B4                     	if	0	;tblptru may be non-zero
  3105  0012B4                     	endif
  3106  0012B4                     	if	0	;tblptru may be non-zero
  3107  0012B4                     	endif
  3108  0012B4  0008               	tblrd		*
  3109  0012B6  FFFF               	dw	65535	; errata NOP
  3110  0012B8  50F5               	movf	tablat,w,c
  3111  0012BA  0A75               	xorlw	117
  3112  0012BC  A4D8               	btfss	status,2,c
  3113  0012BE  D006               	goto	l3566
  3114                           
  3115                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3116  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3117  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3118  0012C8  2ADE               	incf	postinc2,f,c
  3119  0012CA  D05E               	goto	L18
  3120  0012CC                     l3566:
  3121  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3122                           
  3123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3124  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3125  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3126  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3127  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3128  0012DE  0E1E               	movlw	low (STR_1+1)
  3129  0012E0  6E03               	movwf	strncmp@_r,c
  3130  0012E2  0E06               	movlw	high (STR_1+1)
  3131  0012E4  6E04               	movwf	strncmp@_r+1,c
  3132  0012E6  0E00               	movlw	0
  3133  0012E8  6E06               	movwf	strncmp@n+1,c
  3134  0012EA  0E02               	movlw	2
  3135  0012EC  6E05               	movwf	strncmp@n,c
  3136  0012EE  ECAF  F013         	call	_strncmp	;wreg free
  3137  0012F2  5001               	movf	?_strncmp,w,c
  3138  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3139  0012F6  A4D8               	btfss	status,2,c
  3140  0012F8  D029               	goto	l3574
  3141                           
  3142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3143  0012FA  0E02               	movlw	2
  3144  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3145  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3146  001304  26DE               	addwf	postinc2,f,c
  3147  001306  0E00               	movlw	0
  3148  001308  22DD               	addwfc	postdec2,f,c
  3149                           
  3150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3151  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3152  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3153  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3154  001316  0E04               	movlw	4
  3155  001318  26DE               	addwf	postinc2,f,c
  3156  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3157  00131E  0E00               	movlw	0
  3158  001320  22DD               	addwfc	postdec2,f,c
  3159  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3160  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3161  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3162  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3163  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3164  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3165  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3166  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3167  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3168  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3169  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3170  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3171  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3172  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3173  00134A  D775               	goto	L9
  3174  00134C                     l3574:
  3175  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3176                           
  3177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3178  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3179  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3180  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3181  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3182  00135E  0E3F               	movlw	low STR_94
  3183  001360  6E03               	movwf	strncmp@_r,c
  3184  001362  0E06               	movlw	high STR_94
  3185  001364  6E04               	movwf	strncmp@_r+1,c
  3186  001366  0E00               	movlw	0
  3187  001368  6E06               	movwf	strncmp@n+1,c
  3188  00136A  0E02               	movlw	2
  3189  00136C  6E05               	movwf	strncmp@n,c
  3190  00136E  ECAF  F013         	call	_strncmp	;wreg free
  3191  001372  5001               	movf	?_strncmp,w,c
  3192  001374  1002               	iorwf	?_strncmp+1,w,c
  3193  001376  A4D8               	btfss	status,2,c
  3194  001378  D023               	goto	l3582
  3195  00137A                     u3440:
  3196  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3197                           
  3198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3199  00137C  0E02               	movlw	2
  3200  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3201  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  001386  26DE               	addwf	postinc2,f,c
  3203  001388                     L18:
  3204  001388  FFFF               	dw	65535	; assembler added errata NOP
  3205  00138A  0E00               	movlw	0
  3206  00138C  22DD               	addwfc	postdec2,f,c
  3207                           
  3208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3209  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3210  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3211  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3212  00139A  0E02               	movlw	2
  3213  00139C  26DE               	addwf	postinc2,f,c
  3214  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3215  0013A2  0E00               	movlw	0
  3216  0013A4  22DD               	addwfc	postdec2,f,c
  3217  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3218  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3219  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3220  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3221  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3222  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3223  0013BE  D738               	goto	L8
  3224  0013C0                     l3582:
  3225  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3226                           
  3227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3228  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3231  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3232  0013D2  0E19               	movlw	low STR_99
  3233  0013D4  6E03               	movwf	strncmp@_r,c
  3234  0013D6  0E06               	movlw	high STR_99
  3235  0013D8  6E04               	movwf	strncmp@_r+1,c
  3236  0013DA  0E00               	movlw	0
  3237  0013DC  6E06               	movwf	strncmp@n+1,c
  3238  0013DE  0E03               	movlw	3
  3239  0013E0  6E05               	movwf	strncmp@n,c
  3240  0013E2  ECAF  F013         	call	_strncmp	;wreg free
  3241  0013E6  5001               	movf	?_strncmp,w,c
  3242  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3243  0013EA  B4D8               	btfsc	status,2,c
  3244  0013EC  D016               	goto	u3460
  3245  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3246  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3247  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3248  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3249  0013FE  0E01               	movlw	low STR_103
  3250  001400  6E03               	movwf	strncmp@_r,c
  3251  001402  0E06               	movlw	high STR_103
  3252  001404  6E04               	movwf	strncmp@_r+1,c
  3253  001406  0E00               	movlw	0
  3254  001408  6E06               	movwf	strncmp@n+1,c
  3255  00140A  0E03               	movlw	3
  3256  00140C  6E05               	movwf	strncmp@n,c
  3257  00140E  ECAF  F013         	call	_strncmp	;wreg free
  3258  001412  5001               	movf	?_strncmp,w,c
  3259  001414  1002               	iorwf	?_strncmp+1,w,c
  3260  001416  A4D8               	btfss	status,2,c
  3261  001418  D058               	goto	l3596
  3262  00141A                     u3460:
  3263  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3264                           
  3265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3266  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3267  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3268  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3269  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3270  00142C  0E02               	movlw	2
  3271  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3272  001430  0E00               	movlw	0
  3273  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3274  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3275  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3276  00143C                     	if	0	;tblptru may be non-zero
  3277  00143C                     	endif
  3278  00143C                     	if	0	;tblptru may be non-zero
  3279  00143C                     	endif
  3280  00143C  0008               	tblrd		*
  3281  00143E  FFFF               	dw	65535	; errata NOP
  3282  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3283                           
  3284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3285  001444  0E03               	movlw	3
  3286  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3287  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3288  00144E  26DE               	addwf	postinc2,f,c
  3289  001450  0E00               	movlw	0
  3290  001452  22DD               	addwfc	postdec2,f,c
  3291                           
  3292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3293  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3294  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3295  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3296  001460  0E02               	movlw	2
  3297  001462  26DE               	addwf	postinc2,f,c
  3298  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3299  001468  0E00               	movlw	0
  3300  00146A  22DD               	addwfc	postdec2,f,c
  3301  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3302  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3303  001474  50DF               	movf	indf2,w,c
  3304  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3305  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3306  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3307  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3308  00147E                     L10:
  3309  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3310  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3311  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3312  001484                     L11:
  3313  001484  FFFF               	dw	65535	; assembler added errata NOP
  3314  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3315  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3316  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3317  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3318                           
  3319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3320  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3321  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3322  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3323  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3324  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3325  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3326  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3327  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3328  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3329  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3330  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3331  0014BA  EC2B  F00D         	call	_xtoa	;wreg free
  3332  0014BE                     L7:
  3333  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3334  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3335  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3336  0014C8  D18E               	goto	l497
  3337  0014CA                     l3596:
  3338  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3339                           
  3340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3341  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3344  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3345  0014DC  0E1A               	movlw	low (STR_99+1)
  3346  0014DE  6E03               	movwf	strncmp@_r,c
  3347  0014E0  0E06               	movlw	high (STR_99+1)
  3348  0014E2  6E04               	movwf	strncmp@_r+1,c
  3349  0014E4  0E00               	movlw	0
  3350  0014E6  6E06               	movwf	strncmp@n+1,c
  3351  0014E8  0E02               	movlw	2
  3352  0014EA  6E05               	movwf	strncmp@n,c
  3353  0014EC  ECAF  F013         	call	_strncmp	;wreg free
  3354  0014F0  5001               	movf	?_strncmp,w,c
  3355  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3356  0014F4  B4D8               	btfsc	status,2,c
  3357  0014F6  D016               	goto	u3480
  3358  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3359  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3360  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3361  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3362  001508  0E02               	movlw	low (STR_103+1)
  3363  00150A  6E03               	movwf	strncmp@_r,c
  3364  00150C  0E06               	movlw	high (STR_103+1)
  3365  00150E  6E04               	movwf	strncmp@_r+1,c
  3366  001510  0E00               	movlw	0
  3367  001512  6E06               	movwf	strncmp@n+1,c
  3368  001514  0E02               	movlw	2
  3369  001516  6E05               	movwf	strncmp@n,c
  3370  001518  ECAF  F013         	call	_strncmp	;wreg free
  3371  00151C  5001               	movf	?_strncmp,w,c
  3372  00151E  1002               	iorwf	?_strncmp+1,w,c
  3373  001520  A4D8               	btfss	status,2,c
  3374  001522  D014               	goto	l3610
  3375  001524                     u3480:
  3376  001524  FFFF               	dw	65535	; assembler added errata NOP
  3377                           
  3378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3379  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3382  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3383  001536  0E01               	movlw	1
  3384  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3385  00153A  0E00               	movlw	0
  3386  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3387  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3388  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3389  001546                     	if	0	;tblptru may be non-zero
  3390  001546                     	endif
  3391  001546                     	if	0	;tblptru may be non-zero
  3392  001546                     	endif
  3393  001546  0008               	tblrd		*
  3394  001548  FFFF               	dw	65535	; errata NOP
  3395  00154A  D0DB               	goto	L22
  3396  00154C                     l3610:
  3397  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3398                           
  3399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3400  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3401  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3402  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3403  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3404  00155E                     	if	0	;tblptru may be non-zero
  3405  00155E                     	endif
  3406  00155E                     	if	0	;tblptru may be non-zero
  3407  00155E                     	endif
  3408  00155E  0008               	tblrd		*
  3409  001560  FFFF               	dw	65535	; errata NOP
  3410  001562  50F5               	movf	tablat,w,c
  3411  001564  0A78               	xorlw	120
  3412  001566  B4D8               	btfsc	status,2,c
  3413  001568  D00E               	goto	u3500
  3414  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3415  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3416  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3417  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3418  00157A                     	if	0	;tblptru may be non-zero
  3419  00157A                     	endif
  3420  00157A                     	if	0	;tblptru may be non-zero
  3421  00157A                     	endif
  3422  00157A  0008               	tblrd		*
  3423  00157C  FFFF               	dw	65535	; errata NOP
  3424  00157E  50F5               	movf	tablat,w,c
  3425  001580  0A58               	xorlw	88
  3426  001582  A4D8               	btfss	status,2,c
  3427  001584  D013               	goto	l3624
  3428  001586                     u3500:
  3429  001586  FFFF               	dw	65535	; assembler added errata NOP
  3430                           
  3431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3432  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3433  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3434  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3435  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3436  001598                     	if	0	;tblptru may be non-zero
  3437  001598                     	endif
  3438  001598                     	if	0	;tblptru may be non-zero
  3439  001598                     	endif
  3440  001598  0008               	tblrd		*
  3441  00159A  FFFF               	dw	65535	; errata NOP
  3442  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3443                           
  3444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3445  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3446  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3447  0015A8  2ADE               	incf	postinc2,f,c
  3448  0015AA  D0B4               	goto	L21
  3449  0015AC                     l3624:
  3450  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3451                           
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3453  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3454  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3455  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3456  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3457  0015BE  0E42               	movlw	low STR_117
  3458  0015C0  6E03               	movwf	strncmp@_r,c
  3459  0015C2  0E06               	movlw	high STR_117
  3460  0015C4  6E04               	movwf	strncmp@_r+1,c
  3461  0015C6  0E00               	movlw	0
  3462  0015C8  6E06               	movwf	strncmp@n+1,c
  3463  0015CA  0E02               	movlw	2
  3464  0015CC  6E05               	movwf	strncmp@n,c
  3465  0015CE  ECAF  F013         	call	_strncmp	;wreg free
  3466  0015D2  5001               	movf	?_strncmp,w,c
  3467  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3468  0015D6  B4D8               	btfsc	status,2,c
  3469  0015D8  D016               	goto	u3520
  3470  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3473  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3474  0015EA  0E21               	movlw	low STR_121
  3475  0015EC  6E03               	movwf	strncmp@_r,c
  3476  0015EE  0E06               	movlw	high STR_121
  3477  0015F0  6E04               	movwf	strncmp@_r+1,c
  3478  0015F2  0E00               	movlw	0
  3479  0015F4  6E06               	movwf	strncmp@n+1,c
  3480  0015F6  0E02               	movlw	2
  3481  0015F8  6E05               	movwf	strncmp@n,c
  3482  0015FA  ECAF  F013         	call	_strncmp	;wreg free
  3483  0015FE  5001               	movf	?_strncmp,w,c
  3484  001600  1002               	iorwf	?_strncmp+1,w,c
  3485  001602  A4D8               	btfss	status,2,c
  3486  001604  D03E               	goto	l3638
  3487  001606                     u3520:
  3488  001606  FFFF               	dw	65535	; assembler added errata NOP
  3489                           
  3490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3491  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3492  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3493  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3494  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3495  001618  0E01               	movlw	1
  3496  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3497  00161C  0E00               	movlw	0
  3498  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3499  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3500  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3501  001628                     	if	0	;tblptru may be non-zero
  3502  001628                     	endif
  3503  001628                     	if	0	;tblptru may be non-zero
  3504  001628                     	endif
  3505  001628  0008               	tblrd		*
  3506  00162A  FFFF               	dw	65535	; errata NOP
  3507  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3508                           
  3509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3510  001630  0E02               	movlw	2
  3511  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3512  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3513  00163A  26DE               	addwf	postinc2,f,c
  3514  00163C  0E00               	movlw	0
  3515  00163E  22DD               	addwfc	postdec2,f,c
  3516                           
  3517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3518  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3519  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3520  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3521  00164C  0E04               	movlw	4
  3522  00164E  26DE               	addwf	postinc2,f,c
  3523  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3524  001654  0E00               	movlw	0
  3525  001656  22DD               	addwfc	postdec2,f,c
  3526  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3527  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3528  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3529  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3530  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3531  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3532  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3533  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3534  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3535  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3536  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3537  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3538  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3539  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3540  001680  D701               	goto	L11
  3541  001682                     l3638:
  3542  001682  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3545  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3548  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3549  001694  0E45               	movlw	low STR_126
  3550  001696  6E03               	movwf	strncmp@_r,c
  3551  001698  0E06               	movlw	high STR_126
  3552  00169A  6E04               	movwf	strncmp@_r+1,c
  3553  00169C  0E00               	movlw	0
  3554  00169E  6E06               	movwf	strncmp@n+1,c
  3555  0016A0  0E02               	movlw	2
  3556  0016A2  6E05               	movwf	strncmp@n,c
  3557  0016A4  ECAF  F013         	call	_strncmp	;wreg free
  3558  0016A8  5001               	movf	?_strncmp,w,c
  3559  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3560  0016AC  B4D8               	btfsc	status,2,c
  3561  0016AE  D016               	goto	u3540
  3562  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3563  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3564  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3565  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3566  0016C0  0E24               	movlw	low STR_130
  3567  0016C2  6E03               	movwf	strncmp@_r,c
  3568  0016C4  0E06               	movlw	high STR_130
  3569  0016C6  6E04               	movwf	strncmp@_r+1,c
  3570  0016C8  0E00               	movlw	0
  3571  0016CA  6E06               	movwf	strncmp@n+1,c
  3572  0016CC  0E02               	movlw	2
  3573  0016CE  6E05               	movwf	strncmp@n,c
  3574  0016D0  ECAF  F013         	call	_strncmp	;wreg free
  3575  0016D4  5001               	movf	?_strncmp,w,c
  3576  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3577  0016D8  A4D8               	btfss	status,2,c
  3578  0016DA  D038               	goto	l3652
  3579  0016DC                     u3540:
  3580  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3581                           
  3582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3583  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3584  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3585  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3586  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3587  0016EE  0E01               	movlw	1
  3588  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3589  0016F2  0E00               	movlw	0
  3590  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3591  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3592  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3593  0016FE                     	if	0	;tblptru may be non-zero
  3594  0016FE                     	endif
  3595  0016FE                     	if	0	;tblptru may be non-zero
  3596  0016FE                     	endif
  3597  0016FE  0008               	tblrd		*
  3598  001700  FFFF               	dw	65535	; errata NOP
  3599  001702                     L22:
  3600  001702  FFFF               	dw	65535	; assembler added errata NOP
  3601  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3602                           
  3603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3604  001708  0E02               	movlw	2
  3605  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  001712  26DE               	addwf	postinc2,f,c
  3608  001714                     L21:
  3609  001714  FFFF               	dw	65535	; assembler added errata NOP
  3610  001716  0E00               	movlw	0
  3611  001718  22DD               	addwfc	postdec2,f,c
  3612                           
  3613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3614  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3615  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3616  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3617  001726  0E02               	movlw	2
  3618  001728  26DE               	addwf	postinc2,f,c
  3619  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3620  00172E  0E00               	movlw	0
  3621  001730  22DD               	addwfc	postdec2,f,c
  3622  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3623  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3624  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3625  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3626  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3627  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3628  00174A  D699               	goto	L10
  3629  00174C                     l3652:
  3630  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3631                           
  3632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3633  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3634  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3635  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3636  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3637  00175E                     	if	0	;tblptru may be non-zero
  3638  00175E                     	endif
  3639  00175E                     	if	0	;tblptru may be non-zero
  3640  00175E                     	endif
  3641  00175E  0008               	tblrd		*
  3642  001760  FFFF               	dw	65535	; errata NOP
  3643  001762  50F5               	movf	tablat,w,c
  3644  001764  0A25               	xorlw	37
  3645  001766  A4D8               	btfss	status,2,c
  3646  001768  D018               	goto	l3662
  3647                           
  3648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3649  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3650  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3651  001772  2ADE               	incf	postinc2,f,c
  3652  001774  0E00               	movlw	0
  3653  001776  22DD               	addwfc	postdec2,f,c
  3654                           
  3655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3656  001778  0E00               	movlw	0
  3657  00177A  6E02               	movwf	fputc@c+1,c
  3658  00177C  0E25               	movlw	37
  3659  00177E  6E01               	movwf	fputc@c,c
  3660  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3661  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3662  001788  EC6E  F014         	call	_fputc	;wreg free
  3663  00178C                     l3658:
  3664  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3665                           
  3666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3667  00178E  0E00               	movlw	0
  3668  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3669  001792  0E01               	movlw	1
  3670  001794                     L5:
  3671  001794  FFFF               	dw	65535	; assembler added errata NOP
  3672  001796  6E43               	movwf	?_vfpfcnvrt,c
  3673  001798  D026               	goto	l497
  3674  00179A                     l3662:
  3675  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3676                           
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3678  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3679  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3680  0017A4  2ADE               	incf	postinc2,f,c
  3681  0017A6  0E00               	movlw	0
  3682  0017A8  22DD               	addwfc	postdec2,f,c
  3683  0017AA  EFA2  F007         	goto	l3482
  3684  0017AE                     l3668:
  3685  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3686                           
  3687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3688  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3691  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3692  0017C0                     	if	0	;tblptru may be non-zero
  3693  0017C0                     	endif
  3694  0017C0                     	if	0	;tblptru may be non-zero
  3695  0017C0                     	endif
  3696  0017C0  0008               	tblrd		*
  3697  0017C2  FFFF               	dw	65535	; errata NOP
  3698  0017C4  50F5               	movf	tablat,w,c
  3699  0017C6  6E01               	movwf	fputc@c,c
  3700  0017C8  6A02               	clrf	fputc@c+1,c
  3701  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3702  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3703  0017D2  EC6E  F014         	call	_fputc	;wreg free
  3704                           
  3705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3706  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3707  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3708  0017DE  2ADE               	incf	postinc2,f,c
  3709  0017E0  0E00               	movlw	0
  3710  0017E2  22DD               	addwfc	postdec2,f,c
  3711  0017E4  D7D3               	goto	l3658
  3712  0017E6                     l497:
  3713  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3714  0017E8  0012               	return		;funcret
  3715  0017EA  FFFF               	dw	65535	; errata NOP
  3716  0017EC                     __end_of_vfpfcnvrt:
  3717                           	opt callstack 0
  3718                           
  3719 ;; *************** function _xtoa *****************
  3720 ;; Defined at:
  3721 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3724 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3725 ;;  d               8   29[COMRAM] unsigned long long 
  3726 ;;  x               1   37[COMRAM] unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  n               8   54[COMRAM] unsigned long long 
  3729 ;;  c               2   64[COMRAM] int 
  3730 ;;  i               2   62[COMRAM] int 
  3731 ;;  w               2   52[COMRAM] int 
  3732 ;;  p               2   50[COMRAM] int 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2   27[COMRAM] int 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3742 ;;      Params:        11       0       0       0       0       0       0
  3743 ;;      Locals:        20       0       0       0       0       0       0
  3744 ;;      Temps:          8       0       0       0       0       0       0
  3745 ;;      Totals:        39       0       0       0       0       0       0
  3746 ;;Total ram usage:       39 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    6
  3749 ;; This function calls:
  3750 ;;		_isalpha
  3751 ;;		_isupper
  3752 ;;		_pad
  3753 ;;		_toupper
  3754 ;; This function is called by:
  3755 ;;		_vfpfcnvrt
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text7
  3760  001A56                     __ptext7:
  3761                           	opt callstack 0
  3762  001A56                     _xtoa:
  3763                           	opt callstack 0
  3764  001A56  FFFF               	dw	65535	; assembler added errata NOP
  3765                           
  3766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3767                           
  3768                           ;incstack = 0
  3769  001A58  0100               	movlb	0	; () banked
  3770  001A5A  AF94               	btfss	(_prec+1)& (0+255),7,b
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3774  001A5C  9395               	bcf	_flags& (0+255),1,b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3778  001A5E  BF94               	btfsc	(_prec+1)& (0+255),7,b
  3779  001A60  D005               	goto	u2760
  3780  001A62  5194               	movf	(_prec+1)& (0+255),w,b
  3781  001A64  E109               	bnz	l435
  3782  001A66  0593               	decf	_prec& (0+255),w,b
  3783  001A68  B0D8               	btfsc	status,0,c
  3784  001A6A  D006               	goto	l435
  3785  001A6C                     u2760:
  3786  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  3787                           
  3788                           ; BSR set to: 0
  3789  001A6E  0E00               	movlw	0
  3790  001A70  6E34               	movwf	xtoa@p+1,c
  3791  001A72  0E01               	movlw	1
  3792  001A74  6E33               	movwf	xtoa@p,c
  3793  001A76  D005               	goto	l437
  3794  001A78                     l435:
  3795  001A78  FFFF               	dw	65535	; assembler added errata NOP
  3796                           
  3797                           ; BSR set to: 0
  3798  001A7A  C093  F033         	movff	_prec,xtoa@p
  3799  001A7E  C094  F034         	movff	_prec+1,xtoa@p+1
  3800  001A82                     l437:
  3801  001A82  FFFF               	dw	65535	; assembler added errata NOP
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3805  001A84  C091  F035         	movff	_width,xtoa@w
  3806  001A88  C092  F036         	movff	_width+1,xtoa@w+1
  3807                           
  3808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3809  001A8C  A995               	btfss	_flags& (0+255),4,b
  3810  001A8E  D004               	goto	l3182
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3814  001A90  0EFE               	movlw	254
  3815  001A92  2635               	addwf	xtoa@w,f,c
  3816  001A94  0EFF               	movlw	255
  3817  001A96  2236               	addwfc	xtoa@w+1,f,c
  3818  001A98                     l3182:
  3819  001A98  FFFF               	dw	65535	; assembler added errata NOP
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3823  001A9A  C01E  F037         	movff	xtoa@d,xtoa@n
  3824  001A9E  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3825  001AA2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3826  001AA6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3827  001AAA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3828  001AAE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3829  001AB2  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3830  001AB6  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3834  001ABA  0E00               	movlw	0
  3835  001ABC  6E40               	movwf	xtoa@i+1,c
  3836  001ABE  0E1F               	movlw	31
  3837  001AC0  6E3F               	movwf	xtoa@i,c
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3841  001AC2  0E00               	movlw	0
  3842  001AC4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  3843                           
  3844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3845  001AC6  D09D               	goto	l3218
  3846  001AC8                     l3188:
  3847  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  3848                           
  3849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3850  001ACA  063F               	decf	xtoa@i,f,c
  3851  001ACC  A0D8               	btfss	status,0,c
  3852  001ACE  0640               	decf	xtoa@i+1,f,c
  3853                           
  3854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3855  001AD0  0E0F               	movlw	15
  3856  001AD2  1437               	andwf	xtoa@n,w,c
  3857  001AD4  6E41               	movwf	xtoa@c,c
  3858  001AD6  6A42               	clrf	xtoa@c+1,c
  3859                           
  3860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3861  001AD8  BE42               	btfsc	xtoa@c+1,7,c
  3862  001ADA  D008               	goto	l3196
  3863  001ADC  5042               	movf	xtoa@c+1,w,c
  3864  001ADE  E104               	bnz	u2780
  3865  001AE0  0E0A               	movlw	10
  3866  001AE2  5C41               	subwf	xtoa@c,w,c
  3867  001AE4  A0D8               	btfss	status,0,c
  3868  001AE6  D002               	goto	l3196
  3869  001AE8                     u2780:
  3870  001AE8  0E57               	movlw	87
  3871  001AEA  D002               	goto	L19
  3872  001AEC                     l3196:
  3873  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  3874  001AEE  0E30               	movlw	48
  3875  001AF0                     L19:
  3876  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  3877  001AF2  2441               	addwf	xtoa@c,w,c
  3878  001AF4  6E41               	movwf	xtoa@c,c
  3879  001AF6  0E00               	movlw	0
  3880  001AF8  2042               	addwfc	xtoa@c+1,w,c
  3881  001AFA  6E42               	movwf	xtoa@c+1,c
  3882                           
  3883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3884  001AFC  0EBF               	movlw	191
  3885  001AFE  6E27               	movwf	??_xtoa& (0+255),c
  3886  001B00  0EFF               	movlw	255
  3887  001B02  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3888  001B04  5026               	movf	xtoa@x,w,c
  3889  001B06  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3890  001B08  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3891  001B0A  5027               	movf	??_xtoa,w,c
  3892  001B0C  2629               	addwf	??_xtoa+2,f,c
  3893  001B0E  5028               	movf	??_xtoa+1,w,c
  3894  001B10  222A               	addwfc	??_xtoa+3,f,c
  3895  001B12  502A               	movf	??_xtoa+3,w,c
  3896  001B14  E106               	bnz	u2790
  3897  001B16  0E1A               	movlw	26
  3898  001B18  5C29               	subwf	??_xtoa+2,w,c
  3899  001B1A  B0D8               	btfsc	status,0,c
  3900  001B1C  D002               	goto	u2790
  3901  001B1E  0E01               	movlw	1
  3902  001B20  D002               	goto	u2800
  3903  001B22                     u2790:
  3904  001B22  FFFF               	dw	65535	; assembler added errata NOP
  3905  001B24  0E00               	movlw	0
  3906  001B26                     u2800:
  3907  001B26  FFFF               	dw	65535	; assembler added errata NOP
  3908  001B28  6E2F               	movwf	_xtoa$1086,c
  3909  001B2A  6A30               	clrf	_xtoa$1086+1,c
  3910  001B2C  502F               	movf	_xtoa$1086,w,c
  3911  001B2E  1030               	iorwf	_xtoa$1086+1,w,c
  3912  001B30  B4D8               	btfsc	status,2,c
  3913  001B32  D029               	goto	l3210
  3914  001B34  0E9F               	movlw	159
  3915  001B36  6E27               	movwf	??_xtoa& (0+255),c
  3916  001B38  0EFF               	movlw	255
  3917  001B3A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3918  001B3C  0E20               	movlw	32
  3919  001B3E  1041               	iorwf	xtoa@c,w,c
  3920  001B40  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3921  001B42  0E00               	movlw	0
  3922  001B44  1042               	iorwf	xtoa@c+1,w,c
  3923  001B46  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3924  001B48  5027               	movf	??_xtoa,w,c
  3925  001B4A  2629               	addwf	??_xtoa+2,f,c
  3926  001B4C  5028               	movf	??_xtoa+1,w,c
  3927  001B4E  222A               	addwfc	??_xtoa+3,f,c
  3928  001B50  502A               	movf	??_xtoa+3,w,c
  3929  001B52  E106               	bnz	u2820
  3930  001B54  0E1A               	movlw	26
  3931  001B56  5C29               	subwf	??_xtoa+2,w,c
  3932  001B58  B0D8               	btfsc	status,0,c
  3933  001B5A  D002               	goto	u2820
  3934  001B5C  0E01               	movlw	1
  3935  001B5E  D002               	goto	u2830
  3936  001B60                     u2820:
  3937  001B60  FFFF               	dw	65535	; assembler added errata NOP
  3938  001B62  0E00               	movlw	0
  3939  001B64                     u2830:
  3940  001B64  FFFF               	dw	65535	; assembler added errata NOP
  3941  001B66  6E31               	movwf	_xtoa$1087,c
  3942  001B68  6A32               	clrf	_xtoa$1087+1,c
  3943  001B6A  5031               	movf	_xtoa$1087,w,c
  3944  001B6C  1032               	iorwf	_xtoa$1087+1,w,c
  3945  001B6E  B4D8               	btfsc	status,2,c
  3946  001B70  D00A               	goto	l3210
  3947                           
  3948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  3949  001B72  C041  F007         	movff	xtoa@c,toupper@c
  3950  001B76  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3951  001B7A  ECB9  F015         	call	_toupper	;wreg free
  3952  001B7E  C007  F041         	movff	?_toupper,xtoa@c
  3953  001B82  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3954  001B86                     l3210:
  3955  001B86  FFFF               	dw	65535	; assembler added errata NOP
  3956                           
  3957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  3958  001B88  0E9B               	movlw	low _dbuf
  3959  001B8A  243F               	addwf	xtoa@i,w,c
  3960  001B8C  6ED9               	movwf	fsr2l,c
  3961  001B8E  0E00               	movlw	high _dbuf
  3962  001B90  2040               	addwfc	xtoa@i+1,w,c
  3963  001B92  6EDA               	movwf	fsr2h,c
  3964  001B94  C041  FFDF         	movff	xtoa@c,indf2
  3965                           
  3966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3967  001B98  0633               	decf	xtoa@p,f,c
  3968  001B9A  A0D8               	btfss	status,0,c
  3969  001B9C  0634               	decf	xtoa@p+1,f,c
  3970                           
  3971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3972  001B9E  0635               	decf	xtoa@w,f,c
  3973  001BA0  A0D8               	btfss	status,0,c
  3974  001BA2  0636               	decf	xtoa@w+1,f,c
  3975                           
  3976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  3977  001BA4  C037  F027         	movff	xtoa@n,??_xtoa
  3978  001BA8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3979  001BAC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3980  001BB0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3981  001BB4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3982  001BB8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3983  001BBC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3984  001BC0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3985  001BC4  0E05               	movlw	5
  3986  001BC6  D00A               	goto	u2850
  3987  001BC8                     u2855:
  3988  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  3989  001BCA  90D8               	bcf	status,0,c
  3990  001BCC  322E               	rrcf	??_xtoa+7,f,c
  3991  001BCE  322D               	rrcf	??_xtoa+6,f,c
  3992  001BD0  322C               	rrcf	??_xtoa+5,f,c
  3993  001BD2  322B               	rrcf	??_xtoa+4,f,c
  3994  001BD4  322A               	rrcf	??_xtoa+3,f,c
  3995  001BD6  3229               	rrcf	??_xtoa+2,f,c
  3996  001BD8  3228               	rrcf	??_xtoa+1,f,c
  3997  001BDA  3227               	rrcf	??_xtoa,f,c
  3998  001BDC                     u2850:
  3999  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  4000  001BDE  2EE8               	decfsz	wreg,f,c
  4001  001BE0  D7F3               	goto	u2855
  4002  001BE2  C027  F037         	movff	??_xtoa,xtoa@n
  4003  001BE6  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4004  001BEA  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4005  001BEE  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4006  001BF2  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4007  001BF6  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4008  001BFA  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4009  001BFE  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4010  001C02                     l3218:
  4011  001C02  FFFF               	dw	65535	; assembler added errata NOP
  4012                           
  4013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4014  001C04  BE40               	btfsc	xtoa@i+1,7,c
  4015  001C06  D022               	goto	u2900
  4016  001C08  5040               	movf	xtoa@i+1,w,c
  4017  001C0A  E104               	bnz	u2860
  4018  001C0C  0E02               	movlw	2
  4019  001C0E  5C3F               	subwf	xtoa@i,w,c
  4020  001C10  A0D8               	btfss	status,0,c
  4021  001C12  D01C               	goto	u2900
  4022  001C14                     u2860:
  4023  001C14  5037               	movf	xtoa@n,w,c
  4024  001C16  1038               	iorwf	xtoa@n+1,w,c
  4025  001C18  1039               	iorwf	xtoa@n+2,w,c
  4026  001C1A  103A               	iorwf	xtoa@n+3,w,c
  4027  001C1C  103B               	iorwf	xtoa@n+4,w,c
  4028  001C1E  103C               	iorwf	xtoa@n+5,w,c
  4029  001C20  103D               	iorwf	xtoa@n+6,w,c
  4030  001C22  103E               	iorwf	xtoa@n+7,w,c
  4031  001C24  A4D8               	btfss	status,2,c
  4032  001C26  D750               	goto	l3188
  4033  001C28  BE34               	btfsc	xtoa@p+1,7,c
  4034  001C2A  D005               	goto	u2880
  4035  001C2C  5034               	movf	xtoa@p+1,w,c
  4036  001C2E  E102               	bnz	u2881
  4037  001C30  0433               	decf	xtoa@p,w,c
  4038  001C32  B0D8               	btfsc	status,0,c
  4039  001C34                     u2881:
  4040  001C34  D749               	goto	l3188
  4041  001C36                     u2880:
  4042  001C36  FFFF               	dw	65535	; assembler added errata NOP
  4043  001C38  BE36               	btfsc	xtoa@w+1,7,c
  4044  001C3A  D008               	goto	u2900
  4045  001C3C  5036               	movf	xtoa@w+1,w,c
  4046  001C3E  E103               	bnz	u2890
  4047  001C40  0435               	decf	xtoa@w,w,c
  4048  001C42  A0D8               	btfss	status,0,c
  4049  001C44  D003               	goto	u2900
  4050  001C46                     u2890:
  4051  001C46  0100               	movlb	0	; () banked
  4052  001C48  B395               	btfsc	_flags& (0+255),1,b
  4053  001C4A  D73E               	goto	l3188
  4054  001C4C                     u2900:
  4055  001C4C  FFFF               	dw	65535	; assembler added errata NOP
  4056                           
  4057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4058  001C4E  0100               	movlb	0	; () banked
  4059  001C50  A995               	btfss	_flags& (0+255),4,b
  4060  001C52  D016               	goto	l3234
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4064  001C54  063F               	decf	xtoa@i,f,c
  4065  001C56  A0D8               	btfss	status,0,c
  4066  001C58  0640               	decf	xtoa@i+1,f,c
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4070  001C5A  0E9B               	movlw	low _dbuf
  4071  001C5C  243F               	addwf	xtoa@i,w,c
  4072  001C5E  6ED9               	movwf	fsr2l,c
  4073  001C60  0E00               	movlw	high _dbuf
  4074  001C62  2040               	addwfc	xtoa@i+1,w,c
  4075  001C64  6EDA               	movwf	fsr2h,c
  4076  001C66  C026  FFDF         	movff	xtoa@x,indf2
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4080  001C6A  063F               	decf	xtoa@i,f,c
  4081  001C6C  A0D8               	btfss	status,0,c
  4082  001C6E  0640               	decf	xtoa@i+1,f,c
  4083                           
  4084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4085  001C70  0E9B               	movlw	low _dbuf
  4086  001C72  243F               	addwf	xtoa@i,w,c
  4087  001C74  6ED9               	movwf	fsr2l,c
  4088  001C76  0E00               	movlw	high _dbuf
  4089  001C78  2040               	addwfc	xtoa@i+1,w,c
  4090  001C7A  6EDA               	movwf	fsr2h,c
  4091  001C7C  0E30               	movlw	48
  4092  001C7E  6EDF               	movwf	indf2,c
  4093  001C80                     l3234:
  4094  001C80  FFFF               	dw	65535	; assembler added errata NOP
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4098  001C82  C01C  F011         	movff	xtoa@fp,pad@fp
  4099  001C86  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4100  001C8A  0E9B               	movlw	low _dbuf
  4101  001C8C  243F               	addwf	xtoa@i,w,c
  4102  001C8E  6E13               	movwf	pad@buf,c
  4103  001C90  0E00               	movlw	high _dbuf
  4104  001C92  2040               	addwfc	xtoa@i+1,w,c
  4105  001C94  6E14               	movwf	pad@buf+1,c
  4106  001C96  C035  F015         	movff	xtoa@w,pad@p
  4107  001C9A  C036  F016         	movff	xtoa@w+1,pad@p+1
  4108  001C9E  ECC4  F014         	call	_pad	;wreg free
  4109  001CA2  C011  F01C         	movff	?_pad,?_xtoa
  4110  001CA6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4111  001CAA  0012               	return		;funcret
  4112  001CAC  FFFF               	dw	65535	; errata NOP
  4113  001CAE                     __end_of_xtoa:
  4114                           	opt callstack 0
  4115                           
  4116 ;; *************** function _toupper *****************
  4117 ;; Defined at:
  4118 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  c               2    6[COMRAM] int 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  2    6[COMRAM] int 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4132 ;;      Params:         2       0       0       0       0       0       0
  4133 ;;      Locals:         2       0       0       0       0       0       0
  4134 ;;      Temps:          4       0       0       0       0       0       0
  4135 ;;      Totals:         8       0       0       0       0       0       0
  4136 ;;Total ram usage:        8 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    3
  4139 ;; This function calls:
  4140 ;;		_islower
  4141 ;; This function is called by:
  4142 ;;		_xtoa
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text8
  4147  002B72                     __ptext8:
  4148                           	opt callstack 0
  4149  002B72                     _toupper:
  4150                           	opt callstack 0
  4151  002B72  FFFF               	dw	65535	; assembler added errata NOP
  4152                           
  4153                           ;incstack = 0
  4154  002B74  0E9F               	movlw	159
  4155  002B76  6E09               	movwf	??_toupper& (0+255),c
  4156  002B78  0EFF               	movlw	255
  4157  002B7A  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4158  002B7C  C007  F00B         	movff	toupper@c,??_toupper+2
  4159  002B80  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4160  002B84  5009               	movf	??_toupper,w,c
  4161  002B86  260B               	addwf	??_toupper+2,f,c
  4162  002B88  500A               	movf	??_toupper+1,w,c
  4163  002B8A  220C               	addwfc	??_toupper+3,f,c
  4164  002B8C  500C               	movf	??_toupper+3,w,c
  4165  002B8E  E106               	bnz	u2060
  4166  002B90  0E1A               	movlw	26
  4167  002B92  5C0B               	subwf	??_toupper+2,w,c
  4168  002B94  B0D8               	btfsc	status,0,c
  4169  002B96  D002               	goto	u2060
  4170  002B98  0E01               	movlw	1
  4171  002B9A  D002               	goto	u2070
  4172  002B9C                     u2060:
  4173  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  4174  002B9E  0E00               	movlw	0
  4175  002BA0                     u2070:
  4176  002BA0  FFFF               	dw	65535	; assembler added errata NOP
  4177  002BA2  6E0D               	movwf	_toupper$1853,c
  4178  002BA4  6A0E               	clrf	_toupper$1853+1,c
  4179  002BA6  500D               	movf	_toupper$1853,w,c
  4180  002BA8  100E               	iorwf	_toupper$1853+1,w,c
  4181  002BAA  B4D8               	btfsc	status,2,c
  4182  002BAC  D005               	goto	l1370
  4183  002BAE  0E5F               	movlw	95
  4184  002BB0  1407               	andwf	toupper@c,w,c
  4185  002BB2  6E07               	movwf	?_toupper,c
  4186  002BB4  6A08               	clrf	?_toupper+1,c
  4187  002BB6  D005               	goto	l1375
  4188  002BB8                     l1370:
  4189  002BB8  FFFF               	dw	65535	; assembler added errata NOP
  4190  002BBA  C007  F007         	movff	toupper@c,?_toupper
  4191  002BBE  C008  F008         	movff	toupper@c+1,?_toupper+1
  4192  002BC2                     l1375:
  4193  002BC2  FFFF               	dw	65535	; assembler added errata NOP
  4194  002BC4  0012               	return		;funcret
  4195  002BC6  FFFF               	dw	65535	; errata NOP
  4196  002BC8                     __end_of_toupper:
  4197                           	opt callstack 0
  4198                           
  4199 ;; *************** function _islower *****************
  4200 ;; Defined at:
  4201 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  c               2    0[COMRAM] int 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2    0[COMRAM] int 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4215 ;;      Params:         2       0       0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0
  4217 ;;      Temps:          4       0       0       0       0       0       0
  4218 ;;      Totals:         6       0       0       0       0       0       0
  4219 ;;Total ram usage:        6 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_toupper
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text9
  4230  002DE4                     __ptext9:
  4231                           	opt callstack 0
  4232  002DE4                     _islower:
  4233                           	opt callstack 0
  4234  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  4235                           
  4236                           ;incstack = 0
  4237  002DE6  0E9F               	movlw	159
  4238  002DE8  6E03               	movwf	??_islower& (0+255),c
  4239  002DEA  0EFF               	movlw	255
  4240  002DEC  6E04               	movwf	(??_islower+1)& (0+255),c
  4241  002DEE  C001  F005         	movff	islower@c,??_islower+2
  4242  002DF2  C002  F006         	movff	islower@c+1,??_islower+3
  4243  002DF6  5003               	movf	??_islower,w,c
  4244  002DF8  2605               	addwf	??_islower+2,f,c
  4245  002DFA  5004               	movf	??_islower+1,w,c
  4246  002DFC  2206               	addwfc	??_islower+3,f,c
  4247  002DFE  5006               	movf	??_islower+3,w,c
  4248  002E00  E106               	bnz	u1950
  4249  002E02  0E1A               	movlw	26
  4250  002E04  5C05               	subwf	??_islower+2,w,c
  4251  002E06  B0D8               	btfsc	status,0,c
  4252  002E08  D002               	goto	u1950
  4253  002E0A  0E01               	movlw	1
  4254  002E0C  D002               	goto	u1960
  4255  002E0E                     u1950:
  4256  002E0E  FFFF               	dw	65535	; assembler added errata NOP
  4257  002E10  0E00               	movlw	0
  4258  002E12                     u1960:
  4259  002E12  FFFF               	dw	65535	; assembler added errata NOP
  4260  002E14  6E01               	movwf	?_islower,c
  4261  002E16  6A02               	clrf	?_islower+1,c
  4262  002E18  0012               	return		;funcret
  4263  002E1A  FFFF               	dw	65535	; errata NOP
  4264  002E1C                     __end_of_islower:
  4265                           	opt callstack 0
  4266                           
  4267 ;; *************** function _isupper *****************
  4268 ;; Defined at:
  4269 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  c               2    0[COMRAM] int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  2    0[COMRAM] int 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4283 ;;      Params:         2       0       0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0
  4285 ;;      Temps:          4       0       0       0       0       0       0
  4286 ;;      Totals:         6       0       0       0       0       0       0
  4287 ;;Total ram usage:        6 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_xtoa
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text10
  4298  002E1C                     __ptext10:
  4299                           	opt callstack 0
  4300  002E1C                     _isupper:
  4301                           	opt callstack 0
  4302  002E1C  FFFF               	dw	65535	; assembler added errata NOP
  4303                           
  4304                           ;incstack = 0
  4305  002E1E  0EBF               	movlw	191
  4306  002E20  6E03               	movwf	??_isupper& (0+255),c
  4307  002E22  0EFF               	movlw	255
  4308  002E24  6E04               	movwf	(??_isupper+1)& (0+255),c
  4309  002E26  C001  F005         	movff	isupper@c,??_isupper+2
  4310  002E2A  C002  F006         	movff	isupper@c+1,??_isupper+3
  4311  002E2E  5003               	movf	??_isupper,w,c
  4312  002E30  2605               	addwf	??_isupper+2,f,c
  4313  002E32  5004               	movf	??_isupper+1,w,c
  4314  002E34  2206               	addwfc	??_isupper+3,f,c
  4315  002E36  5006               	movf	??_isupper+3,w,c
  4316  002E38  E106               	bnz	u2020
  4317  002E3A  0E1A               	movlw	26
  4318  002E3C  5C05               	subwf	??_isupper+2,w,c
  4319  002E3E  B0D8               	btfsc	status,0,c
  4320  002E40  D002               	goto	u2020
  4321  002E42  0E01               	movlw	1
  4322  002E44  D002               	goto	u2030
  4323  002E46                     u2020:
  4324  002E46  FFFF               	dw	65535	; assembler added errata NOP
  4325  002E48  0E00               	movlw	0
  4326  002E4A                     u2030:
  4327  002E4A  FFFF               	dw	65535	; assembler added errata NOP
  4328  002E4C  6E01               	movwf	?_isupper,c
  4329  002E4E  6A02               	clrf	?_isupper+1,c
  4330  002E50  0012               	return		;funcret
  4331  002E52  FFFF               	dw	65535	; errata NOP
  4332  002E54                     __end_of_isupper:
  4333                           	opt callstack 0
  4334                           
  4335 ;; *************** function _isalpha *****************
  4336 ;; Defined at:
  4337 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  c               2    0[COMRAM] int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    0[COMRAM] int 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         2       0       0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0
  4353 ;;      Temps:          4       0       0       0       0       0       0
  4354 ;;      Totals:         6       0       0       0       0       0       0
  4355 ;;Total ram usage:        6 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    2
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_xtoa
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text11
  4366  002D6C                     __ptext11:
  4367                           	opt callstack 0
  4368  002D6C                     _isalpha:
  4369                           	opt callstack 0
  4370  002D6C  FFFF               	dw	65535	; assembler added errata NOP
  4371                           
  4372                           ;incstack = 0
  4373  002D6E  0E9F               	movlw	159
  4374  002D70  6E03               	movwf	??_isalpha& (0+255),c
  4375  002D72  0EFF               	movlw	255
  4376  002D74  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4377  002D76  0E20               	movlw	32
  4378  002D78  1001               	iorwf	isalpha@c,w,c
  4379  002D7A  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4380  002D7C  0E00               	movlw	0
  4381  002D7E  1002               	iorwf	isalpha@c+1,w,c
  4382  002D80  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4383  002D82  5003               	movf	??_isalpha,w,c
  4384  002D84  2605               	addwf	??_isalpha+2,f,c
  4385  002D86  5004               	movf	??_isalpha+1,w,c
  4386  002D88  2206               	addwfc	??_isalpha+3,f,c
  4387  002D8A  5006               	movf	??_isalpha+3,w,c
  4388  002D8C  E106               	bnz	u2040
  4389  002D8E  0E1A               	movlw	26
  4390  002D90  5C05               	subwf	??_isalpha+2,w,c
  4391  002D92  B0D8               	btfsc	status,0,c
  4392  002D94  D002               	goto	u2040
  4393  002D96  0E01               	movlw	1
  4394  002D98  D002               	goto	u2050
  4395  002D9A                     u2040:
  4396  002D9A  FFFF               	dw	65535	; assembler added errata NOP
  4397  002D9C  0E00               	movlw	0
  4398  002D9E                     u2050:
  4399  002D9E  FFFF               	dw	65535	; assembler added errata NOP
  4400  002DA0  6E01               	movwf	?_isalpha,c
  4401  002DA2  6A02               	clrf	?_isalpha+1,c
  4402  002DA4  0012               	return		;funcret
  4403  002DA6  FFFF               	dw	65535	; errata NOP
  4404  002DA8                     __end_of_isalpha:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _utoa *****************
  4408 ;; Defined at:
  4409 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4412 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4413 ;;  d               8   29[COMRAM] unsigned long long 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  n               8   49[COMRAM] unsigned long long 
  4416 ;;  i               2   57[COMRAM] int 
  4417 ;;  w               2   47[COMRAM] int 
  4418 ;;  p               2   45[COMRAM] int 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2   27[COMRAM] int 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:        10       0       0       0       0       0       0
  4429 ;;      Locals:        14       0       0       0       0       0       0
  4430 ;;      Temps:          8       0       0       0       0       0       0
  4431 ;;      Totals:        32       0       0       0       0       0       0
  4432 ;;Total ram usage:       32 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    6
  4435 ;; This function calls:
  4436 ;;		___lodiv
  4437 ;;		___lomod
  4438 ;;		_pad
  4439 ;; This function is called by:
  4440 ;;		_vfpfcnvrt
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text12
  4445  001CAE                     __ptext12:
  4446                           	opt callstack 0
  4447  001CAE                     _utoa:
  4448                           	opt callstack 0
  4449  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  4450                           
  4451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4452                           
  4453                           ;incstack = 0
  4454  001CB0  0100               	movlb	0	; () banked
  4455  001CB2  AF94               	btfss	(_prec+1)& (0+255),7,b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4459  001CB4  9395               	bcf	_flags& (0+255),1,b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4463  001CB6  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4464  001CB8  D005               	goto	u2690
  4465  001CBA  5194               	movf	(_prec+1)& (0+255),w,b
  4466  001CBC  E109               	bnz	l420
  4467  001CBE  0593               	decf	_prec& (0+255),w,b
  4468  001CC0  B0D8               	btfsc	status,0,c
  4469  001CC2  D006               	goto	l420
  4470  001CC4                     u2690:
  4471  001CC4  FFFF               	dw	65535	; assembler added errata NOP
  4472                           
  4473                           ; BSR set to: 0
  4474  001CC6  0E00               	movlw	0
  4475  001CC8  6E2F               	movwf	utoa@p+1,c
  4476  001CCA  0E01               	movlw	1
  4477  001CCC  6E2E               	movwf	utoa@p,c
  4478  001CCE  D005               	goto	l422
  4479  001CD0                     l420:
  4480  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  4481                           
  4482                           ; BSR set to: 0
  4483  001CD2  C093  F02E         	movff	_prec,utoa@p
  4484  001CD6  C094  F02F         	movff	_prec+1,utoa@p+1
  4485  001CDA                     l422:
  4486  001CDA  FFFF               	dw	65535	; assembler added errata NOP
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4490  001CDC  C091  F030         	movff	_width,utoa@w
  4491  001CE0  C092  F031         	movff	_width+1,utoa@w+1
  4492                           
  4493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4494  001CE4  C01E  F032         	movff	utoa@d,utoa@n
  4495  001CE8  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4496  001CEC  C020  F034         	movff	utoa@d+2,utoa@n+2
  4497  001CF0  C021  F035         	movff	utoa@d+3,utoa@n+3
  4498  001CF4  C022  F036         	movff	utoa@d+4,utoa@n+4
  4499  001CF8  C023  F037         	movff	utoa@d+5,utoa@n+5
  4500  001CFC  C024  F038         	movff	utoa@d+6,utoa@n+6
  4501  001D00  C025  F039         	movff	utoa@d+7,utoa@n+7
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4505  001D04  0E00               	movlw	0
  4506  001D06  6E3B               	movwf	utoa@i+1,c
  4507  001D08  0E1F               	movlw	31
  4508  001D0A  6E3A               	movwf	utoa@i,c
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4512  001D0C  0E00               	movlw	0
  4513  001D0E  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4514                           
  4515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4516  001D10  D077               	goto	l3158
  4517  001D12                     l3148:
  4518  001D12  FFFF               	dw	65535	; assembler added errata NOP
  4519                           
  4520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4521  001D14  063A               	decf	utoa@i,f,c
  4522  001D16  A0D8               	btfss	status,0,c
  4523  001D18  063B               	decf	utoa@i+1,f,c
  4524                           
  4525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4526  001D1A  0E9B               	movlw	low _dbuf
  4527  001D1C  243A               	addwf	utoa@i,w,c
  4528  001D1E  6ED9               	movwf	fsr2l,c
  4529  001D20  0E00               	movlw	high _dbuf
  4530  001D22  203B               	addwfc	utoa@i+1,w,c
  4531  001D24  6EDA               	movwf	fsr2h,c
  4532  001D26  C032  F001         	movff	utoa@n,___lomod@dividend
  4533  001D2A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4534  001D2E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4535  001D32  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4536  001D36  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4537  001D3A  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4538  001D3E  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4539  001D42  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4540  001D46  0E0A               	movlw	10
  4541  001D48  6E09               	movwf	___lomod@divisor,c
  4542  001D4A  0E00               	movlw	0
  4543  001D4C  6E0A               	movwf	___lomod@divisor+1,c
  4544  001D4E  0E00               	movlw	0
  4545  001D50  6E0B               	movwf	___lomod@divisor+2,c
  4546  001D52  0E00               	movlw	0
  4547  001D54  6E0C               	movwf	___lomod@divisor+3,c
  4548  001D56  0E00               	movlw	0
  4549  001D58  6E0D               	movwf	___lomod@divisor+4,c
  4550  001D5A  0E00               	movlw	0
  4551  001D5C  6E0E               	movwf	___lomod@divisor+5,c
  4552  001D5E  0E00               	movlw	0
  4553  001D60  6E0F               	movwf	___lomod@divisor+6,c
  4554  001D62  0E00               	movlw	0
  4555  001D64  6E10               	movwf	___lomod@divisor+7,c
  4556  001D66  EC10  F014         	call	___lomod	;wreg free
  4557  001D6A  C001  F026         	movff	?___lomod,??_utoa
  4558  001D6E  C002  F027         	movff	?___lomod+1,??_utoa+1
  4559  001D72  C003  F028         	movff	?___lomod+2,??_utoa+2
  4560  001D76  C004  F029         	movff	?___lomod+3,??_utoa+3
  4561  001D7A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4562  001D7E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4563  001D82  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4564  001D86  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4565  001D8A  5026               	movf	??_utoa,w,c
  4566  001D8C  0F30               	addlw	48
  4567  001D8E  6EDF               	movwf	indf2,c
  4568                           
  4569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4570  001D90  062E               	decf	utoa@p,f,c
  4571  001D92  A0D8               	btfss	status,0,c
  4572  001D94  062F               	decf	utoa@p+1,f,c
  4573                           
  4574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4575  001D96  0630               	decf	utoa@w,f,c
  4576  001D98  A0D8               	btfss	status,0,c
  4577  001D9A  0631               	decf	utoa@w+1,f,c
  4578                           
  4579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4580  001D9C  C032  F001         	movff	utoa@n,___lodiv@dividend
  4581  001DA0  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4582  001DA4  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4583  001DA8  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4584  001DAC  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4585  001DB0  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4586  001DB4  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4587  001DB8  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4588  001DBC  0E0A               	movlw	10
  4589  001DBE  6E09               	movwf	___lodiv@divisor,c
  4590  001DC0  0E00               	movlw	0
  4591  001DC2  6E0A               	movwf	___lodiv@divisor+1,c
  4592  001DC4  0E00               	movlw	0
  4593  001DC6  6E0B               	movwf	___lodiv@divisor+2,c
  4594  001DC8  0E00               	movlw	0
  4595  001DCA  6E0C               	movwf	___lodiv@divisor+3,c
  4596  001DCC  0E00               	movlw	0
  4597  001DCE  6E0D               	movwf	___lodiv@divisor+4,c
  4598  001DD0  0E00               	movlw	0
  4599  001DD2  6E0E               	movwf	___lodiv@divisor+5,c
  4600  001DD4  0E00               	movlw	0
  4601  001DD6  6E0F               	movwf	___lodiv@divisor+6,c
  4602  001DD8  0E00               	movlw	0
  4603  001DDA  6E10               	movwf	___lodiv@divisor+7,c
  4604  001DDC  EC41  F013         	call	___lodiv	;wreg free
  4605  001DE0  C001  F032         	movff	?___lodiv,utoa@n
  4606  001DE4  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4607  001DE8  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4608  001DEC  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4609  001DF0  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4610  001DF4  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4611  001DF8  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4612  001DFC  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4613  001E00                     l3158:
  4614  001E00  FFFF               	dw	65535	; assembler added errata NOP
  4615                           
  4616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4617  001E02  503A               	movf	utoa@i,w,c
  4618  001E04  103B               	iorwf	utoa@i+1,w,c
  4619  001E06  B4D8               	btfsc	status,2,c
  4620  001E08  D01C               	goto	u2740
  4621  001E0A  5032               	movf	utoa@n,w,c
  4622  001E0C  1033               	iorwf	utoa@n+1,w,c
  4623  001E0E  1034               	iorwf	utoa@n+2,w,c
  4624  001E10  1035               	iorwf	utoa@n+3,w,c
  4625  001E12  1036               	iorwf	utoa@n+4,w,c
  4626  001E14  1037               	iorwf	utoa@n+5,w,c
  4627  001E16  1038               	iorwf	utoa@n+6,w,c
  4628  001E18  1039               	iorwf	utoa@n+7,w,c
  4629  001E1A  A4D8               	btfss	status,2,c
  4630  001E1C  D77A               	goto	l3148
  4631  001E1E  BE2F               	btfsc	utoa@p+1,7,c
  4632  001E20  D005               	goto	u2720
  4633  001E22  502F               	movf	utoa@p+1,w,c
  4634  001E24  E102               	bnz	u2721
  4635  001E26  042E               	decf	utoa@p,w,c
  4636  001E28  B0D8               	btfsc	status,0,c
  4637  001E2A                     u2721:
  4638  001E2A  D773               	goto	l3148
  4639  001E2C                     u2720:
  4640  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  4641  001E2E  BE31               	btfsc	utoa@w+1,7,c
  4642  001E30  D008               	goto	u2740
  4643  001E32  5031               	movf	utoa@w+1,w,c
  4644  001E34  E103               	bnz	u2730
  4645  001E36  0430               	decf	utoa@w,w,c
  4646  001E38  A0D8               	btfss	status,0,c
  4647  001E3A  D003               	goto	u2740
  4648  001E3C                     u2730:
  4649  001E3C  0100               	movlb	0	; () banked
  4650  001E3E  B395               	btfsc	_flags& (0+255),1,b
  4651  001E40  D768               	goto	l3148
  4652  001E42                     u2740:
  4653  001E42  FFFF               	dw	65535	; assembler added errata NOP
  4654                           
  4655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4656  001E44  C01C  F011         	movff	utoa@fp,pad@fp
  4657  001E48  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4658  001E4C  0E9B               	movlw	low _dbuf
  4659  001E4E  243A               	addwf	utoa@i,w,c
  4660  001E50  6E13               	movwf	pad@buf,c
  4661  001E52  0E00               	movlw	high _dbuf
  4662  001E54  203B               	addwfc	utoa@i+1,w,c
  4663  001E56  6E14               	movwf	pad@buf+1,c
  4664  001E58  C030  F015         	movff	utoa@w,pad@p
  4665  001E5C  C031  F016         	movff	utoa@w+1,pad@p+1
  4666  001E60  ECC4  F014         	call	_pad	;wreg free
  4667  001E64  C011  F01C         	movff	?_pad,?_utoa
  4668  001E68  C012  F01D         	movff	?_pad+1,?_utoa+1
  4669  001E6C  0012               	return		;funcret
  4670  001E6E  FFFF               	dw	65535	; errata NOP
  4671  001E70                     __end_of_utoa:
  4672                           	opt callstack 0
  4673                           
  4674 ;; *************** function ___lomod *****************
  4675 ;; Defined at:
  4676 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  dividend        8    0[COMRAM] unsigned long long 
  4679 ;;  divisor         8    8[COMRAM] unsigned long long 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  counter         1   16[COMRAM] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  8    0[COMRAM] unsigned long long 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4691 ;;      Params:        16       0       0       0       0       0       0
  4692 ;;      Locals:         1       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0
  4694 ;;      Totals:        17       0       0       0       0       0       0
  4695 ;;Total ram usage:       17 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    2
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_utoa
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text13
  4706  002820                     __ptext13:
  4707                           	opt callstack 0
  4708  002820                     ___lomod:
  4709                           	opt callstack 0
  4710  002820  FFFF               	dw	65535	; assembler added errata NOP
  4711                           
  4712                           ;incstack = 0
  4713  002822  5009               	movf	___lomod@divisor,w,c
  4714  002824  100A               	iorwf	___lomod@divisor+1,w,c
  4715  002826  100B               	iorwf	___lomod@divisor+2,w,c
  4716  002828  100C               	iorwf	___lomod@divisor+3,w,c
  4717  00282A  100D               	iorwf	___lomod@divisor+4,w,c
  4718  00282C  100E               	iorwf	___lomod@divisor+5,w,c
  4719  00282E  100F               	iorwf	___lomod@divisor+6,w,c
  4720  002830  1010               	iorwf	___lomod@divisor+7,w,c
  4721  002832  B4D8               	btfsc	status,2,c
  4722  002834  D040               	goto	l1002
  4723  002836  0E01               	movlw	1
  4724  002838  6E11               	movwf	___lomod@counter,c
  4725  00283A  D00B               	goto	l2948
  4726  00283C                     l2946:
  4727  00283C  FFFF               	dw	65535	; assembler added errata NOP
  4728  00283E  90D8               	bcf	status,0,c
  4729  002840  3609               	rlcf	___lomod@divisor,f,c
  4730  002842  360A               	rlcf	___lomod@divisor+1,f,c
  4731  002844  360B               	rlcf	___lomod@divisor+2,f,c
  4732  002846  360C               	rlcf	___lomod@divisor+3,f,c
  4733  002848  360D               	rlcf	___lomod@divisor+4,f,c
  4734  00284A  360E               	rlcf	___lomod@divisor+5,f,c
  4735  00284C  360F               	rlcf	___lomod@divisor+6,f,c
  4736  00284E  3610               	rlcf	___lomod@divisor+7,f,c
  4737  002850  2A11               	incf	___lomod@counter,f,c
  4738  002852                     l2948:
  4739  002852  FFFF               	dw	65535	; assembler added errata NOP
  4740  002854  AE10               	btfss	___lomod@divisor+7,7,c
  4741  002856  D7F2               	goto	l2946
  4742  002858                     u2290:
  4743  002858  FFFF               	dw	65535	; assembler added errata NOP
  4744  00285A  5009               	movf	___lomod@divisor,w,c
  4745  00285C  5C01               	subwf	___lomod@dividend,w,c
  4746  00285E  500A               	movf	___lomod@divisor+1,w,c
  4747  002860  5802               	subwfb	___lomod@dividend+1,w,c
  4748  002862  500B               	movf	___lomod@divisor+2,w,c
  4749  002864  5803               	subwfb	___lomod@dividend+2,w,c
  4750  002866  500C               	movf	___lomod@divisor+3,w,c
  4751  002868  5804               	subwfb	___lomod@dividend+3,w,c
  4752  00286A  500D               	movf	___lomod@divisor+4,w,c
  4753  00286C  5805               	subwfb	___lomod@dividend+4,w,c
  4754  00286E  500E               	movf	___lomod@divisor+5,w,c
  4755  002870  5806               	subwfb	___lomod@dividend+5,w,c
  4756  002872  500F               	movf	___lomod@divisor+6,w,c
  4757  002874  5807               	subwfb	___lomod@dividend+6,w,c
  4758  002876  5010               	movf	___lomod@divisor+7,w,c
  4759  002878  5808               	subwfb	___lomod@dividend+7,w,c
  4760  00287A  A0D8               	btfss	status,0,c
  4761  00287C  D010               	goto	l2954
  4762  00287E  5009               	movf	___lomod@divisor,w,c
  4763  002880  5E01               	subwf	___lomod@dividend,f,c
  4764  002882  500A               	movf	___lomod@divisor+1,w,c
  4765  002884  5A02               	subwfb	___lomod@dividend+1,f,c
  4766  002886  500B               	movf	___lomod@divisor+2,w,c
  4767  002888  5A03               	subwfb	___lomod@dividend+2,f,c
  4768  00288A  500C               	movf	___lomod@divisor+3,w,c
  4769  00288C  5A04               	subwfb	___lomod@dividend+3,f,c
  4770  00288E  500D               	movf	___lomod@divisor+4,w,c
  4771  002890  5A05               	subwfb	___lomod@dividend+4,f,c
  4772  002892  500E               	movf	___lomod@divisor+5,w,c
  4773  002894  5A06               	subwfb	___lomod@dividend+5,f,c
  4774  002896  500F               	movf	___lomod@divisor+6,w,c
  4775  002898  5A07               	subwfb	___lomod@dividend+6,f,c
  4776  00289A  5010               	movf	___lomod@divisor+7,w,c
  4777  00289C  5A08               	subwfb	___lomod@dividend+7,f,c
  4778  00289E                     l2954:
  4779  00289E  FFFF               	dw	65535	; assembler added errata NOP
  4780  0028A0  90D8               	bcf	status,0,c
  4781  0028A2  3210               	rrcf	___lomod@divisor+7,f,c
  4782  0028A4  320F               	rrcf	___lomod@divisor+6,f,c
  4783  0028A6  320E               	rrcf	___lomod@divisor+5,f,c
  4784  0028A8  320D               	rrcf	___lomod@divisor+4,f,c
  4785  0028AA  320C               	rrcf	___lomod@divisor+3,f,c
  4786  0028AC  320B               	rrcf	___lomod@divisor+2,f,c
  4787  0028AE  320A               	rrcf	___lomod@divisor+1,f,c
  4788  0028B0  3209               	rrcf	___lomod@divisor,f,c
  4789  0028B2  2E11               	decfsz	___lomod@counter,f,c
  4790  0028B4  D7D1               	goto	u2290
  4791  0028B6                     l1002:
  4792  0028B6  FFFF               	dw	65535	; assembler added errata NOP
  4793  0028B8  C001  F001         	movff	___lomod@dividend,?___lomod
  4794  0028BC  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4795  0028C0  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4796  0028C4  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4797  0028C8  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4798  0028CC  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4799  0028D0  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4800  0028D4  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4801  0028D8  0012               	return		;funcret
  4802  0028DA  FFFF               	dw	65535	; errata NOP
  4803  0028DC                     __end_of___lomod:
  4804                           	opt callstack 0
  4805                           
  4806 ;; *************** function ___lodiv *****************
  4807 ;; Defined at:
  4808 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  dividend        8    0[COMRAM] unsigned long long 
  4811 ;;  divisor         8    8[COMRAM] unsigned long long 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  quotient        8   16[COMRAM] unsigned long long 
  4814 ;;  counter         1   24[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  8    0[COMRAM] unsigned long long 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4824 ;;      Params:        16       0       0       0       0       0       0
  4825 ;;      Locals:         9       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0
  4827 ;;      Totals:        25       0       0       0       0       0       0
  4828 ;;Total ram usage:       25 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    2
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_utoa
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text14
  4839  002682                     __ptext14:
  4840                           	opt callstack 0
  4841  002682                     ___lodiv:
  4842                           	opt callstack 0
  4843  002682  FFFF               	dw	65535	; assembler added errata NOP
  4844                           
  4845                           ;incstack = 0
  4846  002684  EE20  F011         	lfsr	2,___lodiv@quotient
  4847  002688  0E07               	movlw	7
  4848  00268A                     u2241:
  4849  00268A  6ADE               	clrf	postinc2,c
  4850  00268C  06E8               	decf	wreg,f,c
  4851  00268E  E2FD               	bc	u2241
  4852  002690  5009               	movf	___lodiv@divisor,w,c
  4853  002692  100A               	iorwf	___lodiv@divisor+1,w,c
  4854  002694  100B               	iorwf	___lodiv@divisor+2,w,c
  4855  002696  100C               	iorwf	___lodiv@divisor+3,w,c
  4856  002698  100D               	iorwf	___lodiv@divisor+4,w,c
  4857  00269A  100E               	iorwf	___lodiv@divisor+5,w,c
  4858  00269C  100F               	iorwf	___lodiv@divisor+6,w,c
  4859  00269E  1010               	iorwf	___lodiv@divisor+7,w,c
  4860  0026A0  B4D8               	btfsc	status,2,c
  4861  0026A2  D04A               	goto	l992
  4862  0026A4  0E01               	movlw	1
  4863  0026A6  6E19               	movwf	___lodiv@counter,c
  4864  0026A8  D00B               	goto	l2928
  4865  0026AA                     l2926:
  4866  0026AA  FFFF               	dw	65535	; assembler added errata NOP
  4867  0026AC  90D8               	bcf	status,0,c
  4868  0026AE  3609               	rlcf	___lodiv@divisor,f,c
  4869  0026B0  360A               	rlcf	___lodiv@divisor+1,f,c
  4870  0026B2  360B               	rlcf	___lodiv@divisor+2,f,c
  4871  0026B4  360C               	rlcf	___lodiv@divisor+3,f,c
  4872  0026B6  360D               	rlcf	___lodiv@divisor+4,f,c
  4873  0026B8  360E               	rlcf	___lodiv@divisor+5,f,c
  4874  0026BA  360F               	rlcf	___lodiv@divisor+6,f,c
  4875  0026BC  3610               	rlcf	___lodiv@divisor+7,f,c
  4876  0026BE  2A19               	incf	___lodiv@counter,f,c
  4877  0026C0                     l2928:
  4878  0026C0  FFFF               	dw	65535	; assembler added errata NOP
  4879  0026C2  AE10               	btfss	___lodiv@divisor+7,7,c
  4880  0026C4  D7F2               	goto	l2926
  4881  0026C6                     u2260:
  4882  0026C6  FFFF               	dw	65535	; assembler added errata NOP
  4883  0026C8  90D8               	bcf	status,0,c
  4884  0026CA  3611               	rlcf	___lodiv@quotient,f,c
  4885  0026CC  3612               	rlcf	___lodiv@quotient+1,f,c
  4886  0026CE  3613               	rlcf	___lodiv@quotient+2,f,c
  4887  0026D0  3614               	rlcf	___lodiv@quotient+3,f,c
  4888  0026D2  3615               	rlcf	___lodiv@quotient+4,f,c
  4889  0026D4  3616               	rlcf	___lodiv@quotient+5,f,c
  4890  0026D6  3617               	rlcf	___lodiv@quotient+6,f,c
  4891  0026D8  3618               	rlcf	___lodiv@quotient+7,f,c
  4892  0026DA  5009               	movf	___lodiv@divisor,w,c
  4893  0026DC  5C01               	subwf	___lodiv@dividend,w,c
  4894  0026DE  500A               	movf	___lodiv@divisor+1,w,c
  4895  0026E0  5802               	subwfb	___lodiv@dividend+1,w,c
  4896  0026E2  500B               	movf	___lodiv@divisor+2,w,c
  4897  0026E4  5803               	subwfb	___lodiv@dividend+2,w,c
  4898  0026E6  500C               	movf	___lodiv@divisor+3,w,c
  4899  0026E8  5804               	subwfb	___lodiv@dividend+3,w,c
  4900  0026EA  500D               	movf	___lodiv@divisor+4,w,c
  4901  0026EC  5805               	subwfb	___lodiv@dividend+4,w,c
  4902  0026EE  500E               	movf	___lodiv@divisor+5,w,c
  4903  0026F0  5806               	subwfb	___lodiv@dividend+5,w,c
  4904  0026F2  500F               	movf	___lodiv@divisor+6,w,c
  4905  0026F4  5807               	subwfb	___lodiv@dividend+6,w,c
  4906  0026F6  5010               	movf	___lodiv@divisor+7,w,c
  4907  0026F8  5808               	subwfb	___lodiv@dividend+7,w,c
  4908  0026FA  A0D8               	btfss	status,0,c
  4909  0026FC  D011               	goto	l2938
  4910  0026FE  5009               	movf	___lodiv@divisor,w,c
  4911  002700  5E01               	subwf	___lodiv@dividend,f,c
  4912  002702  500A               	movf	___lodiv@divisor+1,w,c
  4913  002704  5A02               	subwfb	___lodiv@dividend+1,f,c
  4914  002706  500B               	movf	___lodiv@divisor+2,w,c
  4915  002708  5A03               	subwfb	___lodiv@dividend+2,f,c
  4916  00270A  500C               	movf	___lodiv@divisor+3,w,c
  4917  00270C  5A04               	subwfb	___lodiv@dividend+3,f,c
  4918  00270E  500D               	movf	___lodiv@divisor+4,w,c
  4919  002710  5A05               	subwfb	___lodiv@dividend+4,f,c
  4920  002712  500E               	movf	___lodiv@divisor+5,w,c
  4921  002714  5A06               	subwfb	___lodiv@dividend+5,f,c
  4922  002716  500F               	movf	___lodiv@divisor+6,w,c
  4923  002718  5A07               	subwfb	___lodiv@dividend+6,f,c
  4924  00271A  5010               	movf	___lodiv@divisor+7,w,c
  4925  00271C  5A08               	subwfb	___lodiv@dividend+7,f,c
  4926  00271E  8011               	bsf	___lodiv@quotient,0,c
  4927  002720                     l2938:
  4928  002720  FFFF               	dw	65535	; assembler added errata NOP
  4929  002722  90D8               	bcf	status,0,c
  4930  002724  3210               	rrcf	___lodiv@divisor+7,f,c
  4931  002726  320F               	rrcf	___lodiv@divisor+6,f,c
  4932  002728  320E               	rrcf	___lodiv@divisor+5,f,c
  4933  00272A  320D               	rrcf	___lodiv@divisor+4,f,c
  4934  00272C  320C               	rrcf	___lodiv@divisor+3,f,c
  4935  00272E  320B               	rrcf	___lodiv@divisor+2,f,c
  4936  002730  320A               	rrcf	___lodiv@divisor+1,f,c
  4937  002732  3209               	rrcf	___lodiv@divisor,f,c
  4938  002734  2E19               	decfsz	___lodiv@counter,f,c
  4939  002736  D7C7               	goto	u2260
  4940  002738                     l992:
  4941  002738  FFFF               	dw	65535	; assembler added errata NOP
  4942  00273A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4943  00273E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4944  002742  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4945  002746  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4946  00274A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4947  00274E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4948  002752  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4949  002756  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4950  00275A  0012               	return		;funcret
  4951  00275C  FFFF               	dw	65535	; errata NOP
  4952  00275E                     __end_of___lodiv:
  4953                           	opt callstack 0
  4954                           
  4955 ;; *************** function _strncmp *****************
  4956 ;; Defined at:
  4957 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4960 ;;		 -> STR_2(3), STR_1(4), 
  4961 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4962 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4963 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4964 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4965 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4966 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4967 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4968 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4969 ;;  n               2    4[COMRAM] unsigned int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4972 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4973 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4974 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4975 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4976 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4977 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4978 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4979 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4980 ;;		 -> STR_2(3), STR_1(4), 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2    0[COMRAM] int 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4990 ;;      Params:         6       0       0       0       0       0       0
  4991 ;;      Locals:         4       0       0       0       0       0       0
  4992 ;;      Temps:          1       0       0       0       0       0       0
  4993 ;;      Totals:        11       0       0       0       0       0       0
  4994 ;;Total ram usage:       11 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    2
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_vfpfcnvrt
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text15
  5005  00275E                     __ptext15:
  5006                           	opt callstack 0
  5007  00275E                     _strncmp:
  5008                           	opt callstack 0
  5009  00275E  FFFF               	dw	65535	; assembler added errata NOP
  5010                           
  5011                           ;incstack = 0
  5012  002760  C001  F008         	movff	strncmp@_l,strncmp@l
  5013  002764  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5014  002768  C003  F00A         	movff	strncmp@_r,strncmp@r
  5015  00276C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5016  002770  0605               	decf	strncmp@n,f,c
  5017  002772  A0D8               	btfss	status,0,c
  5018  002774  0606               	decf	strncmp@n+1,f,c
  5019  002776  2805               	incf	strncmp@n,w,c
  5020  002778  E110               	bnz	l3288
  5021  00277A  2806               	incf	strncmp@n+1,w,c
  5022  00277C  A4D8               	btfss	status,2,c
  5023  00277E  D00D               	goto	l3288
  5024  002780  0E00               	movlw	0
  5025  002782  6E02               	movwf	?_strncmp+1,c
  5026  002784  0E00               	movlw	0
  5027  002786  6E01               	movwf	?_strncmp,c
  5028  002788  D048               	goto	l1360
  5029  00278A                     l3286:
  5030  00278A  FFFF               	dw	65535	; assembler added errata NOP
  5031  00278C  4A08               	infsnz	strncmp@l,f,c
  5032  00278E  2A09               	incf	strncmp@l+1,f,c
  5033  002790  4A0A               	infsnz	strncmp@r,f,c
  5034  002792  2A0B               	incf	strncmp@r+1,f,c
  5035  002794  0605               	decf	strncmp@n,f,c
  5036  002796  A0D8               	btfss	status,0,c
  5037  002798  0606               	decf	strncmp@n+1,f,c
  5038  00279A                     l3288:
  5039  00279A  FFFF               	dw	65535	; assembler added errata NOP
  5040  00279C  C008  FFF6         	movff	strncmp@l,tblptrl
  5041  0027A0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5042  0027A4                     	if	0	;tblptru may be non-zero
  5043  0027A4                     	endif
  5044  0027A4                     	if	0	;tblptru may be non-zero
  5045  0027A4                     	endif
  5046  0027A4  0008               	tblrd		*
  5047  0027A6  FFFF               	dw	65535	; errata NOP
  5048  0027A8  50F5               	movf	tablat,w,c
  5049  0027AA  0900               	iorlw	0
  5050  0027AC  B4D8               	btfsc	status,2,c
  5051  0027AE  D020               	goto	u3030
  5052  0027B0  C00A  FFF6         	movff	strncmp@r,tblptrl
  5053  0027B4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5054  0027B8                     	if	0	;tblptru may be non-zero
  5055  0027B8                     	endif
  5056  0027B8                     	if	0	;tblptru may be non-zero
  5057  0027B8                     	endif
  5058  0027B8  0008               	tblrd		*
  5059  0027BA  FFFF               	dw	65535	; errata NOP
  5060  0027BC  50F5               	movf	tablat,w,c
  5061  0027BE  0900               	iorlw	0
  5062  0027C0  B4D8               	btfsc	status,2,c
  5063  0027C2  D016               	goto	u3030
  5064  0027C4  5005               	movf	strncmp@n,w,c
  5065  0027C6  1006               	iorwf	strncmp@n+1,w,c
  5066  0027C8  B4D8               	btfsc	status,2,c
  5067  0027CA  D012               	goto	u3030
  5068  0027CC  C008  FFF6         	movff	strncmp@l,tblptrl
  5069  0027D0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5070  0027D4                     	if	0	;tblptru may be non-zero
  5071  0027D4                     	endif
  5072  0027D4                     	if	0	;tblptru may be non-zero
  5073  0027D4                     	endif
  5074  0027D4  0008               	tblrd		*
  5075  0027D6  FFFF               	dw	65535	; errata NOP
  5076  0027D8  CFF5 F007          	movff	tablat,??_strncmp
  5077  0027DC  C00A  FFF6         	movff	strncmp@r,tblptrl
  5078  0027E0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5079  0027E4                     	if	0	;tblptru may be non-zero
  5080  0027E4                     	endif
  5081  0027E4                     	if	0	;tblptru may be non-zero
  5082  0027E4                     	endif
  5083  0027E4  0008               	tblrd		*
  5084  0027E6  FFFF               	dw	65535	; errata NOP
  5085  0027E8  50F5               	movf	tablat,w,c
  5086  0027EA  1807               	xorwf	??_strncmp,w,c
  5087  0027EC  B4D8               	btfsc	status,2,c
  5088  0027EE  D7CD               	goto	l3286
  5089  0027F0                     u3030:
  5090  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  5091  0027F2  C008  FFF6         	movff	strncmp@l,tblptrl
  5092  0027F6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5093  0027FA                     	if	0	;tblptru may be non-zero
  5094  0027FA                     	endif
  5095  0027FA                     	if	0	;tblptru may be non-zero
  5096  0027FA                     	endif
  5097  0027FA  0008               	tblrd		*
  5098  0027FC  FFFF               	dw	65535	; errata NOP
  5099  0027FE  CFF5 F007          	movff	tablat,??_strncmp
  5100  002802  C00A  FFF6         	movff	strncmp@r,tblptrl
  5101  002806  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5102  00280A                     	if	0	;tblptru may be non-zero
  5103  00280A                     	endif
  5104  00280A                     	if	0	;tblptru may be non-zero
  5105  00280A                     	endif
  5106  00280A  0008               	tblrd		*
  5107  00280C  FFFF               	dw	65535	; errata NOP
  5108  00280E  50F5               	movf	tablat,w,c
  5109  002810  5C07               	subwf	??_strncmp,w,c
  5110  002812  6E01               	movwf	?_strncmp,c
  5111  002814  6A02               	clrf	?_strncmp+1,c
  5112  002816  A0D8               	btfss	status,0,c
  5113  002818  0602               	decf	?_strncmp+1,f,c
  5114  00281A                     l1360:
  5115  00281A  FFFF               	dw	65535	; assembler added errata NOP
  5116  00281C  0012               	return		;funcret
  5117  00281E  FFFF               	dw	65535	; errata NOP
  5118  002820                     __end_of_strncmp:
  5119                           	opt callstack 0
  5120                           
  5121 ;; *************** function _stoa *****************
  5122 ;; Defined at:
  5123 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5126 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5127 ;;  s               2   11[COMRAM] PTR unsigned char 
  5128 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5131 ;;  l               2   29[COMRAM] int 
  5132 ;;  p               2   27[COMRAM] int 
  5133 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5134 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5135 ;;  w               2   23[COMRAM] int 
  5136 ;;  i               2   21[COMRAM] int 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  2    9[COMRAM] int 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5146 ;;      Params:         4       0       0       0       0       0       0
  5147 ;;      Locals:        17       0       0       0       0       0       0
  5148 ;;      Temps:          1       0       0       0       0       0       0
  5149 ;;      Totals:        22       0       0       0       0       0       0
  5150 ;;Total ram usage:       22 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    4
  5153 ;; This function calls:
  5154 ;;		_fputc
  5155 ;;		_strlen
  5156 ;; This function is called by:
  5157 ;;		_vfpfcnvrt
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text16
  5162  0022CC                     __ptext16:
  5163                           	opt callstack 0
  5164  0022CC                     _stoa:
  5165                           	opt callstack 0
  5166  0022CC  FFFF               	dw	65535	; assembler added errata NOP
  5167                           
  5168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5169                           
  5170                           ;incstack = 0
  5171  0022CE  EE20  F0E1         	lfsr	2,stoa@F1152
  5172  0022D2  EE10  F00F         	lfsr	1,stoa@nuls
  5173  0022D6  0E06               	movlw	6
  5174  0022D8                     u2591:
  5175  0022D8  CFDB FFE3          	movff	plusw2,plusw1
  5176  0022DC  06E8               	decf	wreg,f,c
  5177  0022DE  E2FC               	bc	u2591
  5178                           
  5179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5180  0022E0  C00C  F01A         	movff	stoa@s,stoa@cp
  5181  0022E4  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5182                           
  5183                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5184  0022E8  501A               	movf	stoa@cp,w,c
  5185  0022EA  101B               	iorwf	stoa@cp+1,w,c
  5186  0022EC  A4D8               	btfss	status,2,c
  5187  0022EE  D004               	goto	l3102
  5188                           
  5189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5190  0022F0  0E0F               	movlw	low stoa@nuls
  5191  0022F2  6E1A               	movwf	stoa@cp,c
  5192  0022F4  0E00               	movlw	high stoa@nuls
  5193  0022F6  6E1B               	movwf	stoa@cp+1,c
  5194  0022F8                     l3102:
  5195  0022F8  FFFF               	dw	65535	; assembler added errata NOP
  5196                           
  5197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5198  0022FA  C01A  F001         	movff	stoa@cp,strlen@s
  5199  0022FE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5200  002302  EC46  F017         	call	_strlen	;wreg free
  5201  002306  C001  F01E         	movff	?_strlen,stoa@l
  5202  00230A  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5203                           
  5204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5205  00230E  C093  F01C         	movff	_prec,stoa@p
  5206  002312  C094  F01D         	movff	_prec+1,stoa@p+1
  5207                           
  5208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5209  002316  BE1D               	btfsc	stoa@p+1,7,c
  5210  002318  D00E               	goto	l401
  5211  00231A  501E               	movf	stoa@l,w,c
  5212  00231C  5C1C               	subwf	stoa@p,w,c
  5213  00231E  501D               	movf	stoa@p+1,w,c
  5214  002320  0A80               	xorlw	128
  5215  002322  6E0E               	movwf	??_stoa& (0+255),c
  5216  002324  501F               	movf	stoa@l+1,w,c
  5217  002326  0A80               	xorlw	128
  5218  002328  580E               	subwfb	??_stoa& (0+255),w,c
  5219  00232A  B0D8               	btfsc	status,0,c
  5220  00232C  D004               	goto	l401
  5221  00232E  C01C  F01E         	movff	stoa@p,stoa@l
  5222  002332  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5223  002336                     l401:
  5224  002336  FFFF               	dw	65535	; assembler added errata NOP
  5225                           
  5226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5227  002338  C01E  F01C         	movff	stoa@l,stoa@p
  5228  00233C  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5229                           
  5230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5231  002340  C091  F018         	movff	_width,stoa@w
  5232  002344  C092  F019         	movff	_width+1,stoa@w+1
  5233                           
  5234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5235  002348  0100               	movlb	0	; () banked
  5236  00234A  A195               	btfss	_flags& (0+255),0,b
  5237  00234C  D00E               	goto	l3116
  5238  00234E  D018               	goto	u2640
  5239  002350                     l3112:
  5240  002350  FFFF               	dw	65535	; assembler added errata NOP
  5241                           
  5242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5243  002352  0E00               	movlw	0
  5244  002354  6E02               	movwf	fputc@c+1,c
  5245  002356  0E20               	movlw	32
  5246  002358  6E01               	movwf	fputc@c,c
  5247  00235A  C00A  F003         	movff	stoa@fp,fputc@fp
  5248  00235E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5249  002362  EC6E  F014         	call	_fputc	;wreg free
  5250                           
  5251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5252  002366  4A1E               	infsnz	stoa@l,f,c
  5253  002368  2A1F               	incf	stoa@l+1,f,c
  5254  00236A                     l3116:
  5255  00236A  FFFF               	dw	65535	; assembler added errata NOP
  5256                           
  5257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5258  00236C  5018               	movf	stoa@w,w,c
  5259  00236E  5C1E               	subwf	stoa@l,w,c
  5260  002370  501F               	movf	stoa@l+1,w,c
  5261  002372  0A80               	xorlw	128
  5262  002374  6E0E               	movwf	??_stoa& (0+255),c
  5263  002376  5019               	movf	stoa@w+1,w,c
  5264  002378  0A80               	xorlw	128
  5265  00237A  580E               	subwfb	??_stoa& (0+255),w,c
  5266  00237C  A0D8               	btfss	status,0,c
  5267  00237E  D7E8               	goto	l3112
  5268  002380                     u2640:
  5269  002380  FFFF               	dw	65535	; assembler added errata NOP
  5270                           
  5271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5272  002382  0E00               	movlw	0
  5273  002384  6E17               	movwf	stoa@i+1,c
  5274  002386  0E00               	movlw	0
  5275  002388  6E16               	movwf	stoa@i,c
  5276                           
  5277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5278  00238A  D014               	goto	l3126
  5279  00238C                     l3120:
  5280  00238C  FFFF               	dw	65535	; assembler added errata NOP
  5281                           
  5282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5283  00238E  C01A  FFD9         	movff	stoa@cp,fsr2l
  5284  002392  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5285  002396  50DF               	movf	indf2,w,c
  5286  002398  6E0E               	movwf	??_stoa& (0+255),c
  5287  00239A  500E               	movf	??_stoa,w,c
  5288  00239C  6E01               	movwf	fputc@c,c
  5289  00239E  6A02               	clrf	fputc@c+1,c
  5290  0023A0  C00A  F003         	movff	stoa@fp,fputc@fp
  5291  0023A4  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5292  0023A8  EC6E  F014         	call	_fputc	;wreg free
  5293                           
  5294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5295  0023AC  4A1A               	infsnz	stoa@cp,f,c
  5296  0023AE  2A1B               	incf	stoa@cp+1,f,c
  5297                           
  5298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5299  0023B0  4A16               	infsnz	stoa@i,f,c
  5300  0023B2  2A17               	incf	stoa@i+1,f,c
  5301  0023B4                     l3126:
  5302  0023B4  FFFF               	dw	65535	; assembler added errata NOP
  5303                           
  5304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5305  0023B6  501C               	movf	stoa@p,w,c
  5306  0023B8  5C16               	subwf	stoa@i,w,c
  5307  0023BA  5017               	movf	stoa@i+1,w,c
  5308  0023BC  0A80               	xorlw	128
  5309  0023BE  6E0E               	movwf	??_stoa& (0+255),c
  5310  0023C0  501D               	movf	stoa@p+1,w,c
  5311  0023C2  0A80               	xorlw	128
  5312  0023C4  580E               	subwfb	??_stoa& (0+255),w,c
  5313  0023C6  A0D8               	btfss	status,0,c
  5314  0023C8  D7E1               	goto	l3120
  5315                           
  5316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5317  0023CA  0100               	movlb	0	; () banked
  5318  0023CC  B195               	btfsc	_flags& (0+255),0,b
  5319  0023CE  D00E               	goto	l3134
  5320  0023D0  D018               	goto	u2670
  5321  0023D2                     l3130:
  5322  0023D2  FFFF               	dw	65535	; assembler added errata NOP
  5323                           
  5324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5325  0023D4  0E00               	movlw	0
  5326  0023D6  6E02               	movwf	fputc@c+1,c
  5327  0023D8  0E20               	movlw	32
  5328  0023DA  6E01               	movwf	fputc@c,c
  5329  0023DC  C00A  F003         	movff	stoa@fp,fputc@fp
  5330  0023E0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5331  0023E4  EC6E  F014         	call	_fputc	;wreg free
  5332                           
  5333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5334  0023E8  4A1E               	infsnz	stoa@l,f,c
  5335  0023EA  2A1F               	incf	stoa@l+1,f,c
  5336  0023EC                     l3134:
  5337  0023EC  FFFF               	dw	65535	; assembler added errata NOP
  5338                           
  5339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5340  0023EE  5018               	movf	stoa@w,w,c
  5341  0023F0  5C1E               	subwf	stoa@l,w,c
  5342  0023F2  501F               	movf	stoa@l+1,w,c
  5343  0023F4  0A80               	xorlw	128
  5344  0023F6  6E0E               	movwf	??_stoa& (0+255),c
  5345  0023F8  5019               	movf	stoa@w+1,w,c
  5346  0023FA  0A80               	xorlw	128
  5347  0023FC  580E               	subwfb	??_stoa& (0+255),w,c
  5348  0023FE  A0D8               	btfss	status,0,c
  5349  002400  D7E8               	goto	l3130
  5350  002402                     u2670:
  5351  002402  FFFF               	dw	65535	; assembler added errata NOP
  5352                           
  5353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5354                           
  5355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5356  002404  C01E  F00A         	movff	stoa@l,?_stoa
  5357  002408  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5358  00240C  0012               	return		;funcret
  5359  00240E  FFFF               	dw	65535	; errata NOP
  5360  002410                     __end_of_stoa:
  5361                           	opt callstack 0
  5362                           
  5363 ;; *************** function _otoa *****************
  5364 ;; Defined at:
  5365 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5368 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5369 ;;  d               8   29[COMRAM] unsigned long long 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  n               8   51[COMRAM] unsigned long long 
  5372 ;;  i               2   59[COMRAM] int 
  5373 ;;  w               2   49[COMRAM] int 
  5374 ;;  t               2   47[COMRAM] int 
  5375 ;;  p               2   45[COMRAM] int 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  2   27[COMRAM] int 
  5378 ;; Registers used:
  5379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5385 ;;      Params:        10       0       0       0       0       0       0
  5386 ;;      Locals:        16       0       0       0       0       0       0
  5387 ;;      Temps:          8       0       0       0       0       0       0
  5388 ;;      Totals:        34       0       0       0       0       0       0
  5389 ;;Total ram usage:       34 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    6
  5392 ;; This function calls:
  5393 ;;		_pad
  5394 ;; This function is called by:
  5395 ;;		_vfpfcnvrt
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text17
  5400  001E70                     __ptext17:
  5401                           	opt callstack 0
  5402  001E70                     _otoa:
  5403                           	opt callstack 0
  5404  001E70  FFFF               	dw	65535	; assembler added errata NOP
  5405                           
  5406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5407                           
  5408                           ;incstack = 0
  5409  001E72  0100               	movlb	0	; () banked
  5410  001E74  AF94               	btfss	(_prec+1)& (0+255),7,b
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5414  001E76  9395               	bcf	_flags& (0+255),1,b
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5418  001E78  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5419  001E7A  D005               	goto	u2500
  5420  001E7C  5194               	movf	(_prec+1)& (0+255),w,b
  5421  001E7E  E109               	bnz	l381
  5422  001E80  0593               	decf	_prec& (0+255),w,b
  5423  001E82  B0D8               	btfsc	status,0,c
  5424  001E84  D006               	goto	l381
  5425  001E86                     u2500:
  5426  001E86  FFFF               	dw	65535	; assembler added errata NOP
  5427                           
  5428                           ; BSR set to: 0
  5429  001E88  0E00               	movlw	0
  5430  001E8A  6E2F               	movwf	otoa@p+1,c
  5431  001E8C  0E01               	movlw	1
  5432  001E8E  6E2E               	movwf	otoa@p,c
  5433  001E90  D005               	goto	l383
  5434  001E92                     l381:
  5435  001E92  FFFF               	dw	65535	; assembler added errata NOP
  5436                           
  5437                           ; BSR set to: 0
  5438  001E94  C093  F02E         	movff	_prec,otoa@p
  5439  001E98  C094  F02F         	movff	_prec+1,otoa@p+1
  5440  001E9C                     l383:
  5441  001E9C  FFFF               	dw	65535	; assembler added errata NOP
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5445  001E9E  C091  F032         	movff	_width,otoa@w
  5446  001EA2  C092  F033         	movff	_width+1,otoa@w+1
  5447                           
  5448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5449  001EA6  C01E  F034         	movff	otoa@d,otoa@n
  5450  001EAA  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5451  001EAE  C020  F036         	movff	otoa@d+2,otoa@n+2
  5452  001EB2  C021  F037         	movff	otoa@d+3,otoa@n+3
  5453  001EB6  C022  F038         	movff	otoa@d+4,otoa@n+4
  5454  001EBA  C023  F039         	movff	otoa@d+5,otoa@n+5
  5455  001EBE  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5456  001EC2  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5460  001EC6  0E00               	movlw	0
  5461  001EC8  6E3D               	movwf	otoa@i+1,c
  5462  001ECA  0E1F               	movlw	31
  5463  001ECC  6E3C               	movwf	otoa@i,c
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5467  001ECE  0E00               	movlw	0
  5468  001ED0  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5472  001ED2  0E00               	movlw	0
  5473  001ED4  6E31               	movwf	otoa@t+1,c
  5474  001ED6  0E00               	movlw	0
  5475  001ED8  6E30               	movwf	otoa@t,c
  5476                           
  5477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5478  001EDA  D046               	goto	l3072
  5479  001EDC                     l3060:
  5480  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5481                           
  5482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5483  001EDE  063C               	decf	otoa@i,f,c
  5484  001EE0  A0D8               	btfss	status,0,c
  5485  001EE2  063D               	decf	otoa@i+1,f,c
  5486                           
  5487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5488  001EE4  0E07               	movlw	7
  5489  001EE6  1434               	andwf	otoa@n,w,c
  5490  001EE8  6E30               	movwf	otoa@t,c
  5491  001EEA  6A31               	clrf	otoa@t+1,c
  5492                           
  5493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5494  001EEC  0E9B               	movlw	low _dbuf
  5495  001EEE  243C               	addwf	otoa@i,w,c
  5496  001EF0  6ED9               	movwf	fsr2l,c
  5497  001EF2  0E00               	movlw	high _dbuf
  5498  001EF4  203D               	addwfc	otoa@i+1,w,c
  5499  001EF6  6EDA               	movwf	fsr2h,c
  5500  001EF8  5030               	movf	otoa@t,w,c
  5501  001EFA  0F30               	addlw	48
  5502  001EFC  6EDF               	movwf	indf2,c
  5503                           
  5504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5505  001EFE  062E               	decf	otoa@p,f,c
  5506  001F00  A0D8               	btfss	status,0,c
  5507  001F02  062F               	decf	otoa@p+1,f,c
  5508                           
  5509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5510  001F04  0632               	decf	otoa@w,f,c
  5511  001F06  A0D8               	btfss	status,0,c
  5512  001F08  0633               	decf	otoa@w+1,f,c
  5513                           
  5514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5515  001F0A  C034  F026         	movff	otoa@n,??_otoa
  5516  001F0E  C035  F027         	movff	otoa@n+1,??_otoa+1
  5517  001F12  C036  F028         	movff	otoa@n+2,??_otoa+2
  5518  001F16  C037  F029         	movff	otoa@n+3,??_otoa+3
  5519  001F1A  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5520  001F1E  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5521  001F22  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5522  001F26  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5523  001F2A  0E04               	movlw	4
  5524  001F2C  D00A               	goto	u2510
  5525  001F2E                     u2515:
  5526  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  5527  001F30  90D8               	bcf	status,0,c
  5528  001F32  322D               	rrcf	??_otoa+7,f,c
  5529  001F34  322C               	rrcf	??_otoa+6,f,c
  5530  001F36  322B               	rrcf	??_otoa+5,f,c
  5531  001F38  322A               	rrcf	??_otoa+4,f,c
  5532  001F3A  3229               	rrcf	??_otoa+3,f,c
  5533  001F3C  3228               	rrcf	??_otoa+2,f,c
  5534  001F3E  3227               	rrcf	??_otoa+1,f,c
  5535  001F40  3226               	rrcf	??_otoa,f,c
  5536  001F42                     u2510:
  5537  001F42  FFFF               	dw	65535	; assembler added errata NOP
  5538  001F44  2EE8               	decfsz	wreg,f,c
  5539  001F46  D7F3               	goto	u2515
  5540  001F48  C026  F034         	movff	??_otoa,otoa@n
  5541  001F4C  C027  F035         	movff	??_otoa+1,otoa@n+1
  5542  001F50  C028  F036         	movff	??_otoa+2,otoa@n+2
  5543  001F54  C029  F037         	movff	??_otoa+3,otoa@n+3
  5544  001F58  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5545  001F5C  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5546  001F60  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5547  001F64  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5548  001F68                     l3072:
  5549  001F68  FFFF               	dw	65535	; assembler added errata NOP
  5550                           
  5551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5552  001F6A  BE3D               	btfsc	otoa@i+1,7,c
  5553  001F6C  D021               	goto	u2560
  5554  001F6E  503D               	movf	otoa@i+1,w,c
  5555  001F70  E103               	bnz	u2520
  5556  001F72  043C               	decf	otoa@i,w,c
  5557  001F74  A0D8               	btfss	status,0,c
  5558  001F76  D01C               	goto	u2560
  5559  001F78                     u2520:
  5560  001F78  5034               	movf	otoa@n,w,c
  5561  001F7A  1035               	iorwf	otoa@n+1,w,c
  5562  001F7C  1036               	iorwf	otoa@n+2,w,c
  5563  001F7E  1037               	iorwf	otoa@n+3,w,c
  5564  001F80  1038               	iorwf	otoa@n+4,w,c
  5565  001F82  1039               	iorwf	otoa@n+5,w,c
  5566  001F84  103A               	iorwf	otoa@n+6,w,c
  5567  001F86  103B               	iorwf	otoa@n+7,w,c
  5568  001F88  A4D8               	btfss	status,2,c
  5569  001F8A  D7A8               	goto	l3060
  5570  001F8C  BE2F               	btfsc	otoa@p+1,7,c
  5571  001F8E  D005               	goto	u2540
  5572  001F90  502F               	movf	otoa@p+1,w,c
  5573  001F92  E1A4               	bnz	l3060
  5574  001F94  042E               	decf	otoa@p,w,c
  5575  001F96  B0D8               	btfsc	status,0,c
  5576  001F98  D7A1               	goto	l3060
  5577  001F9A                     u2540:
  5578  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  5579  001F9C  BE33               	btfsc	otoa@w+1,7,c
  5580  001F9E  D008               	goto	u2560
  5581  001FA0  5033               	movf	otoa@w+1,w,c
  5582  001FA2  E103               	bnz	u2550
  5583  001FA4  0432               	decf	otoa@w,w,c
  5584  001FA6  A0D8               	btfss	status,0,c
  5585  001FA8  D003               	goto	u2560
  5586  001FAA                     u2550:
  5587  001FAA  0100               	movlb	0	; () banked
  5588  001FAC  B395               	btfsc	_flags& (0+255),1,b
  5589  001FAE  D796               	goto	l3060
  5590  001FB0                     u2560:
  5591  001FB0  FFFF               	dw	65535	; assembler added errata NOP
  5592                           
  5593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5594  001FB2  0100               	movlb	0	; () banked
  5595  001FB4  A995               	btfss	_flags& (0+255),4,b
  5596  001FB6  D012               	goto	l3090
  5597                           
  5598                           ; BSR set to: 0
  5599  001FB8  5030               	movf	otoa@t,w,c
  5600  001FBA  1031               	iorwf	otoa@t+1,w,c
  5601  001FBC  B4D8               	btfsc	status,2,c
  5602  001FBE  D00E               	goto	l3090
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5606  001FC0  063C               	decf	otoa@i,f,c
  5607  001FC2  A0D8               	btfss	status,0,c
  5608  001FC4  063D               	decf	otoa@i+1,f,c
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5612  001FC6  0E9B               	movlw	low _dbuf
  5613  001FC8  243C               	addwf	otoa@i,w,c
  5614  001FCA  6ED9               	movwf	fsr2l,c
  5615  001FCC  0E00               	movlw	high _dbuf
  5616  001FCE  203D               	addwfc	otoa@i+1,w,c
  5617  001FD0  6EDA               	movwf	fsr2h,c
  5618  001FD2  0E30               	movlw	48
  5619  001FD4  6EDF               	movwf	indf2,c
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5623  001FD6  0632               	decf	otoa@w,f,c
  5624  001FD8  A0D8               	btfss	status,0,c
  5625  001FDA  0633               	decf	otoa@w+1,f,c
  5626  001FDC                     l3090:
  5627  001FDC  FFFF               	dw	65535	; assembler added errata NOP
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5631  001FDE  C01C  F011         	movff	otoa@fp,pad@fp
  5632  001FE2  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5633  001FE6  0E9B               	movlw	low _dbuf
  5634  001FE8  243C               	addwf	otoa@i,w,c
  5635  001FEA  6E13               	movwf	pad@buf,c
  5636  001FEC  0E00               	movlw	high _dbuf
  5637  001FEE  203D               	addwfc	otoa@i+1,w,c
  5638  001FF0  6E14               	movwf	pad@buf+1,c
  5639  001FF2  C032  F015         	movff	otoa@w,pad@p
  5640  001FF6  C033  F016         	movff	otoa@w+1,pad@p+1
  5641  001FFA  ECC4  F014         	call	_pad	;wreg free
  5642  001FFE  C011  F01C         	movff	?_pad,?_otoa
  5643  002002  C012  F01D         	movff	?_pad+1,?_otoa+1
  5644  002006  0012               	return		;funcret
  5645  002008  FFFF               	dw	65535	; errata NOP
  5646  00200A                     __end_of_otoa:
  5647                           	opt callstack 0
  5648                           
  5649 ;; *************** function _dtoa *****************
  5650 ;; Defined at:
  5651 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5654 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5655 ;;  d               8   29[COMRAM] long long 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  n               8   53[COMRAM] long long 
  5658 ;;  i               2   61[COMRAM] int 
  5659 ;;  s               2   51[COMRAM] int 
  5660 ;;  w               2   49[COMRAM] int 
  5661 ;;  p               2   47[COMRAM] int 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2   27[COMRAM] int 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5671 ;;      Params:        10       0       0       0       0       0       0
  5672 ;;      Locals:        18       0       0       0       0       0       0
  5673 ;;      Temps:          8       0       0       0       0       0       0
  5674 ;;      Totals:        36       0       0       0       0       0       0
  5675 ;;Total ram usage:       36 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    6
  5678 ;; This function calls:
  5679 ;;		___aodiv
  5680 ;;		___aomod
  5681 ;;		_abs
  5682 ;;		_pad
  5683 ;; This function is called by:
  5684 ;;		_vfpfcnvrt
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text18
  5689  0017EC                     __ptext18:
  5690                           	opt callstack 0
  5691  0017EC                     _dtoa:
  5692                           	opt callstack 0
  5693  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  5694                           
  5695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5696                           
  5697                           ;incstack = 0
  5698  0017EE  C01E  F036         	movff	dtoa@d,dtoa@n
  5699  0017F2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5700  0017F6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5701  0017FA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5702  0017FE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5703  001802  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5704  001806  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5705  00180A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5706                           
  5707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5708  00180E  AE3D               	btfss	dtoa@n+7,7,c
  5709  001810  D002               	goto	u2340
  5710  001812  0E01               	movlw	1
  5711  001814  D002               	goto	u2350
  5712  001816                     u2340:
  5713  001816  FFFF               	dw	65535	; assembler added errata NOP
  5714  001818  0E00               	movlw	0
  5715  00181A                     u2350:
  5716  00181A  FFFF               	dw	65535	; assembler added errata NOP
  5717  00181C  6E34               	movwf	dtoa@s,c
  5718  00181E  6A35               	clrf	dtoa@s+1,c
  5719                           
  5720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5721  001820  5034               	movf	dtoa@s,w,c
  5722  001822  1035               	iorwf	dtoa@s+1,w,c
  5723  001824  B4D8               	btfsc	status,2,c
  5724  001826  D010               	goto	l2990
  5725                           
  5726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5727  001828  1E3D               	comf	dtoa@n+7,f,c
  5728  00182A  1E3C               	comf	dtoa@n+6,f,c
  5729  00182C  1E3B               	comf	dtoa@n+5,f,c
  5730  00182E  1E3A               	comf	dtoa@n+4,f,c
  5731  001830  1E39               	comf	dtoa@n+3,f,c
  5732  001832  1E38               	comf	dtoa@n+2,f,c
  5733  001834  1E37               	comf	dtoa@n+1,f,c
  5734  001836  6C36               	negf	dtoa@n,c
  5735  001838  0E00               	movlw	0
  5736  00183A  2237               	addwfc	dtoa@n+1,f,c
  5737  00183C  2238               	addwfc	dtoa@n+2,f,c
  5738  00183E  2239               	addwfc	dtoa@n+3,f,c
  5739  001840  223A               	addwfc	dtoa@n+4,f,c
  5740  001842  223B               	addwfc	dtoa@n+5,f,c
  5741  001844  223C               	addwfc	dtoa@n+6,f,c
  5742  001846  223D               	addwfc	dtoa@n+7,f,c
  5743  001848                     l2990:
  5744  001848  FFFF               	dw	65535	; assembler added errata NOP
  5745                           
  5746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5747  00184A  0100               	movlb	0	; () banked
  5748  00184C  AF94               	btfss	(_prec+1)& (0+255),7,b
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5752  00184E  9395               	bcf	_flags& (0+255),1,b
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5756  001850  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5757  001852  D005               	goto	u2380
  5758  001854  5194               	movf	(_prec+1)& (0+255),w,b
  5759  001856  E109               	bnz	l356
  5760  001858  0593               	decf	_prec& (0+255),w,b
  5761  00185A  B0D8               	btfsc	status,0,c
  5762  00185C  D006               	goto	l356
  5763  00185E                     u2380:
  5764  00185E  FFFF               	dw	65535	; assembler added errata NOP
  5765                           
  5766                           ; BSR set to: 0
  5767  001860  0E00               	movlw	0
  5768  001862  6E31               	movwf	dtoa@p+1,c
  5769  001864  0E01               	movlw	1
  5770  001866  6E30               	movwf	dtoa@p,c
  5771  001868  D005               	goto	l358
  5772  00186A                     l356:
  5773  00186A  FFFF               	dw	65535	; assembler added errata NOP
  5774                           
  5775                           ; BSR set to: 0
  5776  00186C  C093  F030         	movff	_prec,dtoa@p
  5777  001870  C094  F031         	movff	_prec+1,dtoa@p+1
  5778  001874                     l358:
  5779  001874  FFFF               	dw	65535	; assembler added errata NOP
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5783  001876  C091  F032         	movff	_width,dtoa@w
  5784  00187A  C092  F033         	movff	_width+1,dtoa@w+1
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5788  00187E  5034               	movf	dtoa@s,w,c
  5789  001880  1035               	iorwf	dtoa@s+1,w,c
  5790  001882  A4D8               	btfss	status,2,c
  5791  001884  D002               	goto	u2400
  5792                           
  5793                           ; BSR set to: 0
  5794  001886  A595               	btfss	_flags& (0+255),2,b
  5795  001888  D004               	goto	l3004
  5796  00188A                     u2400:
  5797  00188A  FFFF               	dw	65535	; assembler added errata NOP
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5801  00188C  0632               	decf	dtoa@w,f,c
  5802  00188E  A0D8               	btfss	status,0,c
  5803  001890  0633               	decf	dtoa@w+1,f,c
  5804  001892                     l3004:
  5805  001892  FFFF               	dw	65535	; assembler added errata NOP
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5809  001894  0E00               	movlw	0
  5810  001896  6E3F               	movwf	dtoa@i+1,c
  5811  001898  0E1F               	movlw	31
  5812  00189A  6E3E               	movwf	dtoa@i,c
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5816  00189C  0E00               	movlw	0
  5817  00189E  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5818                           
  5819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5820  0018A0  D07D               	goto	l3018
  5821  0018A2                     l3008:
  5822  0018A2  FFFF               	dw	65535	; assembler added errata NOP
  5823                           
  5824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5825  0018A4  063E               	decf	dtoa@i,f,c
  5826  0018A6  A0D8               	btfss	status,0,c
  5827  0018A8  063F               	decf	dtoa@i+1,f,c
  5828                           
  5829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5830  0018AA  0E9B               	movlw	low _dbuf
  5831  0018AC  243E               	addwf	dtoa@i,w,c
  5832  0018AE  6ED9               	movwf	fsr2l,c
  5833  0018B0  0E00               	movlw	high _dbuf
  5834  0018B2  203F               	addwfc	dtoa@i+1,w,c
  5835  0018B4  6EDA               	movwf	fsr2h,c
  5836  0018B6  C036  F001         	movff	dtoa@n,___aomod@dividend
  5837  0018BA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5838  0018BE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5839  0018C2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5840  0018C6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5841  0018CA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5842  0018CE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5843  0018D2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5844  0018D6  0E0A               	movlw	10
  5845  0018D8  6E09               	movwf	___aomod@divisor,c
  5846  0018DA  0E00               	movlw	0
  5847  0018DC  6E0A               	movwf	___aomod@divisor+1,c
  5848  0018DE  0E00               	movlw	0
  5849  0018E0  6E0B               	movwf	___aomod@divisor+2,c
  5850  0018E2  0E00               	movlw	0
  5851  0018E4  6E0C               	movwf	___aomod@divisor+3,c
  5852  0018E6  0E00               	movlw	0
  5853  0018E8  6E0D               	movwf	___aomod@divisor+4,c
  5854  0018EA  0E00               	movlw	0
  5855  0018EC  6E0E               	movwf	___aomod@divisor+5,c
  5856  0018EE  0E00               	movlw	0
  5857  0018F0  6E0F               	movwf	___aomod@divisor+6,c
  5858  0018F2  0E00               	movlw	0
  5859  0018F4  6E10               	movwf	___aomod@divisor+7,c
  5860  0018F6  ECA5  F012         	call	___aomod	;wreg free
  5861  0018FA  C001  F026         	movff	?___aomod,??_dtoa
  5862  0018FE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5863  001902  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5864  001906  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5865  00190A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5866  00190E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5867  001912  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5868  001916  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5869  00191A  C026  F013         	movff	??_dtoa,abs@a
  5870  00191E  C028  F014         	movff	??_dtoa+2,abs@a+1
  5871  001922  ECD4  F016         	call	_abs	;wreg free
  5872  001926  5013               	movf	?_abs,w,c
  5873  001928  0F30               	addlw	48
  5874  00192A  6EDF               	movwf	indf2,c
  5875                           
  5876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5877  00192C  0630               	decf	dtoa@p,f,c
  5878  00192E  A0D8               	btfss	status,0,c
  5879  001930  0631               	decf	dtoa@p+1,f,c
  5880                           
  5881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5882  001932  0632               	decf	dtoa@w,f,c
  5883  001934  A0D8               	btfss	status,0,c
  5884  001936  0633               	decf	dtoa@w+1,f,c
  5885                           
  5886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5887  001938  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5888  00193C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5889  001940  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5890  001944  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5891  001948  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5892  00194C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5893  001950  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5894  001954  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5895  001958  0E0A               	movlw	10
  5896  00195A  6E09               	movwf	___aodiv@divisor,c
  5897  00195C  0E00               	movlw	0
  5898  00195E  6E0A               	movwf	___aodiv@divisor+1,c
  5899  001960  0E00               	movlw	0
  5900  001962  6E0B               	movwf	___aodiv@divisor+2,c
  5901  001964  0E00               	movlw	0
  5902  001966  6E0C               	movwf	___aodiv@divisor+3,c
  5903  001968  0E00               	movlw	0
  5904  00196A  6E0D               	movwf	___aodiv@divisor+4,c
  5905  00196C  0E00               	movlw	0
  5906  00196E  6E0E               	movwf	___aodiv@divisor+5,c
  5907  001970  0E00               	movlw	0
  5908  001972  6E0F               	movwf	___aodiv@divisor+6,c
  5909  001974  0E00               	movlw	0
  5910  001976  6E10               	movwf	___aodiv@divisor+7,c
  5911  001978  ECB8  F010         	call	___aodiv	;wreg free
  5912  00197C  C001  F036         	movff	?___aodiv,dtoa@n
  5913  001980  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5914  001984  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5915  001988  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5916  00198C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5917  001990  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5918  001994  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5919  001998  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5920  00199C                     l3018:
  5921  00199C  FFFF               	dw	65535	; assembler added errata NOP
  5922                           
  5923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5924  00199E  BE3F               	btfsc	dtoa@i+1,7,c
  5925  0019A0  D021               	goto	u2450
  5926  0019A2  503F               	movf	dtoa@i+1,w,c
  5927  0019A4  E103               	bnz	u2410
  5928  0019A6  043E               	decf	dtoa@i,w,c
  5929  0019A8  A0D8               	btfss	status,0,c
  5930  0019AA  D01C               	goto	u2450
  5931  0019AC                     u2410:
  5932  0019AC  5036               	movf	dtoa@n,w,c
  5933  0019AE  1037               	iorwf	dtoa@n+1,w,c
  5934  0019B0  1038               	iorwf	dtoa@n+2,w,c
  5935  0019B2  1039               	iorwf	dtoa@n+3,w,c
  5936  0019B4  103A               	iorwf	dtoa@n+4,w,c
  5937  0019B6  103B               	iorwf	dtoa@n+5,w,c
  5938  0019B8  103C               	iorwf	dtoa@n+6,w,c
  5939  0019BA  103D               	iorwf	dtoa@n+7,w,c
  5940  0019BC  A4D8               	btfss	status,2,c
  5941  0019BE  D771               	goto	l3008
  5942  0019C0  BE31               	btfsc	dtoa@p+1,7,c
  5943  0019C2  D005               	goto	u2430
  5944  0019C4  5031               	movf	dtoa@p+1,w,c
  5945  0019C6  E102               	bnz	u2431
  5946  0019C8  0430               	decf	dtoa@p,w,c
  5947  0019CA  B0D8               	btfsc	status,0,c
  5948  0019CC                     u2431:
  5949  0019CC  D76A               	goto	l3008
  5950  0019CE                     u2430:
  5951  0019CE  FFFF               	dw	65535	; assembler added errata NOP
  5952  0019D0  BE33               	btfsc	dtoa@w+1,7,c
  5953  0019D2  D008               	goto	u2450
  5954  0019D4  5033               	movf	dtoa@w+1,w,c
  5955  0019D6  E103               	bnz	u2440
  5956  0019D8  0432               	decf	dtoa@w,w,c
  5957  0019DA  A0D8               	btfss	status,0,c
  5958  0019DC  D003               	goto	u2450
  5959  0019DE                     u2440:
  5960  0019DE  0100               	movlb	0	; () banked
  5961  0019E0  B395               	btfsc	_flags& (0+255),1,b
  5962  0019E2  D75F               	goto	l3008
  5963  0019E4                     u2450:
  5964  0019E4  FFFF               	dw	65535	; assembler added errata NOP
  5965                           
  5966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5967  0019E6  5034               	movf	dtoa@s,w,c
  5968  0019E8  1035               	iorwf	dtoa@s+1,w,c
  5969  0019EA  A4D8               	btfss	status,2,c
  5970  0019EC  D003               	goto	u2470
  5971  0019EE  0100               	movlb	0	; () banked
  5972  0019F0  A595               	btfss	_flags& (0+255),2,b
  5973  0019F2  D01A               	goto	l3042
  5974  0019F4                     u2470:
  5975  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  5976                           
  5977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5978  0019F6  063E               	decf	dtoa@i,f,c
  5979  0019F8  A0D8               	btfss	status,0,c
  5980  0019FA  063F               	decf	dtoa@i+1,f,c
  5981                           
  5982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5983  0019FC  5034               	movf	dtoa@s,w,c
  5984  0019FE  1035               	iorwf	dtoa@s+1,w,c
  5985  001A00  A4D8               	btfss	status,2,c
  5986  001A02  D004               	goto	l3038
  5987  001A04  0E00               	movlw	0
  5988  001A06  6E2F               	movwf	_dtoa$1050+1,c
  5989  001A08  0E2B               	movlw	43
  5990  001A0A  D004               	goto	L20
  5991  001A0C                     l3038:
  5992  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  5993  001A0E  0E00               	movlw	0
  5994  001A10  6E2F               	movwf	_dtoa$1050+1,c
  5995  001A12  0E2D               	movlw	45
  5996  001A14                     L20:
  5997  001A14  FFFF               	dw	65535	; assembler added errata NOP
  5998  001A16  6E2E               	movwf	_dtoa$1050,c
  5999  001A18  0E9B               	movlw	low _dbuf
  6000  001A1A  243E               	addwf	dtoa@i,w,c
  6001  001A1C  6ED9               	movwf	fsr2l,c
  6002  001A1E  0E00               	movlw	high _dbuf
  6003  001A20  203F               	addwfc	dtoa@i+1,w,c
  6004  001A22  6EDA               	movwf	fsr2h,c
  6005  001A24  C02E  FFDF         	movff	_dtoa$1050,indf2
  6006  001A28                     l3042:
  6007  001A28  FFFF               	dw	65535	; assembler added errata NOP
  6008                           
  6009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6010  001A2A  C01C  F011         	movff	dtoa@fp,pad@fp
  6011  001A2E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6012  001A32  0E9B               	movlw	low _dbuf
  6013  001A34  243E               	addwf	dtoa@i,w,c
  6014  001A36  6E13               	movwf	pad@buf,c
  6015  001A38  0E00               	movlw	high _dbuf
  6016  001A3A  203F               	addwfc	dtoa@i+1,w,c
  6017  001A3C  6E14               	movwf	pad@buf+1,c
  6018  001A3E  C032  F015         	movff	dtoa@w,pad@p
  6019  001A42  C033  F016         	movff	dtoa@w+1,pad@p+1
  6020  001A46  ECC4  F014         	call	_pad	;wreg free
  6021  001A4A  C011  F01C         	movff	?_pad,?_dtoa
  6022  001A4E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6023  001A52  0012               	return		;funcret
  6024  001A54  FFFF               	dw	65535	; errata NOP
  6025  001A56                     __end_of_dtoa:
  6026                           	opt callstack 0
  6027                           
  6028 ;; *************** function _abs *****************
  6029 ;; Defined at:
  6030 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  a               2   18[COMRAM] int 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  2   18[COMRAM] int 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6044 ;;      Params:         2       0       0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0
  6046 ;;      Temps:          2       0       0       0       0       0       0
  6047 ;;      Totals:         4       0       0       0       0       0       0
  6048 ;;Total ram usage:        4 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    2
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_dtoa
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text19
  6059  002DA8                     __ptext19:
  6060                           	opt callstack 0
  6061  002DA8                     _abs:
  6062                           	opt callstack 0
  6063  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  6064                           
  6065                           ;incstack = 0
  6066  002DAA  BE14               	btfsc	abs@a+1,7,c
  6067  002DAC  D005               	goto	u2010
  6068  002DAE  5014               	movf	abs@a+1,w,c
  6069  002DB0  E111               	bnz	l1229
  6070  002DB2  0413               	decf	abs@a,w,c
  6071  002DB4  B0D8               	btfsc	status,0,c
  6072  002DB6  D00E               	goto	l1229
  6073  002DB8                     u2010:
  6074  002DB8  FFFF               	dw	65535	; assembler added errata NOP
  6075  002DBA  C013  F015         	movff	abs@a,??_abs
  6076  002DBE  C014  F016         	movff	abs@a+1,??_abs+1
  6077  002DC2  1E15               	comf	??_abs,f,c
  6078  002DC4  1E16               	comf	??_abs+1,f,c
  6079  002DC6  4A15               	infsnz	??_abs,f,c
  6080  002DC8  2A16               	incf	??_abs+1,f,c
  6081  002DCA  C015  F013         	movff	??_abs,?_abs
  6082  002DCE  C016  F014         	movff	??_abs+1,?_abs+1
  6083  002DD2  D005               	goto	l1232
  6084  002DD4                     l1229:
  6085  002DD4  FFFF               	dw	65535	; assembler added errata NOP
  6086  002DD6  C013  F013         	movff	abs@a,?_abs
  6087  002DDA  C014  F014         	movff	abs@a+1,?_abs+1
  6088  002DDE                     l1232:
  6089  002DDE  FFFF               	dw	65535	; assembler added errata NOP
  6090  002DE0  0012               	return		;funcret
  6091  002DE2  FFFF               	dw	65535	; errata NOP
  6092  002DE4                     __end_of_abs:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function ___aomod *****************
  6096 ;; Defined at:
  6097 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  dividend        8    0[COMRAM] long long 
  6100 ;;  divisor         8    8[COMRAM] long long 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  sign            1   17[COMRAM] unsigned char 
  6103 ;;  counter         1   16[COMRAM] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  8    0[COMRAM] long long 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6113 ;;      Params:        16       0       0       0       0       0       0
  6114 ;;      Locals:         2       0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0
  6116 ;;      Totals:        18       0       0       0       0       0       0
  6117 ;;Total ram usage:       18 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    2
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_dtoa
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text20
  6128  00254A                     __ptext20:
  6129                           	opt callstack 0
  6130  00254A                     ___aomod:
  6131                           	opt callstack 0
  6132  00254A  FFFF               	dw	65535	; assembler added errata NOP
  6133                           
  6134                           ;incstack = 0
  6135  00254C  0E00               	movlw	0
  6136  00254E  6E12               	movwf	___aomod@sign,c
  6137  002550  AE08               	btfss	___aomod@dividend+7,7,c
  6138  002552  D012               	goto	l2892
  6139  002554  1E08               	comf	___aomod@dividend+7,f,c
  6140  002556  1E07               	comf	___aomod@dividend+6,f,c
  6141  002558  1E06               	comf	___aomod@dividend+5,f,c
  6142  00255A  1E05               	comf	___aomod@dividend+4,f,c
  6143  00255C  1E04               	comf	___aomod@dividend+3,f,c
  6144  00255E  1E03               	comf	___aomod@dividend+2,f,c
  6145  002560  1E02               	comf	___aomod@dividend+1,f,c
  6146  002562  6C01               	negf	___aomod@dividend,c
  6147  002564  0E00               	movlw	0
  6148  002566  2202               	addwfc	___aomod@dividend+1,f,c
  6149  002568  2203               	addwfc	___aomod@dividend+2,f,c
  6150  00256A  2204               	addwfc	___aomod@dividend+3,f,c
  6151  00256C  2205               	addwfc	___aomod@dividend+4,f,c
  6152  00256E  2206               	addwfc	___aomod@dividend+5,f,c
  6153  002570  2207               	addwfc	___aomod@dividend+6,f,c
  6154  002572  2208               	addwfc	___aomod@dividend+7,f,c
  6155  002574  0E01               	movlw	1
  6156  002576  6E12               	movwf	___aomod@sign,c
  6157  002578                     l2892:
  6158  002578  FFFF               	dw	65535	; assembler added errata NOP
  6159  00257A  AE10               	btfss	___aomod@divisor+7,7,c
  6160  00257C  D010               	goto	l2896
  6161  00257E  1E10               	comf	___aomod@divisor+7,f,c
  6162  002580  1E0F               	comf	___aomod@divisor+6,f,c
  6163  002582  1E0E               	comf	___aomod@divisor+5,f,c
  6164  002584  1E0D               	comf	___aomod@divisor+4,f,c
  6165  002586  1E0C               	comf	___aomod@divisor+3,f,c
  6166  002588  1E0B               	comf	___aomod@divisor+2,f,c
  6167  00258A  1E0A               	comf	___aomod@divisor+1,f,c
  6168  00258C  6C09               	negf	___aomod@divisor,c
  6169  00258E  0E00               	movlw	0
  6170  002590  220A               	addwfc	___aomod@divisor+1,f,c
  6171  002592  220B               	addwfc	___aomod@divisor+2,f,c
  6172  002594  220C               	addwfc	___aomod@divisor+3,f,c
  6173  002596  220D               	addwfc	___aomod@divisor+4,f,c
  6174  002598  220E               	addwfc	___aomod@divisor+5,f,c
  6175  00259A  220F               	addwfc	___aomod@divisor+6,f,c
  6176  00259C  2210               	addwfc	___aomod@divisor+7,f,c
  6177  00259E                     l2896:
  6178  00259E  FFFF               	dw	65535	; assembler added errata NOP
  6179  0025A0  5009               	movf	___aomod@divisor,w,c
  6180  0025A2  100A               	iorwf	___aomod@divisor+1,w,c
  6181  0025A4  100B               	iorwf	___aomod@divisor+2,w,c
  6182  0025A6  100C               	iorwf	___aomod@divisor+3,w,c
  6183  0025A8  100D               	iorwf	___aomod@divisor+4,w,c
  6184  0025AA  100E               	iorwf	___aomod@divisor+5,w,c
  6185  0025AC  100F               	iorwf	___aomod@divisor+6,w,c
  6186  0025AE  1010               	iorwf	___aomod@divisor+7,w,c
  6187  0025B0  B4D8               	btfsc	status,2,c
  6188  0025B2  D040               	goto	l2912
  6189  0025B4  0E01               	movlw	1
  6190  0025B6  6E11               	movwf	___aomod@counter,c
  6191  0025B8  D00B               	goto	l2902
  6192  0025BA                     l2900:
  6193  0025BA  FFFF               	dw	65535	; assembler added errata NOP
  6194  0025BC  90D8               	bcf	status,0,c
  6195  0025BE  3609               	rlcf	___aomod@divisor,f,c
  6196  0025C0  360A               	rlcf	___aomod@divisor+1,f,c
  6197  0025C2  360B               	rlcf	___aomod@divisor+2,f,c
  6198  0025C4  360C               	rlcf	___aomod@divisor+3,f,c
  6199  0025C6  360D               	rlcf	___aomod@divisor+4,f,c
  6200  0025C8  360E               	rlcf	___aomod@divisor+5,f,c
  6201  0025CA  360F               	rlcf	___aomod@divisor+6,f,c
  6202  0025CC  3610               	rlcf	___aomod@divisor+7,f,c
  6203  0025CE  2A11               	incf	___aomod@counter,f,c
  6204  0025D0                     l2902:
  6205  0025D0  FFFF               	dw	65535	; assembler added errata NOP
  6206  0025D2  AE10               	btfss	___aomod@divisor+7,7,c
  6207  0025D4  D7F2               	goto	l2900
  6208  0025D6                     u2210:
  6209  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  6210  0025D8  5009               	movf	___aomod@divisor,w,c
  6211  0025DA  5C01               	subwf	___aomod@dividend,w,c
  6212  0025DC  500A               	movf	___aomod@divisor+1,w,c
  6213  0025DE  5802               	subwfb	___aomod@dividend+1,w,c
  6214  0025E0  500B               	movf	___aomod@divisor+2,w,c
  6215  0025E2  5803               	subwfb	___aomod@dividend+2,w,c
  6216  0025E4  500C               	movf	___aomod@divisor+3,w,c
  6217  0025E6  5804               	subwfb	___aomod@dividend+3,w,c
  6218  0025E8  500D               	movf	___aomod@divisor+4,w,c
  6219  0025EA  5805               	subwfb	___aomod@dividend+4,w,c
  6220  0025EC  500E               	movf	___aomod@divisor+5,w,c
  6221  0025EE  5806               	subwfb	___aomod@dividend+5,w,c
  6222  0025F0  500F               	movf	___aomod@divisor+6,w,c
  6223  0025F2  5807               	subwfb	___aomod@dividend+6,w,c
  6224  0025F4  5010               	movf	___aomod@divisor+7,w,c
  6225  0025F6  5808               	subwfb	___aomod@dividend+7,w,c
  6226  0025F8  A0D8               	btfss	status,0,c
  6227  0025FA  D010               	goto	l2908
  6228  0025FC  5009               	movf	___aomod@divisor,w,c
  6229  0025FE  5E01               	subwf	___aomod@dividend,f,c
  6230  002600  500A               	movf	___aomod@divisor+1,w,c
  6231  002602  5A02               	subwfb	___aomod@dividend+1,f,c
  6232  002604  500B               	movf	___aomod@divisor+2,w,c
  6233  002606  5A03               	subwfb	___aomod@dividend+2,f,c
  6234  002608  500C               	movf	___aomod@divisor+3,w,c
  6235  00260A  5A04               	subwfb	___aomod@dividend+3,f,c
  6236  00260C  500D               	movf	___aomod@divisor+4,w,c
  6237  00260E  5A05               	subwfb	___aomod@dividend+4,f,c
  6238  002610  500E               	movf	___aomod@divisor+5,w,c
  6239  002612  5A06               	subwfb	___aomod@dividend+5,f,c
  6240  002614  500F               	movf	___aomod@divisor+6,w,c
  6241  002616  5A07               	subwfb	___aomod@dividend+6,f,c
  6242  002618  5010               	movf	___aomod@divisor+7,w,c
  6243  00261A  5A08               	subwfb	___aomod@dividend+7,f,c
  6244  00261C                     l2908:
  6245  00261C  FFFF               	dw	65535	; assembler added errata NOP
  6246  00261E  90D8               	bcf	status,0,c
  6247  002620  3210               	rrcf	___aomod@divisor+7,f,c
  6248  002622  320F               	rrcf	___aomod@divisor+6,f,c
  6249  002624  320E               	rrcf	___aomod@divisor+5,f,c
  6250  002626  320D               	rrcf	___aomod@divisor+4,f,c
  6251  002628  320C               	rrcf	___aomod@divisor+3,f,c
  6252  00262A  320B               	rrcf	___aomod@divisor+2,f,c
  6253  00262C  320A               	rrcf	___aomod@divisor+1,f,c
  6254  00262E  3209               	rrcf	___aomod@divisor,f,c
  6255  002630  2E11               	decfsz	___aomod@counter,f,c
  6256  002632  D7D1               	goto	u2210
  6257  002634                     l2912:
  6258  002634  FFFF               	dw	65535	; assembler added errata NOP
  6259  002636  5012               	movf	___aomod@sign,w,c
  6260  002638  B4D8               	btfsc	status,2,c
  6261  00263A  D010               	goto	l2916
  6262  00263C  1E08               	comf	___aomod@dividend+7,f,c
  6263  00263E  1E07               	comf	___aomod@dividend+6,f,c
  6264  002640  1E06               	comf	___aomod@dividend+5,f,c
  6265  002642  1E05               	comf	___aomod@dividend+4,f,c
  6266  002644  1E04               	comf	___aomod@dividend+3,f,c
  6267  002646  1E03               	comf	___aomod@dividend+2,f,c
  6268  002648  1E02               	comf	___aomod@dividend+1,f,c
  6269  00264A  6C01               	negf	___aomod@dividend,c
  6270  00264C  0E00               	movlw	0
  6271  00264E  2202               	addwfc	___aomod@dividend+1,f,c
  6272  002650  2203               	addwfc	___aomod@dividend+2,f,c
  6273  002652  2204               	addwfc	___aomod@dividend+3,f,c
  6274  002654  2205               	addwfc	___aomod@dividend+4,f,c
  6275  002656  2206               	addwfc	___aomod@dividend+5,f,c
  6276  002658  2207               	addwfc	___aomod@dividend+6,f,c
  6277  00265A  2208               	addwfc	___aomod@dividend+7,f,c
  6278  00265C                     l2916:
  6279  00265C  FFFF               	dw	65535	; assembler added errata NOP
  6280  00265E  C001  F001         	movff	___aomod@dividend,?___aomod
  6281  002662  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6282  002666  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6283  00266A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6284  00266E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6285  002672  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6286  002676  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6287  00267A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6288  00267E  0012               	return		;funcret
  6289  002680  FFFF               	dw	65535	; errata NOP
  6290  002682                     __end_of___aomod:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function ___aodiv *****************
  6294 ;; Defined at:
  6295 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  dividend        8    0[COMRAM] long long 
  6298 ;;  divisor         8    8[COMRAM] long long 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  quotient        8   18[COMRAM] long long 
  6301 ;;  sign            1   17[COMRAM] unsigned char 
  6302 ;;  counter         1   16[COMRAM] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  8    0[COMRAM] long long 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6312 ;;      Params:        16       0       0       0       0       0       0
  6313 ;;      Locals:        10       0       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0
  6315 ;;      Totals:        26       0       0       0       0       0       0
  6316 ;;Total ram usage:       26 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    2
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_dtoa
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text21
  6327  002170                     __ptext21:
  6328                           	opt callstack 0
  6329  002170                     ___aodiv:
  6330                           	opt callstack 0
  6331  002170  FFFF               	dw	65535	; assembler added errata NOP
  6332                           
  6333                           ;incstack = 0
  6334  002172  0E00               	movlw	0
  6335  002174  6E12               	movwf	___aodiv@sign,c
  6336  002176  AE10               	btfss	___aodiv@divisor+7,7,c
  6337  002178  D012               	goto	l2848
  6338  00217A  1E10               	comf	___aodiv@divisor+7,f,c
  6339  00217C  1E0F               	comf	___aodiv@divisor+6,f,c
  6340  00217E  1E0E               	comf	___aodiv@divisor+5,f,c
  6341  002180  1E0D               	comf	___aodiv@divisor+4,f,c
  6342  002182  1E0C               	comf	___aodiv@divisor+3,f,c
  6343  002184  1E0B               	comf	___aodiv@divisor+2,f,c
  6344  002186  1E0A               	comf	___aodiv@divisor+1,f,c
  6345  002188  6C09               	negf	___aodiv@divisor,c
  6346  00218A  0E00               	movlw	0
  6347  00218C  220A               	addwfc	___aodiv@divisor+1,f,c
  6348  00218E  220B               	addwfc	___aodiv@divisor+2,f,c
  6349  002190  220C               	addwfc	___aodiv@divisor+3,f,c
  6350  002192  220D               	addwfc	___aodiv@divisor+4,f,c
  6351  002194  220E               	addwfc	___aodiv@divisor+5,f,c
  6352  002196  220F               	addwfc	___aodiv@divisor+6,f,c
  6353  002198  2210               	addwfc	___aodiv@divisor+7,f,c
  6354  00219A  0E01               	movlw	1
  6355  00219C  6E12               	movwf	___aodiv@sign,c
  6356  00219E                     l2848:
  6357  00219E  FFFF               	dw	65535	; assembler added errata NOP
  6358  0021A0  AE08               	btfss	___aodiv@dividend+7,7,c
  6359  0021A2  D012               	goto	l2854
  6360  0021A4  1E08               	comf	___aodiv@dividend+7,f,c
  6361  0021A6  1E07               	comf	___aodiv@dividend+6,f,c
  6362  0021A8  1E06               	comf	___aodiv@dividend+5,f,c
  6363  0021AA  1E05               	comf	___aodiv@dividend+4,f,c
  6364  0021AC  1E04               	comf	___aodiv@dividend+3,f,c
  6365  0021AE  1E03               	comf	___aodiv@dividend+2,f,c
  6366  0021B0  1E02               	comf	___aodiv@dividend+1,f,c
  6367  0021B2  6C01               	negf	___aodiv@dividend,c
  6368  0021B4  0E00               	movlw	0
  6369  0021B6  2202               	addwfc	___aodiv@dividend+1,f,c
  6370  0021B8  2203               	addwfc	___aodiv@dividend+2,f,c
  6371  0021BA  2204               	addwfc	___aodiv@dividend+3,f,c
  6372  0021BC  2205               	addwfc	___aodiv@dividend+4,f,c
  6373  0021BE  2206               	addwfc	___aodiv@dividend+5,f,c
  6374  0021C0  2207               	addwfc	___aodiv@dividend+6,f,c
  6375  0021C2  2208               	addwfc	___aodiv@dividend+7,f,c
  6376  0021C4  0E01               	movlw	1
  6377  0021C6  1A12               	xorwf	___aodiv@sign,f,c
  6378  0021C8                     l2854:
  6379  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  6380  0021CA  EE20  F013         	lfsr	2,___aodiv@quotient
  6381  0021CE  0E07               	movlw	7
  6382  0021D0                     u2131:
  6383  0021D0  6ADE               	clrf	postinc2,c
  6384  0021D2  06E8               	decf	wreg,f,c
  6385  0021D4  E2FD               	bc	u2131
  6386  0021D6  5009               	movf	___aodiv@divisor,w,c
  6387  0021D8  100A               	iorwf	___aodiv@divisor+1,w,c
  6388  0021DA  100B               	iorwf	___aodiv@divisor+2,w,c
  6389  0021DC  100C               	iorwf	___aodiv@divisor+3,w,c
  6390  0021DE  100D               	iorwf	___aodiv@divisor+4,w,c
  6391  0021E0  100E               	iorwf	___aodiv@divisor+5,w,c
  6392  0021E2  100F               	iorwf	___aodiv@divisor+6,w,c
  6393  0021E4  1010               	iorwf	___aodiv@divisor+7,w,c
  6394  0021E6  B4D8               	btfsc	status,2,c
  6395  0021E8  D04A               	goto	l2876
  6396  0021EA  0E01               	movlw	1
  6397  0021EC  6E11               	movwf	___aodiv@counter,c
  6398  0021EE  D00B               	goto	l2862
  6399  0021F0                     l2860:
  6400  0021F0  FFFF               	dw	65535	; assembler added errata NOP
  6401  0021F2  90D8               	bcf	status,0,c
  6402  0021F4  3609               	rlcf	___aodiv@divisor,f,c
  6403  0021F6  360A               	rlcf	___aodiv@divisor+1,f,c
  6404  0021F8  360B               	rlcf	___aodiv@divisor+2,f,c
  6405  0021FA  360C               	rlcf	___aodiv@divisor+3,f,c
  6406  0021FC  360D               	rlcf	___aodiv@divisor+4,f,c
  6407  0021FE  360E               	rlcf	___aodiv@divisor+5,f,c
  6408  002200  360F               	rlcf	___aodiv@divisor+6,f,c
  6409  002202  3610               	rlcf	___aodiv@divisor+7,f,c
  6410  002204  2A11               	incf	___aodiv@counter,f,c
  6411  002206                     l2862:
  6412  002206  FFFF               	dw	65535	; assembler added errata NOP
  6413  002208  AE10               	btfss	___aodiv@divisor+7,7,c
  6414  00220A  D7F2               	goto	l2860
  6415  00220C                     u2150:
  6416  00220C  FFFF               	dw	65535	; assembler added errata NOP
  6417  00220E  90D8               	bcf	status,0,c
  6418  002210  3613               	rlcf	___aodiv@quotient,f,c
  6419  002212  3614               	rlcf	___aodiv@quotient+1,f,c
  6420  002214  3615               	rlcf	___aodiv@quotient+2,f,c
  6421  002216  3616               	rlcf	___aodiv@quotient+3,f,c
  6422  002218  3617               	rlcf	___aodiv@quotient+4,f,c
  6423  00221A  3618               	rlcf	___aodiv@quotient+5,f,c
  6424  00221C  3619               	rlcf	___aodiv@quotient+6,f,c
  6425  00221E  361A               	rlcf	___aodiv@quotient+7,f,c
  6426  002220  5009               	movf	___aodiv@divisor,w,c
  6427  002222  5C01               	subwf	___aodiv@dividend,w,c
  6428  002224  500A               	movf	___aodiv@divisor+1,w,c
  6429  002226  5802               	subwfb	___aodiv@dividend+1,w,c
  6430  002228  500B               	movf	___aodiv@divisor+2,w,c
  6431  00222A  5803               	subwfb	___aodiv@dividend+2,w,c
  6432  00222C  500C               	movf	___aodiv@divisor+3,w,c
  6433  00222E  5804               	subwfb	___aodiv@dividend+3,w,c
  6434  002230  500D               	movf	___aodiv@divisor+4,w,c
  6435  002232  5805               	subwfb	___aodiv@dividend+4,w,c
  6436  002234  500E               	movf	___aodiv@divisor+5,w,c
  6437  002236  5806               	subwfb	___aodiv@dividend+5,w,c
  6438  002238  500F               	movf	___aodiv@divisor+6,w,c
  6439  00223A  5807               	subwfb	___aodiv@dividend+6,w,c
  6440  00223C  5010               	movf	___aodiv@divisor+7,w,c
  6441  00223E  5808               	subwfb	___aodiv@dividend+7,w,c
  6442  002240  A0D8               	btfss	status,0,c
  6443  002242  D011               	goto	l2872
  6444  002244  5009               	movf	___aodiv@divisor,w,c
  6445  002246  5E01               	subwf	___aodiv@dividend,f,c
  6446  002248  500A               	movf	___aodiv@divisor+1,w,c
  6447  00224A  5A02               	subwfb	___aodiv@dividend+1,f,c
  6448  00224C  500B               	movf	___aodiv@divisor+2,w,c
  6449  00224E  5A03               	subwfb	___aodiv@dividend+2,f,c
  6450  002250  500C               	movf	___aodiv@divisor+3,w,c
  6451  002252  5A04               	subwfb	___aodiv@dividend+3,f,c
  6452  002254  500D               	movf	___aodiv@divisor+4,w,c
  6453  002256  5A05               	subwfb	___aodiv@dividend+4,f,c
  6454  002258  500E               	movf	___aodiv@divisor+5,w,c
  6455  00225A  5A06               	subwfb	___aodiv@dividend+5,f,c
  6456  00225C  500F               	movf	___aodiv@divisor+6,w,c
  6457  00225E  5A07               	subwfb	___aodiv@dividend+6,f,c
  6458  002260  5010               	movf	___aodiv@divisor+7,w,c
  6459  002262  5A08               	subwfb	___aodiv@dividend+7,f,c
  6460  002264  8013               	bsf	___aodiv@quotient,0,c
  6461  002266                     l2872:
  6462  002266  FFFF               	dw	65535	; assembler added errata NOP
  6463  002268  90D8               	bcf	status,0,c
  6464  00226A  3210               	rrcf	___aodiv@divisor+7,f,c
  6465  00226C  320F               	rrcf	___aodiv@divisor+6,f,c
  6466  00226E  320E               	rrcf	___aodiv@divisor+5,f,c
  6467  002270  320D               	rrcf	___aodiv@divisor+4,f,c
  6468  002272  320C               	rrcf	___aodiv@divisor+3,f,c
  6469  002274  320B               	rrcf	___aodiv@divisor+2,f,c
  6470  002276  320A               	rrcf	___aodiv@divisor+1,f,c
  6471  002278  3209               	rrcf	___aodiv@divisor,f,c
  6472  00227A  2E11               	decfsz	___aodiv@counter,f,c
  6473  00227C  D7C7               	goto	u2150
  6474  00227E                     l2876:
  6475  00227E  FFFF               	dw	65535	; assembler added errata NOP
  6476  002280  5012               	movf	___aodiv@sign,w,c
  6477  002282  B4D8               	btfsc	status,2,c
  6478  002284  D010               	goto	l2880
  6479  002286  1E1A               	comf	___aodiv@quotient+7,f,c
  6480  002288  1E19               	comf	___aodiv@quotient+6,f,c
  6481  00228A  1E18               	comf	___aodiv@quotient+5,f,c
  6482  00228C  1E17               	comf	___aodiv@quotient+4,f,c
  6483  00228E  1E16               	comf	___aodiv@quotient+3,f,c
  6484  002290  1E15               	comf	___aodiv@quotient+2,f,c
  6485  002292  1E14               	comf	___aodiv@quotient+1,f,c
  6486  002294  6C13               	negf	___aodiv@quotient,c
  6487  002296  0E00               	movlw	0
  6488  002298  2214               	addwfc	___aodiv@quotient+1,f,c
  6489  00229A  2215               	addwfc	___aodiv@quotient+2,f,c
  6490  00229C  2216               	addwfc	___aodiv@quotient+3,f,c
  6491  00229E  2217               	addwfc	___aodiv@quotient+4,f,c
  6492  0022A0  2218               	addwfc	___aodiv@quotient+5,f,c
  6493  0022A2  2219               	addwfc	___aodiv@quotient+6,f,c
  6494  0022A4  221A               	addwfc	___aodiv@quotient+7,f,c
  6495  0022A6                     l2880:
  6496  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  6497  0022A8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6498  0022AC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6499  0022B0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6500  0022B4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6501  0022B8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6502  0022BC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6503  0022C0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6504  0022C4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6505  0022C8  0012               	return		;funcret
  6506  0022CA  FFFF               	dw	65535	; errata NOP
  6507  0022CC                     __end_of___aodiv:
  6508                           	opt callstack 0
  6509                           
  6510 ;; *************** function _ctoa *****************
  6511 ;; Defined at:
  6512 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6515 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6516 ;;  c               1   29[COMRAM] unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  w               2   30[COMRAM] int 
  6519 ;;  l               2    0        int 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  2   27[COMRAM] int 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6529 ;;      Params:         3       0       0       0       0       0       0
  6530 ;;      Locals:         2       0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0
  6532 ;;      Totals:         5       0       0       0       0       0       0
  6533 ;;Total ram usage:        5 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    6
  6536 ;; This function calls:
  6537 ;;		_pad
  6538 ;; This function is called by:
  6539 ;;		_vfpfcnvrt
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text22
  6544  002BC8                     __ptext22:
  6545                           	opt callstack 0
  6546  002BC8                     _ctoa:
  6547                           	opt callstack 0
  6548  002BC8  FFFF               	dw	65535	; assembler added errata NOP
  6549                           
  6550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6551                           
  6552                           ;incstack = 0
  6553  002BCA  0100               	movlb	0	; () banked
  6554  002BCC  5191               	movf	_width& (0+255),w,b
  6555  002BCE  1192               	iorwf	(_width+1)& (0+255),w,b
  6556  002BD0  A4D8               	btfss	status,2,c
  6557  002BD2  D005               	goto	l2974
  6558                           
  6559                           ; BSR set to: 0
  6560  002BD4  C091  F01F         	movff	_width,ctoa@w
  6561  002BD8  C092  F020         	movff	_width+1,ctoa@w+1
  6562  002BDC  D007               	goto	l2976
  6563  002BDE                     l2974:
  6564  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  6565                           
  6566                           ; BSR set to: 0
  6567  002BE0  0EFF               	movlw	255
  6568  002BE2  2591               	addwf	_width& (0+255),w,b
  6569  002BE4  6E1F               	movwf	ctoa@w,c
  6570  002BE6  0EFF               	movlw	255
  6571  002BE8  2192               	addwfc	(_width+1)& (0+255),w,b
  6572  002BEA  6E20               	movwf	ctoa@w+1,c
  6573  002BEC                     l2976:
  6574  002BEC  FFFF               	dw	65535	; assembler added errata NOP
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6578  002BEE  C01E  F09B         	movff	ctoa@c,_dbuf
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6582  002BF2  0E00               	movlw	0
  6583  002BF4  6F9C               	movwf	(_dbuf+1)& (0+255),b
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6587  002BF6  C01C  F011         	movff	ctoa@fp,pad@fp
  6588  002BFA  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6589  002BFE  0E9B               	movlw	low _dbuf
  6590  002C00  6E13               	movwf	pad@buf,c
  6591  002C02  0E00               	movlw	high _dbuf
  6592  002C04  6E14               	movwf	pad@buf+1,c
  6593  002C06  C01F  F015         	movff	ctoa@w,pad@p
  6594  002C0A  C020  F016         	movff	ctoa@w+1,pad@p+1
  6595  002C0E  ECC4  F014         	call	_pad	;wreg free
  6596  002C12  C011  F01C         	movff	?_pad,?_ctoa
  6597  002C16  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6598  002C1A  0012               	return		;funcret
  6599  002C1C  FFFF               	dw	65535	; errata NOP
  6600  002C1E                     __end_of_ctoa:
  6601                           	opt callstack 0
  6602                           
  6603 ;; *************** function _pad *****************
  6604 ;; Defined at:
  6605 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6608 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6609 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6610 ;;		 -> dbuf(32), 
  6611 ;;  p               2   20[COMRAM] int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  w               2   25[COMRAM] int 
  6614 ;;  i               2   23[COMRAM] int 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2   16[COMRAM] int 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6624 ;;      Params:         6       0       0       0       0       0       0
  6625 ;;      Locals:         4       0       0       0       0       0       0
  6626 ;;      Temps:          1       0       0       0       0       0       0
  6627 ;;      Totals:        11       0       0       0       0       0       0
  6628 ;;Total ram usage:       11 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    5
  6631 ;; This function calls:
  6632 ;;		_fputc
  6633 ;;		_fputs
  6634 ;;		_strlen
  6635 ;; This function is called by:
  6636 ;;		_ctoa
  6637 ;;		_dtoa
  6638 ;;		_otoa
  6639 ;;		_utoa
  6640 ;;		_xtoa
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text23
  6645  002988                     __ptext23:
  6646                           	opt callstack 0
  6647  002988                     _pad:
  6648                           	opt callstack 0
  6649  002988  FFFF               	dw	65535	; assembler added errata NOP
  6650                           
  6651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6652                           
  6653                           ;incstack = 0
  6654  00298A  0100               	movlb	0	; () banked
  6655  00298C  A195               	btfss	_flags& (0+255),0,b
  6656  00298E  D00A               	goto	l2790
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6660  002990  C013  F00A         	movff	pad@buf,fputs@s
  6661  002994  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6662  002998  C011  F00C         	movff	pad@fp,fputs@fp
  6663  00299C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6664  0029A0  EC77  F016         	call	_fputs	;wreg free
  6665  0029A4                     l2790:
  6666  0029A4  FFFF               	dw	65535	; assembler added errata NOP
  6667                           
  6668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6669  0029A6  BE16               	btfsc	pad@p+1,7,c
  6670  0029A8  D005               	goto	l2794
  6671  0029AA  C015  F01A         	movff	pad@p,pad@w
  6672  0029AE  C016  F01B         	movff	pad@p+1,pad@w+1
  6673  0029B2  D005               	goto	l338
  6674  0029B4                     l2794:
  6675  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  6676  0029B6  0E00               	movlw	0
  6677  0029B8  6E1B               	movwf	pad@w+1,c
  6678  0029BA  0E00               	movlw	0
  6679  0029BC  6E1A               	movwf	pad@w,c
  6680  0029BE                     l338:
  6681  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  6682                           
  6683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6684  0029C0  0E00               	movlw	0
  6685  0029C2  6E19               	movwf	pad@i+1,c
  6686  0029C4  0E00               	movlw	0
  6687  0029C6  6E18               	movwf	pad@i,c
  6688                           
  6689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6690  0029C8  D00D               	goto	l2800
  6691  0029CA                     l2796:
  6692  0029CA  FFFF               	dw	65535	; assembler added errata NOP
  6693                           
  6694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6695  0029CC  0E00               	movlw	0
  6696  0029CE  6E02               	movwf	fputc@c+1,c
  6697  0029D0  0E20               	movlw	32
  6698  0029D2  6E01               	movwf	fputc@c,c
  6699  0029D4  C011  F003         	movff	pad@fp,fputc@fp
  6700  0029D8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6701  0029DC  EC6E  F014         	call	_fputc	;wreg free
  6702                           
  6703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6704  0029E0  4A18               	infsnz	pad@i,f,c
  6705  0029E2  2A19               	incf	pad@i+1,f,c
  6706  0029E4                     l2800:
  6707  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  6708                           
  6709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6710  0029E6  501A               	movf	pad@w,w,c
  6711  0029E8  5C18               	subwf	pad@i,w,c
  6712  0029EA  5019               	movf	pad@i+1,w,c
  6713  0029EC  0A80               	xorlw	128
  6714  0029EE  6E17               	movwf	??_pad& (0+255),c
  6715  0029F0  501B               	movf	pad@w+1,w,c
  6716  0029F2  0A80               	xorlw	128
  6717  0029F4  5817               	subwfb	??_pad& (0+255),w,c
  6718  0029F6  A0D8               	btfss	status,0,c
  6719  0029F8  D7E8               	goto	l2796
  6720                           
  6721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6722  0029FA  0100               	movlb	0	; () banked
  6723  0029FC  B195               	btfsc	_flags& (0+255),0,b
  6724  0029FE  D00A               	goto	l2804
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6728  002A00  C013  F00A         	movff	pad@buf,fputs@s
  6729  002A04  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6730  002A08  C011  F00C         	movff	pad@fp,fputs@fp
  6731  002A0C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6732  002A10  EC77  F016         	call	_fputs	;wreg free
  6733  002A14                     l2804:
  6734  002A14  FFFF               	dw	65535	; assembler added errata NOP
  6735                           
  6736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6737  002A16  C013  F001         	movff	pad@buf,strlen@s
  6738  002A1A  C014  F002         	movff	pad@buf+1,strlen@s+1
  6739  002A1E  EC46  F017         	call	_strlen	;wreg free
  6740  002A22  501A               	movf	pad@w,w,c
  6741  002A24  2401               	addwf	?_strlen,w,c
  6742  002A26  6E11               	movwf	?_pad,c
  6743  002A28  501B               	movf	pad@w+1,w,c
  6744  002A2A  2002               	addwfc	?_strlen+1,w,c
  6745  002A2C  6E12               	movwf	?_pad+1,c
  6746  002A2E  0012               	return		;funcret
  6747  002A30  FFFF               	dw	65535	; errata NOP
  6748  002A32                     __end_of_pad:
  6749                           	opt callstack 0
  6750                           
  6751 ;; *************** function _strlen *****************
  6752 ;; Defined at:
  6753 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6756 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6759 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  2    0[COMRAM] unsigned int 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6769 ;;      Params:         2       0       0       0       0       0       0
  6770 ;;      Locals:         2       0       0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0
  6772 ;;      Totals:         4       0       0       0       0       0       0
  6773 ;;Total ram usage:        4 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    2
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_pad
  6780 ;;		_stoa
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text24
  6785  002E8C                     __ptext24:
  6786                           	opt callstack 0
  6787  002E8C                     _strlen:
  6788                           	opt callstack 0
  6789  002E8C  FFFF               	dw	65535	; assembler added errata NOP
  6790                           
  6791                           ;incstack = 0
  6792  002E8E  C001  F003         	movff	strlen@s,strlen@a
  6793  002E92  C002  F004         	movff	strlen@s+1,strlen@a+1
  6794  002E96  D003               	goto	l2776
  6795  002E98                     l2774:
  6796  002E98  FFFF               	dw	65535	; assembler added errata NOP
  6797  002E9A  4A01               	infsnz	strlen@s,f,c
  6798  002E9C  2A02               	incf	strlen@s+1,f,c
  6799  002E9E                     l2776:
  6800  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  6801  002EA0  C001  FFD9         	movff	strlen@s,fsr2l
  6802  002EA4  C002  FFDA         	movff	strlen@s+1,fsr2h
  6803  002EA8  50DF               	movf	indf2,w,c
  6804  002EAA  A4D8               	btfss	status,2,c
  6805  002EAC  D7F5               	goto	l2774
  6806  002EAE  5003               	movf	strlen@a,w,c
  6807  002EB0  5C01               	subwf	strlen@s,w,c
  6808  002EB2  6E01               	movwf	?_strlen,c
  6809  002EB4  5004               	movf	strlen@a+1,w,c
  6810  002EB6  5802               	subwfb	strlen@s+1,w,c
  6811  002EB8  6E02               	movwf	?_strlen+1,c
  6812  002EBA  0012               	return		;funcret
  6813  002EBC  FFFF               	dw	65535	; errata NOP
  6814  002EBE                     __end_of_strlen:
  6815                           	opt callstack 0
  6816                           
  6817 ;; *************** function _fputs *****************
  6818 ;; Defined at:
  6819 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6822 ;;		 -> dbuf(32), 
  6823 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6824 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  i               2   14[COMRAM] int 
  6827 ;;  c               1   13[COMRAM] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  2    9[COMRAM] int 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6837 ;;      Params:         4       0       0       0       0       0       0
  6838 ;;      Locals:         3       0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0
  6840 ;;      Totals:         7       0       0       0       0       0       0
  6841 ;;Total ram usage:        7 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    4
  6844 ;; This function calls:
  6845 ;;		_fputc
  6846 ;; This function is called by:
  6847 ;;		_pad
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text25
  6852  002CEE                     __ptext25:
  6853                           	opt callstack 0
  6854  002CEE                     _fputs:
  6855                           	opt callstack 0
  6856  002CEE  FFFF               	dw	65535	; assembler added errata NOP
  6857                           
  6858                           ;incstack = 0
  6859  002CF0  0E00               	movlw	0
  6860  002CF2  6E10               	movwf	fputs@i+1,c
  6861  002CF4  0E00               	movlw	0
  6862  002CF6  6E0F               	movwf	fputs@i,c
  6863  002CF8  D00C               	goto	l2770
  6864  002CFA                     l2766:
  6865  002CFA  FFFF               	dw	65535	; assembler added errata NOP
  6866  002CFC  C00E  F001         	movff	fputs@c,fputc@c
  6867  002D00  6A02               	clrf	fputc@c+1,c
  6868  002D02  C00C  F003         	movff	fputs@fp,fputc@fp
  6869  002D06  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6870  002D0A  EC6E  F014         	call	_fputc	;wreg free
  6871  002D0E  4A0F               	infsnz	fputs@i,f,c
  6872  002D10  2A10               	incf	fputs@i+1,f,c
  6873  002D12                     l2770:
  6874  002D12  FFFF               	dw	65535	; assembler added errata NOP
  6875  002D14  500F               	movf	fputs@i,w,c
  6876  002D16  240A               	addwf	fputs@s,w,c
  6877  002D18  6ED9               	movwf	fsr2l,c
  6878  002D1A  5010               	movf	fputs@i+1,w,c
  6879  002D1C  200B               	addwfc	fputs@s+1,w,c
  6880  002D1E  6EDA               	movwf	fsr2h,c
  6881  002D20  50DF               	movf	indf2,w,c
  6882  002D22  6E0E               	movwf	fputs@c,c
  6883  002D24  500E               	movf	fputs@c,w,c
  6884  002D26  B4D8               	btfsc	status,2,c
  6885  002D28  0012               	return		;funcret
  6886  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  6887  002D2C  D7E6               	goto	l2766
  6888  002D2E  FFFF               	dw	65535	; errata NOP
  6889  002D30                     __end_of_fputs:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _fputc *****************
  6893 ;; Defined at:
  6894 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  c               2    0[COMRAM] int 
  6897 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6898 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  2    0[COMRAM] int 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6910 ;;      Params:         4       0       0       0       0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0
  6912 ;;      Temps:          5       0       0       0       0       0       0
  6913 ;;      Totals:         9       0       0       0       0       0       0
  6914 ;;Total ram usage:        9 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		_putch
  6919 ;; This function is called by:
  6920 ;;		_pad
  6921 ;;		_stoa
  6922 ;;		_vfpfcnvrt
  6923 ;;		_fputs
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text26
  6928  0028DC                     __ptext26:
  6929                           	opt callstack 0
  6930  0028DC                     _fputc:
  6931                           	opt callstack 0
  6932  0028DC  FFFF               	dw	65535	; assembler added errata NOP
  6933                           
  6934                           ;incstack = 0
  6935  0028DE  5003               	movf	fputc@fp,w,c
  6936  0028E0  1004               	iorwf	fputc@fp+1,w,c
  6937  0028E2  B4D8               	btfsc	status,2,c
  6938  0028E4  D004               	goto	u1900
  6939  0028E6  5003               	movf	fputc@fp,w,c
  6940  0028E8  1004               	iorwf	fputc@fp+1,w,c
  6941  0028EA  A4D8               	btfss	status,2,c
  6942  0028EC  D005               	goto	l2756
  6943  0028EE                     u1900:
  6944  0028EE  FFFF               	dw	65535	; assembler added errata NOP
  6945  0028F0  5001               	movf	fputc@c,w,c
  6946  0028F2  ECD4  F017         	call	_putch
  6947  0028F6  D045               	goto	l1306
  6948  0028F8                     l2756:
  6949  0028F8  FFFF               	dw	65535	; assembler added errata NOP
  6950  0028FA  EE20 F004          	lfsr	2,4
  6951  0028FE  5003               	movf	fputc@fp,w,c
  6952  002900  26D9               	addwf	fsr2l,f,c
  6953  002902  5004               	movf	fputc@fp+1,w,c
  6954  002904  22DA               	addwfc	fsr2h,f,c
  6955  002906  50DE               	movf	postinc2,w,c
  6956  002908  10DE               	iorwf	postinc2,w,c
  6957  00290A  B4D8               	btfsc	status,2,c
  6958  00290C  D016               	goto	u1920
  6959  00290E  EE20 F004          	lfsr	2,4
  6960  002912  5003               	movf	fputc@fp,w,c
  6961  002914  26D9               	addwf	fsr2l,f,c
  6962  002916  5004               	movf	fputc@fp+1,w,c
  6963  002918  22DA               	addwfc	fsr2h,f,c
  6964  00291A  EE10 F002          	lfsr	1,2
  6965  00291E  5003               	movf	fputc@fp,w,c
  6966  002920  26E1               	addwf	fsr1l,f,c
  6967  002922  5004               	movf	fputc@fp+1,w,c
  6968  002924  22E2               	addwfc	fsr1h,f,c
  6969  002926  50DE               	movf	postinc2,w,c
  6970  002928  5CE6               	subwf	postinc1,w,c
  6971  00292A  50E6               	movf	postinc1,w,c
  6972  00292C  0A80               	xorlw	128
  6973  00292E  6E09               	movwf	(??_fputc+4)& (0+255),c
  6974  002930  50DE               	movf	postinc2,w,c
  6975  002932  0A80               	xorlw	128
  6976  002934  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6977  002936  B0D8               	btfsc	status,0,c
  6978  002938  D024               	goto	l1306
  6979  00293A                     u1920:
  6980  00293A  FFFF               	dw	65535	; assembler added errata NOP
  6981  00293C  EE20 F002          	lfsr	2,2
  6982  002940  5003               	movf	fputc@fp,w,c
  6983  002942  26D9               	addwf	fsr2l,f,c
  6984  002944  5004               	movf	fputc@fp+1,w,c
  6985  002946  22DA               	addwfc	fsr2h,f,c
  6986  002948  CFDE F005          	movff	postinc2,??_fputc
  6987  00294C  CFDD F006          	movff	postdec2,??_fputc+1
  6988  002950  C003  FFD9         	movff	fputc@fp,fsr2l
  6989  002954  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6990  002958  CFDE F007          	movff	postinc2,??_fputc+2
  6991  00295C  CFDD F008          	movff	postdec2,??_fputc+3
  6992  002960  5005               	movf	??_fputc,w,c
  6993  002962  2407               	addwf	??_fputc+2,w,c
  6994  002964  6ED9               	movwf	fsr2l,c
  6995  002966  5006               	movf	??_fputc+1,w,c
  6996  002968  2008               	addwfc	??_fputc+3,w,c
  6997  00296A  6EDA               	movwf	fsr2h,c
  6998  00296C  C001  FFDF         	movff	fputc@c,indf2
  6999  002970  EE20 F002          	lfsr	2,2
  7000  002974  5003               	movf	fputc@fp,w,c
  7001  002976  26D9               	addwf	fsr2l,f,c
  7002  002978  5004               	movf	fputc@fp+1,w,c
  7003  00297A  22DA               	addwfc	fsr2h,f,c
  7004  00297C  2ADE               	incf	postinc2,f,c
  7005  00297E  0E00               	movlw	0
  7006  002980  22DD               	addwfc	postdec2,f,c
  7007  002982                     l1306:
  7008  002982  FFFF               	dw	65535	; assembler added errata NOP
  7009  002984  0012               	return		;funcret
  7010  002986  FFFF               	dw	65535	; errata NOP
  7011  002988                     __end_of_fputc:
  7012                           	opt callstack 0
  7013                           
  7014 ;; *************** function _putch *****************
  7015 ;; Defined at:
  7016 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  c               1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  c               1    0[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7030 ;;      Params:         0       0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    2
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_fputc
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text27
  7045  002FA8                     __ptext27:
  7046                           	opt callstack 0
  7047  002FA8                     _putch:
  7048                           	opt callstack 0
  7049  002FA8  FFFF               	dw	65535	; assembler added errata NOP
  7050                           
  7051                           ;incstack = 0
  7052  002FAA  0012               	return		;funcret
  7053  002FAC  FFFF               	dw	65535	; errata NOP
  7054  002FAE                     __end_of_putch:
  7055                           	opt callstack 0
  7056                           
  7057 ;; *************** function _atoi *****************
  7058 ;; Defined at:
  7059 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7062 ;;		 -> STR_2(3), STR_1(4), 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  n               2   20[COMRAM] int 
  7065 ;;  neg             2   13[COMRAM] int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  2    7[COMRAM] int 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7075 ;;      Params:         2       0       0       0       0       0       0
  7076 ;;      Locals:         9       0       0       0       0       0       0
  7077 ;;      Temps:          4       0       0       0       0       0       0
  7078 ;;      Totals:        15       0       0       0       0       0       0
  7079 ;;Total ram usage:       15 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    3
  7082 ;; This function calls:
  7083 ;;		___wmul
  7084 ;;		_isdigit
  7085 ;;		_isspace
  7086 ;; This function is called by:
  7087 ;;		_vfpfcnvrt
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text28
  7092  00200A                     __ptext28:
  7093                           	opt callstack 0
  7094  00200A                     _atoi:
  7095                           	opt callstack 0
  7096  00200A  FFFF               	dw	65535	; assembler added errata NOP
  7097                           
  7098                           ;incstack = 0
  7099  00200C  0E00               	movlw	0
  7100  00200E  6E16               	movwf	atoi@n+1,c
  7101  002010  0E00               	movlw	0
  7102  002012  6E15               	movwf	atoi@n,c
  7103  002014  0E00               	movlw	0
  7104  002016  6E0F               	movwf	atoi@neg+1,c
  7105  002018  0E00               	movlw	0
  7106  00201A  6E0E               	movwf	atoi@neg,c
  7107  00201C  D003               	goto	l3242
  7108  00201E                     l3240:
  7109  00201E  FFFF               	dw	65535	; assembler added errata NOP
  7110  002020  4A08               	infsnz	atoi@s,f,c
  7111  002022  2A09               	incf	atoi@s+1,f,c
  7112  002024                     l3242:
  7113  002024  FFFF               	dw	65535	; assembler added errata NOP
  7114  002026  0E01               	movlw	1
  7115  002028  6E14               	movwf	_atoi$1697,c
  7116  00202A  C008  FFF6         	movff	atoi@s,tblptrl
  7117  00202E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7118  002032                     	if	0	;tblptru may be non-zero
  7119  002032                     	endif
  7120  002032                     	if	0	;tblptru may be non-zero
  7121  002032                     	endif
  7122  002032  0008               	tblrd		*
  7123  002034  FFFF               	dw	65535	; errata NOP
  7124  002036  50F5               	movf	tablat,w,c
  7125  002038  0A20               	xorlw	32
  7126  00203A  B4D8               	btfsc	status,2,c
  7127  00203C  D019               	goto	l3250
  7128  00203E  0EF7               	movlw	247
  7129  002040  6E0A               	movwf	??_atoi& (0+255),c
  7130  002042  0EFF               	movlw	255
  7131  002044  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7132  002046  C008  FFF6         	movff	atoi@s,tblptrl
  7133  00204A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7134  00204E                     	if	0	;tblptru may be non-zero
  7135  00204E                     	endif
  7136  00204E                     	if	0	;tblptru may be non-zero
  7137  00204E                     	endif
  7138  00204E  0008               	tblrd		*
  7139  002050  FFFF               	dw	65535	; errata NOP
  7140  002052  50F5               	movf	tablat,w,c
  7141  002054  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7142  002056  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7143  002058  500A               	movf	??_atoi,w,c
  7144  00205A  260C               	addwf	??_atoi+2,f,c
  7145  00205C  500B               	movf	??_atoi+1,w,c
  7146  00205E  220D               	addwfc	??_atoi+3,f,c
  7147  002060  500D               	movf	??_atoi+3,w,c
  7148  002062  E104               	bnz	u2930
  7149  002064  0E05               	movlw	5
  7150  002066  5C0C               	subwf	??_atoi+2,w,c
  7151  002068  A0D8               	btfss	status,0,c
  7152  00206A  D002               	goto	l3250
  7153  00206C                     u2930:
  7154  00206C  0E00               	movlw	0
  7155  00206E  6E14               	movwf	_atoi$1697,c
  7156  002070                     l3250:
  7157  002070  FFFF               	dw	65535	; assembler added errata NOP
  7158  002072  C014  F010         	movff	_atoi$1697,_atoi$1696
  7159  002076  6A11               	clrf	_atoi$1696+1,c
  7160  002078  5010               	movf	_atoi$1696,w,c
  7161  00207A  1011               	iorwf	_atoi$1696+1,w,c
  7162  00207C  B4D8               	btfsc	status,2,c
  7163  00207E  D00A               	goto	l3260
  7164  002080  D7CE               	goto	l3240
  7165  002082                     l3256:
  7166  002082  FFFF               	dw	65535	; assembler added errata NOP
  7167  002084  0E00               	movlw	0
  7168  002086  6E0F               	movwf	atoi@neg+1,c
  7169  002088  0E01               	movlw	1
  7170  00208A  6E0E               	movwf	atoi@neg,c
  7171  00208C                     l3258:
  7172  00208C  FFFF               	dw	65535	; assembler added errata NOP
  7173  00208E  4A08               	infsnz	atoi@s,f,c
  7174  002090  2A09               	incf	atoi@s+1,f,c
  7175  002092  D032               	goto	l3266
  7176  002094                     l3260:
  7177  002094  FFFF               	dw	65535	; assembler added errata NOP
  7178  002096  C008  FFF6         	movff	atoi@s,tblptrl
  7179  00209A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7180  00209E                     	if	0	;tblptru may be non-zero
  7181  00209E                     	endif
  7182  00209E                     	if	0	;tblptru may be non-zero
  7183  00209E                     	endif
  7184  00209E  0008               	tblrd		*
  7185  0020A0  FFFF               	dw	65535	; errata NOP
  7186  0020A2  50F5               	movf	tablat,w,c
  7187  0020A4  6E0A               	movwf	??_atoi& (0+255),c
  7188  0020A6  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7189                           
  7190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7191                           ; Switch size 1, requested type "simple"
  7192                           ; Number of cases is 1, Range of values is 0 to 0
  7193                           ; switch strategies available:
  7194                           ; Name         Instructions Cycles
  7195                           ; simple_byte            4     3 (average)
  7196                           ;	Chosen strategy is simple_byte
  7197  0020A8  500B               	movf	??_atoi+1,w,c
  7198  0020AA  0A00               	xorlw	0	; case 0
  7199  0020AC  A4D8               	btfss	status,2,c
  7200  0020AE  D024               	goto	l3266
  7201                           
  7202                           ; Switch size 1, requested type "simple"
  7203                           ; Number of cases is 2, Range of values is 43 to 45
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte            7     4 (average)
  7207                           ;	Chosen strategy is simple_byte
  7208  0020B0  500A               	movf	??_atoi,w,c
  7209  0020B2  0A2B               	xorlw	43	; case 43
  7210  0020B4  B4D8               	btfsc	status,2,c
  7211  0020B6  D7EA               	goto	l3258
  7212  0020B8  0A06               	xorlw	6	; case 45
  7213  0020BA  B4D8               	btfsc	status,2,c
  7214  0020BC  D7E2               	goto	l3256
  7215  0020BE  D01C               	goto	l3266
  7216  0020C0                     l3262:
  7217  0020C0  FFFF               	dw	65535	; assembler added errata NOP
  7218  0020C2  C015  F001         	movff	atoi@n,___wmul@multiplier
  7219  0020C6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7220  0020CA  0E00               	movlw	0
  7221  0020CC  6E04               	movwf	___wmul@multiplicand+1,c
  7222  0020CE  0E0A               	movlw	10
  7223  0020D0  6E03               	movwf	___wmul@multiplicand,c
  7224  0020D2  EC5F  F017         	call	___wmul	;wreg free
  7225  0020D6  C008  FFF6         	movff	atoi@s,tblptrl
  7226  0020DA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7227  0020DE                     	if	0	;tblptru may be non-zero
  7228  0020DE                     	endif
  7229  0020DE                     	if	0	;tblptru may be non-zero
  7230  0020DE                     	endif
  7231  0020DE  0008               	tblrd		*
  7232  0020E0  FFFF               	dw	65535	; errata NOP
  7233  0020E2  50F5               	movf	tablat,w,c
  7234  0020E4  5E01               	subwf	?___wmul,f,c
  7235  0020E6  0E00               	movlw	0
  7236  0020E8  5A02               	subwfb	?___wmul+1,f,c
  7237  0020EA  0E30               	movlw	48
  7238  0020EC  2401               	addwf	?___wmul,w,c
  7239  0020EE  6E15               	movwf	atoi@n,c
  7240  0020F0  0E00               	movlw	0
  7241  0020F2  2002               	addwfc	?___wmul+1,w,c
  7242  0020F4  6E16               	movwf	atoi@n+1,c
  7243  0020F6  D7CA               	goto	l3258
  7244  0020F8                     l3266:
  7245  0020F8  FFFF               	dw	65535	; assembler added errata NOP
  7246  0020FA  0ED0               	movlw	208
  7247  0020FC  6E0A               	movwf	??_atoi& (0+255),c
  7248  0020FE  0EFF               	movlw	255
  7249  002100  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7250  002102  C008  FFF6         	movff	atoi@s,tblptrl
  7251  002106  C009  FFF7         	movff	atoi@s+1,tblptrh
  7252  00210A                     	if	0	;tblptru may be non-zero
  7253  00210A                     	endif
  7254  00210A                     	if	0	;tblptru may be non-zero
  7255  00210A                     	endif
  7256  00210A  0008               	tblrd		*
  7257  00210C  FFFF               	dw	65535	; errata NOP
  7258  00210E  50F5               	movf	tablat,w,c
  7259  002110  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7260  002112  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7261  002114  500A               	movf	??_atoi,w,c
  7262  002116  260C               	addwf	??_atoi+2,f,c
  7263  002118  500B               	movf	??_atoi+1,w,c
  7264  00211A  220D               	addwfc	??_atoi+3,f,c
  7265  00211C  500D               	movf	??_atoi+3,w,c
  7266  00211E  E106               	bnz	u2950
  7267  002120  0E0A               	movlw	10
  7268  002122  5C0C               	subwf	??_atoi+2,w,c
  7269  002124  B0D8               	btfsc	status,0,c
  7270  002126  D002               	goto	u2950
  7271  002128  0E01               	movlw	1
  7272  00212A  D002               	goto	u2960
  7273  00212C                     u2950:
  7274  00212C  FFFF               	dw	65535	; assembler added errata NOP
  7275  00212E  0E00               	movlw	0
  7276  002130                     u2960:
  7277  002130  FFFF               	dw	65535	; assembler added errata NOP
  7278  002132  6E12               	movwf	_atoi$1698,c
  7279  002134  6A13               	clrf	_atoi$1698+1,c
  7280  002136  5012               	movf	_atoi$1698,w,c
  7281  002138  1013               	iorwf	_atoi$1698+1,w,c
  7282  00213A  A4D8               	btfss	status,2,c
  7283  00213C  D7C1               	goto	l3262
  7284  00213E  500E               	movf	atoi@neg,w,c
  7285  002140  100F               	iorwf	atoi@neg+1,w,c
  7286  002142  A4D8               	btfss	status,2,c
  7287  002144  D00D               	goto	l1260
  7288  002146  C015  F00A         	movff	atoi@n,??_atoi
  7289  00214A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7290  00214E  1E0A               	comf	??_atoi,f,c
  7291  002150  1E0B               	comf	??_atoi+1,f,c
  7292  002152  4A0A               	infsnz	??_atoi,f,c
  7293  002154  2A0B               	incf	??_atoi+1,f,c
  7294  002156  C00A  F008         	movff	??_atoi,?_atoi
  7295  00215A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7296  00215E  D005               	goto	l1263
  7297  002160                     l1260:
  7298  002160  FFFF               	dw	65535	; assembler added errata NOP
  7299  002162  C015  F008         	movff	atoi@n,?_atoi
  7300  002166  C016  F009         	movff	atoi@n+1,?_atoi+1
  7301  00216A                     l1263:
  7302  00216A  FFFF               	dw	65535	; assembler added errata NOP
  7303  00216C  0012               	return		;funcret
  7304  00216E  FFFF               	dw	65535	; errata NOP
  7305  002170                     __end_of_atoi:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _isspace *****************
  7309 ;; Defined at:
  7310 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  c               2    0[COMRAM] int 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  2    0[COMRAM] int 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7324 ;;      Params:         2       0       0       0       0       0       0
  7325 ;;      Locals:         1       0       0       0       0       0       0
  7326 ;;      Temps:          4       0       0       0       0       0       0
  7327 ;;      Totals:         7       0       0       0       0       0       0
  7328 ;;Total ram usage:        7 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    2
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_atoi
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text29
  7339  002C66                     __ptext29:
  7340                           	opt callstack 0
  7341  002C66                     _isspace:
  7342                           	opt callstack 0
  7343  002C66  FFFF               	dw	65535	; assembler added errata NOP
  7344                           
  7345                           ;incstack = 0
  7346  002C68  0E01               	movlw	1
  7347  002C6A  6E07               	movwf	_isspace$1733,c
  7348  002C6C  0E20               	movlw	32
  7349  002C6E  1801               	xorwf	isspace@c,w,c
  7350  002C70  1002               	iorwf	isspace@c+1,w,c
  7351  002C72  B4D8               	btfsc	status,2,c
  7352  002C74  D014               	goto	l2966
  7353  002C76  0EF7               	movlw	247
  7354  002C78  6E03               	movwf	??_isspace& (0+255),c
  7355  002C7A  0EFF               	movlw	255
  7356  002C7C  6E04               	movwf	(??_isspace+1)& (0+255),c
  7357  002C7E  C001  F005         	movff	isspace@c,??_isspace+2
  7358  002C82  C002  F006         	movff	isspace@c+1,??_isspace+3
  7359  002C86  5003               	movf	??_isspace,w,c
  7360  002C88  2605               	addwf	??_isspace+2,f,c
  7361  002C8A  5004               	movf	??_isspace+1,w,c
  7362  002C8C  2206               	addwfc	??_isspace+3,f,c
  7363  002C8E  5006               	movf	??_isspace+3,w,c
  7364  002C90  E104               	bnz	u2320
  7365  002C92  0E05               	movlw	5
  7366  002C94  5C05               	subwf	??_isspace+2,w,c
  7367  002C96  A0D8               	btfss	status,0,c
  7368  002C98  D002               	goto	l2966
  7369  002C9A                     u2320:
  7370  002C9A  0E00               	movlw	0
  7371  002C9C  6E07               	movwf	_isspace$1733,c
  7372  002C9E                     l2966:
  7373  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  7374  002CA0  C007  F001         	movff	_isspace$1733,?_isspace
  7375  002CA4  6A02               	clrf	?_isspace+1,c
  7376  002CA6  0012               	return		;funcret
  7377  002CA8  FFFF               	dw	65535	; errata NOP
  7378  002CAA                     __end_of_isspace:
  7379                           	opt callstack 0
  7380                           
  7381 ;; *************** function _isdigit *****************
  7382 ;; Defined at:
  7383 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  c               2    0[COMRAM] int 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2    0[COMRAM] int 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7397 ;;      Params:         2       0       0       0       0       0       0
  7398 ;;      Locals:         0       0       0       0       0       0       0
  7399 ;;      Temps:          4       0       0       0       0       0       0
  7400 ;;      Totals:         6       0       0       0       0       0       0
  7401 ;;Total ram usage:        6 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:    2
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_vfpfcnvrt
  7408 ;;		_atoi
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text30
  7413  002E54                     __ptext30:
  7414                           	opt callstack 0
  7415  002E54                     _isdigit:
  7416                           	opt callstack 0
  7417  002E54  FFFF               	dw	65535	; assembler added errata NOP
  7418                           
  7419                           ;incstack = 0
  7420  002E56  0ED0               	movlw	208
  7421  002E58  6E03               	movwf	??_isdigit& (0+255),c
  7422  002E5A  0EFF               	movlw	255
  7423  002E5C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7424  002E5E  C001  F005         	movff	isdigit@c,??_isdigit+2
  7425  002E62  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7426  002E66  5003               	movf	??_isdigit,w,c
  7427  002E68  2605               	addwf	??_isdigit+2,f,c
  7428  002E6A  5004               	movf	??_isdigit+1,w,c
  7429  002E6C  2206               	addwfc	??_isdigit+3,f,c
  7430  002E6E  5006               	movf	??_isdigit+3,w,c
  7431  002E70  E106               	bnz	u2090
  7432  002E72  0E0A               	movlw	10
  7433  002E74  5C05               	subwf	??_isdigit+2,w,c
  7434  002E76  B0D8               	btfsc	status,0,c
  7435  002E78  D002               	goto	u2090
  7436  002E7A  0E01               	movlw	1
  7437  002E7C  D002               	goto	u2100
  7438  002E7E                     u2090:
  7439  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  7440  002E80  0E00               	movlw	0
  7441  002E82                     u2100:
  7442  002E82  FFFF               	dw	65535	; assembler added errata NOP
  7443  002E84  6E01               	movwf	?_isdigit,c
  7444  002E86  6A02               	clrf	?_isdigit+1,c
  7445  002E88  0012               	return		;funcret
  7446  002E8A  FFFF               	dw	65535	; errata NOP
  7447  002E8C                     __end_of_isdigit:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function ___wmul *****************
  7451 ;; Defined at:
  7452 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  multiplier      2    0[COMRAM] unsigned int 
  7455 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  product         2    4[COMRAM] unsigned int 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  2    0[COMRAM] unsigned int 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, prodl, prodh
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7467 ;;      Params:         4       0       0       0       0       0       0
  7468 ;;      Locals:         2       0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0
  7470 ;;      Totals:         6       0       0       0       0       0       0
  7471 ;;Total ram usage:        6 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    2
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_atoi
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text31
  7482  002EBE                     __ptext31:
  7483                           	opt callstack 0
  7484  002EBE                     ___wmul:
  7485                           	opt callstack 0
  7486  002EBE  FFFF               	dw	65535	; assembler added errata NOP
  7487                           
  7488                           ;incstack = 0
  7489  002EC0  5001               	movf	___wmul@multiplier,w,c
  7490  002EC2  0203               	mulwf	___wmul@multiplicand,c
  7491  002EC4  CFF3 F005          	movff	prodl,___wmul@product
  7492  002EC8  CFF4 F006          	movff	prodh,___wmul@product+1
  7493  002ECC  5001               	movf	___wmul@multiplier,w,c
  7494  002ECE  0204               	mulwf	___wmul@multiplicand+1,c
  7495  002ED0  50F3               	movf	prodl,w,c
  7496  002ED2  2606               	addwf	___wmul@product+1,f,c
  7497  002ED4  5002               	movf	___wmul@multiplier+1,w,c
  7498  002ED6  0203               	mulwf	___wmul@multiplicand,c
  7499  002ED8  50F3               	movf	prodl,w,c
  7500  002EDA  2606               	addwf	___wmul@product+1,f,c
  7501  002EDC  C005  F001         	movff	___wmul@product,?___wmul
  7502  002EE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7503  002EE4  0012               	return		;funcret
  7504  002EE6  FFFF               	dw	65535	; errata NOP
  7505  002EE8                     __end_of___wmul:
  7506                           	opt callstack 0
  7507                           
  7508 ;; *************** function _getchar *****************
  7509 ;; Defined at:
  7510 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  2   26[None  ] int 
  7517 ;; Registers used:
  7518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7524 ;;      Params:         0       0       0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    4
  7531 ;; This function calls:
  7532 ;;		_fgetc
  7533 ;; This function is called by:
  7534 ;;		_int_to_char
  7535 ;;		_float_to_char
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text32
  7540  002F7C                     __ptext32:
  7541                           	opt callstack 0
  7542  002F7C                     _getchar:
  7543                           	opt callstack 0
  7544  002F7C  FFFF               	dw	65535	; assembler added errata NOP
  7545                           
  7546                           ;	Return value of _getchar is never used
  7547                           
  7548                           ;incstack = 0
  7549  002F7E  0E00               	movlw	0
  7550  002F80  6E03               	movwf	fgetc@fp,c
  7551  002F82  0E00               	movlw	0
  7552  002F84  6E04               	movwf	fgetc@fp+1,c
  7553  002F86  EC19  F015         	call	_fgetc	;wreg free
  7554  002F8A  0012               	return		;funcret
  7555  002F8C  FFFF               	dw	65535	; errata NOP
  7556  002F8E                     __end_of_getchar:
  7557                           	opt callstack 0
  7558                           
  7559 ;; *************** function _fgetc *****************
  7560 ;; Defined at:
  7561 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7564 ;;		 -> NULL(0), 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  c               2    9[COMRAM] int 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  2    2[COMRAM] int 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7576 ;;      Params:         2       0       0       0       0       0       0
  7577 ;;      Locals:         2       0       0       0       0       0       0
  7578 ;;      Temps:          5       0       0       0       0       0       0
  7579 ;;      Totals:         9       0       0       0       0       0       0
  7580 ;;Total ram usage:        9 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    3
  7583 ;; This function calls:
  7584 ;;		_getch
  7585 ;; This function is called by:
  7586 ;;		_getchar
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text33
  7591  002A32                     __ptext33:
  7592                           	opt callstack 0
  7593  002A32                     _fgetc:
  7594                           	opt callstack 0
  7595  002A32  FFFF               	dw	65535	; assembler added errata NOP
  7596                           
  7597                           ;incstack = 0
  7598  002A34  5003               	movf	fgetc@fp,w,c
  7599  002A36  1004               	iorwf	fgetc@fp+1,w,c
  7600  002A38  A4D8               	btfss	status,2,c
  7601  002A3A  D012               	goto	l3700
  7602  002A3C  507E               	movf	_ungetcnt,w,c
  7603  002A3E  B4D8               	btfsc	status,2,c
  7604  002A40  D007               	goto	l3698
  7605  002A42  0E00               	movlw	0
  7606  002A44  6E0B               	movwf	fgetc@c+1,c
  7607  002A46  0E00               	movlw	0
  7608  002A48  6E0A               	movwf	fgetc@c,c
  7609  002A4A  0E00               	movlw	0
  7610  002A4C  6E7E               	movwf	_ungetcnt,c
  7611  002A4E  D02F               	goto	l3702
  7612  002A50                     l3698:
  7613  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7614  002A52  ECC7  F017         	call	_getch	;wreg free
  7615  002A56  C001  F00A         	movff	?_getch,fgetc@c
  7616  002A5A  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7617  002A5E  D027               	goto	l3702
  7618  002A60                     l3700:
  7619  002A60  FFFF               	dw	65535	; assembler added errata NOP
  7620  002A62  EE20 F002          	lfsr	2,2
  7621  002A66  5003               	movf	fgetc@fp,w,c
  7622  002A68  26D9               	addwf	fsr2l,f,c
  7623  002A6A  5004               	movf	fgetc@fp+1,w,c
  7624  002A6C  22DA               	addwfc	fsr2h,f,c
  7625  002A6E  CFDE F005          	movff	postinc2,??_fgetc
  7626  002A72  CFDD F006          	movff	postdec2,??_fgetc+1
  7627  002A76  C003  FFD9         	movff	fgetc@fp,fsr2l
  7628  002A7A  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7629  002A7E  CFDE F007          	movff	postinc2,??_fgetc+2
  7630  002A82  CFDD F008          	movff	postdec2,??_fgetc+3
  7631  002A86  5005               	movf	??_fgetc,w,c
  7632  002A88  2407               	addwf	??_fgetc+2,w,c
  7633  002A8A  6ED9               	movwf	fsr2l,c
  7634  002A8C  5006               	movf	??_fgetc+1,w,c
  7635  002A8E  2008               	addwfc	??_fgetc+3,w,c
  7636  002A90  6EDA               	movwf	fsr2h,c
  7637  002A92  50DF               	movf	indf2,w,c
  7638  002A94  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7639  002A96  5009               	movf	??_fgetc+4,w,c
  7640  002A98  6E0A               	movwf	fgetc@c,c
  7641  002A9A  6A0B               	clrf	fgetc@c+1,c
  7642  002A9C  EE20 F002          	lfsr	2,2
  7643  002AA0  5003               	movf	fgetc@fp,w,c
  7644  002AA2  26D9               	addwf	fsr2l,f,c
  7645  002AA4  5004               	movf	fgetc@fp+1,w,c
  7646  002AA6  22DA               	addwfc	fsr2h,f,c
  7647  002AA8  2ADE               	incf	postinc2,f,c
  7648  002AAA  0E00               	movlw	0
  7649  002AAC  22DD               	addwfc	postdec2,f,c
  7650  002AAE                     l3702:
  7651  002AAE  FFFF               	dw	65535	; assembler added errata NOP
  7652  002AB0  C00A  F003         	movff	fgetc@c,?_fgetc
  7653  002AB4  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7654  002AB8  0012               	return		;funcret
  7655  002ABA  FFFF               	dw	65535	; errata NOP
  7656  002ABC                     __end_of_fgetc:
  7657                           	opt callstack 0
  7658                           
  7659 ;; *************** function _getch *****************
  7660 ;; Defined at:
  7661 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  2    0[COMRAM] int 
  7668 ;; Registers used:
  7669 ;;		None
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7675 ;;      Params:         2       0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0
  7678 ;;      Totals:         2       0       0       0       0       0       0
  7679 ;;Total ram usage:        2 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    2
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_fgetc
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text34
  7690  002F8E                     __ptext34:
  7691                           	opt callstack 0
  7692  002F8E                     _getch:
  7693                           	opt callstack 0
  7694  002F8E  FFFF               	dw	65535	; assembler added errata NOP
  7695                           
  7696                           ;incstack = 0
  7697  002F90  6801               	setf	?_getch,c
  7698  002F92  6802               	setf	?_getch+1,c
  7699  002F94  0012               	return		;funcret
  7700  002F96  FFFF               	dw	65535	; errata NOP
  7701  002F98                     __end_of_getch:
  7702                           	opt callstack 0
  7703                           
  7704 ;; *************** function _initialize_TX *****************
  7705 ;; Defined at:
  7706 ;;		line 23 in file "serial.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7720 ;;      Params:         0       0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    2
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text35
  7735  002F2C                     __ptext35:
  7736                           	opt callstack 0
  7737  002F2C                     _initialize_TX:
  7738                           	opt callstack 0
  7739  002F2C  FFFF               	dw	65535	; assembler added errata NOP
  7740                           
  7741                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7742                           
  7743                           ;incstack = 0
  7744  002F2E  8CAC               	bsf	4012,6,c	;volatile
  7745                           
  7746                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7747  002F30  8AAC               	bsf	4012,5,c	;volatile
  7748                           
  7749                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7750  002F32  98AC               	bcf	4012,4,c	;volatile
  7751                           
  7752                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7753  002F34  94AC               	bcf	4012,2,c	;volatile
  7754                           
  7755                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7756  002F36  80AC               	bsf	4012,0,c	;volatile
  7757                           
  7758                           ;serial.c: 29:   SPBRG = 25;
  7759  002F38  0E19               	movlw	25
  7760  002F3A  6EAF               	movwf	4015,c	;volatile
  7761  002F3C  0012               	return		;funcret
  7762  002F3E  FFFF               	dw	65535	; errata NOP
  7763  002F40                     __end_of_initialize_TX:
  7764                           	opt callstack 0
  7765                           
  7766 ;; *************** function _initialize_RX *****************
  7767 ;; Defined at:
  7768 ;;		line 32 in file "serial.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7782 ;;      Params:         0       0       0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    2
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_main
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text36
  7797  002F40                     __ptext36:
  7798                           	opt callstack 0
  7799  002F40                     _initialize_RX:
  7800                           	opt callstack 0
  7801  002F40  FFFF               	dw	65535	; assembler added errata NOP
  7802                           
  7803                           ;serial.c: 33:   RCSTA = 0x00;
  7804                           
  7805                           ;incstack = 0
  7806  002F42  0E00               	movlw	0
  7807  002F44  6EAB               	movwf	4011,c	;volatile
  7808                           
  7809                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7810  002F46  8EAB               	bsf	4011,7,c	;volatile
  7811                           
  7812                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7813  002F48  8CAB               	bsf	4011,6,c	;volatile
  7814                           
  7815                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7816  002F4A  88AB               	bsf	4011,4,c	;volatile
  7817                           
  7818                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7819  002F4C  96AB               	bcf	4011,3,c	;volatile
  7820                           
  7821                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7822  002F4E  80AB               	bsf	4011,0,c	;volatile
  7823  002F50  0012               	return		;funcret
  7824  002F52  FFFF               	dw	65535	; errata NOP
  7825  002F54                     __end_of_initialize_RX:
  7826                           	opt callstack 0
  7827                           
  7828 ;; *************** function _UARTSendString *****************
  7829 ;; Defined at:
  7830 ;;		line 65 in file "serial.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  c               2   32[BANK0 ] PTR unsigned char 
  7833 ;;		 -> int_to_char@result(10), 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  i               2   34[BANK0 ] int 
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7845 ;;      Params:         0       2       0       0       0       0       0
  7846 ;;      Locals:         0       2       0       0       0       0       0
  7847 ;;      Temps:          0       0       0       0       0       0       0
  7848 ;;      Totals:         0       4       0       0       0       0       0
  7849 ;;Total ram usage:        4 bytes
  7850 ;; Hardware stack levels used:    1
  7851 ;; Hardware stack levels required when called:    3
  7852 ;; This function calls:
  7853 ;;		_UARTSendChar
  7854 ;; This function is called by:
  7855 ;;		_main
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text37
  7860  002CAA                     __ptext37:
  7861                           	opt callstack 0
  7862  002CAA                     _UARTSendString:
  7863                           	opt callstack 0
  7864  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  7865                           
  7866                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  7867                           
  7868                           ;incstack = 0
  7869  002CAC  9E94               	bcf	3988,7,c	;volatile
  7870                           
  7871                           ;serial.c: 67:   int i = 0;
  7872  002CAE  0E00               	movlw	0
  7873  002CB0  0100               	movlb	0	; () banked
  7874  002CB2  6FDE               	movwf	(UARTSendString@i+1)& (0+255),b
  7875  002CB4  0E00               	movlw	0
  7876  002CB6  6FDD               	movwf	UARTSendString@i& (0+255),b
  7877                           
  7878                           ;serial.c: 68:   while (c[i] != '\0') {
  7879  002CB8  D00D               	goto	l3820
  7880  002CBA                     l3816:
  7881  002CBA  FFFF               	dw	65535	; assembler added errata NOP
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;serial.c: 69:     UARTSendChar(c[i]);
  7885  002CBC  51DD               	movf	UARTSendString@i& (0+255),w,b
  7886  002CBE  25DB               	addwf	UARTSendString@c& (0+255),w,b
  7887  002CC0  6ED9               	movwf	fsr2l,c
  7888  002CC2  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  7889  002CC4  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7890  002CC6  6EDA               	movwf	fsr2h,c
  7891  002CC8  50DF               	movf	indf2,w,c
  7892  002CCA  ECB4  F017         	call	_UARTSendChar
  7893                           
  7894                           ;serial.c: 70:     i++;
  7895  002CCE  0100               	movlb	0	; () banked
  7896  002CD0  4BDD               	infsnz	UARTSendString@i& (0+255),f,b
  7897  002CD2  2BDE               	incf	(UARTSendString@i+1)& (0+255),f,b
  7898  002CD4                     l3820:
  7899  002CD4  FFFF               	dw	65535	; assembler added errata NOP
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;serial.c: 68:   while (c[i] != '\0') {
  7903  002CD6  51DD               	movf	UARTSendString@i& (0+255),w,b
  7904  002CD8  25DB               	addwf	UARTSendString@c& (0+255),w,b
  7905  002CDA  6ED9               	movwf	fsr2l,c
  7906  002CDC  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  7907  002CDE  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  7908  002CE0  6EDA               	movwf	fsr2h,c
  7909  002CE2  50DF               	movf	indf2,w,c
  7910  002CE4  B4D8               	btfsc	status,2,c
  7911                           
  7912                           ; BSR set to: 0
  7913  002CE6  0012               	return		;funcret
  7914  002CE8  FFFF               	dw	65535	; assembler added errata NOP
  7915  002CEA  D7E7               	goto	l3816
  7916  002CEC  FFFF               	dw	65535	; errata NOP
  7917  002CEE                     __end_of_UARTSendString:
  7918                           	opt callstack 0
  7919                           
  7920 ;; *************** function _UARTNewLine *****************
  7921 ;; Defined at:
  7922 ;;		line 41 in file "serial.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7936 ;;      Params:         0       0       0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    3
  7943 ;; This function calls:
  7944 ;;		_UARTSendChar
  7945 ;; This function is called by:
  7946 ;;		_main
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text38
  7951  002F54                     __ptext38:
  7952                           	opt callstack 0
  7953  002F54                     _UARTNewLine:
  7954                           	opt callstack 0
  7955  002F54  FFFF               	dw	65535	; assembler added errata NOP
  7956                           
  7957                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;incstack = 0
  7961  002F56  9E94               	bcf	3988,7,c	;volatile
  7962                           
  7963                           ;serial.c: 43:   UARTSendChar(0x0a);
  7964  002F58  0E0A               	movlw	10
  7965  002F5A  ECB4  F017         	call	_UARTSendChar
  7966                           
  7967                           ;serial.c: 44:   UARTSendChar(0x0d);
  7968  002F5E  0E0D               	movlw	13
  7969  002F60  ECB4  F017         	call	_UARTSendChar
  7970  002F64  0012               	return		;funcret
  7971  002F66  FFFF               	dw	65535	; errata NOP
  7972  002F68                     __end_of_UARTNewLine:
  7973                           	opt callstack 0
  7974                           
  7975 ;; *************** function _UARTSendChar *****************
  7976 ;; Defined at:
  7977 ;;		line 47 in file "serial.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  c               1    wreg     unsigned char 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  c               1    0[COMRAM] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7991 ;;      Params:         0       0       0       0       0       0       0
  7992 ;;      Locals:         1       0       0       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0
  7994 ;;      Totals:         1       0       0       0       0       0       0
  7995 ;;Total ram usage:        1 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    2
  7998 ;; This function calls:
  7999 ;;		Nothing
  8000 ;; This function is called by:
  8001 ;;		_UARTNewLine
  8002 ;;		_UARTSendString
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text39
  8007  002F68                     __ptext39:
  8008                           	opt callstack 0
  8009  002F68                     _UARTSendChar:
  8010                           	opt callstack 0
  8011  002F68  FFFF               	dw	65535	; assembler added errata NOP
  8012                           
  8013                           ;incstack = 0
  8014                           ;UARTSendChar@c stored from wreg
  8015  002F6A  6E01               	movwf	UARTSendChar@c,c
  8016                           
  8017                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  8018  002F6C  9E94               	bcf	3988,7,c	;volatile
  8019  002F6E                     l174:
  8020  002F6E  FFFF               	dw	65535	; assembler added errata NOP
  8021  002F70  A2AC               	btfss	4012,1,c	;volatile
  8022  002F72  D7FD               	goto	l174
  8023                           
  8024                           ;serial.c: 50:   TXREG = c;
  8025  002F74  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  8026  002F78  0012               	return		;funcret
  8027  002F7A  FFFF               	dw	65535	; errata NOP
  8028  002F7C                     __end_of_UARTSendChar:
  8029                           	opt callstack 0
  8030                           
  8031 ;; *************** function _timingISR *****************
  8032 ;; Defined at:
  8033 ;;		line 31 in file "timer.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8047 ;;      Params:         0       0       0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    1
  8054 ;; This function calls:
  8055 ;;		_Timer0_StartTimer
  8056 ;; This function is called by:
  8057 ;;		Interrupt level 2
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	intcode
  8062  000008                     __pintcode:
  8063                           	opt callstack 0
  8064  000008                     _timingISR:
  8065                           	opt callstack 0
  8066  000008  FFFF               	dw	65535	; assembler added errata NOP
  8067                           
  8068                           ;incstack = 0
  8069  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8070                           
  8071                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  8072  00000C  B4F2               	btfsc	4082,2,c	;volatile
  8073  00000E  AAF2               	btfss	4082,5,c	;volatile
  8074  000010  D00D               	goto	i2l239
  8075                           
  8076                           ;timer.c: 33:   TMR0IF = 0;
  8077  000012  94F2               	bcf	4082,2,c	;volatile
  8078                           
  8079                           ;timer.c: 34:   time_ms++;
  8080  000014  0E01               	movlw	1
  8081  000016  0100               	movlb	0	; () banked
  8082  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
  8083  00001A  0E00               	movlw	0
  8084  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  8085  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  8086  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;timer.c: 35:   TMR0H = 0xFF;
  8090  000022  68D7               	setf	4055,c	;volatile
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;timer.c: 36:   TMR0L = 0x34;
  8094  000024  0E34               	movlw	52
  8095  000026  6ED6               	movwf	4054,c	;volatile
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;timer.c: 37:   Timer0_StartTimer();
  8099  000028  ECCC  F017         	call	_Timer0_StartTimer	;wreg free
  8100  00002C                     i2l239:
  8101  00002C  FFFF               	dw	65535	; assembler added errata NOP
  8102  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8103  000030  0011               	retfie		f
  8104  000032  FFFF               	dw	65535	; errata NOP
  8105  000034                     __end_of_timingISR:
  8106                           	opt callstack 0
  8107                           
  8108 ;; *************** function _Timer0_StartTimer *****************
  8109 ;; Defined at:
  8110 ;;		line 21 in file "timer.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  2  229[None  ] int 
  8117 ;; Registers used:
  8118 ;;		None
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8124 ;;      Params:         0       0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_timingISR
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text41
  8138  002F98                     __ptext41:
  8139                           	opt callstack 0
  8140  002F98                     _Timer0_StartTimer:
  8141                           	opt callstack 0
  8142  002F98  FFFF               	dw	65535	; assembler added errata NOP
  8143                           
  8144                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  8145                           
  8146                           ;incstack = 0
  8147  002F9A  8ED5               	bsf	4053,7,c	;volatile
  8148                           
  8149                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  8150  002F9C  0012               	return		;funcret
  8151  002F9E  FFFF               	dw	65535	; errata NOP
  8152  002FA0                     __end_of_Timer0_StartTimer:
  8153                           	opt callstack 0
  8154                           
  8155                           	psect	rparam
  8156  0000                     
  8157                           	psect	temp
  8158  00007F                     btemp:
  8159                           	opt callstack 0
  8160  00007F                     	ds	1
  8161  0000                     int$flags	set	btemp
  8162  0000                     wtemp8	set	btemp+1
  8163  0000                     ttemp5	set	btemp+1
  8164  0000                     ttemp6	set	btemp+4
  8165  0000                     ttemp7	set	btemp+8
  8166                           tosu	equ	0xFFF
  8167                           tosh	equ	0xFFE
  8168                           tosl	equ	0xFFD
  8169                           stkptr	equ	0xFFC
  8170                           pclatu	equ	0xFFB
  8171                           pclath	equ	0xFFA
  8172                           pcl	equ	0xFF9
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           indf0	equ	0xFEF
  8180                           postinc0	equ	0xFEE
  8181                           postdec0	equ	0xFED
  8182                           preinc0	equ	0xFEC
  8183                           plusw0	equ	0xFEB
  8184                           fsr0h	equ	0xFEA
  8185                           fsr0l	equ	0xFE9
  8186                           wreg	equ	0xFE8
  8187                           indf1	equ	0xFE7
  8188                           postinc1	equ	0xFE6
  8189                           postdec1	equ	0xFE5
  8190                           preinc1	equ	0xFE4
  8191                           plusw1	equ	0xFE3
  8192                           fsr1h	equ	0xFE2
  8193                           fsr1l	equ	0xFE1
  8194                           bsr	equ	0xFE0
  8195                           indf2	equ	0xFDF
  8196                           postinc2	equ	0xFDE
  8197                           postdec2	equ	0xFDD
  8198                           preinc2	equ	0xFDC
  8199                           plusw2	equ	0xFDB
  8200                           fsr2h	equ	0xFDA
  8201                           fsr2l	equ	0xFD9
  8202                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     38     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1699_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   49770
                                             36 BANK0      2     2      0
                        _UARTNewLine
                     _UARTSendString
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                            _read_op
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     272
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_op                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49106
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _read_op (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     340
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
                            _read_op (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                  _Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) _Timer0_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _read_op (ARG)
       _sprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op (ARG)
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _read_op (ARG)
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _read_op
   _write_op

 _timingISR (ROOT)
   _Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      68       5       81.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6      15        0.0%
DATA                 0      0      E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 27 04:59:09 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                        __CFG_OSC$HS 000000  
                                                                l401 2336  
                                                                l420 1CD0  
                                                                l174 2F6E  
                                                                l422 1CDA  
                                                                l338 29BE  
                                                                l435 1A78  
                                                                l356 186A  
                                                                l381 1E92  
                                                                l437 1A82  
                                                                l358 1874  
                                                                l383 1E9C  
                                                                l497 17E6  
                                                                l992 2738  
                                                       __CFG_CPB$OFF 000000  
                                                                _RC0 007C10  
                                                                _RB5 007C0D  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _abs 2DA8  
                                                                _lcd 0080  
                                                                _pad 2988  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       __CFG_LVP$OFF 000000  
                                                       __CFG_WDT$OFF 000000  
                                                               l1002 28B6  
                                                               ?_abs 0013  
                                                               l1232 2DDE  
                                                               l1306 2982  
                                                               l1260 2160  
                                                               l3004 1892  
                                                               l1229 2DD4  
                                                               l3102 22F8  
                                                               l1263 216A  
                                                               l3008 18A2  
                                                               l3120 238C  
                                                               l3112 2350  
                                                               l1360 281A  
                                                               l3042 1A28  
                                                               l3018 199C  
                                                               l3130 23D2  
                                                               l1370 2BB8  
                                                               l3210 1B86  
                                                               l3060 1EDC  
                                                               l3116 236A  
                                                               l3038 1A0C  
                                                               l3134 23EC  
                                                               l3126 23B4  
                                                               l3310 0698  
                                                               l1375 2BC2  
                                                               l3240 201E  
                                                               l3072 1F68  
                                                               l3312 069E  
                                                               l3250 2070  
                                                               l3242 2024  
                                                               l3090 1FDC  
                                                               l3234 1C80  
                                                               l3218 1C02  
                                                               l3330 06D0  
                                                               l3322 06C0  
                                                               l3314 06B0  
                                                               l3260 2094  
                                                               l3148 1D12  
                                                               l3262 20C0  
                                                               l3158 1E00  
                                                               l3182 1A98  
                                                               l3406 0AD2  
                                                               l3350 07B6  
                                                               l3334 06DE  
                                                               l3326 06C8  
                                                               l3318 06B8  
                                                               l3256 2082  
                                                               l2800 29E4  
                                                               l3416 0B4E  
                                                               l3352 07C6  
                                                               l3336 0724  
                                                               l3266 20F8  
                                                               l3258 208C  
                                                               l3610 154C  
                                                               l3506 0FBE  
                                                               l3426 0C2E  
                                                               l3370 08BE  
                                                               l3700 2A60  
                                                               l2804 2A14  
                                                               l2900 25BA  
                                                               l3196 1AEC  
                                                               l3188 1AC8  
                                                               l3516 1050  
                                                               l3460 0DDE  
                                                               l3444 0D88  
                                                               l3436 0CD8  
                                                               l3372 08CE  
                                                               l3348 0796  
                                                               l3702 2AAE  
                                                               l2902 25D0  
                                                               l3286 278A  
                                                               l3550 1276  
                                                               l3542 11C8  
                                                               l3534 1156  
                                                               l3526 10BC  
                                                               l2912 2634  
                                                               l3288 279A  
                                                               l3624 15AC  
                                                               l3392 0A2E  
                                                               l3368 089E  
                                                               l2770 2D12  
                                                               l3490 0F80  
                                                               l3482 0F44  
                                                               l3386 0988  
                                                               l3820 2CD4  
                                                               l2756 28F8  
                                                               l2860 21F0  
                                                               l2916 265C  
                                                               l2908 261C  
                                                               l3652 174C  
                                                               l3476 0ED2  
                                                               l3468 0E5E  
                                                               l3396 0A68  
                                                               l2766 2CFA  
                                                               l2774 2E98  
                                                               l2790 29A4  
                                                               l2862 2206  
                                                               l2854 21C8  
                                                               l2926 26AA  
                                                               l3662 179A  
                                                               l3638 1682  
                                                               l3582 13C0  
                                                               l3574 134C  
                                                               l3566 12CC  
                                                               l3486 0F50  
                                                               ?_pad 0011  
                                                               l3816 2CBA  
                                                               l2776 2E9E  
                                                               l2880 22A6  
                                                               l2872 2266  
                                                               l2848 219E  
                                                               l2928 26C0  
                                                               l3496 0F94  
                                                               l3920 2424  
                                                               l2794 29B4  
                                                               l2938 2720  
                                                               l2954 289E  
                                                               l2946 283C  
                                                               l3658 178C  
                                                               l3690 2AFA  
                                                               l2796 29CA  
                                                               l2876 227E  
                                                               l2892 2578  
                                                               l2948 2852  
                                                               l3596 14CA  
                                                               l3668 17AE  
                                                               l2966 2C9E  
                                                               l2974 2BDE  
                                                               l2990 1848  
                                                               l2976 2BEC  
                                                               l2896 259E  
                                                               l3688 2AD2  
                                                               l3698 2A50  
                                                               STR_1 061D  
                                                               STR_2 0648  
                                                               STR_3 0605  
                                                               STR_5 0605  
                                                               STR_7 0609  
                                                               STR_9 0609  
                                                               u2010 2DB8  
                                                               u2100 2E82  
                                                               u2020 2E46  
                                                               u2030 2E4A  
                                                               u2040 2D9A  
                                                               u2210 25D6  
                                                               u2050 2D9E  
                                                               u2131 21D0  
                                                               u2060 2B9C  
                                                               u3100 0806  
                                                               u2150 220C  
                                                               u3030 27F0  
                                                               u2070 2BA0  
                                                               u3110 0814  
                                                               u2320 2C9A  
                                                               u2400 188A  
                                                               u2241 268A  
                                                               u2090 2E7E  
                                                               u2410 19AC  
                                                               u3210 0AC2  
                                                               u2340 1816  
                                                               u2500 1E86  
                                                               u2260 26C6  
                                                               u3140 090A  
                                                               u2430 19CE  
                                                               u2350 181A  
                                                               u2510 1F42  
                                                               u3230 0B0C  
                                                               u3150 090E  
                                                               u2431 19CC  
                                                               u2440 19DE  
                                                               u2520 1F78  
                                                               u3320 0E8C  
                                                               u3160 091C  
                                                               u2450 19E4  
                                                               u2290 2858  
                                                               u3250 0BA8  
                                                               u3090 0802  
                                                               u2515 1F2E  
                                                               u1900 28EE  
                                                               u2380 185E  
                                                               u2540 1F9A  
                                                               u3500 1586  
                                                               u2470 19F4  
                                                               u2550 1FAA  
                                                               u3270 0C88  
                                                               u3190 09E2  
                                                               u1920 293A  
                                                               u2560 1FB0  
                                                               u2640 2380  
                                                               u2720 1E2C  
                                                               u2800 1B26  
                                                               u3520 1606  
                                                               u3440 137A  
                                                               u2721 1E2A  
                                                               u2730 1E3C  
                                                               u3370 107E  
                                                               u2740 1E42  
                                                               u2900 1C4C  
                                                               u2820 1B60  
                                                               u3540 16DC  
                                                               u3460 141A  
                                                               u2670 2402  
                                                               u1950 2E0E  
                                                               u2830 1B64  
                                                               u2591 22D8  
                                                               u1960 2E12  
                                                               u2760 1A6C  
                                                               u3480 1524  
                                                               u2930 206C  
                                                               u2690 1CC4  
                                                               u2850 1BDC  
                                                               u2860 1C14  
                                                               u2780 1AE8  
                                                               u2950 212C  
                                                               u2790 1B22  
                                                               u2855 1BC8  
                                                               u2960 2130  
                                                               u2880 1C36  
                                                               u2881 1C34  
                                                               u3737 243C  
                                                               u2890 1C46  
                                                               u3747 2462  
                                                               _RCIF 007CF5  
                                                               u3757 24B0  
                                                               u3767 24F4  
                                                               u3777 2538  
                                                       __CFG_STVR$ON 000000  
                                                               abs@a 0013  
                                                               _dbuf 009B  
                                                               _flag 009A  
                                                               _atoi 200A  
                                                               _ctoa 2BC8  
                                                               _main 2410  
                                                               _dtoa 17EC  
                                                               _prec 0093  
                                                               _otoa 1E70  
                                                               _nout 008F  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr1h 000FE2  
                                                               fsr2h 000FDA  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 22CC  
                                                               btemp 007F  
                                                               _utoa 1CAE  
                                                               _xtoa 1A56  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                                  int_to_char@result 00CD  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                                      __CFG_OSCS$OFF 000000  
                                                    __end_of___aodiv 22CC  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                    __end_of___aomod 2682  
                                                              STR_21 0627  
                                                              STR_14 0606  
                                                              STR_30 062A  
                                                              STR_23 0627  
                                                              STR_32 062A  
                                                              STR_41 0611  
                                                              STR_25 062D  
                                                              STR_18 060A  
                                                              STR_34 0630  
                                                              STR_27 062D  
                                                              STR_51 0639  
                                                              STR_36 0630  
                                                              STR_61 060D  
                                                              STR_46 0612  
                                                              STR_54 063C  
                                                              STR_71 0633  
                                                              STR_39 0611  
                                                              STR_56 063C  
                                                              STR_81 0615  
                                                              STR_49 0639  
                                                              STR_66 060E  
                                                              STR_74 0636  
                                                              STR_91 061E  
                                                              STR_59 060D  
                                                              STR_76 0636  
                                                              STR_69 0633  
                                                              STR_86 0616  
                                                              STR_94 063F  
                                                              STR_79 0615  
                                                              STR_96 063F  
                                                              ?_otoa 001C  
                                                              STR_99 0619  
                                                              ?_stoa 000A  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 275E  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 28DC  
                                                              i2l239 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_getchar 2F8E  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _fgetc 2A32  
                                                              _flags 0095  
                                                              _getch 2F8E  
                                                              _errno 008D  
                                                              _fputc 28DC  
                                                    __end_of_isalpha 2DA8  
                                                              _fputs 2CEE  
                                                    __end_of_isdigit 2E8C  
                                                    __end_of_read_op 2F2C  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 0091  
                                                              ctoa@c 001E  
                                                              _putch 2FA8  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 2E1C  
                                                    __end_of_isspace 2CAA  
                                                    __end_of_isupper 2E54  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 2B72  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 2820  
                                                    __end_of_toupper 2BC8  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1853 000D  
                                                    __initialization 2D30  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2170  
                                                       __end_of_ctoa 2C1E  
                                                       __end_of_main 254A  
                                                       __end_of_dtoa 1A56  
                                                       __end_of_otoa 200A  
                                                       __end_of_stoa 2410  
                                                       __end_of_utoa 1E70  
                                                       __end_of_xtoa 1CAE  
                                                 int_to_char@the_num 00D7  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00DF  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             STR_101 0619  
                                                             STR_110 061A  
                                                             ?_fputs 000A  
                                                             STR_103 0601  
                                                             STR_105 0601  
                                                             STR_121 0621  
                                                             STR_114 0602  
                                                             STR_130 0624  
                                                             _ADRESH 000FC4  
                                                             STR_123 0621  
                                                             STR_132 0624  
                                                             STR_117 0642  
                                                             STR_126 0645  
                                                             _ADRESL 000FC3  
                                                             STR_119 0642  
                                                             STR_128 0645  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                     __CFG_WDTPS$128 000000  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                    write_op@address 0002  
                                                       vfprintf@cfmt 0078  
                                                          ??___aodiv 0011  
                                                          ??___aomod 0011  
                                                             ___wmul 2EBE  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                             clear_0 2D56  
                                            __size_of_UARTSendString 0044  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 2E8C  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ??_read_op 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 2B1C  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                   __end_of_write_op 2F0A  
                                                         __accesstop 0080  
                                            __end_of__initialization 2D5E  
                                                      ___rparam_used 000001  
                                                     __pcstackCOMRAM 0001  
                                                       __pidataBANK0 2FA0  
                                                      __end_of_fgetc 2ABC  
                                                      __end_of_getch 2F98  
                                                      __end_of_fputc 2988  
                                                      __end_of_fputs 2D30  
                                                      __end_of_putch 2FAE  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 0080  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 2F40  
                                                      _initialize_TX 2F2C  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                            ?_strlen 0001  
                                                 __size_of_timingISR 002C  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2170  
                                                            ___aomod 254A  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 2682  
                                                            ___lomod 2820  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 2CAA  
                                                            __pcinit 2D30  
                                                            __ramtop 0600  
                                                            __ptext0 2410  
                                                            __ptext1 2EE8  
                                                            __ptext2 2F0A  
                                                            __ptext3 2C1E  
                                                            __ptext4 2B1C  
                                                            __ptext5 2ABC  
                                                            __ptext6 064C  
                                                            __ptext7 1A56  
                                                            __ptext8 2B72  
                                                            __ptext9 2DE4  
                                                          ?_write_op 0001  
                                                            _getchar 2F7C  
                                                          _T0CONbits 000FD5  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 2D6C  
                                                            _isdigit 2E54  
                                                            _read_op 2F0A  
                                                            _islower 2DE4  
                                                            _isspace 2C66  
                                                            _isupper 2E1C  
                                                            fgetc@fp 0003  
                                                            _time_ms 0089  
                                                            atoi@neg 000E  
                                                            _sprintf 2B1C  
                                                            _strncmp 275E  
                                                            _toupper 2B72  
                                               end_of_initialization 2D5E  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                  __end_of_timingISR 0034  
                                                  __end_of_vfpfcnvrt 17EC  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 2CEE  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                         ??_write_op 0002  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 2F98  
                                                 ?_Timer0_StartTimer 0001  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00DB  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 2EE8  
                                                        vfpfcnvrt@vp 0067  
                                          __end_of_Timer0_StartTimer 2FA0  
                                                     __end_of_strlen 2EBE  
                                                start_initialization 2D30  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 2DE4  
                                                        __end_of_pad 2A32  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00E1  
                                               __end_of_UARTSendChar 2F7C  
                                                           ??_strlen 0003  
                                                        __pbssCOMRAM 007E  
                                                      __pcstackBANK0 00BB  
                                                   ___aodiv@dividend 0001  
                                                      ??_int_to_char 007E  
                                                          _atoi$1696 0010  
                                                          _atoi$1697 0014  
                                                          _atoi$1698 0012  
                                                          _dtoa$1050 002E  
                                                      UARTSendChar@c 0001  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___lodiv 0001  
                                                           ?___lomod 0001  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           ?_read_op 0001  
                                                  __size_of_write_op 0022  
                                                           ?_islower 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 00BB  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00DB  
                                                    UARTSendString@i 00DD  
                                                __end_of_int_to_char 2C66  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 0085  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 064C  
                                                          _xtoa$1086 002F  
                                                          _xtoa$1087 0031  
                                                  ___wmul@multiplier 0001  
                                                       _isspace$1733 0007  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 2D44  
                                                   ??_UARTSendString 007E  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 2F68  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___aomod 0138  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 00BD  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_read_op 0022  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 2E1C  
                                                           __ptext11 2D6C  
                                                           __ptext20 254A  
                                                           __ptext12 1CAE  
                                                           __ptext21 2170  
                                                           __ptext13 2820  
                                                           __ptext30 2E54  
                                                           __ptext22 2BC8  
                                                           __ptext14 2682  
                                                           __ptext31 2EBE  
                                                           __ptext23 2988  
                                                           __ptext15 275E  
                                                           __ptext32 2F7C  
                                                           __ptext24 2E8C  
                                                           __ptext16 22CC  
                                                           __ptext41 2F98  
                                                           __ptext33 2A32  
                                                           __ptext25 2CEE  
                                                           __ptext17 1E70  
                                                           __ptext34 2F8E  
                                                           __ptext26 28DC  
                                                           __ptext18 17EC  
                                                           __ptext35 2F2C  
                                                           __ptext27 2FA8  
                                                           __ptext19 2DA8  
                                                           __ptext36 2F40  
                                                           __ptext28 200A  
                                                           __ptext37 2CAA  
                                                           __ptext29 2C66  
                                                           __ptext38 2F54  
                                                           __ptext39 2F68  
                                                   __size_of_isupper 0038  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                    _interval_events 0097  
                                                       _UARTSendChar 2F68  
                                                        _int_to_char 2C1E  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 013A  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 2F54  
                                              __end_of_initialize_TX 2F40  
                                                          stoa@F1152 00E1  
                                                           int$flags 007F  
                                                     read_op@address 0001  
                                                           _ungetbuf 0099  
                                                           _ungetcnt 007E  
                                                           _vfprintf 2ABC  
                                                   ___aomod@dividend 0001  
                                                           _write_op 2EE8  
                                                     _vfpfcnvrt$1101 005B  
                                                     _vfpfcnvrt$1102 005D  
                                                         _INTCONbits 000FF2  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 2FAE  
                                                          sprintf@ap 00CB  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                        _UARTNewLine 2F54  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                      read_op@result 0002  
                                                           sprintf@f 00C5  
                                                           sprintf@s 00BB  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                                       ___aodiv@sign 0012  
                                                       ___aomod@sign 0012  
