

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Feb 28 00:43:31 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 2.05
    76                           ; Generated 20/12/2018 GMT
    77                           ; 
    78                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F452 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  003EE6                     __pidataBANK0:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for stoa@F1152
   115  003EE6  28                 	db	40
   116  003EE7  6E                 	db	110
   117  003EE8  75                 	db	117
   118  003EE9  6C                 	db	108
   119  003EEA  6C                 	db	108
   120  003EEB  29                 	db	41
   121  003EEC  00                 	db	0
   122  0000                     _CCP1CON	set	4029
   123  0000                     _CCPR1L	set	4030
   124  0000                     _PR2	set	4043
   125  0000                     _T2CON	set	4042
   126  0000                     _ADRESL	set	4035
   127  0000                     _ADRESH	set	4036
   128  0000                     _ADCON0	set	4034
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON1	set	4038
   131  0000                     _SSPSTATbits	set	4039
   132  0000                     _T0CON	set	4053
   133  0000                     _TMR0L	set	4054
   134  0000                     _TMR0H	set	4055
   135  0000                     _T0CONbits	set	4053
   136  0000                     _ADCON1	set	4033
   137  0000                     _RCREG1	set	4014
   138  0000                     _TXREG	set	4013
   139  0000                     _RCSTAbits	set	4011
   140  0000                     _RCSTA	set	4011
   141  0000                     _SPBRG	set	4015
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _RCONbits	set	4048
   144  0000                     _INTCON2bits	set	4081
   145  0000                     _INTCONbits	set	4082
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISA	set	3986
   148  0000                     _PORTA	set	3968
   149  0000                     _PORTD	set	3971
   150  0000                     _PORTB	set	3969
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISD	set	3989
   153  0000                     _TRISC	set	3988
   154  0000                     _GO_nDONE	set	32274
   155  0000                     _TMR0IE	set	32661
   156  0000                     _TMR0IF	set	32658
   157  0000                     _RCIF	set	31989
   158  0000                     _TMR2IP	set	31993
   159  0000                     _TMR2IE	set	31977
   160  0000                     _RC0	set	31760
   161  0000                     _RB5	set	31757
   162                           
   163                           	psect	smallconst
   164  000600                     __psmallconst:
   165                           	opt callstack 0
   166  000600  00                 	db	0
   167  000601                     STR_8:
   168  000601  52                 	db	82	;'R'
   169  000602  65                 	db	101	;'e'
   170  000603  61                 	db	97	;'a'
   171  000604  64                 	db	100	;'d'
   172  000605  79                 	db	121	;'y'
   173  000606  20                 	db	32
   174  000607  66                 	db	102	;'f'
   175  000608  6F                 	db	111	;'o'
   176  000609  72                 	db	114	;'r'
   177  00060A  20                 	db	32
   178  00060B  65                 	db	101	;'e'
   179  00060C  76                 	db	118	;'v'
   180  00060D  65                 	db	101	;'e'
   181  00060E  6E                 	db	110	;'n'
   182  00060F  20                 	db	32
   183  000610  61                 	db	97	;'a'
   184  000611  64                 	db	100	;'d'
   185  000612  64                 	db	100	;'d'
   186  000613  72                 	db	114	;'r'
   187  000614  65                 	db	101	;'e'
   188  000615  73                 	db	115	;'s'
   189  000616  73                 	db	115	;'s'
   190  000617  20                 	db	32
   191  000618  69                 	db	105	;'i'
   192  000619  6E                 	db	110	;'n'
   193  00061A  70                 	db	112	;'p'
   194  00061B  75                 	db	117	;'u'
   195  00061C  74                 	db	116	;'t'
   196  00061D  00                 	db	0
   197  00061E                     STR_15:
   198  00061E  44                 	db	68	;'D'
   199  00061F  6F                 	db	111	;'o'
   200  000620  6E                 	db	110	;'n'
   201  000621  65                 	db	101	;'e'
   202  000622  20                 	db	32
   203  000623  72                 	db	114	;'r'
   204  000624  65                 	db	101	;'e'
   205  000625  61                 	db	97	;'a'
   206  000626  64                 	db	100	;'d'
   207  000627  69                 	db	105	;'i'
   208  000628  6E                 	db	110	;'n'
   209  000629  67                 	db	103	;'g'
   210  00062A  20                 	db	32
   211  00062B  66                 	db	102	;'f'
   212  00062C  72                 	db	114	;'r'
   213  00062D  6F                 	db	111	;'o'
   214  00062E  6D                 	db	109	;'m'
   215  00062F  20                 	db	32
   216  000630  6D                 	db	109	;'m'
   217  000631  65                 	db	101	;'e'
   218  000632  6D                 	db	109	;'m'
   219  000633  6F                 	db	111	;'o'
   220  000634  72                 	db	114	;'r'
   221  000635  79                 	db	121	;'y'
   222  000636  2E                 	db	46
   223  000637  00                 	db	0
   224  000638                     STR_9:
   225  000638  54                 	db	84	;'T'
   226  000639  65                 	db	101	;'e'
   227  00063A  6D                 	db	109	;'m'
   228  00063B  70                 	db	112	;'p'
   229  00063C  65                 	db	101	;'e'
   230  00063D  72                 	db	114	;'r'
   231  00063E  61                 	db	97	;'a'
   232  00063F  74                 	db	116	;'t'
   233  000640  75                 	db	117	;'u'
   234  000641  72                 	db	114	;'r'
   235  000642  65                 	db	101	;'e'
   236  000643  20                 	db	32
   237  000644  61                 	db	97	;'a'
   238  000645  74                 	db	116	;'t'
   239  000646  20                 	db	32
   240  000647  61                 	db	97	;'a'
   241  000648  64                 	db	100	;'d'
   242  000649  64                 	db	100	;'d'
   243  00064A  72                 	db	114	;'r'
   244  00064B  65                 	db	101	;'e'
   245  00064C  73                 	db	115	;'s'
   246  00064D  73                 	db	115	;'s'
   247  00064E  20                 	db	32
   248  00064F  00                 	db	0
   249  000650                     STR_7:
   250  000650  44                 	db	68	;'D'
   251  000651  6F                 	db	111	;'o'
   252  000652  6E                 	db	110	;'n'
   253  000653  65                 	db	101	;'e'
   254  000654  20                 	db	32
   255  000655  77                 	db	119	;'w'
   256  000656  72                 	db	114	;'r'
   257  000657  69                 	db	105	;'i'
   258  000658  74                 	db	116	;'t'
   259  000659  69                 	db	105	;'i'
   260  00065A  6E                 	db	110	;'n'
   261  00065B  67                 	db	103	;'g'
   262  00065C  20                 	db	32
   263  00065D  74                 	db	116	;'t'
   264  00065E  6F                 	db	111	;'o'
   265  00065F  20                 	db	32
   266  000660  6D                 	db	109	;'m'
   267  000661  65                 	db	101	;'e'
   268  000662  6D                 	db	109	;'m'
   269  000663  6F                 	db	111	;'o'
   270  000664  72                 	db	114	;'r'
   271  000665  79                 	db	121	;'y'
   272  000666  2E                 	db	46
   273  000667  00                 	db	0
   274  000668                     STR_12:
   275  000668  54                 	db	84	;'T'
   276  000669  69                 	db	105	;'i'
   277  00066A  6D                 	db	109	;'m'
   278  00066B  65                 	db	101	;'e'
   279  00066C  20                 	db	32
   280  00066D  61                 	db	97	;'a'
   281  00066E  74                 	db	116	;'t'
   282  00066F  20                 	db	32
   283  000670  61                 	db	97	;'a'
   284  000671  64                 	db	100	;'d'
   285  000672  64                 	db	100	;'d'
   286  000673  72                 	db	114	;'r'
   287  000674  65                 	db	101	;'e'
   288  000675  73                 	db	115	;'s'
   289  000676  73                 	db	115	;'s'
   290  000677  20                 	db	32
   291  000678  00                 	db	0
   292  000679                     STR_4:
   293  000679  20                 	db	32
   294  00067A  74                 	db	116	;'t'
   295  00067B  6F                 	db	111	;'o'
   296  00067C  20                 	db	32
   297  00067D  61                 	db	97	;'a'
   298  00067E  64                 	db	100	;'d'
   299  00067F  64                 	db	100	;'d'
   300  000680  72                 	db	114	;'r'
   301  000681  65                 	db	101	;'e'
   302  000682  73                 	db	115	;'s'
   303  000683  73                 	db	115	;'s'
   304  000684  20                 	db	32
   305  000685  00                 	db	0
   306  000686                     STR_11:
   307  000686  20                 	db	32
   308  000687  64                 	db	100	;'d'
   309  000688  65                 	db	101	;'e'
   310  000689  67                 	db	103	;'g'
   311  00068A  72                 	db	114	;'r'
   312  00068B  65                 	db	101	;'e'
   313  00068C  65                 	db	101	;'e'
   314  00068D  73                 	db	115	;'s'
   315  00068E  20                 	db	32
   316  00068F  43                 	db	67	;'C'
   317  000690  20                 	db	32
   318  000691  00                 	db	0
   319  000692                     STR_3:
   320  000692  57                 	db	87	;'W'
   321  000693  72                 	db	114	;'r'
   322  000694  69                 	db	105	;'i'
   323  000695  74                 	db	116	;'t'
   324  000696  69                 	db	105	;'i'
   325  000697  6E                 	db	110	;'n'
   326  000698  67                 	db	103	;'g'
   327  000699  20                 	db	32
   328  00069A  00                 	db	0
   329  00069B                     STR_14:
   330  00069B  20                 	db	32
   331  00069C  6D                 	db	109	;'m'
   332  00069D  69                 	db	105	;'i'
   333  00069E  6E                 	db	110	;'n'
   334  00069F  75                 	db	117	;'u'
   335  0006A0  74                 	db	116	;'t'
   336  0006A1  65                 	db	101	;'e'
   337  0006A2  73                 	db	115	;'s'
   338  0006A3  00                 	db	0
   339  0006A4                     STR_116:
   340  0006A4  68                 	db	104	;'h'
   341  0006A5  68                 	db	104	;'h'
   342  0006A6  58                 	db	88	;'X'
   343  0006A7  00                 	db	0
   344  0006A8                     STR_16:
   345  0006A8  68                 	db	104	;'h'
   346  0006A9  68                 	db	104	;'h'
   347  0006AA  64                 	db	100	;'d'
   348  0006AB  00                 	db	0
   349  0006AC                     STR_20:
   350  0006AC  68                 	db	104	;'h'
   351  0006AD  68                 	db	104	;'h'
   352  0006AE  69                 	db	105	;'i'
   353  0006AF  00                 	db	0
   354  0006B0                     STR_72:
   355  0006B0  68                 	db	104	;'h'
   356  0006B1  68                 	db	104	;'h'
   357  0006B2  6E                 	db	110	;'n'
   358  0006B3  00                 	db	0
   359  0006B4                     STR_52:
   360  0006B4  68                 	db	104	;'h'
   361  0006B5  68                 	db	104	;'h'
   362  0006B6  6F                 	db	111	;'o'
   363  0006B7  00                 	db	0
   364  0006B8                     STR_92:
   365  0006B8  68                 	db	104	;'h'
   366  0006B9  68                 	db	104	;'h'
   367  0006BA  75                 	db	117	;'u'
   368  0006BB  00                 	db	0
   369  0006BC                     STR_112:
   370  0006BC  68                 	db	104	;'h'
   371  0006BD  68                 	db	104	;'h'
   372  0006BE  78                 	db	120	;'x'
   373  0006BF  00                 	db	0
   374  0006C0                     STR_1:
   375  0006C0  25                 	db	37
   376  0006C1  6C                 	db	108	;'l'
   377  0006C2  75                 	db	117	;'u'
   378  0006C3  00                 	db	0
   379  0006C4                     STR_134:
   380  0006C4  6C                 	db	108	;'l'
   381  0006C5  58                 	db	88	;'X'
   382  0006C6  00                 	db	0
   383  0006C7                     STR_143:
   384  0006C7  7A                 	db	122	;'z'
   385  0006C8  58                 	db	88	;'X'
   386  0006C9  00                 	db	0
   387  0006CA                     STR_34:
   388  0006CA  6C                 	db	108	;'l'
   389  0006CB  64                 	db	100	;'d'
   390  0006CC  00                 	db	0
   391  0006CD                     STR_43:
   392  0006CD  7A                 	db	122	;'z'
   393  0006CE  64                 	db	100	;'d'
   394  0006CF  00                 	db	0
   395  0006D0                     STR_38:
   396  0006D0  6C                 	db	108	;'l'
   397  0006D1  69                 	db	105	;'i'
   398  0006D2  00                 	db	0
   399  0006D3                     STR_47:
   400  0006D3  7A                 	db	122	;'z'
   401  0006D4  69                 	db	105	;'i'
   402  0006D5  00                 	db	0
   403  0006D6                     STR_82:
   404  0006D6  6C                 	db	108	;'l'
   405  0006D7  6E                 	db	110	;'n'
   406  0006D8  00                 	db	0
   407  0006D9                     STR_87:
   408  0006D9  7A                 	db	122	;'z'
   409  0006DA  6E                 	db	110	;'n'
   410  0006DB  00                 	db	0
   411  0006DC                     STR_62:
   412  0006DC  6C                 	db	108	;'l'
   413  0006DD  6F                 	db	111	;'o'
   414  0006DE  00                 	db	0
   415  0006DF                     STR_67:
   416  0006DF  7A                 	db	122	;'z'
   417  0006E0  6F                 	db	111	;'o'
   418  0006E1  00                 	db	0
   419  0006E2                     STR_107:
   420  0006E2  7A                 	db	122	;'z'
   421  0006E3  75                 	db	117	;'u'
   422  0006E4  00                 	db	0
   423  0006E5                     STR_130:
   424  0006E5  6C                 	db	108	;'l'
   425  0006E6  78                 	db	120	;'x'
   426  0006E7  00                 	db	0
   427  0006E8                     STR_139:
   428  0006E8  7A                 	db	122	;'z'
   429  0006E9  78                 	db	120	;'x'
   430  0006EA  00                 	db	0
   431  0006EB                     STR_10:
   432  0006EB  3A                 	db	58	;':'
   433  0006EC  20                 	db	32
   434  0006ED  00                 	db	0
   435  0006EE  25                 	db	37
   436  0006EF  64                 	db	100	;'d'
   437  0006F0  00                 	db	0
   438  0000                     
   439                           ; #config settings
   440  0006F1  00                 	db	0	; dummy byte at the end
   441  0000                     
   442                           	psect	cinit
   443  003BE0                     __pcinit:
   444                           	opt callstack 0
   445  003BE0                     start_initialization:
   446                           	opt callstack 0
   447  003BE0                     __initialization:
   448                           	opt callstack 0
   449                           
   450                           ; Initialize objects allocated to BANK0 (7 bytes)
   451                           ; load TBLPTR registers with __pidataBANK0
   452  003BE0  0EE6               	movlw	low __pidataBANK0
   453  003BE2  6EF6               	movwf	tblptrl,c
   454  003BE4  0E3E               	movlw	high __pidataBANK0
   455  003BE6  6EF7               	movwf	tblptrh,c
   456  003BE8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   457  003BEA  6EF8               	movwf	tblptru,c
   458  003BEC  EE00  F0F9         	lfsr	0,__pdataBANK0
   459  003BF0  EE10 F007          	lfsr	1,7
   460  003BF4                     copy_data0:
   461  003BF4  0009               	tblrd		*+
   462  003BF6  CFF5 FFEE          	movff	tablat,postinc0
   463  003BFA  50E5               	movf	postdec1,w,c
   464  003BFC  50E1               	movf	fsr1l,w,c
   465  003BFE  E1FA               	bnz	copy_data0
   466                           
   467                           ; Clear objects allocated to BANK0 (58 bytes)
   468  003C00  EE00  F0BF         	lfsr	0,__pbssBANK0
   469  003C04  0E3A               	movlw	58
   470  003C06                     clear_0:
   471  003C06  6AEE               	clrf	postinc0,c
   472  003C08  06E8               	decf	wreg,f,c
   473  003C0A  E1FD               	bnz	clear_0
   474                           
   475                           ; Clear objects allocated to COMRAM (1 bytes)
   476  003C0C  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   477  003C0E                     end_of_initialization:
   478                           	opt callstack 0
   479  003C0E                     __end_of__initialization:
   480                           	opt callstack 0
   481  003C0E  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   482  003C10  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   483  003C12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   484  003C14  6EF8               	movwf	tblptru,c
   485  003C16  0100               	movlb	0
   486  003C18  EFAC  F00F         	goto	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMRAM
   489  00007E                     __pbssCOMRAM:
   490                           	opt callstack 0
   491  00007E                     _ungetcnt:
   492                           	opt callstack 0
   493  00007E                     	ds	1
   494                           
   495                           	psect	bssBANK0
   496  0000BF                     __pbssBANK0:
   497                           	opt callstack 0
   498  0000BF                     _lcd:
   499                           	opt callstack 0
   500  0000BF                     	ds	5
   501  0000C4                     _time_ms_2:
   502                           	opt callstack 0
   503  0000C4                     	ds	4
   504  0000C8                     _time_ms:
   505                           	opt callstack 0
   506  0000C8                     	ds	4
   507  0000CC                     _errno:
   508                           	opt callstack 0
   509  0000CC                     	ds	2
   510  0000CE                     _nout:
   511                           	opt callstack 0
   512  0000CE                     	ds	2
   513  0000D0                     _width:
   514                           	opt callstack 0
   515  0000D0                     	ds	2
   516  0000D2                     _prec:
   517                           	opt callstack 0
   518  0000D2                     	ds	2
   519  0000D4                     _flags:
   520                           	opt callstack 0
   521  0000D4                     	ds	2
   522  0000D6                     _address:
   523                           	opt callstack 0
   524  0000D6                     	ds	2
   525  0000D8                     	ds	1
   526  0000D9                     _dbuf:
   527                           	opt callstack 0
   528  0000D9                     	ds	32
   529                           
   530                           	psect	dataBANK0
   531  0000F9                     __pdataBANK0:
   532                           	opt callstack 0
   533  0000F9                     stoa@F1152:
   534                           	opt callstack 0
   535  0000F9                     	ds	7
   536                           
   537                           	psect	cstackBANK0
   538  000080                     __pcstackBANK0:
   539                           	opt callstack 0
   540  000080                     ?_sprintf:
   541                           	opt callstack 0
   542  000080                     sprintf@s:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x0
   546  000080                     	ds	2
   547  000082                     sprintf@fmt:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551  000082                     	ds	8
   552  00008A                     sprintf@f:
   553                           	opt callstack 0
   554                           
   555                           ; 6 bytes @ 0xA
   556  00008A                     	ds	6
   557  000090                     sprintf@ap:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x10
   561  000090                     	ds	2
   562  000092                     int_to_char@result:
   563                           	opt callstack 0
   564                           
   565                           ; 10 bytes @ 0x12
   566  000092                     	ds	10
   567  00009C                     int_to_char@the_num:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x1C
   571  00009C                     	ds	4
   572  0000A0                     UARTSendString@c:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x20
   576  0000A0                     	ds	2
   577  0000A2                     ??_UARTSendString:
   578                           
   579                           ; 1 bytes @ 0x22
   580  0000A2                     	ds	2
   581  0000A4                     UARTSendString@i:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x24
   585  0000A4                     	ds	2
   586  0000A6                     read_SRAM@address:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0x26
   590  0000A6                     	ds	2
   591  0000A8                     ??_read_SRAM:
   592                           
   593                           ; 1 bytes @ 0x28
   594  0000A8                     	ds	2
   595  0000AA                     read_SRAM@stored_temp:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x2A
   599  0000AA                     	ds	2
   600  0000AC                     read_SRAM@time_elapsed:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x2C
   604  0000AC                     	ds	2
   605  0000AE                     ??_main:
   606                           
   607                           ; 1 bytes @ 0x2E
   608  0000AE                     	ds	2
   609  0000B0                     _main$2137:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x30
   613  0000B0                     	ds	4
   614  0000B4                     _main$2138:
   615                           	opt callstack 0
   616                           
   617                           ; 4 bytes @ 0x34
   618  0000B4                     	ds	4
   619  0000B8                     main@input_address:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x38
   623  0000B8                     	ds	2
   624  0000BA                     main@temperature:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x3A
   628  0000BA                     	ds	2
   629  0000BC                     main@curr_time:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x3C
   633  0000BC                     	ds	2
   634  0000BE                     main@input:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0x3E
   638  0000BE                     	ds	1
   639                           
   640                           	psect	cstackCOMRAM
   641  000001                     __pcstackCOMRAM:
   642                           	opt callstack 0
   643  000001                     ??_UARTRecieveChar:
   644  000001                     ?_ADC_Read:
   645                           	opt callstack 0
   646  000001                     ?_strlen:
   647                           	opt callstack 0
   648  000001                     ?_isupper:
   649                           	opt callstack 0
   650  000001                     ?_isalpha:
   651                           	opt callstack 0
   652  000001                     ?_isdigit:
   653                           	opt callstack 0
   654  000001                     ?_strncmp:
   655                           	opt callstack 0
   656  000001                     ?_isspace:
   657                           	opt callstack 0
   658  000001                     ?_getch:
   659                           	opt callstack 0
   660  000001                     ?_islower:
   661                           	opt callstack 0
   662  000001                     ?___wmul:
   663                           	opt callstack 0
   664  000001                     ?_ReadTime:
   665                           	opt callstack 0
   666  000001                     ?___fladd:
   667                           	opt callstack 0
   668  000001                     ?___xxtofl:
   669                           	opt callstack 0
   670  000001                     ?___aodiv:
   671                           	opt callstack 0
   672  000001                     ?___aomod:
   673                           	opt callstack 0
   674  000001                     ?___lodiv:
   675                           	opt callstack 0
   676  000001                     ?___lomod:
   677                           	opt callstack 0
   678  000001                     write_op@data:
   679                           	opt callstack 0
   680  000001                     read_op@address:
   681                           	opt callstack 0
   682  000001                     UARTSendChar@c:
   683                           	opt callstack 0
   684  000001                     ___wmul@multiplier:
   685                           	opt callstack 0
   686  000001                     isalpha@c:
   687                           	opt callstack 0
   688  000001                     isdigit@c:
   689                           	opt callstack 0
   690  000001                     isspace@c:
   691                           	opt callstack 0
   692  000001                     isupper@c:
   693                           	opt callstack 0
   694  000001                     fputc@c:
   695                           	opt callstack 0
   696  000001                     strlen@s:
   697                           	opt callstack 0
   698  000001                     strncmp@_l:
   699                           	opt callstack 0
   700  000001                     islower@c:
   701                           	opt callstack 0
   702  000001                     ___fladd@b:
   703                           	opt callstack 0
   704  000001                     ___xxtofl@val:
   705                           	opt callstack 0
   706  000001                     ___aodiv@dividend:
   707                           	opt callstack 0
   708  000001                     ___aomod@dividend:
   709                           	opt callstack 0
   710  000001                     ___lodiv@dividend:
   711                           	opt callstack 0
   712  000001                     ___lomod@dividend:
   713                           	opt callstack 0
   714                           
   715                           ; 8 bytes @ 0x0
   716  000001                     	ds	1
   717  000002                     write_op@address:
   718                           	opt callstack 0
   719  000002                     read_op@result:
   720                           	opt callstack 0
   721                           
   722                           ; 1 bytes @ 0x1
   723  000002                     	ds	1
   724  000003                     ??_ADC_Read:
   725  000003                     ??_isupper:
   726  000003                     ??_isalpha:
   727  000003                     ??_isdigit:
   728  000003                     ??_isspace:
   729  000003                     ??_islower:
   730  000003                     ?_fgetc:
   731                           	opt callstack 0
   732  000003                     ___wmul@multiplicand:
   733                           	opt callstack 0
   734  000003                     fputc@fp:
   735                           	opt callstack 0
   736  000003                     fgetc@fp:
   737                           	opt callstack 0
   738  000003                     strlen@a:
   739                           	opt callstack 0
   740  000003                     strncmp@_r:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x2
   744  000003                     	ds	2
   745  000005                     ??_fputc:
   746  000005                     ??_fgetc:
   747  000005                     ??___xxtofl:
   748  000005                     ?___lldiv:
   749                           	opt callstack 0
   750  000005                     ADC_Read@channel:
   751                           	opt callstack 0
   752  000005                     ___wmul@product:
   753                           	opt callstack 0
   754  000005                     strncmp@n:
   755                           	opt callstack 0
   756  000005                     ___lldiv@dividend:
   757                           	opt callstack 0
   758  000005                     ___fladd@a:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x4
   762  000005                     	ds	2
   763  000007                     ??_strncmp:
   764  000007                     ?_toupper:
   765                           	opt callstack 0
   766  000007                     _isspace$1735:
   767                           	opt callstack 0
   768  000007                     toupper@c:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x6
   772  000007                     	ds	1
   773  000008                     ?_atoi:
   774                           	opt callstack 0
   775  000008                     atoi@s:
   776                           	opt callstack 0
   777  000008                     strncmp@l:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x7
   781  000008                     	ds	1
   782  000009                     ??_toupper:
   783  000009                     ??___fladd:
   784  000009                     ___xxtofl@sign:
   785                           	opt callstack 0
   786  000009                     ___lldiv@divisor:
   787                           	opt callstack 0
   788  000009                     ___aodiv@divisor:
   789                           	opt callstack 0
   790  000009                     ___aomod@divisor:
   791                           	opt callstack 0
   792  000009                     ___lodiv@divisor:
   793                           	opt callstack 0
   794  000009                     ___lomod@divisor:
   795                           	opt callstack 0
   796                           
   797                           ; 8 bytes @ 0x8
   798  000009                     	ds	1
   799  00000A                     ??_atoi:
   800  00000A                     ?_stoa:
   801                           	opt callstack 0
   802  00000A                     ___xxtofl@exp:
   803                           	opt callstack 0
   804  00000A                     stoa@fp:
   805                           	opt callstack 0
   806  00000A                     fputs@s:
   807                           	opt callstack 0
   808  00000A                     fgetc@c:
   809                           	opt callstack 0
   810  00000A                     strncmp@r:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x9
   814  00000A                     	ds	1
   815  00000B                     ___xxtofl@arg:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0xA
   819  00000B                     	ds	1
   820  00000C                     stoa@s:
   821                           	opt callstack 0
   822  00000C                     fputs@fp:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0xB
   826  00000C                     	ds	1
   827  00000D                     ___fladd@signs:
   828                           	opt callstack 0
   829  00000D                     _toupper$1855:
   830                           	opt callstack 0
   831  00000D                     ___lldiv@quotient:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0xC
   835  00000D                     	ds	1
   836  00000E                     ??_stoa:
   837  00000E                     ___fladd@aexp:
   838                           	opt callstack 0
   839  00000E                     fputs@c:
   840                           	opt callstack 0
   841  00000E                     atoi@neg:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0xD
   845  00000E                     	ds	1
   846  00000F                     ?___flmul:
   847                           	opt callstack 0
   848  00000F                     ___fladd@bexp:
   849                           	opt callstack 0
   850  00000F                     fputs@i:
   851                           	opt callstack 0
   852  00000F                     ___flmul@b:
   853                           	opt callstack 0
   854  00000F                     stoa@nuls:
   855                           	opt callstack 0
   856                           
   857                           ; 7 bytes @ 0xE
   858  00000F                     	ds	1
   859  000010                     ___fladd@grs:
   860                           	opt callstack 0
   861  000010                     _atoi$1698:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0xF
   865  000010                     	ds	1
   866  000011                     ?_pad:
   867                           	opt callstack 0
   868  000011                     ___lldiv@counter:
   869                           	opt callstack 0
   870  000011                     ___aodiv@counter:
   871                           	opt callstack 0
   872  000011                     ___aomod@counter:
   873                           	opt callstack 0
   874  000011                     ___lomod@counter:
   875                           	opt callstack 0
   876  000011                     pad@fp:
   877                           	opt callstack 0
   878  000011                     ___lodiv@quotient:
   879                           	opt callstack 0
   880                           
   881                           ; 8 bytes @ 0x10
   882  000011                     	ds	1
   883  000012                     ___aodiv@sign:
   884                           	opt callstack 0
   885  000012                     ___aomod@sign:
   886                           	opt callstack 0
   887  000012                     _atoi$1700:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x11
   891  000012                     	ds	1
   892  000013                     ?_abs:
   893                           	opt callstack 0
   894  000013                     pad@buf:
   895                           	opt callstack 0
   896  000013                     abs@a:
   897                           	opt callstack 0
   898  000013                     ___flmul@a:
   899                           	opt callstack 0
   900  000013                     ___aodiv@quotient:
   901                           	opt callstack 0
   902                           
   903                           ; 8 bytes @ 0x12
   904  000013                     	ds	1
   905  000014                     _atoi$1699:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x13
   909  000014                     	ds	1
   910  000015                     ??_abs:
   911  000015                     pad@p:
   912                           	opt callstack 0
   913  000015                     atoi@n:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x14
   917  000015                     	ds	1
   918  000016                     stoa@i:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x15
   922  000016                     	ds	1
   923  000017                     ??___flmul:
   924  000017                     ??_pad:
   925                           
   926                           ; 1 bytes @ 0x16
   927  000017                     	ds	1
   928  000018                     pad@i:
   929                           	opt callstack 0
   930  000018                     stoa@w:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x17
   934  000018                     	ds	1
   935  000019                     ___lodiv@counter:
   936                           	opt callstack 0
   937                           
   938                           ; 1 bytes @ 0x18
   939  000019                     	ds	1
   940  00001A                     pad@w:
   941                           	opt callstack 0
   942  00001A                     stoa@cp:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x19
   946  00001A                     	ds	1
   947  00001B                     ___flmul@sign:
   948                           	opt callstack 0
   949                           
   950                           ; 1 bytes @ 0x1A
   951  00001B                     	ds	1
   952  00001C                     ?_ctoa:
   953                           	opt callstack 0
   954  00001C                     ?_dtoa:
   955                           	opt callstack 0
   956  00001C                     ?_otoa:
   957                           	opt callstack 0
   958  00001C                     ?_utoa:
   959                           	opt callstack 0
   960  00001C                     ?_xtoa:
   961                           	opt callstack 0
   962  00001C                     ctoa@fp:
   963                           	opt callstack 0
   964  00001C                     dtoa@fp:
   965                           	opt callstack 0
   966  00001C                     otoa@fp:
   967                           	opt callstack 0
   968  00001C                     stoa@p:
   969                           	opt callstack 0
   970  00001C                     utoa@fp:
   971                           	opt callstack 0
   972  00001C                     xtoa@fp:
   973                           	opt callstack 0
   974  00001C                     ___flmul@grs:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x1B
   978  00001C                     	ds	2
   979  00001E                     ctoa@c:
   980                           	opt callstack 0
   981  00001E                     stoa@l:
   982                           	opt callstack 0
   983  00001E                     dtoa@d:
   984                           	opt callstack 0
   985  00001E                     otoa@d:
   986                           	opt callstack 0
   987  00001E                     utoa@d:
   988                           	opt callstack 0
   989  00001E                     xtoa@d:
   990                           	opt callstack 0
   991                           
   992                           ; 8 bytes @ 0x1D
   993  00001E                     	ds	1
   994  00001F                     ctoa@w:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x1E
   998  00001F                     	ds	1
   999  000020                     ___flmul@aexp:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x1F
  1003  000020                     	ds	1
  1004  000021                     ___flmul@bexp:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x20
  1008  000021                     	ds	1
  1009  000022                     ___flmul@prod:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x21
  1013  000022                     	ds	4
  1014  000026                     ??_dtoa:
  1015  000026                     ??_otoa:
  1016  000026                     ??_utoa:
  1017  000026                     xtoa@x:
  1018                           	opt callstack 0
  1019  000026                     ___flmul@temp:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x25
  1023  000026                     	ds	1
  1024  000027                     ??_xtoa:
  1025                           
  1026                           ; 1 bytes @ 0x26
  1027  000027                     	ds	1
  1028  000028                     ?___flsub:
  1029                           	opt callstack 0
  1030  000028                     ___flsub@b:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x27
  1034  000028                     	ds	4
  1035  00002C                     ___flsub@a:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x2B
  1039  00002C                     	ds	2
  1040  00002E                     _dtoa$1052:
  1041                           	opt callstack 0
  1042  00002E                     otoa@p:
  1043                           	opt callstack 0
  1044  00002E                     utoa@p:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x2D
  1048  00002E                     	ds	1
  1049  00002F                     _xtoa$1088:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x2E
  1053  00002F                     	ds	1
  1054  000030                     ?_get_temp:
  1055                           	opt callstack 0
  1056  000030                     dtoa@p:
  1057                           	opt callstack 0
  1058  000030                     otoa@t:
  1059                           	opt callstack 0
  1060  000030                     utoa@w:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x2F
  1064  000030                     	ds	1
  1065  000031                     _xtoa$1089:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x30
  1069  000031                     	ds	1
  1070  000032                     dtoa@w:
  1071                           	opt callstack 0
  1072  000032                     otoa@w:
  1073                           	opt callstack 0
  1074  000032                     utoa@n:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 8 bytes @ 0x31
  1078  000032                     	ds	1
  1079  000033                     xtoa@p:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x32
  1083  000033                     	ds	1
  1084  000034                     dtoa@s:
  1085                           	opt callstack 0
  1086  000034                     get_temp@real_voltage:
  1087                           	opt callstack 0
  1088  000034                     otoa@n:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 8 bytes @ 0x33
  1092  000034                     	ds	1
  1093  000035                     xtoa@w:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x34
  1097  000035                     	ds	1
  1098  000036                     dtoa@n:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 8 bytes @ 0x35
  1102  000036                     	ds	1
  1103  000037                     xtoa@n:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 8 bytes @ 0x36
  1107  000037                     	ds	1
  1108  000038                     get_temp@temp:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x37
  1112  000038                     	ds	2
  1113  00003A                     utoa@i:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x39
  1117  00003A                     	ds	2
  1118  00003C                     get_temp@adc_voltage:
  1119                           	opt callstack 0
  1120  00003C                     otoa@i:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x3B
  1124  00003C                     	ds	2
  1125  00003E                     ?___fltol:
  1126                           	opt callstack 0
  1127  00003E                     dtoa@i:
  1128                           	opt callstack 0
  1129  00003E                     ___fltol@f1:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x3D
  1133  00003E                     	ds	1
  1134  00003F                     xtoa@i:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x3E
  1138  00003F                     	ds	2
  1139  000041                     xtoa@c:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x40
  1143  000041                     	ds	1
  1144  000042                     ??___fltol:
  1145                           
  1146                           ; 1 bytes @ 0x41
  1147  000042                     	ds	1
  1148  000043                     ?_vfpfcnvrt:
  1149                           	opt callstack 0
  1150  000043                     vfpfcnvrt@fp:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x42
  1154  000043                     	ds	2
  1155  000045                     vfpfcnvrt@fmt:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x44
  1159  000045                     	ds	1
  1160  000046                     ___fltol@sign1:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x45
  1164  000046                     	ds	1
  1165  000047                     ___fltol@exp1:
  1166                           	opt callstack 0
  1167  000047                     vfpfcnvrt@ap:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x46
  1171  000047                     	ds	2
  1172  000049                     ??_vfpfcnvrt:
  1173                           
  1174                           ; 1 bytes @ 0x48
  1175  000049                     	ds	14
  1176  000057                     vfpfcnvrt@cp:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x56
  1180  000057                     	ds	2
  1181  000059                     vfpfcnvrt@done:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x58
  1185  000059                     	ds	2
  1186  00005B                     _vfpfcnvrt$1103:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x5A
  1190  00005B                     	ds	2
  1191  00005D                     _vfpfcnvrt$1104:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x5C
  1195  00005D                     	ds	2
  1196  00005F                     vfpfcnvrt@ll:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x5E
  1200  00005F                     	ds	8
  1201  000067                     vfpfcnvrt@vp:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x66
  1205  000067                     	ds	2
  1206  000069                     vfpfcnvrt@c:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x68
  1210  000069                     	ds	1
  1211  00006A                     vfpfcnvrt@llu:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 8 bytes @ 0x69
  1215  00006A                     	ds	8
  1216  000072                     ?_vfprintf:
  1217                           	opt callstack 0
  1218  000072                     vfprintf@fp:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x71
  1222  000072                     	ds	2
  1223  000074                     vfprintf@fmt:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x73
  1227  000074                     	ds	2
  1228  000076                     vfprintf@ap:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x75
  1232  000076                     	ds	2
  1233  000078                     vfprintf@cfmt:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x77
  1237  000078                     	ds	2
  1238  00007A                     ?_int_to_char:
  1239                           	opt callstack 0
  1240  00007A                     int_to_char@num:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x79
  1244  00007A                     	ds	4
  1245  00007E                     
  1246                           ; 1 bytes @ 0x7D
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 28 in file "main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  curr_time       2   60[BANK0 ] int 
  1257 ;;  input_addres    2   56[BANK0 ] int 
  1258 ;;  input           1   62[BANK0 ] unsigned char 
  1259 ;;  temperature     2   58[BANK0 ] int 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1269 ;;      Params:         0       0       0       0       0       0       0
  1270 ;;      Locals:         0      15       0       0       0       0       0
  1271 ;;      Temps:          0       2       0       0       0       0       0
  1272 ;;      Totals:         0      17       0       0       0       0       0
  1273 ;;Total ram usage:       17 bytes
  1274 ;; Hardware stack levels required when called:   12
  1275 ;; This function calls:
  1276 ;;		_ReadTime
  1277 ;;		_Timer0_Init
  1278 ;;		_Timer0_StartTimer
  1279 ;;		_Timer0_StopTimer
  1280 ;;		_UARTNewLine
  1281 ;;		_UARTRecieveChar
  1282 ;;		_UARTSendString
  1283 ;;		___fltol
  1284 ;;		___lldiv
  1285 ;;		_get_temp
  1286 ;;		_initialize_RX
  1287 ;;		_initialize_TX
  1288 ;;		_int_to_char
  1289 ;;		_interrupt_enable
  1290 ;;		_read_SRAM
  1291 ;;		_write_op
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text0
  1298  001F58                     __ptext0:
  1299                           	opt callstack 0
  1300  001F58                     _main:
  1301                           	opt callstack 0
  1302  001F58  FFFF               	dw	65535	; assembler added errata NOP
  1303                           
  1304                           ;main.c: 29:   interrupt_enable();
  1305                           
  1306                           ;incstack = 0
  1307  001F5A  EC53  F01F         	call	_interrupt_enable	;wreg free
  1308                           
  1309                           ;main.c: 30:   TRISCbits.TRISC2 = 0;
  1310  001F5E  9494               	bcf	3988,2,c	;volatile
  1311                           
  1312                           ;main.c: 31:   TMR2IE = 1;
  1313  001F60  829D               	bsf	3997,1,c	;volatile
  1314                           
  1315                           ;main.c: 32:   TMR2IP = 1;
  1316  001F62  829F               	bsf	3999,1,c	;volatile
  1317                           
  1318                           ;main.c: 35:   int temperature;;main.c: 36:   Timer0_Init();
  1319  001F64  ECE2  F01E         	call	_Timer0_Init	;wreg free
  1320                           
  1321                           ;main.c: 37:   Timer0_StartTimer();
  1322  001F68  EC6B  F01F         	call	_Timer0_StartTimer	;wreg free
  1323                           
  1324                           ;main.c: 38:   initialize_TX();
  1325  001F6C  EC36  F01F         	call	_initialize_TX	;wreg free
  1326                           
  1327                           ;main.c: 39:   initialize_RX();
  1328  001F70  EC40  F01F         	call	_initialize_RX	;wreg free
  1329                           
  1330                           ;main.c: 40:   TRISCbits.TRISC7 = 1;
  1331  001F74  8E94               	bsf	3988,7,c	;volatile
  1332                           
  1333                           ;main.c: 41:   TRISCbits.TRISC6 = 0;
  1334  001F76  9C94               	bcf	3988,6,c	;volatile
  1335  001F78                     l5164:
  1336  001F78  FFFF               	dw	65535	; assembler added errata NOP
  1337                           
  1338                           ;main.c: 43:     TRISCbits.TRISC7 = 1;
  1339  001F7A  8E94               	bsf	3988,7,c	;volatile
  1340                           
  1341                           ;main.c: 44:     char input = ' ';
  1342  001F7C  0E20               	movlw	32
  1343  001F7E  D003               	goto	L1
  1344  001F80                     l5168:
  1345  001F80  FFFF               	dw	65535	; assembler added errata NOP
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 46:       input = UARTRecieveChar();
  1349  001F82  ECB7  F01E         	call	_UARTRecieveChar	;wreg free
  1350  001F86                     L1:
  1351  001F86  FFFF               	dw	65535	; assembler added errata NOP
  1352  001F88  0100               	movlb	0	; () banked
  1353  001F8A  6FBE               	movwf	main@input& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;main.c: 45:     while (input < 'a' || input > 'z') {
  1357  001F8C  0E60               	movlw	96
  1358  001F8E  65BE               	cpfsgt	main@input& (0+255),b
  1359  001F90  D7F7               	goto	l5168
  1360                           
  1361                           ; BSR set to: 0
  1362  001F92  0E7B               	movlw	123
  1363  001F94  61BE               	cpfslt	main@input& (0+255),b
  1364  001F96  D7F4               	goto	l5168
  1365  001F98  D132               	goto	l5240
  1366  001F9A                     l153:
  1367  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 50:       TRISCbits.TRISC7 = 0;
  1371  001F9C  9E94               	bcf	3988,7,c	;volatile
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 51:       temperature = (int) get_temp();
  1375  001F9E  ECE9  F019         	call	_get_temp	;wreg free
  1376  001FA2  C030  F03E         	movff	?_get_temp,___fltol@f1
  1377  001FA6  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1378  001FAA  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1379  001FAE  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1380  001FB2  EC7F  F019         	call	___fltol	;wreg free
  1381  001FB6  C03E  F0BA         	movff	?___fltol,main@temperature
  1382  001FBA  C03F  F0BB         	movff	?___fltol+1,main@temperature+1
  1383                           
  1384                           ;main.c: 52:       Timer0_StopTimer();
  1385  001FBE  EC67  F01F         	call	_Timer0_StopTimer	;wreg free
  1386                           
  1387                           ;main.c: 53:       int curr_time = (int) (ReadTime()/60/100/60);
  1388  001FC2  0E3C               	movlw	60
  1389  001FC4  6E09               	movwf	___lldiv@divisor,c
  1390  001FC6  0E00               	movlw	0
  1391  001FC8  6E0A               	movwf	___lldiv@divisor+1,c
  1392  001FCA  0E00               	movlw	0
  1393  001FCC  6E0B               	movwf	___lldiv@divisor+2,c
  1394  001FCE  0E00               	movlw	0
  1395  001FD0  6E0C               	movwf	___lldiv@divisor+3,c
  1396  001FD2  EC17  F01F         	call	_ReadTime	;wreg free
  1397  001FD6  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1398  001FDA  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1399  001FDE  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1400  001FE2  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1401  001FE6  ECB8  F01B         	call	___lldiv	;wreg free
  1402  001FEA  C005  F0B0         	movff	?___lldiv,_main$2137
  1403  001FEE  C006  F0B1         	movff	?___lldiv+1,_main$2137+1
  1404  001FF2  C007  F0B2         	movff	?___lldiv+2,_main$2137+2
  1405  001FF6  C008  F0B3         	movff	?___lldiv+3,_main$2137+3
  1406                           
  1407                           ;main.c: 53:       int curr_time = (int) (ReadTime()/60/100/60);
  1408  001FFA  0E64               	movlw	100
  1409  001FFC  6E09               	movwf	___lldiv@divisor,c
  1410  001FFE  0E00               	movlw	0
  1411  002000  6E0A               	movwf	___lldiv@divisor+1,c
  1412  002002  0E00               	movlw	0
  1413  002004  6E0B               	movwf	___lldiv@divisor+2,c
  1414  002006  0E00               	movlw	0
  1415  002008  6E0C               	movwf	___lldiv@divisor+3,c
  1416  00200A  C0B0  F005         	movff	_main$2137,___lldiv@dividend
  1417  00200E  C0B1  F006         	movff	_main$2137+1,___lldiv@dividend+1
  1418  002012  C0B2  F007         	movff	_main$2137+2,___lldiv@dividend+2
  1419  002016  C0B3  F008         	movff	_main$2137+3,___lldiv@dividend+3
  1420  00201A  ECB8  F01B         	call	___lldiv	;wreg free
  1421  00201E  C005  F0B4         	movff	?___lldiv,_main$2138
  1422  002022  C006  F0B5         	movff	?___lldiv+1,_main$2138+1
  1423  002026  C007  F0B6         	movff	?___lldiv+2,_main$2138+2
  1424  00202A  C008  F0B7         	movff	?___lldiv+3,_main$2138+3
  1425                           
  1426                           ;main.c: 53:       int curr_time = (int) (ReadTime()/60/100/60);
  1427  00202E  C0B4  F005         	movff	_main$2138,___lldiv@dividend
  1428  002032  C0B5  F006         	movff	_main$2138+1,___lldiv@dividend+1
  1429  002036  C0B6  F007         	movff	_main$2138+2,___lldiv@dividend+2
  1430  00203A  C0B7  F008         	movff	_main$2138+3,___lldiv@dividend+3
  1431  00203E  0E3C               	movlw	60
  1432  002040  6E09               	movwf	___lldiv@divisor,c
  1433  002042  0E00               	movlw	0
  1434  002044  6E0A               	movwf	___lldiv@divisor+1,c
  1435  002046  0E00               	movlw	0
  1436  002048  6E0B               	movwf	___lldiv@divisor+2,c
  1437  00204A  0E00               	movlw	0
  1438  00204C  6E0C               	movwf	___lldiv@divisor+3,c
  1439  00204E  ECB8  F01B         	call	___lldiv	;wreg free
  1440  002052  C005  F0BC         	movff	?___lldiv,main@curr_time
  1441  002056  C006  F0BD         	movff	?___lldiv+1,main@curr_time+1
  1442                           
  1443                           ;main.c: 54:       Timer0_StartTimer();
  1444  00205A  EC6B  F01F         	call	_Timer0_StartTimer	;wreg free
  1445                           
  1446                           ;main.c: 55:       UARTSendString("Writing ");
  1447  00205E  0E92               	movlw	low STR_3
  1448  002060  0100               	movlb	0	; () banked
  1449  002062  6FA0               	movwf	UARTSendString@c& (0+255),b
  1450  002064  0E06               	movlw	high STR_3
  1451  002066  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1452  002068  EC45  F01C         	call	_UARTSendString	;wreg free
  1453                           
  1454                           ;main.c: 56:       UARTSendString(int_to_char(temperature));
  1455  00206C  C0BA  F07A         	movff	main@temperature,int_to_char@num
  1456  002070  C0BB  F07B         	movff	main@temperature+1,int_to_char@num+1
  1457  002074  0E00               	movlw	0
  1458  002076  BE7B               	btfsc	int_to_char@num+1,7,c
  1459  002078  0EFF               	movlw	-1
  1460  00207A  6E7C               	movwf	int_to_char@num+2,c
  1461  00207C  6E7D               	movwf	int_to_char@num+3,c
  1462  00207E  EC89  F01D         	call	_int_to_char	;wreg free
  1463  002082  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1464  002086  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1465  00208A  EC45  F01C         	call	_UARTSendString	;wreg free
  1466                           
  1467                           ;main.c: 57:       UARTSendString(" to address ");
  1468  00208E  0E79               	movlw	low STR_4
  1469  002090  0100               	movlb	0	; () banked
  1470  002092  6FA0               	movwf	UARTSendString@c& (0+255),b
  1471  002094  0E06               	movlw	high STR_4
  1472  002096  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1473  002098  EC45  F01C         	call	_UARTSendString	;wreg free
  1474                           
  1475                           ;main.c: 58:       UARTSendString(int_to_char(address));
  1476  00209C  C0D6  F07A         	movff	_address,int_to_char@num
  1477  0020A0  C0D7  F07B         	movff	_address+1,int_to_char@num+1
  1478  0020A4  0E00               	movlw	0
  1479  0020A6  BE7B               	btfsc	int_to_char@num+1,7,c
  1480  0020A8  0EFF               	movlw	-1
  1481  0020AA  6E7C               	movwf	int_to_char@num+2,c
  1482  0020AC  6E7D               	movwf	int_to_char@num+3,c
  1483  0020AE  EC89  F01D         	call	_int_to_char	;wreg free
  1484  0020B2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1485  0020B6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1486  0020BA  EC45  F01C         	call	_UARTSendString	;wreg free
  1487                           
  1488                           ;main.c: 59:       UARTNewLine();
  1489  0020BE  EC22  F01F         	call	_UARTNewLine	;wreg free
  1490                           
  1491                           ;main.c: 60:       write_op(address, temperature);
  1492  0020C2  C0BA  F001         	movff	main@temperature,write_op@data
  1493  0020C6  0100               	movlb	0	; () banked
  1494  0020C8  51D6               	movf	_address& (0+255),w,b
  1495  0020CA  ECF5  F01E         	call	_write_op
  1496                           
  1497                           ;main.c: 61:       _delay((unsigned long)((100)*(16000000/4000.0)));
  1498  0020CE  0E02               	movlw	2
  1499  0020D0  0100               	movlb	0	; () banked
  1500  0020D2  6FAF               	movwf	(??_main+1)& (0+255),b
  1501  0020D4  0E86               	movlw	134
  1502  0020D6  6FAE               	movwf	??_main& (0+255),b
  1503  0020D8  0EDA               	movlw	218
  1504  0020DA                     u5457:
  1505  0020DA  FFFF               	dw	65535	; errata NOP
  1506  0020DC  2EE8               	decfsz	wreg,f,c
  1507  0020DE  D7FD               	bra	u5457
  1508  0020E0  2FAE               	decfsz	??_main& (0+255),f,b
  1509  0020E2  D7FB               	bra	u5457
  1510  0020E4  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  1511  0020E6  D7F9               	bra	u5457
  1512  0020E8  D000               	nop2	
  1513  0020EA  F000               	nop	
  1514                           
  1515                           ;main.c: 62:       UARTSendString("Writing ");
  1516  0020EC  0E92               	movlw	low STR_3
  1517  0020EE  0100               	movlb	0	; () banked
  1518  0020F0  6FA0               	movwf	UARTSendString@c& (0+255),b
  1519  0020F2  0E06               	movlw	high STR_3
  1520  0020F4  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1521  0020F6  EC45  F01C         	call	_UARTSendString	;wreg free
  1522                           
  1523                           ;main.c: 63:       UARTSendString(int_to_char(curr_time));
  1524  0020FA  C0BC  F07A         	movff	main@curr_time,int_to_char@num
  1525  0020FE  C0BD  F07B         	movff	main@curr_time+1,int_to_char@num+1
  1526  002102  0E00               	movlw	0
  1527  002104  BE7B               	btfsc	int_to_char@num+1,7,c
  1528  002106  0EFF               	movlw	-1
  1529  002108  6E7C               	movwf	int_to_char@num+2,c
  1530  00210A  6E7D               	movwf	int_to_char@num+3,c
  1531  00210C  EC89  F01D         	call	_int_to_char	;wreg free
  1532  002110  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1533  002114  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1534  002118  EC45  F01C         	call	_UARTSendString	;wreg free
  1535                           
  1536                           ;main.c: 64:       UARTSendString(" to address ");
  1537  00211C  0E79               	movlw	low STR_4
  1538  00211E  0100               	movlb	0	; () banked
  1539  002120  6FA0               	movwf	UARTSendString@c& (0+255),b
  1540  002122  0E06               	movlw	high STR_4
  1541  002124  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1542  002126  EC45  F01C         	call	_UARTSendString	;wreg free
  1543                           
  1544                           ;main.c: 65:       UARTSendString(int_to_char(address + 1));
  1545  00212A  0E01               	movlw	1
  1546  00212C  0100               	movlb	0	; () banked
  1547  00212E  25D6               	addwf	_address& (0+255),w,b
  1548  002130  6FAE               	movwf	??_main& (0+255),b
  1549  002132  0E00               	movlw	0
  1550  002134  21D7               	addwfc	(_address+1)& (0+255),w,b
  1551  002136  6FAF               	movwf	(??_main+1)& (0+255),b
  1552  002138  C0AE  F07A         	movff	??_main,int_to_char@num
  1553  00213C  C0AF  F07B         	movff	??_main+1,int_to_char@num+1
  1554  002140  0E00               	movlw	0
  1555  002142  BE7B               	btfsc	int_to_char@num+1,7,c
  1556  002144  0EFF               	movlw	-1
  1557  002146  6E7C               	movwf	int_to_char@num+2,c
  1558  002148  6E7D               	movwf	int_to_char@num+3,c
  1559  00214A  EC89  F01D         	call	_int_to_char	;wreg free
  1560  00214E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1561  002152  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1562  002156  EC45  F01C         	call	_UARTSendString	;wreg free
  1563                           
  1564                           ;main.c: 66:       UARTNewLine();
  1565  00215A  EC22  F01F         	call	_UARTNewLine	;wreg free
  1566                           
  1567                           ;main.c: 70:       write_op(address + 1, curr_time);
  1568  00215E  C0BC  F001         	movff	main@curr_time,write_op@data
  1569  002162  0100               	movlb	0	; () banked
  1570  002164  29D6               	incf	_address& (0+255),w,b
  1571  002166  ECF5  F01E         	call	_write_op
  1572                           
  1573                           ;main.c: 71:       address = (address + 2) % 16;
  1574  00216A  0E02               	movlw	2
  1575  00216C  0100               	movlb	0	; () banked
  1576  00216E  25D6               	addwf	_address& (0+255),w,b
  1577  002170  6FAE               	movwf	??_main& (0+255),b
  1578  002172  0E00               	movlw	0
  1579  002174  21D7               	addwfc	(_address+1)& (0+255),w,b
  1580  002176  6FAF               	movwf	(??_main+1)& (0+255),b
  1581  002178  0E0F               	movlw	15
  1582  00217A  15AE               	andwf	??_main& (0+255),w,b
  1583  00217C  6FD6               	movwf	_address& (0+255),b
  1584  00217E  6BD7               	clrf	(_address+1)& (0+255),b
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 72:       UARTSendString("Done writing to memory.");
  1588  002180  0E50               	movlw	low STR_7
  1589  002182  6FA0               	movwf	UARTSendString@c& (0+255),b
  1590  002184  0E06               	movlw	high STR_7
  1591  002186  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1592  002188  EC45  F01C         	call	_UARTSendString	;wreg free
  1593                           
  1594                           ;main.c: 73:       UARTNewLine();
  1595  00218C  EC22  F01F         	call	_UARTNewLine	;wreg free
  1596                           
  1597                           ;main.c: 74:       UARTNewLine();
  1598  002190  EC22  F01F         	call	_UARTNewLine	;wreg free
  1599                           
  1600                           ;main.c: 75:       _delay((unsigned long)((1000)*(16000000/4000.0)));
  1601  002194  0E10               	movlw	16
  1602  002196  0100               	movlb	0	; () banked
  1603  002198  6FAF               	movwf	(??_main+1)& (0+255),b
  1604  00219A  0E3B               	movlw	59
  1605  00219C  6FAE               	movwf	??_main& (0+255),b
  1606  00219E  0E99               	movlw	153
  1607  0021A0                     u5467:
  1608  0021A0  FFFF               	dw	65535	; errata NOP
  1609  0021A2  2EE8               	decfsz	wreg,f,c
  1610  0021A4  D7FD               	bra	u5467
  1611  0021A6  2FAE               	decfsz	??_main& (0+255),f,b
  1612  0021A8  D7FB               	bra	u5467
  1613  0021AA  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  1614  0021AC  D7F9               	bra	u5467
  1615  0021AE  F000               	nop	
  1616                           
  1617                           ;main.c: 76:       break;
  1618  0021B0  D6E3               	goto	l5164
  1619  0021B2                     l155:
  1620  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;main.c: 78:       TRISCbits.TRISC7 = 0;
  1624  0021B4  9E94               	bcf	3988,7,c	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 79:       UARTSendString("Ready for even address input");
  1628  0021B6  0E01               	movlw	low STR_8
  1629  0021B8  6FA0               	movwf	UARTSendString@c& (0+255),b
  1630  0021BA  0E06               	movlw	high STR_8
  1631  0021BC  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1632  0021BE  EC45  F01C         	call	_UARTSendString	;wreg free
  1633                           
  1634                           ;main.c: 80:       UARTNewLine();
  1635  0021C2  EC22  F01F         	call	_UARTNewLine	;wreg free
  1636                           
  1637                           ;main.c: 81:       input = ' ';
  1638  0021C6  0E20               	movlw	32
  1639  0021C8  D003               	goto	L2
  1640  0021CA                     l5228:
  1641  0021CA  FFFF               	dw	65535	; assembler added errata NOP
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 83:         input = UARTRecieveChar();
  1645  0021CC  ECB7  F01E         	call	_UARTRecieveChar	;wreg free
  1646  0021D0                     L2:
  1647  0021D0  FFFF               	dw	65535	; assembler added errata NOP
  1648  0021D2  0100               	movlb	0	; () banked
  1649  0021D4  6FBE               	movwf	main@input& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;main.c: 82:       while (input < '0' || input > '9') {
  1653  0021D6  0E2F               	movlw	47
  1654  0021D8  65BE               	cpfsgt	main@input& (0+255),b
  1655  0021DA  D7F7               	goto	l5228
  1656                           
  1657                           ; BSR set to: 0
  1658  0021DC  0E3A               	movlw	58
  1659  0021DE  61BE               	cpfslt	main@input& (0+255),b
  1660  0021E0  D7F4               	goto	l5228
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 85:       int input_address = input & 0xF;
  1664  0021E2  C0BE  F0AE         	movff	main@input,??_main
  1665  0021E6  0E0F               	movlw	15
  1666  0021E8  17AE               	andwf	??_main& (0+255),f,b
  1667  0021EA  51AE               	movf	??_main& (0+255),w,b
  1668  0021EC  6FB8               	movwf	main@input_address& (0+255),b
  1669  0021EE  6BB9               	clrf	(main@input_address+1)& (0+255),b
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;main.c: 86:       read_SRAM(input_address);
  1673  0021F0  C0B8  F0A6         	movff	main@input_address,read_SRAM@address
  1674  0021F4  C0B9  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1675  0021F8  EC2D  F017         	call	_read_SRAM	;wreg free
  1676                           
  1677                           ;main.c: 87:       break;
  1678  0021FC  D6BD               	goto	l5164
  1679  0021FE                     l5240:
  1680  0021FE  FFFF               	dw	65535	; assembler added errata NOP
  1681                           
  1682                           ; BSR set to: 0
  1683  002200  51BE               	movf	main@input& (0+255),w,b
  1684  002202  6FAE               	movwf	??_main& (0+255),b
  1685  002204  6BAF               	clrf	(??_main+1)& (0+255),b
  1686                           
  1687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1688                           ; Switch size 1, requested type "simple"
  1689                           ; Number of cases is 1, Range of values is 0 to 0
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte            4     3 (average)
  1693                           ;	Chosen strategy is simple_byte
  1694  002206  51AF               	movf	(??_main+1)& (0+255),w,b
  1695  002208  0A00               	xorlw	0	; case 0
  1696  00220A  A4D8               	btfss	status,2,c
  1697  00220C  D6B5               	goto	l5164
  1698                           
  1699                           ; BSR set to: 0
  1700                           ; Switch size 1, requested type "simple"
  1701                           ; Number of cases is 2, Range of values is 114 to 115
  1702                           ; switch strategies available:
  1703                           ; Name         Instructions Cycles
  1704                           ; simple_byte            7     4 (average)
  1705                           ;	Chosen strategy is simple_byte
  1706  00220E  51AE               	movf	??_main& (0+255),w,b
  1707  002210  0A72               	xorlw	114	; case 114
  1708  002212  B4D8               	btfsc	status,2,c
  1709  002214  D7CE               	goto	l155
  1710  002216  0A01               	xorlw	1	; case 115
  1711  002218  B4D8               	btfsc	status,2,c
  1712  00221A  D6BF               	goto	l153
  1713  00221C  D6AD               	goto	l5164
  1714  00221E                     __end_of_main:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _write_op *****************
  1718 ;; Defined at:
  1719 ;;		line 9 in file "drive_memory.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  address         1    wreg     unsigned char 
  1722 ;;  data            1    0[COMRAM] unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  address         1    1[COMRAM] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         1       0       0       0       0       0       0
  1735 ;;      Locals:         1       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         2       0       0       0       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    2
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text1
  1749  003DEA                     __ptext1:
  1750                           	opt callstack 0
  1751  003DEA                     _write_op:
  1752                           	opt callstack 0
  1753  003DEA  FFFF               	dw	65535	; assembler added errata NOP
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;incstack = 0
  1757                           ;write_op@address stored from wreg
  1758  003DEC  6E02               	movwf	write_op@address,c
  1759                           
  1760                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1761  003DEE  9094               	bcf	3988,0,c	;volatile
  1762                           
  1763                           ;drive_memory.c: 12:   TRISD = 0x00;
  1764  003DF0  0E00               	movlw	0
  1765  003DF2  6E95               	movwf	3989,c	;volatile
  1766                           
  1767                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1768  003DF4  0EC0               	movlw	192
  1769  003DF6  1693               	andwf	3987,f,c	;volatile
  1770                           
  1771                           ;drive_memory.c: 14:   PORTB = address;
  1772  003DF8  C002  FF81         	movff	write_op@address,3969	;volatile
  1773                           
  1774                           ;drive_memory.c: 15:   RB5 = 0;
  1775  003DFC  9A81               	bcf	3969,5,c	;volatile
  1776                           
  1777                           ;drive_memory.c: 17:   RC0 = 1;
  1778  003DFE  8082               	bsf	3970,0,c	;volatile
  1779                           
  1780                           ;drive_memory.c: 21:   RC0 = 0;
  1781  003E00  9082               	bcf	3970,0,c	;volatile
  1782                           
  1783                           ;drive_memory.c: 23:   PORTD = data;
  1784                           
  1785                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1786  003E02  C001  FF83         	movff	write_op@data,3971	;volatile
  1787                           
  1788                           ;drive_memory.c: 26:   RC0 = 1;
  1789                           
  1790                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1791  003E06  8082               	bsf	3970,0,c	;volatile
  1792  003E08  0012               	return		;funcret
  1793  003E0A  FFFF               	dw	65535	; errata NOP
  1794  003E0C                     __end_of_write_op:
  1795                           	opt callstack 0
  1796                           
  1797 ;; *************** function _read_SRAM *****************
  1798 ;; Defined at:
  1799 ;;		line 95 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  address         2   38[BANK0 ] int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  time_elapsed    2   44[BANK0 ] int 
  1804 ;;  stored_temp     2   42[BANK0 ] int 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1814 ;;      Params:         0       2       0       0       0       0       0
  1815 ;;      Locals:         0       4       0       0       0       0       0
  1816 ;;      Temps:          0       2       0       0       0       0       0
  1817 ;;      Totals:         0       8       0       0       0       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   11
  1821 ;; This function calls:
  1822 ;;		_UARTNewLine
  1823 ;;		_UARTSendString
  1824 ;;		_int_to_char
  1825 ;;		_read_op
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text2
  1832  002E5A                     __ptext2:
  1833                           	opt callstack 0
  1834  002E5A                     _read_SRAM:
  1835                           	opt callstack 0
  1836  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  1837                           
  1838                           ;main.c: 96:   int stored_temp = read_op(address);
  1839                           
  1840                           ;incstack = 0
  1841  002E5C  0100               	movlb	0	; () banked
  1842  002E5E  51A6               	movf	read_SRAM@address& (0+255),w,b
  1843  002E60  EC06  F01F         	call	_read_op
  1844  002E64  0100               	movlb	0	; () banked
  1845  002E66  6FA8               	movwf	??_read_SRAM& (0+255),b
  1846  002E68  51A8               	movf	??_read_SRAM& (0+255),w,b
  1847  002E6A  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  1848  002E6C  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  1849                           
  1850                           ;main.c: 97:   int time_elapsed = read_op(address + 1);
  1851  002E6E  29A6               	incf	read_SRAM@address& (0+255),w,b
  1852  002E70  EC06  F01F         	call	_read_op
  1853  002E74  0100               	movlb	0	; () banked
  1854  002E76  6FA8               	movwf	??_read_SRAM& (0+255),b
  1855  002E78  51A8               	movf	??_read_SRAM& (0+255),w,b
  1856  002E7A  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  1857  002E7C  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;main.c: 98:   TRISCbits.TRISC7 = 0;
  1861  002E7E  9E94               	bcf	3988,7,c	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;main.c: 99:   UARTSendString("Temperature at address ");
  1865  002E80  0E38               	movlw	low STR_9
  1866  002E82  6FA0               	movwf	UARTSendString@c& (0+255),b
  1867  002E84  0E06               	movlw	high STR_9
  1868  002E86  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1869  002E88  EC45  F01C         	call	_UARTSendString	;wreg free
  1870                           
  1871                           ;main.c: 100:   UARTSendString(int_to_char(address));
  1872  002E8C  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  1873  002E90  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  1874  002E94  0E00               	movlw	0
  1875  002E96  BE7B               	btfsc	int_to_char@num+1,7,c
  1876  002E98  0EFF               	movlw	-1
  1877  002E9A  6E7C               	movwf	int_to_char@num+2,c
  1878  002E9C  6E7D               	movwf	int_to_char@num+3,c
  1879  002E9E  EC89  F01D         	call	_int_to_char	;wreg free
  1880  002EA2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1881  002EA6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1882  002EAA  EC45  F01C         	call	_UARTSendString	;wreg free
  1883                           
  1884                           ;main.c: 101:   UARTSendString(": ");
  1885  002EAE  0EEB               	movlw	low STR_10
  1886  002EB0  0100               	movlb	0	; () banked
  1887  002EB2  6FA0               	movwf	UARTSendString@c& (0+255),b
  1888  002EB4  0E06               	movlw	high STR_10
  1889  002EB6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1890  002EB8  EC45  F01C         	call	_UARTSendString	;wreg free
  1891                           
  1892                           ;main.c: 102:   UARTSendString(int_to_char(stored_temp));
  1893  002EBC  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  1894  002EC0  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  1895  002EC4  0E00               	movlw	0
  1896  002EC6  BE7B               	btfsc	int_to_char@num+1,7,c
  1897  002EC8  0EFF               	movlw	-1
  1898  002ECA  6E7C               	movwf	int_to_char@num+2,c
  1899  002ECC  6E7D               	movwf	int_to_char@num+3,c
  1900  002ECE  EC89  F01D         	call	_int_to_char	;wreg free
  1901  002ED2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1902  002ED6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1903  002EDA  EC45  F01C         	call	_UARTSendString	;wreg free
  1904                           
  1905                           ;main.c: 103:   UARTSendString(" degrees C ");
  1906  002EDE  0E86               	movlw	low STR_11
  1907  002EE0  0100               	movlb	0	; () banked
  1908  002EE2  6FA0               	movwf	UARTSendString@c& (0+255),b
  1909  002EE4  0E06               	movlw	high STR_11
  1910  002EE6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1911  002EE8  EC45  F01C         	call	_UARTSendString	;wreg free
  1912                           
  1913                           ;main.c: 104:   UARTNewLine();
  1914  002EEC  EC22  F01F         	call	_UARTNewLine	;wreg free
  1915                           
  1916                           ;main.c: 105:   UARTSendString("Time at address ");
  1917  002EF0  0E68               	movlw	low STR_12
  1918  002EF2  0100               	movlb	0	; () banked
  1919  002EF4  6FA0               	movwf	UARTSendString@c& (0+255),b
  1920  002EF6  0E06               	movlw	high STR_12
  1921  002EF8  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1922  002EFA  EC45  F01C         	call	_UARTSendString	;wreg free
  1923                           
  1924                           ;main.c: 106:   UARTSendString(int_to_char(address + 1));
  1925  002EFE  0E01               	movlw	1
  1926  002F00  0100               	movlb	0	; () banked
  1927  002F02  25A6               	addwf	read_SRAM@address& (0+255),w,b
  1928  002F04  6FA8               	movwf	??_read_SRAM& (0+255),b
  1929  002F06  0E00               	movlw	0
  1930  002F08  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  1931  002F0A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  1932  002F0C  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  1933  002F10  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  1934  002F14  0E00               	movlw	0
  1935  002F16  BE7B               	btfsc	int_to_char@num+1,7,c
  1936  002F18  0EFF               	movlw	-1
  1937  002F1A  6E7C               	movwf	int_to_char@num+2,c
  1938  002F1C  6E7D               	movwf	int_to_char@num+3,c
  1939  002F1E  EC89  F01D         	call	_int_to_char	;wreg free
  1940  002F22  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1941  002F26  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1942  002F2A  EC45  F01C         	call	_UARTSendString	;wreg free
  1943                           
  1944                           ;main.c: 107:   UARTSendString(": ");
  1945  002F2E  0EEB               	movlw	low STR_10
  1946  002F30  0100               	movlb	0	; () banked
  1947  002F32  6FA0               	movwf	UARTSendString@c& (0+255),b
  1948  002F34  0E06               	movlw	high STR_10
  1949  002F36  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1950  002F38  EC45  F01C         	call	_UARTSendString	;wreg free
  1951                           
  1952                           ;main.c: 108:   UARTSendString(int_to_char(time_elapsed));
  1953  002F3C  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  1954  002F40  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  1955  002F44  0E00               	movlw	0
  1956  002F46  BE7B               	btfsc	int_to_char@num+1,7,c
  1957  002F48  0EFF               	movlw	-1
  1958  002F4A  6E7C               	movwf	int_to_char@num+2,c
  1959  002F4C  6E7D               	movwf	int_to_char@num+3,c
  1960  002F4E  EC89  F01D         	call	_int_to_char	;wreg free
  1961  002F52  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1962  002F56  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1963  002F5A  EC45  F01C         	call	_UARTSendString	;wreg free
  1964                           
  1965                           ;main.c: 109:   UARTSendString(" minutes");
  1966  002F5E  0E9B               	movlw	low STR_14
  1967  002F60  0100               	movlb	0	; () banked
  1968  002F62  6FA0               	movwf	UARTSendString@c& (0+255),b
  1969  002F64  0E06               	movlw	high STR_14
  1970  002F66  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1971  002F68  EC45  F01C         	call	_UARTSendString	;wreg free
  1972                           
  1973                           ;main.c: 110:   UARTNewLine();
  1974  002F6C  EC22  F01F         	call	_UARTNewLine	;wreg free
  1975                           
  1976                           ;main.c: 111:   UARTSendString("Done reading from memory.");
  1977  002F70  0E1E               	movlw	low STR_15
  1978  002F72  0100               	movlb	0	; () banked
  1979  002F74  6FA0               	movwf	UARTSendString@c& (0+255),b
  1980  002F76  0E06               	movlw	high STR_15
  1981  002F78  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1982  002F7A  EC45  F01C         	call	_UARTSendString	;wreg free
  1983                           
  1984                           ;main.c: 112:   UARTNewLine();
  1985  002F7E  EC22  F01F         	call	_UARTNewLine	;wreg free
  1986                           
  1987                           ;main.c: 113:   UARTNewLine();
  1988  002F82  EC22  F01F         	call	_UARTNewLine	;wreg free
  1989                           
  1990                           ;main.c: 114:   _delay((unsigned long)((1000)*(16000000/4000.0)));
  1991  002F86  0E10               	movlw	16
  1992  002F88  0100               	movlb	0	; () banked
  1993  002F8A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  1994  002F8C  0E3B               	movlw	59
  1995  002F8E  6FA8               	movwf	??_read_SRAM& (0+255),b
  1996  002F90  0E99               	movlw	153
  1997  002F92                     u5477:
  1998  002F92  FFFF               	dw	65535	; errata NOP
  1999  002F94  2EE8               	decfsz	wreg,f,c
  2000  002F96  D7FD               	bra	u5477
  2001  002F98  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  2002  002F9A  D7FB               	bra	u5477
  2003  002F9C  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  2004  002F9E  D7F9               	bra	u5477
  2005  002FA0  F000               	nop	
  2006  002FA2  0012               	return		;funcret
  2007  002FA4  FFFF               	dw	65535	; errata NOP
  2008  002FA6                     __end_of_read_SRAM:
  2009                           	opt callstack 0
  2010                           
  2011 ;; *************** function _read_op *****************
  2012 ;; Defined at:
  2013 ;;		line 30 in file "drive_memory.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  address         1    wreg     unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  address         1    0[COMRAM] unsigned char 
  2018 ;;  result          1    1[COMRAM] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      unsigned char 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2028 ;;      Params:         0       0       0       0       0       0       0
  2029 ;;      Locals:         2       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0
  2031 ;;      Totals:         2       0       0       0       0       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_read_SRAM
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text3
  2043  003E0C                     __ptext3:
  2044                           	opt callstack 0
  2045  003E0C                     _read_op:
  2046                           	opt callstack 0
  2047  003E0C  FFFF               	dw	65535	; assembler added errata NOP
  2048                           
  2049                           ;incstack = 0
  2050                           ;read_op@address stored from wreg
  2051  003E0E  6E01               	movwf	read_op@address,c
  2052                           
  2053                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  2054  003E10  9094               	bcf	3988,0,c	;volatile
  2055                           
  2056                           ;drive_memory.c: 33:   TRISD = 0xFF;
  2057  003E12  6895               	setf	3989,c	;volatile
  2058                           
  2059                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  2060  003E14  0EC0               	movlw	192
  2061  003E16  1693               	andwf	3987,f,c	;volatile
  2062                           
  2063                           ;drive_memory.c: 35:   PORTB = address;
  2064  003E18  C001  FF81         	movff	read_op@address,3969	;volatile
  2065                           
  2066                           ;drive_memory.c: 36:   RB5 = 1;
  2067  003E1C  8A81               	bsf	3969,5,c	;volatile
  2068                           
  2069                           ;drive_memory.c: 38:   RC0 = 1;
  2070  003E1E  8082               	bsf	3970,0,c	;volatile
  2071                           
  2072                           ;drive_memory.c: 41:   RB5 = 0;
  2073  003E20  9A81               	bcf	3969,5,c	;volatile
  2074                           
  2075                           ;drive_memory.c: 45:   RB5 = 1;
  2076                           
  2077                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  2078  003E22  8A81               	bsf	3969,5,c	;volatile
  2079                           
  2080                           ;drive_memory.c: 46:   char result = PORTD;
  2081  003E24  CF83 F002          	movff	3971,read_op@result	;volatile
  2082                           
  2083                           ;drive_memory.c: 47:   return result;
  2084  003E28  5002               	movf	read_op@result,w,c
  2085  003E2A  0012               	return		;funcret
  2086  003E2C  FFFF               	dw	65535	; errata NOP
  2087  003E2E                     __end_of_read_op:
  2088                           	opt callstack 0
  2089                           
  2090 ;; *************** function _int_to_char *****************
  2091 ;; Defined at:
  2092 ;;		line 18 in file "lcd.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  num             4  121[COMRAM] unsigned long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  result         10   18[BANK0 ] unsigned char [10]
  2097 ;;  the_num         4   28[BANK0 ] unsigned long 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2  121[COMRAM] PTR unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2107 ;;      Params:         4       0       0       0       0       0       0
  2108 ;;      Locals:         0      14       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0
  2110 ;;      Totals:         4      14       0       0       0       0       0
  2111 ;;Total ram usage:       18 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:   10
  2114 ;; This function calls:
  2115 ;;		_getchar
  2116 ;;		_sprintf
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;;		_read_SRAM
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text4
  2124  003B12                     __ptext4:
  2125                           	opt callstack 0
  2126  003B12                     _int_to_char:
  2127                           	opt callstack 0
  2128  003B12  FFFF               	dw	65535	; assembler added errata NOP
  2129                           
  2130                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  2131                           
  2132                           ;incstack = 0
  2133  003B14  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  2134  003B18  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  2135  003B1C  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  2136  003B20  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  2137                           
  2138                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  2139  003B24  0E92               	movlw	low int_to_char@result
  2140  003B26  0100               	movlb	0	; () banked
  2141  003B28  6F80               	movwf	sprintf@s& (0+255),b
  2142  003B2A  0E00               	movlw	high int_to_char@result
  2143  003B2C  6F81               	movwf	(sprintf@s+1)& (0+255),b
  2144  003B2E  0EC0               	movlw	low STR_1
  2145  003B30  6F82               	movwf	sprintf@fmt& (0+255),b
  2146  003B32  0E06               	movlw	high STR_1
  2147  003B34  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  2148  003B36  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  2149  003B3A  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  2150  003B3E  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  2151  003B42  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  2152  003B46  ECB9  F01C         	call	_sprintf	;wreg free
  2153                           
  2154                           ;lcd.c: 22:   getchar();
  2155  003B4A  EC4A  F01F         	call	_getchar	;wreg free
  2156                           
  2157                           ;lcd.c: 23:   return result;
  2158  003B4E  0E92               	movlw	low int_to_char@result
  2159  003B50  6E7A               	movwf	?_int_to_char,c
  2160  003B52  0E00               	movlw	high int_to_char@result
  2161  003B54  6E7B               	movwf	?_int_to_char+1,c
  2162  003B56  0012               	return		;funcret
  2163  003B58  FFFF               	dw	65535	; errata NOP
  2164  003B5A                     __end_of_int_to_char:
  2165                           	opt callstack 0
  2166                           
  2167 ;; *************** function _sprintf *****************
  2168 ;; Defined at:
  2169 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2172 ;;		 -> int_to_char@result(10), 
  2173 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2174 ;;		 -> STR_1(4), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  f               6   10[BANK0 ] struct _IO_FILE
  2177 ;;  ap              2   16[BANK0 ] PTR void [1]
  2178 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2179 ;;  ret             2    0        int 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2    0[BANK0 ] int 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2189 ;;      Params:         0       8       0       0       0       0       0
  2190 ;;      Locals:         0      10       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0
  2192 ;;      Totals:         0      18       0       0       0       0       0
  2193 ;;Total ram usage:       18 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    9
  2196 ;; This function calls:
  2197 ;;		_vfprintf
  2198 ;; This function is called by:
  2199 ;;		_int_to_char
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text5
  2204  003972                     __ptext5:
  2205                           	opt callstack 0
  2206  003972                     _sprintf:
  2207                           	opt callstack 0
  2208  003972  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ;incstack = 0
  2211  003974  0E84               	movlw	low (?_sprintf+4)
  2212  003976  0100               	movlb	0	; () banked
  2213  003978  6F90               	movwf	sprintf@ap& (0+255),b
  2214  00397A  0E00               	movlw	high (?_sprintf+4)
  2215  00397C  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  2216  00397E  C080  F08A         	movff	sprintf@s,sprintf@f
  2217  003982  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  2218                           
  2219                           ; BSR set to: 0
  2220  003986  0E00               	movlw	0
  2221  003988  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  2222  00398A  0E00               	movlw	0
  2223  00398C  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  2224                           
  2225                           ; BSR set to: 0
  2226  00398E  0E00               	movlw	0
  2227  003990  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  2228  003992  0E00               	movlw	0
  2229  003994  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  2230                           
  2231                           ; BSR set to: 0
  2232  003996  0E8A               	movlw	low sprintf@f
  2233  003998  6E72               	movwf	vfprintf@fp,c
  2234  00399A  0E00               	movlw	high sprintf@f
  2235  00399C  6E73               	movwf	vfprintf@fp+1,c
  2236  00399E  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  2237  0039A2  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2238  0039A6  0E90               	movlw	low sprintf@ap
  2239  0039A8  6E76               	movwf	vfprintf@ap,c
  2240  0039AA  0E00               	movlw	high sprintf@ap
  2241  0039AC  6E77               	movwf	vfprintf@ap+1,c
  2242  0039AE  EC89  F01C         	call	_vfprintf	;wreg free
  2243  0039B2  0100               	movlb	0	; () banked
  2244  0039B4  518C               	movf	(sprintf@f+2)& (0+255),w,b
  2245  0039B6  2580               	addwf	sprintf@s& (0+255),w,b
  2246  0039B8  6ED9               	movwf	fsr2l,c
  2247  0039BA  518D               	movf	(sprintf@f+3)& (0+255),w,b
  2248  0039BC  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  2249  0039BE  6EDA               	movwf	fsr2h,c
  2250  0039C0  0E00               	movlw	0
  2251  0039C2  6EDF               	movwf	indf2,c
  2252                           
  2253                           ; BSR set to: 0
  2254  0039C4  0012               	return		;funcret
  2255  0039C6  FFFF               	dw	65535	; errata NOP
  2256  0039C8                     __end_of_sprintf:
  2257                           	opt callstack 0
  2258                           
  2259 ;; *************** function _vfprintf *****************
  2260 ;; Defined at:
  2261 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  2264 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  2265 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2266 ;;		 -> STR_2(3), STR_1(4), 
  2267 ;;  ap              2  117[COMRAM] PTR PTR void 
  2268 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  2271 ;;		 -> STR_2(3), STR_1(4), 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2  113[COMRAM] int 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         6       0       0       0       0       0       0
  2282 ;;      Locals:         2       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         8       0       0       0       0       0       0
  2285 ;;Total ram usage:        8 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    8
  2288 ;; This function calls:
  2289 ;;		_vfpfcnvrt
  2290 ;; This function is called by:
  2291 ;;		_sprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text6
  2296  003912                     __ptext6:
  2297                           	opt callstack 0
  2298  003912                     _vfprintf:
  2299                           	opt callstack 0
  2300  003912  FFFF               	dw	65535	; assembler added errata NOP
  2301                           
  2302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;incstack = 0
  2306  003914  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  2307  003918  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2308                           
  2309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2310  00391C  0E00               	movlw	0
  2311  00391E  0100               	movlb	0	; () banked
  2312  003920  6FCF               	movwf	(_nout+1)& (0+255),b
  2313  003922  0E00               	movlw	0
  2314  003924  6FCE               	movwf	_nout& (0+255),b
  2315                           
  2316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2317  003926  D014               	goto	l4340
  2318  003928                     l4338:
  2319  003928  FFFF               	dw	65535	; assembler added errata NOP
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2323  00392A  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2324  00392E  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2325  003932  0E78               	movlw	low vfprintf@cfmt
  2326  003934  6E45               	movwf	vfpfcnvrt@fmt,c
  2327  003936  0E00               	movlw	high vfprintf@cfmt
  2328  003938  6E46               	movwf	vfpfcnvrt@fmt+1,c
  2329  00393A  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2330  00393E  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2331  003942  EC79  F003         	call	_vfpfcnvrt	;wreg free
  2332  003946  5043               	movf	?_vfpfcnvrt,w,c
  2333  003948  0100               	movlb	0	; () banked
  2334  00394A  27CE               	addwf	_nout& (0+255),f,b
  2335  00394C  5044               	movf	?_vfpfcnvrt+1,w,c
  2336  00394E  23CF               	addwfc	(_nout+1)& (0+255),f,b
  2337  003950                     l4340:
  2338  003950  FFFF               	dw	65535	; assembler added errata NOP
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2342  003952  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  2343  003956  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2344  00395A                     	if	0	;tblptru may be non-zero
  2345  00395A                     	endif
  2346  00395A                     	if	0	;tblptru may be non-zero
  2347  00395A                     	endif
  2348  00395A  0008               	tblrd		*
  2349  00395C  FFFF               	dw	65535	; errata NOP
  2350  00395E  50F5               	movf	tablat,w,c
  2351  003960  0900               	iorlw	0
  2352  003962  A4D8               	btfss	status,2,c
  2353  003964  D7E1               	goto	l4338
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2357  003966  C0CE  F072         	movff	_nout,?_vfprintf
  2358  00396A  C0CF  F073         	movff	_nout+1,?_vfprintf+1
  2359                           
  2360                           ; BSR set to: 0
  2361  00396E  0012               	return		;funcret
  2362  003970  FFFF               	dw	65535	; errata NOP
  2363  003972                     __end_of_vfprintf:
  2364                           	opt callstack 0
  2365                           
  2366 ;; *************** function _vfpfcnvrt *****************
  2367 ;; Defined at:
  2368 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2371 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  2372 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2373 ;;		 -> vfprintf@cfmt(2), 
  2374 ;;  ap              2   70[COMRAM] PTR PTR void 
  2375 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  llu             8  105[COMRAM] unsigned long long 
  2378 ;;  ll              8   94[COMRAM] long long 
  2379 ;;  f               4    0        long long 
  2380 ;;  ct              3    0        unsigned char [3]
  2381 ;;  vp              2  102[COMRAM] PTR void 
  2382 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2383 ;;  done            2   88[COMRAM] int 
  2384 ;;  cp              2   86[COMRAM] PTR unsigned char 
  2385 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  2386 ;;  i               2    0        int 
  2387 ;;  c               1  104[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2   66[COMRAM] int 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2397 ;;      Params:         6       0       0       0       0       0       0
  2398 ;;      Locals:        27       0       0       0       0       0       0
  2399 ;;      Temps:         14       0       0       0       0       0       0
  2400 ;;      Totals:        47       0       0       0       0       0       0
  2401 ;;Total ram usage:       47 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    7
  2404 ;; This function calls:
  2405 ;;		_atoi
  2406 ;;		_ctoa
  2407 ;;		_dtoa
  2408 ;;		_fputc
  2409 ;;		_isdigit
  2410 ;;		_otoa
  2411 ;;		_stoa
  2412 ;;		_strncmp
  2413 ;;		_utoa
  2414 ;;		_xtoa
  2415 ;; This function is called by:
  2416 ;;		_vfprintf
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text7
  2421  0006F2                     __ptext7:
  2422                           	opt callstack 0
  2423  0006F2                     _vfpfcnvrt:
  2424                           	opt callstack 0
  2425  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  2426                           
  2427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;incstack = 0
  2431  0006F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  0006F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  0006FC  CFDE FFF6          	movff	postinc2,tblptrl
  2434  000700  CFDD FFF7          	movff	postdec2,tblptrh
  2435  000704                     	if	0	;tblptru may be non-zero
  2436  000704                     	endif
  2437  000704                     	if	0	;tblptru may be non-zero
  2438  000704                     	endif
  2439  000704  0008               	tblrd		*
  2440  000706  FFFF               	dw	65535	; errata NOP
  2441  000708  50F5               	movf	tablat,w,c
  2442  00070A  0A25               	xorlw	37
  2443  00070C  A4D8               	btfss	status,2,c
  2444  00070E  EF2A  F00C         	goto	l4318
  2445                           
  2446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2447  000712  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2448  000716  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2449  00071A  2ADE               	incf	postinc2,f,c
  2450  00071C  0E00               	movlw	0
  2451  00071E  22DD               	addwfc	postdec2,f,c
  2452                           
  2453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2454  000720  0E00               	movlw	0
  2455  000722  0100               	movlb	0	; () banked
  2456  000724  6FD1               	movwf	(_width+1)& (0+255),b
  2457  000726  0E00               	movlw	0
  2458  000728  6FD0               	movwf	_width& (0+255),b
  2459  00072A  C0D0  F0D4         	movff	_width,_flags
  2460  00072E  C0D1  F0D5         	movff	_width+1,_flags+1
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2464  000732  69D2               	setf	_prec& (0+255),b
  2465  000734  69D3               	setf	(_prec+1)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  2469  000736  0E00               	movlw	0
  2470  000738  6E5A               	movwf	vfpfcnvrt@done+1,c
  2471  00073A  0E00               	movlw	0
  2472  00073C  D020               	goto	L3
  2473  00073E                     l3960:
  2474  00073E  FFFF               	dw	65535	; assembler added errata NOP
  2475                           
  2476                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  2477  000740  0100               	movlb	0	; () banked
  2478  000742  81D4               	bsf	_flags& (0+255),0,b
  2479  000744                     l3962:
  2480  000744  FFFF               	dw	65535	; assembler added errata NOP
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  2484  000746  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2485  00074A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2486  00074E  2ADE               	incf	postinc2,f,c
  2487  000750  0E00               	movlw	0
  2488  000752  22DD               	addwfc	postdec2,f,c
  2489                           
  2490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  2491  000754  D03A               	goto	l3986
  2492  000756                     l3964:
  2493  000756  FFFF               	dw	65535	; assembler added errata NOP
  2494                           
  2495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  2496  000758  0100               	movlb	0	; () banked
  2497  00075A  83D4               	bsf	_flags& (0+255),1,b
  2498  00075C  D7F3               	goto	l3962
  2499  00075E                     l3968:
  2500  00075E  FFFF               	dw	65535	; assembler added errata NOP
  2501                           
  2502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  2503  000760  0100               	movlb	0	; () banked
  2504  000762  85D4               	bsf	_flags& (0+255),2,b
  2505  000764  D7EF               	goto	l3962
  2506  000766                     l3972:
  2507  000766  FFFF               	dw	65535	; assembler added errata NOP
  2508                           
  2509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  2510  000768  0100               	movlb	0	; () banked
  2511  00076A  87D4               	bsf	_flags& (0+255),3,b
  2512  00076C  D7EB               	goto	l3962
  2513  00076E                     l3976:
  2514  00076E  FFFF               	dw	65535	; assembler added errata NOP
  2515                           
  2516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  2517  000770  0100               	movlb	0	; () banked
  2518  000772  89D4               	bsf	_flags& (0+255),4,b
  2519  000774  D7E7               	goto	l3962
  2520  000776                     l3980:
  2521  000776  FFFF               	dw	65535	; assembler added errata NOP
  2522                           
  2523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  2524  000778  0E00               	movlw	0
  2525  00077A  6E5A               	movwf	vfpfcnvrt@done+1,c
  2526  00077C  0E01               	movlw	1
  2527  00077E                     L3:
  2528  00077E  FFFF               	dw	65535	; assembler added errata NOP
  2529  000780  6E59               	movwf	vfpfcnvrt@done,c
  2530                           
  2531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  2532  000782  D023               	goto	l3986
  2533  000784                     l3984:
  2534  000784  FFFF               	dw	65535	; assembler added errata NOP
  2535  000786  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536  00078A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537  00078E  CFDE FFF6          	movff	postinc2,tblptrl
  2538  000792  CFDD FFF7          	movff	postdec2,tblptrh
  2539  000796                     	if	0	;tblptru may be non-zero
  2540  000796                     	endif
  2541  000796                     	if	0	;tblptru may be non-zero
  2542  000796                     	endif
  2543  000796  0008               	tblrd		*
  2544  000798  FFFF               	dw	65535	; errata NOP
  2545  00079A  50F5               	movf	tablat,w,c
  2546  00079C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2547  00079E  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2548                           
  2549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2550                           ; Switch size 1, requested type "simple"
  2551                           ; Number of cases is 1, Range of values is 0 to 0
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte            4     3 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  0007A0  504A               	movf	??_vfpfcnvrt+1,w,c
  2557  0007A2  0A00               	xorlw	0	; case 0
  2558  0007A4  A4D8               	btfss	status,2,c
  2559  0007A6  D7E7               	goto	l3980
  2560                           
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 5, Range of values is 32 to 48
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte           16     9 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567  0007A8  5049               	movf	??_vfpfcnvrt,w,c
  2568  0007AA  0A20               	xorlw	32	; case 32
  2569  0007AC  B4D8               	btfsc	status,2,c
  2570  0007AE  D7DB               	goto	l3972
  2571  0007B0  0A03               	xorlw	3	; case 35
  2572  0007B2  B4D8               	btfsc	status,2,c
  2573  0007B4  D7DC               	goto	l3976
  2574  0007B6  0A08               	xorlw	8	; case 43
  2575  0007B8  B4D8               	btfsc	status,2,c
  2576  0007BA  D7D1               	goto	l3968
  2577  0007BC  0A06               	xorlw	6	; case 45
  2578  0007BE  B4D8               	btfsc	status,2,c
  2579  0007C0  D7BE               	goto	l3960
  2580  0007C2  0A1D               	xorlw	29	; case 48
  2581  0007C4  B4D8               	btfsc	status,2,c
  2582  0007C6  D7C7               	goto	l3964
  2583  0007C8  D7D6               	goto	l3980
  2584  0007CA                     l3986:
  2585  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  2586                           
  2587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  2588  0007CC  5059               	movf	vfpfcnvrt@done,w,c
  2589  0007CE  105A               	iorwf	vfpfcnvrt@done+1,w,c
  2590  0007D0  B4D8               	btfsc	status,2,c
  2591  0007D2  D7D8               	goto	l3984
  2592                           
  2593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  2594  0007D4  0100               	movlb	0	; () banked
  2595  0007D6  B1D4               	btfsc	_flags& (0+255),0,b
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  2599  0007D8  93D4               	bcf	_flags& (0+255),1,b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  2603  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  0007E2  CFDE FFF6          	movff	postinc2,tblptrl
  2606  0007E6  CFDD FFF7          	movff	postdec2,tblptrh
  2607  0007EA                     	if	0	;tblptru may be non-zero
  2608  0007EA                     	endif
  2609  0007EA                     	if	0	;tblptru may be non-zero
  2610  0007EA                     	endif
  2611  0007EA  0008               	tblrd		*
  2612  0007EC  FFFF               	dw	65535	; errata NOP
  2613  0007EE  50F5               	movf	tablat,w,c
  2614  0007F0  0A2A               	xorlw	42
  2615  0007F2  A4D8               	btfss	status,2,c
  2616  0007F4  D023               	goto	l3998
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  2620  0007F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  0007FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  0007FE  2ADE               	incf	postinc2,f,c
  2623  000800  0E00               	movlw	0
  2624  000802  22DD               	addwfc	postdec2,f,c
  2625                           
  2626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2627  000804  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2628  000808  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2629  00080C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2630  000810  0E02               	movlw	2
  2631  000812  26DE               	addwf	postinc2,f,c
  2632  000814  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2633  000818  0E00               	movlw	0
  2634  00081A  22DD               	addwfc	postdec2,f,c
  2635  00081C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2636  000820  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2637  000824  CFDE F0D0          	movff	postinc2,_width
  2638  000828  CFDD F0D1          	movff	postdec2,_width+1
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  2642  00082C  AFD1               	btfss	(_width+1)& (0+255),7,b
  2643  00082E  D045               	goto	u3950
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  2647  000830  81D4               	bsf	_flags& (0+255),0,b
  2648                           
  2649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  2650  000832  6DD0               	negf	_width& (0+255),b
  2651  000834  1FD1               	comf	(_width+1)& (0+255),f,b
  2652  000836  B0D8               	btfsc	status,0,c
  2653  000838  2BD1               	incf	(_width+1)& (0+255),f,b
  2654  00083A  D03F               	goto	u3950
  2655  00083C                     l3998:
  2656  00083C  FFFF               	dw	65535	; assembler added errata NOP
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  2660  00083E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2661  000842  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2662  000846  CFDE F008          	movff	postinc2,atoi@s
  2663  00084A  CFDD F009          	movff	postdec2,atoi@s+1
  2664  00084E  EC1E  F015         	call	_atoi	;wreg free
  2665  000852  C008  F0D0         	movff	?_atoi,_width
  2666  000856  C009  F0D1         	movff	?_atoi+1,_width+1
  2667                           
  2668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2669  00085A  D008               	goto	l4002
  2670  00085C                     l4000:
  2671  00085C  FFFF               	dw	65535	; assembler added errata NOP
  2672                           
  2673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  2674  00085E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2675  000862  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2676  000866  2ADE               	incf	postinc2,f,c
  2677  000868  0E00               	movlw	0
  2678  00086A  22DD               	addwfc	postdec2,f,c
  2679  00086C                     l4002:
  2680  00086C  FFFF               	dw	65535	; assembler added errata NOP
  2681  00086E  0ED0               	movlw	208
  2682  000870  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2683  000872  0EFF               	movlw	255
  2684  000874  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2685  000876  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2686  00087A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2687  00087E  CFDE FFF6          	movff	postinc2,tblptrl
  2688  000882  CFDD FFF7          	movff	postdec2,tblptrh
  2689  000886                     	if	0	;tblptru may be non-zero
  2690  000886                     	endif
  2691  000886                     	if	0	;tblptru may be non-zero
  2692  000886                     	endif
  2693  000886  0008               	tblrd		*
  2694  000888  FFFF               	dw	65535	; errata NOP
  2695  00088A  50F5               	movf	tablat,w,c
  2696  00088C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2697  00088E  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2698  000890  5049               	movf	??_vfpfcnvrt,w,c
  2699  000892  264B               	addwf	??_vfpfcnvrt+2,f,c
  2700  000894  504A               	movf	??_vfpfcnvrt+1,w,c
  2701  000896  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2702  000898  504C               	movf	??_vfpfcnvrt+3,w,c
  2703  00089A  E106               	bnz	u3930
  2704  00089C  0E0A               	movlw	10
  2705  00089E  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2706  0008A0  B0D8               	btfsc	status,0,c
  2707  0008A2  D002               	goto	u3930
  2708  0008A4  0E01               	movlw	1
  2709  0008A6  D002               	goto	u3940
  2710  0008A8                     u3930:
  2711  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  2712  0008AA  0E00               	movlw	0
  2713  0008AC                     u3940:
  2714  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  2715  0008AE  6E5B               	movwf	_vfpfcnvrt$1103,c
  2716  0008B0  6A5C               	clrf	_vfpfcnvrt$1103+1,c
  2717  0008B2  505B               	movf	_vfpfcnvrt$1103,w,c
  2718  0008B4  105C               	iorwf	_vfpfcnvrt$1103+1,w,c
  2719  0008B6  A4D8               	btfss	status,2,c
  2720  0008B8  D7D1               	goto	l4000
  2721  0008BA                     u3950:
  2722  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  2723                           
  2724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2725  0008BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2726  0008C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2727  0008C4  CFDE FFF6          	movff	postinc2,tblptrl
  2728  0008C8  CFDD FFF7          	movff	postdec2,tblptrh
  2729  0008CC                     	if	0	;tblptru may be non-zero
  2730  0008CC                     	endif
  2731  0008CC                     	if	0	;tblptru may be non-zero
  2732  0008CC                     	endif
  2733  0008CC  0008               	tblrd		*
  2734  0008CE  FFFF               	dw	65535	; errata NOP
  2735  0008D0  50F5               	movf	tablat,w,c
  2736  0008D2  0A2E               	xorlw	46
  2737  0008D4  A4D8               	btfss	status,2,c
  2738  0008D6  D075               	goto	u4000
  2739                           
  2740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2741  0008D8  0E00               	movlw	0
  2742  0008DA  0100               	movlb	0	; () banked
  2743  0008DC  6FD3               	movwf	(_prec+1)& (0+255),b
  2744  0008DE  0E00               	movlw	0
  2745  0008E0  6FD2               	movwf	_prec& (0+255),b
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2749  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  0008EA  2ADE               	incf	postinc2,f,c
  2752  0008EC  0E00               	movlw	0
  2753  0008EE  22DD               	addwfc	postdec2,f,c
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2757  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2758  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2759  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  2760  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  2761  000900                     	if	0	;tblptru may be non-zero
  2762  000900                     	endif
  2763  000900                     	if	0	;tblptru may be non-zero
  2764  000900                     	endif
  2765  000900  0008               	tblrd		*
  2766  000902  FFFF               	dw	65535	; errata NOP
  2767  000904  50F5               	movf	tablat,w,c
  2768  000906  0A2A               	xorlw	42
  2769  000908  A4D8               	btfss	status,2,c
  2770  00090A  D01C               	goto	l4018
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2774  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  000914  2ADE               	incf	postinc2,f,c
  2777  000916  0E00               	movlw	0
  2778  000918  22DD               	addwfc	postdec2,f,c
  2779                           
  2780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2781  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2782  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2783  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2784  000926  0E02               	movlw	2
  2785  000928  26DE               	addwf	postinc2,f,c
  2786  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2787  00092E  0E00               	movlw	0
  2788  000930  22DD               	addwfc	postdec2,f,c
  2789  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2790  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2791  00093A  CFDE F0D2          	movff	postinc2,_prec
  2792  00093E  CFDD F0D3          	movff	postdec2,_prec+1
  2793                           
  2794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2795  000942  D03F               	goto	u4000
  2796  000944                     l4018:
  2797  000944  FFFF               	dw	65535	; assembler added errata NOP
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2801  000946  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2802  00094A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2803  00094E  CFDE F008          	movff	postinc2,atoi@s
  2804  000952  CFDD F009          	movff	postdec2,atoi@s+1
  2805  000956  EC1E  F015         	call	_atoi	;wreg free
  2806  00095A  C008  F0D2         	movff	?_atoi,_prec
  2807  00095E  C009  F0D3         	movff	?_atoi+1,_prec+1
  2808                           
  2809                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2810  000962  D008               	goto	l4022
  2811  000964                     l4020:
  2812  000964  FFFF               	dw	65535	; assembler added errata NOP
  2813                           
  2814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2815  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2816  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2817  00096E  2ADE               	incf	postinc2,f,c
  2818  000970  0E00               	movlw	0
  2819  000972  22DD               	addwfc	postdec2,f,c
  2820  000974                     l4022:
  2821  000974  FFFF               	dw	65535	; assembler added errata NOP
  2822  000976  0ED0               	movlw	208
  2823  000978  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  2824  00097A  0EFF               	movlw	255
  2825  00097C  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2826  00097E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2827  000982  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2828  000986  CFDE FFF6          	movff	postinc2,tblptrl
  2829  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  2830  00098E                     	if	0	;tblptru may be non-zero
  2831  00098E                     	endif
  2832  00098E                     	if	0	;tblptru may be non-zero
  2833  00098E                     	endif
  2834  00098E  0008               	tblrd		*
  2835  000990  FFFF               	dw	65535	; errata NOP
  2836  000992  50F5               	movf	tablat,w,c
  2837  000994  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2838  000996  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2839  000998  5049               	movf	??_vfpfcnvrt,w,c
  2840  00099A  264B               	addwf	??_vfpfcnvrt+2,f,c
  2841  00099C  504A               	movf	??_vfpfcnvrt+1,w,c
  2842  00099E  224C               	addwfc	??_vfpfcnvrt+3,f,c
  2843  0009A0  504C               	movf	??_vfpfcnvrt+3,w,c
  2844  0009A2  E106               	bnz	u3980
  2845  0009A4  0E0A               	movlw	10
  2846  0009A6  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  2847  0009A8  B0D8               	btfsc	status,0,c
  2848  0009AA  D002               	goto	u3980
  2849  0009AC  0E01               	movlw	1
  2850  0009AE  D002               	goto	u3990
  2851  0009B0                     u3980:
  2852  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  2853  0009B2  0E00               	movlw	0
  2854  0009B4                     u3990:
  2855  0009B4  FFFF               	dw	65535	; assembler added errata NOP
  2856  0009B6  6E5D               	movwf	_vfpfcnvrt$1104,c
  2857  0009B8  6A5E               	clrf	_vfpfcnvrt$1104+1,c
  2858  0009BA  505D               	movf	_vfpfcnvrt$1104,w,c
  2859  0009BC  105E               	iorwf	_vfpfcnvrt$1104+1,w,c
  2860  0009BE  A4D8               	btfss	status,2,c
  2861  0009C0  D7D1               	goto	l4020
  2862  0009C2                     u4000:
  2863  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  2864                           
  2865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  2866  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2867  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2868  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  2869  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  2870  0009D4                     	if	0	;tblptru may be non-zero
  2871  0009D4                     	endif
  2872  0009D4                     	if	0	;tblptru may be non-zero
  2873  0009D4                     	endif
  2874  0009D4  0008               	tblrd		*
  2875  0009D6  FFFF               	dw	65535	; errata NOP
  2876  0009D8  50F5               	movf	tablat,w,c
  2877  0009DA  0A63               	xorlw	99
  2878  0009DC  A4D8               	btfss	status,2,c
  2879  0009DE  D027               	goto	l4036
  2880                           
  2881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2882  0009E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2883  0009E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2884  0009E8  2ADE               	incf	postinc2,f,c
  2885  0009EA  0E00               	movlw	0
  2886  0009EC  22DD               	addwfc	postdec2,f,c
  2887                           
  2888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2889  0009EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2890  0009F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2891  0009F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2892  0009FA  0E02               	movlw	2
  2893  0009FC  26DE               	addwf	postinc2,f,c
  2894  0009FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2895  000A02  0E00               	movlw	0
  2896  000A04  22DD               	addwfc	postdec2,f,c
  2897  000A06  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2898  000A0A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2899  000A0E  50DF               	movf	indf2,w,c
  2900  000A10  6E69               	movwf	vfpfcnvrt@c,c
  2901                           
  2902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2903  000A12  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2904  000A16  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2905  000A1A  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2906  000A1E  EC0F  F01D         	call	_ctoa	;wreg free
  2907  000A22  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2908  000A26  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2909  000A2A  EF46  F00C         	goto	l527
  2910  000A2E                     l4036:
  2911  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2912                           
  2913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2914  000A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  000A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  000A38  CFDE F001          	movff	postinc2,strncmp@_l
  2917  000A3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2918  000A40  0EA8               	movlw	low STR_16
  2919  000A42  6E03               	movwf	strncmp@_r,c
  2920  000A44  0E06               	movlw	high STR_16
  2921  000A46  6E04               	movwf	strncmp@_r+1,c
  2922  000A48  0E00               	movlw	0
  2923  000A4A  6E06               	movwf	strncmp@n+1,c
  2924  000A4C  0E03               	movlw	3
  2925  000A4E  6E05               	movwf	strncmp@n,c
  2926  000A50  EC4E  F01A         	call	_strncmp	;wreg free
  2927  000A54  5001               	movf	?_strncmp,w,c
  2928  000A56  1002               	iorwf	?_strncmp+1,w,c
  2929  000A58  B4D8               	btfsc	status,2,c
  2930  000A5A  D016               	goto	u4030
  2931  000A5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2932  000A60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2933  000A64  CFDE F001          	movff	postinc2,strncmp@_l
  2934  000A68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2935  000A6C  0EAC               	movlw	low STR_20
  2936  000A6E  6E03               	movwf	strncmp@_r,c
  2937  000A70  0E06               	movlw	high STR_20
  2938  000A72  6E04               	movwf	strncmp@_r+1,c
  2939  000A74  0E00               	movlw	0
  2940  000A76  6E06               	movwf	strncmp@n+1,c
  2941  000A78  0E03               	movlw	3
  2942  000A7A  6E05               	movwf	strncmp@n,c
  2943  000A7C  EC4E  F01A         	call	_strncmp	;wreg free
  2944  000A80  5001               	movf	?_strncmp,w,c
  2945  000A82  1002               	iorwf	?_strncmp+1,w,c
  2946  000A84  A4D8               	btfss	status,2,c
  2947  000A86  D043               	goto	l4046
  2948  000A88                     u4030:
  2949  000A88  FFFF               	dw	65535	; assembler added errata NOP
  2950                           
  2951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2952  000A8A  0E03               	movlw	3
  2953  000A8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2954  000A90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2955  000A94  26DE               	addwf	postinc2,f,c
  2956  000A96  0E00               	movlw	0
  2957  000A98  22DD               	addwfc	postdec2,f,c
  2958                           
  2959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2960  000A9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2961  000A9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2962  000AA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2963  000AA6  0E02               	movlw	2
  2964  000AA8  26DE               	addwf	postinc2,f,c
  2965  000AAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2966  000AAE  0E00               	movlw	0
  2967  000AB0  22DD               	addwfc	postdec2,f,c
  2968  000AB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2969  000AB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2970  000ABA  50DF               	movf	indf2,w,c
  2971  000ABC  6E5F               	movwf	vfpfcnvrt@ll,c
  2972  000ABE  0E00               	movlw	0
  2973  000AC0  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2974  000AC2  0EFF               	movlw	-1
  2975  000AC4  6E60               	movwf	vfpfcnvrt@ll+1,c
  2976  000AC6                     L4:
  2977  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  2978  000AC8  6E61               	movwf	vfpfcnvrt@ll+2,c
  2979  000ACA  6E62               	movwf	vfpfcnvrt@ll+3,c
  2980  000ACC  6E63               	movwf	vfpfcnvrt@ll+4,c
  2981  000ACE  6E64               	movwf	vfpfcnvrt@ll+5,c
  2982  000AD0  6E65               	movwf	vfpfcnvrt@ll+6,c
  2983  000AD2  6E66               	movwf	vfpfcnvrt@ll+7,c
  2984  000AD4                     l4042:
  2985  000AD4  FFFF               	dw	65535	; assembler added errata NOP
  2986                           
  2987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2988  000AD6  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2989  000ADA  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2990  000ADE  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2991  000AE2  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2992  000AE6  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2993  000AEA  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2994  000AEE  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2995  000AF2  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2996  000AF6  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2997  000AFA  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2998  000AFE  EC0F  F011         	call	_dtoa	;wreg free
  2999  000B02  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3000  000B06  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3001  000B0A  EF46  F00C         	goto	l527
  3002  000B0E                     l4046:
  3003  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  3004                           
  3005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  3006  000B10  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3007  000B14  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3008  000B18  CFDE F001          	movff	postinc2,strncmp@_l
  3009  000B1C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3010  000B20  0EA9               	movlw	low (STR_16+1)
  3011  000B22  6E03               	movwf	strncmp@_r,c
  3012  000B24  0E06               	movlw	high (STR_16+1)
  3013  000B26  6E04               	movwf	strncmp@_r+1,c
  3014  000B28  0E00               	movlw	0
  3015  000B2A  6E06               	movwf	strncmp@n+1,c
  3016  000B2C  0E02               	movlw	2
  3017  000B2E  6E05               	movwf	strncmp@n,c
  3018  000B30  EC4E  F01A         	call	_strncmp	;wreg free
  3019  000B34  5001               	movf	?_strncmp,w,c
  3020  000B36  1002               	iorwf	?_strncmp+1,w,c
  3021  000B38  B4D8               	btfsc	status,2,c
  3022  000B3A  D016               	goto	u4050
  3023  000B3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3024  000B40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3025  000B44  CFDE F001          	movff	postinc2,strncmp@_l
  3026  000B48  CFDD F002          	movff	postdec2,strncmp@_l+1
  3027  000B4C  0EAD               	movlw	low (STR_20+1)
  3028  000B4E  6E03               	movwf	strncmp@_r,c
  3029  000B50  0E06               	movlw	high (STR_20+1)
  3030  000B52  6E04               	movwf	strncmp@_r+1,c
  3031  000B54  0E00               	movlw	0
  3032  000B56  6E06               	movwf	strncmp@n+1,c
  3033  000B58  0E02               	movlw	2
  3034  000B5A  6E05               	movwf	strncmp@n,c
  3035  000B5C  EC4E  F01A         	call	_strncmp	;wreg free
  3036  000B60  5001               	movf	?_strncmp,w,c
  3037  000B62  1002               	iorwf	?_strncmp+1,w,c
  3038  000B64  A4D8               	btfss	status,2,c
  3039  000B66  D008               	goto	l4056
  3040  000B68                     u4050:
  3041  000B68  FFFF               	dw	65535	; assembler added errata NOP
  3042                           
  3043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  3044  000B6A  0E02               	movlw	2
  3045  000B6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  000B70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  000B74  26DE               	addwf	postinc2,f,c
  3048  000B76  D023               	goto	L14
  3049  000B78                     l4056:
  3050  000B78  FFFF               	dw	65535	; assembler added errata NOP
  3051                           
  3052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  3053  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3054  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3055  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  3056  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  3057  000B8A                     	if	0	;tblptru may be non-zero
  3058  000B8A                     	endif
  3059  000B8A                     	if	0	;tblptru may be non-zero
  3060  000B8A                     	endif
  3061  000B8A  0008               	tblrd		*
  3062  000B8C  FFFF               	dw	65535	; errata NOP
  3063  000B8E  50F5               	movf	tablat,w,c
  3064  000B90  0A64               	xorlw	100
  3065  000B92  B4D8               	btfsc	status,2,c
  3066  000B94  D00E               	goto	u4070
  3067  000B96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  000B9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  3070  000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  3071  000BA6                     	if	0	;tblptru may be non-zero
  3072  000BA6                     	endif
  3073  000BA6                     	if	0	;tblptru may be non-zero
  3074  000BA6                     	endif
  3075  000BA6  0008               	tblrd		*
  3076  000BA8  FFFF               	dw	65535	; errata NOP
  3077  000BAA  50F5               	movf	tablat,w,c
  3078  000BAC  0A69               	xorlw	105
  3079  000BAE  A4D8               	btfss	status,2,c
  3080  000BB0  D021               	goto	l4066
  3081  000BB2                     u4070:
  3082  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  3083                           
  3084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  3085  000BB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3086  000BB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3087  000BBC  2ADE               	incf	postinc2,f,c
  3088  000BBE                     L14:
  3089  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  3090  000BC0  0E00               	movlw	0
  3091  000BC2  22DD               	addwfc	postdec2,f,c
  3092                           
  3093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3094  000BC4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3095  000BC8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3096  000BCC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3097  000BD0  0E02               	movlw	2
  3098  000BD2  26DE               	addwf	postinc2,f,c
  3099  000BD4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3100  000BD8  0E00               	movlw	0
  3101  000BDA  22DD               	addwfc	postdec2,f,c
  3102  000BDC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3103  000BE0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3104  000BE4  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  3105  000BE8  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  3106  000BEC  0E00               	movlw	0
  3107  000BEE  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  3108  000BF0  0EFF               	movlw	-1
  3109  000BF2  D769               	goto	L4
  3110  000BF4                     l4066:
  3111  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  3112                           
  3113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  3114  000BF6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3115  000BFA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3116  000BFE  CFDE F001          	movff	postinc2,strncmp@_l
  3117  000C02  CFDD F002          	movff	postdec2,strncmp@_l+1
  3118  000C06  0ECA               	movlw	low STR_34
  3119  000C08  6E03               	movwf	strncmp@_r,c
  3120  000C0A  0E06               	movlw	high STR_34
  3121  000C0C  6E04               	movwf	strncmp@_r+1,c
  3122  000C0E  0E00               	movlw	0
  3123  000C10  6E06               	movwf	strncmp@n+1,c
  3124  000C12  0E02               	movlw	2
  3125  000C14  6E05               	movwf	strncmp@n,c
  3126  000C16  EC4E  F01A         	call	_strncmp	;wreg free
  3127  000C1A  5001               	movf	?_strncmp,w,c
  3128  000C1C  1002               	iorwf	?_strncmp+1,w,c
  3129  000C1E  B4D8               	btfsc	status,2,c
  3130  000C20  D016               	goto	u4090
  3131  000C22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3132  000C26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3133  000C2A  CFDE F001          	movff	postinc2,strncmp@_l
  3134  000C2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3135  000C32  0ED0               	movlw	low STR_38
  3136  000C34  6E03               	movwf	strncmp@_r,c
  3137  000C36  0E06               	movlw	high STR_38
  3138  000C38  6E04               	movwf	strncmp@_r+1,c
  3139  000C3A  0E00               	movlw	0
  3140  000C3C  6E06               	movwf	strncmp@n+1,c
  3141  000C3E  0E02               	movlw	2
  3142  000C40  6E05               	movwf	strncmp@n,c
  3143  000C42  EC4E  F01A         	call	_strncmp	;wreg free
  3144  000C46  5001               	movf	?_strncmp,w,c
  3145  000C48  1002               	iorwf	?_strncmp+1,w,c
  3146  000C4A  A4D8               	btfss	status,2,c
  3147  000C4C  D043               	goto	l4076
  3148  000C4E                     u4090:
  3149  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  3150                           
  3151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  3152  000C50  0E02               	movlw	2
  3153  000C52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3154  000C56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3155  000C5A  26DE               	addwf	postinc2,f,c
  3156  000C5C  0E00               	movlw	0
  3157  000C5E  22DD               	addwfc	postdec2,f,c
  3158                           
  3159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  3160  000C60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3161  000C64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3162  000C68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3163  000C6C  0E04               	movlw	4
  3164  000C6E  26DE               	addwf	postinc2,f,c
  3165  000C70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3166  000C74  0E00               	movlw	0
  3167  000C76  22DD               	addwfc	postdec2,f,c
  3168  000C78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3169  000C7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3170  000C80  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3171  000C84  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3172  000C88  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3173  000C8C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3174  000C90  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  3175  000C94  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  3176  000C98  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  3177  000C9C  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  3178  000CA0  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  3179  000CA2  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  3180  000CA4  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  3181  000CA6  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  3182  000CAA  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  3183  000CAE  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  3184  000CB2  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  3185  000CB6  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  3186  000CBA  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  3187  000CBE  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  3188  000CC2  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  3189  000CC6  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  3190  000CCA  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  3191  000CCE  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  3192  000CD2  D700               	goto	l4042
  3193  000CD4                     l4076:
  3194  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  3195                           
  3196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  3197  000CD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3198  000CDA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3199  000CDE  CFDE F001          	movff	postinc2,strncmp@_l
  3200  000CE2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3201  000CE6  0ECD               	movlw	low STR_43
  3202  000CE8  6E03               	movwf	strncmp@_r,c
  3203  000CEA  0E06               	movlw	high STR_43
  3204  000CEC  6E04               	movwf	strncmp@_r+1,c
  3205  000CEE  0E00               	movlw	0
  3206  000CF0  6E06               	movwf	strncmp@n+1,c
  3207  000CF2  0E02               	movlw	2
  3208  000CF4  6E05               	movwf	strncmp@n,c
  3209  000CF6  EC4E  F01A         	call	_strncmp	;wreg free
  3210  000CFA  5001               	movf	?_strncmp,w,c
  3211  000CFC  1002               	iorwf	?_strncmp+1,w,c
  3212  000CFE  B4D8               	btfsc	status,2,c
  3213  000D00  D016               	goto	u4110
  3214  000D02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3215  000D06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3216  000D0A  CFDE F001          	movff	postinc2,strncmp@_l
  3217  000D0E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3218  000D12  0ED3               	movlw	low STR_47
  3219  000D14  6E03               	movwf	strncmp@_r,c
  3220  000D16  0E06               	movlw	high STR_47
  3221  000D18  6E04               	movwf	strncmp@_r+1,c
  3222  000D1A  0E00               	movlw	0
  3223  000D1C  6E06               	movwf	strncmp@n+1,c
  3224  000D1E  0E02               	movlw	2
  3225  000D20  6E05               	movwf	strncmp@n,c
  3226  000D22  EC4E  F01A         	call	_strncmp	;wreg free
  3227  000D26  5001               	movf	?_strncmp,w,c
  3228  000D28  1002               	iorwf	?_strncmp+1,w,c
  3229  000D2A  A4D8               	btfss	status,2,c
  3230  000D2C  D028               	goto	l4086
  3231  000D2E                     u4110:
  3232  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  3233                           
  3234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  3235  000D30  0E02               	movlw	2
  3236  000D32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3237  000D36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  000D3A  26DE               	addwf	postinc2,f,c
  3239  000D3C  0E00               	movlw	0
  3240  000D3E  22DD               	addwfc	postdec2,f,c
  3241                           
  3242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3243  000D40  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3244  000D44  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3245  000D48  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3246  000D4C  0E02               	movlw	2
  3247  000D4E  26DE               	addwf	postinc2,f,c
  3248  000D50  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3249  000D54  0E00               	movlw	0
  3250  000D56  22DD               	addwfc	postdec2,f,c
  3251  000D58  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3252  000D5C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3253  000D60  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3254  000D64  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3255  000D68  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3256  000D6C  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3257  000D70  6A61               	clrf	vfpfcnvrt@ll+2,c
  3258  000D72  6A62               	clrf	vfpfcnvrt@ll+3,c
  3259  000D74  6A63               	clrf	vfpfcnvrt@ll+4,c
  3260  000D76  6A64               	clrf	vfpfcnvrt@ll+5,c
  3261  000D78  6A65               	clrf	vfpfcnvrt@ll+6,c
  3262  000D7A  6A66               	clrf	vfpfcnvrt@ll+7,c
  3263  000D7C  D6AB               	goto	l4042
  3264  000D7E                     l4086:
  3265  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  3266                           
  3267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3268  000D80  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3269  000D84  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3270  000D88  CFDE F001          	movff	postinc2,strncmp@_l
  3271  000D8C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3272  000D90  0EB4               	movlw	low STR_52
  3273  000D92  6E03               	movwf	strncmp@_r,c
  3274  000D94  0E06               	movlw	high STR_52
  3275  000D96  6E04               	movwf	strncmp@_r+1,c
  3276  000D98  0E00               	movlw	0
  3277  000D9A  6E06               	movwf	strncmp@n+1,c
  3278  000D9C  0E03               	movlw	3
  3279  000D9E  6E05               	movwf	strncmp@n,c
  3280  000DA0  EC4E  F01A         	call	_strncmp	;wreg free
  3281  000DA4  5001               	movf	?_strncmp,w,c
  3282  000DA6  1002               	iorwf	?_strncmp+1,w,c
  3283  000DA8  A4D8               	btfss	status,2,c
  3284  000DAA  D041               	goto	l4094
  3285                           
  3286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  3287  000DAC  0E03               	movlw	3
  3288  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3289  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3290  000DB6  26DE               	addwf	postinc2,f,c
  3291  000DB8  0E00               	movlw	0
  3292  000DBA  22DD               	addwfc	postdec2,f,c
  3293                           
  3294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3295  000DBC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3296  000DC0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3297  000DC4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3298  000DC8  0E02               	movlw	2
  3299  000DCA  26DE               	addwf	postinc2,f,c
  3300  000DCC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3301  000DD0  0E00               	movlw	0
  3302  000DD2  22DD               	addwfc	postdec2,f,c
  3303  000DD4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3304  000DD8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3305  000DDC  50DF               	movf	indf2,w,c
  3306  000DDE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3307  000DE0  504B               	movf	??_vfpfcnvrt+2,w,c
  3308  000DE2  6E6A               	movwf	vfpfcnvrt@llu,c
  3309  000DE4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3310  000DE6                     L5:
  3311  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  3312  000DE8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3313  000DEA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3314  000DEC                     L6:
  3315  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  3316  000DEE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3317  000DF0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3318  000DF2  6A70               	clrf	vfpfcnvrt@llu+6,c
  3319  000DF4  6A71               	clrf	vfpfcnvrt@llu+7,c
  3320                           
  3321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  3322  000DF6  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  3323  000DFA  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3324  000DFE  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  3325  000E02  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3326  000E06  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3327  000E0A  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3328  000E0E  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3329  000E12  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3330  000E16  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3331  000E1A  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3332  000E1E  EC51  F014         	call	_otoa	;wreg free
  3333  000E22  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  3334  000E26  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  3335  000E2A  EF46  F00C         	goto	l527
  3336  000E2E                     l4094:
  3337  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  3338                           
  3339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  3340  000E30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3341  000E34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3342  000E38  CFDE F001          	movff	postinc2,strncmp@_l
  3343  000E3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3344  000E40  0EB5               	movlw	low (STR_52+1)
  3345  000E42  6E03               	movwf	strncmp@_r,c
  3346  000E44  0E06               	movlw	high (STR_52+1)
  3347  000E46  6E04               	movwf	strncmp@_r+1,c
  3348  000E48  0E00               	movlw	0
  3349  000E4A  6E06               	movwf	strncmp@n+1,c
  3350  000E4C  0E02               	movlw	2
  3351  000E4E  6E05               	movwf	strncmp@n,c
  3352  000E50  EC4E  F01A         	call	_strncmp	;wreg free
  3353  000E54  5001               	movf	?_strncmp,w,c
  3354  000E56  1002               	iorwf	?_strncmp+1,w,c
  3355  000E58  B4D8               	btfsc	status,2,c
  3356  000E5A  D06B               	goto	u4160
  3357                           
  3358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  3359                           
  3360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3361                           
  3362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  3363  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3364  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3365  000E64  CFDE FFF6          	movff	postinc2,tblptrl
  3366  000E68  CFDD FFF7          	movff	postdec2,tblptrh
  3367  000E6C                     	if	0	;tblptru may be non-zero
  3368  000E6C                     	endif
  3369  000E6C                     	if	0	;tblptru may be non-zero
  3370  000E6C                     	endif
  3371  000E6C  0008               	tblrd		*
  3372  000E6E  FFFF               	dw	65535	; errata NOP
  3373  000E70  50F5               	movf	tablat,w,c
  3374  000E72  0A6F               	xorlw	111
  3375  000E74  A4D8               	btfss	status,2,c
  3376  000E76  D006               	goto	l4110
  3377                           
  3378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  3379  000E78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  000E7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  000E80  2ADE               	incf	postinc2,f,c
  3382  000E82  D05E               	goto	L19
  3383  000E84                     l4110:
  3384  000E84  FFFF               	dw	65535	; assembler added errata NOP
  3385                           
  3386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  3387  000E86  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388  000E8A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389  000E8E  CFDE F001          	movff	postinc2,strncmp@_l
  3390  000E92  CFDD F002          	movff	postdec2,strncmp@_l+1
  3391  000E96  0EDC               	movlw	low STR_62
  3392  000E98  6E03               	movwf	strncmp@_r,c
  3393  000E9A  0E06               	movlw	high STR_62
  3394  000E9C  6E04               	movwf	strncmp@_r+1,c
  3395  000E9E  0E00               	movlw	0
  3396  000EA0  6E06               	movwf	strncmp@n+1,c
  3397  000EA2  0E02               	movlw	2
  3398  000EA4  6E05               	movwf	strncmp@n,c
  3399  000EA6  EC4E  F01A         	call	_strncmp	;wreg free
  3400  000EAA  5001               	movf	?_strncmp,w,c
  3401  000EAC  1002               	iorwf	?_strncmp+1,w,c
  3402  000EAE  A4D8               	btfss	status,2,c
  3403  000EB0  D029               	goto	l4118
  3404                           
  3405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  3406  000EB2  0E02               	movlw	2
  3407  000EB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3408  000EB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3409  000EBC  26DE               	addwf	postinc2,f,c
  3410  000EBE  0E00               	movlw	0
  3411  000EC0  22DD               	addwfc	postdec2,f,c
  3412                           
  3413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3414  000EC2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3415  000EC6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3416  000ECA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3417  000ECE  0E04               	movlw	4
  3418  000ED0  26DE               	addwf	postinc2,f,c
  3419  000ED2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3420  000ED6  0E00               	movlw	0
  3421  000ED8  22DD               	addwfc	postdec2,f,c
  3422  000EDA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3423  000EDE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3424  000EE2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3425  000EE6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3426  000EEA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3427  000EEE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3428  000EF2  504B               	movf	??_vfpfcnvrt+2,w,c
  3429  000EF4  6E6A               	movwf	vfpfcnvrt@llu,c
  3430  000EF6  504C               	movf	??_vfpfcnvrt+3,w,c
  3431  000EF8  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3432  000EFA  504D               	movf	??_vfpfcnvrt+4,w,c
  3433  000EFC  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3434  000EFE  504E               	movf	??_vfpfcnvrt+5,w,c
  3435  000F00  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3436  000F02  D774               	goto	L6
  3437  000F04                     l4118:
  3438  000F04  FFFF               	dw	65535	; assembler added errata NOP
  3439                           
  3440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  3441  000F06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3442  000F0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3443  000F0E  CFDE F001          	movff	postinc2,strncmp@_l
  3444  000F12  CFDD F002          	movff	postdec2,strncmp@_l+1
  3445  000F16  0EDF               	movlw	low STR_67
  3446  000F18  6E03               	movwf	strncmp@_r,c
  3447  000F1A  0E06               	movlw	high STR_67
  3448  000F1C  6E04               	movwf	strncmp@_r+1,c
  3449  000F1E  0E00               	movlw	0
  3450  000F20  6E06               	movwf	strncmp@n+1,c
  3451  000F22  0E02               	movlw	2
  3452  000F24  6E05               	movwf	strncmp@n,c
  3453  000F26  EC4E  F01A         	call	_strncmp	;wreg free
  3454  000F2A  5001               	movf	?_strncmp,w,c
  3455  000F2C  1002               	iorwf	?_strncmp+1,w,c
  3456  000F2E  A4D8               	btfss	status,2,c
  3457  000F30  D023               	goto	l4126
  3458  000F32                     u4160:
  3459  000F32  FFFF               	dw	65535	; assembler added errata NOP
  3460                           
  3461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  3462  000F34  0E02               	movlw	2
  3463  000F36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3464  000F3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3465  000F3E  26DE               	addwf	postinc2,f,c
  3466  000F40                     L19:
  3467  000F40  FFFF               	dw	65535	; assembler added errata NOP
  3468  000F42  0E00               	movlw	0
  3469  000F44  22DD               	addwfc	postdec2,f,c
  3470                           
  3471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3472  000F46  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3473  000F4A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3474  000F4E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3475  000F52  0E02               	movlw	2
  3476  000F54  26DE               	addwf	postinc2,f,c
  3477  000F56  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3478  000F5A  0E00               	movlw	0
  3479  000F5C  22DD               	addwfc	postdec2,f,c
  3480  000F5E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3481  000F62  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3482  000F66  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3483  000F6A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3484  000F6E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3485  000F72  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3486  000F76  D737               	goto	L5
  3487  000F78                     l4126:
  3488  000F78  FFFF               	dw	65535	; assembler added errata NOP
  3489                           
  3490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3491  000F7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3492  000F7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3493  000F82  CFDE F001          	movff	postinc2,strncmp@_l
  3494  000F86  CFDD F002          	movff	postdec2,strncmp@_l+1
  3495  000F8A  0EB0               	movlw	low STR_72
  3496  000F8C  6E03               	movwf	strncmp@_r,c
  3497  000F8E  0E06               	movlw	high STR_72
  3498  000F90  6E04               	movwf	strncmp@_r+1,c
  3499  000F92  0E00               	movlw	0
  3500  000F94  6E06               	movwf	strncmp@n+1,c
  3501  000F96  0E03               	movlw	3
  3502  000F98  6E05               	movwf	strncmp@n,c
  3503  000F9A  EC4E  F01A         	call	_strncmp	;wreg free
  3504  000F9E  5001               	movf	?_strncmp,w,c
  3505  000FA0  1002               	iorwf	?_strncmp+1,w,c
  3506  000FA2  A4D8               	btfss	status,2,c
  3507  000FA4  D028               	goto	l4136
  3508                           
  3509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  3510  000FA6  0E03               	movlw	3
  3511  000FA8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3512  000FAC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3513  000FB0  26DE               	addwf	postinc2,f,c
  3514  000FB2  0E00               	movlw	0
  3515  000FB4  22DD               	addwfc	postdec2,f,c
  3516                           
  3517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3518  000FB6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3519  000FBA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3520  000FBE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3521  000FC2  0E02               	movlw	2
  3522  000FC4  26DE               	addwf	postinc2,f,c
  3523  000FC6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3524  000FCA  0E00               	movlw	0
  3525  000FCC  22DD               	addwfc	postdec2,f,c
  3526  000FCE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3527  000FD2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3528  000FD6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3529  000FDA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3530                           
  3531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  3532  000FDE  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3533  000FE2  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3534  000FE6  C0CE  FFDF         	movff	_nout,indf2
  3535  000FEA                     l4132:
  3536  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  3537                           
  3538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  3539  000FEC  0E00               	movlw	0
  3540  000FEE  6E44               	movwf	?_vfpfcnvrt+1,c
  3541  000FF0  0E00               	movlw	0
  3542  000FF2  EF1D  F00C         	goto	L7
  3543  000FF6                     l4136:
  3544  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  3545                           
  3546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3547  000FF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3548  000FFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3549  001000  CFDE F001          	movff	postinc2,strncmp@_l
  3550  001004  CFDD F002          	movff	postdec2,strncmp@_l+1
  3551  001008  0EB1               	movlw	low (STR_72+1)
  3552  00100A  6E03               	movwf	strncmp@_r,c
  3553  00100C  0E06               	movlw	high (STR_72+1)
  3554  00100E  6E04               	movwf	strncmp@_r+1,c
  3555  001010  0E00               	movlw	0
  3556  001012  6E06               	movwf	strncmp@n+1,c
  3557  001014  0E02               	movlw	2
  3558  001016  6E05               	movwf	strncmp@n,c
  3559  001018  EC4E  F01A         	call	_strncmp	;wreg free
  3560  00101C  5001               	movf	?_strncmp,w,c
  3561  00101E  1002               	iorwf	?_strncmp+1,w,c
  3562  001020  A4D8               	btfss	status,2,c
  3563  001022  D00B               	goto	l4146
  3564  001024  D07F               	goto	u4210
  3565  001026                     l4140:
  3566  001026  FFFF               	dw	65535	; assembler added errata NOP
  3567                           
  3568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  3569  001028  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3570  00102C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3571  001030  C0CE  FFDE         	movff	_nout,postinc2
  3572  001034  C0CF  FFDD         	movff	_nout+1,postdec2
  3573  001038  D7D8               	goto	l4132
  3574  00103A                     l4146:
  3575  00103A  FFFF               	dw	65535	; assembler added errata NOP
  3576                           
  3577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  3578  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3579  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3580  001044  CFDE FFF6          	movff	postinc2,tblptrl
  3581  001048  CFDD FFF7          	movff	postdec2,tblptrh
  3582  00104C                     	if	0	;tblptru may be non-zero
  3583  00104C                     	endif
  3584  00104C                     	if	0	;tblptru may be non-zero
  3585  00104C                     	endif
  3586  00104C  0008               	tblrd		*
  3587  00104E  FFFF               	dw	65535	; errata NOP
  3588  001050  50F5               	movf	tablat,w,c
  3589  001052  0A6E               	xorlw	110
  3590  001054  A4D8               	btfss	status,2,c
  3591  001056  D006               	goto	l4156
  3592                           
  3593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  3594  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3595  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3596  001060  2ADE               	incf	postinc2,f,c
  3597  001062  D067               	goto	L16
  3598  001064                     l4156:
  3599  001064  FFFF               	dw	65535	; assembler added errata NOP
  3600                           
  3601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  3602  001066  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3603  00106A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3604  00106E  CFDE F001          	movff	postinc2,strncmp@_l
  3605  001072  CFDD F002          	movff	postdec2,strncmp@_l+1
  3606  001076  0ED6               	movlw	low STR_82
  3607  001078  6E03               	movwf	strncmp@_r,c
  3608  00107A  0E06               	movlw	high STR_82
  3609  00107C  6E04               	movwf	strncmp@_r+1,c
  3610  00107E  0E00               	movlw	0
  3611  001080  6E06               	movwf	strncmp@n+1,c
  3612  001082  0E02               	movlw	2
  3613  001084  6E05               	movwf	strncmp@n,c
  3614  001086  EC4E  F01A         	call	_strncmp	;wreg free
  3615  00108A  5001               	movf	?_strncmp,w,c
  3616  00108C  1002               	iorwf	?_strncmp+1,w,c
  3617  00108E  A4D8               	btfss	status,2,c
  3618  001090  D032               	goto	l4166
  3619                           
  3620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  3621  001092  0E02               	movlw	2
  3622  001094  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3623  001098  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3624  00109C  26DE               	addwf	postinc2,f,c
  3625  00109E  0E00               	movlw	0
  3626  0010A0  22DD               	addwfc	postdec2,f,c
  3627                           
  3628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  3629  0010A2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3630  0010A6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3631  0010AA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3632  0010AE  0E02               	movlw	2
  3633  0010B0  26DE               	addwf	postinc2,f,c
  3634  0010B2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3635  0010B6  0E00               	movlw	0
  3636  0010B8  22DD               	addwfc	postdec2,f,c
  3637  0010BA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3638  0010BE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3639  0010C2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3640  0010C6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3641                           
  3642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  3643  0010CA  C0CE  F049         	movff	_nout,??_vfpfcnvrt
  3644  0010CE  C0CF  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  3645  0010D2  0E00               	movlw	0
  3646  0010D4  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  3647  0010D6  0EFF               	movlw	255
  3648  0010D8  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3649  0010DA  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  3650  0010DC  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3651  0010E0  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3652  0010E4  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  3653  0010E8  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  3654  0010EC  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  3655  0010F0  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  3656  0010F4  D77A               	goto	l4132
  3657  0010F6                     l4166:
  3658  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  3659                           
  3660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3661  0010F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3662  0010FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3663  001100  CFDE F001          	movff	postinc2,strncmp@_l
  3664  001104  CFDD F002          	movff	postdec2,strncmp@_l+1
  3665  001108  0ED9               	movlw	low STR_87
  3666  00110A  6E03               	movwf	strncmp@_r,c
  3667  00110C  0E06               	movlw	high STR_87
  3668  00110E  6E04               	movwf	strncmp@_r+1,c
  3669  001110  0E00               	movlw	0
  3670  001112  6E06               	movwf	strncmp@n+1,c
  3671  001114  0E02               	movlw	2
  3672  001116  6E05               	movwf	strncmp@n,c
  3673  001118  EC4E  F01A         	call	_strncmp	;wreg free
  3674  00111C  5001               	movf	?_strncmp,w,c
  3675  00111E  1002               	iorwf	?_strncmp+1,w,c
  3676  001120  A4D8               	btfss	status,2,c
  3677  001122  D01F               	goto	l4176
  3678  001124                     u4210:
  3679  001124  FFFF               	dw	65535	; assembler added errata NOP
  3680                           
  3681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  3682  001126  0E02               	movlw	2
  3683  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3684  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3685  001130  26DE               	addwf	postinc2,f,c
  3686  001132                     L16:
  3687  001132  FFFF               	dw	65535	; assembler added errata NOP
  3688  001134  0E00               	movlw	0
  3689  001136  22DD               	addwfc	postdec2,f,c
  3690                           
  3691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3692  001138  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3693  00113C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3694  001140  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3695  001144  0E02               	movlw	2
  3696  001146  26DE               	addwf	postinc2,f,c
  3697  001148  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3698  00114C  0E00               	movlw	0
  3699  00114E  22DD               	addwfc	postdec2,f,c
  3700  001150  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3701  001154  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3702  001158  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  3703  00115C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  3704  001160  D762               	goto	l4140
  3705  001162                     l4176:
  3706  001162  FFFF               	dw	65535	; assembler added errata NOP
  3707                           
  3708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  3709  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3710  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3711  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  3712  001170  CFDD FFF7          	movff	postdec2,tblptrh
  3713  001174                     	if	0	;tblptru may be non-zero
  3714  001174                     	endif
  3715  001174                     	if	0	;tblptru may be non-zero
  3716  001174                     	endif
  3717  001174  0008               	tblrd		*
  3718  001176  FFFF               	dw	65535	; errata NOP
  3719  001178  50F5               	movf	tablat,w,c
  3720  00117A  0A70               	xorlw	112
  3721  00117C  A4D8               	btfss	status,2,c
  3722  00117E  D03E               	goto	l4184
  3723                           
  3724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  3725  001180  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3726  001184  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3727  001188  2ADE               	incf	postinc2,f,c
  3728  00118A  0E00               	movlw	0
  3729  00118C  22DD               	addwfc	postdec2,f,c
  3730                           
  3731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3732  00118E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3733  001192  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3734  001196  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3735  00119A  0E02               	movlw	2
  3736  00119C  26DE               	addwf	postinc2,f,c
  3737  00119E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3738  0011A2  0E00               	movlw	0
  3739  0011A4  22DD               	addwfc	postdec2,f,c
  3740  0011A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3741  0011AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3742  0011AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3743  0011B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3744  0011B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3745  0011BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3746  0011BE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3747  0011C0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3748  0011C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3749  0011C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3750  0011C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  3751  0011C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  3752                           
  3753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  3754  0011CA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3755  0011CE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3756  0011D2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3757  0011D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3758  0011DA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3759  0011DE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3760  0011E2  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3761  0011E6  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3762  0011EA  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3763  0011EE  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3764  0011F2  0E78               	movlw	120
  3765  0011F4  6E26               	movwf	xtoa@x,c
  3766  0011F6  EC44  F012         	call	_xtoa	;wreg free
  3767  0011FA  D1B4               	goto	L9
  3768  0011FC                     l4184:
  3769  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  3770                           
  3771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  3772  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3773  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3774  001206  CFDE FFF6          	movff	postinc2,tblptrl
  3775  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  3776  00120E                     	if	0	;tblptru may be non-zero
  3777  00120E                     	endif
  3778  00120E                     	if	0	;tblptru may be non-zero
  3779  00120E                     	endif
  3780  00120E  0008               	tblrd		*
  3781  001210  FFFF               	dw	65535	; errata NOP
  3782  001212  50F5               	movf	tablat,w,c
  3783  001214  0A73               	xorlw	115
  3784  001216  A4D8               	btfss	status,2,c
  3785  001218  D02A               	goto	l4192
  3786                           
  3787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  3788  00121A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3789  00121E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3790  001222  2ADE               	incf	postinc2,f,c
  3791  001224  0E00               	movlw	0
  3792  001226  22DD               	addwfc	postdec2,f,c
  3793                           
  3794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3795  001228  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3796  00122C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3797  001230  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3798  001234  0E02               	movlw	2
  3799  001236  26DE               	addwf	postinc2,f,c
  3800  001238  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3801  00123C  0E00               	movlw	0
  3802  00123E  22DD               	addwfc	postdec2,f,c
  3803  001240  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3804  001244  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3805  001248  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  3806  00124C  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  3807                           
  3808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  3809  001250  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3810  001254  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3811  001258  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3812  00125C  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3813  001260  ECD3  F017         	call	_stoa	;wreg free
  3814  001264  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3815  001268  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3816  00126C  D30F               	goto	l527
  3817  00126E                     l4192:
  3818  00126E  FFFF               	dw	65535	; assembler added errata NOP
  3819                           
  3820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3821  001270  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3822  001274  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3823  001278  CFDE F001          	movff	postinc2,strncmp@_l
  3824  00127C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3825  001280  0EB8               	movlw	low STR_92
  3826  001282  6E03               	movwf	strncmp@_r,c
  3827  001284  0E06               	movlw	high STR_92
  3828  001286  6E04               	movwf	strncmp@_r+1,c
  3829  001288  0E00               	movlw	0
  3830  00128A  6E06               	movwf	strncmp@n+1,c
  3831  00128C  0E03               	movlw	3
  3832  00128E  6E05               	movwf	strncmp@n,c
  3833  001290  EC4E  F01A         	call	_strncmp	;wreg free
  3834  001294  5001               	movf	?_strncmp,w,c
  3835  001296  1002               	iorwf	?_strncmp+1,w,c
  3836  001298  A4D8               	btfss	status,2,c
  3837  00129A  D040               	goto	l4200
  3838                           
  3839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  3840  00129C  0E03               	movlw	3
  3841  00129E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3842  0012A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3843  0012A6  26DE               	addwf	postinc2,f,c
  3844  0012A8  0E00               	movlw	0
  3845  0012AA  22DD               	addwfc	postdec2,f,c
  3846                           
  3847                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3848  0012AC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3849  0012B0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3850  0012B4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3851  0012B8  0E02               	movlw	2
  3852  0012BA  26DE               	addwf	postinc2,f,c
  3853  0012BC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3854  0012C0  0E00               	movlw	0
  3855  0012C2  22DD               	addwfc	postdec2,f,c
  3856  0012C4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3857  0012C8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3858  0012CC  50DF               	movf	indf2,w,c
  3859  0012CE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3860  0012D0  504B               	movf	??_vfpfcnvrt+2,w,c
  3861  0012D2  6E6A               	movwf	vfpfcnvrt@llu,c
  3862  0012D4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3863  0012D6                     L10:
  3864  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  3865  0012D8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3866  0012DA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3867  0012DC                     L11:
  3868  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  3869  0012DE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3870  0012E0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3871  0012E2  6A70               	clrf	vfpfcnvrt@llu+6,c
  3872  0012E4  6A71               	clrf	vfpfcnvrt@llu+7,c
  3873                           
  3874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3875  0012E6  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3876  0012EA  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3877  0012EE  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3878  0012F2  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3879  0012F6  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3880  0012FA  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3881  0012FE  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3882  001302  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3883  001306  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3884  00130A  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3885  00130E  EC70  F013         	call	_utoa	;wreg free
  3886  001312  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3887  001316  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3888  00131A  D2B8               	goto	l527
  3889  00131C                     l4200:
  3890  00131C  FFFF               	dw	65535	; assembler added errata NOP
  3891                           
  3892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3893  00131E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3894  001322  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3895  001326  CFDE F001          	movff	postinc2,strncmp@_l
  3896  00132A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3897  00132E  0EB9               	movlw	low (STR_92+1)
  3898  001330  6E03               	movwf	strncmp@_r,c
  3899  001332  0E06               	movlw	high (STR_92+1)
  3900  001334  6E04               	movwf	strncmp@_r+1,c
  3901  001336  0E00               	movlw	0
  3902  001338  6E06               	movwf	strncmp@n+1,c
  3903  00133A  0E02               	movlw	2
  3904  00133C  6E05               	movwf	strncmp@n,c
  3905  00133E  EC4E  F01A         	call	_strncmp	;wreg free
  3906  001342  5001               	movf	?_strncmp,w,c
  3907  001344  1002               	iorwf	?_strncmp+1,w,c
  3908  001346  B4D8               	btfsc	status,2,c
  3909  001348  D06B               	goto	u4280
  3910                           
  3911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3912                           
  3913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3914                           
  3915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3916  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3917  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3918  001352  CFDE FFF6          	movff	postinc2,tblptrl
  3919  001356  CFDD FFF7          	movff	postdec2,tblptrh
  3920  00135A                     	if	0	;tblptru may be non-zero
  3921  00135A                     	endif
  3922  00135A                     	if	0	;tblptru may be non-zero
  3923  00135A                     	endif
  3924  00135A  0008               	tblrd		*
  3925  00135C  FFFF               	dw	65535	; errata NOP
  3926  00135E  50F5               	movf	tablat,w,c
  3927  001360  0A75               	xorlw	117
  3928  001362  A4D8               	btfss	status,2,c
  3929  001364  D006               	goto	l4216
  3930                           
  3931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3932  001366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3933  00136A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3934  00136E  2ADE               	incf	postinc2,f,c
  3935  001370  D05E               	goto	L20
  3936  001372                     l4216:
  3937  001372  FFFF               	dw	65535	; assembler added errata NOP
  3938                           
  3939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3940  001374  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3941  001378  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3942  00137C  CFDE F001          	movff	postinc2,strncmp@_l
  3943  001380  CFDD F002          	movff	postdec2,strncmp@_l+1
  3944  001384  0EC1               	movlw	low (STR_1+1)
  3945  001386  6E03               	movwf	strncmp@_r,c
  3946  001388  0E06               	movlw	high (STR_1+1)
  3947  00138A  6E04               	movwf	strncmp@_r+1,c
  3948  00138C  0E00               	movlw	0
  3949  00138E  6E06               	movwf	strncmp@n+1,c
  3950  001390  0E02               	movlw	2
  3951  001392  6E05               	movwf	strncmp@n,c
  3952  001394  EC4E  F01A         	call	_strncmp	;wreg free
  3953  001398  5001               	movf	?_strncmp,w,c
  3954  00139A  1002               	iorwf	?_strncmp+1,w,c
  3955  00139C  A4D8               	btfss	status,2,c
  3956  00139E  D029               	goto	l4224
  3957                           
  3958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3959  0013A0  0E02               	movlw	2
  3960  0013A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3961  0013A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3962  0013AA  26DE               	addwf	postinc2,f,c
  3963  0013AC  0E00               	movlw	0
  3964  0013AE  22DD               	addwfc	postdec2,f,c
  3965                           
  3966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3967  0013B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3968  0013B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3969  0013B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3970  0013BC  0E04               	movlw	4
  3971  0013BE  26DE               	addwf	postinc2,f,c
  3972  0013C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3973  0013C4  0E00               	movlw	0
  3974  0013C6  22DD               	addwfc	postdec2,f,c
  3975  0013C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3976  0013CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3977  0013D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3978  0013D4  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3979  0013D8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3980  0013DC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3981  0013E0  504B               	movf	??_vfpfcnvrt+2,w,c
  3982  0013E2  6E6A               	movwf	vfpfcnvrt@llu,c
  3983  0013E4  504C               	movf	??_vfpfcnvrt+3,w,c
  3984  0013E6  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3985  0013E8  504D               	movf	??_vfpfcnvrt+4,w,c
  3986  0013EA  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3987  0013EC  504E               	movf	??_vfpfcnvrt+5,w,c
  3988  0013EE  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3989  0013F0  D775               	goto	L11
  3990  0013F2                     l4224:
  3991  0013F2  FFFF               	dw	65535	; assembler added errata NOP
  3992                           
  3993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3994  0013F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3995  0013F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3996  0013FC  CFDE F001          	movff	postinc2,strncmp@_l
  3997  001400  CFDD F002          	movff	postdec2,strncmp@_l+1
  3998  001404  0EE2               	movlw	low STR_107
  3999  001406  6E03               	movwf	strncmp@_r,c
  4000  001408  0E06               	movlw	high STR_107
  4001  00140A  6E04               	movwf	strncmp@_r+1,c
  4002  00140C  0E00               	movlw	0
  4003  00140E  6E06               	movwf	strncmp@n+1,c
  4004  001410  0E02               	movlw	2
  4005  001412  6E05               	movwf	strncmp@n,c
  4006  001414  EC4E  F01A         	call	_strncmp	;wreg free
  4007  001418  5001               	movf	?_strncmp,w,c
  4008  00141A  1002               	iorwf	?_strncmp+1,w,c
  4009  00141C  A4D8               	btfss	status,2,c
  4010  00141E  D023               	goto	l4232
  4011  001420                     u4280:
  4012  001420  FFFF               	dw	65535	; assembler added errata NOP
  4013                           
  4014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  4015  001422  0E02               	movlw	2
  4016  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4017  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4018  00142C  26DE               	addwf	postinc2,f,c
  4019  00142E                     L20:
  4020  00142E  FFFF               	dw	65535	; assembler added errata NOP
  4021  001430  0E00               	movlw	0
  4022  001432  22DD               	addwfc	postdec2,f,c
  4023                           
  4024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4025  001434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4026  001438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4027  00143C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4028  001440  0E02               	movlw	2
  4029  001442  26DE               	addwf	postinc2,f,c
  4030  001444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4031  001448  0E00               	movlw	0
  4032  00144A  22DD               	addwfc	postdec2,f,c
  4033  00144C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4034  001450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4035  001454  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4036  001458  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4037  00145C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4038  001460  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4039  001464  D738               	goto	L10
  4040  001466                     l4232:
  4041  001466  FFFF               	dw	65535	; assembler added errata NOP
  4042                           
  4043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  4044  001468  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4045  00146C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4046  001470  CFDE F001          	movff	postinc2,strncmp@_l
  4047  001474  CFDD F002          	movff	postdec2,strncmp@_l+1
  4048  001478  0EBC               	movlw	low STR_112
  4049  00147A  6E03               	movwf	strncmp@_r,c
  4050  00147C  0E06               	movlw	high STR_112
  4051  00147E  6E04               	movwf	strncmp@_r+1,c
  4052  001480  0E00               	movlw	0
  4053  001482  6E06               	movwf	strncmp@n+1,c
  4054  001484  0E03               	movlw	3
  4055  001486  6E05               	movwf	strncmp@n,c
  4056  001488  EC4E  F01A         	call	_strncmp	;wreg free
  4057  00148C  5001               	movf	?_strncmp,w,c
  4058  00148E  1002               	iorwf	?_strncmp+1,w,c
  4059  001490  B4D8               	btfsc	status,2,c
  4060  001492  D016               	goto	u4300
  4061  001494  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4062  001498  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4063  00149C  CFDE F001          	movff	postinc2,strncmp@_l
  4064  0014A0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4065  0014A4  0EA4               	movlw	low STR_116
  4066  0014A6  6E03               	movwf	strncmp@_r,c
  4067  0014A8  0E06               	movlw	high STR_116
  4068  0014AA  6E04               	movwf	strncmp@_r+1,c
  4069  0014AC  0E00               	movlw	0
  4070  0014AE  6E06               	movwf	strncmp@n+1,c
  4071  0014B0  0E03               	movlw	3
  4072  0014B2  6E05               	movwf	strncmp@n,c
  4073  0014B4  EC4E  F01A         	call	_strncmp	;wreg free
  4074  0014B8  5001               	movf	?_strncmp,w,c
  4075  0014BA  1002               	iorwf	?_strncmp+1,w,c
  4076  0014BC  A4D8               	btfss	status,2,c
  4077  0014BE  D058               	goto	l4246
  4078  0014C0                     u4300:
  4079  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  4080                           
  4081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  4082  0014C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4083  0014C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4084  0014CA  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4085  0014CE  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4086  0014D2  0E02               	movlw	2
  4087  0014D4  2649               	addwf	??_vfpfcnvrt,f,c
  4088  0014D6  0E00               	movlw	0
  4089  0014D8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4090  0014DA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4091  0014DE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4092  0014E2                     	if	0	;tblptru may be non-zero
  4093  0014E2                     	endif
  4094  0014E2                     	if	0	;tblptru may be non-zero
  4095  0014E2                     	endif
  4096  0014E2  0008               	tblrd		*
  4097  0014E4  FFFF               	dw	65535	; errata NOP
  4098  0014E6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4099                           
  4100                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  4101  0014EA  0E03               	movlw	3
  4102  0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4103  0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4104  0014F4  26DE               	addwf	postinc2,f,c
  4105  0014F6  0E00               	movlw	0
  4106  0014F8  22DD               	addwfc	postdec2,f,c
  4107                           
  4108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4109  0014FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4110  0014FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4111  001502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4112  001506  0E02               	movlw	2
  4113  001508  26DE               	addwf	postinc2,f,c
  4114  00150A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4115  00150E  0E00               	movlw	0
  4116  001510  22DD               	addwfc	postdec2,f,c
  4117  001512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4118  001516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4119  00151A  50DF               	movf	indf2,w,c
  4120  00151C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4121  00151E  504B               	movf	??_vfpfcnvrt+2,w,c
  4122  001520  6E6A               	movwf	vfpfcnvrt@llu,c
  4123  001522  6A6B               	clrf	vfpfcnvrt@llu+1,c
  4124  001524                     L12:
  4125  001524  FFFF               	dw	65535	; assembler added errata NOP
  4126  001526  6A6C               	clrf	vfpfcnvrt@llu+2,c
  4127  001528  6A6D               	clrf	vfpfcnvrt@llu+3,c
  4128  00152A                     L13:
  4129  00152A  FFFF               	dw	65535	; assembler added errata NOP
  4130  00152C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  4131  00152E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  4132  001530  6A70               	clrf	vfpfcnvrt@llu+6,c
  4133  001532  6A71               	clrf	vfpfcnvrt@llu+7,c
  4134                           
  4135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  4136  001534  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4137  001538  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4138  00153C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4139  001540  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4140  001544  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4141  001548  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4142  00154C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4143  001550  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4144  001554  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4145  001558  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4146  00155C  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  4147  001560  EC44  F012         	call	_xtoa	;wreg free
  4148  001564                     L9:
  4149  001564  FFFF               	dw	65535	; assembler added errata NOP
  4150  001566  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4151  00156A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4152  00156E  D18E               	goto	l527
  4153  001570                     l4246:
  4154  001570  FFFF               	dw	65535	; assembler added errata NOP
  4155                           
  4156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  4157  001572  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4158  001576  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4159  00157A  CFDE F001          	movff	postinc2,strncmp@_l
  4160  00157E  CFDD F002          	movff	postdec2,strncmp@_l+1
  4161  001582  0EBD               	movlw	low (STR_112+1)
  4162  001584  6E03               	movwf	strncmp@_r,c
  4163  001586  0E06               	movlw	high (STR_112+1)
  4164  001588  6E04               	movwf	strncmp@_r+1,c
  4165  00158A  0E00               	movlw	0
  4166  00158C  6E06               	movwf	strncmp@n+1,c
  4167  00158E  0E02               	movlw	2
  4168  001590  6E05               	movwf	strncmp@n,c
  4169  001592  EC4E  F01A         	call	_strncmp	;wreg free
  4170  001596  5001               	movf	?_strncmp,w,c
  4171  001598  1002               	iorwf	?_strncmp+1,w,c
  4172  00159A  B4D8               	btfsc	status,2,c
  4173  00159C  D016               	goto	u4320
  4174  00159E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4175  0015A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4176  0015A6  CFDE F001          	movff	postinc2,strncmp@_l
  4177  0015AA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4178  0015AE  0EA5               	movlw	low (STR_116+1)
  4179  0015B0  6E03               	movwf	strncmp@_r,c
  4180  0015B2  0E06               	movlw	high (STR_116+1)
  4181  0015B4  6E04               	movwf	strncmp@_r+1,c
  4182  0015B6  0E00               	movlw	0
  4183  0015B8  6E06               	movwf	strncmp@n+1,c
  4184  0015BA  0E02               	movlw	2
  4185  0015BC  6E05               	movwf	strncmp@n,c
  4186  0015BE  EC4E  F01A         	call	_strncmp	;wreg free
  4187  0015C2  5001               	movf	?_strncmp,w,c
  4188  0015C4  1002               	iorwf	?_strncmp+1,w,c
  4189  0015C6  A4D8               	btfss	status,2,c
  4190  0015C8  D014               	goto	l4260
  4191  0015CA                     u4320:
  4192  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  4193                           
  4194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  4195  0015CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4196  0015D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4197  0015D4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4198  0015D8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4199  0015DC  0E01               	movlw	1
  4200  0015DE  2649               	addwf	??_vfpfcnvrt,f,c
  4201  0015E0  0E00               	movlw	0
  4202  0015E2  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4203  0015E4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4204  0015E8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4205  0015EC                     	if	0	;tblptru may be non-zero
  4206  0015EC                     	endif
  4207  0015EC                     	if	0	;tblptru may be non-zero
  4208  0015EC                     	endif
  4209  0015EC  0008               	tblrd		*
  4210  0015EE  FFFF               	dw	65535	; errata NOP
  4211  0015F0  D0DB               	goto	L28
  4212  0015F2                     l4260:
  4213  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  4214                           
  4215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  4216  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4217  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4218  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  4219  001600  CFDD FFF7          	movff	postdec2,tblptrh
  4220  001604                     	if	0	;tblptru may be non-zero
  4221  001604                     	endif
  4222  001604                     	if	0	;tblptru may be non-zero
  4223  001604                     	endif
  4224  001604  0008               	tblrd		*
  4225  001606  FFFF               	dw	65535	; errata NOP
  4226  001608  50F5               	movf	tablat,w,c
  4227  00160A  0A78               	xorlw	120
  4228  00160C  B4D8               	btfsc	status,2,c
  4229  00160E  D00E               	goto	u4340
  4230  001610  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4231  001614  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4232  001618  CFDE FFF6          	movff	postinc2,tblptrl
  4233  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  4234  001620                     	if	0	;tblptru may be non-zero
  4235  001620                     	endif
  4236  001620                     	if	0	;tblptru may be non-zero
  4237  001620                     	endif
  4238  001620  0008               	tblrd		*
  4239  001622  FFFF               	dw	65535	; errata NOP
  4240  001624  50F5               	movf	tablat,w,c
  4241  001626  0A58               	xorlw	88
  4242  001628  A4D8               	btfss	status,2,c
  4243  00162A  D013               	goto	l4274
  4244  00162C                     u4340:
  4245  00162C  FFFF               	dw	65535	; assembler added errata NOP
  4246                           
  4247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  4248  00162E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4249  001632  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4250  001636  CFDE FFF6          	movff	postinc2,tblptrl
  4251  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  4252  00163E                     	if	0	;tblptru may be non-zero
  4253  00163E                     	endif
  4254  00163E                     	if	0	;tblptru may be non-zero
  4255  00163E                     	endif
  4256  00163E  0008               	tblrd		*
  4257  001640  FFFF               	dw	65535	; errata NOP
  4258  001642  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4259                           
  4260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  4261  001646  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4262  00164A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4263  00164E  2ADE               	incf	postinc2,f,c
  4264  001650  D0B4               	goto	L27
  4265  001652                     l4274:
  4266  001652  FFFF               	dw	65535	; assembler added errata NOP
  4267                           
  4268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  4269  001654  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4270  001658  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4271  00165C  CFDE F001          	movff	postinc2,strncmp@_l
  4272  001660  CFDD F002          	movff	postdec2,strncmp@_l+1
  4273  001664  0EE5               	movlw	low STR_130
  4274  001666  6E03               	movwf	strncmp@_r,c
  4275  001668  0E06               	movlw	high STR_130
  4276  00166A  6E04               	movwf	strncmp@_r+1,c
  4277  00166C  0E00               	movlw	0
  4278  00166E  6E06               	movwf	strncmp@n+1,c
  4279  001670  0E02               	movlw	2
  4280  001672  6E05               	movwf	strncmp@n,c
  4281  001674  EC4E  F01A         	call	_strncmp	;wreg free
  4282  001678  5001               	movf	?_strncmp,w,c
  4283  00167A  1002               	iorwf	?_strncmp+1,w,c
  4284  00167C  B4D8               	btfsc	status,2,c
  4285  00167E  D016               	goto	u4360
  4286  001680  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4287  001684  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4288  001688  CFDE F001          	movff	postinc2,strncmp@_l
  4289  00168C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4290  001690  0EC4               	movlw	low STR_134
  4291  001692  6E03               	movwf	strncmp@_r,c
  4292  001694  0E06               	movlw	high STR_134
  4293  001696  6E04               	movwf	strncmp@_r+1,c
  4294  001698  0E00               	movlw	0
  4295  00169A  6E06               	movwf	strncmp@n+1,c
  4296  00169C  0E02               	movlw	2
  4297  00169E  6E05               	movwf	strncmp@n,c
  4298  0016A0  EC4E  F01A         	call	_strncmp	;wreg free
  4299  0016A4  5001               	movf	?_strncmp,w,c
  4300  0016A6  1002               	iorwf	?_strncmp+1,w,c
  4301  0016A8  A4D8               	btfss	status,2,c
  4302  0016AA  D03E               	goto	l4288
  4303  0016AC                     u4360:
  4304  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  4305                           
  4306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  4307  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4308  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4309  0016B6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4310  0016BA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4311  0016BE  0E01               	movlw	1
  4312  0016C0  2649               	addwf	??_vfpfcnvrt,f,c
  4313  0016C2  0E00               	movlw	0
  4314  0016C4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4315  0016C6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4316  0016CA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4317  0016CE                     	if	0	;tblptru may be non-zero
  4318  0016CE                     	endif
  4319  0016CE                     	if	0	;tblptru may be non-zero
  4320  0016CE                     	endif
  4321  0016CE  0008               	tblrd		*
  4322  0016D0  FFFF               	dw	65535	; errata NOP
  4323  0016D2  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4324                           
  4325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  4326  0016D6  0E02               	movlw	2
  4327  0016D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4328  0016DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4329  0016E0  26DE               	addwf	postinc2,f,c
  4330  0016E2  0E00               	movlw	0
  4331  0016E4  22DD               	addwfc	postdec2,f,c
  4332                           
  4333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  4334  0016E6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4335  0016EA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4336  0016EE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4337  0016F2  0E04               	movlw	4
  4338  0016F4  26DE               	addwf	postinc2,f,c
  4339  0016F6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4340  0016FA  0E00               	movlw	0
  4341  0016FC  22DD               	addwfc	postdec2,f,c
  4342  0016FE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4343  001702  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4344  001706  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4345  00170A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  4346  00170E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  4347  001712  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  4348  001716  504B               	movf	??_vfpfcnvrt+2,w,c
  4349  001718  6E6A               	movwf	vfpfcnvrt@llu,c
  4350  00171A  504C               	movf	??_vfpfcnvrt+3,w,c
  4351  00171C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  4352  00171E  504D               	movf	??_vfpfcnvrt+4,w,c
  4353  001720  6E6C               	movwf	vfpfcnvrt@llu+2,c
  4354  001722  504E               	movf	??_vfpfcnvrt+5,w,c
  4355  001724  6E6D               	movwf	vfpfcnvrt@llu+3,c
  4356  001726  D701               	goto	L13
  4357  001728                     l4288:
  4358  001728  FFFF               	dw	65535	; assembler added errata NOP
  4359                           
  4360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  4361  00172A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4362  00172E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4363  001732  CFDE F001          	movff	postinc2,strncmp@_l
  4364  001736  CFDD F002          	movff	postdec2,strncmp@_l+1
  4365  00173A  0EE8               	movlw	low STR_139
  4366  00173C  6E03               	movwf	strncmp@_r,c
  4367  00173E  0E06               	movlw	high STR_139
  4368  001740  6E04               	movwf	strncmp@_r+1,c
  4369  001742  0E00               	movlw	0
  4370  001744  6E06               	movwf	strncmp@n+1,c
  4371  001746  0E02               	movlw	2
  4372  001748  6E05               	movwf	strncmp@n,c
  4373  00174A  EC4E  F01A         	call	_strncmp	;wreg free
  4374  00174E  5001               	movf	?_strncmp,w,c
  4375  001750  1002               	iorwf	?_strncmp+1,w,c
  4376  001752  B4D8               	btfsc	status,2,c
  4377  001754  D016               	goto	u4380
  4378  001756  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4379  00175A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4380  00175E  CFDE F001          	movff	postinc2,strncmp@_l
  4381  001762  CFDD F002          	movff	postdec2,strncmp@_l+1
  4382  001766  0EC7               	movlw	low STR_143
  4383  001768  6E03               	movwf	strncmp@_r,c
  4384  00176A  0E06               	movlw	high STR_143
  4385  00176C  6E04               	movwf	strncmp@_r+1,c
  4386  00176E  0E00               	movlw	0
  4387  001770  6E06               	movwf	strncmp@n+1,c
  4388  001772  0E02               	movlw	2
  4389  001774  6E05               	movwf	strncmp@n,c
  4390  001776  EC4E  F01A         	call	_strncmp	;wreg free
  4391  00177A  5001               	movf	?_strncmp,w,c
  4392  00177C  1002               	iorwf	?_strncmp+1,w,c
  4393  00177E  A4D8               	btfss	status,2,c
  4394  001780  D038               	goto	l4302
  4395  001782                     u4380:
  4396  001782  FFFF               	dw	65535	; assembler added errata NOP
  4397                           
  4398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  4399  001784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4400  001788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4401  00178C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4402  001790  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4403  001794  0E01               	movlw	1
  4404  001796  2649               	addwf	??_vfpfcnvrt,f,c
  4405  001798  0E00               	movlw	0
  4406  00179A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  4407  00179C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4408  0017A0  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4409  0017A4                     	if	0	;tblptru may be non-zero
  4410  0017A4                     	endif
  4411  0017A4                     	if	0	;tblptru may be non-zero
  4412  0017A4                     	endif
  4413  0017A4  0008               	tblrd		*
  4414  0017A6  FFFF               	dw	65535	; errata NOP
  4415  0017A8                     L28:
  4416  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  4417  0017AA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  4418                           
  4419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  4420  0017AE  0E02               	movlw	2
  4421  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4422  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4423  0017B8  26DE               	addwf	postinc2,f,c
  4424  0017BA                     L27:
  4425  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  4426  0017BC  0E00               	movlw	0
  4427  0017BE  22DD               	addwfc	postdec2,f,c
  4428                           
  4429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4430  0017C0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4431  0017C4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4432  0017C8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4433  0017CC  0E02               	movlw	2
  4434  0017CE  26DE               	addwf	postinc2,f,c
  4435  0017D0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4436  0017D4  0E00               	movlw	0
  4437  0017D6  22DD               	addwfc	postdec2,f,c
  4438  0017D8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4439  0017DC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4440  0017E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4441  0017E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4442  0017E8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4443  0017EC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4444  0017F0  D699               	goto	L12
  4445  0017F2                     l4302:
  4446  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  4447                           
  4448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  4449  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4450  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4451  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  4452  001800  CFDD FFF7          	movff	postdec2,tblptrh
  4453  001804                     	if	0	;tblptru may be non-zero
  4454  001804                     	endif
  4455  001804                     	if	0	;tblptru may be non-zero
  4456  001804                     	endif
  4457  001804  0008               	tblrd		*
  4458  001806  FFFF               	dw	65535	; errata NOP
  4459  001808  50F5               	movf	tablat,w,c
  4460  00180A  0A25               	xorlw	37
  4461  00180C  A4D8               	btfss	status,2,c
  4462  00180E  D018               	goto	l4312
  4463                           
  4464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  4465  001810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4466  001814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4467  001818  2ADE               	incf	postinc2,f,c
  4468  00181A  0E00               	movlw	0
  4469  00181C  22DD               	addwfc	postdec2,f,c
  4470                           
  4471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  4472  00181E  0E00               	movlw	0
  4473  001820  6E02               	movwf	fputc@c+1,c
  4474  001822  0E25               	movlw	37
  4475  001824  6E01               	movwf	fputc@c,c
  4476  001826  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4477  00182A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4478  00182E  EC0D  F01B         	call	_fputc	;wreg free
  4479  001832                     l4308:
  4480  001832  FFFF               	dw	65535	; assembler added errata NOP
  4481                           
  4482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  4483  001834  0E00               	movlw	0
  4484  001836  6E44               	movwf	?_vfpfcnvrt+1,c
  4485  001838  0E01               	movlw	1
  4486  00183A                     L7:
  4487  00183A  FFFF               	dw	65535	; assembler added errata NOP
  4488  00183C  6E43               	movwf	?_vfpfcnvrt,c
  4489  00183E  D026               	goto	l527
  4490  001840                     l4312:
  4491  001840  FFFF               	dw	65535	; assembler added errata NOP
  4492                           
  4493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  4494  001842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4495  001846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4496  00184A  2ADE               	incf	postinc2,f,c
  4497  00184C  0E00               	movlw	0
  4498  00184E  22DD               	addwfc	postdec2,f,c
  4499  001850  EFF5  F007         	goto	l4132
  4500  001854                     l4318:
  4501  001854  FFFF               	dw	65535	; assembler added errata NOP
  4502                           
  4503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  4504  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4505  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4506  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  4507  001862  CFDD FFF7          	movff	postdec2,tblptrh
  4508  001866                     	if	0	;tblptru may be non-zero
  4509  001866                     	endif
  4510  001866                     	if	0	;tblptru may be non-zero
  4511  001866                     	endif
  4512  001866  0008               	tblrd		*
  4513  001868  FFFF               	dw	65535	; errata NOP
  4514  00186A  50F5               	movf	tablat,w,c
  4515  00186C  6E01               	movwf	fputc@c,c
  4516  00186E  6A02               	clrf	fputc@c+1,c
  4517  001870  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4518  001874  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4519  001878  EC0D  F01B         	call	_fputc	;wreg free
  4520                           
  4521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  4522  00187C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4523  001880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4524  001884  2ADE               	incf	postinc2,f,c
  4525  001886  0E00               	movlw	0
  4526  001888  22DD               	addwfc	postdec2,f,c
  4527  00188A  D7D3               	goto	l4308
  4528  00188C                     l527:
  4529  00188C  FFFF               	dw	65535	; assembler added errata NOP
  4530  00188E  0012               	return		;funcret
  4531  001890  FFFF               	dw	65535	; errata NOP
  4532  001892                     __end_of_vfpfcnvrt:
  4533                           	opt callstack 0
  4534                           
  4535 ;; *************** function _xtoa *****************
  4536 ;; Defined at:
  4537 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4540 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4541 ;;  d               8   29[COMRAM] unsigned long long 
  4542 ;;  x               1   37[COMRAM] unsigned char 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  n               8   54[COMRAM] unsigned long long 
  4545 ;;  c               2   64[COMRAM] int 
  4546 ;;  i               2   62[COMRAM] int 
  4547 ;;  w               2   52[COMRAM] int 
  4548 ;;  p               2   50[COMRAM] int 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2   27[COMRAM] int 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:        11       0       0       0       0       0       0
  4559 ;;      Locals:        20       0       0       0       0       0       0
  4560 ;;      Temps:          8       0       0       0       0       0       0
  4561 ;;      Totals:        39       0       0       0       0       0       0
  4562 ;;Total ram usage:       39 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    6
  4565 ;; This function calls:
  4566 ;;		_isalpha
  4567 ;;		_isupper
  4568 ;;		_pad
  4569 ;;		_toupper
  4570 ;; This function is called by:
  4571 ;;		_vfpfcnvrt
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text8
  4576  002488                     __ptext8:
  4577                           	opt callstack 0
  4578  002488                     _xtoa:
  4579                           	opt callstack 0
  4580  002488  FFFF               	dw	65535	; assembler added errata NOP
  4581                           
  4582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  4583                           
  4584                           ;incstack = 0
  4585  00248A  0100               	movlb	0	; () banked
  4586  00248C  AFD3               	btfss	(_prec+1)& (0+255),7,b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  4590  00248E  93D4               	bcf	_flags& (0+255),1,b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  4594  002490  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  4595  002492  D005               	goto	u3600
  4596  002494  51D3               	movf	(_prec+1)& (0+255),w,b
  4597  002496  E109               	bnz	l465
  4598  002498  05D2               	decf	_prec& (0+255),w,b
  4599  00249A  B0D8               	btfsc	status,0,c
  4600  00249C  D006               	goto	l465
  4601  00249E                     u3600:
  4602  00249E  FFFF               	dw	65535	; assembler added errata NOP
  4603                           
  4604                           ; BSR set to: 0
  4605  0024A0  0E00               	movlw	0
  4606  0024A2  6E34               	movwf	xtoa@p+1,c
  4607  0024A4  0E01               	movlw	1
  4608  0024A6  6E33               	movwf	xtoa@p,c
  4609  0024A8  D005               	goto	l467
  4610  0024AA                     l465:
  4611  0024AA  FFFF               	dw	65535	; assembler added errata NOP
  4612                           
  4613                           ; BSR set to: 0
  4614  0024AC  C0D2  F033         	movff	_prec,xtoa@p
  4615  0024B0  C0D3  F034         	movff	_prec+1,xtoa@p+1
  4616  0024B4                     l467:
  4617  0024B4  FFFF               	dw	65535	; assembler added errata NOP
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  4621  0024B6  C0D0  F035         	movff	_width,xtoa@w
  4622  0024BA  C0D1  F036         	movff	_width+1,xtoa@w+1
  4623                           
  4624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  4625  0024BE  A9D4               	btfss	_flags& (0+255),4,b
  4626  0024C0  D004               	goto	l3832
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  4630  0024C2  0EFE               	movlw	254
  4631  0024C4  2635               	addwf	xtoa@w,f,c
  4632  0024C6  0EFF               	movlw	255
  4633  0024C8  2236               	addwfc	xtoa@w+1,f,c
  4634  0024CA                     l3832:
  4635  0024CA  FFFF               	dw	65535	; assembler added errata NOP
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4639  0024CC  C01E  F037         	movff	xtoa@d,xtoa@n
  4640  0024D0  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4641  0024D4  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4642  0024D8  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4643  0024DC  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4644  0024E0  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4645  0024E4  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4646  0024E8  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  4650  0024EC  0E00               	movlw	0
  4651  0024EE  6E40               	movwf	xtoa@i+1,c
  4652  0024F0  0E1F               	movlw	31
  4653  0024F2  6E3F               	movwf	xtoa@i,c
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  4657  0024F4  0E00               	movlw	0
  4658  0024F6  6FF8               	movwf	(_dbuf+31)& (0+255),b
  4659                           
  4660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4661  0024F8  D09D               	goto	l3868
  4662  0024FA                     l3838:
  4663  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  4664                           
  4665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4666  0024FC  063F               	decf	xtoa@i,f,c
  4667  0024FE  A0D8               	btfss	status,0,c
  4668  002500  0640               	decf	xtoa@i+1,f,c
  4669                           
  4670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  4671  002502  0E0F               	movlw	15
  4672  002504  1437               	andwf	xtoa@n,w,c
  4673  002506  6E41               	movwf	xtoa@c,c
  4674  002508  6A42               	clrf	xtoa@c+1,c
  4675                           
  4676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  4677  00250A  BE42               	btfsc	xtoa@c+1,7,c
  4678  00250C  D008               	goto	l3846
  4679  00250E  5042               	movf	xtoa@c+1,w,c
  4680  002510  E104               	bnz	u3620
  4681  002512  0E0A               	movlw	10
  4682  002514  5C41               	subwf	xtoa@c,w,c
  4683  002516  A0D8               	btfss	status,0,c
  4684  002518  D002               	goto	l3846
  4685  00251A                     u3620:
  4686  00251A  0E57               	movlw	87
  4687  00251C  D002               	goto	L21
  4688  00251E                     l3846:
  4689  00251E  FFFF               	dw	65535	; assembler added errata NOP
  4690  002520  0E30               	movlw	48
  4691  002522                     L21:
  4692  002522  FFFF               	dw	65535	; assembler added errata NOP
  4693  002524  2441               	addwf	xtoa@c,w,c
  4694  002526  6E41               	movwf	xtoa@c,c
  4695  002528  0E00               	movlw	0
  4696  00252A  2042               	addwfc	xtoa@c+1,w,c
  4697  00252C  6E42               	movwf	xtoa@c+1,c
  4698                           
  4699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  4700  00252E  0EBF               	movlw	191
  4701  002530  6E27               	movwf	??_xtoa& (0+255),c
  4702  002532  0EFF               	movlw	255
  4703  002534  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4704  002536  5026               	movf	xtoa@x,w,c
  4705  002538  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4706  00253A  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  4707  00253C  5027               	movf	??_xtoa,w,c
  4708  00253E  2629               	addwf	??_xtoa+2,f,c
  4709  002540  5028               	movf	??_xtoa+1,w,c
  4710  002542  222A               	addwfc	??_xtoa+3,f,c
  4711  002544  502A               	movf	??_xtoa+3,w,c
  4712  002546  E106               	bnz	u3630
  4713  002548  0E1A               	movlw	26
  4714  00254A  5C29               	subwf	??_xtoa+2,w,c
  4715  00254C  B0D8               	btfsc	status,0,c
  4716  00254E  D002               	goto	u3630
  4717  002550  0E01               	movlw	1
  4718  002552  D002               	goto	u3640
  4719  002554                     u3630:
  4720  002554  FFFF               	dw	65535	; assembler added errata NOP
  4721  002556  0E00               	movlw	0
  4722  002558                     u3640:
  4723  002558  FFFF               	dw	65535	; assembler added errata NOP
  4724  00255A  6E2F               	movwf	_xtoa$1088,c
  4725  00255C  6A30               	clrf	_xtoa$1088+1,c
  4726  00255E  502F               	movf	_xtoa$1088,w,c
  4727  002560  1030               	iorwf	_xtoa$1088+1,w,c
  4728  002562  B4D8               	btfsc	status,2,c
  4729  002564  D029               	goto	l3860
  4730  002566  0E9F               	movlw	159
  4731  002568  6E27               	movwf	??_xtoa& (0+255),c
  4732  00256A  0EFF               	movlw	255
  4733  00256C  6E28               	movwf	(??_xtoa+1)& (0+255),c
  4734  00256E  0E20               	movlw	32
  4735  002570  1041               	iorwf	xtoa@c,w,c
  4736  002572  6E29               	movwf	(??_xtoa+2)& (0+255),c
  4737  002574  0E00               	movlw	0
  4738  002576  1042               	iorwf	xtoa@c+1,w,c
  4739  002578  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  4740  00257A  5027               	movf	??_xtoa,w,c
  4741  00257C  2629               	addwf	??_xtoa+2,f,c
  4742  00257E  5028               	movf	??_xtoa+1,w,c
  4743  002580  222A               	addwfc	??_xtoa+3,f,c
  4744  002582  502A               	movf	??_xtoa+3,w,c
  4745  002584  E106               	bnz	u3660
  4746  002586  0E1A               	movlw	26
  4747  002588  5C29               	subwf	??_xtoa+2,w,c
  4748  00258A  B0D8               	btfsc	status,0,c
  4749  00258C  D002               	goto	u3660
  4750  00258E  0E01               	movlw	1
  4751  002590  D002               	goto	u3670
  4752  002592                     u3660:
  4753  002592  FFFF               	dw	65535	; assembler added errata NOP
  4754  002594  0E00               	movlw	0
  4755  002596                     u3670:
  4756  002596  FFFF               	dw	65535	; assembler added errata NOP
  4757  002598  6E31               	movwf	_xtoa$1089,c
  4758  00259A  6A32               	clrf	_xtoa$1089+1,c
  4759  00259C  5031               	movf	_xtoa$1089,w,c
  4760  00259E  1032               	iorwf	_xtoa$1089+1,w,c
  4761  0025A0  B4D8               	btfsc	status,2,c
  4762  0025A2  D00A               	goto	l3860
  4763                           
  4764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  4765  0025A4  C041  F007         	movff	xtoa@c,toupper@c
  4766  0025A8  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4767  0025AC  ECE4  F01C         	call	_toupper	;wreg free
  4768  0025B0  C007  F041         	movff	?_toupper,xtoa@c
  4769  0025B4  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4770  0025B8                     l3860:
  4771  0025B8  FFFF               	dw	65535	; assembler added errata NOP
  4772                           
  4773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  4774  0025BA  0ED9               	movlw	low _dbuf
  4775  0025BC  243F               	addwf	xtoa@i,w,c
  4776  0025BE  6ED9               	movwf	fsr2l,c
  4777  0025C0  0E00               	movlw	high _dbuf
  4778  0025C2  2040               	addwfc	xtoa@i+1,w,c
  4779  0025C4  6EDA               	movwf	fsr2h,c
  4780  0025C6  C041  FFDF         	movff	xtoa@c,indf2
  4781                           
  4782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4783  0025CA  0633               	decf	xtoa@p,f,c
  4784  0025CC  A0D8               	btfss	status,0,c
  4785  0025CE  0634               	decf	xtoa@p+1,f,c
  4786                           
  4787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4788  0025D0  0635               	decf	xtoa@w,f,c
  4789  0025D2  A0D8               	btfss	status,0,c
  4790  0025D4  0636               	decf	xtoa@w+1,f,c
  4791                           
  4792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  4793  0025D6  C037  F027         	movff	xtoa@n,??_xtoa
  4794  0025DA  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4795  0025DE  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4796  0025E2  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4797  0025E6  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4798  0025EA  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4799  0025EE  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4800  0025F2  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4801  0025F6  0E05               	movlw	5
  4802  0025F8  D00A               	goto	u3690
  4803  0025FA                     u3695:
  4804  0025FA  FFFF               	dw	65535	; assembler added errata NOP
  4805  0025FC  90D8               	bcf	status,0,c
  4806  0025FE  322E               	rrcf	??_xtoa+7,f,c
  4807  002600  322D               	rrcf	??_xtoa+6,f,c
  4808  002602  322C               	rrcf	??_xtoa+5,f,c
  4809  002604  322B               	rrcf	??_xtoa+4,f,c
  4810  002606  322A               	rrcf	??_xtoa+3,f,c
  4811  002608  3229               	rrcf	??_xtoa+2,f,c
  4812  00260A  3228               	rrcf	??_xtoa+1,f,c
  4813  00260C  3227               	rrcf	??_xtoa,f,c
  4814  00260E                     u3690:
  4815  00260E  FFFF               	dw	65535	; assembler added errata NOP
  4816  002610  2EE8               	decfsz	wreg,f,c
  4817  002612  D7F3               	goto	u3695
  4818  002614  C027  F037         	movff	??_xtoa,xtoa@n
  4819  002618  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4820  00261C  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4821  002620  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4822  002624  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4823  002628  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4824  00262C  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4825  002630  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4826  002634                     l3868:
  4827  002634  FFFF               	dw	65535	; assembler added errata NOP
  4828                           
  4829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4830  002636  BE40               	btfsc	xtoa@i+1,7,c
  4831  002638  D022               	goto	u3740
  4832  00263A  5040               	movf	xtoa@i+1,w,c
  4833  00263C  E104               	bnz	u3700
  4834  00263E  0E02               	movlw	2
  4835  002640  5C3F               	subwf	xtoa@i,w,c
  4836  002642  A0D8               	btfss	status,0,c
  4837  002644  D01C               	goto	u3740
  4838  002646                     u3700:
  4839  002646  5037               	movf	xtoa@n,w,c
  4840  002648  1038               	iorwf	xtoa@n+1,w,c
  4841  00264A  1039               	iorwf	xtoa@n+2,w,c
  4842  00264C  103A               	iorwf	xtoa@n+3,w,c
  4843  00264E  103B               	iorwf	xtoa@n+4,w,c
  4844  002650  103C               	iorwf	xtoa@n+5,w,c
  4845  002652  103D               	iorwf	xtoa@n+6,w,c
  4846  002654  103E               	iorwf	xtoa@n+7,w,c
  4847  002656  A4D8               	btfss	status,2,c
  4848  002658  D750               	goto	l3838
  4849  00265A  BE34               	btfsc	xtoa@p+1,7,c
  4850  00265C  D005               	goto	u3720
  4851  00265E  5034               	movf	xtoa@p+1,w,c
  4852  002660  E102               	bnz	u3721
  4853  002662  0433               	decf	xtoa@p,w,c
  4854  002664  B0D8               	btfsc	status,0,c
  4855  002666                     u3721:
  4856  002666  D749               	goto	l3838
  4857  002668                     u3720:
  4858  002668  FFFF               	dw	65535	; assembler added errata NOP
  4859  00266A  BE36               	btfsc	xtoa@w+1,7,c
  4860  00266C  D008               	goto	u3740
  4861  00266E  5036               	movf	xtoa@w+1,w,c
  4862  002670  E103               	bnz	u3730
  4863  002672  0435               	decf	xtoa@w,w,c
  4864  002674  A0D8               	btfss	status,0,c
  4865  002676  D003               	goto	u3740
  4866  002678                     u3730:
  4867  002678  0100               	movlb	0	; () banked
  4868  00267A  B3D4               	btfsc	_flags& (0+255),1,b
  4869  00267C  D73E               	goto	l3838
  4870  00267E                     u3740:
  4871  00267E  FFFF               	dw	65535	; assembler added errata NOP
  4872                           
  4873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4874  002680  0100               	movlb	0	; () banked
  4875  002682  A9D4               	btfss	_flags& (0+255),4,b
  4876  002684  D016               	goto	l3884
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4880  002686  063F               	decf	xtoa@i,f,c
  4881  002688  A0D8               	btfss	status,0,c
  4882  00268A  0640               	decf	xtoa@i+1,f,c
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4886  00268C  0ED9               	movlw	low _dbuf
  4887  00268E  243F               	addwf	xtoa@i,w,c
  4888  002690  6ED9               	movwf	fsr2l,c
  4889  002692  0E00               	movlw	high _dbuf
  4890  002694  2040               	addwfc	xtoa@i+1,w,c
  4891  002696  6EDA               	movwf	fsr2h,c
  4892  002698  C026  FFDF         	movff	xtoa@x,indf2
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4896  00269C  063F               	decf	xtoa@i,f,c
  4897  00269E  A0D8               	btfss	status,0,c
  4898  0026A0  0640               	decf	xtoa@i+1,f,c
  4899                           
  4900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4901  0026A2  0ED9               	movlw	low _dbuf
  4902  0026A4  243F               	addwf	xtoa@i,w,c
  4903  0026A6  6ED9               	movwf	fsr2l,c
  4904  0026A8  0E00               	movlw	high _dbuf
  4905  0026AA  2040               	addwfc	xtoa@i+1,w,c
  4906  0026AC  6EDA               	movwf	fsr2h,c
  4907  0026AE  0E30               	movlw	48
  4908  0026B0  6EDF               	movwf	indf2,c
  4909  0026B2                     l3884:
  4910  0026B2  FFFF               	dw	65535	; assembler added errata NOP
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4914  0026B4  C01C  F011         	movff	xtoa@fp,pad@fp
  4915  0026B8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4916  0026BC  0ED9               	movlw	low _dbuf
  4917  0026BE  243F               	addwf	xtoa@i,w,c
  4918  0026C0  6E13               	movwf	pad@buf,c
  4919  0026C2  0E00               	movlw	high _dbuf
  4920  0026C4  2040               	addwfc	xtoa@i+1,w,c
  4921  0026C6  6E14               	movwf	pad@buf+1,c
  4922  0026C8  C035  F015         	movff	xtoa@w,pad@p
  4923  0026CC  C036  F016         	movff	xtoa@w+1,pad@p+1
  4924  0026D0  EC63  F01B         	call	_pad	;wreg free
  4925  0026D4  C011  F01C         	movff	?_pad,?_xtoa
  4926  0026D8  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4927  0026DC  0012               	return		;funcret
  4928  0026DE  FFFF               	dw	65535	; errata NOP
  4929  0026E0                     __end_of_xtoa:
  4930                           	opt callstack 0
  4931                           
  4932 ;; *************** function _toupper *****************
  4933 ;; Defined at:
  4934 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  c               2    6[COMRAM] int 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    6[COMRAM] int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         2       0       0       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0       0       0
  4950 ;;      Temps:          4       0       0       0       0       0       0
  4951 ;;      Totals:         8       0       0       0       0       0       0
  4952 ;;Total ram usage:        8 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    3
  4955 ;; This function calls:
  4956 ;;		_islower
  4957 ;; This function is called by:
  4958 ;;		_xtoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text9
  4963  0039C8                     __ptext9:
  4964                           	opt callstack 0
  4965  0039C8                     _toupper:
  4966                           	opt callstack 0
  4967  0039C8  FFFF               	dw	65535	; assembler added errata NOP
  4968                           
  4969                           ;incstack = 0
  4970  0039CA  0E9F               	movlw	159
  4971  0039CC  6E09               	movwf	??_toupper& (0+255),c
  4972  0039CE  0EFF               	movlw	255
  4973  0039D0  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4974  0039D2  C007  F00B         	movff	toupper@c,??_toupper+2
  4975  0039D6  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4976  0039DA  5009               	movf	??_toupper,w,c
  4977  0039DC  260B               	addwf	??_toupper+2,f,c
  4978  0039DE  500A               	movf	??_toupper+1,w,c
  4979  0039E0  220C               	addwfc	??_toupper+3,f,c
  4980  0039E2  500C               	movf	??_toupper+3,w,c
  4981  0039E4  E106               	bnz	u2900
  4982  0039E6  0E1A               	movlw	26
  4983  0039E8  5C0B               	subwf	??_toupper+2,w,c
  4984  0039EA  B0D8               	btfsc	status,0,c
  4985  0039EC  D002               	goto	u2900
  4986  0039EE  0E01               	movlw	1
  4987  0039F0  D002               	goto	u2910
  4988  0039F2                     u2900:
  4989  0039F2  FFFF               	dw	65535	; assembler added errata NOP
  4990  0039F4  0E00               	movlw	0
  4991  0039F6                     u2910:
  4992  0039F6  FFFF               	dw	65535	; assembler added errata NOP
  4993  0039F8  6E0D               	movwf	_toupper$1855,c
  4994  0039FA  6A0E               	clrf	_toupper$1855+1,c
  4995  0039FC  500D               	movf	_toupper$1855,w,c
  4996  0039FE  100E               	iorwf	_toupper$1855+1,w,c
  4997  003A00  B4D8               	btfsc	status,2,c
  4998  003A02  D005               	goto	l1400
  4999  003A04  0E5F               	movlw	95
  5000  003A06  1407               	andwf	toupper@c,w,c
  5001  003A08  6E07               	movwf	?_toupper,c
  5002  003A0A  6A08               	clrf	?_toupper+1,c
  5003  003A0C  D005               	goto	l1405
  5004  003A0E                     l1400:
  5005  003A0E  FFFF               	dw	65535	; assembler added errata NOP
  5006  003A10  C007  F007         	movff	toupper@c,?_toupper
  5007  003A14  C008  F008         	movff	toupper@c+1,?_toupper+1
  5008  003A18                     l1405:
  5009  003A18  FFFF               	dw	65535	; assembler added errata NOP
  5010  003A1A  0012               	return		;funcret
  5011  003A1C  FFFF               	dw	65535	; errata NOP
  5012  003A1E                     __end_of_toupper:
  5013                           	opt callstack 0
  5014                           
  5015 ;; *************** function _islower *****************
  5016 ;; Defined at:
  5017 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  c               2    0[COMRAM] int 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2    0[COMRAM] int 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5031 ;;      Params:         2       0       0       0       0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0
  5033 ;;      Temps:          4       0       0       0       0       0       0
  5034 ;;      Totals:         6       0       0       0       0       0       0
  5035 ;;Total ram usage:        6 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    2
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_toupper
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text10
  5046  003C94                     __ptext10:
  5047                           	opt callstack 0
  5048  003C94                     _islower:
  5049                           	opt callstack 0
  5050  003C94  FFFF               	dw	65535	; assembler added errata NOP
  5051                           
  5052                           ;incstack = 0
  5053  003C96  0E9F               	movlw	159
  5054  003C98  6E03               	movwf	??_islower& (0+255),c
  5055  003C9A  0EFF               	movlw	255
  5056  003C9C  6E04               	movwf	(??_islower+1)& (0+255),c
  5057  003C9E  C001  F005         	movff	islower@c,??_islower+2
  5058  003CA2  C002  F006         	movff	islower@c+1,??_islower+3
  5059  003CA6  5003               	movf	??_islower,w,c
  5060  003CA8  2605               	addwf	??_islower+2,f,c
  5061  003CAA  5004               	movf	??_islower+1,w,c
  5062  003CAC  2206               	addwfc	??_islower+3,f,c
  5063  003CAE  5006               	movf	??_islower+3,w,c
  5064  003CB0  E106               	bnz	u2790
  5065  003CB2  0E1A               	movlw	26
  5066  003CB4  5C05               	subwf	??_islower+2,w,c
  5067  003CB6  B0D8               	btfsc	status,0,c
  5068  003CB8  D002               	goto	u2790
  5069  003CBA  0E01               	movlw	1
  5070  003CBC  D002               	goto	u2800
  5071  003CBE                     u2790:
  5072  003CBE  FFFF               	dw	65535	; assembler added errata NOP
  5073  003CC0  0E00               	movlw	0
  5074  003CC2                     u2800:
  5075  003CC2  FFFF               	dw	65535	; assembler added errata NOP
  5076  003CC4  6E01               	movwf	?_islower,c
  5077  003CC6  6A02               	clrf	?_islower+1,c
  5078  003CC8  0012               	return		;funcret
  5079  003CCA  FFFF               	dw	65535	; errata NOP
  5080  003CCC                     __end_of_islower:
  5081                           	opt callstack 0
  5082                           
  5083 ;; *************** function _isupper *****************
  5084 ;; Defined at:
  5085 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  c               2    0[COMRAM] int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  2    0[COMRAM] int 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5099 ;;      Params:         2       0       0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0       0       0
  5101 ;;      Temps:          4       0       0       0       0       0       0
  5102 ;;      Totals:         6       0       0       0       0       0       0
  5103 ;;Total ram usage:        6 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    2
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_xtoa
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text11
  5114  003CCC                     __ptext11:
  5115                           	opt callstack 0
  5116  003CCC                     _isupper:
  5117                           	opt callstack 0
  5118  003CCC  FFFF               	dw	65535	; assembler added errata NOP
  5119                           
  5120                           ;incstack = 0
  5121  003CCE  0EBF               	movlw	191
  5122  003CD0  6E03               	movwf	??_isupper& (0+255),c
  5123  003CD2  0EFF               	movlw	255
  5124  003CD4  6E04               	movwf	(??_isupper+1)& (0+255),c
  5125  003CD6  C001  F005         	movff	isupper@c,??_isupper+2
  5126  003CDA  C002  F006         	movff	isupper@c+1,??_isupper+3
  5127  003CDE  5003               	movf	??_isupper,w,c
  5128  003CE0  2605               	addwf	??_isupper+2,f,c
  5129  003CE2  5004               	movf	??_isupper+1,w,c
  5130  003CE4  2206               	addwfc	??_isupper+3,f,c
  5131  003CE6  5006               	movf	??_isupper+3,w,c
  5132  003CE8  E106               	bnz	u2860
  5133  003CEA  0E1A               	movlw	26
  5134  003CEC  5C05               	subwf	??_isupper+2,w,c
  5135  003CEE  B0D8               	btfsc	status,0,c
  5136  003CF0  D002               	goto	u2860
  5137  003CF2  0E01               	movlw	1
  5138  003CF4  D002               	goto	u2870
  5139  003CF6                     u2860:
  5140  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  5141  003CF8  0E00               	movlw	0
  5142  003CFA                     u2870:
  5143  003CFA  FFFF               	dw	65535	; assembler added errata NOP
  5144  003CFC  6E01               	movwf	?_isupper,c
  5145  003CFE  6A02               	clrf	?_isupper+1,c
  5146  003D00  0012               	return		;funcret
  5147  003D02  FFFF               	dw	65535	; errata NOP
  5148  003D04                     __end_of_isupper:
  5149                           	opt callstack 0
  5150                           
  5151 ;; *************** function _isalpha *****************
  5152 ;; Defined at:
  5153 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  c               2    0[COMRAM] int 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  2    0[COMRAM] int 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5167 ;;      Params:         2       0       0       0       0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0
  5169 ;;      Temps:          4       0       0       0       0       0       0
  5170 ;;      Totals:         6       0       0       0       0       0       0
  5171 ;;Total ram usage:        6 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    2
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_xtoa
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text12
  5182  003C1C                     __ptext12:
  5183                           	opt callstack 0
  5184  003C1C                     _isalpha:
  5185                           	opt callstack 0
  5186  003C1C  FFFF               	dw	65535	; assembler added errata NOP
  5187                           
  5188                           ;incstack = 0
  5189  003C1E  0E9F               	movlw	159
  5190  003C20  6E03               	movwf	??_isalpha& (0+255),c
  5191  003C22  0EFF               	movlw	255
  5192  003C24  6E04               	movwf	(??_isalpha+1)& (0+255),c
  5193  003C26  0E20               	movlw	32
  5194  003C28  1001               	iorwf	isalpha@c,w,c
  5195  003C2A  6E05               	movwf	(??_isalpha+2)& (0+255),c
  5196  003C2C  0E00               	movlw	0
  5197  003C2E  1002               	iorwf	isalpha@c+1,w,c
  5198  003C30  6E06               	movwf	(??_isalpha+3)& (0+255),c
  5199  003C32  5003               	movf	??_isalpha,w,c
  5200  003C34  2605               	addwf	??_isalpha+2,f,c
  5201  003C36  5004               	movf	??_isalpha+1,w,c
  5202  003C38  2206               	addwfc	??_isalpha+3,f,c
  5203  003C3A  5006               	movf	??_isalpha+3,w,c
  5204  003C3C  E106               	bnz	u2880
  5205  003C3E  0E1A               	movlw	26
  5206  003C40  5C05               	subwf	??_isalpha+2,w,c
  5207  003C42  B0D8               	btfsc	status,0,c
  5208  003C44  D002               	goto	u2880
  5209  003C46  0E01               	movlw	1
  5210  003C48  D002               	goto	u2890
  5211  003C4A                     u2880:
  5212  003C4A  FFFF               	dw	65535	; assembler added errata NOP
  5213  003C4C  0E00               	movlw	0
  5214  003C4E                     u2890:
  5215  003C4E  FFFF               	dw	65535	; assembler added errata NOP
  5216  003C50  6E01               	movwf	?_isalpha,c
  5217  003C52  6A02               	clrf	?_isalpha+1,c
  5218  003C54  0012               	return		;funcret
  5219  003C56  FFFF               	dw	65535	; errata NOP
  5220  003C58                     __end_of_isalpha:
  5221                           	opt callstack 0
  5222                           
  5223 ;; *************** function _utoa *****************
  5224 ;; Defined at:
  5225 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5228 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5229 ;;  d               8   29[COMRAM] unsigned long long 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  n               8   49[COMRAM] unsigned long long 
  5232 ;;  i               2   57[COMRAM] int 
  5233 ;;  w               2   47[COMRAM] int 
  5234 ;;  p               2   45[COMRAM] int 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  2   27[COMRAM] int 
  5237 ;; Registers used:
  5238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5244 ;;      Params:        10       0       0       0       0       0       0
  5245 ;;      Locals:        14       0       0       0       0       0       0
  5246 ;;      Temps:          8       0       0       0       0       0       0
  5247 ;;      Totals:        32       0       0       0       0       0       0
  5248 ;;Total ram usage:       32 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    6
  5251 ;; This function calls:
  5252 ;;		___lodiv
  5253 ;;		___lomod
  5254 ;;		_pad
  5255 ;; This function is called by:
  5256 ;;		_vfpfcnvrt
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text13
  5261  0026E0                     __ptext13:
  5262                           	opt callstack 0
  5263  0026E0                     _utoa:
  5264                           	opt callstack 0
  5265  0026E0  FFFF               	dw	65535	; assembler added errata NOP
  5266                           
  5267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  5268                           
  5269                           ;incstack = 0
  5270  0026E2  0100               	movlb	0	; () banked
  5271  0026E4  AFD3               	btfss	(_prec+1)& (0+255),7,b
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  5275  0026E6  93D4               	bcf	_flags& (0+255),1,b
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  5279  0026E8  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  5280  0026EA  D005               	goto	u3530
  5281  0026EC  51D3               	movf	(_prec+1)& (0+255),w,b
  5282  0026EE  E109               	bnz	l450
  5283  0026F0  05D2               	decf	_prec& (0+255),w,b
  5284  0026F2  B0D8               	btfsc	status,0,c
  5285  0026F4  D006               	goto	l450
  5286  0026F6                     u3530:
  5287  0026F6  FFFF               	dw	65535	; assembler added errata NOP
  5288                           
  5289                           ; BSR set to: 0
  5290  0026F8  0E00               	movlw	0
  5291  0026FA  6E2F               	movwf	utoa@p+1,c
  5292  0026FC  0E01               	movlw	1
  5293  0026FE  6E2E               	movwf	utoa@p,c
  5294  002700  D005               	goto	l452
  5295  002702                     l450:
  5296  002702  FFFF               	dw	65535	; assembler added errata NOP
  5297                           
  5298                           ; BSR set to: 0
  5299  002704  C0D2  F02E         	movff	_prec,utoa@p
  5300  002708  C0D3  F02F         	movff	_prec+1,utoa@p+1
  5301  00270C                     l452:
  5302  00270C  FFFF               	dw	65535	; assembler added errata NOP
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  5306  00270E  C0D0  F030         	movff	_width,utoa@w
  5307  002712  C0D1  F031         	movff	_width+1,utoa@w+1
  5308                           
  5309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  5310  002716  C01E  F032         	movff	utoa@d,utoa@n
  5311  00271A  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5312  00271E  C020  F034         	movff	utoa@d+2,utoa@n+2
  5313  002722  C021  F035         	movff	utoa@d+3,utoa@n+3
  5314  002726  C022  F036         	movff	utoa@d+4,utoa@n+4
  5315  00272A  C023  F037         	movff	utoa@d+5,utoa@n+5
  5316  00272E  C024  F038         	movff	utoa@d+6,utoa@n+6
  5317  002732  C025  F039         	movff	utoa@d+7,utoa@n+7
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  5321  002736  0E00               	movlw	0
  5322  002738  6E3B               	movwf	utoa@i+1,c
  5323  00273A  0E1F               	movlw	31
  5324  00273C  6E3A               	movwf	utoa@i,c
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  5328  00273E  0E00               	movlw	0
  5329  002740  6FF8               	movwf	(_dbuf+31)& (0+255),b
  5330                           
  5331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5332  002742  D077               	goto	l3808
  5333  002744                     l3798:
  5334  002744  FFFF               	dw	65535	; assembler added errata NOP
  5335                           
  5336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  5337  002746  063A               	decf	utoa@i,f,c
  5338  002748  A0D8               	btfss	status,0,c
  5339  00274A  063B               	decf	utoa@i+1,f,c
  5340                           
  5341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  5342  00274C  0ED9               	movlw	low _dbuf
  5343  00274E  243A               	addwf	utoa@i,w,c
  5344  002750  6ED9               	movwf	fsr2l,c
  5345  002752  0E00               	movlw	high _dbuf
  5346  002754  203B               	addwfc	utoa@i+1,w,c
  5347  002756  6EDA               	movwf	fsr2h,c
  5348  002758  C032  F001         	movff	utoa@n,___lomod@dividend
  5349  00275C  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5350  002760  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5351  002764  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5352  002768  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5353  00276C  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5354  002770  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5355  002774  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5356  002778  0E0A               	movlw	10
  5357  00277A  6E09               	movwf	___lomod@divisor,c
  5358  00277C  0E00               	movlw	0
  5359  00277E  6E0A               	movwf	___lomod@divisor+1,c
  5360  002780  0E00               	movlw	0
  5361  002782  6E0B               	movwf	___lomod@divisor+2,c
  5362  002784  0E00               	movlw	0
  5363  002786  6E0C               	movwf	___lomod@divisor+3,c
  5364  002788  0E00               	movlw	0
  5365  00278A  6E0D               	movwf	___lomod@divisor+4,c
  5366  00278C  0E00               	movlw	0
  5367  00278E  6E0E               	movwf	___lomod@divisor+5,c
  5368  002790  0E00               	movlw	0
  5369  002792  6E0F               	movwf	___lomod@divisor+6,c
  5370  002794  0E00               	movlw	0
  5371  002796  6E10               	movwf	___lomod@divisor+7,c
  5372  002798  ECAF  F01A         	call	___lomod	;wreg free
  5373  00279C  C001  F026         	movff	?___lomod,??_utoa
  5374  0027A0  C002  F027         	movff	?___lomod+1,??_utoa+1
  5375  0027A4  C003  F028         	movff	?___lomod+2,??_utoa+2
  5376  0027A8  C004  F029         	movff	?___lomod+3,??_utoa+3
  5377  0027AC  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5378  0027B0  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5379  0027B4  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5380  0027B8  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5381  0027BC  5026               	movf	??_utoa,w,c
  5382  0027BE  0F30               	addlw	48
  5383  0027C0  6EDF               	movwf	indf2,c
  5384                           
  5385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  5386  0027C2  062E               	decf	utoa@p,f,c
  5387  0027C4  A0D8               	btfss	status,0,c
  5388  0027C6  062F               	decf	utoa@p+1,f,c
  5389                           
  5390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  5391  0027C8  0630               	decf	utoa@w,f,c
  5392  0027CA  A0D8               	btfss	status,0,c
  5393  0027CC  0631               	decf	utoa@w+1,f,c
  5394                           
  5395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  5396  0027CE  C032  F001         	movff	utoa@n,___lodiv@dividend
  5397  0027D2  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5398  0027D6  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5399  0027DA  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5400  0027DE  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5401  0027E2  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5402  0027E6  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5403  0027EA  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5404  0027EE  0E0A               	movlw	10
  5405  0027F0  6E09               	movwf	___lodiv@divisor,c
  5406  0027F2  0E00               	movlw	0
  5407  0027F4  6E0A               	movwf	___lodiv@divisor+1,c
  5408  0027F6  0E00               	movlw	0
  5409  0027F8  6E0B               	movwf	___lodiv@divisor+2,c
  5410  0027FA  0E00               	movlw	0
  5411  0027FC  6E0C               	movwf	___lodiv@divisor+3,c
  5412  0027FE  0E00               	movlw	0
  5413  002800  6E0D               	movwf	___lodiv@divisor+4,c
  5414  002802  0E00               	movlw	0
  5415  002804  6E0E               	movwf	___lodiv@divisor+5,c
  5416  002806  0E00               	movlw	0
  5417  002808  6E0F               	movwf	___lodiv@divisor+6,c
  5418  00280A  0E00               	movlw	0
  5419  00280C  6E10               	movwf	___lodiv@divisor+7,c
  5420  00280E  EC11  F019         	call	___lodiv	;wreg free
  5421  002812  C001  F032         	movff	?___lodiv,utoa@n
  5422  002816  C002  F033         	movff	?___lodiv+1,utoa@n+1
  5423  00281A  C003  F034         	movff	?___lodiv+2,utoa@n+2
  5424  00281E  C004  F035         	movff	?___lodiv+3,utoa@n+3
  5425  002822  C005  F036         	movff	?___lodiv+4,utoa@n+4
  5426  002826  C006  F037         	movff	?___lodiv+5,utoa@n+5
  5427  00282A  C007  F038         	movff	?___lodiv+6,utoa@n+6
  5428  00282E  C008  F039         	movff	?___lodiv+7,utoa@n+7
  5429  002832                     l3808:
  5430  002832  FFFF               	dw	65535	; assembler added errata NOP
  5431                           
  5432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5433  002834  503A               	movf	utoa@i,w,c
  5434  002836  103B               	iorwf	utoa@i+1,w,c
  5435  002838  B4D8               	btfsc	status,2,c
  5436  00283A  D01C               	goto	u3580
  5437  00283C  5032               	movf	utoa@n,w,c
  5438  00283E  1033               	iorwf	utoa@n+1,w,c
  5439  002840  1034               	iorwf	utoa@n+2,w,c
  5440  002842  1035               	iorwf	utoa@n+3,w,c
  5441  002844  1036               	iorwf	utoa@n+4,w,c
  5442  002846  1037               	iorwf	utoa@n+5,w,c
  5443  002848  1038               	iorwf	utoa@n+6,w,c
  5444  00284A  1039               	iorwf	utoa@n+7,w,c
  5445  00284C  A4D8               	btfss	status,2,c
  5446  00284E  D77A               	goto	l3798
  5447  002850  BE2F               	btfsc	utoa@p+1,7,c
  5448  002852  D005               	goto	u3560
  5449  002854  502F               	movf	utoa@p+1,w,c
  5450  002856  E102               	bnz	u3561
  5451  002858  042E               	decf	utoa@p,w,c
  5452  00285A  B0D8               	btfsc	status,0,c
  5453  00285C                     u3561:
  5454  00285C  D773               	goto	l3798
  5455  00285E                     u3560:
  5456  00285E  FFFF               	dw	65535	; assembler added errata NOP
  5457  002860  BE31               	btfsc	utoa@w+1,7,c
  5458  002862  D008               	goto	u3580
  5459  002864  5031               	movf	utoa@w+1,w,c
  5460  002866  E103               	bnz	u3570
  5461  002868  0430               	decf	utoa@w,w,c
  5462  00286A  A0D8               	btfss	status,0,c
  5463  00286C  D003               	goto	u3580
  5464  00286E                     u3570:
  5465  00286E  0100               	movlb	0	; () banked
  5466  002870  B3D4               	btfsc	_flags& (0+255),1,b
  5467  002872  D768               	goto	l3798
  5468  002874                     u3580:
  5469  002874  FFFF               	dw	65535	; assembler added errata NOP
  5470                           
  5471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  5472  002876  C01C  F011         	movff	utoa@fp,pad@fp
  5473  00287A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5474  00287E  0ED9               	movlw	low _dbuf
  5475  002880  243A               	addwf	utoa@i,w,c
  5476  002882  6E13               	movwf	pad@buf,c
  5477  002884  0E00               	movlw	high _dbuf
  5478  002886  203B               	addwfc	utoa@i+1,w,c
  5479  002888  6E14               	movwf	pad@buf+1,c
  5480  00288A  C030  F015         	movff	utoa@w,pad@p
  5481  00288E  C031  F016         	movff	utoa@w+1,pad@p+1
  5482  002892  EC63  F01B         	call	_pad	;wreg free
  5483  002896  C011  F01C         	movff	?_pad,?_utoa
  5484  00289A  C012  F01D         	movff	?_pad+1,?_utoa+1
  5485  00289E  0012               	return		;funcret
  5486  0028A0  FFFF               	dw	65535	; errata NOP
  5487  0028A2                     __end_of_utoa:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function ___lomod *****************
  5491 ;; Defined at:
  5492 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  dividend        8    0[COMRAM] unsigned long long 
  5495 ;;  divisor         8    8[COMRAM] unsigned long long 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  counter         1   16[COMRAM] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  8    0[COMRAM] unsigned long long 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5507 ;;      Params:        16       0       0       0       0       0       0
  5508 ;;      Locals:         1       0       0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0
  5510 ;;      Totals:        17       0       0       0       0       0       0
  5511 ;;Total ram usage:       17 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    2
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_utoa
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text14
  5522  00355E                     __ptext14:
  5523                           	opt callstack 0
  5524  00355E                     ___lomod:
  5525                           	opt callstack 0
  5526  00355E  FFFF               	dw	65535	; assembler added errata NOP
  5527                           
  5528                           ;incstack = 0
  5529  003560  5009               	movf	___lomod@divisor,w,c
  5530  003562  100A               	iorwf	___lomod@divisor+1,w,c
  5531  003564  100B               	iorwf	___lomod@divisor+2,w,c
  5532  003566  100C               	iorwf	___lomod@divisor+3,w,c
  5533  003568  100D               	iorwf	___lomod@divisor+4,w,c
  5534  00356A  100E               	iorwf	___lomod@divisor+5,w,c
  5535  00356C  100F               	iorwf	___lomod@divisor+6,w,c
  5536  00356E  1010               	iorwf	___lomod@divisor+7,w,c
  5537  003570  B4D8               	btfsc	status,2,c
  5538  003572  D040               	goto	l1032
  5539  003574  0E01               	movlw	1
  5540  003576  6E11               	movwf	___lomod@counter,c
  5541  003578  D00B               	goto	l3598
  5542  00357A                     l3596:
  5543  00357A  FFFF               	dw	65535	; assembler added errata NOP
  5544  00357C  90D8               	bcf	status,0,c
  5545  00357E  3609               	rlcf	___lomod@divisor,f,c
  5546  003580  360A               	rlcf	___lomod@divisor+1,f,c
  5547  003582  360B               	rlcf	___lomod@divisor+2,f,c
  5548  003584  360C               	rlcf	___lomod@divisor+3,f,c
  5549  003586  360D               	rlcf	___lomod@divisor+4,f,c
  5550  003588  360E               	rlcf	___lomod@divisor+5,f,c
  5551  00358A  360F               	rlcf	___lomod@divisor+6,f,c
  5552  00358C  3610               	rlcf	___lomod@divisor+7,f,c
  5553  00358E  2A11               	incf	___lomod@counter,f,c
  5554  003590                     l3598:
  5555  003590  FFFF               	dw	65535	; assembler added errata NOP
  5556  003592  AE10               	btfss	___lomod@divisor+7,7,c
  5557  003594  D7F2               	goto	l3596
  5558  003596                     u3130:
  5559  003596  FFFF               	dw	65535	; assembler added errata NOP
  5560  003598  5009               	movf	___lomod@divisor,w,c
  5561  00359A  5C01               	subwf	___lomod@dividend,w,c
  5562  00359C  500A               	movf	___lomod@divisor+1,w,c
  5563  00359E  5802               	subwfb	___lomod@dividend+1,w,c
  5564  0035A0  500B               	movf	___lomod@divisor+2,w,c
  5565  0035A2  5803               	subwfb	___lomod@dividend+2,w,c
  5566  0035A4  500C               	movf	___lomod@divisor+3,w,c
  5567  0035A6  5804               	subwfb	___lomod@dividend+3,w,c
  5568  0035A8  500D               	movf	___lomod@divisor+4,w,c
  5569  0035AA  5805               	subwfb	___lomod@dividend+4,w,c
  5570  0035AC  500E               	movf	___lomod@divisor+5,w,c
  5571  0035AE  5806               	subwfb	___lomod@dividend+5,w,c
  5572  0035B0  500F               	movf	___lomod@divisor+6,w,c
  5573  0035B2  5807               	subwfb	___lomod@dividend+6,w,c
  5574  0035B4  5010               	movf	___lomod@divisor+7,w,c
  5575  0035B6  5808               	subwfb	___lomod@dividend+7,w,c
  5576  0035B8  A0D8               	btfss	status,0,c
  5577  0035BA  D010               	goto	l3604
  5578  0035BC  5009               	movf	___lomod@divisor,w,c
  5579  0035BE  5E01               	subwf	___lomod@dividend,f,c
  5580  0035C0  500A               	movf	___lomod@divisor+1,w,c
  5581  0035C2  5A02               	subwfb	___lomod@dividend+1,f,c
  5582  0035C4  500B               	movf	___lomod@divisor+2,w,c
  5583  0035C6  5A03               	subwfb	___lomod@dividend+2,f,c
  5584  0035C8  500C               	movf	___lomod@divisor+3,w,c
  5585  0035CA  5A04               	subwfb	___lomod@dividend+3,f,c
  5586  0035CC  500D               	movf	___lomod@divisor+4,w,c
  5587  0035CE  5A05               	subwfb	___lomod@dividend+4,f,c
  5588  0035D0  500E               	movf	___lomod@divisor+5,w,c
  5589  0035D2  5A06               	subwfb	___lomod@dividend+5,f,c
  5590  0035D4  500F               	movf	___lomod@divisor+6,w,c
  5591  0035D6  5A07               	subwfb	___lomod@dividend+6,f,c
  5592  0035D8  5010               	movf	___lomod@divisor+7,w,c
  5593  0035DA  5A08               	subwfb	___lomod@dividend+7,f,c
  5594  0035DC                     l3604:
  5595  0035DC  FFFF               	dw	65535	; assembler added errata NOP
  5596  0035DE  90D8               	bcf	status,0,c
  5597  0035E0  3210               	rrcf	___lomod@divisor+7,f,c
  5598  0035E2  320F               	rrcf	___lomod@divisor+6,f,c
  5599  0035E4  320E               	rrcf	___lomod@divisor+5,f,c
  5600  0035E6  320D               	rrcf	___lomod@divisor+4,f,c
  5601  0035E8  320C               	rrcf	___lomod@divisor+3,f,c
  5602  0035EA  320B               	rrcf	___lomod@divisor+2,f,c
  5603  0035EC  320A               	rrcf	___lomod@divisor+1,f,c
  5604  0035EE  3209               	rrcf	___lomod@divisor,f,c
  5605  0035F0  2E11               	decfsz	___lomod@counter,f,c
  5606  0035F2  D7D1               	goto	u3130
  5607  0035F4                     l1032:
  5608  0035F4  FFFF               	dw	65535	; assembler added errata NOP
  5609  0035F6  C001  F001         	movff	___lomod@dividend,?___lomod
  5610  0035FA  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5611  0035FE  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5612  003602  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5613  003606  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5614  00360A  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5615  00360E  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5616  003612  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5617  003616  0012               	return		;funcret
  5618  003618  FFFF               	dw	65535	; errata NOP
  5619  00361A                     __end_of___lomod:
  5620                           	opt callstack 0
  5621                           
  5622 ;; *************** function ___lodiv *****************
  5623 ;; Defined at:
  5624 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  dividend        8    0[COMRAM] unsigned long long 
  5627 ;;  divisor         8    8[COMRAM] unsigned long long 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  quotient        8   16[COMRAM] unsigned long long 
  5630 ;;  counter         1   24[COMRAM] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  8    0[COMRAM] unsigned long long 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5640 ;;      Params:        16       0       0       0       0       0       0
  5641 ;;      Locals:         9       0       0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0
  5643 ;;      Totals:        25       0       0       0       0       0       0
  5644 ;;Total ram usage:       25 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    2
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_utoa
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text15
  5655  003222                     __ptext15:
  5656                           	opt callstack 0
  5657  003222                     ___lodiv:
  5658                           	opt callstack 0
  5659  003222  FFFF               	dw	65535	; assembler added errata NOP
  5660                           
  5661                           ;incstack = 0
  5662  003224  EE20  F011         	lfsr	2,___lodiv@quotient
  5663  003228  0E07               	movlw	7
  5664  00322A                     u3081:
  5665  00322A  6ADE               	clrf	postinc2,c
  5666  00322C  06E8               	decf	wreg,f,c
  5667  00322E  E2FD               	bc	u3081
  5668  003230  5009               	movf	___lodiv@divisor,w,c
  5669  003232  100A               	iorwf	___lodiv@divisor+1,w,c
  5670  003234  100B               	iorwf	___lodiv@divisor+2,w,c
  5671  003236  100C               	iorwf	___lodiv@divisor+3,w,c
  5672  003238  100D               	iorwf	___lodiv@divisor+4,w,c
  5673  00323A  100E               	iorwf	___lodiv@divisor+5,w,c
  5674  00323C  100F               	iorwf	___lodiv@divisor+6,w,c
  5675  00323E  1010               	iorwf	___lodiv@divisor+7,w,c
  5676  003240  B4D8               	btfsc	status,2,c
  5677  003242  D04A               	goto	l1022
  5678  003244  0E01               	movlw	1
  5679  003246  6E19               	movwf	___lodiv@counter,c
  5680  003248  D00B               	goto	l3578
  5681  00324A                     l3576:
  5682  00324A  FFFF               	dw	65535	; assembler added errata NOP
  5683  00324C  90D8               	bcf	status,0,c
  5684  00324E  3609               	rlcf	___lodiv@divisor,f,c
  5685  003250  360A               	rlcf	___lodiv@divisor+1,f,c
  5686  003252  360B               	rlcf	___lodiv@divisor+2,f,c
  5687  003254  360C               	rlcf	___lodiv@divisor+3,f,c
  5688  003256  360D               	rlcf	___lodiv@divisor+4,f,c
  5689  003258  360E               	rlcf	___lodiv@divisor+5,f,c
  5690  00325A  360F               	rlcf	___lodiv@divisor+6,f,c
  5691  00325C  3610               	rlcf	___lodiv@divisor+7,f,c
  5692  00325E  2A19               	incf	___lodiv@counter,f,c
  5693  003260                     l3578:
  5694  003260  FFFF               	dw	65535	; assembler added errata NOP
  5695  003262  AE10               	btfss	___lodiv@divisor+7,7,c
  5696  003264  D7F2               	goto	l3576
  5697  003266                     u3100:
  5698  003266  FFFF               	dw	65535	; assembler added errata NOP
  5699  003268  90D8               	bcf	status,0,c
  5700  00326A  3611               	rlcf	___lodiv@quotient,f,c
  5701  00326C  3612               	rlcf	___lodiv@quotient+1,f,c
  5702  00326E  3613               	rlcf	___lodiv@quotient+2,f,c
  5703  003270  3614               	rlcf	___lodiv@quotient+3,f,c
  5704  003272  3615               	rlcf	___lodiv@quotient+4,f,c
  5705  003274  3616               	rlcf	___lodiv@quotient+5,f,c
  5706  003276  3617               	rlcf	___lodiv@quotient+6,f,c
  5707  003278  3618               	rlcf	___lodiv@quotient+7,f,c
  5708  00327A  5009               	movf	___lodiv@divisor,w,c
  5709  00327C  5C01               	subwf	___lodiv@dividend,w,c
  5710  00327E  500A               	movf	___lodiv@divisor+1,w,c
  5711  003280  5802               	subwfb	___lodiv@dividend+1,w,c
  5712  003282  500B               	movf	___lodiv@divisor+2,w,c
  5713  003284  5803               	subwfb	___lodiv@dividend+2,w,c
  5714  003286  500C               	movf	___lodiv@divisor+3,w,c
  5715  003288  5804               	subwfb	___lodiv@dividend+3,w,c
  5716  00328A  500D               	movf	___lodiv@divisor+4,w,c
  5717  00328C  5805               	subwfb	___lodiv@dividend+4,w,c
  5718  00328E  500E               	movf	___lodiv@divisor+5,w,c
  5719  003290  5806               	subwfb	___lodiv@dividend+5,w,c
  5720  003292  500F               	movf	___lodiv@divisor+6,w,c
  5721  003294  5807               	subwfb	___lodiv@dividend+6,w,c
  5722  003296  5010               	movf	___lodiv@divisor+7,w,c
  5723  003298  5808               	subwfb	___lodiv@dividend+7,w,c
  5724  00329A  A0D8               	btfss	status,0,c
  5725  00329C  D011               	goto	l3588
  5726  00329E  5009               	movf	___lodiv@divisor,w,c
  5727  0032A0  5E01               	subwf	___lodiv@dividend,f,c
  5728  0032A2  500A               	movf	___lodiv@divisor+1,w,c
  5729  0032A4  5A02               	subwfb	___lodiv@dividend+1,f,c
  5730  0032A6  500B               	movf	___lodiv@divisor+2,w,c
  5731  0032A8  5A03               	subwfb	___lodiv@dividend+2,f,c
  5732  0032AA  500C               	movf	___lodiv@divisor+3,w,c
  5733  0032AC  5A04               	subwfb	___lodiv@dividend+3,f,c
  5734  0032AE  500D               	movf	___lodiv@divisor+4,w,c
  5735  0032B0  5A05               	subwfb	___lodiv@dividend+4,f,c
  5736  0032B2  500E               	movf	___lodiv@divisor+5,w,c
  5737  0032B4  5A06               	subwfb	___lodiv@dividend+5,f,c
  5738  0032B6  500F               	movf	___lodiv@divisor+6,w,c
  5739  0032B8  5A07               	subwfb	___lodiv@dividend+6,f,c
  5740  0032BA  5010               	movf	___lodiv@divisor+7,w,c
  5741  0032BC  5A08               	subwfb	___lodiv@dividend+7,f,c
  5742  0032BE  8011               	bsf	___lodiv@quotient,0,c
  5743  0032C0                     l3588:
  5744  0032C0  FFFF               	dw	65535	; assembler added errata NOP
  5745  0032C2  90D8               	bcf	status,0,c
  5746  0032C4  3210               	rrcf	___lodiv@divisor+7,f,c
  5747  0032C6  320F               	rrcf	___lodiv@divisor+6,f,c
  5748  0032C8  320E               	rrcf	___lodiv@divisor+5,f,c
  5749  0032CA  320D               	rrcf	___lodiv@divisor+4,f,c
  5750  0032CC  320C               	rrcf	___lodiv@divisor+3,f,c
  5751  0032CE  320B               	rrcf	___lodiv@divisor+2,f,c
  5752  0032D0  320A               	rrcf	___lodiv@divisor+1,f,c
  5753  0032D2  3209               	rrcf	___lodiv@divisor,f,c
  5754  0032D4  2E19               	decfsz	___lodiv@counter,f,c
  5755  0032D6  D7C7               	goto	u3100
  5756  0032D8                     l1022:
  5757  0032D8  FFFF               	dw	65535	; assembler added errata NOP
  5758  0032DA  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5759  0032DE  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5760  0032E2  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5761  0032E6  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5762  0032EA  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5763  0032EE  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5764  0032F2  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5765  0032F6  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5766  0032FA  0012               	return		;funcret
  5767  0032FC  FFFF               	dw	65535	; errata NOP
  5768  0032FE                     __end_of___lodiv:
  5769                           	opt callstack 0
  5770                           
  5771 ;; *************** function _strncmp *****************
  5772 ;; Defined at:
  5773 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5776 ;;		 -> STR_2(3), STR_1(4), 
  5777 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5778 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  5779 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  5780 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  5781 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  5782 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  5783 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  5784 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  5785 ;;  n               2    4[COMRAM] unsigned int 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5788 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  5789 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  5790 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  5791 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  5792 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  5793 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  5794 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  5795 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5796 ;;		 -> STR_2(3), STR_1(4), 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  2    0[COMRAM] int 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5806 ;;      Params:         6       0       0       0       0       0       0
  5807 ;;      Locals:         4       0       0       0       0       0       0
  5808 ;;      Temps:          1       0       0       0       0       0       0
  5809 ;;      Totals:        11       0       0       0       0       0       0
  5810 ;;Total ram usage:       11 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    2
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_vfpfcnvrt
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text16
  5821  00349C                     __ptext16:
  5822                           	opt callstack 0
  5823  00349C                     _strncmp:
  5824                           	opt callstack 0
  5825  00349C  FFFF               	dw	65535	; assembler added errata NOP
  5826                           
  5827                           ;incstack = 0
  5828  00349E  C001  F008         	movff	strncmp@_l,strncmp@l
  5829  0034A2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5830  0034A6  C003  F00A         	movff	strncmp@_r,strncmp@r
  5831  0034AA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5832  0034AE  0605               	decf	strncmp@n,f,c
  5833  0034B0  A0D8               	btfss	status,0,c
  5834  0034B2  0606               	decf	strncmp@n+1,f,c
  5835  0034B4  2805               	incf	strncmp@n,w,c
  5836  0034B6  E110               	bnz	l3938
  5837  0034B8  2806               	incf	strncmp@n+1,w,c
  5838  0034BA  A4D8               	btfss	status,2,c
  5839  0034BC  D00D               	goto	l3938
  5840  0034BE  0E00               	movlw	0
  5841  0034C0  6E02               	movwf	?_strncmp+1,c
  5842  0034C2  0E00               	movlw	0
  5843  0034C4  6E01               	movwf	?_strncmp,c
  5844  0034C6  D048               	goto	l1390
  5845  0034C8                     l3936:
  5846  0034C8  FFFF               	dw	65535	; assembler added errata NOP
  5847  0034CA  4A08               	infsnz	strncmp@l,f,c
  5848  0034CC  2A09               	incf	strncmp@l+1,f,c
  5849  0034CE  4A0A               	infsnz	strncmp@r,f,c
  5850  0034D0  2A0B               	incf	strncmp@r+1,f,c
  5851  0034D2  0605               	decf	strncmp@n,f,c
  5852  0034D4  A0D8               	btfss	status,0,c
  5853  0034D6  0606               	decf	strncmp@n+1,f,c
  5854  0034D8                     l3938:
  5855  0034D8  FFFF               	dw	65535	; assembler added errata NOP
  5856  0034DA  C008  FFF6         	movff	strncmp@l,tblptrl
  5857  0034DE  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5858  0034E2                     	if	0	;tblptru may be non-zero
  5859  0034E2                     	endif
  5860  0034E2                     	if	0	;tblptru may be non-zero
  5861  0034E2                     	endif
  5862  0034E2  0008               	tblrd		*
  5863  0034E4  FFFF               	dw	65535	; errata NOP
  5864  0034E6  50F5               	movf	tablat,w,c
  5865  0034E8  0900               	iorlw	0
  5866  0034EA  B4D8               	btfsc	status,2,c
  5867  0034EC  D020               	goto	u3870
  5868  0034EE  C00A  FFF6         	movff	strncmp@r,tblptrl
  5869  0034F2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5870  0034F6                     	if	0	;tblptru may be non-zero
  5871  0034F6                     	endif
  5872  0034F6                     	if	0	;tblptru may be non-zero
  5873  0034F6                     	endif
  5874  0034F6  0008               	tblrd		*
  5875  0034F8  FFFF               	dw	65535	; errata NOP
  5876  0034FA  50F5               	movf	tablat,w,c
  5877  0034FC  0900               	iorlw	0
  5878  0034FE  B4D8               	btfsc	status,2,c
  5879  003500  D016               	goto	u3870
  5880  003502  5005               	movf	strncmp@n,w,c
  5881  003504  1006               	iorwf	strncmp@n+1,w,c
  5882  003506  B4D8               	btfsc	status,2,c
  5883  003508  D012               	goto	u3870
  5884  00350A  C008  FFF6         	movff	strncmp@l,tblptrl
  5885  00350E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5886  003512                     	if	0	;tblptru may be non-zero
  5887  003512                     	endif
  5888  003512                     	if	0	;tblptru may be non-zero
  5889  003512                     	endif
  5890  003512  0008               	tblrd		*
  5891  003514  FFFF               	dw	65535	; errata NOP
  5892  003516  CFF5 F007          	movff	tablat,??_strncmp
  5893  00351A  C00A  FFF6         	movff	strncmp@r,tblptrl
  5894  00351E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5895  003522                     	if	0	;tblptru may be non-zero
  5896  003522                     	endif
  5897  003522                     	if	0	;tblptru may be non-zero
  5898  003522                     	endif
  5899  003522  0008               	tblrd		*
  5900  003524  FFFF               	dw	65535	; errata NOP
  5901  003526  50F5               	movf	tablat,w,c
  5902  003528  1807               	xorwf	??_strncmp,w,c
  5903  00352A  B4D8               	btfsc	status,2,c
  5904  00352C  D7CD               	goto	l3936
  5905  00352E                     u3870:
  5906  00352E  FFFF               	dw	65535	; assembler added errata NOP
  5907  003530  C008  FFF6         	movff	strncmp@l,tblptrl
  5908  003534  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5909  003538                     	if	0	;tblptru may be non-zero
  5910  003538                     	endif
  5911  003538                     	if	0	;tblptru may be non-zero
  5912  003538                     	endif
  5913  003538  0008               	tblrd		*
  5914  00353A  FFFF               	dw	65535	; errata NOP
  5915  00353C  CFF5 F007          	movff	tablat,??_strncmp
  5916  003540  C00A  FFF6         	movff	strncmp@r,tblptrl
  5917  003544  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5918  003548                     	if	0	;tblptru may be non-zero
  5919  003548                     	endif
  5920  003548                     	if	0	;tblptru may be non-zero
  5921  003548                     	endif
  5922  003548  0008               	tblrd		*
  5923  00354A  FFFF               	dw	65535	; errata NOP
  5924  00354C  50F5               	movf	tablat,w,c
  5925  00354E  5C07               	subwf	??_strncmp,w,c
  5926  003550  6E01               	movwf	?_strncmp,c
  5927  003552  6A02               	clrf	?_strncmp+1,c
  5928  003554  A0D8               	btfss	status,0,c
  5929  003556  0602               	decf	?_strncmp+1,f,c
  5930  003558                     l1390:
  5931  003558  FFFF               	dw	65535	; assembler added errata NOP
  5932  00355A  0012               	return		;funcret
  5933  00355C  FFFF               	dw	65535	; errata NOP
  5934  00355E                     __end_of_strncmp:
  5935                           	opt callstack 0
  5936                           
  5937 ;; *************** function _stoa *****************
  5938 ;; Defined at:
  5939 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5942 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5943 ;;  s               2   11[COMRAM] PTR unsigned char 
  5944 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5947 ;;  l               2   29[COMRAM] int 
  5948 ;;  p               2   27[COMRAM] int 
  5949 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5950 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5951 ;;  w               2   23[COMRAM] int 
  5952 ;;  i               2   21[COMRAM] int 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  2    9[COMRAM] int 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5962 ;;      Params:         4       0       0       0       0       0       0
  5963 ;;      Locals:        17       0       0       0       0       0       0
  5964 ;;      Temps:          1       0       0       0       0       0       0
  5965 ;;      Totals:        22       0       0       0       0       0       0
  5966 ;;Total ram usage:       22 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    4
  5969 ;; This function calls:
  5970 ;;		_fputc
  5971 ;;		_strlen
  5972 ;; This function is called by:
  5973 ;;		_vfpfcnvrt
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text17
  5978  002FA6                     __ptext17:
  5979                           	opt callstack 0
  5980  002FA6                     _stoa:
  5981                           	opt callstack 0
  5982  002FA6  FFFF               	dw	65535	; assembler added errata NOP
  5983                           
  5984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5985                           
  5986                           ;incstack = 0
  5987  002FA8  EE20  F0F9         	lfsr	2,stoa@F1152
  5988  002FAC  EE10  F00F         	lfsr	1,stoa@nuls
  5989  002FB0  0E06               	movlw	6
  5990  002FB2                     u3431:
  5991  002FB2  CFDB FFE3          	movff	plusw2,plusw1
  5992  002FB6  06E8               	decf	wreg,f,c
  5993  002FB8  E2FC               	bc	u3431
  5994                           
  5995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5996  002FBA  C00C  F01A         	movff	stoa@s,stoa@cp
  5997  002FBE  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5998                           
  5999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6000  002FC2  501A               	movf	stoa@cp,w,c
  6001  002FC4  101B               	iorwf	stoa@cp+1,w,c
  6002  002FC6  A4D8               	btfss	status,2,c
  6003  002FC8  D004               	goto	l3752
  6004                           
  6005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6006  002FCA  0E0F               	movlw	low stoa@nuls
  6007  002FCC  6E1A               	movwf	stoa@cp,c
  6008  002FCE  0E00               	movlw	high stoa@nuls
  6009  002FD0  6E1B               	movwf	stoa@cp+1,c
  6010  002FD2                     l3752:
  6011  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  6012                           
  6013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6014  002FD4  C01A  F001         	movff	stoa@cp,strlen@s
  6015  002FD8  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  6016  002FDC  EC9E  F01E         	call	_strlen	;wreg free
  6017  002FE0  C001  F01E         	movff	?_strlen,stoa@l
  6018  002FE4  C002  F01F         	movff	?_strlen+1,stoa@l+1
  6019                           
  6020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6021  002FE8  C0D2  F01C         	movff	_prec,stoa@p
  6022  002FEC  C0D3  F01D         	movff	_prec+1,stoa@p+1
  6023                           
  6024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6025  002FF0  BE1D               	btfsc	stoa@p+1,7,c
  6026  002FF2  D00E               	goto	l431
  6027  002FF4  501E               	movf	stoa@l,w,c
  6028  002FF6  5C1C               	subwf	stoa@p,w,c
  6029  002FF8  501D               	movf	stoa@p+1,w,c
  6030  002FFA  0A80               	xorlw	128
  6031  002FFC  6E0E               	movwf	??_stoa& (0+255),c
  6032  002FFE  501F               	movf	stoa@l+1,w,c
  6033  003000  0A80               	xorlw	128
  6034  003002  580E               	subwfb	??_stoa& (0+255),w,c
  6035  003004  B0D8               	btfsc	status,0,c
  6036  003006  D004               	goto	l431
  6037  003008  C01C  F01E         	movff	stoa@p,stoa@l
  6038  00300C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  6039  003010                     l431:
  6040  003010  FFFF               	dw	65535	; assembler added errata NOP
  6041                           
  6042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6043  003012  C01E  F01C         	movff	stoa@l,stoa@p
  6044  003016  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  6045                           
  6046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6047  00301A  C0D0  F018         	movff	_width,stoa@w
  6048  00301E  C0D1  F019         	movff	_width+1,stoa@w+1
  6049                           
  6050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6051  003022  0100               	movlb	0	; () banked
  6052  003024  A1D4               	btfss	_flags& (0+255),0,b
  6053  003026  D00E               	goto	l3766
  6054  003028  D018               	goto	u3480
  6055  00302A                     l3762:
  6056  00302A  FFFF               	dw	65535	; assembler added errata NOP
  6057                           
  6058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6059  00302C  0E00               	movlw	0
  6060  00302E  6E02               	movwf	fputc@c+1,c
  6061  003030  0E20               	movlw	32
  6062  003032  6E01               	movwf	fputc@c,c
  6063  003034  C00A  F003         	movff	stoa@fp,fputc@fp
  6064  003038  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6065  00303C  EC0D  F01B         	call	_fputc	;wreg free
  6066                           
  6067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6068  003040  4A1E               	infsnz	stoa@l,f,c
  6069  003042  2A1F               	incf	stoa@l+1,f,c
  6070  003044                     l3766:
  6071  003044  FFFF               	dw	65535	; assembler added errata NOP
  6072                           
  6073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6074  003046  5018               	movf	stoa@w,w,c
  6075  003048  5C1E               	subwf	stoa@l,w,c
  6076  00304A  501F               	movf	stoa@l+1,w,c
  6077  00304C  0A80               	xorlw	128
  6078  00304E  6E0E               	movwf	??_stoa& (0+255),c
  6079  003050  5019               	movf	stoa@w+1,w,c
  6080  003052  0A80               	xorlw	128
  6081  003054  580E               	subwfb	??_stoa& (0+255),w,c
  6082  003056  A0D8               	btfss	status,0,c
  6083  003058  D7E8               	goto	l3762
  6084  00305A                     u3480:
  6085  00305A  FFFF               	dw	65535	; assembler added errata NOP
  6086                           
  6087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6088  00305C  0E00               	movlw	0
  6089  00305E  6E17               	movwf	stoa@i+1,c
  6090  003060  0E00               	movlw	0
  6091  003062  6E16               	movwf	stoa@i,c
  6092                           
  6093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6094  003064  D014               	goto	l3776
  6095  003066                     l3770:
  6096  003066  FFFF               	dw	65535	; assembler added errata NOP
  6097                           
  6098                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6099  003068  C01A  FFD9         	movff	stoa@cp,fsr2l
  6100  00306C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  6101  003070  50DF               	movf	indf2,w,c
  6102  003072  6E0E               	movwf	??_stoa& (0+255),c
  6103  003074  500E               	movf	??_stoa,w,c
  6104  003076  6E01               	movwf	fputc@c,c
  6105  003078  6A02               	clrf	fputc@c+1,c
  6106  00307A  C00A  F003         	movff	stoa@fp,fputc@fp
  6107  00307E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6108  003082  EC0D  F01B         	call	_fputc	;wreg free
  6109                           
  6110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6111  003086  4A1A               	infsnz	stoa@cp,f,c
  6112  003088  2A1B               	incf	stoa@cp+1,f,c
  6113                           
  6114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6115  00308A  4A16               	infsnz	stoa@i,f,c
  6116  00308C  2A17               	incf	stoa@i+1,f,c
  6117  00308E                     l3776:
  6118  00308E  FFFF               	dw	65535	; assembler added errata NOP
  6119                           
  6120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6121  003090  501C               	movf	stoa@p,w,c
  6122  003092  5C16               	subwf	stoa@i,w,c
  6123  003094  5017               	movf	stoa@i+1,w,c
  6124  003096  0A80               	xorlw	128
  6125  003098  6E0E               	movwf	??_stoa& (0+255),c
  6126  00309A  501D               	movf	stoa@p+1,w,c
  6127  00309C  0A80               	xorlw	128
  6128  00309E  580E               	subwfb	??_stoa& (0+255),w,c
  6129  0030A0  A0D8               	btfss	status,0,c
  6130  0030A2  D7E1               	goto	l3770
  6131                           
  6132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6133  0030A4  0100               	movlb	0	; () banked
  6134  0030A6  B1D4               	btfsc	_flags& (0+255),0,b
  6135  0030A8  D00E               	goto	l3784
  6136  0030AA  D018               	goto	u3510
  6137  0030AC                     l3780:
  6138  0030AC  FFFF               	dw	65535	; assembler added errata NOP
  6139                           
  6140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6141  0030AE  0E00               	movlw	0
  6142  0030B0  6E02               	movwf	fputc@c+1,c
  6143  0030B2  0E20               	movlw	32
  6144  0030B4  6E01               	movwf	fputc@c,c
  6145  0030B6  C00A  F003         	movff	stoa@fp,fputc@fp
  6146  0030BA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6147  0030BE  EC0D  F01B         	call	_fputc	;wreg free
  6148                           
  6149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6150  0030C2  4A1E               	infsnz	stoa@l,f,c
  6151  0030C4  2A1F               	incf	stoa@l+1,f,c
  6152  0030C6                     l3784:
  6153  0030C6  FFFF               	dw	65535	; assembler added errata NOP
  6154                           
  6155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6156  0030C8  5018               	movf	stoa@w,w,c
  6157  0030CA  5C1E               	subwf	stoa@l,w,c
  6158  0030CC  501F               	movf	stoa@l+1,w,c
  6159  0030CE  0A80               	xorlw	128
  6160  0030D0  6E0E               	movwf	??_stoa& (0+255),c
  6161  0030D2  5019               	movf	stoa@w+1,w,c
  6162  0030D4  0A80               	xorlw	128
  6163  0030D6  580E               	subwfb	??_stoa& (0+255),w,c
  6164  0030D8  A0D8               	btfss	status,0,c
  6165  0030DA  D7E8               	goto	l3780
  6166  0030DC                     u3510:
  6167  0030DC  FFFF               	dw	65535	; assembler added errata NOP
  6168                           
  6169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  6170                           
  6171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  6172  0030DE  C01E  F00A         	movff	stoa@l,?_stoa
  6173  0030E2  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  6174  0030E6  0012               	return		;funcret
  6175  0030E8  FFFF               	dw	65535	; errata NOP
  6176  0030EA                     __end_of_stoa:
  6177                           	opt callstack 0
  6178                           
  6179 ;; *************** function _otoa *****************
  6180 ;; Defined at:
  6181 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6184 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6185 ;;  d               8   29[COMRAM] unsigned long long 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  n               8   51[COMRAM] unsigned long long 
  6188 ;;  i               2   59[COMRAM] int 
  6189 ;;  w               2   49[COMRAM] int 
  6190 ;;  t               2   47[COMRAM] int 
  6191 ;;  p               2   45[COMRAM] int 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2   27[COMRAM] int 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6201 ;;      Params:        10       0       0       0       0       0       0
  6202 ;;      Locals:        16       0       0       0       0       0       0
  6203 ;;      Temps:          8       0       0       0       0       0       0
  6204 ;;      Totals:        34       0       0       0       0       0       0
  6205 ;;Total ram usage:       34 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    6
  6208 ;; This function calls:
  6209 ;;		_pad
  6210 ;; This function is called by:
  6211 ;;		_vfpfcnvrt
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text18
  6216  0028A2                     __ptext18:
  6217                           	opt callstack 0
  6218  0028A2                     _otoa:
  6219                           	opt callstack 0
  6220  0028A2  FFFF               	dw	65535	; assembler added errata NOP
  6221                           
  6222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  6223                           
  6224                           ;incstack = 0
  6225  0028A4  0100               	movlb	0	; () banked
  6226  0028A6  AFD3               	btfss	(_prec+1)& (0+255),7,b
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  6230  0028A8  93D4               	bcf	_flags& (0+255),1,b
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  6234  0028AA  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  6235  0028AC  D005               	goto	u3340
  6236  0028AE  51D3               	movf	(_prec+1)& (0+255),w,b
  6237  0028B0  E109               	bnz	l411
  6238  0028B2  05D2               	decf	_prec& (0+255),w,b
  6239  0028B4  B0D8               	btfsc	status,0,c
  6240  0028B6  D006               	goto	l411
  6241  0028B8                     u3340:
  6242  0028B8  FFFF               	dw	65535	; assembler added errata NOP
  6243                           
  6244                           ; BSR set to: 0
  6245  0028BA  0E00               	movlw	0
  6246  0028BC  6E2F               	movwf	otoa@p+1,c
  6247  0028BE  0E01               	movlw	1
  6248  0028C0  6E2E               	movwf	otoa@p,c
  6249  0028C2  D005               	goto	l413
  6250  0028C4                     l411:
  6251  0028C4  FFFF               	dw	65535	; assembler added errata NOP
  6252                           
  6253                           ; BSR set to: 0
  6254  0028C6  C0D2  F02E         	movff	_prec,otoa@p
  6255  0028CA  C0D3  F02F         	movff	_prec+1,otoa@p+1
  6256  0028CE                     l413:
  6257  0028CE  FFFF               	dw	65535	; assembler added errata NOP
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  6261  0028D0  C0D0  F032         	movff	_width,otoa@w
  6262  0028D4  C0D1  F033         	movff	_width+1,otoa@w+1
  6263                           
  6264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  6265  0028D8  C01E  F034         	movff	otoa@d,otoa@n
  6266  0028DC  C01F  F035         	movff	otoa@d+1,otoa@n+1
  6267  0028E0  C020  F036         	movff	otoa@d+2,otoa@n+2
  6268  0028E4  C021  F037         	movff	otoa@d+3,otoa@n+3
  6269  0028E8  C022  F038         	movff	otoa@d+4,otoa@n+4
  6270  0028EC  C023  F039         	movff	otoa@d+5,otoa@n+5
  6271  0028F0  C024  F03A         	movff	otoa@d+6,otoa@n+6
  6272  0028F4  C025  F03B         	movff	otoa@d+7,otoa@n+7
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  6276  0028F8  0E00               	movlw	0
  6277  0028FA  6E3D               	movwf	otoa@i+1,c
  6278  0028FC  0E1F               	movlw	31
  6279  0028FE  6E3C               	movwf	otoa@i,c
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  6283  002900  0E00               	movlw	0
  6284  002902  6FF8               	movwf	(_dbuf+31)& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  6288  002904  0E00               	movlw	0
  6289  002906  6E31               	movwf	otoa@t+1,c
  6290  002908  0E00               	movlw	0
  6291  00290A  6E30               	movwf	otoa@t,c
  6292                           
  6293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6294  00290C  D046               	goto	l3722
  6295  00290E                     l3710:
  6296  00290E  FFFF               	dw	65535	; assembler added errata NOP
  6297                           
  6298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  6299  002910  063C               	decf	otoa@i,f,c
  6300  002912  A0D8               	btfss	status,0,c
  6301  002914  063D               	decf	otoa@i+1,f,c
  6302                           
  6303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  6304  002916  0E07               	movlw	7
  6305  002918  1434               	andwf	otoa@n,w,c
  6306  00291A  6E30               	movwf	otoa@t,c
  6307  00291C  6A31               	clrf	otoa@t+1,c
  6308                           
  6309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  6310  00291E  0ED9               	movlw	low _dbuf
  6311  002920  243C               	addwf	otoa@i,w,c
  6312  002922  6ED9               	movwf	fsr2l,c
  6313  002924  0E00               	movlw	high _dbuf
  6314  002926  203D               	addwfc	otoa@i+1,w,c
  6315  002928  6EDA               	movwf	fsr2h,c
  6316  00292A  5030               	movf	otoa@t,w,c
  6317  00292C  0F30               	addlw	48
  6318  00292E  6EDF               	movwf	indf2,c
  6319                           
  6320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  6321  002930  062E               	decf	otoa@p,f,c
  6322  002932  A0D8               	btfss	status,0,c
  6323  002934  062F               	decf	otoa@p+1,f,c
  6324                           
  6325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  6326  002936  0632               	decf	otoa@w,f,c
  6327  002938  A0D8               	btfss	status,0,c
  6328  00293A  0633               	decf	otoa@w+1,f,c
  6329                           
  6330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  6331  00293C  C034  F026         	movff	otoa@n,??_otoa
  6332  002940  C035  F027         	movff	otoa@n+1,??_otoa+1
  6333  002944  C036  F028         	movff	otoa@n+2,??_otoa+2
  6334  002948  C037  F029         	movff	otoa@n+3,??_otoa+3
  6335  00294C  C038  F02A         	movff	otoa@n+4,??_otoa+4
  6336  002950  C039  F02B         	movff	otoa@n+5,??_otoa+5
  6337  002954  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  6338  002958  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  6339  00295C  0E04               	movlw	4
  6340  00295E  D00A               	goto	u3350
  6341  002960                     u3355:
  6342  002960  FFFF               	dw	65535	; assembler added errata NOP
  6343  002962  90D8               	bcf	status,0,c
  6344  002964  322D               	rrcf	??_otoa+7,f,c
  6345  002966  322C               	rrcf	??_otoa+6,f,c
  6346  002968  322B               	rrcf	??_otoa+5,f,c
  6347  00296A  322A               	rrcf	??_otoa+4,f,c
  6348  00296C  3229               	rrcf	??_otoa+3,f,c
  6349  00296E  3228               	rrcf	??_otoa+2,f,c
  6350  002970  3227               	rrcf	??_otoa+1,f,c
  6351  002972  3226               	rrcf	??_otoa,f,c
  6352  002974                     u3350:
  6353  002974  FFFF               	dw	65535	; assembler added errata NOP
  6354  002976  2EE8               	decfsz	wreg,f,c
  6355  002978  D7F3               	goto	u3355
  6356  00297A  C026  F034         	movff	??_otoa,otoa@n
  6357  00297E  C027  F035         	movff	??_otoa+1,otoa@n+1
  6358  002982  C028  F036         	movff	??_otoa+2,otoa@n+2
  6359  002986  C029  F037         	movff	??_otoa+3,otoa@n+3
  6360  00298A  C02A  F038         	movff	??_otoa+4,otoa@n+4
  6361  00298E  C02B  F039         	movff	??_otoa+5,otoa@n+5
  6362  002992  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  6363  002996  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  6364  00299A                     l3722:
  6365  00299A  FFFF               	dw	65535	; assembler added errata NOP
  6366                           
  6367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6368  00299C  BE3D               	btfsc	otoa@i+1,7,c
  6369  00299E  D021               	goto	u3400
  6370  0029A0  503D               	movf	otoa@i+1,w,c
  6371  0029A2  E103               	bnz	u3360
  6372  0029A4  043C               	decf	otoa@i,w,c
  6373  0029A6  A0D8               	btfss	status,0,c
  6374  0029A8  D01C               	goto	u3400
  6375  0029AA                     u3360:
  6376  0029AA  5034               	movf	otoa@n,w,c
  6377  0029AC  1035               	iorwf	otoa@n+1,w,c
  6378  0029AE  1036               	iorwf	otoa@n+2,w,c
  6379  0029B0  1037               	iorwf	otoa@n+3,w,c
  6380  0029B2  1038               	iorwf	otoa@n+4,w,c
  6381  0029B4  1039               	iorwf	otoa@n+5,w,c
  6382  0029B6  103A               	iorwf	otoa@n+6,w,c
  6383  0029B8  103B               	iorwf	otoa@n+7,w,c
  6384  0029BA  A4D8               	btfss	status,2,c
  6385  0029BC  D7A8               	goto	l3710
  6386  0029BE  BE2F               	btfsc	otoa@p+1,7,c
  6387  0029C0  D005               	goto	u3380
  6388  0029C2  502F               	movf	otoa@p+1,w,c
  6389  0029C4  E1A4               	bnz	l3710
  6390  0029C6  042E               	decf	otoa@p,w,c
  6391  0029C8  B0D8               	btfsc	status,0,c
  6392  0029CA  D7A1               	goto	l3710
  6393  0029CC                     u3380:
  6394  0029CC  FFFF               	dw	65535	; assembler added errata NOP
  6395  0029CE  BE33               	btfsc	otoa@w+1,7,c
  6396  0029D0  D008               	goto	u3400
  6397  0029D2  5033               	movf	otoa@w+1,w,c
  6398  0029D4  E103               	bnz	u3390
  6399  0029D6  0432               	decf	otoa@w,w,c
  6400  0029D8  A0D8               	btfss	status,0,c
  6401  0029DA  D003               	goto	u3400
  6402  0029DC                     u3390:
  6403  0029DC  0100               	movlb	0	; () banked
  6404  0029DE  B3D4               	btfsc	_flags& (0+255),1,b
  6405  0029E0  D796               	goto	l3710
  6406  0029E2                     u3400:
  6407  0029E2  FFFF               	dw	65535	; assembler added errata NOP
  6408                           
  6409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  6410  0029E4  0100               	movlb	0	; () banked
  6411  0029E6  A9D4               	btfss	_flags& (0+255),4,b
  6412  0029E8  D012               	goto	l3740
  6413                           
  6414                           ; BSR set to: 0
  6415  0029EA  5030               	movf	otoa@t,w,c
  6416  0029EC  1031               	iorwf	otoa@t+1,w,c
  6417  0029EE  B4D8               	btfsc	status,2,c
  6418  0029F0  D00E               	goto	l3740
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  6422  0029F2  063C               	decf	otoa@i,f,c
  6423  0029F4  A0D8               	btfss	status,0,c
  6424  0029F6  063D               	decf	otoa@i+1,f,c
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  6428  0029F8  0ED9               	movlw	low _dbuf
  6429  0029FA  243C               	addwf	otoa@i,w,c
  6430  0029FC  6ED9               	movwf	fsr2l,c
  6431  0029FE  0E00               	movlw	high _dbuf
  6432  002A00  203D               	addwfc	otoa@i+1,w,c
  6433  002A02  6EDA               	movwf	fsr2h,c
  6434  002A04  0E30               	movlw	48
  6435  002A06  6EDF               	movwf	indf2,c
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  6439  002A08  0632               	decf	otoa@w,f,c
  6440  002A0A  A0D8               	btfss	status,0,c
  6441  002A0C  0633               	decf	otoa@w+1,f,c
  6442  002A0E                     l3740:
  6443  002A0E  FFFF               	dw	65535	; assembler added errata NOP
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  6447  002A10  C01C  F011         	movff	otoa@fp,pad@fp
  6448  002A14  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  6449  002A18  0ED9               	movlw	low _dbuf
  6450  002A1A  243C               	addwf	otoa@i,w,c
  6451  002A1C  6E13               	movwf	pad@buf,c
  6452  002A1E  0E00               	movlw	high _dbuf
  6453  002A20  203D               	addwfc	otoa@i+1,w,c
  6454  002A22  6E14               	movwf	pad@buf+1,c
  6455  002A24  C032  F015         	movff	otoa@w,pad@p
  6456  002A28  C033  F016         	movff	otoa@w+1,pad@p+1
  6457  002A2C  EC63  F01B         	call	_pad	;wreg free
  6458  002A30  C011  F01C         	movff	?_pad,?_otoa
  6459  002A34  C012  F01D         	movff	?_pad+1,?_otoa+1
  6460  002A38  0012               	return		;funcret
  6461  002A3A  FFFF               	dw	65535	; errata NOP
  6462  002A3C                     __end_of_otoa:
  6463                           	opt callstack 0
  6464                           
  6465 ;; *************** function _dtoa *****************
  6466 ;; Defined at:
  6467 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6470 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6471 ;;  d               8   29[COMRAM] long long 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  n               8   53[COMRAM] long long 
  6474 ;;  i               2   61[COMRAM] int 
  6475 ;;  s               2   51[COMRAM] int 
  6476 ;;  w               2   49[COMRAM] int 
  6477 ;;  p               2   47[COMRAM] int 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  2   27[COMRAM] int 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6487 ;;      Params:        10       0       0       0       0       0       0
  6488 ;;      Locals:        18       0       0       0       0       0       0
  6489 ;;      Temps:          8       0       0       0       0       0       0
  6490 ;;      Totals:        36       0       0       0       0       0       0
  6491 ;;Total ram usage:       36 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    6
  6494 ;; This function calls:
  6495 ;;		___aodiv
  6496 ;;		___aomod
  6497 ;;		_abs
  6498 ;;		_pad
  6499 ;; This function is called by:
  6500 ;;		_vfpfcnvrt
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text19
  6505  00221E                     __ptext19:
  6506                           	opt callstack 0
  6507  00221E                     _dtoa:
  6508                           	opt callstack 0
  6509  00221E  FFFF               	dw	65535	; assembler added errata NOP
  6510                           
  6511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6512                           
  6513                           ;incstack = 0
  6514  002220  C01E  F036         	movff	dtoa@d,dtoa@n
  6515  002224  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6516  002228  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6517  00222C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6518  002230  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6519  002234  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6520  002238  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6521  00223C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6522                           
  6523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6524  002240  AE3D               	btfss	dtoa@n+7,7,c
  6525  002242  D002               	goto	u3180
  6526  002244  0E01               	movlw	1
  6527  002246  D002               	goto	u3190
  6528  002248                     u3180:
  6529  002248  FFFF               	dw	65535	; assembler added errata NOP
  6530  00224A  0E00               	movlw	0
  6531  00224C                     u3190:
  6532  00224C  FFFF               	dw	65535	; assembler added errata NOP
  6533  00224E  6E34               	movwf	dtoa@s,c
  6534  002250  6A35               	clrf	dtoa@s+1,c
  6535                           
  6536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6537  002252  5034               	movf	dtoa@s,w,c
  6538  002254  1035               	iorwf	dtoa@s+1,w,c
  6539  002256  B4D8               	btfsc	status,2,c
  6540  002258  D010               	goto	l3640
  6541                           
  6542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6543  00225A  1E3D               	comf	dtoa@n+7,f,c
  6544  00225C  1E3C               	comf	dtoa@n+6,f,c
  6545  00225E  1E3B               	comf	dtoa@n+5,f,c
  6546  002260  1E3A               	comf	dtoa@n+4,f,c
  6547  002262  1E39               	comf	dtoa@n+3,f,c
  6548  002264  1E38               	comf	dtoa@n+2,f,c
  6549  002266  1E37               	comf	dtoa@n+1,f,c
  6550  002268  6C36               	negf	dtoa@n,c
  6551  00226A  0E00               	movlw	0
  6552  00226C  2237               	addwfc	dtoa@n+1,f,c
  6553  00226E  2238               	addwfc	dtoa@n+2,f,c
  6554  002270  2239               	addwfc	dtoa@n+3,f,c
  6555  002272  223A               	addwfc	dtoa@n+4,f,c
  6556  002274  223B               	addwfc	dtoa@n+5,f,c
  6557  002276  223C               	addwfc	dtoa@n+6,f,c
  6558  002278  223D               	addwfc	dtoa@n+7,f,c
  6559  00227A                     l3640:
  6560  00227A  FFFF               	dw	65535	; assembler added errata NOP
  6561                           
  6562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6563  00227C  0100               	movlb	0	; () banked
  6564  00227E  AFD3               	btfss	(_prec+1)& (0+255),7,b
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6568  002280  93D4               	bcf	_flags& (0+255),1,b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6572  002282  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  6573  002284  D005               	goto	u3220
  6574  002286  51D3               	movf	(_prec+1)& (0+255),w,b
  6575  002288  E109               	bnz	l386
  6576  00228A  05D2               	decf	_prec& (0+255),w,b
  6577  00228C  B0D8               	btfsc	status,0,c
  6578  00228E  D006               	goto	l386
  6579  002290                     u3220:
  6580  002290  FFFF               	dw	65535	; assembler added errata NOP
  6581                           
  6582                           ; BSR set to: 0
  6583  002292  0E00               	movlw	0
  6584  002294  6E31               	movwf	dtoa@p+1,c
  6585  002296  0E01               	movlw	1
  6586  002298  6E30               	movwf	dtoa@p,c
  6587  00229A  D005               	goto	l388
  6588  00229C                     l386:
  6589  00229C  FFFF               	dw	65535	; assembler added errata NOP
  6590                           
  6591                           ; BSR set to: 0
  6592  00229E  C0D2  F030         	movff	_prec,dtoa@p
  6593  0022A2  C0D3  F031         	movff	_prec+1,dtoa@p+1
  6594  0022A6                     l388:
  6595  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6599  0022A8  C0D0  F032         	movff	_width,dtoa@w
  6600  0022AC  C0D1  F033         	movff	_width+1,dtoa@w+1
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6604  0022B0  5034               	movf	dtoa@s,w,c
  6605  0022B2  1035               	iorwf	dtoa@s+1,w,c
  6606  0022B4  A4D8               	btfss	status,2,c
  6607  0022B6  D002               	goto	u3240
  6608                           
  6609                           ; BSR set to: 0
  6610  0022B8  A5D4               	btfss	_flags& (0+255),2,b
  6611  0022BA  D004               	goto	l3654
  6612  0022BC                     u3240:
  6613  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  6617  0022BE  0632               	decf	dtoa@w,f,c
  6618  0022C0  A0D8               	btfss	status,0,c
  6619  0022C2  0633               	decf	dtoa@w+1,f,c
  6620  0022C4                     l3654:
  6621  0022C4  FFFF               	dw	65535	; assembler added errata NOP
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6625  0022C6  0E00               	movlw	0
  6626  0022C8  6E3F               	movwf	dtoa@i+1,c
  6627  0022CA  0E1F               	movlw	31
  6628  0022CC  6E3E               	movwf	dtoa@i,c
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6632  0022CE  0E00               	movlw	0
  6633  0022D0  6FF8               	movwf	(_dbuf+31)& (0+255),b
  6634                           
  6635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6636  0022D2  D07D               	goto	l3668
  6637  0022D4                     l3658:
  6638  0022D4  FFFF               	dw	65535	; assembler added errata NOP
  6639                           
  6640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  6641  0022D6  063E               	decf	dtoa@i,f,c
  6642  0022D8  A0D8               	btfss	status,0,c
  6643  0022DA  063F               	decf	dtoa@i+1,f,c
  6644                           
  6645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6646  0022DC  0ED9               	movlw	low _dbuf
  6647  0022DE  243E               	addwf	dtoa@i,w,c
  6648  0022E0  6ED9               	movwf	fsr2l,c
  6649  0022E2  0E00               	movlw	high _dbuf
  6650  0022E4  203F               	addwfc	dtoa@i+1,w,c
  6651  0022E6  6EDA               	movwf	fsr2h,c
  6652  0022E8  C036  F001         	movff	dtoa@n,___aomod@dividend
  6653  0022EC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6654  0022F0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6655  0022F4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6656  0022F8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6657  0022FC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6658  002300  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6659  002304  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6660  002308  0E0A               	movlw	10
  6661  00230A  6E09               	movwf	___aomod@divisor,c
  6662  00230C  0E00               	movlw	0
  6663  00230E  6E0A               	movwf	___aomod@divisor+1,c
  6664  002310  0E00               	movlw	0
  6665  002312  6E0B               	movwf	___aomod@divisor+2,c
  6666  002314  0E00               	movlw	0
  6667  002316  6E0C               	movwf	___aomod@divisor+3,c
  6668  002318  0E00               	movlw	0
  6669  00231A  6E0D               	movwf	___aomod@divisor+4,c
  6670  00231C  0E00               	movlw	0
  6671  00231E  6E0E               	movwf	___aomod@divisor+5,c
  6672  002320  0E00               	movlw	0
  6673  002322  6E0F               	movwf	___aomod@divisor+6,c
  6674  002324  0E00               	movlw	0
  6675  002326  6E10               	movwf	___aomod@divisor+7,c
  6676  002328  EC75  F018         	call	___aomod	;wreg free
  6677  00232C  C001  F026         	movff	?___aomod,??_dtoa
  6678  002330  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6679  002334  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6680  002338  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6681  00233C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6682  002340  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6683  002344  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6684  002348  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6685  00234C  C026  F013         	movff	??_dtoa,abs@a
  6686  002350  C028  F014         	movff	??_dtoa+2,abs@a+1
  6687  002354  EC2C  F01E         	call	_abs	;wreg free
  6688  002358  5013               	movf	?_abs,w,c
  6689  00235A  0F30               	addlw	48
  6690  00235C  6EDF               	movwf	indf2,c
  6691                           
  6692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  6693  00235E  0630               	decf	dtoa@p,f,c
  6694  002360  A0D8               	btfss	status,0,c
  6695  002362  0631               	decf	dtoa@p+1,f,c
  6696                           
  6697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  6698  002364  0632               	decf	dtoa@w,f,c
  6699  002366  A0D8               	btfss	status,0,c
  6700  002368  0633               	decf	dtoa@w+1,f,c
  6701                           
  6702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6703  00236A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6704  00236E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6705  002372  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6706  002376  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6707  00237A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6708  00237E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6709  002382  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6710  002386  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6711  00238A  0E0A               	movlw	10
  6712  00238C  6E09               	movwf	___aodiv@divisor,c
  6713  00238E  0E00               	movlw	0
  6714  002390  6E0A               	movwf	___aodiv@divisor+1,c
  6715  002392  0E00               	movlw	0
  6716  002394  6E0B               	movwf	___aodiv@divisor+2,c
  6717  002396  0E00               	movlw	0
  6718  002398  6E0C               	movwf	___aodiv@divisor+3,c
  6719  00239A  0E00               	movlw	0
  6720  00239C  6E0D               	movwf	___aodiv@divisor+4,c
  6721  00239E  0E00               	movlw	0
  6722  0023A0  6E0E               	movwf	___aodiv@divisor+5,c
  6723  0023A2  0E00               	movlw	0
  6724  0023A4  6E0F               	movwf	___aodiv@divisor+6,c
  6725  0023A6  0E00               	movlw	0
  6726  0023A8  6E10               	movwf	___aodiv@divisor+7,c
  6727  0023AA  ECD1  F015         	call	___aodiv	;wreg free
  6728  0023AE  C001  F036         	movff	?___aodiv,dtoa@n
  6729  0023B2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6730  0023B6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6731  0023BA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6732  0023BE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6733  0023C2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6734  0023C6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6735  0023CA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6736  0023CE                     l3668:
  6737  0023CE  FFFF               	dw	65535	; assembler added errata NOP
  6738                           
  6739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6740  0023D0  BE3F               	btfsc	dtoa@i+1,7,c
  6741  0023D2  D021               	goto	u3290
  6742  0023D4  503F               	movf	dtoa@i+1,w,c
  6743  0023D6  E103               	bnz	u3250
  6744  0023D8  043E               	decf	dtoa@i,w,c
  6745  0023DA  A0D8               	btfss	status,0,c
  6746  0023DC  D01C               	goto	u3290
  6747  0023DE                     u3250:
  6748  0023DE  5036               	movf	dtoa@n,w,c
  6749  0023E0  1037               	iorwf	dtoa@n+1,w,c
  6750  0023E2  1038               	iorwf	dtoa@n+2,w,c
  6751  0023E4  1039               	iorwf	dtoa@n+3,w,c
  6752  0023E6  103A               	iorwf	dtoa@n+4,w,c
  6753  0023E8  103B               	iorwf	dtoa@n+5,w,c
  6754  0023EA  103C               	iorwf	dtoa@n+6,w,c
  6755  0023EC  103D               	iorwf	dtoa@n+7,w,c
  6756  0023EE  A4D8               	btfss	status,2,c
  6757  0023F0  D771               	goto	l3658
  6758  0023F2  BE31               	btfsc	dtoa@p+1,7,c
  6759  0023F4  D005               	goto	u3270
  6760  0023F6  5031               	movf	dtoa@p+1,w,c
  6761  0023F8  E102               	bnz	u3271
  6762  0023FA  0430               	decf	dtoa@p,w,c
  6763  0023FC  B0D8               	btfsc	status,0,c
  6764  0023FE                     u3271:
  6765  0023FE  D76A               	goto	l3658
  6766  002400                     u3270:
  6767  002400  FFFF               	dw	65535	; assembler added errata NOP
  6768  002402  BE33               	btfsc	dtoa@w+1,7,c
  6769  002404  D008               	goto	u3290
  6770  002406  5033               	movf	dtoa@w+1,w,c
  6771  002408  E103               	bnz	u3280
  6772  00240A  0432               	decf	dtoa@w,w,c
  6773  00240C  A0D8               	btfss	status,0,c
  6774  00240E  D003               	goto	u3290
  6775  002410                     u3280:
  6776  002410  0100               	movlb	0	; () banked
  6777  002412  B3D4               	btfsc	_flags& (0+255),1,b
  6778  002414  D75F               	goto	l3658
  6779  002416                     u3290:
  6780  002416  FFFF               	dw	65535	; assembler added errata NOP
  6781                           
  6782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6783  002418  5034               	movf	dtoa@s,w,c
  6784  00241A  1035               	iorwf	dtoa@s+1,w,c
  6785  00241C  A4D8               	btfss	status,2,c
  6786  00241E  D003               	goto	u3310
  6787  002420  0100               	movlb	0	; () banked
  6788  002422  A5D4               	btfss	_flags& (0+255),2,b
  6789  002424  D01A               	goto	l3692
  6790  002426                     u3310:
  6791  002426  FFFF               	dw	65535	; assembler added errata NOP
  6792                           
  6793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  6794  002428  063E               	decf	dtoa@i,f,c
  6795  00242A  A0D8               	btfss	status,0,c
  6796  00242C  063F               	decf	dtoa@i+1,f,c
  6797                           
  6798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6799  00242E  5034               	movf	dtoa@s,w,c
  6800  002430  1035               	iorwf	dtoa@s+1,w,c
  6801  002432  A4D8               	btfss	status,2,c
  6802  002434  D004               	goto	l3688
  6803  002436  0E00               	movlw	0
  6804  002438  6E2F               	movwf	_dtoa$1052+1,c
  6805  00243A  0E2B               	movlw	43
  6806  00243C  D004               	goto	L22
  6807  00243E                     l3688:
  6808  00243E  FFFF               	dw	65535	; assembler added errata NOP
  6809  002440  0E00               	movlw	0
  6810  002442  6E2F               	movwf	_dtoa$1052+1,c
  6811  002444  0E2D               	movlw	45
  6812  002446                     L22:
  6813  002446  FFFF               	dw	65535	; assembler added errata NOP
  6814  002448  6E2E               	movwf	_dtoa$1052,c
  6815  00244A  0ED9               	movlw	low _dbuf
  6816  00244C  243E               	addwf	dtoa@i,w,c
  6817  00244E  6ED9               	movwf	fsr2l,c
  6818  002450  0E00               	movlw	high _dbuf
  6819  002452  203F               	addwfc	dtoa@i+1,w,c
  6820  002454  6EDA               	movwf	fsr2h,c
  6821  002456  C02E  FFDF         	movff	_dtoa$1052,indf2
  6822  00245A                     l3692:
  6823  00245A  FFFF               	dw	65535	; assembler added errata NOP
  6824                           
  6825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6826  00245C  C01C  F011         	movff	dtoa@fp,pad@fp
  6827  002460  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6828  002464  0ED9               	movlw	low _dbuf
  6829  002466  243E               	addwf	dtoa@i,w,c
  6830  002468  6E13               	movwf	pad@buf,c
  6831  00246A  0E00               	movlw	high _dbuf
  6832  00246C  203F               	addwfc	dtoa@i+1,w,c
  6833  00246E  6E14               	movwf	pad@buf+1,c
  6834  002470  C032  F015         	movff	dtoa@w,pad@p
  6835  002474  C033  F016         	movff	dtoa@w+1,pad@p+1
  6836  002478  EC63  F01B         	call	_pad	;wreg free
  6837  00247C  C011  F01C         	movff	?_pad,?_dtoa
  6838  002480  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6839  002484  0012               	return		;funcret
  6840  002486  FFFF               	dw	65535	; errata NOP
  6841  002488                     __end_of_dtoa:
  6842                           	opt callstack 0
  6843                           
  6844 ;; *************** function _abs *****************
  6845 ;; Defined at:
  6846 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  a               2   18[COMRAM] int 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  2   18[COMRAM] int 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6860 ;;      Params:         2       0       0       0       0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0
  6862 ;;      Temps:          2       0       0       0       0       0       0
  6863 ;;      Totals:         4       0       0       0       0       0       0
  6864 ;;Total ram usage:        4 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    2
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_dtoa
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text20
  6875  003C58                     __ptext20:
  6876                           	opt callstack 0
  6877  003C58                     _abs:
  6878                           	opt callstack 0
  6879  003C58  FFFF               	dw	65535	; assembler added errata NOP
  6880                           
  6881                           ;incstack = 0
  6882  003C5A  BE14               	btfsc	abs@a+1,7,c
  6883  003C5C  D005               	goto	u2850
  6884  003C5E  5014               	movf	abs@a+1,w,c
  6885  003C60  E111               	bnz	l1259
  6886  003C62  0413               	decf	abs@a,w,c
  6887  003C64  B0D8               	btfsc	status,0,c
  6888  003C66  D00E               	goto	l1259
  6889  003C68                     u2850:
  6890  003C68  FFFF               	dw	65535	; assembler added errata NOP
  6891  003C6A  C013  F015         	movff	abs@a,??_abs
  6892  003C6E  C014  F016         	movff	abs@a+1,??_abs+1
  6893  003C72  1E15               	comf	??_abs,f,c
  6894  003C74  1E16               	comf	??_abs+1,f,c
  6895  003C76  4A15               	infsnz	??_abs,f,c
  6896  003C78  2A16               	incf	??_abs+1,f,c
  6897  003C7A  C015  F013         	movff	??_abs,?_abs
  6898  003C7E  C016  F014         	movff	??_abs+1,?_abs+1
  6899  003C82  D005               	goto	l1262
  6900  003C84                     l1259:
  6901  003C84  FFFF               	dw	65535	; assembler added errata NOP
  6902  003C86  C013  F013         	movff	abs@a,?_abs
  6903  003C8A  C014  F014         	movff	abs@a+1,?_abs+1
  6904  003C8E                     l1262:
  6905  003C8E  FFFF               	dw	65535	; assembler added errata NOP
  6906  003C90  0012               	return		;funcret
  6907  003C92  FFFF               	dw	65535	; errata NOP
  6908  003C94                     __end_of_abs:
  6909                           	opt callstack 0
  6910                           
  6911 ;; *************** function ___aomod *****************
  6912 ;; Defined at:
  6913 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  dividend        8    0[COMRAM] long long 
  6916 ;;  divisor         8    8[COMRAM] long long 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  sign            1   17[COMRAM] unsigned char 
  6919 ;;  counter         1   16[COMRAM] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  8    0[COMRAM] long long 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6929 ;;      Params:        16       0       0       0       0       0       0
  6930 ;;      Locals:         2       0       0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0
  6932 ;;      Totals:        18       0       0       0       0       0       0
  6933 ;;Total ram usage:       18 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    2
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_dtoa
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text21
  6944  0030EA                     __ptext21:
  6945                           	opt callstack 0
  6946  0030EA                     ___aomod:
  6947                           	opt callstack 0
  6948  0030EA  FFFF               	dw	65535	; assembler added errata NOP
  6949                           
  6950                           ;incstack = 0
  6951  0030EC  0E00               	movlw	0
  6952  0030EE  6E12               	movwf	___aomod@sign,c
  6953  0030F0  AE08               	btfss	___aomod@dividend+7,7,c
  6954  0030F2  D012               	goto	l3542
  6955  0030F4  1E08               	comf	___aomod@dividend+7,f,c
  6956  0030F6  1E07               	comf	___aomod@dividend+6,f,c
  6957  0030F8  1E06               	comf	___aomod@dividend+5,f,c
  6958  0030FA  1E05               	comf	___aomod@dividend+4,f,c
  6959  0030FC  1E04               	comf	___aomod@dividend+3,f,c
  6960  0030FE  1E03               	comf	___aomod@dividend+2,f,c
  6961  003100  1E02               	comf	___aomod@dividend+1,f,c
  6962  003102  6C01               	negf	___aomod@dividend,c
  6963  003104  0E00               	movlw	0
  6964  003106  2202               	addwfc	___aomod@dividend+1,f,c
  6965  003108  2203               	addwfc	___aomod@dividend+2,f,c
  6966  00310A  2204               	addwfc	___aomod@dividend+3,f,c
  6967  00310C  2205               	addwfc	___aomod@dividend+4,f,c
  6968  00310E  2206               	addwfc	___aomod@dividend+5,f,c
  6969  003110  2207               	addwfc	___aomod@dividend+6,f,c
  6970  003112  2208               	addwfc	___aomod@dividend+7,f,c
  6971  003114  0E01               	movlw	1
  6972  003116  6E12               	movwf	___aomod@sign,c
  6973  003118                     l3542:
  6974  003118  FFFF               	dw	65535	; assembler added errata NOP
  6975  00311A  AE10               	btfss	___aomod@divisor+7,7,c
  6976  00311C  D010               	goto	l3546
  6977  00311E  1E10               	comf	___aomod@divisor+7,f,c
  6978  003120  1E0F               	comf	___aomod@divisor+6,f,c
  6979  003122  1E0E               	comf	___aomod@divisor+5,f,c
  6980  003124  1E0D               	comf	___aomod@divisor+4,f,c
  6981  003126  1E0C               	comf	___aomod@divisor+3,f,c
  6982  003128  1E0B               	comf	___aomod@divisor+2,f,c
  6983  00312A  1E0A               	comf	___aomod@divisor+1,f,c
  6984  00312C  6C09               	negf	___aomod@divisor,c
  6985  00312E  0E00               	movlw	0
  6986  003130  220A               	addwfc	___aomod@divisor+1,f,c
  6987  003132  220B               	addwfc	___aomod@divisor+2,f,c
  6988  003134  220C               	addwfc	___aomod@divisor+3,f,c
  6989  003136  220D               	addwfc	___aomod@divisor+4,f,c
  6990  003138  220E               	addwfc	___aomod@divisor+5,f,c
  6991  00313A  220F               	addwfc	___aomod@divisor+6,f,c
  6992  00313C  2210               	addwfc	___aomod@divisor+7,f,c
  6993  00313E                     l3546:
  6994  00313E  FFFF               	dw	65535	; assembler added errata NOP
  6995  003140  5009               	movf	___aomod@divisor,w,c
  6996  003142  100A               	iorwf	___aomod@divisor+1,w,c
  6997  003144  100B               	iorwf	___aomod@divisor+2,w,c
  6998  003146  100C               	iorwf	___aomod@divisor+3,w,c
  6999  003148  100D               	iorwf	___aomod@divisor+4,w,c
  7000  00314A  100E               	iorwf	___aomod@divisor+5,w,c
  7001  00314C  100F               	iorwf	___aomod@divisor+6,w,c
  7002  00314E  1010               	iorwf	___aomod@divisor+7,w,c
  7003  003150  B4D8               	btfsc	status,2,c
  7004  003152  D040               	goto	l3562
  7005  003154  0E01               	movlw	1
  7006  003156  6E11               	movwf	___aomod@counter,c
  7007  003158  D00B               	goto	l3552
  7008  00315A                     l3550:
  7009  00315A  FFFF               	dw	65535	; assembler added errata NOP
  7010  00315C  90D8               	bcf	status,0,c
  7011  00315E  3609               	rlcf	___aomod@divisor,f,c
  7012  003160  360A               	rlcf	___aomod@divisor+1,f,c
  7013  003162  360B               	rlcf	___aomod@divisor+2,f,c
  7014  003164  360C               	rlcf	___aomod@divisor+3,f,c
  7015  003166  360D               	rlcf	___aomod@divisor+4,f,c
  7016  003168  360E               	rlcf	___aomod@divisor+5,f,c
  7017  00316A  360F               	rlcf	___aomod@divisor+6,f,c
  7018  00316C  3610               	rlcf	___aomod@divisor+7,f,c
  7019  00316E  2A11               	incf	___aomod@counter,f,c
  7020  003170                     l3552:
  7021  003170  FFFF               	dw	65535	; assembler added errata NOP
  7022  003172  AE10               	btfss	___aomod@divisor+7,7,c
  7023  003174  D7F2               	goto	l3550
  7024  003176                     u3050:
  7025  003176  FFFF               	dw	65535	; assembler added errata NOP
  7026  003178  5009               	movf	___aomod@divisor,w,c
  7027  00317A  5C01               	subwf	___aomod@dividend,w,c
  7028  00317C  500A               	movf	___aomod@divisor+1,w,c
  7029  00317E  5802               	subwfb	___aomod@dividend+1,w,c
  7030  003180  500B               	movf	___aomod@divisor+2,w,c
  7031  003182  5803               	subwfb	___aomod@dividend+2,w,c
  7032  003184  500C               	movf	___aomod@divisor+3,w,c
  7033  003186  5804               	subwfb	___aomod@dividend+3,w,c
  7034  003188  500D               	movf	___aomod@divisor+4,w,c
  7035  00318A  5805               	subwfb	___aomod@dividend+4,w,c
  7036  00318C  500E               	movf	___aomod@divisor+5,w,c
  7037  00318E  5806               	subwfb	___aomod@dividend+5,w,c
  7038  003190  500F               	movf	___aomod@divisor+6,w,c
  7039  003192  5807               	subwfb	___aomod@dividend+6,w,c
  7040  003194  5010               	movf	___aomod@divisor+7,w,c
  7041  003196  5808               	subwfb	___aomod@dividend+7,w,c
  7042  003198  A0D8               	btfss	status,0,c
  7043  00319A  D010               	goto	l3558
  7044  00319C  5009               	movf	___aomod@divisor,w,c
  7045  00319E  5E01               	subwf	___aomod@dividend,f,c
  7046  0031A0  500A               	movf	___aomod@divisor+1,w,c
  7047  0031A2  5A02               	subwfb	___aomod@dividend+1,f,c
  7048  0031A4  500B               	movf	___aomod@divisor+2,w,c
  7049  0031A6  5A03               	subwfb	___aomod@dividend+2,f,c
  7050  0031A8  500C               	movf	___aomod@divisor+3,w,c
  7051  0031AA  5A04               	subwfb	___aomod@dividend+3,f,c
  7052  0031AC  500D               	movf	___aomod@divisor+4,w,c
  7053  0031AE  5A05               	subwfb	___aomod@dividend+4,f,c
  7054  0031B0  500E               	movf	___aomod@divisor+5,w,c
  7055  0031B2  5A06               	subwfb	___aomod@dividend+5,f,c
  7056  0031B4  500F               	movf	___aomod@divisor+6,w,c
  7057  0031B6  5A07               	subwfb	___aomod@dividend+6,f,c
  7058  0031B8  5010               	movf	___aomod@divisor+7,w,c
  7059  0031BA  5A08               	subwfb	___aomod@dividend+7,f,c
  7060  0031BC                     l3558:
  7061  0031BC  FFFF               	dw	65535	; assembler added errata NOP
  7062  0031BE  90D8               	bcf	status,0,c
  7063  0031C0  3210               	rrcf	___aomod@divisor+7,f,c
  7064  0031C2  320F               	rrcf	___aomod@divisor+6,f,c
  7065  0031C4  320E               	rrcf	___aomod@divisor+5,f,c
  7066  0031C6  320D               	rrcf	___aomod@divisor+4,f,c
  7067  0031C8  320C               	rrcf	___aomod@divisor+3,f,c
  7068  0031CA  320B               	rrcf	___aomod@divisor+2,f,c
  7069  0031CC  320A               	rrcf	___aomod@divisor+1,f,c
  7070  0031CE  3209               	rrcf	___aomod@divisor,f,c
  7071  0031D0  2E11               	decfsz	___aomod@counter,f,c
  7072  0031D2  D7D1               	goto	u3050
  7073  0031D4                     l3562:
  7074  0031D4  FFFF               	dw	65535	; assembler added errata NOP
  7075  0031D6  5012               	movf	___aomod@sign,w,c
  7076  0031D8  B4D8               	btfsc	status,2,c
  7077  0031DA  D010               	goto	l3566
  7078  0031DC  1E08               	comf	___aomod@dividend+7,f,c
  7079  0031DE  1E07               	comf	___aomod@dividend+6,f,c
  7080  0031E0  1E06               	comf	___aomod@dividend+5,f,c
  7081  0031E2  1E05               	comf	___aomod@dividend+4,f,c
  7082  0031E4  1E04               	comf	___aomod@dividend+3,f,c
  7083  0031E6  1E03               	comf	___aomod@dividend+2,f,c
  7084  0031E8  1E02               	comf	___aomod@dividend+1,f,c
  7085  0031EA  6C01               	negf	___aomod@dividend,c
  7086  0031EC  0E00               	movlw	0
  7087  0031EE  2202               	addwfc	___aomod@dividend+1,f,c
  7088  0031F0  2203               	addwfc	___aomod@dividend+2,f,c
  7089  0031F2  2204               	addwfc	___aomod@dividend+3,f,c
  7090  0031F4  2205               	addwfc	___aomod@dividend+4,f,c
  7091  0031F6  2206               	addwfc	___aomod@dividend+5,f,c
  7092  0031F8  2207               	addwfc	___aomod@dividend+6,f,c
  7093  0031FA  2208               	addwfc	___aomod@dividend+7,f,c
  7094  0031FC                     l3566:
  7095  0031FC  FFFF               	dw	65535	; assembler added errata NOP
  7096  0031FE  C001  F001         	movff	___aomod@dividend,?___aomod
  7097  003202  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7098  003206  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7099  00320A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7100  00320E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7101  003212  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7102  003216  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7103  00321A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7104  00321E  0012               	return		;funcret
  7105  003220  FFFF               	dw	65535	; errata NOP
  7106  003222                     __end_of___aomod:
  7107                           	opt callstack 0
  7108                           
  7109 ;; *************** function ___aodiv *****************
  7110 ;; Defined at:
  7111 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  dividend        8    0[COMRAM] long long 
  7114 ;;  divisor         8    8[COMRAM] long long 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  quotient        8   18[COMRAM] long long 
  7117 ;;  sign            1   17[COMRAM] unsigned char 
  7118 ;;  counter         1   16[COMRAM] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  8    0[COMRAM] long long 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7128 ;;      Params:        16       0       0       0       0       0       0
  7129 ;;      Locals:        10       0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0
  7131 ;;      Totals:        26       0       0       0       0       0       0
  7132 ;;Total ram usage:       26 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    2
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_dtoa
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text22
  7143  002BA2                     __ptext22:
  7144                           	opt callstack 0
  7145  002BA2                     ___aodiv:
  7146                           	opt callstack 0
  7147  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  7148                           
  7149                           ;incstack = 0
  7150  002BA4  0E00               	movlw	0
  7151  002BA6  6E12               	movwf	___aodiv@sign,c
  7152  002BA8  AE10               	btfss	___aodiv@divisor+7,7,c
  7153  002BAA  D012               	goto	l3498
  7154  002BAC  1E10               	comf	___aodiv@divisor+7,f,c
  7155  002BAE  1E0F               	comf	___aodiv@divisor+6,f,c
  7156  002BB0  1E0E               	comf	___aodiv@divisor+5,f,c
  7157  002BB2  1E0D               	comf	___aodiv@divisor+4,f,c
  7158  002BB4  1E0C               	comf	___aodiv@divisor+3,f,c
  7159  002BB6  1E0B               	comf	___aodiv@divisor+2,f,c
  7160  002BB8  1E0A               	comf	___aodiv@divisor+1,f,c
  7161  002BBA  6C09               	negf	___aodiv@divisor,c
  7162  002BBC  0E00               	movlw	0
  7163  002BBE  220A               	addwfc	___aodiv@divisor+1,f,c
  7164  002BC0  220B               	addwfc	___aodiv@divisor+2,f,c
  7165  002BC2  220C               	addwfc	___aodiv@divisor+3,f,c
  7166  002BC4  220D               	addwfc	___aodiv@divisor+4,f,c
  7167  002BC6  220E               	addwfc	___aodiv@divisor+5,f,c
  7168  002BC8  220F               	addwfc	___aodiv@divisor+6,f,c
  7169  002BCA  2210               	addwfc	___aodiv@divisor+7,f,c
  7170  002BCC  0E01               	movlw	1
  7171  002BCE  6E12               	movwf	___aodiv@sign,c
  7172  002BD0                     l3498:
  7173  002BD0  FFFF               	dw	65535	; assembler added errata NOP
  7174  002BD2  AE08               	btfss	___aodiv@dividend+7,7,c
  7175  002BD4  D012               	goto	l3504
  7176  002BD6  1E08               	comf	___aodiv@dividend+7,f,c
  7177  002BD8  1E07               	comf	___aodiv@dividend+6,f,c
  7178  002BDA  1E06               	comf	___aodiv@dividend+5,f,c
  7179  002BDC  1E05               	comf	___aodiv@dividend+4,f,c
  7180  002BDE  1E04               	comf	___aodiv@dividend+3,f,c
  7181  002BE0  1E03               	comf	___aodiv@dividend+2,f,c
  7182  002BE2  1E02               	comf	___aodiv@dividend+1,f,c
  7183  002BE4  6C01               	negf	___aodiv@dividend,c
  7184  002BE6  0E00               	movlw	0
  7185  002BE8  2202               	addwfc	___aodiv@dividend+1,f,c
  7186  002BEA  2203               	addwfc	___aodiv@dividend+2,f,c
  7187  002BEC  2204               	addwfc	___aodiv@dividend+3,f,c
  7188  002BEE  2205               	addwfc	___aodiv@dividend+4,f,c
  7189  002BF0  2206               	addwfc	___aodiv@dividend+5,f,c
  7190  002BF2  2207               	addwfc	___aodiv@dividend+6,f,c
  7191  002BF4  2208               	addwfc	___aodiv@dividend+7,f,c
  7192  002BF6  0E01               	movlw	1
  7193  002BF8  1A12               	xorwf	___aodiv@sign,f,c
  7194  002BFA                     l3504:
  7195  002BFA  FFFF               	dw	65535	; assembler added errata NOP
  7196  002BFC  EE20  F013         	lfsr	2,___aodiv@quotient
  7197  002C00  0E07               	movlw	7
  7198  002C02                     u2971:
  7199  002C02  6ADE               	clrf	postinc2,c
  7200  002C04  06E8               	decf	wreg,f,c
  7201  002C06  E2FD               	bc	u2971
  7202  002C08  5009               	movf	___aodiv@divisor,w,c
  7203  002C0A  100A               	iorwf	___aodiv@divisor+1,w,c
  7204  002C0C  100B               	iorwf	___aodiv@divisor+2,w,c
  7205  002C0E  100C               	iorwf	___aodiv@divisor+3,w,c
  7206  002C10  100D               	iorwf	___aodiv@divisor+4,w,c
  7207  002C12  100E               	iorwf	___aodiv@divisor+5,w,c
  7208  002C14  100F               	iorwf	___aodiv@divisor+6,w,c
  7209  002C16  1010               	iorwf	___aodiv@divisor+7,w,c
  7210  002C18  B4D8               	btfsc	status,2,c
  7211  002C1A  D04A               	goto	l3526
  7212  002C1C  0E01               	movlw	1
  7213  002C1E  6E11               	movwf	___aodiv@counter,c
  7214  002C20  D00B               	goto	l3512
  7215  002C22                     l3510:
  7216  002C22  FFFF               	dw	65535	; assembler added errata NOP
  7217  002C24  90D8               	bcf	status,0,c
  7218  002C26  3609               	rlcf	___aodiv@divisor,f,c
  7219  002C28  360A               	rlcf	___aodiv@divisor+1,f,c
  7220  002C2A  360B               	rlcf	___aodiv@divisor+2,f,c
  7221  002C2C  360C               	rlcf	___aodiv@divisor+3,f,c
  7222  002C2E  360D               	rlcf	___aodiv@divisor+4,f,c
  7223  002C30  360E               	rlcf	___aodiv@divisor+5,f,c
  7224  002C32  360F               	rlcf	___aodiv@divisor+6,f,c
  7225  002C34  3610               	rlcf	___aodiv@divisor+7,f,c
  7226  002C36  2A11               	incf	___aodiv@counter,f,c
  7227  002C38                     l3512:
  7228  002C38  FFFF               	dw	65535	; assembler added errata NOP
  7229  002C3A  AE10               	btfss	___aodiv@divisor+7,7,c
  7230  002C3C  D7F2               	goto	l3510
  7231  002C3E                     u2990:
  7232  002C3E  FFFF               	dw	65535	; assembler added errata NOP
  7233  002C40  90D8               	bcf	status,0,c
  7234  002C42  3613               	rlcf	___aodiv@quotient,f,c
  7235  002C44  3614               	rlcf	___aodiv@quotient+1,f,c
  7236  002C46  3615               	rlcf	___aodiv@quotient+2,f,c
  7237  002C48  3616               	rlcf	___aodiv@quotient+3,f,c
  7238  002C4A  3617               	rlcf	___aodiv@quotient+4,f,c
  7239  002C4C  3618               	rlcf	___aodiv@quotient+5,f,c
  7240  002C4E  3619               	rlcf	___aodiv@quotient+6,f,c
  7241  002C50  361A               	rlcf	___aodiv@quotient+7,f,c
  7242  002C52  5009               	movf	___aodiv@divisor,w,c
  7243  002C54  5C01               	subwf	___aodiv@dividend,w,c
  7244  002C56  500A               	movf	___aodiv@divisor+1,w,c
  7245  002C58  5802               	subwfb	___aodiv@dividend+1,w,c
  7246  002C5A  500B               	movf	___aodiv@divisor+2,w,c
  7247  002C5C  5803               	subwfb	___aodiv@dividend+2,w,c
  7248  002C5E  500C               	movf	___aodiv@divisor+3,w,c
  7249  002C60  5804               	subwfb	___aodiv@dividend+3,w,c
  7250  002C62  500D               	movf	___aodiv@divisor+4,w,c
  7251  002C64  5805               	subwfb	___aodiv@dividend+4,w,c
  7252  002C66  500E               	movf	___aodiv@divisor+5,w,c
  7253  002C68  5806               	subwfb	___aodiv@dividend+5,w,c
  7254  002C6A  500F               	movf	___aodiv@divisor+6,w,c
  7255  002C6C  5807               	subwfb	___aodiv@dividend+6,w,c
  7256  002C6E  5010               	movf	___aodiv@divisor+7,w,c
  7257  002C70  5808               	subwfb	___aodiv@dividend+7,w,c
  7258  002C72  A0D8               	btfss	status,0,c
  7259  002C74  D011               	goto	l3522
  7260  002C76  5009               	movf	___aodiv@divisor,w,c
  7261  002C78  5E01               	subwf	___aodiv@dividend,f,c
  7262  002C7A  500A               	movf	___aodiv@divisor+1,w,c
  7263  002C7C  5A02               	subwfb	___aodiv@dividend+1,f,c
  7264  002C7E  500B               	movf	___aodiv@divisor+2,w,c
  7265  002C80  5A03               	subwfb	___aodiv@dividend+2,f,c
  7266  002C82  500C               	movf	___aodiv@divisor+3,w,c
  7267  002C84  5A04               	subwfb	___aodiv@dividend+3,f,c
  7268  002C86  500D               	movf	___aodiv@divisor+4,w,c
  7269  002C88  5A05               	subwfb	___aodiv@dividend+4,f,c
  7270  002C8A  500E               	movf	___aodiv@divisor+5,w,c
  7271  002C8C  5A06               	subwfb	___aodiv@dividend+5,f,c
  7272  002C8E  500F               	movf	___aodiv@divisor+6,w,c
  7273  002C90  5A07               	subwfb	___aodiv@dividend+6,f,c
  7274  002C92  5010               	movf	___aodiv@divisor+7,w,c
  7275  002C94  5A08               	subwfb	___aodiv@dividend+7,f,c
  7276  002C96  8013               	bsf	___aodiv@quotient,0,c
  7277  002C98                     l3522:
  7278  002C98  FFFF               	dw	65535	; assembler added errata NOP
  7279  002C9A  90D8               	bcf	status,0,c
  7280  002C9C  3210               	rrcf	___aodiv@divisor+7,f,c
  7281  002C9E  320F               	rrcf	___aodiv@divisor+6,f,c
  7282  002CA0  320E               	rrcf	___aodiv@divisor+5,f,c
  7283  002CA2  320D               	rrcf	___aodiv@divisor+4,f,c
  7284  002CA4  320C               	rrcf	___aodiv@divisor+3,f,c
  7285  002CA6  320B               	rrcf	___aodiv@divisor+2,f,c
  7286  002CA8  320A               	rrcf	___aodiv@divisor+1,f,c
  7287  002CAA  3209               	rrcf	___aodiv@divisor,f,c
  7288  002CAC  2E11               	decfsz	___aodiv@counter,f,c
  7289  002CAE  D7C7               	goto	u2990
  7290  002CB0                     l3526:
  7291  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  7292  002CB2  5012               	movf	___aodiv@sign,w,c
  7293  002CB4  B4D8               	btfsc	status,2,c
  7294  002CB6  D010               	goto	l3530
  7295  002CB8  1E1A               	comf	___aodiv@quotient+7,f,c
  7296  002CBA  1E19               	comf	___aodiv@quotient+6,f,c
  7297  002CBC  1E18               	comf	___aodiv@quotient+5,f,c
  7298  002CBE  1E17               	comf	___aodiv@quotient+4,f,c
  7299  002CC0  1E16               	comf	___aodiv@quotient+3,f,c
  7300  002CC2  1E15               	comf	___aodiv@quotient+2,f,c
  7301  002CC4  1E14               	comf	___aodiv@quotient+1,f,c
  7302  002CC6  6C13               	negf	___aodiv@quotient,c
  7303  002CC8  0E00               	movlw	0
  7304  002CCA  2214               	addwfc	___aodiv@quotient+1,f,c
  7305  002CCC  2215               	addwfc	___aodiv@quotient+2,f,c
  7306  002CCE  2216               	addwfc	___aodiv@quotient+3,f,c
  7307  002CD0  2217               	addwfc	___aodiv@quotient+4,f,c
  7308  002CD2  2218               	addwfc	___aodiv@quotient+5,f,c
  7309  002CD4  2219               	addwfc	___aodiv@quotient+6,f,c
  7310  002CD6  221A               	addwfc	___aodiv@quotient+7,f,c
  7311  002CD8                     l3530:
  7312  002CD8  FFFF               	dw	65535	; assembler added errata NOP
  7313  002CDA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7314  002CDE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7315  002CE2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7316  002CE6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7317  002CEA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7318  002CEE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7319  002CF2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7320  002CF6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7321  002CFA  0012               	return		;funcret
  7322  002CFC  FFFF               	dw	65535	; errata NOP
  7323  002CFE                     __end_of___aodiv:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _ctoa *****************
  7327 ;; Defined at:
  7328 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7331 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7332 ;;  c               1   29[COMRAM] unsigned char 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  w               2   30[COMRAM] int 
  7335 ;;  l               2    0        int 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2   27[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7345 ;;      Params:         3       0       0       0       0       0       0
  7346 ;;      Locals:         2       0       0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0
  7348 ;;      Totals:         5       0       0       0       0       0       0
  7349 ;;Total ram usage:        5 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    6
  7352 ;; This function calls:
  7353 ;;		_pad
  7354 ;; This function is called by:
  7355 ;;		_vfpfcnvrt
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text23
  7360  003A1E                     __ptext23:
  7361                           	opt callstack 0
  7362  003A1E                     _ctoa:
  7363                           	opt callstack 0
  7364  003A1E  FFFF               	dw	65535	; assembler added errata NOP
  7365                           
  7366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  7367                           
  7368                           ;incstack = 0
  7369  003A20  0100               	movlb	0	; () banked
  7370  003A22  51D0               	movf	_width& (0+255),w,b
  7371  003A24  11D1               	iorwf	(_width+1)& (0+255),w,b
  7372  003A26  A4D8               	btfss	status,2,c
  7373  003A28  D005               	goto	l3624
  7374                           
  7375                           ; BSR set to: 0
  7376  003A2A  C0D0  F01F         	movff	_width,ctoa@w
  7377  003A2E  C0D1  F020         	movff	_width+1,ctoa@w+1
  7378  003A32  D007               	goto	l3626
  7379  003A34                     l3624:
  7380  003A34  FFFF               	dw	65535	; assembler added errata NOP
  7381                           
  7382                           ; BSR set to: 0
  7383  003A36  0EFF               	movlw	255
  7384  003A38  25D0               	addwf	_width& (0+255),w,b
  7385  003A3A  6E1F               	movwf	ctoa@w,c
  7386  003A3C  0EFF               	movlw	255
  7387  003A3E  21D1               	addwfc	(_width+1)& (0+255),w,b
  7388  003A40  6E20               	movwf	ctoa@w+1,c
  7389  003A42                     l3626:
  7390  003A42  FFFF               	dw	65535	; assembler added errata NOP
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  7394  003A44  C01E  F0D9         	movff	ctoa@c,_dbuf
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  7398  003A48  0E00               	movlw	0
  7399  003A4A  6FDA               	movwf	(_dbuf+1)& (0+255),b
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  7403  003A4C  C01C  F011         	movff	ctoa@fp,pad@fp
  7404  003A50  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7405  003A54  0ED9               	movlw	low _dbuf
  7406  003A56  6E13               	movwf	pad@buf,c
  7407  003A58  0E00               	movlw	high _dbuf
  7408  003A5A  6E14               	movwf	pad@buf+1,c
  7409  003A5C  C01F  F015         	movff	ctoa@w,pad@p
  7410  003A60  C020  F016         	movff	ctoa@w+1,pad@p+1
  7411  003A64  EC63  F01B         	call	_pad	;wreg free
  7412  003A68  C011  F01C         	movff	?_pad,?_ctoa
  7413  003A6C  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7414  003A70  0012               	return		;funcret
  7415  003A72  FFFF               	dw	65535	; errata NOP
  7416  003A74                     __end_of_ctoa:
  7417                           	opt callstack 0
  7418                           
  7419 ;; *************** function _pad *****************
  7420 ;; Defined at:
  7421 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7424 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7425 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7426 ;;		 -> dbuf(32), 
  7427 ;;  p               2   20[COMRAM] int 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  w               2   25[COMRAM] int 
  7430 ;;  i               2   23[COMRAM] int 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  2   16[COMRAM] int 
  7433 ;; Registers used:
  7434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7440 ;;      Params:         6       0       0       0       0       0       0
  7441 ;;      Locals:         4       0       0       0       0       0       0
  7442 ;;      Temps:          1       0       0       0       0       0       0
  7443 ;;      Totals:        11       0       0       0       0       0       0
  7444 ;;Total ram usage:       11 bytes
  7445 ;; Hardware stack levels used:    1
  7446 ;; Hardware stack levels required when called:    5
  7447 ;; This function calls:
  7448 ;;		_fputc
  7449 ;;		_fputs
  7450 ;;		_strlen
  7451 ;; This function is called by:
  7452 ;;		_ctoa
  7453 ;;		_dtoa
  7454 ;;		_otoa
  7455 ;;		_utoa
  7456 ;;		_xtoa
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text24
  7461  0036C6                     __ptext24:
  7462                           	opt callstack 0
  7463  0036C6                     _pad:
  7464                           	opt callstack 0
  7465  0036C6  FFFF               	dw	65535	; assembler added errata NOP
  7466                           
  7467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7468                           
  7469                           ;incstack = 0
  7470  0036C8  0100               	movlb	0	; () banked
  7471  0036CA  A1D4               	btfss	_flags& (0+255),0,b
  7472  0036CC  D00A               	goto	l3440
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7476  0036CE  C013  F00A         	movff	pad@buf,fputs@s
  7477  0036D2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7478  0036D6  C011  F00C         	movff	pad@fp,fputs@fp
  7479  0036DA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7480  0036DE  ECCF  F01D         	call	_fputs	;wreg free
  7481  0036E2                     l3440:
  7482  0036E2  FFFF               	dw	65535	; assembler added errata NOP
  7483                           
  7484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7485  0036E4  BE16               	btfsc	pad@p+1,7,c
  7486  0036E6  D005               	goto	l3444
  7487  0036E8  C015  F01A         	movff	pad@p,pad@w
  7488  0036EC  C016  F01B         	movff	pad@p+1,pad@w+1
  7489  0036F0  D005               	goto	l368
  7490  0036F2                     l3444:
  7491  0036F2  FFFF               	dw	65535	; assembler added errata NOP
  7492  0036F4  0E00               	movlw	0
  7493  0036F6  6E1B               	movwf	pad@w+1,c
  7494  0036F8  0E00               	movlw	0
  7495  0036FA  6E1A               	movwf	pad@w,c
  7496  0036FC                     l368:
  7497  0036FC  FFFF               	dw	65535	; assembler added errata NOP
  7498                           
  7499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7500  0036FE  0E00               	movlw	0
  7501  003700  6E19               	movwf	pad@i+1,c
  7502  003702  0E00               	movlw	0
  7503  003704  6E18               	movwf	pad@i,c
  7504                           
  7505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7506  003706  D00D               	goto	l3450
  7507  003708                     l3446:
  7508  003708  FFFF               	dw	65535	; assembler added errata NOP
  7509                           
  7510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7511  00370A  0E00               	movlw	0
  7512  00370C  6E02               	movwf	fputc@c+1,c
  7513  00370E  0E20               	movlw	32
  7514  003710  6E01               	movwf	fputc@c,c
  7515  003712  C011  F003         	movff	pad@fp,fputc@fp
  7516  003716  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7517  00371A  EC0D  F01B         	call	_fputc	;wreg free
  7518                           
  7519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7520  00371E  4A18               	infsnz	pad@i,f,c
  7521  003720  2A19               	incf	pad@i+1,f,c
  7522  003722                     l3450:
  7523  003722  FFFF               	dw	65535	; assembler added errata NOP
  7524                           
  7525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7526  003724  501A               	movf	pad@w,w,c
  7527  003726  5C18               	subwf	pad@i,w,c
  7528  003728  5019               	movf	pad@i+1,w,c
  7529  00372A  0A80               	xorlw	128
  7530  00372C  6E17               	movwf	??_pad& (0+255),c
  7531  00372E  501B               	movf	pad@w+1,w,c
  7532  003730  0A80               	xorlw	128
  7533  003732  5817               	subwfb	??_pad& (0+255),w,c
  7534  003734  A0D8               	btfss	status,0,c
  7535  003736  D7E8               	goto	l3446
  7536                           
  7537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7538  003738  0100               	movlb	0	; () banked
  7539  00373A  B1D4               	btfsc	_flags& (0+255),0,b
  7540  00373C  D00A               	goto	l3454
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7544  00373E  C013  F00A         	movff	pad@buf,fputs@s
  7545  003742  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7546  003746  C011  F00C         	movff	pad@fp,fputs@fp
  7547  00374A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7548  00374E  ECCF  F01D         	call	_fputs	;wreg free
  7549  003752                     l3454:
  7550  003752  FFFF               	dw	65535	; assembler added errata NOP
  7551                           
  7552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7553  003754  C013  F001         	movff	pad@buf,strlen@s
  7554  003758  C014  F002         	movff	pad@buf+1,strlen@s+1
  7555  00375C  EC9E  F01E         	call	_strlen	;wreg free
  7556  003760  501A               	movf	pad@w,w,c
  7557  003762  2401               	addwf	?_strlen,w,c
  7558  003764  6E11               	movwf	?_pad,c
  7559  003766  501B               	movf	pad@w+1,w,c
  7560  003768  2002               	addwfc	?_strlen+1,w,c
  7561  00376A  6E12               	movwf	?_pad+1,c
  7562  00376C  0012               	return		;funcret
  7563  00376E  FFFF               	dw	65535	; errata NOP
  7564  003770                     __end_of_pad:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _strlen *****************
  7568 ;; Defined at:
  7569 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7572 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7575 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  2    0[COMRAM] unsigned int 
  7578 ;; Registers used:
  7579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7585 ;;      Params:         2       0       0       0       0       0       0
  7586 ;;      Locals:         2       0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0
  7588 ;;      Totals:         4       0       0       0       0       0       0
  7589 ;;Total ram usage:        4 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    2
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_pad
  7596 ;;		_stoa
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text25
  7601  003D3C                     __ptext25:
  7602                           	opt callstack 0
  7603  003D3C                     _strlen:
  7604                           	opt callstack 0
  7605  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  7606                           
  7607                           ;incstack = 0
  7608  003D3E  C001  F003         	movff	strlen@s,strlen@a
  7609  003D42  C002  F004         	movff	strlen@s+1,strlen@a+1
  7610  003D46  D003               	goto	l3426
  7611  003D48                     l3424:
  7612  003D48  FFFF               	dw	65535	; assembler added errata NOP
  7613  003D4A  4A01               	infsnz	strlen@s,f,c
  7614  003D4C  2A02               	incf	strlen@s+1,f,c
  7615  003D4E                     l3426:
  7616  003D4E  FFFF               	dw	65535	; assembler added errata NOP
  7617  003D50  C001  FFD9         	movff	strlen@s,fsr2l
  7618  003D54  C002  FFDA         	movff	strlen@s+1,fsr2h
  7619  003D58  50DF               	movf	indf2,w,c
  7620  003D5A  A4D8               	btfss	status,2,c
  7621  003D5C  D7F5               	goto	l3424
  7622  003D5E  5003               	movf	strlen@a,w,c
  7623  003D60  5C01               	subwf	strlen@s,w,c
  7624  003D62  6E01               	movwf	?_strlen,c
  7625  003D64  5004               	movf	strlen@a+1,w,c
  7626  003D66  5802               	subwfb	strlen@s+1,w,c
  7627  003D68  6E02               	movwf	?_strlen+1,c
  7628  003D6A  0012               	return		;funcret
  7629  003D6C  FFFF               	dw	65535	; errata NOP
  7630  003D6E                     __end_of_strlen:
  7631                           	opt callstack 0
  7632                           
  7633 ;; *************** function _fputs *****************
  7634 ;; Defined at:
  7635 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7638 ;;		 -> dbuf(32), 
  7639 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7640 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  i               2   14[COMRAM] int 
  7643 ;;  c               1   13[COMRAM] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2    9[COMRAM] int 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7653 ;;      Params:         4       0       0       0       0       0       0
  7654 ;;      Locals:         3       0       0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0
  7656 ;;      Totals:         7       0       0       0       0       0       0
  7657 ;;Total ram usage:        7 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    4
  7660 ;; This function calls:
  7661 ;;		_fputc
  7662 ;; This function is called by:
  7663 ;;		_pad
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text26
  7668  003B9E                     __ptext26:
  7669                           	opt callstack 0
  7670  003B9E                     _fputs:
  7671                           	opt callstack 0
  7672  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  7673                           
  7674                           ;incstack = 0
  7675  003BA0  0E00               	movlw	0
  7676  003BA2  6E10               	movwf	fputs@i+1,c
  7677  003BA4  0E00               	movlw	0
  7678  003BA6  6E0F               	movwf	fputs@i,c
  7679  003BA8  D00C               	goto	l3420
  7680  003BAA                     l3416:
  7681  003BAA  FFFF               	dw	65535	; assembler added errata NOP
  7682  003BAC  C00E  F001         	movff	fputs@c,fputc@c
  7683  003BB0  6A02               	clrf	fputc@c+1,c
  7684  003BB2  C00C  F003         	movff	fputs@fp,fputc@fp
  7685  003BB6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7686  003BBA  EC0D  F01B         	call	_fputc	;wreg free
  7687  003BBE  4A0F               	infsnz	fputs@i,f,c
  7688  003BC0  2A10               	incf	fputs@i+1,f,c
  7689  003BC2                     l3420:
  7690  003BC2  FFFF               	dw	65535	; assembler added errata NOP
  7691  003BC4  500F               	movf	fputs@i,w,c
  7692  003BC6  240A               	addwf	fputs@s,w,c
  7693  003BC8  6ED9               	movwf	fsr2l,c
  7694  003BCA  5010               	movf	fputs@i+1,w,c
  7695  003BCC  200B               	addwfc	fputs@s+1,w,c
  7696  003BCE  6EDA               	movwf	fsr2h,c
  7697  003BD0  50DF               	movf	indf2,w,c
  7698  003BD2  6E0E               	movwf	fputs@c,c
  7699  003BD4  500E               	movf	fputs@c,w,c
  7700  003BD6  B4D8               	btfsc	status,2,c
  7701  003BD8  0012               	return		;funcret
  7702  003BDA  FFFF               	dw	65535	; assembler added errata NOP
  7703  003BDC  D7E6               	goto	l3416
  7704  003BDE  FFFF               	dw	65535	; errata NOP
  7705  003BE0                     __end_of_fputs:
  7706                           	opt callstack 0
  7707                           
  7708 ;; *************** function _fputc *****************
  7709 ;; Defined at:
  7710 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  c               2    0[COMRAM] int 
  7713 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7714 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;		None
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  2    0[COMRAM] int 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7726 ;;      Params:         4       0       0       0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0       0
  7728 ;;      Temps:          5       0       0       0       0       0       0
  7729 ;;      Totals:         9       0       0       0       0       0       0
  7730 ;;Total ram usage:        9 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:    3
  7733 ;; This function calls:
  7734 ;;		_putch
  7735 ;; This function is called by:
  7736 ;;		_pad
  7737 ;;		_stoa
  7738 ;;		_vfpfcnvrt
  7739 ;;		_fputs
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text27
  7744  00361A                     __ptext27:
  7745                           	opt callstack 0
  7746  00361A                     _fputc:
  7747                           	opt callstack 0
  7748  00361A  FFFF               	dw	65535	; assembler added errata NOP
  7749                           
  7750                           ;incstack = 0
  7751  00361C  5003               	movf	fputc@fp,w,c
  7752  00361E  1004               	iorwf	fputc@fp+1,w,c
  7753  003620  B4D8               	btfsc	status,2,c
  7754  003622  D004               	goto	u2740
  7755  003624  5003               	movf	fputc@fp,w,c
  7756  003626  1004               	iorwf	fputc@fp+1,w,c
  7757  003628  A4D8               	btfss	status,2,c
  7758  00362A  D005               	goto	l3406
  7759  00362C                     u2740:
  7760  00362C  FFFF               	dw	65535	; assembler added errata NOP
  7761  00362E  5001               	movf	fputc@c,w,c
  7762  003630  EC77  F01F         	call	_putch
  7763  003634  D045               	goto	l1336
  7764  003636                     l3406:
  7765  003636  FFFF               	dw	65535	; assembler added errata NOP
  7766  003638  EE20 F004          	lfsr	2,4
  7767  00363C  5003               	movf	fputc@fp,w,c
  7768  00363E  26D9               	addwf	fsr2l,f,c
  7769  003640  5004               	movf	fputc@fp+1,w,c
  7770  003642  22DA               	addwfc	fsr2h,f,c
  7771  003644  50DE               	movf	postinc2,w,c
  7772  003646  10DE               	iorwf	postinc2,w,c
  7773  003648  B4D8               	btfsc	status,2,c
  7774  00364A  D016               	goto	u2760
  7775  00364C  EE20 F004          	lfsr	2,4
  7776  003650  5003               	movf	fputc@fp,w,c
  7777  003652  26D9               	addwf	fsr2l,f,c
  7778  003654  5004               	movf	fputc@fp+1,w,c
  7779  003656  22DA               	addwfc	fsr2h,f,c
  7780  003658  EE10 F002          	lfsr	1,2
  7781  00365C  5003               	movf	fputc@fp,w,c
  7782  00365E  26E1               	addwf	fsr1l,f,c
  7783  003660  5004               	movf	fputc@fp+1,w,c
  7784  003662  22E2               	addwfc	fsr1h,f,c
  7785  003664  50DE               	movf	postinc2,w,c
  7786  003666  5CE6               	subwf	postinc1,w,c
  7787  003668  50E6               	movf	postinc1,w,c
  7788  00366A  0A80               	xorlw	128
  7789  00366C  6E09               	movwf	(??_fputc+4)& (0+255),c
  7790  00366E  50DE               	movf	postinc2,w,c
  7791  003670  0A80               	xorlw	128
  7792  003672  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7793  003674  B0D8               	btfsc	status,0,c
  7794  003676  D024               	goto	l1336
  7795  003678                     u2760:
  7796  003678  FFFF               	dw	65535	; assembler added errata NOP
  7797  00367A  EE20 F002          	lfsr	2,2
  7798  00367E  5003               	movf	fputc@fp,w,c
  7799  003680  26D9               	addwf	fsr2l,f,c
  7800  003682  5004               	movf	fputc@fp+1,w,c
  7801  003684  22DA               	addwfc	fsr2h,f,c
  7802  003686  CFDE F005          	movff	postinc2,??_fputc
  7803  00368A  CFDD F006          	movff	postdec2,??_fputc+1
  7804  00368E  C003  FFD9         	movff	fputc@fp,fsr2l
  7805  003692  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7806  003696  CFDE F007          	movff	postinc2,??_fputc+2
  7807  00369A  CFDD F008          	movff	postdec2,??_fputc+3
  7808  00369E  5005               	movf	??_fputc,w,c
  7809  0036A0  2407               	addwf	??_fputc+2,w,c
  7810  0036A2  6ED9               	movwf	fsr2l,c
  7811  0036A4  5006               	movf	??_fputc+1,w,c
  7812  0036A6  2008               	addwfc	??_fputc+3,w,c
  7813  0036A8  6EDA               	movwf	fsr2h,c
  7814  0036AA  C001  FFDF         	movff	fputc@c,indf2
  7815  0036AE  EE20 F002          	lfsr	2,2
  7816  0036B2  5003               	movf	fputc@fp,w,c
  7817  0036B4  26D9               	addwf	fsr2l,f,c
  7818  0036B6  5004               	movf	fputc@fp+1,w,c
  7819  0036B8  22DA               	addwfc	fsr2h,f,c
  7820  0036BA  2ADE               	incf	postinc2,f,c
  7821  0036BC  0E00               	movlw	0
  7822  0036BE  22DD               	addwfc	postdec2,f,c
  7823  0036C0                     l1336:
  7824  0036C0  FFFF               	dw	65535	; assembler added errata NOP
  7825  0036C2  0012               	return		;funcret
  7826  0036C4  FFFF               	dw	65535	; errata NOP
  7827  0036C6                     __end_of_fputc:
  7828                           	opt callstack 0
  7829                           
  7830 ;; *************** function _putch *****************
  7831 ;; Defined at:
  7832 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  c               1    wreg     unsigned char 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  c               1    0[COMRAM] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7846 ;;      Params:         0       0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    2
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_fputc
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text28
  7861  003EEE                     __ptext28:
  7862                           	opt callstack 0
  7863  003EEE                     _putch:
  7864                           	opt callstack 0
  7865  003EEE  FFFF               	dw	65535	; assembler added errata NOP
  7866                           
  7867                           ;incstack = 0
  7868  003EF0  0012               	return		;funcret
  7869  003EF2  FFFF               	dw	65535	; errata NOP
  7870  003EF4                     __end_of_putch:
  7871                           	opt callstack 0
  7872                           
  7873 ;; *************** function _atoi *****************
  7874 ;; Defined at:
  7875 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7878 ;;		 -> STR_2(3), STR_1(4), 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  n               2   20[COMRAM] int 
  7881 ;;  neg             2   13[COMRAM] int 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  2    7[COMRAM] int 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7891 ;;      Params:         2       0       0       0       0       0       0
  7892 ;;      Locals:         9       0       0       0       0       0       0
  7893 ;;      Temps:          4       0       0       0       0       0       0
  7894 ;;      Totals:        15       0       0       0       0       0       0
  7895 ;;Total ram usage:       15 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    3
  7898 ;; This function calls:
  7899 ;;		___wmul
  7900 ;;		_isdigit
  7901 ;;		_isspace
  7902 ;; This function is called by:
  7903 ;;		_vfpfcnvrt
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text29
  7908  002A3C                     __ptext29:
  7909                           	opt callstack 0
  7910  002A3C                     _atoi:
  7911                           	opt callstack 0
  7912  002A3C  FFFF               	dw	65535	; assembler added errata NOP
  7913                           
  7914                           ;incstack = 0
  7915  002A3E  0E00               	movlw	0
  7916  002A40  6E16               	movwf	atoi@n+1,c
  7917  002A42  0E00               	movlw	0
  7918  002A44  6E15               	movwf	atoi@n,c
  7919  002A46  0E00               	movlw	0
  7920  002A48  6E0F               	movwf	atoi@neg+1,c
  7921  002A4A  0E00               	movlw	0
  7922  002A4C  6E0E               	movwf	atoi@neg,c
  7923  002A4E  D003               	goto	l3892
  7924  002A50                     l3890:
  7925  002A50  FFFF               	dw	65535	; assembler added errata NOP
  7926  002A52  4A08               	infsnz	atoi@s,f,c
  7927  002A54  2A09               	incf	atoi@s+1,f,c
  7928  002A56                     l3892:
  7929  002A56  FFFF               	dw	65535	; assembler added errata NOP
  7930  002A58  0E01               	movlw	1
  7931  002A5A  6E14               	movwf	_atoi$1699,c
  7932  002A5C  C008  FFF6         	movff	atoi@s,tblptrl
  7933  002A60  C009  FFF7         	movff	atoi@s+1,tblptrh
  7934  002A64                     	if	0	;tblptru may be non-zero
  7935  002A64                     	endif
  7936  002A64                     	if	0	;tblptru may be non-zero
  7937  002A64                     	endif
  7938  002A64  0008               	tblrd		*
  7939  002A66  FFFF               	dw	65535	; errata NOP
  7940  002A68  50F5               	movf	tablat,w,c
  7941  002A6A  0A20               	xorlw	32
  7942  002A6C  B4D8               	btfsc	status,2,c
  7943  002A6E  D019               	goto	l3900
  7944  002A70  0EF7               	movlw	247
  7945  002A72  6E0A               	movwf	??_atoi& (0+255),c
  7946  002A74  0EFF               	movlw	255
  7947  002A76  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7948  002A78  C008  FFF6         	movff	atoi@s,tblptrl
  7949  002A7C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7950  002A80                     	if	0	;tblptru may be non-zero
  7951  002A80                     	endif
  7952  002A80                     	if	0	;tblptru may be non-zero
  7953  002A80                     	endif
  7954  002A80  0008               	tblrd		*
  7955  002A82  FFFF               	dw	65535	; errata NOP
  7956  002A84  50F5               	movf	tablat,w,c
  7957  002A86  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7958  002A88  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7959  002A8A  500A               	movf	??_atoi,w,c
  7960  002A8C  260C               	addwf	??_atoi+2,f,c
  7961  002A8E  500B               	movf	??_atoi+1,w,c
  7962  002A90  220D               	addwfc	??_atoi+3,f,c
  7963  002A92  500D               	movf	??_atoi+3,w,c
  7964  002A94  E104               	bnz	u3770
  7965  002A96  0E05               	movlw	5
  7966  002A98  5C0C               	subwf	??_atoi+2,w,c
  7967  002A9A  A0D8               	btfss	status,0,c
  7968  002A9C  D002               	goto	l3900
  7969  002A9E                     u3770:
  7970  002A9E  0E00               	movlw	0
  7971  002AA0  6E14               	movwf	_atoi$1699,c
  7972  002AA2                     l3900:
  7973  002AA2  FFFF               	dw	65535	; assembler added errata NOP
  7974  002AA4  C014  F010         	movff	_atoi$1699,_atoi$1698
  7975  002AA8  6A11               	clrf	_atoi$1698+1,c
  7976  002AAA  5010               	movf	_atoi$1698,w,c
  7977  002AAC  1011               	iorwf	_atoi$1698+1,w,c
  7978  002AAE  B4D8               	btfsc	status,2,c
  7979  002AB0  D00A               	goto	l3910
  7980  002AB2  D7CE               	goto	l3890
  7981  002AB4                     l3906:
  7982  002AB4  FFFF               	dw	65535	; assembler added errata NOP
  7983  002AB6  0E00               	movlw	0
  7984  002AB8  6E0F               	movwf	atoi@neg+1,c
  7985  002ABA  0E01               	movlw	1
  7986  002ABC  6E0E               	movwf	atoi@neg,c
  7987  002ABE                     l3908:
  7988  002ABE  FFFF               	dw	65535	; assembler added errata NOP
  7989  002AC0  4A08               	infsnz	atoi@s,f,c
  7990  002AC2  2A09               	incf	atoi@s+1,f,c
  7991  002AC4  D032               	goto	l3916
  7992  002AC6                     l3910:
  7993  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7994  002AC8  C008  FFF6         	movff	atoi@s,tblptrl
  7995  002ACC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7996  002AD0                     	if	0	;tblptru may be non-zero
  7997  002AD0                     	endif
  7998  002AD0                     	if	0	;tblptru may be non-zero
  7999  002AD0                     	endif
  8000  002AD0  0008               	tblrd		*
  8001  002AD2  FFFF               	dw	65535	; errata NOP
  8002  002AD4  50F5               	movf	tablat,w,c
  8003  002AD6  6E0A               	movwf	??_atoi& (0+255),c
  8004  002AD8  6A0B               	clrf	(??_atoi+1)& (0+255),c
  8005                           
  8006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8007                           ; Switch size 1, requested type "simple"
  8008                           ; Number of cases is 1, Range of values is 0 to 0
  8009                           ; switch strategies available:
  8010                           ; Name         Instructions Cycles
  8011                           ; simple_byte            4     3 (average)
  8012                           ;	Chosen strategy is simple_byte
  8013  002ADA  500B               	movf	??_atoi+1,w,c
  8014  002ADC  0A00               	xorlw	0	; case 0
  8015  002ADE  A4D8               	btfss	status,2,c
  8016  002AE0  D024               	goto	l3916
  8017                           
  8018                           ; Switch size 1, requested type "simple"
  8019                           ; Number of cases is 2, Range of values is 43 to 45
  8020                           ; switch strategies available:
  8021                           ; Name         Instructions Cycles
  8022                           ; simple_byte            7     4 (average)
  8023                           ;	Chosen strategy is simple_byte
  8024  002AE2  500A               	movf	??_atoi,w,c
  8025  002AE4  0A2B               	xorlw	43	; case 43
  8026  002AE6  B4D8               	btfsc	status,2,c
  8027  002AE8  D7EA               	goto	l3908
  8028  002AEA  0A06               	xorlw	6	; case 45
  8029  002AEC  B4D8               	btfsc	status,2,c
  8030  002AEE  D7E2               	goto	l3906
  8031  002AF0  D01C               	goto	l3916
  8032  002AF2                     l3912:
  8033  002AF2  FFFF               	dw	65535	; assembler added errata NOP
  8034  002AF4  C015  F001         	movff	atoi@n,___wmul@multiplier
  8035  002AF8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8036  002AFC  0E00               	movlw	0
  8037  002AFE  6E04               	movwf	___wmul@multiplicand+1,c
  8038  002B00  0E0A               	movlw	10
  8039  002B02  6E03               	movwf	___wmul@multiplicand,c
  8040  002B04  ECCD  F01E         	call	___wmul	;wreg free
  8041  002B08  C008  FFF6         	movff	atoi@s,tblptrl
  8042  002B0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8043  002B10                     	if	0	;tblptru may be non-zero
  8044  002B10                     	endif
  8045  002B10                     	if	0	;tblptru may be non-zero
  8046  002B10                     	endif
  8047  002B10  0008               	tblrd		*
  8048  002B12  FFFF               	dw	65535	; errata NOP
  8049  002B14  50F5               	movf	tablat,w,c
  8050  002B16  5E01               	subwf	?___wmul,f,c
  8051  002B18  0E00               	movlw	0
  8052  002B1A  5A02               	subwfb	?___wmul+1,f,c
  8053  002B1C  0E30               	movlw	48
  8054  002B1E  2401               	addwf	?___wmul,w,c
  8055  002B20  6E15               	movwf	atoi@n,c
  8056  002B22  0E00               	movlw	0
  8057  002B24  2002               	addwfc	?___wmul+1,w,c
  8058  002B26  6E16               	movwf	atoi@n+1,c
  8059  002B28  D7CA               	goto	l3908
  8060  002B2A                     l3916:
  8061  002B2A  FFFF               	dw	65535	; assembler added errata NOP
  8062  002B2C  0ED0               	movlw	208
  8063  002B2E  6E0A               	movwf	??_atoi& (0+255),c
  8064  002B30  0EFF               	movlw	255
  8065  002B32  6E0B               	movwf	(??_atoi+1)& (0+255),c
  8066  002B34  C008  FFF6         	movff	atoi@s,tblptrl
  8067  002B38  C009  FFF7         	movff	atoi@s+1,tblptrh
  8068  002B3C                     	if	0	;tblptru may be non-zero
  8069  002B3C                     	endif
  8070  002B3C                     	if	0	;tblptru may be non-zero
  8071  002B3C                     	endif
  8072  002B3C  0008               	tblrd		*
  8073  002B3E  FFFF               	dw	65535	; errata NOP
  8074  002B40  50F5               	movf	tablat,w,c
  8075  002B42  6E0C               	movwf	(??_atoi+2)& (0+255),c
  8076  002B44  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8077  002B46  500A               	movf	??_atoi,w,c
  8078  002B48  260C               	addwf	??_atoi+2,f,c
  8079  002B4A  500B               	movf	??_atoi+1,w,c
  8080  002B4C  220D               	addwfc	??_atoi+3,f,c
  8081  002B4E  500D               	movf	??_atoi+3,w,c
  8082  002B50  E106               	bnz	u3790
  8083  002B52  0E0A               	movlw	10
  8084  002B54  5C0C               	subwf	??_atoi+2,w,c
  8085  002B56  B0D8               	btfsc	status,0,c
  8086  002B58  D002               	goto	u3790
  8087  002B5A  0E01               	movlw	1
  8088  002B5C  D002               	goto	u3800
  8089  002B5E                     u3790:
  8090  002B5E  FFFF               	dw	65535	; assembler added errata NOP
  8091  002B60  0E00               	movlw	0
  8092  002B62                     u3800:
  8093  002B62  FFFF               	dw	65535	; assembler added errata NOP
  8094  002B64  6E12               	movwf	_atoi$1700,c
  8095  002B66  6A13               	clrf	_atoi$1700+1,c
  8096  002B68  5012               	movf	_atoi$1700,w,c
  8097  002B6A  1013               	iorwf	_atoi$1700+1,w,c
  8098  002B6C  A4D8               	btfss	status,2,c
  8099  002B6E  D7C1               	goto	l3912
  8100  002B70  500E               	movf	atoi@neg,w,c
  8101  002B72  100F               	iorwf	atoi@neg+1,w,c
  8102  002B74  A4D8               	btfss	status,2,c
  8103  002B76  D00D               	goto	l1290
  8104  002B78  C015  F00A         	movff	atoi@n,??_atoi
  8105  002B7C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8106  002B80  1E0A               	comf	??_atoi,f,c
  8107  002B82  1E0B               	comf	??_atoi+1,f,c
  8108  002B84  4A0A               	infsnz	??_atoi,f,c
  8109  002B86  2A0B               	incf	??_atoi+1,f,c
  8110  002B88  C00A  F008         	movff	??_atoi,?_atoi
  8111  002B8C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8112  002B90  D005               	goto	l1293
  8113  002B92                     l1290:
  8114  002B92  FFFF               	dw	65535	; assembler added errata NOP
  8115  002B94  C015  F008         	movff	atoi@n,?_atoi
  8116  002B98  C016  F009         	movff	atoi@n+1,?_atoi+1
  8117  002B9C                     l1293:
  8118  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  8119  002B9E  0012               	return		;funcret
  8120  002BA0  FFFF               	dw	65535	; errata NOP
  8121  002BA2                     __end_of_atoi:
  8122                           	opt callstack 0
  8123                           
  8124 ;; *************** function _isspace *****************
  8125 ;; Defined at:
  8126 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;  c               2    0[COMRAM] int 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  2    0[COMRAM] int 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8140 ;;      Params:         2       0       0       0       0       0       0
  8141 ;;      Locals:         1       0       0       0       0       0       0
  8142 ;;      Temps:          4       0       0       0       0       0       0
  8143 ;;      Totals:         7       0       0       0       0       0       0
  8144 ;;Total ram usage:        7 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    2
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_atoi
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text30
  8155  003B5A                     __ptext30:
  8156                           	opt callstack 0
  8157  003B5A                     _isspace:
  8158                           	opt callstack 0
  8159  003B5A  FFFF               	dw	65535	; assembler added errata NOP
  8160                           
  8161                           ;incstack = 0
  8162  003B5C  0E01               	movlw	1
  8163  003B5E  6E07               	movwf	_isspace$1735,c
  8164  003B60  0E20               	movlw	32
  8165  003B62  1801               	xorwf	isspace@c,w,c
  8166  003B64  1002               	iorwf	isspace@c+1,w,c
  8167  003B66  B4D8               	btfsc	status,2,c
  8168  003B68  D014               	goto	l3616
  8169  003B6A  0EF7               	movlw	247
  8170  003B6C  6E03               	movwf	??_isspace& (0+255),c
  8171  003B6E  0EFF               	movlw	255
  8172  003B70  6E04               	movwf	(??_isspace+1)& (0+255),c
  8173  003B72  C001  F005         	movff	isspace@c,??_isspace+2
  8174  003B76  C002  F006         	movff	isspace@c+1,??_isspace+3
  8175  003B7A  5003               	movf	??_isspace,w,c
  8176  003B7C  2605               	addwf	??_isspace+2,f,c
  8177  003B7E  5004               	movf	??_isspace+1,w,c
  8178  003B80  2206               	addwfc	??_isspace+3,f,c
  8179  003B82  5006               	movf	??_isspace+3,w,c
  8180  003B84  E104               	bnz	u3160
  8181  003B86  0E05               	movlw	5
  8182  003B88  5C05               	subwf	??_isspace+2,w,c
  8183  003B8A  A0D8               	btfss	status,0,c
  8184  003B8C  D002               	goto	l3616
  8185  003B8E                     u3160:
  8186  003B8E  0E00               	movlw	0
  8187  003B90  6E07               	movwf	_isspace$1735,c
  8188  003B92                     l3616:
  8189  003B92  FFFF               	dw	65535	; assembler added errata NOP
  8190  003B94  C007  F001         	movff	_isspace$1735,?_isspace
  8191  003B98  6A02               	clrf	?_isspace+1,c
  8192  003B9A  0012               	return		;funcret
  8193  003B9C  FFFF               	dw	65535	; errata NOP
  8194  003B9E                     __end_of_isspace:
  8195                           	opt callstack 0
  8196                           
  8197 ;; *************** function _isdigit *****************
  8198 ;; Defined at:
  8199 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  c               2    0[COMRAM] int 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  2    0[COMRAM] int 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8213 ;;      Params:         2       0       0       0       0       0       0
  8214 ;;      Locals:         0       0       0       0       0       0       0
  8215 ;;      Temps:          4       0       0       0       0       0       0
  8216 ;;      Totals:         6       0       0       0       0       0       0
  8217 ;;Total ram usage:        6 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    2
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_vfpfcnvrt
  8224 ;;		_atoi
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text31
  8229  003D04                     __ptext31:
  8230                           	opt callstack 0
  8231  003D04                     _isdigit:
  8232                           	opt callstack 0
  8233  003D04  FFFF               	dw	65535	; assembler added errata NOP
  8234                           
  8235                           ;incstack = 0
  8236  003D06  0ED0               	movlw	208
  8237  003D08  6E03               	movwf	??_isdigit& (0+255),c
  8238  003D0A  0EFF               	movlw	255
  8239  003D0C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8240  003D0E  C001  F005         	movff	isdigit@c,??_isdigit+2
  8241  003D12  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8242  003D16  5003               	movf	??_isdigit,w,c
  8243  003D18  2605               	addwf	??_isdigit+2,f,c
  8244  003D1A  5004               	movf	??_isdigit+1,w,c
  8245  003D1C  2206               	addwfc	??_isdigit+3,f,c
  8246  003D1E  5006               	movf	??_isdigit+3,w,c
  8247  003D20  E106               	bnz	u2930
  8248  003D22  0E0A               	movlw	10
  8249  003D24  5C05               	subwf	??_isdigit+2,w,c
  8250  003D26  B0D8               	btfsc	status,0,c
  8251  003D28  D002               	goto	u2930
  8252  003D2A  0E01               	movlw	1
  8253  003D2C  D002               	goto	u2940
  8254  003D2E                     u2930:
  8255  003D2E  FFFF               	dw	65535	; assembler added errata NOP
  8256  003D30  0E00               	movlw	0
  8257  003D32                     u2940:
  8258  003D32  FFFF               	dw	65535	; assembler added errata NOP
  8259  003D34  6E01               	movwf	?_isdigit,c
  8260  003D36  6A02               	clrf	?_isdigit+1,c
  8261  003D38  0012               	return		;funcret
  8262  003D3A  FFFF               	dw	65535	; errata NOP
  8263  003D3C                     __end_of_isdigit:
  8264                           	opt callstack 0
  8265                           
  8266 ;; *************** function ___wmul *****************
  8267 ;; Defined at:
  8268 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  multiplier      2    0[COMRAM] unsigned int 
  8271 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  product         2    4[COMRAM] unsigned int 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  2    0[COMRAM] unsigned int 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, prodl, prodh
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8283 ;;      Params:         4       0       0       0       0       0       0
  8284 ;;      Locals:         2       0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0
  8286 ;;      Totals:         6       0       0       0       0       0       0
  8287 ;;Total ram usage:        6 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    2
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_atoi
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text32
  8298  003D9A                     __ptext32:
  8299                           	opt callstack 0
  8300  003D9A                     ___wmul:
  8301                           	opt callstack 0
  8302  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  8303                           
  8304                           ;incstack = 0
  8305  003D9C  5001               	movf	___wmul@multiplier,w,c
  8306  003D9E  0203               	mulwf	___wmul@multiplicand,c
  8307  003DA0  CFF3 F005          	movff	prodl,___wmul@product
  8308  003DA4  CFF4 F006          	movff	prodh,___wmul@product+1
  8309  003DA8  5001               	movf	___wmul@multiplier,w,c
  8310  003DAA  0204               	mulwf	___wmul@multiplicand+1,c
  8311  003DAC  50F3               	movf	prodl,w,c
  8312  003DAE  2606               	addwf	___wmul@product+1,f,c
  8313  003DB0  5002               	movf	___wmul@multiplier+1,w,c
  8314  003DB2  0203               	mulwf	___wmul@multiplicand,c
  8315  003DB4  50F3               	movf	prodl,w,c
  8316  003DB6  2606               	addwf	___wmul@product+1,f,c
  8317  003DB8  C005  F001         	movff	___wmul@product,?___wmul
  8318  003DBC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8319  003DC0  0012               	return		;funcret
  8320  003DC2  FFFF               	dw	65535	; errata NOP
  8321  003DC4                     __end_of___wmul:
  8322                           	opt callstack 0
  8323                           
  8324 ;; *************** function _getchar *****************
  8325 ;; Defined at:
  8326 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  2   26[None  ] int 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8340 ;;      Params:         0       0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0
  8343 ;;      Totals:         0       0       0       0       0       0       0
  8344 ;;Total ram usage:        0 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    4
  8347 ;; This function calls:
  8348 ;;		_fgetc
  8349 ;; This function is called by:
  8350 ;;		_int_to_char
  8351 ;;		_float_to_char
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text33
  8356  003E94                     __ptext33:
  8357                           	opt callstack 0
  8358  003E94                     _getchar:
  8359                           	opt callstack 0
  8360  003E94  FFFF               	dw	65535	; assembler added errata NOP
  8361                           
  8362                           ;	Return value of _getchar is never used
  8363                           
  8364                           ;incstack = 0
  8365  003E96  0E00               	movlw	0
  8366  003E98  6E03               	movwf	fgetc@fp,c
  8367  003E9A  0E00               	movlw	0
  8368  003E9C  6E04               	movwf	fgetc@fp+1,c
  8369  003E9E  EC00  F01C         	call	_fgetc	;wreg free
  8370  003EA2  0012               	return		;funcret
  8371  003EA4  FFFF               	dw	65535	; errata NOP
  8372  003EA6                     __end_of_getchar:
  8373                           	opt callstack 0
  8374                           
  8375 ;; *************** function _fgetc *****************
  8376 ;; Defined at:
  8377 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8380 ;;		 -> NULL(0), 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  c               2    9[COMRAM] int 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  2    2[COMRAM] int 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8392 ;;      Params:         2       0       0       0       0       0       0
  8393 ;;      Locals:         2       0       0       0       0       0       0
  8394 ;;      Temps:          5       0       0       0       0       0       0
  8395 ;;      Totals:         9       0       0       0       0       0       0
  8396 ;;Total ram usage:        9 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		_getch
  8401 ;; This function is called by:
  8402 ;;		_getchar
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text34
  8407  003800                     __ptext34:
  8408                           	opt callstack 0
  8409  003800                     _fgetc:
  8410                           	opt callstack 0
  8411  003800  FFFF               	dw	65535	; assembler added errata NOP
  8412                           
  8413                           ;incstack = 0
  8414  003802  5003               	movf	fgetc@fp,w,c
  8415  003804  1004               	iorwf	fgetc@fp+1,w,c
  8416  003806  A4D8               	btfss	status,2,c
  8417  003808  D012               	goto	l4350
  8418  00380A  507E               	movf	_ungetcnt,w,c
  8419  00380C  B4D8               	btfsc	status,2,c
  8420  00380E  D007               	goto	l4348
  8421  003810  0E00               	movlw	0
  8422  003812  6E0B               	movwf	fgetc@c+1,c
  8423  003814  0E00               	movlw	0
  8424  003816  6E0A               	movwf	fgetc@c,c
  8425  003818  0E00               	movlw	0
  8426  00381A  6E7E               	movwf	_ungetcnt,c
  8427  00381C  D02F               	goto	l4352
  8428  00381E                     l4348:
  8429  00381E  FFFF               	dw	65535	; assembler added errata NOP
  8430  003820  EC62  F01F         	call	_getch	;wreg free
  8431  003824  C001  F00A         	movff	?_getch,fgetc@c
  8432  003828  C002  F00B         	movff	?_getch+1,fgetc@c+1
  8433  00382C  D027               	goto	l4352
  8434  00382E                     l4350:
  8435  00382E  FFFF               	dw	65535	; assembler added errata NOP
  8436  003830  EE20 F002          	lfsr	2,2
  8437  003834  5003               	movf	fgetc@fp,w,c
  8438  003836  26D9               	addwf	fsr2l,f,c
  8439  003838  5004               	movf	fgetc@fp+1,w,c
  8440  00383A  22DA               	addwfc	fsr2h,f,c
  8441  00383C  CFDE F005          	movff	postinc2,??_fgetc
  8442  003840  CFDD F006          	movff	postdec2,??_fgetc+1
  8443  003844  C003  FFD9         	movff	fgetc@fp,fsr2l
  8444  003848  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  8445  00384C  CFDE F007          	movff	postinc2,??_fgetc+2
  8446  003850  CFDD F008          	movff	postdec2,??_fgetc+3
  8447  003854  5005               	movf	??_fgetc,w,c
  8448  003856  2407               	addwf	??_fgetc+2,w,c
  8449  003858  6ED9               	movwf	fsr2l,c
  8450  00385A  5006               	movf	??_fgetc+1,w,c
  8451  00385C  2008               	addwfc	??_fgetc+3,w,c
  8452  00385E  6EDA               	movwf	fsr2h,c
  8453  003860  50DF               	movf	indf2,w,c
  8454  003862  6E09               	movwf	(??_fgetc+4)& (0+255),c
  8455  003864  5009               	movf	??_fgetc+4,w,c
  8456  003866  6E0A               	movwf	fgetc@c,c
  8457  003868  6A0B               	clrf	fgetc@c+1,c
  8458  00386A  EE20 F002          	lfsr	2,2
  8459  00386E  5003               	movf	fgetc@fp,w,c
  8460  003870  26D9               	addwf	fsr2l,f,c
  8461  003872  5004               	movf	fgetc@fp+1,w,c
  8462  003874  22DA               	addwfc	fsr2h,f,c
  8463  003876  2ADE               	incf	postinc2,f,c
  8464  003878  0E00               	movlw	0
  8465  00387A  22DD               	addwfc	postdec2,f,c
  8466  00387C                     l4352:
  8467  00387C  FFFF               	dw	65535	; assembler added errata NOP
  8468  00387E  C00A  F003         	movff	fgetc@c,?_fgetc
  8469  003882  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  8470  003886  0012               	return		;funcret
  8471  003888  FFFF               	dw	65535	; errata NOP
  8472  00388A                     __end_of_fgetc:
  8473                           	opt callstack 0
  8474                           
  8475 ;; *************** function _getch *****************
  8476 ;; Defined at:
  8477 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  2    0[COMRAM] int 
  8484 ;; Registers used:
  8485 ;;		None
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8491 ;;      Params:         2       0       0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0       0
  8494 ;;      Totals:         2       0       0       0       0       0       0
  8495 ;;Total ram usage:        2 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    2
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_fgetc
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text35
  8506  003EC4                     __ptext35:
  8507                           	opt callstack 0
  8508  003EC4                     _getch:
  8509                           	opt callstack 0
  8510  003EC4  FFFF               	dw	65535	; assembler added errata NOP
  8511                           
  8512                           ;incstack = 0
  8513  003EC6  6801               	setf	?_getch,c
  8514  003EC8  6802               	setf	?_getch+1,c
  8515  003ECA  0012               	return		;funcret
  8516  003ECC  FFFF               	dw	65535	; errata NOP
  8517  003ECE                     __end_of_getch:
  8518                           	opt callstack 0
  8519                           
  8520 ;; *************** function _UARTSendString *****************
  8521 ;; Defined at:
  8522 ;;		line 65 in file "serial.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  c               2   32[BANK0 ] PTR unsigned char 
  8525 ;;		 -> STR_15(26), STR_14(9), STR_13(3), STR_12(17), 
  8526 ;;		 -> STR_11(12), STR_10(3), STR_9(24), STR_8(29), 
  8527 ;;		 -> STR_7(24), STR_6(13), STR_5(9), STR_4(13), 
  8528 ;;		 -> STR_3(9), int_to_char@result(10), 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  i               2   36[BANK0 ] int 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8540 ;;      Params:         0       2       0       0       0       0       0
  8541 ;;      Locals:         0       2       0       0       0       0       0
  8542 ;;      Temps:          0       2       0       0       0       0       0
  8543 ;;      Totals:         0       6       0       0       0       0       0
  8544 ;;Total ram usage:        6 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    3
  8547 ;; This function calls:
  8548 ;;		_UARTSendChar
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;;		_read_SRAM
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text36
  8556  00388A                     __ptext36:
  8557                           	opt callstack 0
  8558  00388A                     _UARTSendString:
  8559                           	opt callstack 0
  8560  00388A  FFFF               	dw	65535	; assembler added errata NOP
  8561                           
  8562                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  8563                           
  8564                           ;incstack = 0
  8565  00388C  9E94               	bcf	3988,7,c	;volatile
  8566                           
  8567                           ;serial.c: 67:   int i = 0;
  8568  00388E  0E00               	movlw	0
  8569  003890  0100               	movlb	0	; () banked
  8570  003892  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
  8571  003894  0E00               	movlw	0
  8572  003896  6FA4               	movwf	UARTSendString@i& (0+255),b
  8573                           
  8574                           ;serial.c: 68:   while (c[i] != '\0') {
  8575  003898  D01E               	goto	l4644
  8576  00389A                     l4640:
  8577  00389A  FFFF               	dw	65535	; assembler added errata NOP
  8578                           
  8579                           ;serial.c: 69:     UARTSendChar(c[i]);
  8580  00389C  0100               	movlb	0	; () banked
  8581  00389E  51A4               	movf	UARTSendString@i& (0+255),w,b
  8582  0038A0  25A0               	addwf	UARTSendString@c& (0+255),w,b
  8583  0038A2  6FA2               	movwf	??_UARTSendString& (0+255),b
  8584  0038A4  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
  8585  0038A6  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  8586  0038A8  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
  8587  0038AA  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
  8588  0038AE  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
  8589  0038B2  6AF8               	clrf	tblptru,c
  8590  0038B4  0E05               	movlw	(high __ramtop+-1)
  8591  0038B6  64F7               	cpfsgt	tblptrh,c
  8592  0038B8  D004               	bra	u4877
  8593  0038BA  0008               	tblrd		*
  8594  0038BC  FFFF               	dw	65535	; errata NOP
  8595  0038BE  50F5               	movf	tablat,w,c
  8596  0038C0  D005               	bra	u4870
  8597  0038C2                     u4877:
  8598  0038C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  8599  0038C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  8600  0038CA  50EF               	movf	indf0,w,c
  8601  0038CC                     u4870:
  8602  0038CC  EC2C  F01F         	call	_UARTSendChar
  8603                           
  8604                           ;serial.c: 70:     i++;
  8605  0038D0  0100               	movlb	0	; () banked
  8606  0038D2  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
  8607  0038D4  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
  8608  0038D6                     l4644:
  8609  0038D6  FFFF               	dw	65535	; assembler added errata NOP
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;serial.c: 68:   while (c[i] != '\0') {
  8613  0038D8  51A4               	movf	UARTSendString@i& (0+255),w,b
  8614  0038DA  25A0               	addwf	UARTSendString@c& (0+255),w,b
  8615  0038DC  6FA2               	movwf	??_UARTSendString& (0+255),b
  8616  0038DE  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
  8617  0038E0  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  8618  0038E2  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
  8619  0038E4  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
  8620  0038E8  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
  8621  0038EC  6AF8               	clrf	tblptru,c
  8622  0038EE  0E05               	movlw	(high __ramtop+-1)
  8623  0038F0  64F7               	cpfsgt	tblptrh,c
  8624  0038F2  D004               	bra	u4887
  8625  0038F4  0008               	tblrd		*
  8626  0038F6  FFFF               	dw	65535	; errata NOP
  8627  0038F8  50F5               	movf	tablat,w,c
  8628  0038FA  D005               	bra	u4880
  8629  0038FC                     u4887:
  8630  0038FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8631  003900  CFF7 FFEA          	movff	tblptrh,fsr0h
  8632  003904  50EF               	movf	indf0,w,c
  8633  003906                     u4880:
  8634  003906  0900               	iorlw	0
  8635  003908  B4D8               	btfsc	status,2,c
  8636  00390A  0012               	return		;funcret
  8637  00390C  FFFF               	dw	65535	; assembler added errata NOP
  8638  00390E  D7C5               	goto	l4640
  8639  003910  FFFF               	dw	65535	; errata NOP
  8640  003912                     __end_of_UARTSendString:
  8641                           	opt callstack 0
  8642                           
  8643 ;; *************** function _UARTNewLine *****************
  8644 ;; Defined at:
  8645 ;;		line 41 in file "serial.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8659 ;;      Params:         0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0
  8662 ;;      Totals:         0       0       0       0       0       0       0
  8663 ;;Total ram usage:        0 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    3
  8666 ;; This function calls:
  8667 ;;		_UARTSendChar
  8668 ;; This function is called by:
  8669 ;;		_main
  8670 ;;		_read_SRAM
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text37
  8675  003E44                     __ptext37:
  8676                           	opt callstack 0
  8677  003E44                     _UARTNewLine:
  8678                           	opt callstack 0
  8679  003E44  FFFF               	dw	65535	; assembler added errata NOP
  8680                           
  8681                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  8682                           
  8683                           ;incstack = 0
  8684  003E46  9E94               	bcf	3988,7,c	;volatile
  8685                           
  8686                           ;serial.c: 43:   UARTSendChar(0x0a);
  8687  003E48  0E0A               	movlw	10
  8688  003E4A  EC2C  F01F         	call	_UARTSendChar
  8689                           
  8690                           ;serial.c: 44:   UARTSendChar(0x0d);
  8691  003E4E  0E0D               	movlw	13
  8692  003E50  EC2C  F01F         	call	_UARTSendChar
  8693  003E54  0012               	return		;funcret
  8694  003E56  FFFF               	dw	65535	; errata NOP
  8695  003E58                     __end_of_UARTNewLine:
  8696                           	opt callstack 0
  8697                           
  8698 ;; *************** function _UARTSendChar *****************
  8699 ;; Defined at:
  8700 ;;		line 47 in file "serial.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  c               1    wreg     unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  c               1    0[COMRAM] unsigned char 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8714 ;;      Params:         0       0       0       0       0       0       0
  8715 ;;      Locals:         1       0       0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0
  8717 ;;      Totals:         1       0       0       0       0       0       0
  8718 ;;Total ram usage:        1 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:    2
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_UARTNewLine
  8725 ;;		_UARTSendString
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text38
  8730  003E58                     __ptext38:
  8731                           	opt callstack 0
  8732  003E58                     _UARTSendChar:
  8733                           	opt callstack 0
  8734  003E58  FFFF               	dw	65535	; assembler added errata NOP
  8735                           
  8736                           ;incstack = 0
  8737                           ;UARTSendChar@c stored from wreg
  8738  003E5A  6E01               	movwf	UARTSendChar@c,c
  8739                           
  8740                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  8741  003E5C  9E94               	bcf	3988,7,c	;volatile
  8742  003E5E                     l206:
  8743  003E5E  FFFF               	dw	65535	; assembler added errata NOP
  8744  003E60  A2AC               	btfss	4012,1,c	;volatile
  8745  003E62  D7FD               	goto	l206
  8746                           
  8747                           ;serial.c: 50:   TXREG = c;
  8748  003E64  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  8749  003E68  0012               	return		;funcret
  8750  003E6A  FFFF               	dw	65535	; errata NOP
  8751  003E6C                     __end_of_UARTSendChar:
  8752                           	opt callstack 0
  8753                           
  8754 ;; *************** function _interrupt_enable *****************
  8755 ;; Defined at:
  8756 ;;		line 15 in file "serial.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		None
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8770 ;;      Params:         0       0       0       0       0       0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0
  8773 ;;      Totals:         0       0       0       0       0       0       0
  8774 ;;Total ram usage:        0 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    2
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_main
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text39
  8785  003EA6                     __ptext39:
  8786                           	opt callstack 0
  8787  003EA6                     _interrupt_enable:
  8788                           	opt callstack 0
  8789  003EA6  FFFF               	dw	65535	; assembler added errata NOP
  8790                           
  8791                           ;serial.c: 16:   INTCONbits.GIE = 1;
  8792                           
  8793                           ;incstack = 0
  8794  003EA8  8EF2               	bsf	4082,7,c	;volatile
  8795                           
  8796                           ;serial.c: 17:   INTCONbits.PEIE = 1;
  8797  003EAA  8CF2               	bsf	4082,6,c	;volatile
  8798                           
  8799                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
  8800  003EAC  8AF2               	bsf	4082,5,c	;volatile
  8801                           
  8802                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
  8803  003EAE  84F1               	bsf	4081,2,c	;volatile
  8804                           
  8805                           ;serial.c: 20:   RCONbits.IPEN = 1;
  8806  003EB0  8ED0               	bsf	4048,7,c	;volatile
  8807  003EB2  0012               	return		;funcret
  8808  003EB4  FFFF               	dw	65535	; errata NOP
  8809  003EB6                     __end_of_interrupt_enable:
  8810                           	opt callstack 0
  8811                           
  8812 ;; *************** function _initialize_TX *****************
  8813 ;; Defined at:
  8814 ;;		line 23 in file "serial.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8828 ;;      Params:         0       0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    2
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_main
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text40
  8843  003E6C                     __ptext40:
  8844                           	opt callstack 0
  8845  003E6C                     _initialize_TX:
  8846                           	opt callstack 0
  8847  003E6C  FFFF               	dw	65535	; assembler added errata NOP
  8848                           
  8849                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  8850                           
  8851                           ;incstack = 0
  8852  003E6E  8CAC               	bsf	4012,6,c	;volatile
  8853                           
  8854                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  8855  003E70  8AAC               	bsf	4012,5,c	;volatile
  8856                           
  8857                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  8858  003E72  98AC               	bcf	4012,4,c	;volatile
  8859                           
  8860                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  8861  003E74  94AC               	bcf	4012,2,c	;volatile
  8862                           
  8863                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  8864  003E76  80AC               	bsf	4012,0,c	;volatile
  8865                           
  8866                           ;serial.c: 29:   SPBRG = 25;
  8867  003E78  0E19               	movlw	25
  8868  003E7A  6EAF               	movwf	4015,c	;volatile
  8869  003E7C  0012               	return		;funcret
  8870  003E7E  FFFF               	dw	65535	; errata NOP
  8871  003E80                     __end_of_initialize_TX:
  8872                           	opt callstack 0
  8873                           
  8874 ;; *************** function _initialize_RX *****************
  8875 ;; Defined at:
  8876 ;;		line 32 in file "serial.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8890 ;;      Params:         0       0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    2
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_main
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text41
  8905  003E80                     __ptext41:
  8906                           	opt callstack 0
  8907  003E80                     _initialize_RX:
  8908                           	opt callstack 0
  8909  003E80  FFFF               	dw	65535	; assembler added errata NOP
  8910                           
  8911                           ;serial.c: 33:   RCSTA = 0x00;
  8912                           
  8913                           ;incstack = 0
  8914  003E82  0E00               	movlw	0
  8915  003E84  6EAB               	movwf	4011,c	;volatile
  8916                           
  8917                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  8918  003E86  8EAB               	bsf	4011,7,c	;volatile
  8919                           
  8920                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  8921  003E88  8CAB               	bsf	4011,6,c	;volatile
  8922                           
  8923                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  8924  003E8A  88AB               	bsf	4011,4,c	;volatile
  8925                           
  8926                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  8927  003E8C  96AB               	bcf	4011,3,c	;volatile
  8928                           
  8929                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  8930  003E8E  80AB               	bsf	4011,0,c	;volatile
  8931  003E90  0012               	return		;funcret
  8932  003E92  FFFF               	dw	65535	; errata NOP
  8933  003E94                     __end_of_initialize_RX:
  8934                           	opt callstack 0
  8935                           
  8936 ;; *************** function _get_temp *****************
  8937 ;; Defined at:
  8938 ;;		line 10 in file "temp_adc.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  temp            4   55[COMRAM] float 
  8943 ;;  real_voltage    4   51[COMRAM] float 
  8944 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  4   47[COMRAM] float 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8954 ;;      Params:         4       0       0       0       0       0       0
  8955 ;;      Locals:        10       0       0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0
  8957 ;;      Totals:        14       0       0       0       0       0       0
  8958 ;;Total ram usage:       14 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    4
  8961 ;; This function calls:
  8962 ;;		_ADC_Init
  8963 ;;		_ADC_Read
  8964 ;;		___flmul
  8965 ;;		___flsub
  8966 ;;		___xxtofl
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text42
  8973  0033D2                     __ptext42:
  8974                           	opt callstack 0
  8975  0033D2                     _get_temp:
  8976                           	opt callstack 0
  8977  0033D2  FFFF               	dw	65535	; assembler added errata NOP
  8978                           
  8979                           ;temp_adc.c: 11:   ADC_Init();
  8980                           
  8981                           ;incstack = 0
  8982  0033D4  EC5B  F01F         	call	_ADC_Init	;wreg free
  8983                           
  8984                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  8985  0033D8  90C1               	bcf	4033,0,c	;volatile
  8986                           
  8987                           ;temp_adc.c: 13:   TRISA |= 0x01;
  8988  0033DA  8092               	bsf	3986,0,c	;volatile
  8989                           
  8990                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  8991  0033DC  0E00               	movlw	0
  8992  0033DE  EC3A  F01D         	call	_ADC_Read
  8993  0033E2  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  8994  0033E6  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  8995                           
  8996                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  8997  0033EA  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  8998  0033EE  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  8999  0033F2  6A03               	clrf	___xxtofl@val+2,c
  9000  0033F4  6A04               	clrf	___xxtofl@val+3,c
  9001  0033F6  0E00               	movlw	0
  9002  0033F8  EC7F  F016         	call	___xxtofl
  9003  0033FC  C001  F00F         	movff	?___xxtofl,___flmul@b
  9004  003400  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  9005  003404  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  9006  003408  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  9007  00340C  0E9F               	movlw	159
  9008  00340E  6E13               	movwf	___flmul@a,c
  9009  003410  0EAB               	movlw	171
  9010  003412  6E14               	movwf	___flmul@a+1,c
  9011  003414  0EAD               	movlw	173
  9012  003416  6E15               	movwf	___flmul@a+2,c
  9013  003418  0E3B               	movlw	59
  9014  00341A  6E16               	movwf	___flmul@a+3,c
  9015  00341C  EC49  F00C         	call	___flmul	;wreg free
  9016  003420  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  9017  003424  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  9018  003428  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  9019  00342C  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  9020                           
  9021                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  9022  003430  0E00               	movlw	0
  9023  003432  6E28               	movwf	___flsub@b,c
  9024  003434  0E00               	movlw	0
  9025  003436  6E29               	movwf	___flsub@b+1,c
  9026  003438  0E48               	movlw	72
  9027  00343A  6E2A               	movwf	___flsub@b+2,c
  9028  00343C  0E43               	movlw	67
  9029  00343E  6E2B               	movwf	___flsub@b+3,c
  9030  003440  0E00               	movlw	0
  9031  003442  6E13               	movwf	___flmul@a,c
  9032  003444  0E00               	movlw	0
  9033  003446  6E14               	movwf	___flmul@a+1,c
  9034  003448  0E0C               	movlw	12
  9035  00344A  6E15               	movwf	___flmul@a+2,c
  9036  00344C  0E42               	movlw	66
  9037  00344E  6E16               	movwf	___flmul@a+3,c
  9038  003450  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  9039  003454  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  9040  003458  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  9041  00345C  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  9042  003460  EC49  F00C         	call	___flmul	;wreg free
  9043  003464  C00F  F02C         	movff	?___flmul,___flsub@a
  9044  003468  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  9045  00346C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  9046  003470  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  9047  003474  EC64  F01D         	call	___flsub	;wreg free
  9048  003478  C028  F038         	movff	?___flsub,get_temp@temp
  9049  00347C  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  9050  003480  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  9051  003484  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  9052                           
  9053                           ;temp_adc.c: 18:   return temp;
  9054  003488  C038  F030         	movff	get_temp@temp,?_get_temp
  9055  00348C  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  9056  003490  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  9057  003494  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  9058  003498  0012               	return		;funcret
  9059  00349A  FFFF               	dw	65535	; errata NOP
  9060  00349C                     __end_of_get_temp:
  9061                           	opt callstack 0
  9062                           
  9063 ;; *************** function ___xxtofl *****************
  9064 ;; Defined at:
  9065 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  sign            1    wreg     unsigned char 
  9068 ;;  val             4    0[COMRAM] long 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  sign            1    8[COMRAM] unsigned char 
  9071 ;;  arg             4   10[COMRAM] unsigned long 
  9072 ;;  exp             1    9[COMRAM] unsigned char 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  4    0[COMRAM] unsigned char 
  9075 ;; Registers used:
  9076 ;;		wreg, status,2, status,0
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9082 ;;      Params:         4       0       0       0       0       0       0
  9083 ;;      Locals:         6       0       0       0       0       0       0
  9084 ;;      Temps:          4       0       0       0       0       0       0
  9085 ;;      Totals:        14       0       0       0       0       0       0
  9086 ;;Total ram usage:       14 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; Hardware stack levels required when called:    2
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_get_temp
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text43
  9097  002CFE                     __ptext43:
  9098                           	opt callstack 0
  9099  002CFE                     ___xxtofl:
  9100                           	opt callstack 0
  9101  002CFE  FFFF               	dw	65535	; assembler added errata NOP
  9102                           
  9103                           ;incstack = 0
  9104                           ;___xxtofl@sign stored from wreg
  9105  002D00  6E09               	movwf	___xxtofl@sign,c
  9106  002D02  5009               	movf	___xxtofl@sign,w,c
  9107  002D04  A4D8               	btfss	status,2,c
  9108  002D06  AE04               	btfss	___xxtofl@val+3,7,c
  9109  002D08  D01A               	goto	l1239
  9110  002D0A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9111  002D0E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9112  002D12  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9113  002D16  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9114  002D1A  1E05               	comf	??___xxtofl,f,c
  9115  002D1C  1E06               	comf	??___xxtofl+1,f,c
  9116  002D1E  1E07               	comf	??___xxtofl+2,f,c
  9117  002D20  1E08               	comf	??___xxtofl+3,f,c
  9118  002D22  2A05               	incf	??___xxtofl,f,c
  9119  002D24  0E00               	movlw	0
  9120  002D26  2206               	addwfc	??___xxtofl+1,f,c
  9121  002D28  2207               	addwfc	??___xxtofl+2,f,c
  9122  002D2A  2208               	addwfc	??___xxtofl+3,f,c
  9123  002D2C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9124  002D30  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9125  002D34  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9126  002D38  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9127  002D3C  D009               	goto	l4810
  9128  002D3E                     l1239:
  9129  002D3E  FFFF               	dw	65535	; assembler added errata NOP
  9130  002D40  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9131  002D44  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9132  002D48  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9133  002D4C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9134  002D50                     l4810:
  9135  002D50  FFFF               	dw	65535	; assembler added errata NOP
  9136  002D52  5001               	movf	___xxtofl@val,w,c
  9137  002D54  1002               	iorwf	___xxtofl@val+1,w,c
  9138  002D56  1003               	iorwf	___xxtofl@val+2,w,c
  9139  002D58  1004               	iorwf	___xxtofl@val+3,w,c
  9140  002D5A  A4D8               	btfss	status,2,c
  9141  002D5C  D009               	goto	l4816
  9142  002D5E  0E00               	movlw	0
  9143  002D60  6E01               	movwf	?___xxtofl,c
  9144  002D62  0E00               	movlw	0
  9145  002D64  6E02               	movwf	?___xxtofl+1,c
  9146  002D66  0E00               	movlw	0
  9147  002D68  6E03               	movwf	?___xxtofl+2,c
  9148  002D6A  0E00               	movlw	0
  9149  002D6C  6E04               	movwf	?___xxtofl+3,c
  9150  002D6E  D072               	goto	l1242
  9151  002D70                     l4816:
  9152  002D70  FFFF               	dw	65535	; assembler added errata NOP
  9153  002D72  0E96               	movlw	150
  9154  002D74  6E0A               	movwf	___xxtofl@exp,c
  9155  002D76  D007               	goto	l4820
  9156  002D78                     l4818:
  9157  002D78  FFFF               	dw	65535	; assembler added errata NOP
  9158  002D7A  2A0A               	incf	___xxtofl@exp,f,c
  9159  002D7C  90D8               	bcf	status,0,c
  9160  002D7E  320E               	rrcf	___xxtofl@arg+3,f,c
  9161  002D80  320D               	rrcf	___xxtofl@arg+2,f,c
  9162  002D82  320C               	rrcf	___xxtofl@arg+1,f,c
  9163  002D84  320B               	rrcf	___xxtofl@arg,f,c
  9164  002D86                     l4820:
  9165  002D86  FFFF               	dw	65535	; assembler added errata NOP
  9166  002D88  0E00               	movlw	0
  9167  002D8A  140B               	andwf	___xxtofl@arg,w,c
  9168  002D8C  6E05               	movwf	??___xxtofl& (0+255),c
  9169  002D8E  0E00               	movlw	0
  9170  002D90  140C               	andwf	___xxtofl@arg+1,w,c
  9171  002D92  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9172  002D94  0E00               	movlw	0
  9173  002D96  140D               	andwf	___xxtofl@arg+2,w,c
  9174  002D98  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9175  002D9A  0EFE               	movlw	254
  9176  002D9C  140E               	andwf	___xxtofl@arg+3,w,c
  9177  002D9E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9178  002DA0  5005               	movf	??___xxtofl,w,c
  9179  002DA2  1006               	iorwf	??___xxtofl+1,w,c
  9180  002DA4  1007               	iorwf	??___xxtofl+2,w,c
  9181  002DA6  1008               	iorwf	??___xxtofl+3,w,c
  9182  002DA8  B4D8               	btfsc	status,2,c
  9183  002DAA  D00E               	goto	l1246
  9184  002DAC  D7E5               	goto	l4818
  9185  002DAE                     l4822:
  9186  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  9187  002DB0  2A0A               	incf	___xxtofl@exp,f,c
  9188  002DB2  0E01               	movlw	1
  9189  002DB4  260B               	addwf	___xxtofl@arg,f,c
  9190  002DB6  0E00               	movlw	0
  9191  002DB8  220C               	addwfc	___xxtofl@arg+1,f,c
  9192  002DBA  220D               	addwfc	___xxtofl@arg+2,f,c
  9193  002DBC  220E               	addwfc	___xxtofl@arg+3,f,c
  9194  002DBE  90D8               	bcf	status,0,c
  9195  002DC0  320E               	rrcf	___xxtofl@arg+3,f,c
  9196  002DC2  320D               	rrcf	___xxtofl@arg+2,f,c
  9197  002DC4  320C               	rrcf	___xxtofl@arg+1,f,c
  9198  002DC6  320B               	rrcf	___xxtofl@arg,f,c
  9199  002DC8                     l1246:
  9200  002DC8  FFFF               	dw	65535	; assembler added errata NOP
  9201  002DCA  0E00               	movlw	0
  9202  002DCC  140B               	andwf	___xxtofl@arg,w,c
  9203  002DCE  6E05               	movwf	??___xxtofl& (0+255),c
  9204  002DD0  0E00               	movlw	0
  9205  002DD2  140C               	andwf	___xxtofl@arg+1,w,c
  9206  002DD4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  9207  002DD6  0E00               	movlw	0
  9208  002DD8  140D               	andwf	___xxtofl@arg+2,w,c
  9209  002DDA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  9210  002DDC  0EFF               	movlw	255
  9211  002DDE  140E               	andwf	___xxtofl@arg+3,w,c
  9212  002DE0  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  9213  002DE2  5005               	movf	??___xxtofl,w,c
  9214  002DE4  1006               	iorwf	??___xxtofl+1,w,c
  9215  002DE6  1007               	iorwf	??___xxtofl+2,w,c
  9216  002DE8  1008               	iorwf	??___xxtofl+3,w,c
  9217  002DEA  B4D8               	btfsc	status,2,c
  9218  002DEC  D008               	goto	l4830
  9219  002DEE  D7DF               	goto	l4822
  9220  002DF0                     l4828:
  9221  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  9222  002DF2  060A               	decf	___xxtofl@exp,f,c
  9223  002DF4  90D8               	bcf	status,0,c
  9224  002DF6  360B               	rlcf	___xxtofl@arg,f,c
  9225  002DF8  360C               	rlcf	___xxtofl@arg+1,f,c
  9226  002DFA  360D               	rlcf	___xxtofl@arg+2,f,c
  9227  002DFC  360E               	rlcf	___xxtofl@arg+3,f,c
  9228  002DFE                     l4830:
  9229  002DFE  FFFF               	dw	65535	; assembler added errata NOP
  9230  002E00  BE0D               	btfsc	___xxtofl@arg+2,7,c
  9231  002E02  D003               	goto	u5170
  9232  002E04  0E02               	movlw	2
  9233  002E06  600A               	cpfslt	___xxtofl@exp,c
  9234  002E08  D7F3               	goto	l4828
  9235  002E0A                     u5170:
  9236  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  9237  002E0C  A00A               	btfss	___xxtofl@exp,0,c
  9238  002E0E  9E0D               	bcf	___xxtofl@arg+2,7,c
  9239  002E10  90D8               	bcf	status,0,c
  9240  002E12  320A               	rrcf	___xxtofl@exp,f,c
  9241  002E14  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9242  002E18  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  9243  002E1A  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  9244  002E1C  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  9245  002E1E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9246  002E22  6A07               	clrf	??___xxtofl+2,c
  9247  002E24  6A06               	clrf	??___xxtofl+1,c
  9248  002E26  6A05               	clrf	??___xxtofl,c
  9249  002E28  5005               	movf	??___xxtofl,w,c
  9250  002E2A  120B               	iorwf	___xxtofl@arg,f,c
  9251  002E2C  5006               	movf	??___xxtofl+1,w,c
  9252  002E2E  120C               	iorwf	___xxtofl@arg+1,f,c
  9253  002E30  5007               	movf	??___xxtofl+2,w,c
  9254  002E32  120D               	iorwf	___xxtofl@arg+2,f,c
  9255  002E34  5008               	movf	??___xxtofl+3,w,c
  9256  002E36  120E               	iorwf	___xxtofl@arg+3,f,c
  9257  002E38  5009               	movf	___xxtofl@sign,w,c
  9258  002E3A  A4D8               	btfss	status,2,c
  9259  002E3C  AE04               	btfss	___xxtofl@val+3,7,c
  9260  002E3E  D001               	goto	l4846
  9261  002E40  8E0E               	bsf	___xxtofl@arg+3,7,c
  9262  002E42                     l4846:
  9263  002E42  FFFF               	dw	65535	; assembler added errata NOP
  9264  002E44  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9265  002E48  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9266  002E4C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9267  002E50  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9268  002E54                     l1242:
  9269  002E54  FFFF               	dw	65535	; assembler added errata NOP
  9270  002E56  0012               	return		;funcret
  9271  002E58  FFFF               	dw	65535	; errata NOP
  9272  002E5A                     __end_of___xxtofl:
  9273                           	opt callstack 0
  9274                           
  9275 ;; *************** function ___flsub *****************
  9276 ;; Defined at:
  9277 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  b               4   39[COMRAM] unsigned char 
  9280 ;;  a               4   43[COMRAM] unsigned char 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  4   39[COMRAM] unsigned char 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9292 ;;      Params:         8       0       0       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0
  9295 ;;      Totals:         8       0       0       0       0       0       0
  9296 ;;Total ram usage:        8 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    3
  9299 ;; This function calls:
  9300 ;;		___fladd
  9301 ;; This function is called by:
  9302 ;;		_get_temp
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text44
  9307  003AC8                     __ptext44:
  9308                           	opt callstack 0
  9309  003AC8                     ___flsub:
  9310                           	opt callstack 0
  9311  003AC8  FFFF               	dw	65535	; assembler added errata NOP
  9312                           
  9313                           ;incstack = 0
  9314  003ACA  0E00               	movlw	0
  9315  003ACC  1A2C               	xorwf	___flsub@a,f,c
  9316  003ACE  0E00               	movlw	0
  9317  003AD0  1A2D               	xorwf	___flsub@a+1,f,c
  9318  003AD2  0E00               	movlw	0
  9319  003AD4  1A2E               	xorwf	___flsub@a+2,f,c
  9320  003AD6  0E80               	movlw	128
  9321  003AD8  1A2F               	xorwf	___flsub@a+3,f,c
  9322  003ADA  C028  F001         	movff	___flsub@b,___fladd@b
  9323  003ADE  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  9324  003AE2  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  9325  003AE6  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  9326  003AEA  C02C  F005         	movff	___flsub@a,___fladd@a
  9327  003AEE  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  9328  003AF2  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  9329  003AF6  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  9330  003AFA  EC0A  F00E         	call	___fladd	;wreg free
  9331  003AFE  C001  F028         	movff	?___fladd,?___flsub
  9332  003B02  C002  F029         	movff	?___fladd+1,?___flsub+1
  9333  003B06  C003  F02A         	movff	?___fladd+2,?___flsub+2
  9334  003B0A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  9335  003B0E  0012               	return		;funcret
  9336  003B10  FFFF               	dw	65535	; errata NOP
  9337  003B12                     __end_of___flsub:
  9338                           	opt callstack 0
  9339                           
  9340 ;; *************** function ___fladd *****************
  9341 ;; Defined at:
  9342 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  b               4    0[COMRAM] unsigned char 
  9345 ;;  a               4    4[COMRAM] unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  grs             1   15[COMRAM] unsigned char 
  9348 ;;  bexp            1   14[COMRAM] unsigned char 
  9349 ;;  aexp            1   13[COMRAM] unsigned char 
  9350 ;;  signs           1   12[COMRAM] unsigned char 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  4    0[COMRAM] unsigned char 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9360 ;;      Params:         8       0       0       0       0       0       0
  9361 ;;      Locals:         4       0       0       0       0       0       0
  9362 ;;      Temps:          4       0       0       0       0       0       0
  9363 ;;      Totals:        16       0       0       0       0       0       0
  9364 ;;Total ram usage:       16 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    2
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		___flsub
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text45
  9375  001C14                     __ptext45:
  9376                           	opt callstack 0
  9377  001C14                     ___fladd:
  9378                           	opt callstack 0
  9379  001C14  FFFF               	dw	65535	; assembler added errata NOP
  9380                           
  9381                           ;incstack = 0
  9382  001C16  5004               	movf	___fladd@b+3,w,c
  9383  001C18  0B80               	andlw	128
  9384  001C1A  6E0D               	movwf	___fladd@signs,c
  9385  001C1C  5004               	movf	___fladd@b+3,w,c
  9386  001C1E  2404               	addwf	___fladd@b+3,w,c
  9387  001C20  6E0F               	movwf	___fladd@bexp,c
  9388  001C22  BE03               	btfsc	___fladd@b+2,7,c
  9389  001C24  800F               	bsf	___fladd@bexp,0,c
  9390  001C26  500F               	movf	___fladd@bexp,w,c
  9391  001C28  B4D8               	btfsc	status,2,c
  9392  001C2A  D00E               	goto	l4392
  9393  001C2C  280F               	incf	___fladd@bexp,w,c
  9394  001C2E  A4D8               	btfss	status,2,c
  9395  001C30  D008               	goto	l4388
  9396  001C32  0E00               	movlw	0
  9397  001C34  6E01               	movwf	___fladd@b,c
  9398  001C36  0E00               	movlw	0
  9399  001C38  6E02               	movwf	___fladd@b+1,c
  9400  001C3A  0E00               	movlw	0
  9401  001C3C  6E03               	movwf	___fladd@b+2,c
  9402  001C3E  0E00               	movlw	0
  9403  001C40  6E04               	movwf	___fladd@b+3,c
  9404  001C42                     l4388:
  9405  001C42  FFFF               	dw	65535	; assembler added errata NOP
  9406  001C44  8E03               	bsf	___fladd@b+2,7,c
  9407  001C46  D007               	goto	L23
  9408  001C48                     l4392:
  9409  001C48  FFFF               	dw	65535	; assembler added errata NOP
  9410  001C4A  0E00               	movlw	0
  9411  001C4C  6E01               	movwf	___fladd@b,c
  9412  001C4E  0E00               	movlw	0
  9413  001C50  6E02               	movwf	___fladd@b+1,c
  9414  001C52  0E00               	movlw	0
  9415  001C54  6E03               	movwf	___fladd@b+2,c
  9416  001C56                     L23:
  9417  001C56  FFFF               	dw	65535	; assembler added errata NOP
  9418  001C58  0E00               	movlw	0
  9419  001C5A  6E04               	movwf	___fladd@b+3,c
  9420  001C5C  5008               	movf	___fladd@a+3,w,c
  9421  001C5E  0B80               	andlw	128
  9422  001C60  6E0E               	movwf	___fladd@aexp,c
  9423  001C62  500D               	movf	___fladd@signs,w,c
  9424  001C64  180E               	xorwf	___fladd@aexp,w,c
  9425  001C66  A4D8               	btfss	status,2,c
  9426  001C68  8C0D               	bsf	___fladd@signs,6,c
  9427  001C6A  5008               	movf	___fladd@a+3,w,c
  9428  001C6C  2408               	addwf	___fladd@a+3,w,c
  9429  001C6E  6E0E               	movwf	___fladd@aexp,c
  9430  001C70  BE07               	btfsc	___fladd@a+2,7,c
  9431  001C72  800E               	bsf	___fladd@aexp,0,c
  9432  001C74  500E               	movf	___fladd@aexp,w,c
  9433  001C76  B4D8               	btfsc	status,2,c
  9434  001C78  D00E               	goto	l4416
  9435  001C7A  280E               	incf	___fladd@aexp,w,c
  9436  001C7C  A4D8               	btfss	status,2,c
  9437  001C7E  D008               	goto	l4412
  9438  001C80  0E00               	movlw	0
  9439  001C82  6E05               	movwf	___fladd@a,c
  9440  001C84  0E00               	movlw	0
  9441  001C86  6E06               	movwf	___fladd@a+1,c
  9442  001C88  0E00               	movlw	0
  9443  001C8A  6E07               	movwf	___fladd@a+2,c
  9444  001C8C  0E00               	movlw	0
  9445  001C8E  6E08               	movwf	___fladd@a+3,c
  9446  001C90                     l4412:
  9447  001C90  FFFF               	dw	65535	; assembler added errata NOP
  9448  001C92  8E07               	bsf	___fladd@a+2,7,c
  9449  001C94  D007               	goto	L24
  9450  001C96                     l4416:
  9451  001C96  FFFF               	dw	65535	; assembler added errata NOP
  9452  001C98  0E00               	movlw	0
  9453  001C9A  6E05               	movwf	___fladd@a,c
  9454  001C9C  0E00               	movlw	0
  9455  001C9E  6E06               	movwf	___fladd@a+1,c
  9456  001CA0  0E00               	movlw	0
  9457  001CA2  6E07               	movwf	___fladd@a+2,c
  9458  001CA4                     L24:
  9459  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  9460  001CA6  0E00               	movlw	0
  9461  001CA8  6E08               	movwf	___fladd@a+3,c
  9462  001CAA  500F               	movf	___fladd@bexp,w,c
  9463  001CAC  5C0E               	subwf	___fladd@aexp,w,c
  9464  001CAE  B0D8               	btfsc	status,0,c
  9465  001CB0  D023               	goto	l4454
  9466  001CB2  AC0D               	btfss	___fladd@signs,6,c
  9467  001CB4  D002               	goto	l4424
  9468  001CB6  0E80               	movlw	128
  9469  001CB8  1A0D               	xorwf	___fladd@signs,f,c
  9470  001CBA                     l4424:
  9471  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  9472  001CBC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9473  001CC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9474  001CC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9475  001CC8  C001  F010         	movff	___fladd@b,___fladd@grs
  9476  001CCC  C005  F001         	movff	___fladd@a,___fladd@b
  9477  001CD0  C010  F005         	movff	___fladd@grs,___fladd@a
  9478  001CD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9479  001CD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9480  001CDC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9481  001CE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9482  001CE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9483  001CE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9484  001CEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9485  001CF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9486  001CF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9487  001CF8                     l4454:
  9488  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  9489  001CFA  0E00               	movlw	0
  9490  001CFC  6E10               	movwf	___fladd@grs,c
  9491  001CFE  500F               	movf	___fladd@bexp,w,c
  9492  001D00  C00E  F009         	movff	___fladd@aexp,??___fladd
  9493  001D04  6A0A               	clrf	(??___fladd+1)& (0+255),c
  9494  001D06  5E09               	subwf	??___fladd,f,c
  9495  001D08  0E00               	movlw	0
  9496  001D0A  5A0A               	subwfb	??___fladd+1,f,c
  9497  001D0C  BE0A               	btfsc	??___fladd+1,7,c
  9498  001D0E  D031               	goto	l1113
  9499  001D10  500A               	movf	??___fladd+1,w,c
  9500  001D12  E104               	bnz	u4530
  9501  001D14  0E1A               	movlw	26
  9502  001D16  5C09               	subwf	??___fladd,w,c
  9503  001D18  A0D8               	btfss	status,0,c
  9504  001D1A  D02B               	goto	l1113
  9505  001D1C                     u4530:
  9506  001D1C  5001               	movf	___fladd@b,w,c
  9507  001D1E  1002               	iorwf	___fladd@b+1,w,c
  9508  001D20  1003               	iorwf	___fladd@b+2,w,c
  9509  001D22  1004               	iorwf	___fladd@b+3,w,c
  9510  001D24  B4D8               	btfsc	status,2,c
  9511  001D26  D002               	goto	u4540
  9512  001D28  0E01               	movlw	1
  9513  001D2A  D002               	goto	u4550
  9514  001D2C                     u4540:
  9515  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  9516  001D2E  0E00               	movlw	0
  9517  001D30                     u4550:
  9518  001D30  FFFF               	dw	65535	; assembler added errata NOP
  9519  001D32  6E10               	movwf	___fladd@grs,c
  9520  001D34  0E00               	movlw	0
  9521  001D36  6E01               	movwf	___fladd@b,c
  9522  001D38  0E00               	movlw	0
  9523  001D3A  6E02               	movwf	___fladd@b+1,c
  9524  001D3C  0E00               	movlw	0
  9525  001D3E  6E03               	movwf	___fladd@b+2,c
  9526  001D40  0E00               	movlw	0
  9527  001D42  6E04               	movwf	___fladd@b+3,c
  9528  001D44  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9529  001D48  D019               	goto	u4580
  9530  001D4A                     l1114:
  9531  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  9532  001D4C  A010               	btfss	___fladd@grs,0,c
  9533  001D4E  D005               	goto	l4466
  9534  001D50  90D8               	bcf	status,0,c
  9535  001D52  3010               	rrcf	___fladd@grs,w,c
  9536  001D54  0901               	iorlw	1
  9537  001D56  6E10               	movwf	___fladd@grs,c
  9538  001D58  D003               	goto	l4468
  9539  001D5A                     l4466:
  9540  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  9541  001D5C  90D8               	bcf	status,0,c
  9542  001D5E  3210               	rrcf	___fladd@grs,f,c
  9543  001D60                     l4468:
  9544  001D60  FFFF               	dw	65535	; assembler added errata NOP
  9545  001D62  B001               	btfsc	___fladd@b,0,c
  9546  001D64  8E10               	bsf	___fladd@grs,7,c
  9547  001D66  3404               	rlcf	___fladd@b+3,w,c
  9548  001D68  3204               	rrcf	___fladd@b+3,f,c
  9549  001D6A  3203               	rrcf	___fladd@b+2,f,c
  9550  001D6C  3202               	rrcf	___fladd@b+1,f,c
  9551  001D6E  3201               	rrcf	___fladd@b,f,c
  9552  001D70  2A0F               	incf	___fladd@bexp,f,c
  9553  001D72                     l1113:
  9554  001D72  FFFF               	dw	65535	; assembler added errata NOP
  9555  001D74  500E               	movf	___fladd@aexp,w,c
  9556  001D76  5C0F               	subwf	___fladd@bexp,w,c
  9557  001D78  A0D8               	btfss	status,0,c
  9558  001D7A  D7E7               	goto	l1114
  9559  001D7C                     u4580:
  9560  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  9561  001D7E  BC0D               	btfsc	___fladd@signs,6,c
  9562  001D80  D021               	goto	l4500
  9563  001D82  500F               	movf	___fladd@bexp,w,c
  9564  001D84  B4D8               	btfsc	status,2,c
  9565  001D86  D065               	goto	u4670
  9566  001D88  5005               	movf	___fladd@a,w,c
  9567  001D8A  2601               	addwf	___fladd@b,f,c
  9568  001D8C  5006               	movf	___fladd@a+1,w,c
  9569  001D8E  2202               	addwfc	___fladd@b+1,f,c
  9570  001D90  5007               	movf	___fladd@a+2,w,c
  9571  001D92  2203               	addwfc	___fladd@b+2,f,c
  9572  001D94  5008               	movf	___fladd@a+3,w,c
  9573  001D96  2204               	addwfc	___fladd@b+3,f,c
  9574  001D98  A004               	btfss	___fladd@b+3,0,c
  9575  001D9A  D07B               	goto	u4710
  9576  001D9C  A010               	btfss	___fladd@grs,0,c
  9577  001D9E  D005               	goto	l4490
  9578  001DA0  90D8               	bcf	status,0,c
  9579  001DA2  3010               	rrcf	___fladd@grs,w,c
  9580  001DA4  0901               	iorlw	1
  9581  001DA6  6E10               	movwf	___fladd@grs,c
  9582  001DA8  D003               	goto	l4492
  9583  001DAA                     l4490:
  9584  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  9585  001DAC  90D8               	bcf	status,0,c
  9586  001DAE  3210               	rrcf	___fladd@grs,f,c
  9587  001DB0                     l4492:
  9588  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  9589  001DB2  B001               	btfsc	___fladd@b,0,c
  9590  001DB4  8E10               	bsf	___fladd@grs,7,c
  9591  001DB6  3404               	rlcf	___fladd@b+3,w,c
  9592  001DB8  3204               	rrcf	___fladd@b+3,f,c
  9593  001DBA  3203               	rrcf	___fladd@b+2,f,c
  9594  001DBC  3202               	rrcf	___fladd@b+1,f,c
  9595  001DBE  3201               	rrcf	___fladd@b,f,c
  9596  001DC0  2A0F               	incf	___fladd@bexp,f,c
  9597  001DC2  D067               	goto	u4710
  9598  001DC4                     l4500:
  9599  001DC4  FFFF               	dw	65535	; assembler added errata NOP
  9600  001DC6  5005               	movf	___fladd@a,w,c
  9601  001DC8  5C01               	subwf	___fladd@b,w,c
  9602  001DCA  5006               	movf	___fladd@a+1,w,c
  9603  001DCC  5802               	subwfb	___fladd@b+1,w,c
  9604  001DCE  5007               	movf	___fladd@a+2,w,c
  9605  001DD0  5803               	subwfb	___fladd@b+2,w,c
  9606  001DD2  5004               	movf	___fladd@b+3,w,c
  9607  001DD4  0A80               	xorlw	128
  9608  001DD6  6E09               	movwf	??___fladd& (0+255),c
  9609  001DD8  5008               	movf	___fladd@a+3,w,c
  9610  001DDA  0A80               	xorlw	128
  9611  001DDC  5809               	subwfb	??___fladd& (0+255),w,c
  9612  001DDE  B0D8               	btfsc	status,0,c
  9613  001DE0  D025               	goto	l4510
  9614  001DE2  5001               	movf	___fladd@b,w,c
  9615  001DE4  5C05               	subwf	___fladd@a,w,c
  9616  001DE6  6E09               	movwf	??___fladd& (0+255),c
  9617  001DE8  5002               	movf	___fladd@b+1,w,c
  9618  001DEA  5806               	subwfb	___fladd@a+1,w,c
  9619  001DEC  6E0A               	movwf	(??___fladd+1)& (0+255),c
  9620  001DEE  5003               	movf	___fladd@b+2,w,c
  9621  001DF0  5807               	subwfb	___fladd@a+2,w,c
  9622  001DF2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  9623  001DF4  5004               	movf	___fladd@b+3,w,c
  9624  001DF6  5808               	subwfb	___fladd@a+3,w,c
  9625  001DF8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  9626  001DFA  0EFF               	movlw	255
  9627  001DFC  2409               	addwf	??___fladd,w,c
  9628  001DFE  6E01               	movwf	___fladd@b,c
  9629  001E00  0EFF               	movlw	255
  9630  001E02  200A               	addwfc	??___fladd+1,w,c
  9631  001E04  6E02               	movwf	___fladd@b+1,c
  9632  001E06  0EFF               	movlw	255
  9633  001E08  200B               	addwfc	??___fladd+2,w,c
  9634  001E0A  6E03               	movwf	___fladd@b+2,c
  9635  001E0C  0EFF               	movlw	255
  9636  001E0E  200C               	addwfc	??___fladd+3,w,c
  9637  001E10  6E04               	movwf	___fladd@b+3,c
  9638  001E12  0E80               	movlw	128
  9639  001E14  1A0D               	xorwf	___fladd@signs,f,c
  9640  001E16  6C10               	negf	___fladd@grs,c
  9641  001E18  5010               	movf	___fladd@grs,w,c
  9642  001E1A  A4D8               	btfss	status,2,c
  9643  001E1C  D010               	goto	l1129
  9644  001E1E  0E01               	movlw	1
  9645  001E20  2601               	addwf	___fladd@b,f,c
  9646  001E22  0E00               	movlw	0
  9647  001E24  2202               	addwfc	___fladd@b+1,f,c
  9648  001E26  2203               	addwfc	___fladd@b+2,f,c
  9649  001E28  2204               	addwfc	___fladd@b+3,f,c
  9650  001E2A  D009               	goto	l1129
  9651  001E2C                     l4510:
  9652  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  9653  001E2E  5005               	movf	___fladd@a,w,c
  9654  001E30  5E01               	subwf	___fladd@b,f,c
  9655  001E32  5006               	movf	___fladd@a+1,w,c
  9656  001E34  5A02               	subwfb	___fladd@b+1,f,c
  9657  001E36  5007               	movf	___fladd@a+2,w,c
  9658  001E38  5A03               	subwfb	___fladd@b+2,f,c
  9659  001E3A  5008               	movf	___fladd@a+3,w,c
  9660  001E3C  5A04               	subwfb	___fladd@b+3,f,c
  9661  001E3E                     l1129:
  9662  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  9663  001E40  5001               	movf	___fladd@b,w,c
  9664  001E42  1002               	iorwf	___fladd@b+1,w,c
  9665  001E44  1003               	iorwf	___fladd@b+2,w,c
  9666  001E46  1004               	iorwf	___fladd@b+3,w,c
  9667  001E48  A4D8               	btfss	status,2,c
  9668  001E4A  D020               	goto	l4534
  9669  001E4C  5010               	movf	___fladd@grs,w,c
  9670  001E4E  A4D8               	btfss	status,2,c
  9671  001E50  D01D               	goto	l4534
  9672  001E52                     u4670:
  9673  001E52  FFFF               	dw	65535	; assembler added errata NOP
  9674  001E54  0E00               	movlw	0
  9675  001E56  6E01               	movwf	?___fladd,c
  9676  001E58  0E00               	movlw	0
  9677  001E5A  6E02               	movwf	?___fladd+1,c
  9678  001E5C  0E00               	movlw	0
  9679  001E5E  6E03               	movwf	?___fladd+2,c
  9680  001E60  0E00               	movlw	0
  9681  001E62  6E04               	movwf	?___fladd+3,c
  9682  001E64  D076               	goto	l1121
  9683  001E66                     l4518:
  9684  001E66  FFFF               	dw	65535	; assembler added errata NOP
  9685  001E68  90D8               	bcf	status,0,c
  9686  001E6A  3601               	rlcf	___fladd@b,f,c
  9687  001E6C  3602               	rlcf	___fladd@b+1,f,c
  9688  001E6E  3603               	rlcf	___fladd@b+2,f,c
  9689  001E70  3604               	rlcf	___fladd@b+3,f,c
  9690  001E72  BE10               	btfsc	___fladd@grs,7,c
  9691  001E74  8001               	bsf	___fladd@b,0,c
  9692  001E76  A010               	btfss	___fladd@grs,0,c
  9693  001E78  D002               	goto	l4528
  9694  001E7A  80D8               	bsf	status,0,c
  9695  001E7C  D002               	goto	L25
  9696  001E7E                     l4528:
  9697  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  9698  001E80  90D8               	bcf	status,0,c
  9699  001E82                     L25:
  9700  001E82  FFFF               	dw	65535	; assembler added errata NOP
  9701  001E84  3610               	rlcf	___fladd@grs,f,c
  9702  001E86  500F               	movf	___fladd@bexp,w,c
  9703  001E88  A4D8               	btfss	status,2,c
  9704  001E8A  060F               	decf	___fladd@bexp,f,c
  9705  001E8C                     l4534:
  9706  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  9707  001E8E  AE03               	btfss	___fladd@b+2,7,c
  9708  001E90  D7EA               	goto	l4518
  9709  001E92                     u4710:
  9710  001E92  FFFF               	dw	65535	; assembler added errata NOP
  9711  001E94  0E00               	movlw	0
  9712  001E96  6E0E               	movwf	___fladd@aexp,c
  9713  001E98  AE10               	btfss	___fladd@grs,7,c
  9714  001E9A  D00D               	goto	l1138
  9715  001E9C  C010  F009         	movff	___fladd@grs,??___fladd
  9716  001EA0  0E7F               	movlw	127
  9717  001EA2  1609               	andwf	??___fladd,f,c
  9718  001EA4  B4D8               	btfsc	status,2,c
  9719  001EA6  D004               	goto	l1139
  9720  001EA8                     u4730:
  9721  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  9722  001EAA  0E01               	movlw	1
  9723  001EAC  6E0E               	movwf	___fladd@aexp,c
  9724  001EAE  D003               	goto	l1138
  9725  001EB0                     l1139:
  9726  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  9727  001EB2  B001               	btfsc	___fladd@b,0,c
  9728  001EB4  D7F9               	goto	u4730
  9729  001EB6                     l1138:
  9730  001EB6  FFFF               	dw	65535	; assembler added errata NOP
  9731  001EB8  500E               	movf	___fladd@aexp,w,c
  9732  001EBA  B4D8               	btfsc	status,2,c
  9733  001EBC  D020               	goto	l4554
  9734  001EBE  0E01               	movlw	1
  9735  001EC0  2601               	addwf	___fladd@b,f,c
  9736  001EC2  0E00               	movlw	0
  9737  001EC4  2202               	addwfc	___fladd@b+1,f,c
  9738  001EC6  2203               	addwfc	___fladd@b+2,f,c
  9739  001EC8  2204               	addwfc	___fladd@b+3,f,c
  9740  001ECA  A004               	btfss	___fladd@b+3,0,c
  9741  001ECC  D018               	goto	l4554
  9742  001ECE  C001  F009         	movff	___fladd@b,??___fladd
  9743  001ED2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9744  001ED6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9745  001EDA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9746  001EDE  340C               	rlcf	??___fladd+3,w,c
  9747  001EE0  320C               	rrcf	??___fladd+3,f,c
  9748  001EE2  320B               	rrcf	??___fladd+2,f,c
  9749  001EE4  320A               	rrcf	??___fladd+1,f,c
  9750  001EE6  3209               	rrcf	??___fladd,f,c
  9751  001EE8  C009  F001         	movff	??___fladd,___fladd@b
  9752  001EEC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9753  001EF0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9754  001EF4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9755  001EF8  280F               	incf	___fladd@bexp,w,c
  9756  001EFA  A4D8               	btfss	status,2,c
  9757  001EFC  2A0F               	incf	___fladd@bexp,f,c
  9758  001EFE                     l4554:
  9759  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  9760  001F00  280F               	incf	___fladd@bexp,w,c
  9761  001F02  B4D8               	btfsc	status,2,c
  9762  001F04  D003               	goto	u4790
  9763  001F06  500F               	movf	___fladd@bexp,w,c
  9764  001F08  A4D8               	btfss	status,2,c
  9765  001F0A  D00E               	goto	l4562
  9766  001F0C                     u4790:
  9767  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  9768  001F0E  0E00               	movlw	0
  9769  001F10  6E01               	movwf	___fladd@b,c
  9770  001F12  0E00               	movlw	0
  9771  001F14  6E02               	movwf	___fladd@b+1,c
  9772  001F16  0E00               	movlw	0
  9773  001F18  6E03               	movwf	___fladd@b+2,c
  9774  001F1A  0E00               	movlw	0
  9775  001F1C  6E04               	movwf	___fladd@b+3,c
  9776  001F1E  500F               	movf	___fladd@bexp,w,c
  9777  001F20  A4D8               	btfss	status,2,c
  9778  001F22  D002               	goto	l4562
  9779  001F24  0E00               	movlw	0
  9780  001F26  6E0D               	movwf	___fladd@signs,c
  9781  001F28                     l4562:
  9782  001F28  FFFF               	dw	65535	; assembler added errata NOP
  9783  001F2A  A00F               	btfss	___fladd@bexp,0,c
  9784  001F2C  D002               	goto	l4566
  9785  001F2E  8E03               	bsf	___fladd@b+2,7,c
  9786  001F30  D002               	goto	l4568
  9787  001F32                     l4566:
  9788  001F32  FFFF               	dw	65535	; assembler added errata NOP
  9789  001F34  9E03               	bcf	___fladd@b+2,7,c
  9790  001F36                     l4568:
  9791  001F36  FFFF               	dw	65535	; assembler added errata NOP
  9792  001F38  90D8               	bcf	status,0,c
  9793  001F3A  300F               	rrcf	___fladd@bexp,w,c
  9794  001F3C  6E04               	movwf	___fladd@b+3,c
  9795  001F3E  BE0D               	btfsc	___fladd@signs,7,c
  9796  001F40  8E04               	bsf	___fladd@b+3,7,c
  9797  001F42  C001  F001         	movff	___fladd@b,?___fladd
  9798  001F46  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9799  001F4A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9800  001F4E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9801  001F52                     l1121:
  9802  001F52  FFFF               	dw	65535	; assembler added errata NOP
  9803  001F54  0012               	return		;funcret
  9804  001F56  FFFF               	dw	65535	; errata NOP
  9805  001F58                     __end_of___fladd:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function ___flmul *****************
  9809 ;; Defined at:
  9810 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  b               4   14[COMRAM] unsigned char 
  9813 ;;  a               4   18[COMRAM] unsigned char 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  prod            4   33[COMRAM] struct .
  9816 ;;  grs             4   27[COMRAM] unsigned long 
  9817 ;;  temp            2   37[COMRAM] struct .
  9818 ;;  bexp            1   32[COMRAM] unsigned char 
  9819 ;;  aexp            1   31[COMRAM] unsigned char 
  9820 ;;  sign            1   26[COMRAM] unsigned char 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  4   14[COMRAM] unsigned char 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0, prodl, prodh
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9830 ;;      Params:         8       0       0       0       0       0       0
  9831 ;;      Locals:        13       0       0       0       0       0       0
  9832 ;;      Temps:          4       0       0       0       0       0       0
  9833 ;;      Totals:        25       0       0       0       0       0       0
  9834 ;;Total ram usage:       25 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; Hardware stack levels required when called:    2
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_get_temp
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text46
  9845  001892                     __ptext46:
  9846                           	opt callstack 0
  9847  001892                     ___flmul:
  9848                           	opt callstack 0
  9849  001892  FFFF               	dw	65535	; assembler added errata NOP
  9850                           
  9851                           ;incstack = 0
  9852  001894  5012               	movf	___flmul@b+3,w,c
  9853  001896  0B80               	andlw	128
  9854  001898  6E1B               	movwf	___flmul@sign,c
  9855  00189A  5012               	movf	___flmul@b+3,w,c
  9856  00189C  2412               	addwf	___flmul@b+3,w,c
  9857  00189E  6E21               	movwf	___flmul@bexp,c
  9858  0018A0  BE11               	btfsc	___flmul@b+2,7,c
  9859  0018A2  8021               	bsf	___flmul@bexp,0,c
  9860  0018A4  5021               	movf	___flmul@bexp,w,c
  9861  0018A6  B4D8               	btfsc	status,2,c
  9862  0018A8  D00E               	goto	l4682
  9863  0018AA  2821               	incf	___flmul@bexp,w,c
  9864  0018AC  A4D8               	btfss	status,2,c
  9865  0018AE  D008               	goto	l4680
  9866  0018B0  0E00               	movlw	0
  9867  0018B2  6E0F               	movwf	___flmul@b,c
  9868  0018B4  0E00               	movlw	0
  9869  0018B6  6E10               	movwf	___flmul@b+1,c
  9870  0018B8  0E00               	movlw	0
  9871  0018BA  6E11               	movwf	___flmul@b+2,c
  9872  0018BC  0E00               	movlw	0
  9873  0018BE  6E12               	movwf	___flmul@b+3,c
  9874  0018C0                     l4680:
  9875  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  9876  0018C2  8E11               	bsf	___flmul@b+2,7,c
  9877  0018C4  D009               	goto	l4684
  9878  0018C6                     l4682:
  9879  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  9880  0018C8  0E00               	movlw	0
  9881  0018CA  6E0F               	movwf	___flmul@b,c
  9882  0018CC  0E00               	movlw	0
  9883  0018CE  6E10               	movwf	___flmul@b+1,c
  9884  0018D0  0E00               	movlw	0
  9885  0018D2  6E11               	movwf	___flmul@b+2,c
  9886  0018D4  0E00               	movlw	0
  9887  0018D6  6E12               	movwf	___flmul@b+3,c
  9888  0018D8                     l4684:
  9889  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  9890  0018DA  5016               	movf	___flmul@a+3,w,c
  9891  0018DC  0B80               	andlw	128
  9892  0018DE  1A1B               	xorwf	___flmul@sign,f,c
  9893  0018E0  5016               	movf	___flmul@a+3,w,c
  9894  0018E2  2416               	addwf	___flmul@a+3,w,c
  9895  0018E4  6E20               	movwf	___flmul@aexp,c
  9896  0018E6  BE15               	btfsc	___flmul@a+2,7,c
  9897  0018E8  8020               	bsf	___flmul@aexp,0,c
  9898  0018EA  5020               	movf	___flmul@aexp,w,c
  9899  0018EC  B4D8               	btfsc	status,2,c
  9900  0018EE  D00E               	goto	l4700
  9901  0018F0  2820               	incf	___flmul@aexp,w,c
  9902  0018F2  A4D8               	btfss	status,2,c
  9903  0018F4  D008               	goto	l4698
  9904  0018F6  0E00               	movlw	0
  9905  0018F8  6E13               	movwf	___flmul@a,c
  9906  0018FA  0E00               	movlw	0
  9907  0018FC  6E14               	movwf	___flmul@a+1,c
  9908  0018FE  0E00               	movlw	0
  9909  001900  6E15               	movwf	___flmul@a+2,c
  9910  001902  0E00               	movlw	0
  9911  001904  6E16               	movwf	___flmul@a+3,c
  9912  001906                     l4698:
  9913  001906  FFFF               	dw	65535	; assembler added errata NOP
  9914  001908  8E15               	bsf	___flmul@a+2,7,c
  9915  00190A  D009               	goto	l1198
  9916  00190C                     l4700:
  9917  00190C  FFFF               	dw	65535	; assembler added errata NOP
  9918  00190E  0E00               	movlw	0
  9919  001910  6E13               	movwf	___flmul@a,c
  9920  001912  0E00               	movlw	0
  9921  001914  6E14               	movwf	___flmul@a+1,c
  9922  001916  0E00               	movlw	0
  9923  001918  6E15               	movwf	___flmul@a+2,c
  9924  00191A  0E00               	movlw	0
  9925  00191C  6E16               	movwf	___flmul@a+3,c
  9926  00191E                     l1198:
  9927  00191E  FFFF               	dw	65535	; assembler added errata NOP
  9928  001920  5020               	movf	___flmul@aexp,w,c
  9929  001922  B4D8               	btfsc	status,2,c
  9930  001924  D003               	goto	u4990
  9931  001926  5021               	movf	___flmul@bexp,w,c
  9932  001928  A4D8               	btfss	status,2,c
  9933  00192A  D00A               	goto	l4708
  9934  00192C                     u4990:
  9935  00192C  FFFF               	dw	65535	; assembler added errata NOP
  9936  00192E  0E00               	movlw	0
  9937  001930  6E0F               	movwf	?___flmul,c
  9938  001932  0E00               	movlw	0
  9939  001934  6E10               	movwf	?___flmul+1,c
  9940  001936  0E00               	movlw	0
  9941  001938  6E11               	movwf	?___flmul+2,c
  9942  00193A  0E00               	movlw	0
  9943  00193C  6E12               	movwf	?___flmul+3,c
  9944  00193E  D167               	goto	l1202
  9945  001940                     l4708:
  9946  001940  FFFF               	dw	65535	; assembler added errata NOP
  9947  001942  5015               	movf	___flmul@a+2,w,c
  9948  001944  020F               	mulwf	___flmul@b,c
  9949  001946  CFF3 F026          	movff	prodl,___flmul@temp
  9950  00194A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9951  00194E  5026               	movf	___flmul@temp,w,c
  9952  001950  6E1C               	movwf	___flmul@grs,c
  9953  001952  6A1D               	clrf	___flmul@grs+1,c
  9954  001954  6A1E               	clrf	___flmul@grs+2,c
  9955  001956  6A1F               	clrf	___flmul@grs+3,c
  9956  001958  5027               	movf	___flmul@temp+1,w,c
  9957  00195A  6E22               	movwf	___flmul@prod,c
  9958  00195C  6A23               	clrf	___flmul@prod+1,c
  9959  00195E  6A24               	clrf	___flmul@prod+2,c
  9960  001960  6A25               	clrf	___flmul@prod+3,c
  9961  001962  5014               	movf	___flmul@a+1,w,c
  9962  001964  0210               	mulwf	___flmul@b+1,c
  9963  001966  CFF3 F026          	movff	prodl,___flmul@temp
  9964  00196A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9965  00196E  5026               	movf	___flmul@temp,w,c
  9966  001970  261C               	addwf	___flmul@grs,f,c
  9967  001972  0E00               	movlw	0
  9968  001974  221D               	addwfc	___flmul@grs+1,f,c
  9969  001976  221E               	addwfc	___flmul@grs+2,f,c
  9970  001978  221F               	addwfc	___flmul@grs+3,f,c
  9971  00197A  5027               	movf	___flmul@temp+1,w,c
  9972  00197C  2622               	addwf	___flmul@prod,f,c
  9973  00197E  0E00               	movlw	0
  9974  001980  2223               	addwfc	___flmul@prod+1,f,c
  9975  001982  2224               	addwfc	___flmul@prod+2,f,c
  9976  001984  2225               	addwfc	___flmul@prod+3,f,c
  9977  001986  5013               	movf	___flmul@a,w,c
  9978  001988  0211               	mulwf	___flmul@b+2,c
  9979  00198A  CFF3 F026          	movff	prodl,___flmul@temp
  9980  00198E  CFF4 F027          	movff	prodh,___flmul@temp+1
  9981  001992  5026               	movf	___flmul@temp,w,c
  9982  001994  261C               	addwf	___flmul@grs,f,c
  9983  001996  0E00               	movlw	0
  9984  001998  221D               	addwfc	___flmul@grs+1,f,c
  9985  00199A  221E               	addwfc	___flmul@grs+2,f,c
  9986  00199C  221F               	addwfc	___flmul@grs+3,f,c
  9987  00199E  5027               	movf	___flmul@temp+1,w,c
  9988  0019A0  2622               	addwf	___flmul@prod,f,c
  9989  0019A2  0E00               	movlw	0
  9990  0019A4  2223               	addwfc	___flmul@prod+1,f,c
  9991  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  9992  0019A8  2225               	addwfc	___flmul@prod+3,f,c
  9993  0019AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9994  0019AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9995  0019B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9996  0019B6  6A1C               	clrf	___flmul@grs,c
  9997  0019B8  5013               	movf	___flmul@a,w,c
  9998  0019BA  0210               	mulwf	___flmul@b+1,c
  9999  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
 10000  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
 10001  0019C4  5026               	movf	___flmul@temp,w,c
 10002  0019C6  261C               	addwf	___flmul@grs,f,c
 10003  0019C8  5027               	movf	___flmul@temp+1,w,c
 10004  0019CA  221D               	addwfc	___flmul@grs+1,f,c
 10005  0019CC  0E00               	movlw	0
 10006  0019CE  221E               	addwfc	___flmul@grs+2,f,c
 10007  0019D0  0E00               	movlw	0
 10008  0019D2  221F               	addwfc	___flmul@grs+3,f,c
 10009  0019D4  5014               	movf	___flmul@a+1,w,c
 10010  0019D6  020F               	mulwf	___flmul@b,c
 10011  0019D8  CFF3 F026          	movff	prodl,___flmul@temp
 10012  0019DC  CFF4 F027          	movff	prodh,___flmul@temp+1
 10013  0019E0  5026               	movf	___flmul@temp,w,c
 10014  0019E2  261C               	addwf	___flmul@grs,f,c
 10015  0019E4  5027               	movf	___flmul@temp+1,w,c
 10016  0019E6  221D               	addwfc	___flmul@grs+1,f,c
 10017  0019E8  0E00               	movlw	0
 10018  0019EA  221E               	addwfc	___flmul@grs+2,f,c
 10019  0019EC  0E00               	movlw	0
 10020  0019EE  221F               	addwfc	___flmul@grs+3,f,c
 10021  0019F0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10022  0019F4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10023  0019F8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10024  0019FC  6A1C               	clrf	___flmul@grs,c
 10025  0019FE  5013               	movf	___flmul@a,w,c
 10026  001A00  020F               	mulwf	___flmul@b,c
 10027  001A02  CFF3 F026          	movff	prodl,___flmul@temp
 10028  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
 10029  001A0A  5026               	movf	___flmul@temp,w,c
 10030  001A0C  261C               	addwf	___flmul@grs,f,c
 10031  001A0E  5027               	movf	___flmul@temp+1,w,c
 10032  001A10  221D               	addwfc	___flmul@grs+1,f,c
 10033  001A12  0E00               	movlw	0
 10034  001A14  221E               	addwfc	___flmul@grs+2,f,c
 10035  001A16  0E00               	movlw	0
 10036  001A18  221F               	addwfc	___flmul@grs+3,f,c
 10037  001A1A  5015               	movf	___flmul@a+2,w,c
 10038  001A1C  0210               	mulwf	___flmul@b+1,c
 10039  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
 10040  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
 10041  001A26  5026               	movf	___flmul@temp,w,c
 10042  001A28  2622               	addwf	___flmul@prod,f,c
 10043  001A2A  5027               	movf	___flmul@temp+1,w,c
 10044  001A2C  2223               	addwfc	___flmul@prod+1,f,c
 10045  001A2E  0E00               	movlw	0
 10046  001A30  2224               	addwfc	___flmul@prod+2,f,c
 10047  001A32  0E00               	movlw	0
 10048  001A34  2225               	addwfc	___flmul@prod+3,f,c
 10049  001A36  5014               	movf	___flmul@a+1,w,c
 10050  001A38  0211               	mulwf	___flmul@b+2,c
 10051  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
 10052  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
 10053  001A42  5026               	movf	___flmul@temp,w,c
 10054  001A44  2622               	addwf	___flmul@prod,f,c
 10055  001A46  5027               	movf	___flmul@temp+1,w,c
 10056  001A48  2223               	addwfc	___flmul@prod+1,f,c
 10057  001A4A  0E00               	movlw	0
 10058  001A4C  2224               	addwfc	___flmul@prod+2,f,c
 10059  001A4E  0E00               	movlw	0
 10060  001A50  2225               	addwfc	___flmul@prod+3,f,c
 10061  001A52  5015               	movf	___flmul@a+2,w,c
 10062  001A54  0211               	mulwf	___flmul@b+2,c
 10063  001A56  CFF3 F026          	movff	prodl,___flmul@temp
 10064  001A5A  CFF4 F027          	movff	prodh,___flmul@temp+1
 10065  001A5E  5026               	movf	___flmul@temp,w,c
 10066  001A60  6E17               	movwf	??___flmul& (0+255),c
 10067  001A62  5027               	movf	___flmul@temp+1,w,c
 10068  001A64  6E18               	movwf	(??___flmul+1)& (0+255),c
 10069  001A66  6A19               	clrf	(??___flmul+2)& (0+255),c
 10070  001A68  6A1A               	clrf	(??___flmul+3)& (0+255),c
 10071  001A6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
 10072  001A6E  C018  F019         	movff	??___flmul+1,??___flmul+2
 10073  001A72  C017  F018         	movff	??___flmul,??___flmul+1
 10074  001A76  6A17               	clrf	??___flmul,c
 10075  001A78  5017               	movf	??___flmul,w,c
 10076  001A7A  2622               	addwf	___flmul@prod,f,c
 10077  001A7C  5018               	movf	??___flmul+1,w,c
 10078  001A7E  2223               	addwfc	___flmul@prod+1,f,c
 10079  001A80  5019               	movf	??___flmul+2,w,c
 10080  001A82  2224               	addwfc	___flmul@prod+2,f,c
 10081  001A84  501A               	movf	??___flmul+3,w,c
 10082  001A86  2225               	addwfc	___flmul@prod+3,f,c
 10083  001A88  C01C  F017         	movff	___flmul@grs,??___flmul
 10084  001A8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 10085  001A90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 10086  001A94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 10087  001A98  0E19               	movlw	25
 10088  001A9A  D006               	goto	u5000
 10089  001A9C                     u5005:
 10090  001A9C  FFFF               	dw	65535	; assembler added errata NOP
 10091  001A9E  90D8               	bcf	status,0,c
 10092  001AA0  321A               	rrcf	??___flmul+3,f,c
 10093  001AA2  3219               	rrcf	??___flmul+2,f,c
 10094  001AA4  3218               	rrcf	??___flmul+1,f,c
 10095  001AA6  3217               	rrcf	??___flmul,f,c
 10096  001AA8                     u5000:
 10097  001AA8  FFFF               	dw	65535	; assembler added errata NOP
 10098  001AAA  2EE8               	decfsz	wreg,f,c
 10099  001AAC  D7F7               	goto	u5005
 10100  001AAE  5017               	movf	??___flmul,w,c
 10101  001AB0  2622               	addwf	___flmul@prod,f,c
 10102  001AB2  5018               	movf	??___flmul+1,w,c
 10103  001AB4  2223               	addwfc	___flmul@prod+1,f,c
 10104  001AB6  5019               	movf	??___flmul+2,w,c
 10105  001AB8  2224               	addwfc	___flmul@prod+2,f,c
 10106  001ABA  501A               	movf	??___flmul+3,w,c
 10107  001ABC  2225               	addwfc	___flmul@prod+3,f,c
 10108  001ABE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10109  001AC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10110  001AC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10111  001ACA  6A1C               	clrf	___flmul@grs,c
 10112  001ACC  5020               	movf	___flmul@aexp,w,c
 10113  001ACE  C021  F017         	movff	___flmul@bexp,??___flmul
 10114  001AD2  6A18               	clrf	(??___flmul+1)& (0+255),c
 10115  001AD4  2617               	addwf	??___flmul,f,c
 10116  001AD6  0E00               	movlw	0
 10117  001AD8  2218               	addwfc	??___flmul+1,f,c
 10118  001ADA  0E82               	movlw	130
 10119  001ADC  2417               	addwf	??___flmul,w,c
 10120  001ADE  6E26               	movwf	___flmul@temp,c
 10121  001AE0  0EFF               	movlw	255
 10122  001AE2  2018               	addwfc	??___flmul+1,w,c
 10123  001AE4  6E27               	movwf	___flmul@temp+1,c
 10124  001AE6  D010               	goto	l4756
 10125  001AE8                     l4750:
 10126  001AE8  FFFF               	dw	65535	; assembler added errata NOP
 10127  001AEA  90D8               	bcf	status,0,c
 10128  001AEC  3622               	rlcf	___flmul@prod,f,c
 10129  001AEE  3623               	rlcf	___flmul@prod+1,f,c
 10130  001AF0  3624               	rlcf	___flmul@prod+2,f,c
 10131  001AF2  3625               	rlcf	___flmul@prod+3,f,c
 10132  001AF4  BE1F               	btfsc	___flmul@grs+3,7,c
 10133  001AF6  8022               	bsf	___flmul@prod,0,c
 10134  001AF8  90D8               	bcf	status,0,c
 10135  001AFA  361C               	rlcf	___flmul@grs,f,c
 10136  001AFC  361D               	rlcf	___flmul@grs+1,f,c
 10137  001AFE  361E               	rlcf	___flmul@grs+2,f,c
 10138  001B00  361F               	rlcf	___flmul@grs+3,f,c
 10139  001B02  0626               	decf	___flmul@temp,f,c
 10140  001B04  A0D8               	btfss	status,0,c
 10141  001B06  0627               	decf	___flmul@temp+1,f,c
 10142  001B08                     l4756:
 10143  001B08  FFFF               	dw	65535	; assembler added errata NOP
 10144  001B0A  AE24               	btfss	___flmul@prod+2,7,c
 10145  001B0C  D7ED               	goto	l4750
 10146  001B0E  0E00               	movlw	0
 10147  001B10  6E20               	movwf	___flmul@aexp,c
 10148  001B12  AE1F               	btfss	___flmul@grs+3,7,c
 10149  001B14  D019               	goto	l1207
 10150  001B16  0EFF               	movlw	255
 10151  001B18  141C               	andwf	___flmul@grs,w,c
 10152  001B1A  6E17               	movwf	??___flmul& (0+255),c
 10153  001B1C  0EFF               	movlw	255
 10154  001B1E  141D               	andwf	___flmul@grs+1,w,c
 10155  001B20  6E18               	movwf	(??___flmul+1)& (0+255),c
 10156  001B22  0EFF               	movlw	255
 10157  001B24  141E               	andwf	___flmul@grs+2,w,c
 10158  001B26  6E19               	movwf	(??___flmul+2)& (0+255),c
 10159  001B28  0E7F               	movlw	127
 10160  001B2A  141F               	andwf	___flmul@grs+3,w,c
 10161  001B2C  6E1A               	movwf	(??___flmul+3)& (0+255),c
 10162  001B2E  5017               	movf	??___flmul,w,c
 10163  001B30  1018               	iorwf	??___flmul+1,w,c
 10164  001B32  1019               	iorwf	??___flmul+2,w,c
 10165  001B34  101A               	iorwf	??___flmul+3,w,c
 10166  001B36  B4D8               	btfsc	status,2,c
 10167  001B38  D004               	goto	l1208
 10168  001B3A                     u5040:
 10169  001B3A  FFFF               	dw	65535	; assembler added errata NOP
 10170  001B3C  0E01               	movlw	1
 10171  001B3E  6E20               	movwf	___flmul@aexp,c
 10172  001B40  D003               	goto	l1207
 10173  001B42                     l1208:
 10174  001B42  FFFF               	dw	65535	; assembler added errata NOP
 10175  001B44  B022               	btfsc	___flmul@prod,0,c
 10176  001B46  D7F9               	goto	u5040
 10177  001B48                     l1207:
 10178  001B48  FFFF               	dw	65535	; assembler added errata NOP
 10179  001B4A  5020               	movf	___flmul@aexp,w,c
 10180  001B4C  B4D8               	btfsc	status,2,c
 10181  001B4E  D01F               	goto	l4776
 10182  001B50  0E01               	movlw	1
 10183  001B52  2622               	addwf	___flmul@prod,f,c
 10184  001B54  0E00               	movlw	0
 10185  001B56  2223               	addwfc	___flmul@prod+1,f,c
 10186  001B58  2224               	addwfc	___flmul@prod+2,f,c
 10187  001B5A  2225               	addwfc	___flmul@prod+3,f,c
 10188  001B5C  A025               	btfss	___flmul@prod+3,0,c
 10189  001B5E  D017               	goto	l4776
 10190  001B60  C022  F017         	movff	___flmul@prod,??___flmul
 10191  001B64  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10192  001B68  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10193  001B6C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10194  001B70  341A               	rlcf	??___flmul+3,w,c
 10195  001B72  321A               	rrcf	??___flmul+3,f,c
 10196  001B74  3219               	rrcf	??___flmul+2,f,c
 10197  001B76  3218               	rrcf	??___flmul+1,f,c
 10198  001B78  3217               	rrcf	??___flmul,f,c
 10199  001B7A  C017  F022         	movff	??___flmul,___flmul@prod
 10200  001B7E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10201  001B82  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10202  001B86  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10203  001B8A  4A26               	infsnz	___flmul@temp,f,c
 10204  001B8C  2A27               	incf	___flmul@temp+1,f,c
 10205  001B8E                     l4776:
 10206  001B8E  FFFF               	dw	65535	; assembler added errata NOP
 10207  001B90  BE27               	btfsc	___flmul@temp+1,7,c
 10208  001B92  D00D               	goto	l4780
 10209  001B94  5027               	movf	___flmul@temp+1,w,c
 10210  001B96  E103               	bnz	u5080
 10211  001B98  2826               	incf	___flmul@temp,w,c
 10212  001B9A  A0D8               	btfss	status,0,c
 10213  001B9C  D008               	goto	l4780
 10214  001B9E                     u5080:
 10215  001B9E  0E00               	movlw	0
 10216  001BA0  6E22               	movwf	___flmul@prod,c
 10217  001BA2  0E00               	movlw	0
 10218  001BA4  6E23               	movwf	___flmul@prod+1,c
 10219  001BA6  0E80               	movlw	128
 10220  001BA8  6E24               	movwf	___flmul@prod+2,c
 10221  001BAA  0E7F               	movlw	127
 10222  001BAC  D023               	goto	L26
 10223  001BAE                     l4780:
 10224  001BAE  FFFF               	dw	65535	; assembler added errata NOP
 10225  001BB0  BE27               	btfsc	___flmul@temp+1,7,c
 10226  001BB2  D005               	goto	u5090
 10227  001BB4  5027               	movf	___flmul@temp+1,w,c
 10228  001BB6  E10F               	bnz	l1215
 10229  001BB8  0426               	decf	___flmul@temp,w,c
 10230  001BBA  B0D8               	btfsc	status,0,c
 10231  001BBC  D00C               	goto	l1215
 10232  001BBE                     u5090:
 10233  001BBE  FFFF               	dw	65535	; assembler added errata NOP
 10234  001BC0  0E00               	movlw	0
 10235  001BC2  6E22               	movwf	___flmul@prod,c
 10236  001BC4  0E00               	movlw	0
 10237  001BC6  6E23               	movwf	___flmul@prod+1,c
 10238  001BC8  0E00               	movlw	0
 10239  001BCA  6E24               	movwf	___flmul@prod+2,c
 10240  001BCC  0E00               	movlw	0
 10241  001BCE  6E25               	movwf	___flmul@prod+3,c
 10242  001BD0  0E00               	movlw	0
 10243  001BD2  6E1B               	movwf	___flmul@sign,c
 10244  001BD4  D011               	goto	l4792
 10245  001BD6                     l1215:
 10246  001BD6  FFFF               	dw	65535	; assembler added errata NOP
 10247  001BD8  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10248  001BDC  0EFF               	movlw	255
 10249  001BDE  1622               	andwf	___flmul@prod,f,c
 10250  001BE0  0EFF               	movlw	255
 10251  001BE2  1623               	andwf	___flmul@prod+1,f,c
 10252  001BE4  0E7F               	movlw	127
 10253  001BE6  1624               	andwf	___flmul@prod+2,f,c
 10254  001BE8  0E00               	movlw	0
 10255  001BEA  1625               	andwf	___flmul@prod+3,f,c
 10256  001BEC  B021               	btfsc	___flmul@bexp,0,c
 10257  001BEE  8E24               	bsf	___flmul@prod+2,7,c
 10258  001BF0  90D8               	bcf	status,0,c
 10259  001BF2  3021               	rrcf	___flmul@bexp,w,c
 10260  001BF4                     L26:
 10261  001BF4  FFFF               	dw	65535	; assembler added errata NOP
 10262  001BF6  6E25               	movwf	___flmul@prod+3,c
 10263  001BF8                     l4792:
 10264  001BF8  FFFF               	dw	65535	; assembler added errata NOP
 10265  001BFA  501B               	movf	___flmul@sign,w,c
 10266  001BFC  1225               	iorwf	___flmul@prod+3,f,c
 10267  001BFE  C022  F00F         	movff	___flmul@prod,?___flmul
 10268  001C02  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10269  001C06  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10270  001C0A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10271  001C0E                     l1202:
 10272  001C0E  FFFF               	dw	65535	; assembler added errata NOP
 10273  001C10  0012               	return		;funcret
 10274  001C12  FFFF               	dw	65535	; errata NOP
 10275  001C14                     __end_of___flmul:
 10276                           	opt callstack 0
 10277                           
 10278 ;; *************** function _ADC_Read *****************
 10279 ;; Defined at:
 10280 ;;		line 28 in file "adc.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;  channel         1    wreg     unsigned char 
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;  channel         1    4[COMRAM] unsigned char 
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  2    0[COMRAM] unsigned int 
 10287 ;; Registers used:
 10288 ;;		wreg, status,2, status,0
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10294 ;;      Params:         2       0       0       0       0       0       0
 10295 ;;      Locals:         1       0       0       0       0       0       0
 10296 ;;      Temps:          2       0       0       0       0       0       0
 10297 ;;      Totals:         5       0       0       0       0       0       0
 10298 ;;Total ram usage:        5 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:    2
 10301 ;; This function calls:
 10302 ;;		Nothing
 10303 ;; This function is called by:
 10304 ;;		_get_temp
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text47
 10309  003A74                     __ptext47:
 10310                           	opt callstack 0
 10311  003A74                     _ADC_Read:
 10312                           	opt callstack 0
 10313  003A74  FFFF               	dw	65535	; assembler added errata NOP
 10314                           
 10315                           ;incstack = 0
 10316                           ;ADC_Read@channel stored from wreg
 10317  003A76  6E05               	movwf	ADC_Read@channel,c
 10318                           
 10319                           ;adc.c: 29:  if(channel > 7)
 10320  003A78  0E07               	movlw	7
 10321  003A7A  6405               	cpfsgt	ADC_Read@channel,c
 10322  003A7C  D005               	goto	l4658
 10323                           
 10324                           ;adc.c: 30:  return 0;
 10325  003A7E  0E00               	movlw	0
 10326  003A80  6E02               	movwf	?_ADC_Read+1,c
 10327  003A82  0E00               	movlw	0
 10328  003A84  6E01               	movwf	?_ADC_Read,c
 10329  003A86  D01D               	goto	l307
 10330  003A88                     l4658:
 10331  003A88  FFFF               	dw	65535	; assembler added errata NOP
 10332                           
 10333                           ;adc.c: 31:  ADCON0 &= 0xC5;
 10334  003A8A  0EC5               	movlw	197
 10335  003A8C  16C2               	andwf	4034,f,c	;volatile
 10336                           
 10337                           ;adc.c: 32:  ADCON0 |= channel<<3;
 10338  003A8E  3805               	swapf	ADC_Read@channel,w,c	;volatile
 10339  003A90  42E8               	rrncf	wreg,f,c
 10340  003A92  0BF8               	andlw	248
 10341  003A94  12C2               	iorwf	4034,f,c	;volatile
 10342                           
 10343                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
 10344  003A96  0E08               	movlw	8
 10345  003A98  6E03               	movwf	??_ADC_Read& (0+255),c
 10346  003A9A  0ECB               	movlw	203
 10347  003A9C                     u5487:
 10348  003A9C  FFFF               	dw	65535	; errata NOP
 10349  003A9E  2EE8               	decfsz	wreg,f,c
 10350  003AA0  D7FD               	bra	u5487
 10351  003AA2  2E03               	decfsz	??_ADC_Read& (0+255),f,c
 10352  003AA4  D7FB               	bra	u5487
 10353  003AA6  D000               	nop2	
 10354                           
 10355                           ;adc.c: 34:  GO_nDONE = 1;
 10356  003AA8  84C2               	bsf	4034,2,c	;volatile
 10357  003AAA                     l308:
 10358  003AAA  FFFF               	dw	65535	; assembler added errata NOP
 10359  003AAC  B4C2               	btfsc	4034,2,c	;volatile
 10360  003AAE  D7FD               	goto	l308
 10361                           
 10362                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
 10363  003AB0  50C4               	movf	4036,w,c	;volatile
 10364  003AB2  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
 10365  003AB4  6A03               	clrf	??_ADC_Read& (0+255),c
 10366  003AB6  50C3               	movf	4035,w,c	;volatile
 10367  003AB8  2403               	addwf	??_ADC_Read,w,c
 10368  003ABA  6E01               	movwf	?_ADC_Read,c
 10369  003ABC  0E00               	movlw	0
 10370  003ABE  2004               	addwfc	??_ADC_Read+1,w,c
 10371  003AC0  6E02               	movwf	?_ADC_Read+1,c
 10372  003AC2                     l307:
 10373  003AC2  FFFF               	dw	65535	; assembler added errata NOP
 10374  003AC4  0012               	return		;funcret
 10375  003AC6  FFFF               	dw	65535	; errata NOP
 10376  003AC8                     __end_of_ADC_Read:
 10377                           	opt callstack 0
 10378                           
 10379 ;; *************** function _ADC_Init *****************
 10380 ;; Defined at:
 10381 ;;		line 23 in file "adc.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, status,2
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10395 ;;      Params:         0       0       0       0       0       0       0
 10396 ;;      Locals:         0       0       0       0       0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0
 10398 ;;      Totals:         0       0       0       0       0       0       0
 10399 ;;Total ram usage:        0 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    2
 10402 ;; This function calls:
 10403 ;;		Nothing
 10404 ;; This function is called by:
 10405 ;;		_get_temp
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text48
 10410  003EB6                     __ptext48:
 10411                           	opt callstack 0
 10412  003EB6                     _ADC_Init:
 10413                           	opt callstack 0
 10414  003EB6  FFFF               	dw	65535	; assembler added errata NOP
 10415                           
 10416                           ;adc.c: 24:  ADCON0 = 0x81;
 10417                           
 10418                           ;incstack = 0
 10419  003EB8  0E81               	movlw	129
 10420  003EBA  6EC2               	movwf	4034,c	;volatile
 10421                           
 10422                           ;adc.c: 25:  ADCON1 = 0x80;
 10423  003EBC  0E80               	movlw	128
 10424  003EBE  6EC1               	movwf	4033,c	;volatile
 10425  003EC0  0012               	return		;funcret
 10426  003EC2  FFFF               	dw	65535	; errata NOP
 10427  003EC4                     __end_of_ADC_Init:
 10428                           	opt callstack 0
 10429                           
 10430 ;; *************** function ___lldiv *****************
 10431 ;; Defined at:
 10432 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  dividend        4    4[COMRAM] unsigned long 
 10435 ;;  divisor         4    8[COMRAM] unsigned long 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  quotient        4   12[COMRAM] unsigned long 
 10438 ;;  counter         1   16[COMRAM] unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  4    4[COMRAM] unsigned long 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10448 ;;      Params:         8       0       0       0       0       0       0
 10449 ;;      Locals:         5       0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0
 10451 ;;      Totals:        13       0       0       0       0       0       0
 10452 ;;Total ram usage:       13 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    2
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_main
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text49
 10463  003770                     __ptext49:
 10464                           	opt callstack 0
 10465  003770                     ___lldiv:
 10466                           	opt callstack 0
 10467  003770  FFFF               	dw	65535	; assembler added errata NOP
 10468                           
 10469                           ;incstack = 0
 10470  003772  0E00               	movlw	0
 10471  003774  6E0D               	movwf	___lldiv@quotient,c
 10472  003776  0E00               	movlw	0
 10473  003778  6E0E               	movwf	___lldiv@quotient+1,c
 10474  00377A  0E00               	movlw	0
 10475  00377C  6E0F               	movwf	___lldiv@quotient+2,c
 10476  00377E  0E00               	movlw	0
 10477  003780  6E10               	movwf	___lldiv@quotient+3,c
 10478  003782  5009               	movf	___lldiv@divisor,w,c
 10479  003784  100A               	iorwf	___lldiv@divisor+1,w,c
 10480  003786  100B               	iorwf	___lldiv@divisor+2,w,c
 10481  003788  100C               	iorwf	___lldiv@divisor+3,w,c
 10482  00378A  B4D8               	btfsc	status,2,c
 10483  00378C  D02E               	goto	l611
 10484  00378E  0E01               	movlw	1
 10485  003790  6E11               	movwf	___lldiv@counter,c
 10486  003792  D007               	goto	l5006
 10487  003794                     l5004:
 10488  003794  FFFF               	dw	65535	; assembler added errata NOP
 10489  003796  90D8               	bcf	status,0,c
 10490  003798  3609               	rlcf	___lldiv@divisor,f,c
 10491  00379A  360A               	rlcf	___lldiv@divisor+1,f,c
 10492  00379C  360B               	rlcf	___lldiv@divisor+2,f,c
 10493  00379E  360C               	rlcf	___lldiv@divisor+3,f,c
 10494  0037A0  2A11               	incf	___lldiv@counter,f,c
 10495  0037A2                     l5006:
 10496  0037A2  FFFF               	dw	65535	; assembler added errata NOP
 10497  0037A4  AE0C               	btfss	___lldiv@divisor+3,7,c
 10498  0037A6  D7F6               	goto	l5004
 10499  0037A8                     u5240:
 10500  0037A8  FFFF               	dw	65535	; assembler added errata NOP
 10501  0037AA  90D8               	bcf	status,0,c
 10502  0037AC  360D               	rlcf	___lldiv@quotient,f,c
 10503  0037AE  360E               	rlcf	___lldiv@quotient+1,f,c
 10504  0037B0  360F               	rlcf	___lldiv@quotient+2,f,c
 10505  0037B2  3610               	rlcf	___lldiv@quotient+3,f,c
 10506  0037B4  5009               	movf	___lldiv@divisor,w,c
 10507  0037B6  5C05               	subwf	___lldiv@dividend,w,c
 10508  0037B8  500A               	movf	___lldiv@divisor+1,w,c
 10509  0037BA  5806               	subwfb	___lldiv@dividend+1,w,c
 10510  0037BC  500B               	movf	___lldiv@divisor+2,w,c
 10511  0037BE  5807               	subwfb	___lldiv@dividend+2,w,c
 10512  0037C0  500C               	movf	___lldiv@divisor+3,w,c
 10513  0037C2  5808               	subwfb	___lldiv@dividend+3,w,c
 10514  0037C4  A0D8               	btfss	status,0,c
 10515  0037C6  D009               	goto	l5016
 10516  0037C8  5009               	movf	___lldiv@divisor,w,c
 10517  0037CA  5E05               	subwf	___lldiv@dividend,f,c
 10518  0037CC  500A               	movf	___lldiv@divisor+1,w,c
 10519  0037CE  5A06               	subwfb	___lldiv@dividend+1,f,c
 10520  0037D0  500B               	movf	___lldiv@divisor+2,w,c
 10521  0037D2  5A07               	subwfb	___lldiv@dividend+2,f,c
 10522  0037D4  500C               	movf	___lldiv@divisor+3,w,c
 10523  0037D6  5A08               	subwfb	___lldiv@dividend+3,f,c
 10524  0037D8  800D               	bsf	___lldiv@quotient,0,c
 10525  0037DA                     l5016:
 10526  0037DA  FFFF               	dw	65535	; assembler added errata NOP
 10527  0037DC  90D8               	bcf	status,0,c
 10528  0037DE  320C               	rrcf	___lldiv@divisor+3,f,c
 10529  0037E0  320B               	rrcf	___lldiv@divisor+2,f,c
 10530  0037E2  320A               	rrcf	___lldiv@divisor+1,f,c
 10531  0037E4  3209               	rrcf	___lldiv@divisor,f,c
 10532  0037E6  2E11               	decfsz	___lldiv@counter,f,c
 10533  0037E8  D7DF               	goto	u5240
 10534  0037EA                     l611:
 10535  0037EA  FFFF               	dw	65535	; assembler added errata NOP
 10536  0037EC  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 10537  0037F0  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 10538  0037F4  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 10539  0037F8  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 10540  0037FC  0012               	return		;funcret
 10541  0037FE  FFFF               	dw	65535	; errata NOP
 10542  003800                     __end_of___lldiv:
 10543                           	opt callstack 0
 10544                           
 10545 ;; *************** function ___fltol *****************
 10546 ;; Defined at:
 10547 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  f1              4   61[COMRAM] unsigned long 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;  exp1            1   70[COMRAM] unsigned char 
 10552 ;;  sign1           1   69[COMRAM] unsigned char 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  4   61[COMRAM] long 
 10555 ;; Registers used:
 10556 ;;		wreg, status,2, status,0
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10562 ;;      Params:         4       0       0       0       0       0       0
 10563 ;;      Locals:         2       0       0       0       0       0       0
 10564 ;;      Temps:          4       0       0       0       0       0       0
 10565 ;;      Totals:        10       0       0       0       0       0       0
 10566 ;;Total ram usage:       10 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    2
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_main
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text50
 10577  0032FE                     __ptext50:
 10578                           	opt callstack 0
 10579  0032FE                     ___fltol:
 10580                           	opt callstack 0
 10581  0032FE  FFFF               	dw	65535	; assembler added errata NOP
 10582                           
 10583                           ;incstack = 0
 10584  003300  3440               	rlcf	___fltol@f1+2,w,c
 10585  003302  3441               	rlcf	___fltol@f1+3,w,c
 10586  003304  6E47               	movwf	___fltol@exp1,c
 10587  003306  5047               	movf	___fltol@exp1,w,c
 10588  003308  A4D8               	btfss	status,2,c
 10589  00330A  D00A               	goto	l5026
 10590  00330C                     u5260:
 10591  00330C  FFFF               	dw	65535	; assembler added errata NOP
 10592  00330E  0E00               	movlw	0
 10593  003310  6E3E               	movwf	?___fltol,c
 10594  003312  0E00               	movlw	0
 10595  003314  6E3F               	movwf	?___fltol+1,c
 10596  003316  0E00               	movlw	0
 10597  003318  6E40               	movwf	?___fltol+2,c
 10598  00331A  0E00               	movlw	0
 10599  00331C  6E41               	movwf	?___fltol+3,c
 10600  00331E  D056               	goto	l881
 10601  003320                     l5026:
 10602  003320  FFFF               	dw	65535	; assembler added errata NOP
 10603  003322  C03E  F042         	movff	___fltol@f1,??___fltol
 10604  003326  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
 10605  00332A  C040  F044         	movff	___fltol@f1+2,??___fltol+2
 10606  00332E  C041  F045         	movff	___fltol@f1+3,??___fltol+3
 10607  003332  0E20               	movlw	32
 10608  003334  D006               	goto	u5270
 10609  003336                     u5275:
 10610  003336  FFFF               	dw	65535	; assembler added errata NOP
 10611  003338  90D8               	bcf	status,0,c
 10612  00333A  3245               	rrcf	??___fltol+3,f,c
 10613  00333C  3244               	rrcf	??___fltol+2,f,c
 10614  00333E  3243               	rrcf	??___fltol+1,f,c
 10615  003340  3242               	rrcf	??___fltol,f,c
 10616  003342                     u5270:
 10617  003342  FFFF               	dw	65535	; assembler added errata NOP
 10618  003344  2EE8               	decfsz	wreg,f,c
 10619  003346  D7F7               	goto	u5275
 10620  003348  5042               	movf	??___fltol,w,c
 10621  00334A  6E46               	movwf	___fltol@sign1,c
 10622  00334C  8E40               	bsf	___fltol@f1+2,7,c
 10623  00334E  0EFF               	movlw	255
 10624  003350  163E               	andwf	___fltol@f1,f,c
 10625  003352  0EFF               	movlw	255
 10626  003354  163F               	andwf	___fltol@f1+1,f,c
 10627  003356  0EFF               	movlw	255
 10628  003358  1640               	andwf	___fltol@f1+2,f,c
 10629  00335A  0E00               	movlw	0
 10630  00335C  1641               	andwf	___fltol@f1+3,f,c
 10631  00335E  0E96               	movlw	150
 10632  003360  5E47               	subwf	___fltol@exp1,f,c
 10633  003362  AE47               	btfss	___fltol@exp1,7,c
 10634  003364  D00E               	goto	l5046
 10635  003366  5047               	movf	___fltol@exp1,w,c
 10636  003368  0A80               	xorlw	128
 10637  00336A  0F97               	addlw	151
 10638  00336C  A0D8               	btfss	status,0,c
 10639  00336E  D7CE               	goto	u5260
 10640  003370                     l5042:
 10641  003370  FFFF               	dw	65535	; assembler added errata NOP
 10642  003372  90D8               	bcf	status,0,c
 10643  003374  3241               	rrcf	___fltol@f1+3,f,c
 10644  003376  3240               	rrcf	___fltol@f1+2,f,c
 10645  003378  323F               	rrcf	___fltol@f1+1,f,c
 10646  00337A  323E               	rrcf	___fltol@f1,f,c
 10647  00337C  3E47               	incfsz	___fltol@exp1,f,c
 10648  00337E  D7F8               	goto	l5042
 10649  003380  D010               	goto	u5310
 10650  003382                     l5046:
 10651  003382  FFFF               	dw	65535	; assembler added errata NOP
 10652  003384  0E1F               	movlw	31
 10653  003386  6447               	cpfsgt	___fltol@exp1,c
 10654  003388  D008               	goto	l5054
 10655  00338A  D7C0               	goto	u5260
 10656  00338C                     l5052:
 10657  00338C  FFFF               	dw	65535	; assembler added errata NOP
 10658  00338E  90D8               	bcf	status,0,c
 10659  003390  363E               	rlcf	___fltol@f1,f,c
 10660  003392  363F               	rlcf	___fltol@f1+1,f,c
 10661  003394  3640               	rlcf	___fltol@f1+2,f,c
 10662  003396  3641               	rlcf	___fltol@f1+3,f,c
 10663  003398  0647               	decf	___fltol@exp1,f,c
 10664  00339A                     l5054:
 10665  00339A  FFFF               	dw	65535	; assembler added errata NOP
 10666  00339C  5047               	movf	___fltol@exp1,w,c
 10667  00339E  A4D8               	btfss	status,2,c
 10668  0033A0  D7F5               	goto	l5052
 10669  0033A2                     u5310:
 10670  0033A2  FFFF               	dw	65535	; assembler added errata NOP
 10671  0033A4  5046               	movf	___fltol@sign1,w,c
 10672  0033A6  B4D8               	btfsc	status,2,c
 10673  0033A8  D008               	goto	l5060
 10674  0033AA  1E41               	comf	___fltol@f1+3,f,c
 10675  0033AC  1E40               	comf	___fltol@f1+2,f,c
 10676  0033AE  1E3F               	comf	___fltol@f1+1,f,c
 10677  0033B0  6C3E               	negf	___fltol@f1,c
 10678  0033B2  0E00               	movlw	0
 10679  0033B4  223F               	addwfc	___fltol@f1+1,f,c
 10680  0033B6  2240               	addwfc	___fltol@f1+2,f,c
 10681  0033B8  2241               	addwfc	___fltol@f1+3,f,c
 10682  0033BA                     l5060:
 10683  0033BA  FFFF               	dw	65535	; assembler added errata NOP
 10684  0033BC  C03E  F03E         	movff	___fltol@f1,?___fltol
 10685  0033C0  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
 10686  0033C4  C040  F040         	movff	___fltol@f1+2,?___fltol+2
 10687  0033C8  C041  F041         	movff	___fltol@f1+3,?___fltol+3
 10688  0033CC                     l881:
 10689  0033CC  FFFF               	dw	65535	; assembler added errata NOP
 10690  0033CE  0012               	return		;funcret
 10691  0033D0  FFFF               	dw	65535	; errata NOP
 10692  0033D2                     __end_of___fltol:
 10693                           	opt callstack 0
 10694                           
 10695 ;; *************** function _UARTRecieveChar *****************
 10696 ;; Defined at:
 10697 ;;		line 53 in file "serial.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;		None
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, status,2
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10711 ;;      Params:         0       0       0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0
 10713 ;;      Temps:          1       0       0       0       0       0       0
 10714 ;;      Totals:         1       0       0       0       0       0       0
 10715 ;;Total ram usage:        1 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    2
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_main
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text51
 10726  003D6E                     __ptext51:
 10727                           	opt callstack 0
 10728  003D6E                     _UARTRecieveChar:
 10729                           	opt callstack 0
 10730  003D6E  FFFF               	dw	65535	; assembler added errata NOP
 10731                           
 10732                           ;serial.c: 54:   while (RCIF == 0) {
 10733                           
 10734                           ;incstack = 0
 10735  003D70  D00E               	goto	l4936
 10736  003D72                     l213:
 10737  003D72  FFFF               	dw	65535	; assembler added errata NOP
 10738                           
 10739                           ;serial.c: 55:     if (RCSTAbits.OERR == 1) {
 10740  003D74  A2AB               	btfss	4011,1,c	;volatile
 10741  003D76  D00B               	goto	l4936
 10742                           
 10743                           ;serial.c: 56:       RCSTAbits.OERR = 0;
 10744  003D78  92AB               	bcf	4011,1,c	;volatile
 10745                           
 10746                           ;serial.c: 57:       RCSTAbits.CREN = 0;
 10747  003D7A  98AB               	bcf	4011,4,c	;volatile
 10748                           
 10749                           ;serial.c: 58:       RCSTAbits.CREN = 1;
 10750  003D7C  88AB               	bsf	4011,4,c	;volatile
 10751                           
 10752                           ;serial.c: 59:       _delay((unsigned long)((10)*(16000000/4000.0)));
 10753  003D7E  0E27               	movlw	39
 10754  003D80  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 10755  003D82  0EFC               	movlw	252
 10756  003D84                     u5497:
 10757  003D84  FFFF               	dw	65535	; errata NOP
 10758  003D86  2EE8               	decfsz	wreg,f,c
 10759  003D88  D7FD               	bra	u5497
 10760  003D8A  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 10761  003D8C  D7FB               	bra	u5497
 10762  003D8E                     l4936:
 10763  003D8E  FFFF               	dw	65535	; assembler added errata NOP
 10764                           
 10765                           ;serial.c: 54:   while (RCIF == 0) {
 10766  003D90  AA9E               	btfss	3998,5,c	;volatile
 10767  003D92  D7EF               	goto	l213
 10768                           
 10769                           ;serial.c: 62:   return RCREG1;
 10770  003D94  50AE               	movf	4014,w,c	;volatile
 10771  003D96  0012               	return		;funcret
 10772  003D98  FFFF               	dw	65535	; errata NOP
 10773  003D9A                     __end_of_UARTRecieveChar:
 10774                           	opt callstack 0
 10775                           
 10776 ;; *************** function _Timer0_StopTimer *****************
 10777 ;; Defined at:
 10778 ;;		line 26 in file "timer.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  2  119[None  ] int 
 10785 ;; Registers used:
 10786 ;;		None
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10792 ;;      Params:         0       0       0       0       0       0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0
 10794 ;;      Temps:          0       0       0       0       0       0       0
 10795 ;;      Totals:         0       0       0       0       0       0       0
 10796 ;;Total ram usage:        0 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:    2
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_main
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text52
 10807  003ECE                     __ptext52:
 10808                           	opt callstack 0
 10809  003ECE                     _Timer0_StopTimer:
 10810                           	opt callstack 0
 10811  003ECE  FFFF               	dw	65535	; assembler added errata NOP
 10812                           
 10813                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
 10814                           
 10815                           ;incstack = 0
 10816  003ED0  9ED5               	bcf	4053,7,c	;volatile
 10817                           
 10818                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
 10819  003ED2  0012               	return		;funcret
 10820  003ED4  FFFF               	dw	65535	; errata NOP
 10821  003ED6                     __end_of_Timer0_StopTimer:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _Timer0_StartTimer *****************
 10825 ;; Defined at:
 10826 ;;		line 21 in file "timer.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  2  109[None  ] int 
 10833 ;; Registers used:
 10834 ;;		None
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10840 ;;      Params:         0       0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    2
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_main
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text53
 10855  003ED6                     __ptext53:
 10856                           	opt callstack 0
 10857  003ED6                     _Timer0_StartTimer:
 10858                           	opt callstack 0
 10859  003ED6  FFFF               	dw	65535	; assembler added errata NOP
 10860                           
 10861                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 10862                           
 10863                           ;incstack = 0
 10864  003ED8  8ED5               	bsf	4053,7,c	;volatile
 10865                           
 10866                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
 10867  003EDA  0012               	return		;funcret
 10868  003EDC  FFFF               	dw	65535	; errata NOP
 10869  003EDE                     __end_of_Timer0_StartTimer:
 10870                           	opt callstack 0
 10871                           
 10872 ;; *************** function _Timer0_Init *****************
 10873 ;; Defined at:
 10874 ;;		line 8 in file "timer.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;		None
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      void 
 10881 ;; Registers used:
 10882 ;;		wreg, status,2
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10888 ;;      Params:         0       0       0       0       0       0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0
 10891 ;;      Totals:         0       0       0       0       0       0       0
 10892 ;;Total ram usage:        0 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    2
 10895 ;; This function calls:
 10896 ;;		Nothing
 10897 ;; This function is called by:
 10898 ;;		_main
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           	psect	text54
 10903  003DC4                     __ptext54:
 10904                           	opt callstack 0
 10905  003DC4                     _Timer0_Init:
 10906                           	opt callstack 0
 10907  003DC4  FFFF               	dw	65535	; assembler added errata NOP
 10908                           
 10909                           ;timer.c: 9:  time_ms = 0;
 10910                           
 10911                           ;incstack = 0
 10912  003DC6  0E00               	movlw	0
 10913  003DC8  0100               	movlb	0	; () banked
 10914  003DCA  6FC8               	movwf	_time_ms& (0+255),b	;volatile
 10915  003DCC  0E00               	movlw	0
 10916  003DCE  6FC9               	movwf	(_time_ms+1)& (0+255),b	;volatile
 10917  003DD0  0E00               	movlw	0
 10918  003DD2  6FCA               	movwf	(_time_ms+2)& (0+255),b	;volatile
 10919  003DD4  0E00               	movlw	0
 10920  003DD6  6FCB               	movwf	(_time_ms+3)& (0+255),b	;volatile
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 10924  003DD8  9CD5               	bcf	4053,6,c	;volatile
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;timer.c: 11:  TMR0H = 0xFF;
 10928  003DDA  68D7               	setf	4055,c	;volatile
 10929                           
 10930                           ;timer.c: 12:  TMR0L = 0x34;
 10931  003DDC  0E34               	movlw	52
 10932  003DDE  6ED6               	movwf	4054,c	;volatile
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 10936  003DE0  94F2               	bcf	4082,2,c	;volatile
 10937                           
 10938                           ;timer.c: 14:  T0CON = 0x00;
 10939  003DE2  0E00               	movlw	0
 10940  003DE4  6ED5               	movwf	4053,c	;volatile
 10941                           
 10942                           ; BSR set to: 0
 10943  003DE6  0012               	return		;funcret
 10944  003DE8  FFFF               	dw	65535	; errata NOP
 10945  003DEA                     __end_of_Timer0_Init:
 10946                           	opt callstack 0
 10947                           
 10948 ;; *************** function _ReadTime *****************
 10949 ;; Defined at:
 10950 ;;		line 17 in file "timer.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  4    0[COMRAM] unsigned long 
 10957 ;; Registers used:
 10958 ;;		None
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10964 ;;      Params:         4       0       0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0
 10967 ;;      Totals:         4       0       0       0       0       0       0
 10968 ;;Total ram usage:        4 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    2
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_main
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text55
 10979  003E2E                     __ptext55:
 10980                           	opt callstack 0
 10981  003E2E                     _ReadTime:
 10982                           	opt callstack 0
 10983  003E2E  FFFF               	dw	65535	; assembler added errata NOP
 10984                           
 10985                           ;timer.c: 18:  return time_ms;
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;incstack = 0
 10989  003E30  C0C8  F001         	movff	_time_ms,?_ReadTime	;volatile
 10990  003E34  C0C9  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
 10991  003E38  C0CA  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
 10992  003E3C  C0CB  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
 10993  003E40  0012               	return		;funcret
 10994  003E42  FFFF               	dw	65535	; errata NOP
 10995  003E44                     __end_of_ReadTime:
 10996                           	opt callstack 0
 10997                           
 10998 ;; *************** function _timingISR *****************
 10999 ;; Defined at:
 11000 ;;		line 31 in file "timer.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11014 ;;      Params:         0       0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    1
 11021 ;; This function calls:
 11022 ;;		i2_Timer0_StartTimer
 11023 ;; This function is called by:
 11024 ;;		Interrupt level 2
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	intcode
 11029  000008                     __pintcode:
 11030                           	opt callstack 0
 11031  000008                     _timingISR:
 11032                           	opt callstack 0
 11033  000008  FFFF               	dw	65535	; assembler added errata NOP
 11034                           
 11035                           ;incstack = 0
 11036  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11037                           
 11038                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11039  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11040  00000E  AAF2               	btfss	4082,5,c	;volatile
 11041  000010  D00D               	goto	i2l269
 11042                           
 11043                           ;timer.c: 33:   TMR0IF = 0;
 11044  000012  94F2               	bcf	4082,2,c	;volatile
 11045                           
 11046                           ;timer.c: 34:   time_ms++;
 11047  000014  0E01               	movlw	1
 11048  000016  0100               	movlb	0	; () banked
 11049  000018  27C8               	addwf	_time_ms& (0+255),f,b	;volatile
 11050  00001A  0E00               	movlw	0
 11051  00001C  23C9               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11052  00001E  23CA               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11053  000020  23CB               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;timer.c: 35:   TMR0H = 0xFF;
 11057  000022  68D7               	setf	4055,c	;volatile
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;timer.c: 36:   TMR0L = 0x34;
 11061  000024  0E34               	movlw	52
 11062  000026  6ED6               	movwf	4054,c	;volatile
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;timer.c: 37:   Timer0_StartTimer();
 11066  000028  EC6F  F01F         	call	i2_Timer0_StartTimer	;wreg free
 11067  00002C                     i2l269:
 11068  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11069  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11070  000030  0011               	retfie		f
 11071  000032  FFFF               	dw	65535	; errata NOP
 11072  000034                     __end_of_timingISR:
 11073                           	opt callstack 0
 11074                           
 11075 ;; *************** function i2_Timer0_StartTimer *****************
 11076 ;; Defined at:
 11077 ;;		line 21 in file "timer.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;		None
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;		None
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  2    0[None  ] int 
 11084 ;; Registers used:
 11085 ;;		None
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11091 ;;      Params:         0       0       0       0       0       0       0
 11092 ;;      Locals:         0       0       0       0       0       0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0
 11094 ;;      Totals:         0       0       0       0       0       0       0
 11095 ;;Total ram usage:        0 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_timingISR
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text57
 11105  003EDE                     __ptext57:
 11106                           	opt callstack 0
 11107  003EDE                     i2_Timer0_StartTimer:
 11108                           	opt callstack 0
 11109  003EDE  FFFF               	dw	65535	; assembler added errata NOP
 11110                           
 11111                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11112                           
 11113                           ;incstack = 0
 11114  003EE0  8ED5               	bsf	4053,7,c	;volatile
 11115                           
 11116                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11117  003EE2  0012               	return		;funcret
 11118  003EE4  FFFF               	dw	65535	; errata NOP
 11119  003EE6                     __end_ofi2_Timer0_StartTimer:
 11120                           	opt callstack 0
 11121                           
 11122                           	psect	rparam
 11123  0000                     
 11124                           	psect	temp
 11125  00007F                     btemp:
 11126                           	opt callstack 0
 11127  00007F                     	ds	1
 11128  0000                     int$flags	set	btemp
 11129  0000                     wtemp8	set	btemp+1
 11130  0000                     ttemp5	set	btemp+1
 11131  0000                     ttemp6	set	btemp+4
 11132  0000                     ttemp7	set	btemp+8
 11133                           tosu	equ	0xFFF
 11134                           tosh	equ	0xFFE
 11135                           tosl	equ	0xFFD
 11136                           stkptr	equ	0xFFC
 11137                           pclatu	equ	0xFFB
 11138                           pclath	equ	0xFFA
 11139                           pcl	equ	0xFF9
 11140                           tblptru	equ	0xFF8
 11141                           tblptrh	equ	0xFF7
 11142                           tblptrl	equ	0xFF6
 11143                           tablat	equ	0xFF5
 11144                           prodh	equ	0xFF4
 11145                           prodl	equ	0xFF3
 11146                           indf0	equ	0xFEF
 11147                           postinc0	equ	0xFEE
 11148                           postdec0	equ	0xFED
 11149                           preinc0	equ	0xFEC
 11150                           plusw0	equ	0xFEB
 11151                           fsr0h	equ	0xFEA
 11152                           fsr0l	equ	0xFE9
 11153                           wreg	equ	0xFE8
 11154                           indf1	equ	0xFE7
 11155                           postinc1	equ	0xFE6
 11156                           postdec1	equ	0xFE5
 11157                           preinc1	equ	0xFE4
 11158                           plusw1	equ	0xFE3
 11159                           fsr1h	equ	0xFE2
 11160                           fsr1l	equ	0xFE1
 11161                           bsr	equ	0xFE0
 11162                           indf2	equ	0xFDF
 11163                           postinc2	equ	0xFDE
 11164                           postdec2	equ	0xFDD
 11165                           preinc2	equ	0xFDC
 11166                           plusw2	equ	0xFDB
 11167                           fsr2h	equ	0xFDA
 11168                           fsr2l	equ	0xFD9
 11169                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     63     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1701_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 29
		 -> STR_15(CODE[26]), STR_14(CODE[9]), STR_13(CODE[3]), STR_12(CODE[17]), 
		 -> STR_11(CODE[12]), STR_10(CODE[3]), STR_9(CODE[24]), STR_8(CODE[29]), 
		 -> STR_7(CODE[24]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[13]), 
		 -> STR_3(CODE[9]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_read_SRAM
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  109093
                                             46 BANK0     17    17      0
                           _ReadTime
                        _Timer0_Init
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                   _interrupt_enable
                          _read_SRAM
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51471
                                             38 BANK0      8     6      2
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49486
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1708
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadTime
   _Timer0_Init
   _Timer0_StartTimer
   _Timer0_StopTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   ___lldiv
     _ReadTime (ARG)
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE      15        0.0%
DATA                 0      0      FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Feb 28 00:43:31 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                                l213 3D72  
                                                                l206 3E5E  
                                                                l153 1F9A  
                                                                l307 3AC2  
                                                                l411 28C4  
                                                                l155 21B2  
                                                                l308 3AAA  
                                                                l413 28CE  
                                                                l431 3010  
                                                                l450 2702  
                                                                l611 37EA  
                                                                l452 270C  
                                                                l527 188C  
                                                                l368 36FC  
                                                                l465 24AA  
                                                                l386 229C  
                                                                l467 24B4  
                                                                l388 22A6  
                                                                l881 33CC  
                                                       __CFG_CPB$OFF 000000  
                                                                _RC0 007C10  
                                                                _RB5 007C0D  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _abs 3C58  
                                                                _lcd 00BF  
                                                                _pad 36C6  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                   ?_UARTRecieveChar 0001  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1022 32D8  
                                                               l1032 35F4  
                                                               l1121 1F52  
                                                               l1113 1D72  
                                                               l1202 1C0E  
                                                               l1114 1D4A  
                                                               ?_abs 0013  
                                                               l1215 1BD6  
                                                               l1207 1B48  
                                                               l1208 1B42  
                                                               l1400 3A0E  
                                                               l1129 1E3E  
                                                               l1138 1EB6  
                                                               l1242 2E54  
                                                               l1139 1EB0  
                                                               l1405 3A18  
                                                               l1246 2DC8  
                                                               l1262 3C8E  
                                                               l1239 2D3E  
                                                               l1336 36C0  
                                                               l4000 085C  
                                                               l1290 2B92  
                                                               l4002 086C  
                                                               l1259 3C84  
                                                               l4020 0964  
                                                               l1293 2B9C  
                                                               l1198 191E  
                                                               l1390 3558  
                                                               l4110 0E84  
                                                               l4022 0974  
                                                               l4200 131C  
                                                               l4042 0AD4  
                                                               l4018 0944  
                                                               l5004 3794  
                                                               l3420 3BC2  
                                                               l4140 1026  
                                                               l4132 0FEA  
                                                               l4036 0A2E  
                                                               l5006 37A2  
                                                               l3406 3636  
                                                               l3510 2C22  
                                                               l4302 17F2  
                                                               l4126 0F78  
                                                               l4118 0F04  
                                                               l4046 0B0E  
                                                               l5016 37DA  
                                                               l3416 3BAA  
                                                               l3424 3D48  
                                                               l3440 36E2  
                                                               l3512 2C38  
                                                               l3504 2BFA  
                                                               l4312 1840  
                                                               l4232 1466  
                                                               l4224 13F2  
                                                               l4216 1372  
                                                               l4136 0FF6  
                                                               l4056 0B78  
                                                               l5042 3370  
                                                               l5026 3320  
                                                               l3426 3D4E  
                                                               l3450 3722  
                                                               l3530 2CD8  
                                                               l3522 2C98  
                                                               l4146 103A  
                                                               l4066 0BF4  
                                                               l5060 33BA  
                                                               l5052 338C  
                                                               l4500 1DC4  
                                                               l4412 1C90  
                                                               l3444 36F2  
                                                               l3604 35DC  
                                                               l4308 1832  
                                                               l4260 15F2  
                                                               l4156 1064  
                                                               l4076 0CD4  
                                                               l4340 3950  
                                                               l5054 339A  
                                                               l5046 3382  
                                                               l4510 1E2C  
                                                               l4350 382E  
                                                               l3454 3752  
                                                               l3446 3708  
                                                               l3526 2CB0  
                                                               l3550 315A  
                                                               l3542 3118  
                                                               l3710 290E  
                                                               l4246 1570  
                                                               l4166 10F6  
                                                               l4094 0E2E  
                                                               l4086 0D7E  
                                                               l4318 1854  
                                                               l4424 1CBA  
                                                               l4416 1C96  
                                                               l4352 387C  
                                                               l3616 3B92  
                                                               l3624 3A34  
                                                               l3552 3170  
                                                               l3640 227A  
                                                               l4192 126E  
                                                               l4184 11FC  
                                                               l4176 1162  
                                                               l5240 21FE  
                                                               l3626 3A42  
                                                               l3562 31D4  
                                                               l3546 313E  
                                                               l3722 299A  
                                                               l4274 1652  
                                                               l4338 3928  
                                                               l4700 190C  
                                                               l4348 381E  
                                                               l3900 2AA2  
                                                               l3740 2A0E  
                                                               l5228 21CA  
                                                               l5164 1F78  
                                                               l4518 1E66  
                                                               l4534 1E8C  
                                                               l4454 1CF8  
                                                               l3910 2AC6  
                                                               l3566 31FC  
                                                               l3558 31BC  
                                                               l3654 22C4  
                                                               ?_pad 0011  
                                                               l4528 1E7E  
                                                               l4392 1C48  
                                                               l4640 389A  
                                                               l3912 2AF2  
                                                               l3752 2FD2  
                                                               l3576 324A  
                                                               l3808 2832  
                                                               l3832 24CA  
                                                               l4288 1728  
                                                               l5168 1F80  
                                                               l4562 1F28  
                                                               l4554 1EFE  
                                                               l4490 1DAA  
                                                               l4466 1D5A  
                                                               l4810 2D50  
                                                               l3906 2AB4  
                                                               l3498 2BD0  
                                                               l3658 22D4  
                                                               l3770 3066  
                                                               l3762 302A  
                                                               l3578 3260  
                                                               l4708 1940  
                                                               l4492 1DB0  
                                                               l4468 1D60  
                                                               l4388 1C42  
                                                               l4820 2D86  
                                                               l4644 38D6  
                                                               l3916 2B2A  
                                                               l3908 2ABE  
                                                               l3692 245A  
                                                               l3668 23CE  
                                                               l3780 30AC  
                                                               l3588 32C0  
                                                               l3596 357A  
                                                               l3860 25B8  
                                                               l4750 1AE8  
                                                               l4566 1F32  
                                                               l4830 2DFE  
                                                               l4822 2DAE  
                                                               l3766 3044  
                                                               l3598 3590  
                                                               l3846 251E  
                                                               l3838 24FA  
                                                               l4680 18C0  
                                                               l4568 1F36  
                                                               l4816 2D70  
                                                               l3688 243E  
                                                               l3784 30C6  
                                                               l3776 308E  
                                                               l3936 34C8  
                                                               l3960 073E  
                                                               l4658 3A88  
                                                               l4682 18C6  
                                                               l4818 2D78  
                                                               l3890 2A50  
                                                               l3938 34D8  
                                                               l3962 0744  
                                                               l4780 1BAE  
                                                               l4756 1B08  
                                                               l4684 18D8  
                                                               l4828 2DF0  
                                                               l3892 2A56  
                                                               l3884 26B2  
                                                               l3868 2634  
                                                               l3980 0776  
                                                               l3972 0766  
                                                               l3964 0756  
                                                               l4846 2E42  
                                                               l3798 2744  
                                                               l4936 3D8E  
                                                               l4792 1BF8  
                                                               l4776 1B8E  
                                                               l3984 0784  
                                                               l3976 076E  
                                                               l3968 075E  
                                                               l4698 1906  
                                                               l3986 07CA  
                                                               l3998 083C  
                                                               STR_1 06C0  
                                                               STR_2 06EE  
                                                               STR_3 0692  
                                                               STR_4 0679  
                                                               STR_5 0692  
                                                               STR_6 0679  
                                                               STR_7 0650  
                                                               STR_8 0601  
                                                               STR_9 0638  
                                                               u3100 3266  
                                                               u4000 09C2  
                                                               u3050 3176  
                                                               u3130 3596  
                                                               u3220 2290  
                                                               u3310 2426  
                                                               u4110 0D2E  
                                                               u4030 0A88  
                                                               u5000 1AA8  
                                                               u3160 3B8E  
                                                               u3240 22BC  
                                                               u3400 29E2  
                                                               u3081 322A  
                                                               u3250 23DE  
                                                               u4210 1124  
                                                               u4050 0B68  
                                                               u3180 2248  
                                                               u3340 28B8  
                                                               u4300 14C0  
                                                               u5005 1A9C  
                                                               u3270 2400  
                                                               u3190 224C  
                                                               u3350 2974  
                                                               u3510 30DC  
                                                               u4070 0BB2  
                                                               u3271 23FE  
                                                               u3431 2FB2  
                                                               u5040 1B3A  
                                                               u3280 2410  
                                                               u3360 29AA  
                                                               u2800 3CC2  
                                                               u3600 249E  
                                                               u4320 15CA  
                                                               u4160 0F32  
                                                               u3290 2416  
                                                               u3530 26F6  
                                                               u4090 0C4E  
                                                               u3355 2960  
                                                               u2740 362C  
                                                               u3380 29CC  
                                                               u2900 39F2  
                                                               u3700 2646  
                                                               u3620 251A  
                                                               u4340 162C  
                                                               u5310 33A2  
                                                               u3390 29DC  
                                                               u2910 39F6  
                                                               u3630 2554  
                                                               u5240 37A8  
                                                               u5080 1B9E  
                                                               u3800 2B62  
                                                               u2760 3678  
                                                               u3480 305A  
                                                               u3560 285E  
                                                               u3720 2668  
                                                               u3640 2558  
                                                               u4360 16AC  
                                                               u4280 1420  
                                                               u3561 285C  
                                                               u3721 2666  
                                                               u5090 1BBE  
                                                               u4530 1D1C  
                                                               u5170 2E0A  
                                                               u2930 3D2E  
                                                               u2850 3C68  
                                                               u3570 286E  
                                                               u3730 2678  
                                                               u5260 330C  
                                                               u4540 1D2C  
                                                               u2940 3D32  
                                                               u3580 2874  
                                                               u2860 3CF6  
                                                               u3740 267E  
                                                               u3660 2592  
                                                               u4380 1782  
                                                               u5270 3342  
                                                               u4710 1E92  
                                                               u4550 1D30  
                                                               u2870 3CFA  
                                                               u2790 3CBE  
                                                               u3670 2596  
                                                               u2880 3C4A  
                                                               u4730 1EA8  
                                                               u3770 2A9E  
                                                               u2890 3C4E  
                                                               u3690 260E  
                                                               u3930 08A8  
                                                               u5275 3336  
                                                               u2971 2C02  
                                                               u4580 1D7C  
                                                               u3940 08AC  
                                                               _RCIF 007CF5  
                                                               u4670 1E52  
                                                               u3790 2B5E  
                                                               u2990 2C3E  
                                                               u3870 352E  
                                                               u3950 08BA  
                                                               u3695 25FA  
                                                               u5457 20DA  
                                                               u5467 21A0  
                                                               u3980 09B0  
                                                               u5477 2F92  
                                                               u4790 1F0C  
                                                               u4870 38CC  
                                                               u3990 09B4  
                                                               u5487 3A9C  
                                                               u4880 3906  
                                                               u5497 3D84  
                                                               u4877 38C2  
                                                               u4990 192C  
                                                               u4887 38FC  
                                                       __CFG_STVR$ON 000000  
                                                               abs@a 0013  
                                                               _dbuf 00D9  
                                                               _atoi 2A3C  
                                                               _ctoa 3A1E  
                                                               _main 1F58  
                                                               _dtoa 221E  
                                                               _prec 00D2  
                                                               _otoa 28A2  
                                                               _nout 00CE  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr0h 000FEA  
                                                               fsr1h 000FE2  
                                                               indf0 000FEF  
                                                               fsr2h 000FDA  
                                                               fsr0l 000FE9  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 2FA6  
                                                               btemp 007F  
                                                               _utoa 26E0  
                                                               _xtoa 2488  
                                                   __end_of_ADC_Init 3EC4  
                                                   __end_of_ADC_Read 3AC8  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                                      __CFG_OSC$RCIO 000000  
                                                  int_to_char@result 0092  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                           __end_of_interrupt_enable 3EB6  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 2CFE  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 1F58  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 3222  
                                                              STR_10 06EB  
                                                              STR_11 0686  
                                                              STR_20 06AC  
                                                              STR_12 0668  
                                                              STR_13 06EB  
                                                              STR_22 06AC  
                                                              STR_14 069B  
                                                              STR_31 06AD  
                                                              STR_15 061E  
                                                              STR_40 06D0  
                                                              STR_16 06A8  
                                                              STR_18 06A8  
                                                              STR_34 06CA  
                                                              STR_27 06A9  
                                                              STR_43 06CD  
                                                              STR_36 06CA  
                                                              STR_52 06B4  
                                                              STR_45 06CD  
                                                              STR_54 06B4  
                                                              STR_62 06DC  
                                                              STR_38 06D0  
                                                              STR_47 06D3  
                                                              STR_64 06DC  
                                                              STR_72 06B0  
                                                              STR_49 06D3  
                                                              STR_74 06B0  
                                                              STR_82 06D6  
                                                              STR_59 06B5  
                                                              STR_67 06DF  
                                                              STR_84 06D6  
                                                              STR_92 06B8  
                                                              STR_69 06DF  
                                                              STR_94 06B8  
                                                              STR_79 06B1  
                                                              STR_87 06D9  
                                                    __end_of___flmul 1C14  
                                                              STR_89 06D9  
                                                              ?_otoa 001C  
                                                              STR_99 06B9  
                                                    __end_of___flsub 3B12  
                                                    __end_of___fltol 33D2  
                                                              ?_stoa 000A  
                                                    __end_of___lldiv 3800  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 32FE  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 361A  
                                                              i2l269 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_getchar 3EA6  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _fgetc 3800  
                                                              _flags 00D4  
                                                              _getch 3EC4  
                                                              _errno 00CC  
                                                              _fputc 361A  
                                                    __end_of_isalpha 3C58  
                                                              _fputs 3B9E  
                                                    __end_of_isdigit 3D3C  
                                                    __end_of_read_op 3E2E  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 00D0  
                                                              ctoa@c 001E  
                                                              _putch 3EEE  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3CCC  
                                                    __end_of_isspace 3B9E  
                                                    __end_of_isupper 3D04  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 39C8  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 355E  
                                                    __end_of_toupper 3A1E  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1855 000D  
                                                    __initialization 3BE0  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2BA2  
                                                       __end_of_ctoa 3A74  
                                                       __end_of_main 221E  
                                                       __end_of_dtoa 2488  
                                                       __end_of_otoa 2A3C  
                                                       __end_of_stoa 30EA  
                                                       __end_of_utoa 28A2  
                                                       __end_of_xtoa 26E0  
                                                   __end_of_ReadTime 3E44  
                                                 int_to_char@the_num 009C  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00AE  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             ?_fputs 000A  
                                                             STR_104 06C1  
                                                             STR_112 06BC  
                                                             STR_114 06BC  
                                                             STR_130 06E5  
                                                             _ADRESH 000FC4  
                                                             STR_123 06BD  
                                                             STR_107 06E2  
                                                             STR_132 06E5  
                                                             STR_116 06A4  
                                                             STR_109 06E2  
                                                             STR_141 06E8  
                                                             STR_118 06A4  
                                                             STR_134 06C4  
                                                             _ADRESL 000FC3  
                                                             STR_127 06A5  
                                                             STR_143 06C7  
                                                             STR_136 06C4  
                                                             STR_145 06C7  
                                                             STR_139 06E8  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 2E5A  
                                                      main@curr_time 00BC  
                                                      ??_Timer0_Init 0001  
                                                    write_op@address 0002  
                                                i2_Timer0_StartTimer 3EDE  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 349C  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 3D9A  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lldiv 000D  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 3C06  
                                            __size_of_UARTSendString 0088  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                  main@input_address 00B8  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3D3C  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ??_read_op 0001  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 3972  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                   __end_of_write_op 3E0C  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 3C0E  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                  ?_Timer0_StopTimer 0001  
                                                     __pcstackCOMRAM 0001  
                                                 ??_Timer0_StopTimer 0001  
                                                       __pidataBANK0 3EE6  
                                                      __end_of_fgetc 388A  
                                                      __end_of_getch 3ECE  
                                                      __end_of_fputc 36C6  
                                                      __end_of_fputs 3BE0  
                                                __end_of_Timer0_Init 3DEA  
                                                      __end_of_putch 3EF4  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 00BF  
                                                          ?_ReadTime 0001  
                                                 __size_of_read_SRAM 014C  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 3E80  
                                                      _initialize_TX 3E6C  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                  ?_interrupt_enable 0001  
                                                            ?_strlen 0001  
                                                 ??_interrupt_enable 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                         ??_ReadTime 0005  
                                           __size_of_UARTRecieveChar 002C  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 3DC4  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2BA2  
                                                            ___fladd 1C14  
                                                            ___aomod 30EA  
                                                            ___flmul 1892  
                                                            ___flsub 3AC8  
                                                            ___fltol 32FE  
                                                            ___lldiv 3770  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 3222  
                                                            ___lomod 355E  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 388A  
                                                            _address 00D6  
                                                            __pcinit 3BE0  
                                                            __ramtop 0600  
                                                            __ptext0 1F58  
                                                            __ptext1 3DEA  
                                                            __ptext2 2E5A  
                                                            __ptext3 3E0C  
                                                            __ptext4 3B12  
                                                            __ptext5 3972  
                                                            __ptext6 3912  
                                                            __ptext7 06F2  
                                                            __ptext8 2488  
                                                            __ptext9 39C8  
                                                          ?_write_op 0001  
                                                            _getchar 3E94  
                                                          _T0CONbits 000FD5  
                                                  __end_of_read_SRAM 2FA6  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3C1C  
                                                            _isdigit 3D04  
                                                            _read_op 3E0C  
                                                         ??___xxtofl 0005  
                                                            _islower 3C94  
                                                            _isspace 3B5A  
                                                            _isupper 3CCC  
                                                            fgetc@fp 0003  
                                                            _time_ms 00C8  
                                                            atoi@neg 000E  
                                                            _sprintf 3972  
                                                         ??_get_temp 0034  
                                                            _strncmp 349C  
                                                            _toupper 39C8  
                                               end_of_initialization 3C0E  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                    ___lldiv@divisor 0009  
                                                  __end_of_timingISR 0034  
                                                    ___lldiv@counter 0011  
                                                  __end_of_vfpfcnvrt 1892  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 3912  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                         ??_write_op 0002  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 3ED6  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00A0  
                                                  ??_UARTRecieveChar 0001  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 3DC4  
                                                        vfpfcnvrt@vp 0067  
                                          __size_of_Timer0_StopTimer 0008  
                                          __end_of_Timer0_StartTimer 3EDE  
                                               read_SRAM@stored_temp 00AA  
                                                     __end_of_strlen 3D6E  
                                                start_initialization 3BE0  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 3C94  
                                                        __end_of_pad 3770  
                                                  __size_of_ReadTime 0016  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00F9  
                                               __end_of_UARTSendChar 3E6C  
                                        __end_ofi2_Timer0_StartTimer 3EE6  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 0080  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                          __size_of_interrupt_enable 0010  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1700 0012  
                                                          _atoi$1698 0010  
                                                          _atoi$1699 0014  
                                                       ?_Timer0_Init 0001  
                                                          _main$2137 00B0  
                                                          _main$2138 00B4  
                                                          _dtoa$1052 002E  
                                                      UARTSendChar@c 0001  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lldiv 0005  
                                                           ?___lodiv 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           ?_read_op 0001  
                                                           _ADC_Init 3EB6  
                                                           _ADC_Read 3A74  
                                                  __size_of_write_op 0022  
                                                           ?_islower 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                          _read_SRAM 2E5A  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 0080  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00A0  
                                                    UARTSendString@i 00A4  
                                                __end_of_int_to_char 3B5A  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 00C4  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 06F2  
                                                          _xtoa$1088 002F  
                                                          _xtoa$1089 0031  
                                                  ___wmul@multiplier 0001  
                                                   _Timer0_StopTimer 3ECE  
                                                          main@input 00BE  
                                                       _isspace$1735 0007  
                                                         ?_read_SRAM 00A6  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 3BF4  
                                                    _UARTRecieveChar 3D6E  
                                                           _ReadTime 3E2E  
                                                   ??_UARTSendString 00A2  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 3E58  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lldiv 0090  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 0082  
                                                           ___xxtofl 2CFE  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_read_op 0022  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 3C94  
                                                           __ptext11 3CCC  
                                                           __ptext20 3C58  
                                                           __ptext12 3C1C  
                                                           __ptext21 30EA  
                                                           __ptext13 26E0  
                                                           __ptext30 3B5A  
                                                           __ptext22 2BA2  
                                                           __ptext14 355E  
                                                           __ptext31 3D04  
                                                           __ptext23 3A1E  
                                                           __ptext15 3222  
                                                           __ptext40 3E6C  
                                                           __ptext32 3D9A  
                                                           __ptext24 36C6  
                                                           __ptext16 349C  
                                                           __ptext41 3E80  
                                                           __ptext33 3E94  
                                                           __ptext25 3D3C  
                                                           __ptext17 2FA6  
                                                           __ptext50 32FE  
                                                           __ptext42 33D2  
                                                           __ptext34 3800  
                                                           __ptext26 3B9E  
                                                           __ptext18 28A2  
                                                           __ptext51 3D6E  
                                                           __ptext43 2CFE  
                                                           __ptext35 3EC4  
                                                           __ptext27 361A  
                                                           __ptext19 221E  
                                                           __ptext52 3ECE  
                                                           __ptext44 3AC8  
                                                           __ptext36 388A  
                                                           __ptext28 3EEE  
                                                           __ptext53 3ED6  
                                                           __ptext45 1C14  
                                                           __ptext37 3E44  
                                                           __ptext29 2A3C  
                                                           __ptext54 3DC4  
                                                           __ptext46 1892  
                                                           __ptext38 3E58  
                                                           __ptext55 3E2E  
                                                           __ptext47 3A74  
                                                           __ptext39 3EA6  
                                                           __ptext48 3EB6  
                                                           __ptext57 3EDE  
                                                           __ptext49 3770  
                                                   __size_of_isupper 0038  
                                                           _get_temp 33D2  
                                                   _interrupt_enable 3EA6  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                       _UARTSendChar 3E58  
                                                        _int_to_char 3B12  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 02C6  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 3E94  
                                              __end_of_initialize_TX 3E80  
                                                          stoa@F1152 00F9  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                     read_op@address 0001  
                                                           _ungetbuf 00D8  
                                                           _ungetcnt 007E  
                                                           _vfprintf 3912  
                                                   read_SRAM@address 00A6  
                                              read_SRAM@time_elapsed 00AC  
                                                   ___aomod@dividend 0001  
                                                           _write_op 3DEA  
                                                    main@temperature 00BA  
                                                     _vfpfcnvrt$1103 005B  
                                                     _vfpfcnvrt$1104 005D  
                                                         _INTCONbits 000FF2  
                                            __end_of_UARTRecieveChar 3D9A  
                                                        ??_read_SRAM 00A8  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 3EF4  
                                                          sprintf@ap 0090  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                   ___lldiv@dividend 0005  
                                                        _UARTNewLine 3E44  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                      read_op@result 0002  
                                                           sprintf@f 008A  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 0080  
                                                   ___lldiv@quotient 000D  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                           __end_of_Timer0_StopTimer 3ED6  
                                                       ___aomod@sign 0012  
