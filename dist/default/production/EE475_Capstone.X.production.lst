

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar  4 01:26:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F452 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  003FD6                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for stoa@F1152
   119  003FD6  28                 	db	40
   120  003FD7  6E                 	db	110
   121  003FD8  75                 	db	117
   122  003FD9  6C                 	db	108
   123  003FDA  6C                 	db	108
   124  003FDB  29                 	db	41
   125  003FDC  00                 	db	0
   126  0000                     _CCP1CON	set	4029
   127  0000                     _CCPR1L	set	4030
   128  0000                     _PR2	set	4043
   129  0000                     _T2CON	set	4042
   130  0000                     _ADRESL	set	4035
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADCON0	set	4034
   133  0000                     _SSPBUF	set	4041
   134  0000                     _SSPCON1	set	4038
   135  0000                     _SSPSTATbits	set	4039
   136  0000                     _T0CON	set	4053
   137  0000                     _TMR0L	set	4054
   138  0000                     _TMR0H	set	4055
   139  0000                     _T0CONbits	set	4053
   140  0000                     _ADCON1	set	4033
   141  0000                     _RCREG1	set	4014
   142  0000                     _TXREG	set	4013
   143  0000                     _RCSTAbits	set	4011
   144  0000                     _RCSTA	set	4011
   145  0000                     _SPBRG	set	4015
   146  0000                     _TXSTAbits	set	4012
   147  0000                     _RCONbits	set	4048
   148  0000                     _INTCON2bits	set	4081
   149  0000                     _INTCONbits	set	4082
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TRISA	set	3986
   152  0000                     _PORTA	set	3968
   153  0000                     _PORTD	set	3971
   154  0000                     _PORTB	set	3969
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISC	set	3988
   158  0000                     _GO_nDONE	set	32274
   159  0000                     _TMR0IE	set	32661
   160  0000                     _TMR0IF	set	32658
   161  0000                     _RCIF	set	31989
   162  0000                     _TMR2IP	set	31993
   163  0000                     _TMR2IE	set	31977
   164  0000                     _RC0	set	31760
   165  0000                     _RB5	set	31757
   166                           
   167                           	psect	smallconst
   168  000600                     __psmallconst:
   169                           	opt callstack 0
   170  000600  00                 	db	0
   171  000601                     STR_9:
   172  000601  44                 	db	68	;'D'
   173  000602  6F                 	db	111	;'o'
   174  000603  6E                 	db	110	;'n'
   175  000604  65                 	db	101	;'e'
   176  000605  20                 	db	32
   177  000606  72                 	db	114	;'r'
   178  000607  65                 	db	101	;'e'
   179  000608  61                 	db	97	;'a'
   180  000609  64                 	db	100	;'d'
   181  00060A  69                 	db	105	;'i'
   182  00060B  6E                 	db	110	;'n'
   183  00060C  67                 	db	103	;'g'
   184  00060D  20                 	db	32
   185  00060E  66                 	db	102	;'f'
   186  00060F  72                 	db	114	;'r'
   187  000610  6F                 	db	111	;'o'
   188  000611  6D                 	db	109	;'m'
   189  000612  20                 	db	32
   190  000613  6D                 	db	109	;'m'
   191  000614  65                 	db	101	;'e'
   192  000615  6D                 	db	109	;'m'
   193  000616  6F                 	db	111	;'o'
   194  000617  72                 	db	114	;'r'
   195  000618  79                 	db	121	;'y'
   196  000619  2E                 	db	46
   197  00061A  00                 	db	0
   198  00061B                     STR_3:
   199  00061B  54                 	db	84	;'T'
   200  00061C  65                 	db	101	;'e'
   201  00061D  6D                 	db	109	;'m'
   202  00061E  70                 	db	112	;'p'
   203  00061F  65                 	db	101	;'e'
   204  000620  72                 	db	114	;'r'
   205  000621  61                 	db	97	;'a'
   206  000622  74                 	db	116	;'t'
   207  000623  75                 	db	117	;'u'
   208  000624  72                 	db	114	;'r'
   209  000625  65                 	db	101	;'e'
   210  000626  20                 	db	32
   211  000627  61                 	db	97	;'a'
   212  000628  74                 	db	116	;'t'
   213  000629  20                 	db	32
   214  00062A  61                 	db	97	;'a'
   215  00062B  64                 	db	100	;'d'
   216  00062C  64                 	db	100	;'d'
   217  00062D  72                 	db	114	;'r'
   218  00062E  65                 	db	101	;'e'
   219  00062F  73                 	db	115	;'s'
   220  000630  73                 	db	115	;'s'
   221  000631  20                 	db	32
   222  000632  00                 	db	0
   223  000633                     STR_14:
   224  000633  44                 	db	68	;'D'
   225  000634  6F                 	db	111	;'o'
   226  000635  6E                 	db	110	;'n'
   227  000636  65                 	db	101	;'e'
   228  000637  20                 	db	32
   229  000638  77                 	db	119	;'w'
   230  000639  72                 	db	114	;'r'
   231  00063A  69                 	db	105	;'i'
   232  00063B  74                 	db	116	;'t'
   233  00063C  69                 	db	105	;'i'
   234  00063D  6E                 	db	110	;'n'
   235  00063E  67                 	db	103	;'g'
   236  00063F  20                 	db	32
   237  000640  74                 	db	116	;'t'
   238  000641  6F                 	db	111	;'o'
   239  000642  20                 	db	32
   240  000643  6D                 	db	109	;'m'
   241  000644  65                 	db	101	;'e'
   242  000645  6D                 	db	109	;'m'
   243  000646  6F                 	db	111	;'o'
   244  000647  72                 	db	114	;'r'
   245  000648  79                 	db	121	;'y'
   246  000649  2E                 	db	46
   247  00064A  00                 	db	0
   248  00064B                     STR_6:
   249  00064B  54                 	db	84	;'T'
   250  00064C  69                 	db	105	;'i'
   251  00064D  6D                 	db	109	;'m'
   252  00064E  65                 	db	101	;'e'
   253  00064F  20                 	db	32
   254  000650  61                 	db	97	;'a'
   255  000651  74                 	db	116	;'t'
   256  000652  20                 	db	32
   257  000653  61                 	db	97	;'a'
   258  000654  64                 	db	100	;'d'
   259  000655  64                 	db	100	;'d'
   260  000656  72                 	db	114	;'r'
   261  000657  65                 	db	101	;'e'
   262  000658  73                 	db	115	;'s'
   263  000659  73                 	db	115	;'s'
   264  00065A  20                 	db	32
   265  00065B  00                 	db	0
   266  00065C                     STR_11:
   267  00065C  20                 	db	32
   268  00065D  74                 	db	116	;'t'
   269  00065E  6F                 	db	111	;'o'
   270  00065F  20                 	db	32
   271  000660  61                 	db	97	;'a'
   272  000661  64                 	db	100	;'d'
   273  000662  64                 	db	100	;'d'
   274  000663  72                 	db	114	;'r'
   275  000664  65                 	db	101	;'e'
   276  000665  73                 	db	115	;'s'
   277  000666  73                 	db	115	;'s'
   278  000667  20                 	db	32
   279  000668  00                 	db	0
   280  000669                     STR_5:
   281  000669  20                 	db	32
   282  00066A  64                 	db	100	;'d'
   283  00066B  65                 	db	101	;'e'
   284  00066C  67                 	db	103	;'g'
   285  00066D  72                 	db	114	;'r'
   286  00066E  65                 	db	101	;'e'
   287  00066F  65                 	db	101	;'e'
   288  000670  73                 	db	115	;'s'
   289  000671  20                 	db	32
   290  000672  43                 	db	67	;'C'
   291  000673  20                 	db	32
   292  000674  00                 	db	0
   293  000675                     STR_10:
   294  000675  57                 	db	87	;'W'
   295  000676  72                 	db	114	;'r'
   296  000677  69                 	db	105	;'i'
   297  000678  74                 	db	116	;'t'
   298  000679  69                 	db	105	;'i'
   299  00067A  6E                 	db	110	;'n'
   300  00067B  67                 	db	103	;'g'
   301  00067C  20                 	db	32
   302  00067D  00                 	db	0
   303  00067E                     STR_8:
   304  00067E  20                 	db	32
   305  00067F  6D                 	db	109	;'m'
   306  000680  69                 	db	105	;'i'
   307  000681  6E                 	db	110	;'n'
   308  000682  75                 	db	117	;'u'
   309  000683  74                 	db	116	;'t'
   310  000684  65                 	db	101	;'e'
   311  000685  73                 	db	115	;'s'
   312  000686  00                 	db	0
   313  000687                     STR_115:
   314  000687  68                 	db	104	;'h'
   315  000688  68                 	db	104	;'h'
   316  000689  58                 	db	88	;'X'
   317  00068A  00                 	db	0
   318  00068B                     STR_15:
   319  00068B  68                 	db	104	;'h'
   320  00068C  68                 	db	104	;'h'
   321  00068D  64                 	db	100	;'d'
   322  00068E  00                 	db	0
   323  00068F                     STR_19:
   324  00068F  68                 	db	104	;'h'
   325  000690  68                 	db	104	;'h'
   326  000691  69                 	db	105	;'i'
   327  000692  00                 	db	0
   328  000693                     STR_71:
   329  000693  68                 	db	104	;'h'
   330  000694  68                 	db	104	;'h'
   331  000695  6E                 	db	110	;'n'
   332  000696  00                 	db	0
   333  000697                     STR_51:
   334  000697  68                 	db	104	;'h'
   335  000698  68                 	db	104	;'h'
   336  000699  6F                 	db	111	;'o'
   337  00069A  00                 	db	0
   338  00069B                     STR_91:
   339  00069B  68                 	db	104	;'h'
   340  00069C  68                 	db	104	;'h'
   341  00069D  75                 	db	117	;'u'
   342  00069E  00                 	db	0
   343  00069F                     STR_111:
   344  00069F  68                 	db	104	;'h'
   345  0006A0  68                 	db	104	;'h'
   346  0006A1  78                 	db	120	;'x'
   347  0006A2  00                 	db	0
   348  0006A3                     STR_1:
   349  0006A3  25                 	db	37
   350  0006A4  6C                 	db	108	;'l'
   351  0006A5  75                 	db	117	;'u'
   352  0006A6  00                 	db	0
   353  0006A7                     STR_133:
   354  0006A7  6C                 	db	108	;'l'
   355  0006A8  58                 	db	88	;'X'
   356  0006A9  00                 	db	0
   357  0006AA                     STR_142:
   358  0006AA  7A                 	db	122	;'z'
   359  0006AB  58                 	db	88	;'X'
   360  0006AC  00                 	db	0
   361  0006AD                     STR_33:
   362  0006AD  6C                 	db	108	;'l'
   363  0006AE  64                 	db	100	;'d'
   364  0006AF  00                 	db	0
   365  0006B0                     STR_42:
   366  0006B0  7A                 	db	122	;'z'
   367  0006B1  64                 	db	100	;'d'
   368  0006B2  00                 	db	0
   369  0006B3                     STR_37:
   370  0006B3  6C                 	db	108	;'l'
   371  0006B4  69                 	db	105	;'i'
   372  0006B5  00                 	db	0
   373  0006B6                     STR_46:
   374  0006B6  7A                 	db	122	;'z'
   375  0006B7  69                 	db	105	;'i'
   376  0006B8  00                 	db	0
   377  0006B9                     STR_81:
   378  0006B9  6C                 	db	108	;'l'
   379  0006BA  6E                 	db	110	;'n'
   380  0006BB  00                 	db	0
   381  0006BC                     STR_86:
   382  0006BC  7A                 	db	122	;'z'
   383  0006BD  6E                 	db	110	;'n'
   384  0006BE  00                 	db	0
   385  0006BF                     STR_61:
   386  0006BF  6C                 	db	108	;'l'
   387  0006C0  6F                 	db	111	;'o'
   388  0006C1  00                 	db	0
   389  0006C2                     STR_66:
   390  0006C2  7A                 	db	122	;'z'
   391  0006C3  6F                 	db	111	;'o'
   392  0006C4  00                 	db	0
   393  0006C5                     STR_106:
   394  0006C5  7A                 	db	122	;'z'
   395  0006C6  75                 	db	117	;'u'
   396  0006C7  00                 	db	0
   397  0006C8                     STR_129:
   398  0006C8  6C                 	db	108	;'l'
   399  0006C9  78                 	db	120	;'x'
   400  0006CA  00                 	db	0
   401  0006CB                     STR_138:
   402  0006CB  7A                 	db	122	;'z'
   403  0006CC  78                 	db	120	;'x'
   404  0006CD  00                 	db	0
   405  0006CE                     STR_4:
   406  0006CE  3A                 	db	58	;':'
   407  0006CF  20                 	db	32
   408  0006D0  00                 	db	0
   409  0006D1  25                 	db	37
   410  0006D2  64                 	db	100	;'d'
   411  0006D3  00                 	db	0
   412  0000                     
   413                           ; #config settings
   414  0006D4  00                 	db	0	; dummy byte at the end
   415  0000                     
   416                           	psect	cinit
   417  003C88                     __pcinit:
   418                           	opt callstack 0
   419  003C88                     start_initialization:
   420                           	opt callstack 0
   421  003C88                     __initialization:
   422                           	opt callstack 0
   423                           
   424                           ; Initialize objects allocated to BANK0 (7 bytes)
   425                           ; load TBLPTR registers with __pidataBANK0
   426  003C88  0ED6               	movlw	low __pidataBANK0
   427  003C8A  6EF6               	movwf	tblptrl,c
   428  003C8C  0E3F               	movlw	high __pidataBANK0
   429  003C8E  6EF7               	movwf	tblptrh,c
   430  003C90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   431  003C92  6EF8               	movwf	tblptru,c
   432  003C94  EE00  F0F5         	lfsr	0,__pdataBANK0
   433  003C98  EE10 F007          	lfsr	1,7
   434  003C9C                     copy_data0:
   435  003C9C  0009               	tblrd		*+
   436  003C9E  CFF5 FFEE          	movff	tablat,postinc0
   437  003CA2  50E5               	movf	postdec1,w,c
   438  003CA4  50E1               	movf	fsr1l,w,c
   439  003CA6  E1FA               	bnz	copy_data0
   440                           
   441                           ; Clear objects allocated to BANK0 (58 bytes)
   442  003CA8  EE00  F0BB         	lfsr	0,__pbssBANK0
   443  003CAC  0E3A               	movlw	58
   444  003CAE                     clear_0:
   445  003CAE  6AEE               	clrf	postinc0,c
   446  003CB0  06E8               	decf	wreg,f,c
   447  003CB2  E1FD               	bnz	clear_0
   448                           
   449                           ; Clear objects allocated to COMRAM (1 bytes)
   450  003CB4  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   451  003CB6                     end_of_initialization:
   452                           	opt callstack 0
   453  003CB6                     __end_of__initialization:
   454                           	opt callstack 0
   455  003CB6  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   456  003CB8  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   457  003CBA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   458  003CBC  6EF8               	movwf	tblptru,c
   459  003CBE  0100               	movlb	0
   460  003CC0  EFEF  F012         	goto	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMRAM
   463  00007E                     __pbssCOMRAM:
   464                           	opt callstack 0
   465  00007E                     _ungetcnt:
   466                           	opt callstack 0
   467  00007E                     	ds	1
   468                           
   469                           	psect	bssBANK0
   470  0000BB                     __pbssBANK0:
   471                           	opt callstack 0
   472  0000BB                     _lcd:
   473                           	opt callstack 0
   474  0000BB                     	ds	5
   475  0000C0                     _time_ms_2:
   476                           	opt callstack 0
   477  0000C0                     	ds	4
   478  0000C4                     _time_ms:
   479                           	opt callstack 0
   480  0000C4                     	ds	4
   481  0000C8                     _errno:
   482                           	opt callstack 0
   483  0000C8                     	ds	2
   484  0000CA                     _nout:
   485                           	opt callstack 0
   486  0000CA                     	ds	2
   487  0000CC                     _width:
   488                           	opt callstack 0
   489  0000CC                     	ds	2
   490  0000CE                     _prec:
   491                           	opt callstack 0
   492  0000CE                     	ds	2
   493  0000D0                     _flags:
   494                           	opt callstack 0
   495  0000D0                     	ds	2
   496  0000D2                     _address:
   497                           	opt callstack 0
   498  0000D2                     	ds	2
   499  0000D4                     	ds	1
   500  0000D5                     _dbuf:
   501                           	opt callstack 0
   502  0000D5                     	ds	32
   503                           
   504                           	psect	dataBANK0
   505  0000F5                     __pdataBANK0:
   506                           	opt callstack 0
   507  0000F5                     stoa@F1152:
   508                           	opt callstack 0
   509  0000F5                     	ds	7
   510                           
   511                           	psect	cstackBANK0
   512  000080                     __pcstackBANK0:
   513                           	opt callstack 0
   514  000080                     ?_sprintf:
   515                           	opt callstack 0
   516  000080                     sprintf@s:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  000080                     	ds	2
   521  000082                     sprintf@fmt:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  000082                     	ds	8
   526  00008A                     sprintf@f:
   527                           	opt callstack 0
   528                           
   529                           ; 6 bytes @ 0xA
   530  00008A                     	ds	6
   531  000090                     sprintf@ap:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x10
   535  000090                     	ds	2
   536  000092                     int_to_char@result:
   537                           	opt callstack 0
   538                           
   539                           ; 10 bytes @ 0x12
   540  000092                     	ds	10
   541  00009C                     int_to_char@the_num:
   542                           	opt callstack 0
   543                           
   544                           ; 4 bytes @ 0x1C
   545  00009C                     	ds	4
   546  0000A0                     UARTSendString@c:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x20
   550  0000A0                     	ds	2
   551  0000A2                     ??_UARTSendString:
   552                           
   553                           ; 1 bytes @ 0x22
   554  0000A2                     	ds	2
   555  0000A4                     UARTSendString@i:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x24
   559  0000A4                     	ds	2
   560  0000A6                     ??_write_SRAM:
   561  0000A6                     read_SRAM@address:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x26
   565  0000A6                     	ds	2
   566  0000A8                     ??_read_SRAM:
   567  0000A8                     _write_SRAM$2152:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x28
   571  0000A8                     	ds	2
   572  0000AA                     read_SRAM@stored_temp:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x2A
   576  0000AA                     	ds	2
   577  0000AC                     read_SRAM@time_elapsed:
   578                           	opt callstack 0
   579  0000AC                     _write_SRAM$2153:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x2C
   583  0000AC                     	ds	4
   584  0000B0                     write_SRAM@temperature:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x30
   588  0000B0                     	ds	2
   589  0000B2                     write_SRAM@curr_time:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x32
   593  0000B2                     	ds	2
   594  0000B4                     ??_main:
   595                           
   596                           ; 1 bytes @ 0x34
   597  0000B4                     	ds	2
   598  0000B6                     main@input_address:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x36
   602  0000B6                     	ds	2
   603  0000B8                     main@temp:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x38
   607  0000B8                     	ds	2
   608  0000BA                     main@input:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x3A
   612  0000BA                     	ds	1
   613                           
   614                           	psect	cstackCOMRAM
   615  000001                     __pcstackCOMRAM:
   616                           	opt callstack 0
   617  000001                     ??_UARTRecieveChar:
   618  000001                     ?_ADC_Read:
   619                           	opt callstack 0
   620  000001                     ?_strlen:
   621                           	opt callstack 0
   622  000001                     ?_isupper:
   623                           	opt callstack 0
   624  000001                     ?_isalpha:
   625                           	opt callstack 0
   626  000001                     ?_isdigit:
   627                           	opt callstack 0
   628  000001                     ?_strncmp:
   629                           	opt callstack 0
   630  000001                     ?_isspace:
   631                           	opt callstack 0
   632  000001                     ?_getch:
   633                           	opt callstack 0
   634  000001                     ?_islower:
   635                           	opt callstack 0
   636  000001                     ?___wmul:
   637                           	opt callstack 0
   638  000001                     ?_ReadTime:
   639                           	opt callstack 0
   640  000001                     ?___fladd:
   641                           	opt callstack 0
   642  000001                     ?___xxtofl:
   643                           	opt callstack 0
   644  000001                     ?___aodiv:
   645                           	opt callstack 0
   646  000001                     ?___aomod:
   647                           	opt callstack 0
   648  000001                     ?___lodiv:
   649                           	opt callstack 0
   650  000001                     ?___lomod:
   651                           	opt callstack 0
   652  000001                     write_op@data:
   653                           	opt callstack 0
   654  000001                     read_op@address:
   655                           	opt callstack 0
   656  000001                     UARTSendChar@c:
   657                           	opt callstack 0
   658  000001                     set_duty_cycle@lower_2:
   659                           	opt callstack 0
   660  000001                     initialize_PWM@freq:
   661                           	opt callstack 0
   662  000001                     ___wmul@multiplier:
   663                           	opt callstack 0
   664  000001                     isalpha@c:
   665                           	opt callstack 0
   666  000001                     isdigit@c:
   667                           	opt callstack 0
   668  000001                     isspace@c:
   669                           	opt callstack 0
   670  000001                     isupper@c:
   671                           	opt callstack 0
   672  000001                     fputc@c:
   673                           	opt callstack 0
   674  000001                     strlen@s:
   675                           	opt callstack 0
   676  000001                     strncmp@_l:
   677                           	opt callstack 0
   678  000001                     islower@c:
   679                           	opt callstack 0
   680  000001                     ___fladd@b:
   681                           	opt callstack 0
   682  000001                     ___xxtofl@val:
   683                           	opt callstack 0
   684  000001                     ___aodiv@dividend:
   685                           	opt callstack 0
   686  000001                     ___aomod@dividend:
   687                           	opt callstack 0
   688  000001                     ___lodiv@dividend:
   689                           	opt callstack 0
   690  000001                     ___lomod@dividend:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x0
   694  000001                     	ds	1
   695  000002                     write_op@address:
   696                           	opt callstack 0
   697  000002                     read_op@result:
   698                           	opt callstack 0
   699  000002                     set_duty_cycle@upper_8:
   700                           	opt callstack 0
   701                           
   702                           ; 1 bytes @ 0x1
   703  000002                     	ds	1
   704  000003                     ??_ADC_Read:
   705  000003                     ??_isupper:
   706  000003                     ??_isalpha:
   707  000003                     ??_isdigit:
   708  000003                     ??_isspace:
   709  000003                     ??_islower:
   710  000003                     ?_fgetc:
   711                           	opt callstack 0
   712  000003                     set_duty_cycle@mask:
   713                           	opt callstack 0
   714  000003                     ___wmul@multiplicand:
   715                           	opt callstack 0
   716  000003                     fputc@fp:
   717                           	opt callstack 0
   718  000003                     fgetc@fp:
   719                           	opt callstack 0
   720  000003                     strlen@a:
   721                           	opt callstack 0
   722  000003                     strncmp@_r:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x2
   726  000003                     	ds	2
   727  000005                     ??_fputc:
   728  000005                     ??_fgetc:
   729  000005                     ??___xxtofl:
   730  000005                     ?___lldiv:
   731                           	opt callstack 0
   732  000005                     ADC_Read@channel:
   733                           	opt callstack 0
   734  000005                     ___wmul@product:
   735                           	opt callstack 0
   736  000005                     strncmp@n:
   737                           	opt callstack 0
   738  000005                     ___lldiv@dividend:
   739                           	opt callstack 0
   740  000005                     ___fladd@a:
   741                           	opt callstack 0
   742                           
   743                           ; 4 bytes @ 0x4
   744  000005                     	ds	2
   745  000007                     ??_strncmp:
   746  000007                     ?_toupper:
   747                           	opt callstack 0
   748  000007                     _isspace$1756:
   749                           	opt callstack 0
   750  000007                     toupper@c:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754  000007                     	ds	1
   755  000008                     ?_atoi:
   756                           	opt callstack 0
   757  000008                     atoi@s:
   758                           	opt callstack 0
   759  000008                     strncmp@l:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x7
   763  000008                     	ds	1
   764  000009                     ??_toupper:
   765  000009                     ??___fladd:
   766  000009                     ___xxtofl@sign:
   767                           	opt callstack 0
   768  000009                     ___lldiv@divisor:
   769                           	opt callstack 0
   770  000009                     ___aodiv@divisor:
   771                           	opt callstack 0
   772  000009                     ___aomod@divisor:
   773                           	opt callstack 0
   774  000009                     ___lodiv@divisor:
   775                           	opt callstack 0
   776  000009                     ___lomod@divisor:
   777                           	opt callstack 0
   778                           
   779                           ; 8 bytes @ 0x8
   780  000009                     	ds	1
   781  00000A                     ??_atoi:
   782  00000A                     ?_stoa:
   783                           	opt callstack 0
   784  00000A                     ___xxtofl@exp:
   785                           	opt callstack 0
   786  00000A                     stoa@fp:
   787                           	opt callstack 0
   788  00000A                     fputs@s:
   789                           	opt callstack 0
   790  00000A                     fgetc@c:
   791                           	opt callstack 0
   792  00000A                     strncmp@r:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x9
   796  00000A                     	ds	1
   797  00000B                     ___xxtofl@arg:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0xA
   801  00000B                     	ds	1
   802  00000C                     stoa@s:
   803                           	opt callstack 0
   804  00000C                     fputs@fp:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0xB
   808  00000C                     	ds	1
   809  00000D                     ___fladd@signs:
   810                           	opt callstack 0
   811  00000D                     _toupper$1876:
   812                           	opt callstack 0
   813  00000D                     ___lldiv@quotient:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0xC
   817  00000D                     	ds	1
   818  00000E                     ??_stoa:
   819  00000E                     ___fladd@aexp:
   820                           	opt callstack 0
   821  00000E                     fputs@c:
   822                           	opt callstack 0
   823  00000E                     atoi@neg:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0xD
   827  00000E                     	ds	1
   828  00000F                     ?___flmul:
   829                           	opt callstack 0
   830  00000F                     ___fladd@bexp:
   831                           	opt callstack 0
   832  00000F                     fputs@i:
   833                           	opt callstack 0
   834  00000F                     ___flmul@b:
   835                           	opt callstack 0
   836  00000F                     stoa@nuls:
   837                           	opt callstack 0
   838                           
   839                           ; 7 bytes @ 0xE
   840  00000F                     	ds	1
   841  000010                     ___fladd@grs:
   842                           	opt callstack 0
   843  000010                     _atoi$1719:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0xF
   847  000010                     	ds	1
   848  000011                     ?_pad:
   849                           	opt callstack 0
   850  000011                     ___lldiv@counter:
   851                           	opt callstack 0
   852  000011                     ___aodiv@counter:
   853                           	opt callstack 0
   854  000011                     ___aomod@counter:
   855                           	opt callstack 0
   856  000011                     ___lomod@counter:
   857                           	opt callstack 0
   858  000011                     pad@fp:
   859                           	opt callstack 0
   860  000011                     ___lodiv@quotient:
   861                           	opt callstack 0
   862                           
   863                           ; 8 bytes @ 0x10
   864  000011                     	ds	1
   865  000012                     ___aodiv@sign:
   866                           	opt callstack 0
   867  000012                     ___aomod@sign:
   868                           	opt callstack 0
   869  000012                     _atoi$1721:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x11
   873  000012                     	ds	1
   874  000013                     ?_abs:
   875                           	opt callstack 0
   876  000013                     pad@buf:
   877                           	opt callstack 0
   878  000013                     abs@a:
   879                           	opt callstack 0
   880  000013                     ___flmul@a:
   881                           	opt callstack 0
   882  000013                     ___aodiv@quotient:
   883                           	opt callstack 0
   884                           
   885                           ; 8 bytes @ 0x12
   886  000013                     	ds	1
   887  000014                     _atoi$1720:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x13
   891  000014                     	ds	1
   892  000015                     ??_abs:
   893  000015                     pad@p:
   894                           	opt callstack 0
   895  000015                     atoi@n:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x14
   899  000015                     	ds	1
   900  000016                     stoa@i:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x15
   904  000016                     	ds	1
   905  000017                     ??___flmul:
   906  000017                     ??_pad:
   907                           
   908                           ; 1 bytes @ 0x16
   909  000017                     	ds	1
   910  000018                     pad@i:
   911                           	opt callstack 0
   912  000018                     stoa@w:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x17
   916  000018                     	ds	1
   917  000019                     ___lodiv@counter:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x18
   921  000019                     	ds	1
   922  00001A                     pad@w:
   923                           	opt callstack 0
   924  00001A                     stoa@cp:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x19
   928  00001A                     	ds	1
   929  00001B                     ___flmul@sign:
   930                           	opt callstack 0
   931                           
   932                           ; 1 bytes @ 0x1A
   933  00001B                     	ds	1
   934  00001C                     ?_ctoa:
   935                           	opt callstack 0
   936  00001C                     ?_dtoa:
   937                           	opt callstack 0
   938  00001C                     ?_otoa:
   939                           	opt callstack 0
   940  00001C                     ?_utoa:
   941                           	opt callstack 0
   942  00001C                     ?_xtoa:
   943                           	opt callstack 0
   944  00001C                     ctoa@fp:
   945                           	opt callstack 0
   946  00001C                     dtoa@fp:
   947                           	opt callstack 0
   948  00001C                     otoa@fp:
   949                           	opt callstack 0
   950  00001C                     stoa@p:
   951                           	opt callstack 0
   952  00001C                     utoa@fp:
   953                           	opt callstack 0
   954  00001C                     xtoa@fp:
   955                           	opt callstack 0
   956  00001C                     ___flmul@grs:
   957                           	opt callstack 0
   958                           
   959                           ; 4 bytes @ 0x1B
   960  00001C                     	ds	2
   961  00001E                     ctoa@c:
   962                           	opt callstack 0
   963  00001E                     stoa@l:
   964                           	opt callstack 0
   965  00001E                     dtoa@d:
   966                           	opt callstack 0
   967  00001E                     otoa@d:
   968                           	opt callstack 0
   969  00001E                     utoa@d:
   970                           	opt callstack 0
   971  00001E                     xtoa@d:
   972                           	opt callstack 0
   973                           
   974                           ; 8 bytes @ 0x1D
   975  00001E                     	ds	1
   976  00001F                     ctoa@w:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x1E
   980  00001F                     	ds	1
   981  000020                     ___flmul@aexp:
   982                           	opt callstack 0
   983                           
   984                           ; 1 bytes @ 0x1F
   985  000020                     	ds	1
   986  000021                     ___flmul@bexp:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0x20
   990  000021                     	ds	1
   991  000022                     ___flmul@prod:
   992                           	opt callstack 0
   993                           
   994                           ; 4 bytes @ 0x21
   995  000022                     	ds	4
   996  000026                     ??_dtoa:
   997  000026                     ??_otoa:
   998  000026                     ??_utoa:
   999  000026                     xtoa@x:
  1000                           	opt callstack 0
  1001  000026                     ___flmul@temp:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x25
  1005  000026                     	ds	1
  1006  000027                     ??_xtoa:
  1007                           
  1008                           ; 1 bytes @ 0x26
  1009  000027                     	ds	1
  1010  000028                     ?___flsub:
  1011                           	opt callstack 0
  1012  000028                     ___flsub@b:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x27
  1016  000028                     	ds	4
  1017  00002C                     ___flsub@a:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x2B
  1021  00002C                     	ds	2
  1022  00002E                     _dtoa$1073:
  1023                           	opt callstack 0
  1024  00002E                     otoa@p:
  1025                           	opt callstack 0
  1026  00002E                     utoa@p:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2D
  1030  00002E                     	ds	1
  1031  00002F                     _xtoa$1109:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x2E
  1035  00002F                     	ds	1
  1036  000030                     ?_get_temp:
  1037                           	opt callstack 0
  1038  000030                     dtoa@p:
  1039                           	opt callstack 0
  1040  000030                     otoa@t:
  1041                           	opt callstack 0
  1042  000030                     utoa@w:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x2F
  1046  000030                     	ds	1
  1047  000031                     _xtoa$1110:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x30
  1051  000031                     	ds	1
  1052  000032                     dtoa@w:
  1053                           	opt callstack 0
  1054  000032                     otoa@w:
  1055                           	opt callstack 0
  1056  000032                     utoa@n:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x31
  1060  000032                     	ds	1
  1061  000033                     xtoa@p:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x32
  1065  000033                     	ds	1
  1066  000034                     dtoa@s:
  1067                           	opt callstack 0
  1068  000034                     get_temp@real_voltage:
  1069                           	opt callstack 0
  1070  000034                     otoa@n:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 8 bytes @ 0x33
  1074  000034                     	ds	1
  1075  000035                     xtoa@w:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x34
  1079  000035                     	ds	1
  1080  000036                     dtoa@n:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x35
  1084  000036                     	ds	1
  1085  000037                     xtoa@n:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 8 bytes @ 0x36
  1089  000037                     	ds	1
  1090  000038                     get_temp@temp:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x37
  1094  000038                     	ds	2
  1095  00003A                     utoa@i:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x39
  1099  00003A                     	ds	2
  1100  00003C                     get_temp@adc_voltage:
  1101                           	opt callstack 0
  1102  00003C                     otoa@i:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x3B
  1106  00003C                     	ds	2
  1107  00003E                     ?___fltol:
  1108                           	opt callstack 0
  1109  00003E                     dtoa@i:
  1110                           	opt callstack 0
  1111  00003E                     ___fltol@f1:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x3D
  1115  00003E                     	ds	1
  1116  00003F                     xtoa@i:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x3E
  1120  00003F                     	ds	2
  1121  000041                     xtoa@c:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x40
  1125  000041                     	ds	1
  1126  000042                     ??___fltol:
  1127                           
  1128                           ; 1 bytes @ 0x41
  1129  000042                     	ds	1
  1130  000043                     ?_vfpfcnvrt:
  1131                           	opt callstack 0
  1132  000043                     vfpfcnvrt@fp:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x42
  1136  000043                     	ds	2
  1137  000045                     vfpfcnvrt@fmt:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x44
  1141  000045                     	ds	1
  1142  000046                     ___fltol@sign1:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x45
  1146  000046                     	ds	1
  1147  000047                     ___fltol@exp1:
  1148                           	opt callstack 0
  1149  000047                     vfpfcnvrt@ap:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x46
  1153  000047                     	ds	2
  1154  000049                     ??_vfpfcnvrt:
  1155                           
  1156                           ; 1 bytes @ 0x48
  1157  000049                     	ds	14
  1158  000057                     vfpfcnvrt@cp:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x56
  1162  000057                     	ds	2
  1163  000059                     vfpfcnvrt@done:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x58
  1167  000059                     	ds	2
  1168  00005B                     _vfpfcnvrt$1124:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x5A
  1172  00005B                     	ds	2
  1173  00005D                     _vfpfcnvrt$1125:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x5C
  1177  00005D                     	ds	2
  1178  00005F                     vfpfcnvrt@ll:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 8 bytes @ 0x5E
  1182  00005F                     	ds	8
  1183  000067                     vfpfcnvrt@vp:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x66
  1187  000067                     	ds	2
  1188  000069                     vfpfcnvrt@c:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x68
  1192  000069                     	ds	1
  1193  00006A                     vfpfcnvrt@llu:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 8 bytes @ 0x69
  1197  00006A                     	ds	8
  1198  000072                     ?_vfprintf:
  1199                           	opt callstack 0
  1200  000072                     vfprintf@fp:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x71
  1204  000072                     	ds	2
  1205  000074                     vfprintf@fmt:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x73
  1209  000074                     	ds	2
  1210  000076                     vfprintf@ap:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x75
  1214  000076                     	ds	2
  1215  000078                     vfprintf@cfmt:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x77
  1219  000078                     	ds	2
  1220  00007A                     ?_int_to_char:
  1221                           	opt callstack 0
  1222  00007A                     int_to_char@num:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x79
  1226  00007A                     	ds	4
  1227  00007E                     
  1228                           ; 1 bytes @ 0x7D
  1229 ;;
  1230 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1231 ;;
  1232 ;; *************** function _main *****************
  1233 ;; Defined at:
  1234 ;;		line 27 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  temp            2   56[BANK0 ] int 
  1239 ;;  input_addres    2   54[BANK0 ] int 
  1240 ;;  input           1   58[BANK0 ] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1250 ;;      Params:         0       0       0       0       0       0       0
  1251 ;;      Locals:         0       5       0       0       0       0       0
  1252 ;;      Temps:          0       2       0       0       0       0       0
  1253 ;;      Totals:         0       7       0       0       0       0       0
  1254 ;;Total ram usage:        7 bytes
  1255 ;; Hardware stack levels required when called:   12
  1256 ;; This function calls:
  1257 ;;		_Timer0_Init
  1258 ;;		_Timer0_StartTimer
  1259 ;;		_UARTNewLine
  1260 ;;		_UARTRecieveChar
  1261 ;;		_UARTSendString
  1262 ;;		___fltol
  1263 ;;		_get_temp
  1264 ;;		_initialize_PWM
  1265 ;;		_initialize_RX
  1266 ;;		_initialize_TX
  1267 ;;		_int_to_char
  1268 ;;		_interrupt_disable
  1269 ;;		_interrupt_enable
  1270 ;;		_read_SRAM
  1271 ;;		_set_duty_cycle
  1272 ;;		_write_SRAM
  1273 ;; This function is called by:
  1274 ;;		Startup code after reset
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text0
  1279  0025DE                     __ptext0:
  1280                           	opt callstack 0
  1281  0025DE                     _main:
  1282                           	opt callstack 0
  1283  0025DE  FFFF               	dw	65535	; assembler added errata NOP
  1284                           
  1285                           ;main.c: 28:   interrupt_enable();
  1286                           
  1287                           ;incstack = 0
  1288  0025E0  ECC4  F01F         	call	_interrupt_enable	;wreg free
  1289                           
  1290                           ;main.c: 29:   TRISCbits.TRISC2 = 0;
  1291  0025E4  9494               	bcf	3988,2,c	;volatile
  1292                           
  1293                           ;main.c: 30:   TMR2IE = 1;
  1294  0025E6  829D               	bsf	3997,1,c	;volatile
  1295                           
  1296                           ;main.c: 31:   TMR2IP = 1;
  1297  0025E8  829F               	bsf	3999,1,c	;volatile
  1298                           
  1299                           ;main.c: 32:   Timer0_Init();
  1300  0025EA  EC36  F01F         	call	_Timer0_Init	;wreg free
  1301                           
  1302                           ;main.c: 33:   Timer0_StartTimer();
  1303  0025EE  ECE3  F01F         	call	_Timer0_StartTimer	;wreg free
  1304                           
  1305                           ;main.c: 34:   initialize_TX();
  1306  0025F2  ECA7  F01F         	call	_initialize_TX	;wreg free
  1307                           
  1308                           ;main.c: 35:   initialize_RX();
  1309  0025F6  ECB1  F01F         	call	_initialize_RX	;wreg free
  1310                           
  1311                           ;main.c: 36:   TRISCbits.TRISC7 = 1;
  1312  0025FA  8E94               	bsf	3988,7,c	;volatile
  1313                           
  1314                           ;main.c: 37:   TRISCbits.TRISC6 = 0;
  1315  0025FC  9C94               	bcf	3988,6,c	;volatile
  1316  0025FE                     l5290:
  1317  0025FE  FFFF               	dw	65535	; assembler added errata NOP
  1318                           
  1319                           ;main.c: 39:     TRISCbits.TRISC7 = 1;
  1320  002600  8E94               	bsf	3988,7,c	;volatile
  1321                           
  1322                           ;main.c: 40:     char input = '`';
  1323  002602  0E60               	movlw	96
  1324  002604  D003               	goto	L1
  1325  002606                     l5294:
  1326  002606  FFFF               	dw	65535	; assembler added errata NOP
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 42:      input = UARTRecieveChar();
  1330  002608  EC0B  F01F         	call	_UARTRecieveChar	;wreg free
  1331  00260C                     L1:
  1332  00260C  FFFF               	dw	65535	; assembler added errata NOP
  1333  00260E  0100               	movlb	0	; () banked
  1334  002610  6FBA               	movwf	main@input& (0+255),b
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 41:     while (input < 'a' || input > 'z') {
  1338  002612  0E60               	movlw	96
  1339  002614  65BA               	cpfsgt	main@input& (0+255),b
  1340  002616  D7F7               	goto	l5294
  1341                           
  1342                           ; BSR set to: 0
  1343  002618  0E7B               	movlw	123
  1344  00261A  61BA               	cpfslt	main@input& (0+255),b
  1345  00261C  D7F4               	goto	l5294
  1346  00261E  D0AF               	goto	l5354
  1347  002620                     l5300:
  1348  002620  FFFF               	dw	65535	; assembler added errata NOP
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 46:       write_SRAM();
  1352  002622  ECFF  F011         	call	_write_SRAM	;wreg free
  1353                           
  1354                           ;main.c: 47:       break;
  1355  002626  D7EB               	goto	l5290
  1356  002628                     l163:
  1357  002628  FFFF               	dw	65535	; assembler added errata NOP
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 49:       TRISCbits.TRISC7 = 0;
  1361  00262A  9E94               	bcf	3988,7,c	;volatile
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main.c: 50:       input = ' ';
  1365  00262C  0E20               	movlw	32
  1366  00262E  D004               	goto	L2
  1367  002630                     l5304:
  1368  002630  FFFF               	dw	65535	; assembler added errata NOP
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;main.c: 52:         input = UARTRecieveChar();
  1372  002632  EC0B  F01F         	call	_UARTRecieveChar	;wreg free
  1373  002636  0100               	movlb	0	; () banked
  1374  002638                     L2:
  1375  002638  FFFF               	dw	65535	; assembler added errata NOP
  1376  00263A  6FBA               	movwf	main@input& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;main.c: 51:       while (input < '0' || input > '9') {
  1380  00263C  0E2F               	movlw	47
  1381  00263E  65BA               	cpfsgt	main@input& (0+255),b
  1382  002640  D7F7               	goto	l5304
  1383                           
  1384                           ; BSR set to: 0
  1385  002642  0E3A               	movlw	58
  1386  002644  61BA               	cpfslt	main@input& (0+255),b
  1387  002646  D7F4               	goto	l5304
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 54:       int input_address = input & 0xF;
  1391  002648  C0BA  F0B4         	movff	main@input,??_main
  1392  00264C  0E0F               	movlw	15
  1393  00264E  17B4               	andwf	??_main& (0+255),f,b
  1394  002650  51B4               	movf	??_main& (0+255),w,b
  1395  002652  6FB6               	movwf	main@input_address& (0+255),b
  1396  002654  6BB7               	clrf	(main@input_address+1)& (0+255),b
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;main.c: 55:       read_SRAM(input_address);
  1400  002656  C0B6  F0A6         	movff	main@input_address,read_SRAM@address
  1401  00265A  C0B7  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1402  00265E  ECCD  F018         	call	_read_SRAM	;wreg free
  1403                           
  1404                           ;main.c: 56:       break;
  1405  002662  D7CD               	goto	l5290
  1406  002664                     l5314:
  1407  002664  FFFF               	dw	65535	; assembler added errata NOP
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;main.c: 58:       interrupt_enable();
  1411  002666  ECC4  F01F         	call	_interrupt_enable	;wreg free
  1412                           
  1413                           ;main.c: 59:       interrupt_disable();
  1414  00266A  ECD3  F01F         	call	_interrupt_disable	;wreg free
  1415                           
  1416                           ;main.c: 60:       TMR2IE = 1;
  1417  00266E  829D               	bsf	3997,1,c	;volatile
  1418                           
  1419                           ;main.c: 61:       TMR2IP = 1;
  1420  002670  829F               	bsf	3999,1,c	;volatile
  1421                           
  1422                           ;main.c: 62:       initialize_PWM(0xFF);
  1423  002672  0E00               	movlw	0
  1424  002674  6E02               	movwf	initialize_PWM@freq+1,c
  1425  002676  6801               	setf	initialize_PWM@freq,c
  1426  002678  EC7C  F01F         	call	_initialize_PWM	;wreg free
  1427                           
  1428                           ;main.c: 63:       set_duty_cycle(0x00, 0x00);
  1429  00267C  0E00               	movlw	0
  1430  00267E  6E01               	movwf	set_duty_cycle@lower_2,c
  1431  002680  0E00               	movlw	0
  1432  002682  EC5A  F01F         	call	_set_duty_cycle
  1433  002686                     l5324:
  1434  002686  FFFF               	dw	65535	; assembler added errata NOP
  1435                           
  1436                           ;main.c: 65:         int temp = (int) get_temp();
  1437  002688  EC3D  F01A         	call	_get_temp	;wreg free
  1438  00268C  C030  F03E         	movff	?_get_temp,___fltol@f1
  1439  002690  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1440  002694  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1441  002698  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1442  00269C  ECD3  F019         	call	___fltol	;wreg free
  1443  0026A0  C03E  F0B8         	movff	?___fltol,main@temp
  1444  0026A4  C03F  F0B9         	movff	?___fltol+1,main@temp+1
  1445                           
  1446                           ;main.c: 66:         TRISCbits.TRISC7 = 0;
  1447  0026A8  9E94               	bcf	3988,7,c	;volatile
  1448                           
  1449                           ;main.c: 67:         UARTSendString(int_to_char(temp));
  1450  0026AA  C0B8  F07A         	movff	main@temp,int_to_char@num
  1451  0026AE  C0B9  F07B         	movff	main@temp+1,int_to_char@num+1
  1452  0026B2  0E00               	movlw	0
  1453  0026B4  BE7B               	btfsc	int_to_char@num+1,7,c
  1454  0026B6  0EFF               	movlw	-1
  1455  0026B8  6E7C               	movwf	int_to_char@num+2,c
  1456  0026BA  6E7D               	movwf	int_to_char@num+3,c
  1457  0026BC  ECDD  F01D         	call	_int_to_char	;wreg free
  1458  0026C0  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1459  0026C4  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1460  0026C8  EC99  F01C         	call	_UARTSendString	;wreg free
  1461                           
  1462                           ;main.c: 68:         UARTNewLine();
  1463  0026CC  EC93  F01F         	call	_UARTNewLine	;wreg free
  1464                           
  1465                           ;main.c: 69:         if (temp < 30) set_duty_cycle(0x00, 0x00);
  1466  0026D0  0100               	movlb	0	; () banked
  1467  0026D2  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1468  0026D4  D006               	goto	u5470
  1469  0026D6  51B9               	movf	(main@temp+1)& (0+255),w,b
  1470  0026D8  E10B               	bnz	l5336
  1471  0026DA  0E1E               	movlw	30
  1472  0026DC  5DB8               	subwf	main@temp& (0+255),w,b
  1473  0026DE  B0D8               	btfsc	status,0,c
  1474  0026E0  D007               	goto	l5336
  1475  0026E2                     u5470:
  1476  0026E2  FFFF               	dw	65535	; assembler added errata NOP
  1477                           
  1478                           ; BSR set to: 0
  1479  0026E4  0E00               	movlw	0
  1480  0026E6  6E01               	movwf	set_duty_cycle@lower_2,c
  1481  0026E8  0E00               	movlw	0
  1482  0026EA  EC5A  F01F         	call	_set_duty_cycle
  1483  0026EE  D036               	goto	l5350
  1484  0026F0                     l5336:
  1485  0026F0  FFFF               	dw	65535	; assembler added errata NOP
  1486                           
  1487                           ; BSR set to: 0
  1488  0026F2  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1489  0026F4  D006               	goto	u5480
  1490  0026F6  51B9               	movf	(main@temp+1)& (0+255),w,b
  1491  0026F8  E10B               	bnz	l5340
  1492  0026FA  0E32               	movlw	50
  1493  0026FC  5DB8               	subwf	main@temp& (0+255),w,b
  1494  0026FE  B0D8               	btfsc	status,0,c
  1495  002700  D007               	goto	l5340
  1496  002702                     u5480:
  1497  002702  FFFF               	dw	65535	; assembler added errata NOP
  1498                           
  1499                           ; BSR set to: 0
  1500  002704  0E03               	movlw	3
  1501  002706  6E01               	movwf	set_duty_cycle@lower_2,c
  1502  002708  0E0F               	movlw	15
  1503  00270A  EC5A  F01F         	call	_set_duty_cycle
  1504  00270E  D026               	goto	l5350
  1505  002710                     l5340:
  1506  002710  FFFF               	dw	65535	; assembler added errata NOP
  1507                           
  1508                           ; BSR set to: 0
  1509  002712  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1510  002714  D006               	goto	u5490
  1511  002716  51B9               	movf	(main@temp+1)& (0+255),w,b
  1512  002718  E10B               	bnz	l5344
  1513  00271A  0E46               	movlw	70
  1514  00271C  5DB8               	subwf	main@temp& (0+255),w,b
  1515  00271E  B0D8               	btfsc	status,0,c
  1516  002720  D007               	goto	l5344
  1517  002722                     u5490:
  1518  002722  FFFF               	dw	65535	; assembler added errata NOP
  1519                           
  1520                           ; BSR set to: 0
  1521  002724  0E03               	movlw	3
  1522  002726  6E01               	movwf	set_duty_cycle@lower_2,c
  1523  002728  0E13               	movlw	19
  1524  00272A  EC5A  F01F         	call	_set_duty_cycle
  1525  00272E  D016               	goto	l5350
  1526  002730                     l5344:
  1527  002730  FFFF               	dw	65535	; assembler added errata NOP
  1528                           
  1529                           ; BSR set to: 0
  1530  002732  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1531  002734  D006               	goto	u5500
  1532  002736  51B9               	movf	(main@temp+1)& (0+255),w,b
  1533  002738  E10B               	bnz	l5348
  1534  00273A  0E64               	movlw	100
  1535  00273C  5DB8               	subwf	main@temp& (0+255),w,b
  1536  00273E  B0D8               	btfsc	status,0,c
  1537  002740  D007               	goto	l5348
  1538  002742                     u5500:
  1539  002742  FFFF               	dw	65535	; assembler added errata NOP
  1540                           
  1541                           ; BSR set to: 0
  1542  002744  0E03               	movlw	3
  1543  002746  6E01               	movwf	set_duty_cycle@lower_2,c
  1544  002748  0E20               	movlw	32
  1545  00274A  EC5A  F01F         	call	_set_duty_cycle
  1546  00274E  D006               	goto	l5350
  1547  002750                     l5348:
  1548  002750  FFFF               	dw	65535	; assembler added errata NOP
  1549                           
  1550                           ; BSR set to: 0
  1551  002752  0E03               	movlw	3
  1552  002754  6E01               	movwf	set_duty_cycle@lower_2,c
  1553  002756  0E3F               	movlw	63
  1554  002758  EC5A  F01F         	call	_set_duty_cycle
  1555  00275C                     l5350:
  1556  00275C  FFFF               	dw	65535	; assembler added errata NOP
  1557                           
  1558                           ;main.c: 74:         _delay((unsigned long)((200)*(16000000/4000.0)));
  1559  00275E  0E04               	movlw	4
  1560  002760  0100               	movlb	0	; () banked
  1561  002762  6FB5               	movwf	(??_main+1)& (0+255),b
  1562  002764  0E0C               	movlw	12
  1563  002766  6FB4               	movwf	??_main& (0+255),b
  1564  002768  0EB6               	movlw	182
  1565  00276A                     u5537:
  1566  00276A  FFFF               	dw	65535	; errata NOP
  1567  00276C  2EE8               	decfsz	wreg,f,c
  1568  00276E  D7FD               	bra	u5537
  1569  002770  2FB4               	decfsz	??_main& (0+255),f,b
  1570  002772  D7FB               	bra	u5537
  1571  002774  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1572  002776  D7F9               	bra	u5537
  1573  002778  D000               	nop2	
  1574  00277A  F000               	nop	
  1575  00277C  D784               	goto	l5324
  1576  00277E                     l5354:
  1577  00277E  FFFF               	dw	65535	; assembler added errata NOP
  1578                           
  1579                           ; BSR set to: 0
  1580  002780  51BA               	movf	main@input& (0+255),w,b
  1581  002782  6FB4               	movwf	??_main& (0+255),b
  1582  002784  6BB5               	clrf	(??_main+1)& (0+255),b
  1583                           
  1584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 1, Range of values is 0 to 0
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte            4     3 (average)
  1590                           ;	Chosen strategy is simple_byte
  1591  002786  51B5               	movf	(??_main+1)& (0+255),w,b
  1592  002788  0A00               	xorlw	0	; case 0
  1593  00278A  A4D8               	btfss	status,2,c
  1594  00278C  D738               	goto	l5290
  1595                           
  1596                           ; BSR set to: 0
  1597                           ; Switch size 1, requested type "simple"
  1598                           ; Number of cases is 3, Range of values is 114 to 120
  1599                           ; switch strategies available:
  1600                           ; Name         Instructions Cycles
  1601                           ; simple_byte           10     6 (average)
  1602                           ;	Chosen strategy is simple_byte
  1603  00278E  51B4               	movf	??_main& (0+255),w,b
  1604  002790  0A72               	xorlw	114	; case 114
  1605  002792  B4D8               	btfsc	status,2,c
  1606  002794  D749               	goto	l163
  1607  002796  0A01               	xorlw	1	; case 115
  1608  002798  B4D8               	btfsc	status,2,c
  1609  00279A  D742               	goto	l5300
  1610  00279C  0A0B               	xorlw	11	; case 120
  1611  00279E  B4D8               	btfsc	status,2,c
  1612  0027A0  D761               	goto	l5314
  1613  0027A2  D72D               	goto	l5290
  1614  0027A4                     __end_of_main:
  1615                           	opt callstack 0
  1616                           
  1617 ;; *************** function _write_SRAM *****************
  1618 ;; Defined at:
  1619 ;;		line 104 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  curr_time       2   50[BANK0 ] int 
  1624 ;;  temperature     2   48[BANK0 ] int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0      12       0       0       0       0       0
  1636 ;;      Temps:          0       2       0       0       0       0       0
  1637 ;;      Totals:         0      14       0       0       0       0       0
  1638 ;;Total ram usage:       14 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:   11
  1641 ;; This function calls:
  1642 ;;		_ReadTime
  1643 ;;		_Timer0_StartTimer
  1644 ;;		_Timer0_StopTimer
  1645 ;;		_UARTNewLine
  1646 ;;		_UARTSendString
  1647 ;;		___fltol
  1648 ;;		___lldiv
  1649 ;;		_get_temp
  1650 ;;		_int_to_char
  1651 ;;		_write_op
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658  0023FE                     __ptext1:
  1659                           	opt callstack 0
  1660  0023FE                     _write_SRAM:
  1661                           	opt callstack 0
  1662  0023FE  FFFF               	dw	65535	; assembler added errata NOP
  1663                           
  1664                           ;main.c: 105:   TRISCbits.TRISC7 = 0;
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;incstack = 0
  1668  002400  9E94               	bcf	3988,7,c	;volatile
  1669                           
  1670                           ;main.c: 106:   int temperature = (int) get_temp();
  1671  002402  EC3D  F01A         	call	_get_temp	;wreg free
  1672  002406  C030  F03E         	movff	?_get_temp,___fltol@f1
  1673  00240A  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1674  00240E  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1675  002412  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1676  002416  ECD3  F019         	call	___fltol	;wreg free
  1677  00241A  C03E  F0B0         	movff	?___fltol,write_SRAM@temperature
  1678  00241E  C03F  F0B1         	movff	?___fltol+1,write_SRAM@temperature+1
  1679                           
  1680                           ;main.c: 107:   Timer0_StopTimer();
  1681  002422  ECDF  F01F         	call	_Timer0_StopTimer	;wreg free
  1682                           
  1683                           ;main.c: 108:   int curr_time = (int) (ReadTime()/60/100/60);
  1684  002426  0E3C               	movlw	60
  1685  002428  6E09               	movwf	___lldiv@divisor,c
  1686  00242A  0E00               	movlw	0
  1687  00242C  6E0A               	movwf	___lldiv@divisor+1,c
  1688  00242E  0E00               	movlw	0
  1689  002430  6E0B               	movwf	___lldiv@divisor+2,c
  1690  002432  0E00               	movlw	0
  1691  002434  6E0C               	movwf	___lldiv@divisor+3,c
  1692  002436  EC88  F01F         	call	_ReadTime	;wreg free
  1693  00243A  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1694  00243E  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1695  002442  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1696  002446  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1697  00244A  EC0C  F01C         	call	___lldiv	;wreg free
  1698  00244E  C005  F0A8         	movff	?___lldiv,_write_SRAM$2152
  1699  002452  C006  F0A9         	movff	?___lldiv+1,_write_SRAM$2152+1
  1700  002456  C007  F0AA         	movff	?___lldiv+2,_write_SRAM$2152+2
  1701  00245A  C008  F0AB         	movff	?___lldiv+3,_write_SRAM$2152+3
  1702                           
  1703                           ;main.c: 108:   int curr_time = (int) (ReadTime()/60/100/60);
  1704  00245E  0E64               	movlw	100
  1705  002460  6E09               	movwf	___lldiv@divisor,c
  1706  002462  0E00               	movlw	0
  1707  002464  6E0A               	movwf	___lldiv@divisor+1,c
  1708  002466  0E00               	movlw	0
  1709  002468  6E0B               	movwf	___lldiv@divisor+2,c
  1710  00246A  0E00               	movlw	0
  1711  00246C  6E0C               	movwf	___lldiv@divisor+3,c
  1712  00246E  C0A8  F005         	movff	_write_SRAM$2152,___lldiv@dividend
  1713  002472  C0A9  F006         	movff	_write_SRAM$2152+1,___lldiv@dividend+1
  1714  002476  C0AA  F007         	movff	_write_SRAM$2152+2,___lldiv@dividend+2
  1715  00247A  C0AB  F008         	movff	_write_SRAM$2152+3,___lldiv@dividend+3
  1716  00247E  EC0C  F01C         	call	___lldiv	;wreg free
  1717  002482  C005  F0AC         	movff	?___lldiv,_write_SRAM$2153
  1718  002486  C006  F0AD         	movff	?___lldiv+1,_write_SRAM$2153+1
  1719  00248A  C007  F0AE         	movff	?___lldiv+2,_write_SRAM$2153+2
  1720  00248E  C008  F0AF         	movff	?___lldiv+3,_write_SRAM$2153+3
  1721                           
  1722                           ;main.c: 108:   int curr_time = (int) (ReadTime()/60/100/60);
  1723  002492  C0AC  F005         	movff	_write_SRAM$2153,___lldiv@dividend
  1724  002496  C0AD  F006         	movff	_write_SRAM$2153+1,___lldiv@dividend+1
  1725  00249A  C0AE  F007         	movff	_write_SRAM$2153+2,___lldiv@dividend+2
  1726  00249E  C0AF  F008         	movff	_write_SRAM$2153+3,___lldiv@dividend+3
  1727  0024A2  0E3C               	movlw	60
  1728  0024A4  6E09               	movwf	___lldiv@divisor,c
  1729  0024A6  0E00               	movlw	0
  1730  0024A8  6E0A               	movwf	___lldiv@divisor+1,c
  1731  0024AA  0E00               	movlw	0
  1732  0024AC  6E0B               	movwf	___lldiv@divisor+2,c
  1733  0024AE  0E00               	movlw	0
  1734  0024B0  6E0C               	movwf	___lldiv@divisor+3,c
  1735  0024B2  EC0C  F01C         	call	___lldiv	;wreg free
  1736  0024B6  C005  F0B2         	movff	?___lldiv,write_SRAM@curr_time
  1737  0024BA  C006  F0B3         	movff	?___lldiv+1,write_SRAM@curr_time+1
  1738                           
  1739                           ;main.c: 109:   Timer0_StartTimer();
  1740  0024BE  ECE3  F01F         	call	_Timer0_StartTimer	;wreg free
  1741                           
  1742                           ;main.c: 110:   UARTSendString("Writing ");
  1743  0024C2  0E75               	movlw	low STR_10
  1744  0024C4  0100               	movlb	0	; () banked
  1745  0024C6  6FA0               	movwf	UARTSendString@c& (0+255),b
  1746  0024C8  0E06               	movlw	high STR_10
  1747  0024CA  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1748  0024CC  EC99  F01C         	call	_UARTSendString	;wreg free
  1749                           
  1750                           ;main.c: 111:   UARTSendString(int_to_char(temperature));
  1751  0024D0  C0B0  F07A         	movff	write_SRAM@temperature,int_to_char@num
  1752  0024D4  C0B1  F07B         	movff	write_SRAM@temperature+1,int_to_char@num+1
  1753  0024D8  0E00               	movlw	0
  1754  0024DA  BE7B               	btfsc	int_to_char@num+1,7,c
  1755  0024DC  0EFF               	movlw	-1
  1756  0024DE  6E7C               	movwf	int_to_char@num+2,c
  1757  0024E0  6E7D               	movwf	int_to_char@num+3,c
  1758  0024E2  ECDD  F01D         	call	_int_to_char	;wreg free
  1759  0024E6  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1760  0024EA  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1761  0024EE  EC99  F01C         	call	_UARTSendString	;wreg free
  1762                           
  1763                           ;main.c: 112:   UARTSendString(" to address ");
  1764  0024F2  0E5C               	movlw	low STR_11
  1765  0024F4  0100               	movlb	0	; () banked
  1766  0024F6  6FA0               	movwf	UARTSendString@c& (0+255),b
  1767  0024F8  0E06               	movlw	high STR_11
  1768  0024FA  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1769  0024FC  EC99  F01C         	call	_UARTSendString	;wreg free
  1770                           
  1771                           ;main.c: 113:   UARTSendString(int_to_char(address));
  1772  002500  C0D2  F07A         	movff	_address,int_to_char@num
  1773  002504  C0D3  F07B         	movff	_address+1,int_to_char@num+1
  1774  002508  0E00               	movlw	0
  1775  00250A  BE7B               	btfsc	int_to_char@num+1,7,c
  1776  00250C  0EFF               	movlw	-1
  1777  00250E  6E7C               	movwf	int_to_char@num+2,c
  1778  002510  6E7D               	movwf	int_to_char@num+3,c
  1779  002512  ECDD  F01D         	call	_int_to_char	;wreg free
  1780  002516  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1781  00251A  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1782  00251E  EC99  F01C         	call	_UARTSendString	;wreg free
  1783                           
  1784                           ;main.c: 114:   UARTNewLine();
  1785  002522  EC93  F01F         	call	_UARTNewLine	;wreg free
  1786                           
  1787                           ;main.c: 115:   write_op(address, temperature);
  1788  002526  C0B0  F001         	movff	write_SRAM@temperature,write_op@data
  1789  00252A  0100               	movlb	0	; () banked
  1790  00252C  51D2               	movf	_address& (0+255),w,b
  1791  00252E  EC49  F01F         	call	_write_op
  1792                           
  1793                           ;main.c: 116:   UARTSendString("Writing ");
  1794  002532  0E75               	movlw	low STR_10
  1795  002534  0100               	movlb	0	; () banked
  1796  002536  6FA0               	movwf	UARTSendString@c& (0+255),b
  1797  002538  0E06               	movlw	high STR_10
  1798  00253A  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1799  00253C  EC99  F01C         	call	_UARTSendString	;wreg free
  1800                           
  1801                           ;main.c: 117:   UARTSendString(int_to_char(curr_time));
  1802  002540  C0B2  F07A         	movff	write_SRAM@curr_time,int_to_char@num
  1803  002544  C0B3  F07B         	movff	write_SRAM@curr_time+1,int_to_char@num+1
  1804  002548  0E00               	movlw	0
  1805  00254A  BE7B               	btfsc	int_to_char@num+1,7,c
  1806  00254C  0EFF               	movlw	-1
  1807  00254E  6E7C               	movwf	int_to_char@num+2,c
  1808  002550  6E7D               	movwf	int_to_char@num+3,c
  1809  002552  ECDD  F01D         	call	_int_to_char	;wreg free
  1810  002556  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1811  00255A  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1812  00255E  EC99  F01C         	call	_UARTSendString	;wreg free
  1813                           
  1814                           ;main.c: 118:   UARTSendString(" to address ");
  1815  002562  0E5C               	movlw	low STR_11
  1816  002564  0100               	movlb	0	; () banked
  1817  002566  6FA0               	movwf	UARTSendString@c& (0+255),b
  1818  002568  0E06               	movlw	high STR_11
  1819  00256A  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1820  00256C  EC99  F01C         	call	_UARTSendString	;wreg free
  1821                           
  1822                           ;main.c: 119:   UARTSendString(int_to_char(address + 1));
  1823  002570  0E01               	movlw	1
  1824  002572  0100               	movlb	0	; () banked
  1825  002574  25D2               	addwf	_address& (0+255),w,b
  1826  002576  6FA6               	movwf	??_write_SRAM& (0+255),b
  1827  002578  0E00               	movlw	0
  1828  00257A  21D3               	addwfc	(_address+1)& (0+255),w,b
  1829  00257C  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1830  00257E  C0A6  F07A         	movff	??_write_SRAM,int_to_char@num
  1831  002582  C0A7  F07B         	movff	??_write_SRAM+1,int_to_char@num+1
  1832  002586  0E00               	movlw	0
  1833  002588  BE7B               	btfsc	int_to_char@num+1,7,c
  1834  00258A  0EFF               	movlw	-1
  1835  00258C  6E7C               	movwf	int_to_char@num+2,c
  1836  00258E  6E7D               	movwf	int_to_char@num+3,c
  1837  002590  ECDD  F01D         	call	_int_to_char	;wreg free
  1838  002594  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1839  002598  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1840  00259C  EC99  F01C         	call	_UARTSendString	;wreg free
  1841                           
  1842                           ;main.c: 120:   UARTNewLine();
  1843  0025A0  EC93  F01F         	call	_UARTNewLine	;wreg free
  1844                           
  1845                           ;main.c: 121:   write_op(address + 1, curr_time);
  1846  0025A4  C0B2  F001         	movff	write_SRAM@curr_time,write_op@data
  1847  0025A8  0100               	movlb	0	; () banked
  1848  0025AA  29D2               	incf	_address& (0+255),w,b
  1849  0025AC  EC49  F01F         	call	_write_op
  1850                           
  1851                           ;main.c: 122:   address = (address + 2) % 16;
  1852  0025B0  0E02               	movlw	2
  1853  0025B2  0100               	movlb	0	; () banked
  1854  0025B4  25D2               	addwf	_address& (0+255),w,b
  1855  0025B6  6FA6               	movwf	??_write_SRAM& (0+255),b
  1856  0025B8  0E00               	movlw	0
  1857  0025BA  21D3               	addwfc	(_address+1)& (0+255),w,b
  1858  0025BC  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1859  0025BE  0E0F               	movlw	15
  1860  0025C0  15A6               	andwf	??_write_SRAM& (0+255),w,b
  1861  0025C2  6FD2               	movwf	_address& (0+255),b
  1862  0025C4  6BD3               	clrf	(_address+1)& (0+255),b
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 123:   UARTSendString("Done writing to memory.");
  1866  0025C6  0E33               	movlw	low STR_14
  1867  0025C8  6FA0               	movwf	UARTSendString@c& (0+255),b
  1868  0025CA  0E06               	movlw	high STR_14
  1869  0025CC  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1870  0025CE  EC99  F01C         	call	_UARTSendString	;wreg free
  1871                           
  1872                           ;main.c: 124:   UARTNewLine();
  1873  0025D2  EC93  F01F         	call	_UARTNewLine	;wreg free
  1874                           
  1875                           ;main.c: 125:   UARTNewLine();
  1876  0025D6  EC93  F01F         	call	_UARTNewLine	;wreg free
  1877  0025DA  0012               	return		;funcret
  1878  0025DC  FFFF               	dw	65535	; errata NOP
  1879  0025DE                     __end_of_write_SRAM:
  1880                           	opt callstack 0
  1881                           
  1882 ;; *************** function _write_op *****************
  1883 ;; Defined at:
  1884 ;;		line 9 in file "drive_memory.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  address         1    wreg     unsigned char 
  1887 ;;  data            1    0[COMRAM] unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  address         1    1[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         1       0       0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         2       0       0       0       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    2
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_write_SRAM
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text2
  1914  003E92                     __ptext2:
  1915                           	opt callstack 0
  1916  003E92                     _write_op:
  1917                           	opt callstack 0
  1918  003E92  FFFF               	dw	65535	; assembler added errata NOP
  1919                           
  1920                           ;incstack = 0
  1921                           ;write_op@address stored from wreg
  1922  003E94  6E02               	movwf	write_op@address,c
  1923                           
  1924                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1925  003E96  9094               	bcf	3988,0,c	;volatile
  1926                           
  1927                           ;drive_memory.c: 12:   TRISD = 0x00;
  1928  003E98  0E00               	movlw	0
  1929  003E9A  6E95               	movwf	3989,c	;volatile
  1930                           
  1931                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1932  003E9C  0EC0               	movlw	192
  1933  003E9E  1693               	andwf	3987,f,c	;volatile
  1934                           
  1935                           ;drive_memory.c: 14:   PORTB = address;
  1936  003EA0  C002  FF81         	movff	write_op@address,3969	;volatile
  1937                           
  1938                           ;drive_memory.c: 15:   RB5 = 0;
  1939  003EA4  9A81               	bcf	3969,5,c	;volatile
  1940                           
  1941                           ;drive_memory.c: 17:   RC0 = 1;
  1942  003EA6  8082               	bsf	3970,0,c	;volatile
  1943                           
  1944                           ;drive_memory.c: 21:   RC0 = 0;
  1945  003EA8  9082               	bcf	3970,0,c	;volatile
  1946                           
  1947                           ;drive_memory.c: 23:   PORTD = data;
  1948                           
  1949                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  1950  003EAA  C001  FF83         	movff	write_op@data,3971	;volatile
  1951                           
  1952                           ;drive_memory.c: 26:   RC0 = 1;
  1953                           
  1954                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  1955  003EAE  8082               	bsf	3970,0,c	;volatile
  1956  003EB0  0012               	return		;funcret
  1957  003EB2  FFFF               	dw	65535	; errata NOP
  1958  003EB4                     __end_of_write_op:
  1959                           	opt callstack 0
  1960                           
  1961 ;; *************** function _get_temp *****************
  1962 ;; Defined at:
  1963 ;;		line 10 in file "temp_adc.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  temp            4   55[COMRAM] float 
  1968 ;;  real_voltage    4   51[COMRAM] float 
  1969 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  4   47[COMRAM] float 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         4       0       0       0       0       0       0
  1980 ;;      Locals:        10       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0
  1982 ;;      Totals:        14       0       0       0       0       0       0
  1983 ;;Total ram usage:       14 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		_ADC_Init
  1988 ;;		_ADC_Read
  1989 ;;		___flmul
  1990 ;;		___flsub
  1991 ;;		___xxtofl
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;;		_write_SRAM
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text3
  1999  00347A                     __ptext3:
  2000                           	opt callstack 0
  2001  00347A                     _get_temp:
  2002                           	opt callstack 0
  2003  00347A  FFFF               	dw	65535	; assembler added errata NOP
  2004                           
  2005                           ;temp_adc.c: 11:   ADC_Init();
  2006                           
  2007                           ;incstack = 0
  2008  00347C  ECCC  F01F         	call	_ADC_Init	;wreg free
  2009                           
  2010                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  2011  003480  90C1               	bcf	4033,0,c	;volatile
  2012                           
  2013                           ;temp_adc.c: 13:   TRISA |= 0x01;
  2014  003482  8092               	bsf	3986,0,c	;volatile
  2015                           
  2016                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  2017  003484  0E00               	movlw	0
  2018  003486  EC8E  F01D         	call	_ADC_Read
  2019  00348A  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  2020  00348E  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  2021                           
  2022                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  2023  003492  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  2024  003496  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  2025  00349A  6A03               	clrf	___xxtofl@val+2,c
  2026  00349C  6A04               	clrf	___xxtofl@val+3,c
  2027  00349E  0E00               	movlw	0
  2028  0034A0  EC33  F016         	call	___xxtofl
  2029  0034A4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2030  0034A8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2031  0034AC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2032  0034B0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2033  0034B4  0E9F               	movlw	159
  2034  0034B6  6E13               	movwf	___flmul@a,c
  2035  0034B8  0EAB               	movlw	171
  2036  0034BA  6E14               	movwf	___flmul@a+1,c
  2037  0034BC  0EAD               	movlw	173
  2038  0034BE  6E15               	movwf	___flmul@a+2,c
  2039  0034C0  0E3B               	movlw	59
  2040  0034C2  6E16               	movwf	___flmul@a+3,c
  2041  0034C4  EC3B  F00C         	call	___flmul	;wreg free
  2042  0034C8  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  2043  0034CC  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  2044  0034D0  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  2045  0034D4  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  2046                           
  2047                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  2048  0034D8  0E00               	movlw	0
  2049  0034DA  6E28               	movwf	___flsub@b,c
  2050  0034DC  0E00               	movlw	0
  2051  0034DE  6E29               	movwf	___flsub@b+1,c
  2052  0034E0  0E48               	movlw	72
  2053  0034E2  6E2A               	movwf	___flsub@b+2,c
  2054  0034E4  0E43               	movlw	67
  2055  0034E6  6E2B               	movwf	___flsub@b+3,c
  2056  0034E8  0E00               	movlw	0
  2057  0034EA  6E13               	movwf	___flmul@a,c
  2058  0034EC  0E00               	movlw	0
  2059  0034EE  6E14               	movwf	___flmul@a+1,c
  2060  0034F0  0E0C               	movlw	12
  2061  0034F2  6E15               	movwf	___flmul@a+2,c
  2062  0034F4  0E42               	movlw	66
  2063  0034F6  6E16               	movwf	___flmul@a+3,c
  2064  0034F8  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  2065  0034FC  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  2066  003500  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  2067  003504  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  2068  003508  EC3B  F00C         	call	___flmul	;wreg free
  2069  00350C  C00F  F02C         	movff	?___flmul,___flsub@a
  2070  003510  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2071  003514  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2072  003518  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2073  00351C  ECB8  F01D         	call	___flsub	;wreg free
  2074  003520  C028  F038         	movff	?___flsub,get_temp@temp
  2075  003524  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  2076  003528  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  2077  00352C  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  2078                           
  2079                           ;temp_adc.c: 18:   return temp;
  2080  003530  C038  F030         	movff	get_temp@temp,?_get_temp
  2081  003534  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  2082  003538  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  2083  00353C  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  2084  003540  0012               	return		;funcret
  2085  003542  FFFF               	dw	65535	; errata NOP
  2086  003544                     __end_of_get_temp:
  2087                           	opt callstack 0
  2088                           
  2089 ;; *************** function ___xxtofl *****************
  2090 ;; Defined at:
  2091 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  sign            1    wreg     unsigned char 
  2094 ;;  val             4    0[COMRAM] long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  sign            1    8[COMRAM] unsigned char 
  2097 ;;  arg             4   10[COMRAM] unsigned long 
  2098 ;;  exp             1    9[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  4    0[COMRAM] unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2108 ;;      Params:         4       0       0       0       0       0       0
  2109 ;;      Locals:         6       0       0       0       0       0       0
  2110 ;;      Temps:          4       0       0       0       0       0       0
  2111 ;;      Totals:        14       0       0       0       0       0       0
  2112 ;;Total ram usage:       14 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    2
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_get_temp
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text4
  2123  002C66                     __ptext4:
  2124                           	opt callstack 0
  2125  002C66                     ___xxtofl:
  2126                           	opt callstack 0
  2127  002C66  FFFF               	dw	65535	; assembler added errata NOP
  2128                           
  2129                           ;incstack = 0
  2130                           ;___xxtofl@sign stored from wreg
  2131  002C68  6E09               	movwf	___xxtofl@sign,c
  2132  002C6A  5009               	movf	___xxtofl@sign,w,c
  2133  002C6C  A4D8               	btfss	status,2,c
  2134  002C6E  AE04               	btfss	___xxtofl@val+3,7,c
  2135  002C70  D01A               	goto	l1265
  2136  002C72  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2137  002C76  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2138  002C7A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2139  002C7E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2140  002C82  1E05               	comf	??___xxtofl,f,c
  2141  002C84  1E06               	comf	??___xxtofl+1,f,c
  2142  002C86  1E07               	comf	??___xxtofl+2,f,c
  2143  002C88  1E08               	comf	??___xxtofl+3,f,c
  2144  002C8A  2A05               	incf	??___xxtofl,f,c
  2145  002C8C  0E00               	movlw	0
  2146  002C8E  2206               	addwfc	??___xxtofl+1,f,c
  2147  002C90  2207               	addwfc	??___xxtofl+2,f,c
  2148  002C92  2208               	addwfc	??___xxtofl+3,f,c
  2149  002C94  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2150  002C98  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2151  002C9C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2152  002CA0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2153  002CA4  D009               	goto	l4798
  2154  002CA6                     l1265:
  2155  002CA6  FFFF               	dw	65535	; assembler added errata NOP
  2156  002CA8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2157  002CAC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2158  002CB0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2159  002CB4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2160  002CB8                     l4798:
  2161  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  2162  002CBA  5001               	movf	___xxtofl@val,w,c
  2163  002CBC  1002               	iorwf	___xxtofl@val+1,w,c
  2164  002CBE  1003               	iorwf	___xxtofl@val+2,w,c
  2165  002CC0  1004               	iorwf	___xxtofl@val+3,w,c
  2166  002CC2  A4D8               	btfss	status,2,c
  2167  002CC4  D009               	goto	l4804
  2168  002CC6  0E00               	movlw	0
  2169  002CC8  6E01               	movwf	?___xxtofl,c
  2170  002CCA  0E00               	movlw	0
  2171  002CCC  6E02               	movwf	?___xxtofl+1,c
  2172  002CCE  0E00               	movlw	0
  2173  002CD0  6E03               	movwf	?___xxtofl+2,c
  2174  002CD2  0E00               	movlw	0
  2175  002CD4  6E04               	movwf	?___xxtofl+3,c
  2176  002CD6  D072               	goto	l1268
  2177  002CD8                     l4804:
  2178  002CD8  FFFF               	dw	65535	; assembler added errata NOP
  2179  002CDA  0E96               	movlw	150
  2180  002CDC  6E0A               	movwf	___xxtofl@exp,c
  2181  002CDE  D007               	goto	l4808
  2182  002CE0                     l4806:
  2183  002CE0  FFFF               	dw	65535	; assembler added errata NOP
  2184  002CE2  2A0A               	incf	___xxtofl@exp,f,c
  2185  002CE4  90D8               	bcf	status,0,c
  2186  002CE6  320E               	rrcf	___xxtofl@arg+3,f,c
  2187  002CE8  320D               	rrcf	___xxtofl@arg+2,f,c
  2188  002CEA  320C               	rrcf	___xxtofl@arg+1,f,c
  2189  002CEC  320B               	rrcf	___xxtofl@arg,f,c
  2190  002CEE                     l4808:
  2191  002CEE  FFFF               	dw	65535	; assembler added errata NOP
  2192  002CF0  0E00               	movlw	0
  2193  002CF2  140B               	andwf	___xxtofl@arg,w,c
  2194  002CF4  6E05               	movwf	??___xxtofl& (0+255),c
  2195  002CF6  0E00               	movlw	0
  2196  002CF8  140C               	andwf	___xxtofl@arg+1,w,c
  2197  002CFA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2198  002CFC  0E00               	movlw	0
  2199  002CFE  140D               	andwf	___xxtofl@arg+2,w,c
  2200  002D00  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2201  002D02  0EFE               	movlw	254
  2202  002D04  140E               	andwf	___xxtofl@arg+3,w,c
  2203  002D06  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2204  002D08  5005               	movf	??___xxtofl,w,c
  2205  002D0A  1006               	iorwf	??___xxtofl+1,w,c
  2206  002D0C  1007               	iorwf	??___xxtofl+2,w,c
  2207  002D0E  1008               	iorwf	??___xxtofl+3,w,c
  2208  002D10  B4D8               	btfsc	status,2,c
  2209  002D12  D00E               	goto	l1272
  2210  002D14  D7E5               	goto	l4806
  2211  002D16                     l4810:
  2212  002D16  FFFF               	dw	65535	; assembler added errata NOP
  2213  002D18  2A0A               	incf	___xxtofl@exp,f,c
  2214  002D1A  0E01               	movlw	1
  2215  002D1C  260B               	addwf	___xxtofl@arg,f,c
  2216  002D1E  0E00               	movlw	0
  2217  002D20  220C               	addwfc	___xxtofl@arg+1,f,c
  2218  002D22  220D               	addwfc	___xxtofl@arg+2,f,c
  2219  002D24  220E               	addwfc	___xxtofl@arg+3,f,c
  2220  002D26  90D8               	bcf	status,0,c
  2221  002D28  320E               	rrcf	___xxtofl@arg+3,f,c
  2222  002D2A  320D               	rrcf	___xxtofl@arg+2,f,c
  2223  002D2C  320C               	rrcf	___xxtofl@arg+1,f,c
  2224  002D2E  320B               	rrcf	___xxtofl@arg,f,c
  2225  002D30                     l1272:
  2226  002D30  FFFF               	dw	65535	; assembler added errata NOP
  2227  002D32  0E00               	movlw	0
  2228  002D34  140B               	andwf	___xxtofl@arg,w,c
  2229  002D36  6E05               	movwf	??___xxtofl& (0+255),c
  2230  002D38  0E00               	movlw	0
  2231  002D3A  140C               	andwf	___xxtofl@arg+1,w,c
  2232  002D3C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2233  002D3E  0E00               	movlw	0
  2234  002D40  140D               	andwf	___xxtofl@arg+2,w,c
  2235  002D42  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2236  002D44  0EFF               	movlw	255
  2237  002D46  140E               	andwf	___xxtofl@arg+3,w,c
  2238  002D48  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2239  002D4A  5005               	movf	??___xxtofl,w,c
  2240  002D4C  1006               	iorwf	??___xxtofl+1,w,c
  2241  002D4E  1007               	iorwf	??___xxtofl+2,w,c
  2242  002D50  1008               	iorwf	??___xxtofl+3,w,c
  2243  002D52  B4D8               	btfsc	status,2,c
  2244  002D54  D008               	goto	l4818
  2245  002D56  D7DF               	goto	l4810
  2246  002D58                     l4816:
  2247  002D58  FFFF               	dw	65535	; assembler added errata NOP
  2248  002D5A  060A               	decf	___xxtofl@exp,f,c
  2249  002D5C  90D8               	bcf	status,0,c
  2250  002D5E  360B               	rlcf	___xxtofl@arg,f,c
  2251  002D60  360C               	rlcf	___xxtofl@arg+1,f,c
  2252  002D62  360D               	rlcf	___xxtofl@arg+2,f,c
  2253  002D64  360E               	rlcf	___xxtofl@arg+3,f,c
  2254  002D66                     l4818:
  2255  002D66  FFFF               	dw	65535	; assembler added errata NOP
  2256  002D68  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2257  002D6A  D003               	goto	u5140
  2258  002D6C  0E02               	movlw	2
  2259  002D6E  600A               	cpfslt	___xxtofl@exp,c
  2260  002D70  D7F3               	goto	l4816
  2261  002D72                     u5140:
  2262  002D72  FFFF               	dw	65535	; assembler added errata NOP
  2263  002D74  A00A               	btfss	___xxtofl@exp,0,c
  2264  002D76  9E0D               	bcf	___xxtofl@arg+2,7,c
  2265  002D78  90D8               	bcf	status,0,c
  2266  002D7A  320A               	rrcf	___xxtofl@exp,f,c
  2267  002D7C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2268  002D80  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2269  002D82  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2270  002D84  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2271  002D86  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2272  002D8A  6A07               	clrf	??___xxtofl+2,c
  2273  002D8C  6A06               	clrf	??___xxtofl+1,c
  2274  002D8E  6A05               	clrf	??___xxtofl,c
  2275  002D90  5005               	movf	??___xxtofl,w,c
  2276  002D92  120B               	iorwf	___xxtofl@arg,f,c
  2277  002D94  5006               	movf	??___xxtofl+1,w,c
  2278  002D96  120C               	iorwf	___xxtofl@arg+1,f,c
  2279  002D98  5007               	movf	??___xxtofl+2,w,c
  2280  002D9A  120D               	iorwf	___xxtofl@arg+2,f,c
  2281  002D9C  5008               	movf	??___xxtofl+3,w,c
  2282  002D9E  120E               	iorwf	___xxtofl@arg+3,f,c
  2283  002DA0  5009               	movf	___xxtofl@sign,w,c
  2284  002DA2  A4D8               	btfss	status,2,c
  2285  002DA4  AE04               	btfss	___xxtofl@val+3,7,c
  2286  002DA6  D001               	goto	l4834
  2287  002DA8  8E0E               	bsf	___xxtofl@arg+3,7,c
  2288  002DAA                     l4834:
  2289  002DAA  FFFF               	dw	65535	; assembler added errata NOP
  2290  002DAC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2291  002DB0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2292  002DB4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2293  002DB8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2294  002DBC                     l1268:
  2295  002DBC  FFFF               	dw	65535	; assembler added errata NOP
  2296  002DBE  0012               	return		;funcret
  2297  002DC0  FFFF               	dw	65535	; errata NOP
  2298  002DC2                     __end_of___xxtofl:
  2299                           	opt callstack 0
  2300                           
  2301 ;; *************** function ___flsub *****************
  2302 ;; Defined at:
  2303 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  b               4   39[COMRAM] unsigned char 
  2306 ;;  a               4   43[COMRAM] unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  4   39[COMRAM] unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2318 ;;      Params:         8       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0
  2321 ;;      Totals:         8       0       0       0       0       0       0
  2322 ;;Total ram usage:        8 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		___fladd
  2327 ;; This function is called by:
  2328 ;;		_get_temp
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text5
  2333  003B70                     __ptext5:
  2334                           	opt callstack 0
  2335  003B70                     ___flsub:
  2336                           	opt callstack 0
  2337  003B70  FFFF               	dw	65535	; assembler added errata NOP
  2338                           
  2339                           ;incstack = 0
  2340  003B72  0E00               	movlw	0
  2341  003B74  1A2C               	xorwf	___flsub@a,f,c
  2342  003B76  0E00               	movlw	0
  2343  003B78  1A2D               	xorwf	___flsub@a+1,f,c
  2344  003B7A  0E00               	movlw	0
  2345  003B7C  1A2E               	xorwf	___flsub@a+2,f,c
  2346  003B7E  0E80               	movlw	128
  2347  003B80  1A2F               	xorwf	___flsub@a+3,f,c
  2348  003B82  C028  F001         	movff	___flsub@b,___fladd@b
  2349  003B86  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  2350  003B8A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  2351  003B8E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  2352  003B92  C02C  F005         	movff	___flsub@a,___fladd@a
  2353  003B96  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  2354  003B9A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  2355  003B9E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  2356  003BA2  ECFC  F00D         	call	___fladd	;wreg free
  2357  003BA6  C001  F028         	movff	?___fladd,?___flsub
  2358  003BAA  C002  F029         	movff	?___fladd+1,?___flsub+1
  2359  003BAE  C003  F02A         	movff	?___fladd+2,?___flsub+2
  2360  003BB2  C004  F02B         	movff	?___fladd+3,?___flsub+3
  2361  003BB6  0012               	return		;funcret
  2362  003BB8  FFFF               	dw	65535	; errata NOP
  2363  003BBA                     __end_of___flsub:
  2364                           	opt callstack 0
  2365                           
  2366 ;; *************** function ___fladd *****************
  2367 ;; Defined at:
  2368 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  b               4    0[COMRAM] unsigned char 
  2371 ;;  a               4    4[COMRAM] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  grs             1   15[COMRAM] unsigned char 
  2374 ;;  bexp            1   14[COMRAM] unsigned char 
  2375 ;;  aexp            1   13[COMRAM] unsigned char 
  2376 ;;  signs           1   12[COMRAM] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  4    0[COMRAM] unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2386 ;;      Params:         8       0       0       0       0       0       0
  2387 ;;      Locals:         4       0       0       0       0       0       0
  2388 ;;      Temps:          4       0       0       0       0       0       0
  2389 ;;      Totals:        16       0       0       0       0       0       0
  2390 ;;Total ram usage:       16 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    2
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		___flsub
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text6
  2401  001BF8                     __ptext6:
  2402                           	opt callstack 0
  2403  001BF8                     ___fladd:
  2404                           	opt callstack 0
  2405  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  2406                           
  2407                           ;incstack = 0
  2408  001BFA  5004               	movf	___fladd@b+3,w,c
  2409  001BFC  0B80               	andlw	128
  2410  001BFE  6E0D               	movwf	___fladd@signs,c
  2411  001C00  5004               	movf	___fladd@b+3,w,c
  2412  001C02  2404               	addwf	___fladd@b+3,w,c
  2413  001C04  6E0F               	movwf	___fladd@bexp,c
  2414  001C06  BE03               	btfsc	___fladd@b+2,7,c
  2415  001C08  800F               	bsf	___fladd@bexp,0,c
  2416  001C0A  500F               	movf	___fladd@bexp,w,c
  2417  001C0C  B4D8               	btfsc	status,2,c
  2418  001C0E  D00E               	goto	l4418
  2419  001C10  280F               	incf	___fladd@bexp,w,c
  2420  001C12  A4D8               	btfss	status,2,c
  2421  001C14  D008               	goto	l4414
  2422  001C16  0E00               	movlw	0
  2423  001C18  6E01               	movwf	___fladd@b,c
  2424  001C1A  0E00               	movlw	0
  2425  001C1C  6E02               	movwf	___fladd@b+1,c
  2426  001C1E  0E00               	movlw	0
  2427  001C20  6E03               	movwf	___fladd@b+2,c
  2428  001C22  0E00               	movlw	0
  2429  001C24  6E04               	movwf	___fladd@b+3,c
  2430  001C26                     l4414:
  2431  001C26  FFFF               	dw	65535	; assembler added errata NOP
  2432  001C28  8E03               	bsf	___fladd@b+2,7,c
  2433  001C2A  D007               	goto	L3
  2434  001C2C                     l4418:
  2435  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  2436  001C2E  0E00               	movlw	0
  2437  001C30  6E01               	movwf	___fladd@b,c
  2438  001C32  0E00               	movlw	0
  2439  001C34  6E02               	movwf	___fladd@b+1,c
  2440  001C36  0E00               	movlw	0
  2441  001C38  6E03               	movwf	___fladd@b+2,c
  2442  001C3A                     L3:
  2443  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  2444  001C3C  0E00               	movlw	0
  2445  001C3E  6E04               	movwf	___fladd@b+3,c
  2446  001C40  5008               	movf	___fladd@a+3,w,c
  2447  001C42  0B80               	andlw	128
  2448  001C44  6E0E               	movwf	___fladd@aexp,c
  2449  001C46  500D               	movf	___fladd@signs,w,c
  2450  001C48  180E               	xorwf	___fladd@aexp,w,c
  2451  001C4A  A4D8               	btfss	status,2,c
  2452  001C4C  8C0D               	bsf	___fladd@signs,6,c
  2453  001C4E  5008               	movf	___fladd@a+3,w,c
  2454  001C50  2408               	addwf	___fladd@a+3,w,c
  2455  001C52  6E0E               	movwf	___fladd@aexp,c
  2456  001C54  BE07               	btfsc	___fladd@a+2,7,c
  2457  001C56  800E               	bsf	___fladd@aexp,0,c
  2458  001C58  500E               	movf	___fladd@aexp,w,c
  2459  001C5A  B4D8               	btfsc	status,2,c
  2460  001C5C  D00E               	goto	l4442
  2461  001C5E  280E               	incf	___fladd@aexp,w,c
  2462  001C60  A4D8               	btfss	status,2,c
  2463  001C62  D008               	goto	l4438
  2464  001C64  0E00               	movlw	0
  2465  001C66  6E05               	movwf	___fladd@a,c
  2466  001C68  0E00               	movlw	0
  2467  001C6A  6E06               	movwf	___fladd@a+1,c
  2468  001C6C  0E00               	movlw	0
  2469  001C6E  6E07               	movwf	___fladd@a+2,c
  2470  001C70  0E00               	movlw	0
  2471  001C72  6E08               	movwf	___fladd@a+3,c
  2472  001C74                     l4438:
  2473  001C74  FFFF               	dw	65535	; assembler added errata NOP
  2474  001C76  8E07               	bsf	___fladd@a+2,7,c
  2475  001C78  D007               	goto	L4
  2476  001C7A                     l4442:
  2477  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  2478  001C7C  0E00               	movlw	0
  2479  001C7E  6E05               	movwf	___fladd@a,c
  2480  001C80  0E00               	movlw	0
  2481  001C82  6E06               	movwf	___fladd@a+1,c
  2482  001C84  0E00               	movlw	0
  2483  001C86  6E07               	movwf	___fladd@a+2,c
  2484  001C88                     L4:
  2485  001C88  FFFF               	dw	65535	; assembler added errata NOP
  2486  001C8A  0E00               	movlw	0
  2487  001C8C  6E08               	movwf	___fladd@a+3,c
  2488  001C8E  500F               	movf	___fladd@bexp,w,c
  2489  001C90  5C0E               	subwf	___fladd@aexp,w,c
  2490  001C92  B0D8               	btfsc	status,0,c
  2491  001C94  D023               	goto	l4480
  2492  001C96  AC0D               	btfss	___fladd@signs,6,c
  2493  001C98  D002               	goto	l4450
  2494  001C9A  0E80               	movlw	128
  2495  001C9C  1A0D               	xorwf	___fladd@signs,f,c
  2496  001C9E                     l4450:
  2497  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  2498  001CA0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2499  001CA4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2500  001CA8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2501  001CAC  C001  F010         	movff	___fladd@b,___fladd@grs
  2502  001CB0  C005  F001         	movff	___fladd@a,___fladd@b
  2503  001CB4  C010  F005         	movff	___fladd@grs,___fladd@a
  2504  001CB8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2505  001CBC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2506  001CC0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2507  001CC4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2508  001CC8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2509  001CCC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2510  001CD0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2511  001CD4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2512  001CD8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2513  001CDC                     l4480:
  2514  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  2515  001CDE  0E00               	movlw	0
  2516  001CE0  6E10               	movwf	___fladd@grs,c
  2517  001CE2  500F               	movf	___fladd@bexp,w,c
  2518  001CE4  C00E  F009         	movff	___fladd@aexp,??___fladd
  2519  001CE8  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2520  001CEA  5E09               	subwf	??___fladd,f,c
  2521  001CEC  0E00               	movlw	0
  2522  001CEE  5A0A               	subwfb	??___fladd+1,f,c
  2523  001CF0  BE0A               	btfsc	??___fladd+1,7,c
  2524  001CF2  D031               	goto	l1139
  2525  001CF4  500A               	movf	??___fladd+1,w,c
  2526  001CF6  E104               	bnz	u4540
  2527  001CF8  0E1A               	movlw	26
  2528  001CFA  5C09               	subwf	??___fladd,w,c
  2529  001CFC  A0D8               	btfss	status,0,c
  2530  001CFE  D02B               	goto	l1139
  2531  001D00                     u4540:
  2532  001D00  5001               	movf	___fladd@b,w,c
  2533  001D02  1002               	iorwf	___fladd@b+1,w,c
  2534  001D04  1003               	iorwf	___fladd@b+2,w,c
  2535  001D06  1004               	iorwf	___fladd@b+3,w,c
  2536  001D08  B4D8               	btfsc	status,2,c
  2537  001D0A  D002               	goto	u4550
  2538  001D0C  0E01               	movlw	1
  2539  001D0E  D002               	goto	u4560
  2540  001D10                     u4550:
  2541  001D10  FFFF               	dw	65535	; assembler added errata NOP
  2542  001D12  0E00               	movlw	0
  2543  001D14                     u4560:
  2544  001D14  FFFF               	dw	65535	; assembler added errata NOP
  2545  001D16  6E10               	movwf	___fladd@grs,c
  2546  001D18  0E00               	movlw	0
  2547  001D1A  6E01               	movwf	___fladd@b,c
  2548  001D1C  0E00               	movlw	0
  2549  001D1E  6E02               	movwf	___fladd@b+1,c
  2550  001D20  0E00               	movlw	0
  2551  001D22  6E03               	movwf	___fladd@b+2,c
  2552  001D24  0E00               	movlw	0
  2553  001D26  6E04               	movwf	___fladd@b+3,c
  2554  001D28  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2555  001D2C  D019               	goto	u4590
  2556  001D2E                     l1140:
  2557  001D2E  FFFF               	dw	65535	; assembler added errata NOP
  2558  001D30  A010               	btfss	___fladd@grs,0,c
  2559  001D32  D005               	goto	l4492
  2560  001D34  90D8               	bcf	status,0,c
  2561  001D36  3010               	rrcf	___fladd@grs,w,c
  2562  001D38  0901               	iorlw	1
  2563  001D3A  6E10               	movwf	___fladd@grs,c
  2564  001D3C  D003               	goto	l4494
  2565  001D3E                     l4492:
  2566  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  2567  001D40  90D8               	bcf	status,0,c
  2568  001D42  3210               	rrcf	___fladd@grs,f,c
  2569  001D44                     l4494:
  2570  001D44  FFFF               	dw	65535	; assembler added errata NOP
  2571  001D46  B001               	btfsc	___fladd@b,0,c
  2572  001D48  8E10               	bsf	___fladd@grs,7,c
  2573  001D4A  3404               	rlcf	___fladd@b+3,w,c
  2574  001D4C  3204               	rrcf	___fladd@b+3,f,c
  2575  001D4E  3203               	rrcf	___fladd@b+2,f,c
  2576  001D50  3202               	rrcf	___fladd@b+1,f,c
  2577  001D52  3201               	rrcf	___fladd@b,f,c
  2578  001D54  2A0F               	incf	___fladd@bexp,f,c
  2579  001D56                     l1139:
  2580  001D56  FFFF               	dw	65535	; assembler added errata NOP
  2581  001D58  500E               	movf	___fladd@aexp,w,c
  2582  001D5A  5C0F               	subwf	___fladd@bexp,w,c
  2583  001D5C  A0D8               	btfss	status,0,c
  2584  001D5E  D7E7               	goto	l1140
  2585  001D60                     u4590:
  2586  001D60  FFFF               	dw	65535	; assembler added errata NOP
  2587  001D62  BC0D               	btfsc	___fladd@signs,6,c
  2588  001D64  D021               	goto	l4526
  2589  001D66  500F               	movf	___fladd@bexp,w,c
  2590  001D68  B4D8               	btfsc	status,2,c
  2591  001D6A  D065               	goto	u4680
  2592  001D6C  5005               	movf	___fladd@a,w,c
  2593  001D6E  2601               	addwf	___fladd@b,f,c
  2594  001D70  5006               	movf	___fladd@a+1,w,c
  2595  001D72  2202               	addwfc	___fladd@b+1,f,c
  2596  001D74  5007               	movf	___fladd@a+2,w,c
  2597  001D76  2203               	addwfc	___fladd@b+2,f,c
  2598  001D78  5008               	movf	___fladd@a+3,w,c
  2599  001D7A  2204               	addwfc	___fladd@b+3,f,c
  2600  001D7C  A004               	btfss	___fladd@b+3,0,c
  2601  001D7E  D07B               	goto	u4720
  2602  001D80  A010               	btfss	___fladd@grs,0,c
  2603  001D82  D005               	goto	l4516
  2604  001D84  90D8               	bcf	status,0,c
  2605  001D86  3010               	rrcf	___fladd@grs,w,c
  2606  001D88  0901               	iorlw	1
  2607  001D8A  6E10               	movwf	___fladd@grs,c
  2608  001D8C  D003               	goto	l4518
  2609  001D8E                     l4516:
  2610  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  2611  001D90  90D8               	bcf	status,0,c
  2612  001D92  3210               	rrcf	___fladd@grs,f,c
  2613  001D94                     l4518:
  2614  001D94  FFFF               	dw	65535	; assembler added errata NOP
  2615  001D96  B001               	btfsc	___fladd@b,0,c
  2616  001D98  8E10               	bsf	___fladd@grs,7,c
  2617  001D9A  3404               	rlcf	___fladd@b+3,w,c
  2618  001D9C  3204               	rrcf	___fladd@b+3,f,c
  2619  001D9E  3203               	rrcf	___fladd@b+2,f,c
  2620  001DA0  3202               	rrcf	___fladd@b+1,f,c
  2621  001DA2  3201               	rrcf	___fladd@b,f,c
  2622  001DA4  2A0F               	incf	___fladd@bexp,f,c
  2623  001DA6  D067               	goto	u4720
  2624  001DA8                     l4526:
  2625  001DA8  FFFF               	dw	65535	; assembler added errata NOP
  2626  001DAA  5005               	movf	___fladd@a,w,c
  2627  001DAC  5C01               	subwf	___fladd@b,w,c
  2628  001DAE  5006               	movf	___fladd@a+1,w,c
  2629  001DB0  5802               	subwfb	___fladd@b+1,w,c
  2630  001DB2  5007               	movf	___fladd@a+2,w,c
  2631  001DB4  5803               	subwfb	___fladd@b+2,w,c
  2632  001DB6  5004               	movf	___fladd@b+3,w,c
  2633  001DB8  0A80               	xorlw	128
  2634  001DBA  6E09               	movwf	??___fladd& (0+255),c
  2635  001DBC  5008               	movf	___fladd@a+3,w,c
  2636  001DBE  0A80               	xorlw	128
  2637  001DC0  5809               	subwfb	??___fladd& (0+255),w,c
  2638  001DC2  B0D8               	btfsc	status,0,c
  2639  001DC4  D025               	goto	l4536
  2640  001DC6  5001               	movf	___fladd@b,w,c
  2641  001DC8  5C05               	subwf	___fladd@a,w,c
  2642  001DCA  6E09               	movwf	??___fladd& (0+255),c
  2643  001DCC  5002               	movf	___fladd@b+1,w,c
  2644  001DCE  5806               	subwfb	___fladd@a+1,w,c
  2645  001DD0  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2646  001DD2  5003               	movf	___fladd@b+2,w,c
  2647  001DD4  5807               	subwfb	___fladd@a+2,w,c
  2648  001DD6  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2649  001DD8  5004               	movf	___fladd@b+3,w,c
  2650  001DDA  5808               	subwfb	___fladd@a+3,w,c
  2651  001DDC  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2652  001DDE  0EFF               	movlw	255
  2653  001DE0  2409               	addwf	??___fladd,w,c
  2654  001DE2  6E01               	movwf	___fladd@b,c
  2655  001DE4  0EFF               	movlw	255
  2656  001DE6  200A               	addwfc	??___fladd+1,w,c
  2657  001DE8  6E02               	movwf	___fladd@b+1,c
  2658  001DEA  0EFF               	movlw	255
  2659  001DEC  200B               	addwfc	??___fladd+2,w,c
  2660  001DEE  6E03               	movwf	___fladd@b+2,c
  2661  001DF0  0EFF               	movlw	255
  2662  001DF2  200C               	addwfc	??___fladd+3,w,c
  2663  001DF4  6E04               	movwf	___fladd@b+3,c
  2664  001DF6  0E80               	movlw	128
  2665  001DF8  1A0D               	xorwf	___fladd@signs,f,c
  2666  001DFA  6C10               	negf	___fladd@grs,c
  2667  001DFC  5010               	movf	___fladd@grs,w,c
  2668  001DFE  A4D8               	btfss	status,2,c
  2669  001E00  D010               	goto	l1155
  2670  001E02  0E01               	movlw	1
  2671  001E04  2601               	addwf	___fladd@b,f,c
  2672  001E06  0E00               	movlw	0
  2673  001E08  2202               	addwfc	___fladd@b+1,f,c
  2674  001E0A  2203               	addwfc	___fladd@b+2,f,c
  2675  001E0C  2204               	addwfc	___fladd@b+3,f,c
  2676  001E0E  D009               	goto	l1155
  2677  001E10                     l4536:
  2678  001E10  FFFF               	dw	65535	; assembler added errata NOP
  2679  001E12  5005               	movf	___fladd@a,w,c
  2680  001E14  5E01               	subwf	___fladd@b,f,c
  2681  001E16  5006               	movf	___fladd@a+1,w,c
  2682  001E18  5A02               	subwfb	___fladd@b+1,f,c
  2683  001E1A  5007               	movf	___fladd@a+2,w,c
  2684  001E1C  5A03               	subwfb	___fladd@b+2,f,c
  2685  001E1E  5008               	movf	___fladd@a+3,w,c
  2686  001E20  5A04               	subwfb	___fladd@b+3,f,c
  2687  001E22                     l1155:
  2688  001E22  FFFF               	dw	65535	; assembler added errata NOP
  2689  001E24  5001               	movf	___fladd@b,w,c
  2690  001E26  1002               	iorwf	___fladd@b+1,w,c
  2691  001E28  1003               	iorwf	___fladd@b+2,w,c
  2692  001E2A  1004               	iorwf	___fladd@b+3,w,c
  2693  001E2C  A4D8               	btfss	status,2,c
  2694  001E2E  D020               	goto	l4560
  2695  001E30  5010               	movf	___fladd@grs,w,c
  2696  001E32  A4D8               	btfss	status,2,c
  2697  001E34  D01D               	goto	l4560
  2698  001E36                     u4680:
  2699  001E36  FFFF               	dw	65535	; assembler added errata NOP
  2700  001E38  0E00               	movlw	0
  2701  001E3A  6E01               	movwf	?___fladd,c
  2702  001E3C  0E00               	movlw	0
  2703  001E3E  6E02               	movwf	?___fladd+1,c
  2704  001E40  0E00               	movlw	0
  2705  001E42  6E03               	movwf	?___fladd+2,c
  2706  001E44  0E00               	movlw	0
  2707  001E46  6E04               	movwf	?___fladd+3,c
  2708  001E48  D076               	goto	l1147
  2709  001E4A                     l4544:
  2710  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  2711  001E4C  90D8               	bcf	status,0,c
  2712  001E4E  3601               	rlcf	___fladd@b,f,c
  2713  001E50  3602               	rlcf	___fladd@b+1,f,c
  2714  001E52  3603               	rlcf	___fladd@b+2,f,c
  2715  001E54  3604               	rlcf	___fladd@b+3,f,c
  2716  001E56  BE10               	btfsc	___fladd@grs,7,c
  2717  001E58  8001               	bsf	___fladd@b,0,c
  2718  001E5A  A010               	btfss	___fladd@grs,0,c
  2719  001E5C  D002               	goto	l4554
  2720  001E5E  80D8               	bsf	status,0,c
  2721  001E60  D002               	goto	L5
  2722  001E62                     l4554:
  2723  001E62  FFFF               	dw	65535	; assembler added errata NOP
  2724  001E64  90D8               	bcf	status,0,c
  2725  001E66                     L5:
  2726  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2727  001E68  3610               	rlcf	___fladd@grs,f,c
  2728  001E6A  500F               	movf	___fladd@bexp,w,c
  2729  001E6C  A4D8               	btfss	status,2,c
  2730  001E6E  060F               	decf	___fladd@bexp,f,c
  2731  001E70                     l4560:
  2732  001E70  FFFF               	dw	65535	; assembler added errata NOP
  2733  001E72  AE03               	btfss	___fladd@b+2,7,c
  2734  001E74  D7EA               	goto	l4544
  2735  001E76                     u4720:
  2736  001E76  FFFF               	dw	65535	; assembler added errata NOP
  2737  001E78  0E00               	movlw	0
  2738  001E7A  6E0E               	movwf	___fladd@aexp,c
  2739  001E7C  AE10               	btfss	___fladd@grs,7,c
  2740  001E7E  D00D               	goto	l1164
  2741  001E80  C010  F009         	movff	___fladd@grs,??___fladd
  2742  001E84  0E7F               	movlw	127
  2743  001E86  1609               	andwf	??___fladd,f,c
  2744  001E88  B4D8               	btfsc	status,2,c
  2745  001E8A  D004               	goto	l1165
  2746  001E8C                     u4740:
  2747  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2748  001E8E  0E01               	movlw	1
  2749  001E90  6E0E               	movwf	___fladd@aexp,c
  2750  001E92  D003               	goto	l1164
  2751  001E94                     l1165:
  2752  001E94  FFFF               	dw	65535	; assembler added errata NOP
  2753  001E96  B001               	btfsc	___fladd@b,0,c
  2754  001E98  D7F9               	goto	u4740
  2755  001E9A                     l1164:
  2756  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  2757  001E9C  500E               	movf	___fladd@aexp,w,c
  2758  001E9E  B4D8               	btfsc	status,2,c
  2759  001EA0  D020               	goto	l4580
  2760  001EA2  0E01               	movlw	1
  2761  001EA4  2601               	addwf	___fladd@b,f,c
  2762  001EA6  0E00               	movlw	0
  2763  001EA8  2202               	addwfc	___fladd@b+1,f,c
  2764  001EAA  2203               	addwfc	___fladd@b+2,f,c
  2765  001EAC  2204               	addwfc	___fladd@b+3,f,c
  2766  001EAE  A004               	btfss	___fladd@b+3,0,c
  2767  001EB0  D018               	goto	l4580
  2768  001EB2  C001  F009         	movff	___fladd@b,??___fladd
  2769  001EB6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2770  001EBA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2771  001EBE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2772  001EC2  340C               	rlcf	??___fladd+3,w,c
  2773  001EC4  320C               	rrcf	??___fladd+3,f,c
  2774  001EC6  320B               	rrcf	??___fladd+2,f,c
  2775  001EC8  320A               	rrcf	??___fladd+1,f,c
  2776  001ECA  3209               	rrcf	??___fladd,f,c
  2777  001ECC  C009  F001         	movff	??___fladd,___fladd@b
  2778  001ED0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2779  001ED4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2780  001ED8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2781  001EDC  280F               	incf	___fladd@bexp,w,c
  2782  001EDE  A4D8               	btfss	status,2,c
  2783  001EE0  2A0F               	incf	___fladd@bexp,f,c
  2784  001EE2                     l4580:
  2785  001EE2  FFFF               	dw	65535	; assembler added errata NOP
  2786  001EE4  280F               	incf	___fladd@bexp,w,c
  2787  001EE6  B4D8               	btfsc	status,2,c
  2788  001EE8  D003               	goto	u4800
  2789  001EEA  500F               	movf	___fladd@bexp,w,c
  2790  001EEC  A4D8               	btfss	status,2,c
  2791  001EEE  D00E               	goto	l4588
  2792  001EF0                     u4800:
  2793  001EF0  FFFF               	dw	65535	; assembler added errata NOP
  2794  001EF2  0E00               	movlw	0
  2795  001EF4  6E01               	movwf	___fladd@b,c
  2796  001EF6  0E00               	movlw	0
  2797  001EF8  6E02               	movwf	___fladd@b+1,c
  2798  001EFA  0E00               	movlw	0
  2799  001EFC  6E03               	movwf	___fladd@b+2,c
  2800  001EFE  0E00               	movlw	0
  2801  001F00  6E04               	movwf	___fladd@b+3,c
  2802  001F02  500F               	movf	___fladd@bexp,w,c
  2803  001F04  A4D8               	btfss	status,2,c
  2804  001F06  D002               	goto	l4588
  2805  001F08  0E00               	movlw	0
  2806  001F0A  6E0D               	movwf	___fladd@signs,c
  2807  001F0C                     l4588:
  2808  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2809  001F0E  A00F               	btfss	___fladd@bexp,0,c
  2810  001F10  D002               	goto	l4592
  2811  001F12  8E03               	bsf	___fladd@b+2,7,c
  2812  001F14  D002               	goto	l4594
  2813  001F16                     l4592:
  2814  001F16  FFFF               	dw	65535	; assembler added errata NOP
  2815  001F18  9E03               	bcf	___fladd@b+2,7,c
  2816  001F1A                     l4594:
  2817  001F1A  FFFF               	dw	65535	; assembler added errata NOP
  2818  001F1C  90D8               	bcf	status,0,c
  2819  001F1E  300F               	rrcf	___fladd@bexp,w,c
  2820  001F20  6E04               	movwf	___fladd@b+3,c
  2821  001F22  BE0D               	btfsc	___fladd@signs,7,c
  2822  001F24  8E04               	bsf	___fladd@b+3,7,c
  2823  001F26  C001  F001         	movff	___fladd@b,?___fladd
  2824  001F2A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2825  001F2E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2826  001F32  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2827  001F36                     l1147:
  2828  001F36  FFFF               	dw	65535	; assembler added errata NOP
  2829  001F38  0012               	return		;funcret
  2830  001F3A  FFFF               	dw	65535	; errata NOP
  2831  001F3C                     __end_of___fladd:
  2832                           	opt callstack 0
  2833                           
  2834 ;; *************** function ___flmul *****************
  2835 ;; Defined at:
  2836 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  b               4   14[COMRAM] unsigned char 
  2839 ;;  a               4   18[COMRAM] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  prod            4   33[COMRAM] struct .
  2842 ;;  grs             4   27[COMRAM] unsigned long 
  2843 ;;  temp            2   37[COMRAM] struct .
  2844 ;;  bexp            1   32[COMRAM] unsigned char 
  2845 ;;  aexp            1   31[COMRAM] unsigned char 
  2846 ;;  sign            1   26[COMRAM] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  4   14[COMRAM] unsigned char 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, prodl, prodh
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2856 ;;      Params:         8       0       0       0       0       0       0
  2857 ;;      Locals:        13       0       0       0       0       0       0
  2858 ;;      Temps:          4       0       0       0       0       0       0
  2859 ;;      Totals:        25       0       0       0       0       0       0
  2860 ;;Total ram usage:       25 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    2
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_get_temp
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text7
  2871  001876                     __ptext7:
  2872                           	opt callstack 0
  2873  001876                     ___flmul:
  2874                           	opt callstack 0
  2875  001876  FFFF               	dw	65535	; assembler added errata NOP
  2876                           
  2877                           ;incstack = 0
  2878  001878  5012               	movf	___flmul@b+3,w,c
  2879  00187A  0B80               	andlw	128
  2880  00187C  6E1B               	movwf	___flmul@sign,c
  2881  00187E  5012               	movf	___flmul@b+3,w,c
  2882  001880  2412               	addwf	___flmul@b+3,w,c
  2883  001882  6E21               	movwf	___flmul@bexp,c
  2884  001884  BE11               	btfsc	___flmul@b+2,7,c
  2885  001886  8021               	bsf	___flmul@bexp,0,c
  2886  001888  5021               	movf	___flmul@bexp,w,c
  2887  00188A  B4D8               	btfsc	status,2,c
  2888  00188C  D00E               	goto	l4670
  2889  00188E  2821               	incf	___flmul@bexp,w,c
  2890  001890  A4D8               	btfss	status,2,c
  2891  001892  D008               	goto	l4668
  2892  001894  0E00               	movlw	0
  2893  001896  6E0F               	movwf	___flmul@b,c
  2894  001898  0E00               	movlw	0
  2895  00189A  6E10               	movwf	___flmul@b+1,c
  2896  00189C  0E00               	movlw	0
  2897  00189E  6E11               	movwf	___flmul@b+2,c
  2898  0018A0  0E00               	movlw	0
  2899  0018A2  6E12               	movwf	___flmul@b+3,c
  2900  0018A4                     l4668:
  2901  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  2902  0018A6  8E11               	bsf	___flmul@b+2,7,c
  2903  0018A8  D009               	goto	l4672
  2904  0018AA                     l4670:
  2905  0018AA  FFFF               	dw	65535	; assembler added errata NOP
  2906  0018AC  0E00               	movlw	0
  2907  0018AE  6E0F               	movwf	___flmul@b,c
  2908  0018B0  0E00               	movlw	0
  2909  0018B2  6E10               	movwf	___flmul@b+1,c
  2910  0018B4  0E00               	movlw	0
  2911  0018B6  6E11               	movwf	___flmul@b+2,c
  2912  0018B8  0E00               	movlw	0
  2913  0018BA  6E12               	movwf	___flmul@b+3,c
  2914  0018BC                     l4672:
  2915  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  2916  0018BE  5016               	movf	___flmul@a+3,w,c
  2917  0018C0  0B80               	andlw	128
  2918  0018C2  1A1B               	xorwf	___flmul@sign,f,c
  2919  0018C4  5016               	movf	___flmul@a+3,w,c
  2920  0018C6  2416               	addwf	___flmul@a+3,w,c
  2921  0018C8  6E20               	movwf	___flmul@aexp,c
  2922  0018CA  BE15               	btfsc	___flmul@a+2,7,c
  2923  0018CC  8020               	bsf	___flmul@aexp,0,c
  2924  0018CE  5020               	movf	___flmul@aexp,w,c
  2925  0018D0  B4D8               	btfsc	status,2,c
  2926  0018D2  D00E               	goto	l4688
  2927  0018D4  2820               	incf	___flmul@aexp,w,c
  2928  0018D6  A4D8               	btfss	status,2,c
  2929  0018D8  D008               	goto	l4686
  2930  0018DA  0E00               	movlw	0
  2931  0018DC  6E13               	movwf	___flmul@a,c
  2932  0018DE  0E00               	movlw	0
  2933  0018E0  6E14               	movwf	___flmul@a+1,c
  2934  0018E2  0E00               	movlw	0
  2935  0018E4  6E15               	movwf	___flmul@a+2,c
  2936  0018E6  0E00               	movlw	0
  2937  0018E8  6E16               	movwf	___flmul@a+3,c
  2938  0018EA                     l4686:
  2939  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  2940  0018EC  8E15               	bsf	___flmul@a+2,7,c
  2941  0018EE  D009               	goto	l1224
  2942  0018F0                     l4688:
  2943  0018F0  FFFF               	dw	65535	; assembler added errata NOP
  2944  0018F2  0E00               	movlw	0
  2945  0018F4  6E13               	movwf	___flmul@a,c
  2946  0018F6  0E00               	movlw	0
  2947  0018F8  6E14               	movwf	___flmul@a+1,c
  2948  0018FA  0E00               	movlw	0
  2949  0018FC  6E15               	movwf	___flmul@a+2,c
  2950  0018FE  0E00               	movlw	0
  2951  001900  6E16               	movwf	___flmul@a+3,c
  2952  001902                     l1224:
  2953  001902  FFFF               	dw	65535	; assembler added errata NOP
  2954  001904  5020               	movf	___flmul@aexp,w,c
  2955  001906  B4D8               	btfsc	status,2,c
  2956  001908  D003               	goto	u4960
  2957  00190A  5021               	movf	___flmul@bexp,w,c
  2958  00190C  A4D8               	btfss	status,2,c
  2959  00190E  D00A               	goto	l4696
  2960  001910                     u4960:
  2961  001910  FFFF               	dw	65535	; assembler added errata NOP
  2962  001912  0E00               	movlw	0
  2963  001914  6E0F               	movwf	?___flmul,c
  2964  001916  0E00               	movlw	0
  2965  001918  6E10               	movwf	?___flmul+1,c
  2966  00191A  0E00               	movlw	0
  2967  00191C  6E11               	movwf	?___flmul+2,c
  2968  00191E  0E00               	movlw	0
  2969  001920  6E12               	movwf	?___flmul+3,c
  2970  001922  D167               	goto	l1228
  2971  001924                     l4696:
  2972  001924  FFFF               	dw	65535	; assembler added errata NOP
  2973  001926  5015               	movf	___flmul@a+2,w,c
  2974  001928  020F               	mulwf	___flmul@b,c
  2975  00192A  CFF3 F026          	movff	prodl,___flmul@temp
  2976  00192E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2977  001932  5026               	movf	___flmul@temp,w,c
  2978  001934  6E1C               	movwf	___flmul@grs,c
  2979  001936  6A1D               	clrf	___flmul@grs+1,c
  2980  001938  6A1E               	clrf	___flmul@grs+2,c
  2981  00193A  6A1F               	clrf	___flmul@grs+3,c
  2982  00193C  5027               	movf	___flmul@temp+1,w,c
  2983  00193E  6E22               	movwf	___flmul@prod,c
  2984  001940  6A23               	clrf	___flmul@prod+1,c
  2985  001942  6A24               	clrf	___flmul@prod+2,c
  2986  001944  6A25               	clrf	___flmul@prod+3,c
  2987  001946  5014               	movf	___flmul@a+1,w,c
  2988  001948  0210               	mulwf	___flmul@b+1,c
  2989  00194A  CFF3 F026          	movff	prodl,___flmul@temp
  2990  00194E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2991  001952  5026               	movf	___flmul@temp,w,c
  2992  001954  261C               	addwf	___flmul@grs,f,c
  2993  001956  0E00               	movlw	0
  2994  001958  221D               	addwfc	___flmul@grs+1,f,c
  2995  00195A  221E               	addwfc	___flmul@grs+2,f,c
  2996  00195C  221F               	addwfc	___flmul@grs+3,f,c
  2997  00195E  5027               	movf	___flmul@temp+1,w,c
  2998  001960  2622               	addwf	___flmul@prod,f,c
  2999  001962  0E00               	movlw	0
  3000  001964  2223               	addwfc	___flmul@prod+1,f,c
  3001  001966  2224               	addwfc	___flmul@prod+2,f,c
  3002  001968  2225               	addwfc	___flmul@prod+3,f,c
  3003  00196A  5013               	movf	___flmul@a,w,c
  3004  00196C  0211               	mulwf	___flmul@b+2,c
  3005  00196E  CFF3 F026          	movff	prodl,___flmul@temp
  3006  001972  CFF4 F027          	movff	prodh,___flmul@temp+1
  3007  001976  5026               	movf	___flmul@temp,w,c
  3008  001978  261C               	addwf	___flmul@grs,f,c
  3009  00197A  0E00               	movlw	0
  3010  00197C  221D               	addwfc	___flmul@grs+1,f,c
  3011  00197E  221E               	addwfc	___flmul@grs+2,f,c
  3012  001980  221F               	addwfc	___flmul@grs+3,f,c
  3013  001982  5027               	movf	___flmul@temp+1,w,c
  3014  001984  2622               	addwf	___flmul@prod,f,c
  3015  001986  0E00               	movlw	0
  3016  001988  2223               	addwfc	___flmul@prod+1,f,c
  3017  00198A  2224               	addwfc	___flmul@prod+2,f,c
  3018  00198C  2225               	addwfc	___flmul@prod+3,f,c
  3019  00198E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3020  001992  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3021  001996  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3022  00199A  6A1C               	clrf	___flmul@grs,c
  3023  00199C  5013               	movf	___flmul@a,w,c
  3024  00199E  0210               	mulwf	___flmul@b+1,c
  3025  0019A0  CFF3 F026          	movff	prodl,___flmul@temp
  3026  0019A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  3027  0019A8  5026               	movf	___flmul@temp,w,c
  3028  0019AA  261C               	addwf	___flmul@grs,f,c
  3029  0019AC  5027               	movf	___flmul@temp+1,w,c
  3030  0019AE  221D               	addwfc	___flmul@grs+1,f,c
  3031  0019B0  0E00               	movlw	0
  3032  0019B2  221E               	addwfc	___flmul@grs+2,f,c
  3033  0019B4  0E00               	movlw	0
  3034  0019B6  221F               	addwfc	___flmul@grs+3,f,c
  3035  0019B8  5014               	movf	___flmul@a+1,w,c
  3036  0019BA  020F               	mulwf	___flmul@b,c
  3037  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  3038  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3039  0019C4  5026               	movf	___flmul@temp,w,c
  3040  0019C6  261C               	addwf	___flmul@grs,f,c
  3041  0019C8  5027               	movf	___flmul@temp+1,w,c
  3042  0019CA  221D               	addwfc	___flmul@grs+1,f,c
  3043  0019CC  0E00               	movlw	0
  3044  0019CE  221E               	addwfc	___flmul@grs+2,f,c
  3045  0019D0  0E00               	movlw	0
  3046  0019D2  221F               	addwfc	___flmul@grs+3,f,c
  3047  0019D4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3048  0019D8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3049  0019DC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3050  0019E0  6A1C               	clrf	___flmul@grs,c
  3051  0019E2  5013               	movf	___flmul@a,w,c
  3052  0019E4  020F               	mulwf	___flmul@b,c
  3053  0019E6  CFF3 F026          	movff	prodl,___flmul@temp
  3054  0019EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  3055  0019EE  5026               	movf	___flmul@temp,w,c
  3056  0019F0  261C               	addwf	___flmul@grs,f,c
  3057  0019F2  5027               	movf	___flmul@temp+1,w,c
  3058  0019F4  221D               	addwfc	___flmul@grs+1,f,c
  3059  0019F6  0E00               	movlw	0
  3060  0019F8  221E               	addwfc	___flmul@grs+2,f,c
  3061  0019FA  0E00               	movlw	0
  3062  0019FC  221F               	addwfc	___flmul@grs+3,f,c
  3063  0019FE  5015               	movf	___flmul@a+2,w,c
  3064  001A00  0210               	mulwf	___flmul@b+1,c
  3065  001A02  CFF3 F026          	movff	prodl,___flmul@temp
  3066  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3067  001A0A  5026               	movf	___flmul@temp,w,c
  3068  001A0C  2622               	addwf	___flmul@prod,f,c
  3069  001A0E  5027               	movf	___flmul@temp+1,w,c
  3070  001A10  2223               	addwfc	___flmul@prod+1,f,c
  3071  001A12  0E00               	movlw	0
  3072  001A14  2224               	addwfc	___flmul@prod+2,f,c
  3073  001A16  0E00               	movlw	0
  3074  001A18  2225               	addwfc	___flmul@prod+3,f,c
  3075  001A1A  5014               	movf	___flmul@a+1,w,c
  3076  001A1C  0211               	mulwf	___flmul@b+2,c
  3077  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
  3078  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3079  001A26  5026               	movf	___flmul@temp,w,c
  3080  001A28  2622               	addwf	___flmul@prod,f,c
  3081  001A2A  5027               	movf	___flmul@temp+1,w,c
  3082  001A2C  2223               	addwfc	___flmul@prod+1,f,c
  3083  001A2E  0E00               	movlw	0
  3084  001A30  2224               	addwfc	___flmul@prod+2,f,c
  3085  001A32  0E00               	movlw	0
  3086  001A34  2225               	addwfc	___flmul@prod+3,f,c
  3087  001A36  5015               	movf	___flmul@a+2,w,c
  3088  001A38  0211               	mulwf	___flmul@b+2,c
  3089  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
  3090  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3091  001A42  5026               	movf	___flmul@temp,w,c
  3092  001A44  6E17               	movwf	??___flmul& (0+255),c
  3093  001A46  5027               	movf	___flmul@temp+1,w,c
  3094  001A48  6E18               	movwf	(??___flmul+1)& (0+255),c
  3095  001A4A  6A19               	clrf	(??___flmul+2)& (0+255),c
  3096  001A4C  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3097  001A4E  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3098  001A52  C018  F019         	movff	??___flmul+1,??___flmul+2
  3099  001A56  C017  F018         	movff	??___flmul,??___flmul+1
  3100  001A5A  6A17               	clrf	??___flmul,c
  3101  001A5C  5017               	movf	??___flmul,w,c
  3102  001A5E  2622               	addwf	___flmul@prod,f,c
  3103  001A60  5018               	movf	??___flmul+1,w,c
  3104  001A62  2223               	addwfc	___flmul@prod+1,f,c
  3105  001A64  5019               	movf	??___flmul+2,w,c
  3106  001A66  2224               	addwfc	___flmul@prod+2,f,c
  3107  001A68  501A               	movf	??___flmul+3,w,c
  3108  001A6A  2225               	addwfc	___flmul@prod+3,f,c
  3109  001A6C  C01C  F017         	movff	___flmul@grs,??___flmul
  3110  001A70  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3111  001A74  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3112  001A78  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3113  001A7C  0E19               	movlw	25
  3114  001A7E  D006               	goto	u4970
  3115  001A80                     u4975:
  3116  001A80  FFFF               	dw	65535	; assembler added errata NOP
  3117  001A82  90D8               	bcf	status,0,c
  3118  001A84  321A               	rrcf	??___flmul+3,f,c
  3119  001A86  3219               	rrcf	??___flmul+2,f,c
  3120  001A88  3218               	rrcf	??___flmul+1,f,c
  3121  001A8A  3217               	rrcf	??___flmul,f,c
  3122  001A8C                     u4970:
  3123  001A8C  FFFF               	dw	65535	; assembler added errata NOP
  3124  001A8E  2EE8               	decfsz	wreg,f,c
  3125  001A90  D7F7               	goto	u4975
  3126  001A92  5017               	movf	??___flmul,w,c
  3127  001A94  2622               	addwf	___flmul@prod,f,c
  3128  001A96  5018               	movf	??___flmul+1,w,c
  3129  001A98  2223               	addwfc	___flmul@prod+1,f,c
  3130  001A9A  5019               	movf	??___flmul+2,w,c
  3131  001A9C  2224               	addwfc	___flmul@prod+2,f,c
  3132  001A9E  501A               	movf	??___flmul+3,w,c
  3133  001AA0  2225               	addwfc	___flmul@prod+3,f,c
  3134  001AA2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3135  001AA6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3136  001AAA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3137  001AAE  6A1C               	clrf	___flmul@grs,c
  3138  001AB0  5020               	movf	___flmul@aexp,w,c
  3139  001AB2  C021  F017         	movff	___flmul@bexp,??___flmul
  3140  001AB6  6A18               	clrf	(??___flmul+1)& (0+255),c
  3141  001AB8  2617               	addwf	??___flmul,f,c
  3142  001ABA  0E00               	movlw	0
  3143  001ABC  2218               	addwfc	??___flmul+1,f,c
  3144  001ABE  0E82               	movlw	130
  3145  001AC0  2417               	addwf	??___flmul,w,c
  3146  001AC2  6E26               	movwf	___flmul@temp,c
  3147  001AC4  0EFF               	movlw	255
  3148  001AC6  2018               	addwfc	??___flmul+1,w,c
  3149  001AC8  6E27               	movwf	___flmul@temp+1,c
  3150  001ACA  D010               	goto	l4744
  3151  001ACC                     l4738:
  3152  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  3153  001ACE  90D8               	bcf	status,0,c
  3154  001AD0  3622               	rlcf	___flmul@prod,f,c
  3155  001AD2  3623               	rlcf	___flmul@prod+1,f,c
  3156  001AD4  3624               	rlcf	___flmul@prod+2,f,c
  3157  001AD6  3625               	rlcf	___flmul@prod+3,f,c
  3158  001AD8  BE1F               	btfsc	___flmul@grs+3,7,c
  3159  001ADA  8022               	bsf	___flmul@prod,0,c
  3160  001ADC  90D8               	bcf	status,0,c
  3161  001ADE  361C               	rlcf	___flmul@grs,f,c
  3162  001AE0  361D               	rlcf	___flmul@grs+1,f,c
  3163  001AE2  361E               	rlcf	___flmul@grs+2,f,c
  3164  001AE4  361F               	rlcf	___flmul@grs+3,f,c
  3165  001AE6  0626               	decf	___flmul@temp,f,c
  3166  001AE8  A0D8               	btfss	status,0,c
  3167  001AEA  0627               	decf	___flmul@temp+1,f,c
  3168  001AEC                     l4744:
  3169  001AEC  FFFF               	dw	65535	; assembler added errata NOP
  3170  001AEE  AE24               	btfss	___flmul@prod+2,7,c
  3171  001AF0  D7ED               	goto	l4738
  3172  001AF2  0E00               	movlw	0
  3173  001AF4  6E20               	movwf	___flmul@aexp,c
  3174  001AF6  AE1F               	btfss	___flmul@grs+3,7,c
  3175  001AF8  D019               	goto	l1233
  3176  001AFA  0EFF               	movlw	255
  3177  001AFC  141C               	andwf	___flmul@grs,w,c
  3178  001AFE  6E17               	movwf	??___flmul& (0+255),c
  3179  001B00  0EFF               	movlw	255
  3180  001B02  141D               	andwf	___flmul@grs+1,w,c
  3181  001B04  6E18               	movwf	(??___flmul+1)& (0+255),c
  3182  001B06  0EFF               	movlw	255
  3183  001B08  141E               	andwf	___flmul@grs+2,w,c
  3184  001B0A  6E19               	movwf	(??___flmul+2)& (0+255),c
  3185  001B0C  0E7F               	movlw	127
  3186  001B0E  141F               	andwf	___flmul@grs+3,w,c
  3187  001B10  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3188  001B12  5017               	movf	??___flmul,w,c
  3189  001B14  1018               	iorwf	??___flmul+1,w,c
  3190  001B16  1019               	iorwf	??___flmul+2,w,c
  3191  001B18  101A               	iorwf	??___flmul+3,w,c
  3192  001B1A  B4D8               	btfsc	status,2,c
  3193  001B1C  D004               	goto	l1234
  3194  001B1E                     u5010:
  3195  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  3196  001B20  0E01               	movlw	1
  3197  001B22  6E20               	movwf	___flmul@aexp,c
  3198  001B24  D003               	goto	l1233
  3199  001B26                     l1234:
  3200  001B26  FFFF               	dw	65535	; assembler added errata NOP
  3201  001B28  B022               	btfsc	___flmul@prod,0,c
  3202  001B2A  D7F9               	goto	u5010
  3203  001B2C                     l1233:
  3204  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  3205  001B2E  5020               	movf	___flmul@aexp,w,c
  3206  001B30  B4D8               	btfsc	status,2,c
  3207  001B32  D01F               	goto	l4764
  3208  001B34  0E01               	movlw	1
  3209  001B36  2622               	addwf	___flmul@prod,f,c
  3210  001B38  0E00               	movlw	0
  3211  001B3A  2223               	addwfc	___flmul@prod+1,f,c
  3212  001B3C  2224               	addwfc	___flmul@prod+2,f,c
  3213  001B3E  2225               	addwfc	___flmul@prod+3,f,c
  3214  001B40  A025               	btfss	___flmul@prod+3,0,c
  3215  001B42  D017               	goto	l4764
  3216  001B44  C022  F017         	movff	___flmul@prod,??___flmul
  3217  001B48  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3218  001B4C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3219  001B50  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3220  001B54  341A               	rlcf	??___flmul+3,w,c
  3221  001B56  321A               	rrcf	??___flmul+3,f,c
  3222  001B58  3219               	rrcf	??___flmul+2,f,c
  3223  001B5A  3218               	rrcf	??___flmul+1,f,c
  3224  001B5C  3217               	rrcf	??___flmul,f,c
  3225  001B5E  C017  F022         	movff	??___flmul,___flmul@prod
  3226  001B62  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3227  001B66  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3228  001B6A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3229  001B6E  4A26               	infsnz	___flmul@temp,f,c
  3230  001B70  2A27               	incf	___flmul@temp+1,f,c
  3231  001B72                     l4764:
  3232  001B72  FFFF               	dw	65535	; assembler added errata NOP
  3233  001B74  BE27               	btfsc	___flmul@temp+1,7,c
  3234  001B76  D00D               	goto	l4768
  3235  001B78  5027               	movf	___flmul@temp+1,w,c
  3236  001B7A  E103               	bnz	u5050
  3237  001B7C  2826               	incf	___flmul@temp,w,c
  3238  001B7E  A0D8               	btfss	status,0,c
  3239  001B80  D008               	goto	l4768
  3240  001B82                     u5050:
  3241  001B82  0E00               	movlw	0
  3242  001B84  6E22               	movwf	___flmul@prod,c
  3243  001B86  0E00               	movlw	0
  3244  001B88  6E23               	movwf	___flmul@prod+1,c
  3245  001B8A  0E80               	movlw	128
  3246  001B8C  6E24               	movwf	___flmul@prod+2,c
  3247  001B8E  0E7F               	movlw	127
  3248  001B90  D023               	goto	L6
  3249  001B92                     l4768:
  3250  001B92  FFFF               	dw	65535	; assembler added errata NOP
  3251  001B94  BE27               	btfsc	___flmul@temp+1,7,c
  3252  001B96  D005               	goto	u5060
  3253  001B98  5027               	movf	___flmul@temp+1,w,c
  3254  001B9A  E10F               	bnz	l1241
  3255  001B9C  0426               	decf	___flmul@temp,w,c
  3256  001B9E  B0D8               	btfsc	status,0,c
  3257  001BA0  D00C               	goto	l1241
  3258  001BA2                     u5060:
  3259  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  3260  001BA4  0E00               	movlw	0
  3261  001BA6  6E22               	movwf	___flmul@prod,c
  3262  001BA8  0E00               	movlw	0
  3263  001BAA  6E23               	movwf	___flmul@prod+1,c
  3264  001BAC  0E00               	movlw	0
  3265  001BAE  6E24               	movwf	___flmul@prod+2,c
  3266  001BB0  0E00               	movlw	0
  3267  001BB2  6E25               	movwf	___flmul@prod+3,c
  3268  001BB4  0E00               	movlw	0
  3269  001BB6  6E1B               	movwf	___flmul@sign,c
  3270  001BB8  D011               	goto	l4780
  3271  001BBA                     l1241:
  3272  001BBA  FFFF               	dw	65535	; assembler added errata NOP
  3273  001BBC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3274  001BC0  0EFF               	movlw	255
  3275  001BC2  1622               	andwf	___flmul@prod,f,c
  3276  001BC4  0EFF               	movlw	255
  3277  001BC6  1623               	andwf	___flmul@prod+1,f,c
  3278  001BC8  0E7F               	movlw	127
  3279  001BCA  1624               	andwf	___flmul@prod+2,f,c
  3280  001BCC  0E00               	movlw	0
  3281  001BCE  1625               	andwf	___flmul@prod+3,f,c
  3282  001BD0  B021               	btfsc	___flmul@bexp,0,c
  3283  001BD2  8E24               	bsf	___flmul@prod+2,7,c
  3284  001BD4  90D8               	bcf	status,0,c
  3285  001BD6  3021               	rrcf	___flmul@bexp,w,c
  3286  001BD8                     L6:
  3287  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  3288  001BDA  6E25               	movwf	___flmul@prod+3,c
  3289  001BDC                     l4780:
  3290  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  3291  001BDE  501B               	movf	___flmul@sign,w,c
  3292  001BE0  1225               	iorwf	___flmul@prod+3,f,c
  3293  001BE2  C022  F00F         	movff	___flmul@prod,?___flmul
  3294  001BE6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3295  001BEA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3296  001BEE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3297  001BF2                     l1228:
  3298  001BF2  FFFF               	dw	65535	; assembler added errata NOP
  3299  001BF4  0012               	return		;funcret
  3300  001BF6  FFFF               	dw	65535	; errata NOP
  3301  001BF8                     __end_of___flmul:
  3302                           	opt callstack 0
  3303                           
  3304 ;; *************** function _ADC_Read *****************
  3305 ;; Defined at:
  3306 ;;		line 28 in file "adc.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  channel         1    wreg     unsigned char 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  channel         1    4[COMRAM] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2    0[COMRAM] unsigned int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         2       0       0       0       0       0       0
  3321 ;;      Locals:         1       0       0       0       0       0       0
  3322 ;;      Temps:          2       0       0       0       0       0       0
  3323 ;;      Totals:         5       0       0       0       0       0       0
  3324 ;;Total ram usage:        5 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    2
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_get_temp
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text8
  3335  003B1C                     __ptext8:
  3336                           	opt callstack 0
  3337  003B1C                     _ADC_Read:
  3338                           	opt callstack 0
  3339  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  3340                           
  3341                           ;incstack = 0
  3342                           ;ADC_Read@channel stored from wreg
  3343  003B1E  6E05               	movwf	ADC_Read@channel,c
  3344                           
  3345                           ;adc.c: 29:  if(channel > 7)
  3346  003B20  0E07               	movlw	7
  3347  003B22  6405               	cpfsgt	ADC_Read@channel,c
  3348  003B24  D005               	goto	l4646
  3349                           
  3350                           ;adc.c: 30:  return 0;
  3351  003B26  0E00               	movlw	0
  3352  003B28  6E02               	movwf	?_ADC_Read+1,c
  3353  003B2A  0E00               	movlw	0
  3354  003B2C  6E01               	movwf	?_ADC_Read,c
  3355  003B2E  D01D               	goto	l333
  3356  003B30                     l4646:
  3357  003B30  FFFF               	dw	65535	; assembler added errata NOP
  3358                           
  3359                           ;adc.c: 31:  ADCON0 &= 0xC5;
  3360  003B32  0EC5               	movlw	197
  3361  003B34  16C2               	andwf	4034,f,c	;volatile
  3362                           
  3363                           ;adc.c: 32:  ADCON0 |= channel<<3;
  3364  003B36  3805               	swapf	ADC_Read@channel,w,c	;volatile
  3365  003B38  42E8               	rrncf	wreg,f,c
  3366  003B3A  0BF8               	andlw	248
  3367  003B3C  12C2               	iorwf	4034,f,c	;volatile
  3368                           
  3369                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  3370  003B3E  0E08               	movlw	8
  3371  003B40  6E03               	movwf	??_ADC_Read& (0+255),c
  3372  003B42  0ECB               	movlw	203
  3373  003B44                     u5547:
  3374  003B44  FFFF               	dw	65535	; errata NOP
  3375  003B46  2EE8               	decfsz	wreg,f,c
  3376  003B48  D7FD               	bra	u5547
  3377  003B4A  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  3378  003B4C  D7FB               	bra	u5547
  3379  003B4E  D000               	nop2	
  3380                           
  3381                           ;adc.c: 34:  GO_nDONE = 1;
  3382  003B50  84C2               	bsf	4034,2,c	;volatile
  3383  003B52                     l334:
  3384  003B52  FFFF               	dw	65535	; assembler added errata NOP
  3385  003B54  B4C2               	btfsc	4034,2,c	;volatile
  3386  003B56  D7FD               	goto	l334
  3387                           
  3388                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  3389  003B58  50C4               	movf	4036,w,c	;volatile
  3390  003B5A  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  3391  003B5C  6A03               	clrf	??_ADC_Read& (0+255),c
  3392  003B5E  50C3               	movf	4035,w,c	;volatile
  3393  003B60  2403               	addwf	??_ADC_Read,w,c
  3394  003B62  6E01               	movwf	?_ADC_Read,c
  3395  003B64  0E00               	movlw	0
  3396  003B66  2004               	addwfc	??_ADC_Read+1,w,c
  3397  003B68  6E02               	movwf	?_ADC_Read+1,c
  3398  003B6A                     l333:
  3399  003B6A  FFFF               	dw	65535	; assembler added errata NOP
  3400  003B6C  0012               	return		;funcret
  3401  003B6E  FFFF               	dw	65535	; errata NOP
  3402  003B70                     __end_of_ADC_Read:
  3403                           	opt callstack 0
  3404                           
  3405 ;; *************** function _ADC_Init *****************
  3406 ;; Defined at:
  3407 ;;		line 23 in file "adc.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3421 ;;      Params:         0       0       0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    2
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_get_temp
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text9
  3436  003F98                     __ptext9:
  3437                           	opt callstack 0
  3438  003F98                     _ADC_Init:
  3439                           	opt callstack 0
  3440  003F98  FFFF               	dw	65535	; assembler added errata NOP
  3441                           
  3442                           ;adc.c: 24:  ADCON0 = 0x81;
  3443                           
  3444                           ;incstack = 0
  3445  003F9A  0E81               	movlw	129
  3446  003F9C  6EC2               	movwf	4034,c	;volatile
  3447                           
  3448                           ;adc.c: 25:  ADCON1 = 0x80;
  3449  003F9E  0E80               	movlw	128
  3450  003FA0  6EC1               	movwf	4033,c	;volatile
  3451  003FA2  0012               	return		;funcret
  3452  003FA4  FFFF               	dw	65535	; errata NOP
  3453  003FA6                     __end_of_ADC_Init:
  3454                           	opt callstack 0
  3455                           
  3456 ;; *************** function ___lldiv *****************
  3457 ;; Defined at:
  3458 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  dividend        4    4[COMRAM] unsigned long 
  3461 ;;  divisor         4    8[COMRAM] unsigned long 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  quotient        4   12[COMRAM] unsigned long 
  3464 ;;  counter         1   16[COMRAM] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  4    4[COMRAM] unsigned long 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         8       0       0       0       0       0       0
  3475 ;;      Locals:         5       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0
  3477 ;;      Totals:        13       0       0       0       0       0       0
  3478 ;;Total ram usage:       13 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    2
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_write_SRAM
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text10
  3489  003818                     __ptext10:
  3490                           	opt callstack 0
  3491  003818                     ___lldiv:
  3492                           	opt callstack 0
  3493  003818  FFFF               	dw	65535	; assembler added errata NOP
  3494                           
  3495                           ;incstack = 0
  3496  00381A  0E00               	movlw	0
  3497  00381C  6E0D               	movwf	___lldiv@quotient,c
  3498  00381E  0E00               	movlw	0
  3499  003820  6E0E               	movwf	___lldiv@quotient+1,c
  3500  003822  0E00               	movlw	0
  3501  003824  6E0F               	movwf	___lldiv@quotient+2,c
  3502  003826  0E00               	movlw	0
  3503  003828  6E10               	movwf	___lldiv@quotient+3,c
  3504  00382A  5009               	movf	___lldiv@divisor,w,c
  3505  00382C  100A               	iorwf	___lldiv@divisor+1,w,c
  3506  00382E  100B               	iorwf	___lldiv@divisor+2,w,c
  3507  003830  100C               	iorwf	___lldiv@divisor+3,w,c
  3508  003832  B4D8               	btfsc	status,2,c
  3509  003834  D02E               	goto	l637
  3510  003836  0E01               	movlw	1
  3511  003838  6E11               	movwf	___lldiv@counter,c
  3512  00383A  D007               	goto	l4962
  3513  00383C                     l4960:
  3514  00383C  FFFF               	dw	65535	; assembler added errata NOP
  3515  00383E  90D8               	bcf	status,0,c
  3516  003840  3609               	rlcf	___lldiv@divisor,f,c
  3517  003842  360A               	rlcf	___lldiv@divisor+1,f,c
  3518  003844  360B               	rlcf	___lldiv@divisor+2,f,c
  3519  003846  360C               	rlcf	___lldiv@divisor+3,f,c
  3520  003848  2A11               	incf	___lldiv@counter,f,c
  3521  00384A                     l4962:
  3522  00384A  FFFF               	dw	65535	; assembler added errata NOP
  3523  00384C  AE0C               	btfss	___lldiv@divisor+3,7,c
  3524  00384E  D7F6               	goto	l4960
  3525  003850                     u5260:
  3526  003850  FFFF               	dw	65535	; assembler added errata NOP
  3527  003852  90D8               	bcf	status,0,c
  3528  003854  360D               	rlcf	___lldiv@quotient,f,c
  3529  003856  360E               	rlcf	___lldiv@quotient+1,f,c
  3530  003858  360F               	rlcf	___lldiv@quotient+2,f,c
  3531  00385A  3610               	rlcf	___lldiv@quotient+3,f,c
  3532  00385C  5009               	movf	___lldiv@divisor,w,c
  3533  00385E  5C05               	subwf	___lldiv@dividend,w,c
  3534  003860  500A               	movf	___lldiv@divisor+1,w,c
  3535  003862  5806               	subwfb	___lldiv@dividend+1,w,c
  3536  003864  500B               	movf	___lldiv@divisor+2,w,c
  3537  003866  5807               	subwfb	___lldiv@dividend+2,w,c
  3538  003868  500C               	movf	___lldiv@divisor+3,w,c
  3539  00386A  5808               	subwfb	___lldiv@dividend+3,w,c
  3540  00386C  A0D8               	btfss	status,0,c
  3541  00386E  D009               	goto	l4972
  3542  003870  5009               	movf	___lldiv@divisor,w,c
  3543  003872  5E05               	subwf	___lldiv@dividend,f,c
  3544  003874  500A               	movf	___lldiv@divisor+1,w,c
  3545  003876  5A06               	subwfb	___lldiv@dividend+1,f,c
  3546  003878  500B               	movf	___lldiv@divisor+2,w,c
  3547  00387A  5A07               	subwfb	___lldiv@dividend+2,f,c
  3548  00387C  500C               	movf	___lldiv@divisor+3,w,c
  3549  00387E  5A08               	subwfb	___lldiv@dividend+3,f,c
  3550  003880  800D               	bsf	___lldiv@quotient,0,c
  3551  003882                     l4972:
  3552  003882  FFFF               	dw	65535	; assembler added errata NOP
  3553  003884  90D8               	bcf	status,0,c
  3554  003886  320C               	rrcf	___lldiv@divisor+3,f,c
  3555  003888  320B               	rrcf	___lldiv@divisor+2,f,c
  3556  00388A  320A               	rrcf	___lldiv@divisor+1,f,c
  3557  00388C  3209               	rrcf	___lldiv@divisor,f,c
  3558  00388E  2E11               	decfsz	___lldiv@counter,f,c
  3559  003890  D7DF               	goto	u5260
  3560  003892                     l637:
  3561  003892  FFFF               	dw	65535	; assembler added errata NOP
  3562  003894  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3563  003898  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3564  00389C  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3565  0038A0  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3566  0038A4  0012               	return		;funcret
  3567  0038A6  FFFF               	dw	65535	; errata NOP
  3568  0038A8                     __end_of___lldiv:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function ___fltol *****************
  3572 ;; Defined at:
  3573 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  f1              4   61[COMRAM] unsigned long 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  exp1            1   70[COMRAM] unsigned char 
  3578 ;;  sign1           1   69[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  4   61[COMRAM] long 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3588 ;;      Params:         4       0       0       0       0       0       0
  3589 ;;      Locals:         2       0       0       0       0       0       0
  3590 ;;      Temps:          4       0       0       0       0       0       0
  3591 ;;      Totals:        10       0       0       0       0       0       0
  3592 ;;Total ram usage:       10 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    2
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;;		_write_SRAM
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text11
  3604  0033A6                     __ptext11:
  3605                           	opt callstack 0
  3606  0033A6                     ___fltol:
  3607                           	opt callstack 0
  3608  0033A6  FFFF               	dw	65535	; assembler added errata NOP
  3609                           
  3610                           ;incstack = 0
  3611  0033A8  3440               	rlcf	___fltol@f1+2,w,c
  3612  0033AA  3441               	rlcf	___fltol@f1+3,w,c
  3613  0033AC  6E47               	movwf	___fltol@exp1,c
  3614  0033AE  5047               	movf	___fltol@exp1,w,c
  3615  0033B0  A4D8               	btfss	status,2,c
  3616  0033B2  D00A               	goto	l4982
  3617  0033B4                     u5280:
  3618  0033B4  FFFF               	dw	65535	; assembler added errata NOP
  3619  0033B6  0E00               	movlw	0
  3620  0033B8  6E3E               	movwf	?___fltol,c
  3621  0033BA  0E00               	movlw	0
  3622  0033BC  6E3F               	movwf	?___fltol+1,c
  3623  0033BE  0E00               	movlw	0
  3624  0033C0  6E40               	movwf	?___fltol+2,c
  3625  0033C2  0E00               	movlw	0
  3626  0033C4  6E41               	movwf	?___fltol+3,c
  3627  0033C6  D056               	goto	l907
  3628  0033C8                     l4982:
  3629  0033C8  FFFF               	dw	65535	; assembler added errata NOP
  3630  0033CA  C03E  F042         	movff	___fltol@f1,??___fltol
  3631  0033CE  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  3632  0033D2  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  3633  0033D6  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  3634  0033DA  0E20               	movlw	32
  3635  0033DC  D006               	goto	u5290
  3636  0033DE                     u5295:
  3637  0033DE  FFFF               	dw	65535	; assembler added errata NOP
  3638  0033E0  90D8               	bcf	status,0,c
  3639  0033E2  3245               	rrcf	??___fltol+3,f,c
  3640  0033E4  3244               	rrcf	??___fltol+2,f,c
  3641  0033E6  3243               	rrcf	??___fltol+1,f,c
  3642  0033E8  3242               	rrcf	??___fltol,f,c
  3643  0033EA                     u5290:
  3644  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  3645  0033EC  2EE8               	decfsz	wreg,f,c
  3646  0033EE  D7F7               	goto	u5295
  3647  0033F0  5042               	movf	??___fltol,w,c
  3648  0033F2  6E46               	movwf	___fltol@sign1,c
  3649  0033F4  8E40               	bsf	___fltol@f1+2,7,c
  3650  0033F6  0EFF               	movlw	255
  3651  0033F8  163E               	andwf	___fltol@f1,f,c
  3652  0033FA  0EFF               	movlw	255
  3653  0033FC  163F               	andwf	___fltol@f1+1,f,c
  3654  0033FE  0EFF               	movlw	255
  3655  003400  1640               	andwf	___fltol@f1+2,f,c
  3656  003402  0E00               	movlw	0
  3657  003404  1641               	andwf	___fltol@f1+3,f,c
  3658  003406  0E96               	movlw	150
  3659  003408  5E47               	subwf	___fltol@exp1,f,c
  3660  00340A  AE47               	btfss	___fltol@exp1,7,c
  3661  00340C  D00E               	goto	l5002
  3662  00340E  5047               	movf	___fltol@exp1,w,c
  3663  003410  0A80               	xorlw	128
  3664  003412  0F97               	addlw	151
  3665  003414  A0D8               	btfss	status,0,c
  3666  003416  D7CE               	goto	u5280
  3667  003418                     l4998:
  3668  003418  FFFF               	dw	65535	; assembler added errata NOP
  3669  00341A  90D8               	bcf	status,0,c
  3670  00341C  3241               	rrcf	___fltol@f1+3,f,c
  3671  00341E  3240               	rrcf	___fltol@f1+2,f,c
  3672  003420  323F               	rrcf	___fltol@f1+1,f,c
  3673  003422  323E               	rrcf	___fltol@f1,f,c
  3674  003424  3E47               	incfsz	___fltol@exp1,f,c
  3675  003426  D7F8               	goto	l4998
  3676  003428  D010               	goto	u5330
  3677  00342A                     l5002:
  3678  00342A  FFFF               	dw	65535	; assembler added errata NOP
  3679  00342C  0E1F               	movlw	31
  3680  00342E  6447               	cpfsgt	___fltol@exp1,c
  3681  003430  D008               	goto	l5010
  3682  003432  D7C0               	goto	u5280
  3683  003434                     l5008:
  3684  003434  FFFF               	dw	65535	; assembler added errata NOP
  3685  003436  90D8               	bcf	status,0,c
  3686  003438  363E               	rlcf	___fltol@f1,f,c
  3687  00343A  363F               	rlcf	___fltol@f1+1,f,c
  3688  00343C  3640               	rlcf	___fltol@f1+2,f,c
  3689  00343E  3641               	rlcf	___fltol@f1+3,f,c
  3690  003440  0647               	decf	___fltol@exp1,f,c
  3691  003442                     l5010:
  3692  003442  FFFF               	dw	65535	; assembler added errata NOP
  3693  003444  5047               	movf	___fltol@exp1,w,c
  3694  003446  A4D8               	btfss	status,2,c
  3695  003448  D7F5               	goto	l5008
  3696  00344A                     u5330:
  3697  00344A  FFFF               	dw	65535	; assembler added errata NOP
  3698  00344C  5046               	movf	___fltol@sign1,w,c
  3699  00344E  B4D8               	btfsc	status,2,c
  3700  003450  D008               	goto	l5016
  3701  003452  1E41               	comf	___fltol@f1+3,f,c
  3702  003454  1E40               	comf	___fltol@f1+2,f,c
  3703  003456  1E3F               	comf	___fltol@f1+1,f,c
  3704  003458  6C3E               	negf	___fltol@f1,c
  3705  00345A  0E00               	movlw	0
  3706  00345C  223F               	addwfc	___fltol@f1+1,f,c
  3707  00345E  2240               	addwfc	___fltol@f1+2,f,c
  3708  003460  2241               	addwfc	___fltol@f1+3,f,c
  3709  003462                     l5016:
  3710  003462  FFFF               	dw	65535	; assembler added errata NOP
  3711  003464  C03E  F03E         	movff	___fltol@f1,?___fltol
  3712  003468  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  3713  00346C  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  3714  003470  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  3715  003474                     l907:
  3716  003474  FFFF               	dw	65535	; assembler added errata NOP
  3717  003476  0012               	return		;funcret
  3718  003478  FFFF               	dw	65535	; errata NOP
  3719  00347A                     __end_of___fltol:
  3720                           	opt callstack 0
  3721                           
  3722 ;; *************** function _Timer0_StopTimer *****************
  3723 ;; Defined at:
  3724 ;;		line 26 in file "timer.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2  139[None  ] int 
  3731 ;; Registers used:
  3732 ;;		None
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3738 ;;      Params:         0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_write_SRAM
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text12
  3753  003FBE                     __ptext12:
  3754                           	opt callstack 0
  3755  003FBE                     _Timer0_StopTimer:
  3756                           	opt callstack 0
  3757  003FBE  FFFF               	dw	65535	; assembler added errata NOP
  3758                           
  3759                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  3760                           
  3761                           ;incstack = 0
  3762  003FC0  9ED5               	bcf	4053,7,c	;volatile
  3763                           
  3764                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  3765  003FC2  0012               	return		;funcret
  3766  003FC4  FFFF               	dw	65535	; errata NOP
  3767  003FC6                     __end_of_Timer0_StopTimer:
  3768                           	opt callstack 0
  3769                           
  3770 ;; *************** function _Timer0_StartTimer *****************
  3771 ;; Defined at:
  3772 ;;		line 21 in file "timer.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2  109[None  ] int 
  3779 ;; Registers used:
  3780 ;;		None
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3786 ;;      Params:         0       0       0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    2
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;;		_write_SRAM
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text13
  3802  003FC6                     __ptext13:
  3803                           	opt callstack 0
  3804  003FC6                     _Timer0_StartTimer:
  3805                           	opt callstack 0
  3806  003FC6  FFFF               	dw	65535	; assembler added errata NOP
  3807                           
  3808                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  3809                           
  3810                           ;incstack = 0
  3811  003FC8  8ED5               	bsf	4053,7,c	;volatile
  3812                           
  3813                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  3814  003FCA  0012               	return		;funcret
  3815  003FCC  FFFF               	dw	65535	; errata NOP
  3816  003FCE                     __end_of_Timer0_StartTimer:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _ReadTime *****************
  3820 ;; Defined at:
  3821 ;;		line 17 in file "timer.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4    0[COMRAM] unsigned long 
  3828 ;; Registers used:
  3829 ;;		None
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3835 ;;      Params:         4       0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0
  3838 ;;      Totals:         4       0       0       0       0       0       0
  3839 ;;Total ram usage:        4 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    2
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_write_SRAM
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text14
  3850  003F10                     __ptext14:
  3851                           	opt callstack 0
  3852  003F10                     _ReadTime:
  3853                           	opt callstack 0
  3854  003F10  FFFF               	dw	65535	; assembler added errata NOP
  3855                           
  3856                           ;timer.c: 18:  return time_ms;
  3857                           
  3858                           ;incstack = 0
  3859  003F12  C0C4  F001         	movff	_time_ms,?_ReadTime	;volatile
  3860  003F16  C0C5  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  3861  003F1A  C0C6  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  3862  003F1E  C0C7  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  3863  003F22  0012               	return		;funcret
  3864  003F24  FFFF               	dw	65535	; errata NOP
  3865  003F26                     __end_of_ReadTime:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _set_duty_cycle *****************
  3869 ;; Defined at:
  3870 ;;		line 18 in file "pwm.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  upper_8         1    wreg     unsigned char 
  3873 ;;  lower_2         1    0[COMRAM] unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  upper_8         1    1[COMRAM] unsigned char 
  3876 ;;  mask            1    2[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3886 ;;      Params:         1       0       0       0       0       0       0
  3887 ;;      Locals:         2       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0
  3889 ;;      Totals:         3       0       0       0       0       0       0
  3890 ;;Total ram usage:        3 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text15
  3901  003EB4                     __ptext15:
  3902                           	opt callstack 0
  3903  003EB4                     _set_duty_cycle:
  3904                           	opt callstack 0
  3905  003EB4  FFFF               	dw	65535	; assembler added errata NOP
  3906                           
  3907                           ;incstack = 0
  3908                           ;set_duty_cycle@upper_8 stored from wreg
  3909  003EB6  6E02               	movwf	set_duty_cycle@upper_8,c
  3910                           
  3911                           ;pwm.c: 19:   CCPR1L = upper_8;
  3912  003EB8  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  3913                           
  3914                           ;pwm.c: 20:   char mask = 0;
  3915  003EBC  0E00               	movlw	0
  3916  003EBE  6E03               	movwf	set_duty_cycle@mask,c
  3917                           
  3918                           ;pwm.c: 21:   mask |= lower_2;
  3919  003EC0  5001               	movf	set_duty_cycle@lower_2,w,c
  3920  003EC2  1203               	iorwf	set_duty_cycle@mask,f,c
  3921                           
  3922                           ;pwm.c: 22:   mask = mask << 4;
  3923  003EC4  3803               	swapf	set_duty_cycle@mask,w,c
  3924  003EC6  0BF0               	andlw	240
  3925  003EC8  6E03               	movwf	set_duty_cycle@mask,c
  3926                           
  3927                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  3928  003ECA  50BD               	movf	4029,w,c	;volatile
  3929  003ECC  0BCF               	andlw	207
  3930  003ECE  1003               	iorwf	set_duty_cycle@mask,w,c
  3931  003ED0  6EBD               	movwf	4029,c	;volatile
  3932  003ED2  0012               	return		;funcret
  3933  003ED4  FFFF               	dw	65535	; errata NOP
  3934  003ED6                     __end_of_set_duty_cycle:
  3935                           	opt callstack 0
  3936                           
  3937 ;; *************** function _read_SRAM *****************
  3938 ;; Defined at:
  3939 ;;		line 83 in file "main.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  address         2   38[BANK0 ] int 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  time_elapsed    2   44[BANK0 ] int 
  3944 ;;  stored_temp     2   42[BANK0 ] int 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3954 ;;      Params:         0       2       0       0       0       0       0
  3955 ;;      Locals:         0       4       0       0       0       0       0
  3956 ;;      Temps:          0       2       0       0       0       0       0
  3957 ;;      Totals:         0       8       0       0       0       0       0
  3958 ;;Total ram usage:        8 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:   11
  3961 ;; This function calls:
  3962 ;;		_UARTNewLine
  3963 ;;		_UARTSendString
  3964 ;;		_int_to_char
  3965 ;;		_read_op
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text16
  3972  00319A                     __ptext16:
  3973                           	opt callstack 0
  3974  00319A                     _read_SRAM:
  3975                           	opt callstack 0
  3976  00319A  FFFF               	dw	65535	; assembler added errata NOP
  3977                           
  3978                           ;main.c: 84:   int stored_temp = read_op(address);
  3979                           
  3980                           ;incstack = 0
  3981  00319C  0100               	movlb	0	; () banked
  3982  00319E  51A6               	movf	read_SRAM@address& (0+255),w,b
  3983  0031A0  EC6B  F01F         	call	_read_op
  3984  0031A4  0100               	movlb	0	; () banked
  3985  0031A6  6FA8               	movwf	??_read_SRAM& (0+255),b
  3986  0031A8  51A8               	movf	??_read_SRAM& (0+255),w,b
  3987  0031AA  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  3988  0031AC  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  3989                           
  3990                           ;main.c: 85:   int time_elapsed = read_op(address + 1);
  3991  0031AE  29A6               	incf	read_SRAM@address& (0+255),w,b
  3992  0031B0  EC6B  F01F         	call	_read_op
  3993  0031B4  0100               	movlb	0	; () banked
  3994  0031B6  6FA8               	movwf	??_read_SRAM& (0+255),b
  3995  0031B8  51A8               	movf	??_read_SRAM& (0+255),w,b
  3996  0031BA  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  3997  0031BC  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;main.c: 86:   TRISCbits.TRISC7 = 0;
  4001  0031BE  9E94               	bcf	3988,7,c	;volatile
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 87:   UARTSendString("Temperature at address ");
  4005  0031C0  0E1B               	movlw	low STR_3
  4006  0031C2  6FA0               	movwf	UARTSendString@c& (0+255),b
  4007  0031C4  0E06               	movlw	high STR_3
  4008  0031C6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4009  0031C8  EC99  F01C         	call	_UARTSendString	;wreg free
  4010                           
  4011                           ;main.c: 88:   UARTSendString(int_to_char(address));
  4012  0031CC  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  4013  0031D0  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  4014  0031D4  0E00               	movlw	0
  4015  0031D6  BE7B               	btfsc	int_to_char@num+1,7,c
  4016  0031D8  0EFF               	movlw	-1
  4017  0031DA  6E7C               	movwf	int_to_char@num+2,c
  4018  0031DC  6E7D               	movwf	int_to_char@num+3,c
  4019  0031DE  ECDD  F01D         	call	_int_to_char	;wreg free
  4020  0031E2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4021  0031E6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4022  0031EA  EC99  F01C         	call	_UARTSendString	;wreg free
  4023                           
  4024                           ;main.c: 89:   UARTSendString(": ");
  4025  0031EE  0ECE               	movlw	low STR_4
  4026  0031F0  0100               	movlb	0	; () banked
  4027  0031F2  6FA0               	movwf	UARTSendString@c& (0+255),b
  4028  0031F4  0E06               	movlw	high STR_4
  4029  0031F6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4030  0031F8  EC99  F01C         	call	_UARTSendString	;wreg free
  4031                           
  4032                           ;main.c: 90:   UARTSendString(int_to_char(stored_temp));
  4033  0031FC  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  4034  003200  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  4035  003204  0E00               	movlw	0
  4036  003206  BE7B               	btfsc	int_to_char@num+1,7,c
  4037  003208  0EFF               	movlw	-1
  4038  00320A  6E7C               	movwf	int_to_char@num+2,c
  4039  00320C  6E7D               	movwf	int_to_char@num+3,c
  4040  00320E  ECDD  F01D         	call	_int_to_char	;wreg free
  4041  003212  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4042  003216  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4043  00321A  EC99  F01C         	call	_UARTSendString	;wreg free
  4044                           
  4045                           ;main.c: 91:   UARTSendString(" degrees C ");
  4046  00321E  0E69               	movlw	low STR_5
  4047  003220  0100               	movlb	0	; () banked
  4048  003222  6FA0               	movwf	UARTSendString@c& (0+255),b
  4049  003224  0E06               	movlw	high STR_5
  4050  003226  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4051  003228  EC99  F01C         	call	_UARTSendString	;wreg free
  4052                           
  4053                           ;main.c: 92:   UARTNewLine();
  4054  00322C  EC93  F01F         	call	_UARTNewLine	;wreg free
  4055                           
  4056                           ;main.c: 93:   UARTSendString("Time at address ");
  4057  003230  0E4B               	movlw	low STR_6
  4058  003232  0100               	movlb	0	; () banked
  4059  003234  6FA0               	movwf	UARTSendString@c& (0+255),b
  4060  003236  0E06               	movlw	high STR_6
  4061  003238  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4062  00323A  EC99  F01C         	call	_UARTSendString	;wreg free
  4063                           
  4064                           ;main.c: 94:   UARTSendString(int_to_char(address + 1));
  4065  00323E  0E01               	movlw	1
  4066  003240  0100               	movlb	0	; () banked
  4067  003242  25A6               	addwf	read_SRAM@address& (0+255),w,b
  4068  003244  6FA8               	movwf	??_read_SRAM& (0+255),b
  4069  003246  0E00               	movlw	0
  4070  003248  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  4071  00324A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4072  00324C  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  4073  003250  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  4074  003254  0E00               	movlw	0
  4075  003256  BE7B               	btfsc	int_to_char@num+1,7,c
  4076  003258  0EFF               	movlw	-1
  4077  00325A  6E7C               	movwf	int_to_char@num+2,c
  4078  00325C  6E7D               	movwf	int_to_char@num+3,c
  4079  00325E  ECDD  F01D         	call	_int_to_char	;wreg free
  4080  003262  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4081  003266  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4082  00326A  EC99  F01C         	call	_UARTSendString	;wreg free
  4083                           
  4084                           ;main.c: 95:   UARTSendString(": ");
  4085  00326E  0ECE               	movlw	low STR_4
  4086  003270  0100               	movlb	0	; () banked
  4087  003272  6FA0               	movwf	UARTSendString@c& (0+255),b
  4088  003274  0E06               	movlw	high STR_4
  4089  003276  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4090  003278  EC99  F01C         	call	_UARTSendString	;wreg free
  4091                           
  4092                           ;main.c: 96:   UARTSendString(int_to_char(time_elapsed));
  4093  00327C  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  4094  003280  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  4095  003284  0E00               	movlw	0
  4096  003286  BE7B               	btfsc	int_to_char@num+1,7,c
  4097  003288  0EFF               	movlw	-1
  4098  00328A  6E7C               	movwf	int_to_char@num+2,c
  4099  00328C  6E7D               	movwf	int_to_char@num+3,c
  4100  00328E  ECDD  F01D         	call	_int_to_char	;wreg free
  4101  003292  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4102  003296  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4103  00329A  EC99  F01C         	call	_UARTSendString	;wreg free
  4104                           
  4105                           ;main.c: 97:   UARTSendString(" minutes");
  4106  00329E  0E7E               	movlw	low STR_8
  4107  0032A0  0100               	movlb	0	; () banked
  4108  0032A2  6FA0               	movwf	UARTSendString@c& (0+255),b
  4109  0032A4  0E06               	movlw	high STR_8
  4110  0032A6  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4111  0032A8  EC99  F01C         	call	_UARTSendString	;wreg free
  4112                           
  4113                           ;main.c: 98:   UARTNewLine();
  4114  0032AC  EC93  F01F         	call	_UARTNewLine	;wreg free
  4115                           
  4116                           ;main.c: 99:   UARTSendString("Done reading from memory.");
  4117  0032B0  0E01               	movlw	low STR_9
  4118  0032B2  0100               	movlb	0	; () banked
  4119  0032B4  6FA0               	movwf	UARTSendString@c& (0+255),b
  4120  0032B6  0E06               	movlw	high STR_9
  4121  0032B8  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4122  0032BA  EC99  F01C         	call	_UARTSendString	;wreg free
  4123                           
  4124                           ;main.c: 100:   UARTNewLine();
  4125  0032BE  EC93  F01F         	call	_UARTNewLine	;wreg free
  4126                           
  4127                           ;main.c: 101:   UARTNewLine();
  4128  0032C2  EC93  F01F         	call	_UARTNewLine	;wreg free
  4129  0032C6  0012               	return		;funcret
  4130  0032C8  FFFF               	dw	65535	; errata NOP
  4131  0032CA                     __end_of_read_SRAM:
  4132                           	opt callstack 0
  4133                           
  4134 ;; *************** function _read_op *****************
  4135 ;; Defined at:
  4136 ;;		line 30 in file "drive_memory.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  address         1    wreg     unsigned char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  address         1    0[COMRAM] unsigned char 
  4141 ;;  result          1    1[COMRAM] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      unsigned char 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         2       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         2       0       0       0       0       0       0
  4155 ;;Total ram usage:        2 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    2
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_read_SRAM
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text17
  4166  003ED6                     __ptext17:
  4167                           	opt callstack 0
  4168  003ED6                     _read_op:
  4169                           	opt callstack 0
  4170  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  4171                           
  4172                           ;incstack = 0
  4173                           ;read_op@address stored from wreg
  4174  003ED8  6E01               	movwf	read_op@address,c
  4175                           
  4176                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  4177  003EDA  9094               	bcf	3988,0,c	;volatile
  4178                           
  4179                           ;drive_memory.c: 33:   TRISD = 0xFF;
  4180  003EDC  6895               	setf	3989,c	;volatile
  4181                           
  4182                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  4183  003EDE  0EC0               	movlw	192
  4184  003EE0  1693               	andwf	3987,f,c	;volatile
  4185                           
  4186                           ;drive_memory.c: 35:   PORTB = address;
  4187  003EE2  C001  FF81         	movff	read_op@address,3969	;volatile
  4188                           
  4189                           ;drive_memory.c: 36:   RB5 = 1;
  4190  003EE6  8A81               	bsf	3969,5,c	;volatile
  4191                           
  4192                           ;drive_memory.c: 38:   RC0 = 1;
  4193  003EE8  8082               	bsf	3970,0,c	;volatile
  4194                           
  4195                           ;drive_memory.c: 41:   RB5 = 0;
  4196  003EEA  9A81               	bcf	3969,5,c	;volatile
  4197                           
  4198                           ;drive_memory.c: 45:   RB5 = 1;
  4199                           
  4200                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  4201  003EEC  8A81               	bsf	3969,5,c	;volatile
  4202                           
  4203                           ;drive_memory.c: 46:   char result = PORTD;
  4204  003EEE  CF83 F002          	movff	3971,read_op@result	;volatile
  4205                           
  4206                           ;drive_memory.c: 47:   return result;
  4207  003EF2  5002               	movf	read_op@result,w,c
  4208  003EF4  0012               	return		;funcret
  4209  003EF6  FFFF               	dw	65535	; errata NOP
  4210  003EF8                     __end_of_read_op:
  4211                           	opt callstack 0
  4212                           
  4213 ;; *************** function _int_to_char *****************
  4214 ;; Defined at:
  4215 ;;		line 18 in file "lcd.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  num             4  121[COMRAM] unsigned long 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  result         10   18[BANK0 ] unsigned char [10]
  4220 ;;  the_num         4   28[BANK0 ] unsigned long 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2  121[COMRAM] PTR unsigned char 
  4223 ;; Registers used:
  4224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4230 ;;      Params:         4       0       0       0       0       0       0
  4231 ;;      Locals:         0      14       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0
  4233 ;;      Totals:         4      14       0       0       0       0       0
  4234 ;;Total ram usage:       18 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:   10
  4237 ;; This function calls:
  4238 ;;		_getchar
  4239 ;;		_sprintf
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;;		_read_SRAM
  4243 ;;		_write_SRAM
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text18
  4248  003BBA                     __ptext18:
  4249                           	opt callstack 0
  4250  003BBA                     _int_to_char:
  4251                           	opt callstack 0
  4252  003BBA  FFFF               	dw	65535	; assembler added errata NOP
  4253                           
  4254                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  4255                           
  4256                           ;incstack = 0
  4257  003BBC  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  4258  003BC0  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  4259  003BC4  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  4260  003BC8  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  4261                           
  4262                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  4263  003BCC  0E92               	movlw	low int_to_char@result
  4264  003BCE  0100               	movlb	0	; () banked
  4265  003BD0  6F80               	movwf	sprintf@s& (0+255),b
  4266  003BD2  0E00               	movlw	high int_to_char@result
  4267  003BD4  6F81               	movwf	(sprintf@s+1)& (0+255),b
  4268  003BD6  0EA3               	movlw	low STR_1
  4269  003BD8  6F82               	movwf	sprintf@fmt& (0+255),b
  4270  003BDA  0E06               	movlw	high STR_1
  4271  003BDC  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  4272  003BDE  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  4273  003BE2  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  4274  003BE6  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  4275  003BEA  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  4276  003BEE  EC0D  F01D         	call	_sprintf	;wreg free
  4277                           
  4278                           ;lcd.c: 22:   getchar();
  4279  003BF2  ECBB  F01F         	call	_getchar	;wreg free
  4280                           
  4281                           ;lcd.c: 23:   return result;
  4282  003BF6  0E92               	movlw	low int_to_char@result
  4283  003BF8  6E7A               	movwf	?_int_to_char,c
  4284  003BFA  0E00               	movlw	high int_to_char@result
  4285  003BFC  6E7B               	movwf	?_int_to_char+1,c
  4286  003BFE  0012               	return		;funcret
  4287  003C00  FFFF               	dw	65535	; errata NOP
  4288  003C02                     __end_of_int_to_char:
  4289                           	opt callstack 0
  4290                           
  4291 ;; *************** function _sprintf *****************
  4292 ;; Defined at:
  4293 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4296 ;;		 -> int_to_char@result(10), 
  4297 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4298 ;;		 -> STR_1(4), 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  f               6   10[BANK0 ] struct _IO_FILE
  4301 ;;  ap              2   16[BANK0 ] PTR void [1]
  4302 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4303 ;;  ret             2    0        int 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    0[BANK0 ] int 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4313 ;;      Params:         0       8       0       0       0       0       0
  4314 ;;      Locals:         0      10       0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0
  4316 ;;      Totals:         0      18       0       0       0       0       0
  4317 ;;Total ram usage:       18 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    9
  4320 ;; This function calls:
  4321 ;;		_vfprintf
  4322 ;; This function is called by:
  4323 ;;		_int_to_char
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text19
  4328  003A1A                     __ptext19:
  4329                           	opt callstack 0
  4330  003A1A                     _sprintf:
  4331                           	opt callstack 0
  4332  003A1A  FFFF               	dw	65535	; assembler added errata NOP
  4333                           
  4334                           ;incstack = 0
  4335  003A1C  0E84               	movlw	low (?_sprintf+4)
  4336  003A1E  0100               	movlb	0	; () banked
  4337  003A20  6F90               	movwf	sprintf@ap& (0+255),b
  4338  003A22  0E00               	movlw	high (?_sprintf+4)
  4339  003A24  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  4340  003A26  C080  F08A         	movff	sprintf@s,sprintf@f
  4341  003A2A  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  4342                           
  4343                           ; BSR set to: 0
  4344  003A2E  0E00               	movlw	0
  4345  003A30  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  4346  003A32  0E00               	movlw	0
  4347  003A34  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  4348                           
  4349                           ; BSR set to: 0
  4350  003A36  0E00               	movlw	0
  4351  003A38  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  4352  003A3A  0E00               	movlw	0
  4353  003A3C  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  4354                           
  4355                           ; BSR set to: 0
  4356  003A3E  0E8A               	movlw	low sprintf@f
  4357  003A40  6E72               	movwf	vfprintf@fp,c
  4358  003A42  0E00               	movlw	high sprintf@f
  4359  003A44  6E73               	movwf	vfprintf@fp+1,c
  4360  003A46  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  4361  003A4A  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4362  003A4E  0E90               	movlw	low sprintf@ap
  4363  003A50  6E76               	movwf	vfprintf@ap,c
  4364  003A52  0E00               	movlw	high sprintf@ap
  4365  003A54  6E77               	movwf	vfprintf@ap+1,c
  4366  003A56  ECDD  F01C         	call	_vfprintf	;wreg free
  4367  003A5A  0100               	movlb	0	; () banked
  4368  003A5C  518C               	movf	(sprintf@f+2)& (0+255),w,b
  4369  003A5E  2580               	addwf	sprintf@s& (0+255),w,b
  4370  003A60  6ED9               	movwf	fsr2l,c
  4371  003A62  518D               	movf	(sprintf@f+3)& (0+255),w,b
  4372  003A64  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  4373  003A66  6EDA               	movwf	fsr2h,c
  4374  003A68  0E00               	movlw	0
  4375  003A6A  6EDF               	movwf	indf2,c
  4376                           
  4377                           ; BSR set to: 0
  4378  003A6C  0012               	return		;funcret
  4379  003A6E  FFFF               	dw	65535	; errata NOP
  4380  003A70                     __end_of_sprintf:
  4381                           	opt callstack 0
  4382                           
  4383 ;; *************** function _vfprintf *****************
  4384 ;; Defined at:
  4385 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  4388 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4389 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  4390 ;;		 -> STR_2(3), STR_1(4), 
  4391 ;;  ap              2  117[COMRAM] PTR PTR void 
  4392 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  4395 ;;		 -> STR_2(3), STR_1(4), 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2  113[COMRAM] int 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4405 ;;      Params:         6       0       0       0       0       0       0
  4406 ;;      Locals:         2       0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0
  4408 ;;      Totals:         8       0       0       0       0       0       0
  4409 ;;Total ram usage:        8 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    8
  4412 ;; This function calls:
  4413 ;;		_vfpfcnvrt
  4414 ;; This function is called by:
  4415 ;;		_sprintf
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text20
  4420  0039BA                     __ptext20:
  4421                           	opt callstack 0
  4422  0039BA                     _vfprintf:
  4423                           	opt callstack 0
  4424  0039BA  FFFF               	dw	65535	; assembler added errata NOP
  4425                           
  4426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;incstack = 0
  4430  0039BC  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  4431  0039C0  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4432                           
  4433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4434  0039C4  0E00               	movlw	0
  4435  0039C6  0100               	movlb	0	; () banked
  4436  0039C8  6FCB               	movwf	(_nout+1)& (0+255),b
  4437  0039CA  0E00               	movlw	0
  4438  0039CC  6FCA               	movwf	_nout& (0+255),b
  4439                           
  4440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4441  0039CE  D014               	goto	l4400
  4442  0039D0                     l4398:
  4443  0039D0  FFFF               	dw	65535	; assembler added errata NOP
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4447  0039D2  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4448  0039D6  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4449  0039DA  0E78               	movlw	low vfprintf@cfmt
  4450  0039DC  6E45               	movwf	vfpfcnvrt@fmt,c
  4451  0039DE  0E00               	movlw	high vfprintf@cfmt
  4452  0039E0  6E46               	movwf	vfpfcnvrt@fmt+1,c
  4453  0039E2  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4454  0039E6  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4455  0039EA  EC6B  F003         	call	_vfpfcnvrt	;wreg free
  4456  0039EE  5043               	movf	?_vfpfcnvrt,w,c
  4457  0039F0  0100               	movlb	0	; () banked
  4458  0039F2  27CA               	addwf	_nout& (0+255),f,b
  4459  0039F4  5044               	movf	?_vfpfcnvrt+1,w,c
  4460  0039F6  23CB               	addwfc	(_nout+1)& (0+255),f,b
  4461  0039F8                     l4400:
  4462  0039F8  FFFF               	dw	65535	; assembler added errata NOP
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4466  0039FA  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  4467  0039FE  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4468  003A02                     	if	0	;tblptru may be non-zero
  4469  003A02                     	endif
  4470  003A02                     	if	0	;tblptru may be non-zero
  4471  003A02                     	endif
  4472  003A02  0008               	tblrd		*
  4473  003A04  FFFF               	dw	65535	; errata NOP
  4474  003A06  50F5               	movf	tablat,w,c
  4475  003A08  0900               	iorlw	0
  4476  003A0A  A4D8               	btfss	status,2,c
  4477  003A0C  D7E1               	goto	l4398
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4481  003A0E  C0CA  F072         	movff	_nout,?_vfprintf
  4482  003A12  C0CB  F073         	movff	_nout+1,?_vfprintf+1
  4483                           
  4484                           ; BSR set to: 0
  4485  003A16  0012               	return		;funcret
  4486  003A18  FFFF               	dw	65535	; errata NOP
  4487  003A1A                     __end_of_vfprintf:
  4488                           	opt callstack 0
  4489                           
  4490 ;; *************** function _vfpfcnvrt *****************
  4491 ;; Defined at:
  4492 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4495 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4496 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4497 ;;		 -> vfprintf@cfmt(2), 
  4498 ;;  ap              2   70[COMRAM] PTR PTR void 
  4499 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  llu             8  105[COMRAM] unsigned long long 
  4502 ;;  ll              8   94[COMRAM] long long 
  4503 ;;  f               4    0        long long 
  4504 ;;  ct              3    0        unsigned char [3]
  4505 ;;  vp              2  102[COMRAM] PTR void 
  4506 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4507 ;;  done            2   88[COMRAM] int 
  4508 ;;  cp              2   86[COMRAM] PTR unsigned char 
  4509 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4510 ;;  i               2    0        int 
  4511 ;;  c               1  104[COMRAM] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2   66[COMRAM] int 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4521 ;;      Params:         6       0       0       0       0       0       0
  4522 ;;      Locals:        27       0       0       0       0       0       0
  4523 ;;      Temps:         14       0       0       0       0       0       0
  4524 ;;      Totals:        47       0       0       0       0       0       0
  4525 ;;Total ram usage:       47 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    7
  4528 ;; This function calls:
  4529 ;;		_atoi
  4530 ;;		_ctoa
  4531 ;;		_dtoa
  4532 ;;		_fputc
  4533 ;;		_isdigit
  4534 ;;		_otoa
  4535 ;;		_stoa
  4536 ;;		_strncmp
  4537 ;;		_utoa
  4538 ;;		_xtoa
  4539 ;; This function is called by:
  4540 ;;		_vfprintf
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text21
  4545  0006D6                     __ptext21:
  4546                           	opt callstack 0
  4547  0006D6                     _vfpfcnvrt:
  4548                           	opt callstack 0
  4549  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  4550                           
  4551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;incstack = 0
  4555  0006D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4556  0006DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4557  0006E0  CFDE FFF6          	movff	postinc2,tblptrl
  4558  0006E4  CFDD FFF7          	movff	postdec2,tblptrh
  4559  0006E8                     	if	0	;tblptru may be non-zero
  4560  0006E8                     	endif
  4561  0006E8                     	if	0	;tblptru may be non-zero
  4562  0006E8                     	endif
  4563  0006E8  0008               	tblrd		*
  4564  0006EA  FFFF               	dw	65535	; errata NOP
  4565  0006EC  50F5               	movf	tablat,w,c
  4566  0006EE  0A25               	xorlw	37
  4567  0006F0  A4D8               	btfss	status,2,c
  4568  0006F2  EF1C  F00C         	goto	l4378
  4569                           
  4570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  4571  0006F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4572  0006FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4573  0006FE  2ADE               	incf	postinc2,f,c
  4574  000700  0E00               	movlw	0
  4575  000702  22DD               	addwfc	postdec2,f,c
  4576                           
  4577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  4578  000704  0E00               	movlw	0
  4579  000706  0100               	movlb	0	; () banked
  4580  000708  6FCD               	movwf	(_width+1)& (0+255),b
  4581  00070A  0E00               	movlw	0
  4582  00070C  6FCC               	movwf	_width& (0+255),b
  4583  00070E  C0CC  F0D0         	movff	_width,_flags
  4584  000712  C0CD  F0D1         	movff	_width+1,_flags+1
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  4588  000716  69CE               	setf	_prec& (0+255),b
  4589  000718  69CF               	setf	(_prec+1)& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  4593  00071A  0E00               	movlw	0
  4594  00071C  6E5A               	movwf	vfpfcnvrt@done+1,c
  4595  00071E  0E00               	movlw	0
  4596  000720  D020               	goto	L7
  4597  000722                     l4020:
  4598  000722  FFFF               	dw	65535	; assembler added errata NOP
  4599                           
  4600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  4601  000724  0100               	movlb	0	; () banked
  4602  000726  81D0               	bsf	_flags& (0+255),0,b
  4603  000728                     l4022:
  4604  000728  FFFF               	dw	65535	; assembler added errata NOP
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  4608  00072A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4609  00072E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4610  000732  2ADE               	incf	postinc2,f,c
  4611  000734  0E00               	movlw	0
  4612  000736  22DD               	addwfc	postdec2,f,c
  4613                           
  4614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  4615  000738  D03A               	goto	l4046
  4616  00073A                     l4024:
  4617  00073A  FFFF               	dw	65535	; assembler added errata NOP
  4618                           
  4619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  4620  00073C  0100               	movlb	0	; () banked
  4621  00073E  83D0               	bsf	_flags& (0+255),1,b
  4622  000740  D7F3               	goto	l4022
  4623  000742                     l4028:
  4624  000742  FFFF               	dw	65535	; assembler added errata NOP
  4625                           
  4626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  4627  000744  0100               	movlb	0	; () banked
  4628  000746  85D0               	bsf	_flags& (0+255),2,b
  4629  000748  D7EF               	goto	l4022
  4630  00074A                     l4032:
  4631  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4632                           
  4633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  4634  00074C  0100               	movlb	0	; () banked
  4635  00074E  87D0               	bsf	_flags& (0+255),3,b
  4636  000750  D7EB               	goto	l4022
  4637  000752                     l4036:
  4638  000752  FFFF               	dw	65535	; assembler added errata NOP
  4639                           
  4640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  4641  000754  0100               	movlb	0	; () banked
  4642  000756  89D0               	bsf	_flags& (0+255),4,b
  4643  000758  D7E7               	goto	l4022
  4644  00075A                     l4040:
  4645  00075A  FFFF               	dw	65535	; assembler added errata NOP
  4646                           
  4647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  4648  00075C  0E00               	movlw	0
  4649  00075E  6E5A               	movwf	vfpfcnvrt@done+1,c
  4650  000760  0E01               	movlw	1
  4651  000762                     L7:
  4652  000762  FFFF               	dw	65535	; assembler added errata NOP
  4653  000764  6E59               	movwf	vfpfcnvrt@done,c
  4654                           
  4655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  4656  000766  D023               	goto	l4046
  4657  000768                     l4044:
  4658  000768  FFFF               	dw	65535	; assembler added errata NOP
  4659  00076A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4660  00076E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4661  000772  CFDE FFF6          	movff	postinc2,tblptrl
  4662  000776  CFDD FFF7          	movff	postdec2,tblptrh
  4663  00077A                     	if	0	;tblptru may be non-zero
  4664  00077A                     	endif
  4665  00077A                     	if	0	;tblptru may be non-zero
  4666  00077A                     	endif
  4667  00077A  0008               	tblrd		*
  4668  00077C  FFFF               	dw	65535	; errata NOP
  4669  00077E  50F5               	movf	tablat,w,c
  4670  000780  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4671  000782  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  4672                           
  4673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4674                           ; Switch size 1, requested type "simple"
  4675                           ; Number of cases is 1, Range of values is 0 to 0
  4676                           ; switch strategies available:
  4677                           ; Name         Instructions Cycles
  4678                           ; simple_byte            4     3 (average)
  4679                           ;	Chosen strategy is simple_byte
  4680  000784  504A               	movf	??_vfpfcnvrt+1,w,c
  4681  000786  0A00               	xorlw	0	; case 0
  4682  000788  A4D8               	btfss	status,2,c
  4683  00078A  D7E7               	goto	l4040
  4684                           
  4685                           ; Switch size 1, requested type "simple"
  4686                           ; Number of cases is 5, Range of values is 32 to 48
  4687                           ; switch strategies available:
  4688                           ; Name         Instructions Cycles
  4689                           ; simple_byte           16     9 (average)
  4690                           ;	Chosen strategy is simple_byte
  4691  00078C  5049               	movf	??_vfpfcnvrt,w,c
  4692  00078E  0A20               	xorlw	32	; case 32
  4693  000790  B4D8               	btfsc	status,2,c
  4694  000792  D7DB               	goto	l4032
  4695  000794  0A03               	xorlw	3	; case 35
  4696  000796  B4D8               	btfsc	status,2,c
  4697  000798  D7DC               	goto	l4036
  4698  00079A  0A08               	xorlw	8	; case 43
  4699  00079C  B4D8               	btfsc	status,2,c
  4700  00079E  D7D1               	goto	l4028
  4701  0007A0  0A06               	xorlw	6	; case 45
  4702  0007A2  B4D8               	btfsc	status,2,c
  4703  0007A4  D7BE               	goto	l4020
  4704  0007A6  0A1D               	xorlw	29	; case 48
  4705  0007A8  B4D8               	btfsc	status,2,c
  4706  0007AA  D7C7               	goto	l4024
  4707  0007AC  D7D6               	goto	l4040
  4708  0007AE                     l4046:
  4709  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  4710                           
  4711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  4712  0007B0  5059               	movf	vfpfcnvrt@done,w,c
  4713  0007B2  105A               	iorwf	vfpfcnvrt@done+1,w,c
  4714  0007B4  B4D8               	btfsc	status,2,c
  4715  0007B6  D7D8               	goto	l4044
  4716                           
  4717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  4718  0007B8  0100               	movlb	0	; () banked
  4719  0007BA  B1D0               	btfsc	_flags& (0+255),0,b
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  4723  0007BC  93D0               	bcf	_flags& (0+255),1,b
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  4727  0007BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4728  0007C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4729  0007C6  CFDE FFF6          	movff	postinc2,tblptrl
  4730  0007CA  CFDD FFF7          	movff	postdec2,tblptrh
  4731  0007CE                     	if	0	;tblptru may be non-zero
  4732  0007CE                     	endif
  4733  0007CE                     	if	0	;tblptru may be non-zero
  4734  0007CE                     	endif
  4735  0007CE  0008               	tblrd		*
  4736  0007D0  FFFF               	dw	65535	; errata NOP
  4737  0007D2  50F5               	movf	tablat,w,c
  4738  0007D4  0A2A               	xorlw	42
  4739  0007D6  A4D8               	btfss	status,2,c
  4740  0007D8  D023               	goto	l4058
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  4744  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4745  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4746  0007E2  2ADE               	incf	postinc2,f,c
  4747  0007E4  0E00               	movlw	0
  4748  0007E6  22DD               	addwfc	postdec2,f,c
  4749                           
  4750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  4751  0007E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4752  0007EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4753  0007F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4754  0007F4  0E02               	movlw	2
  4755  0007F6  26DE               	addwf	postinc2,f,c
  4756  0007F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4757  0007FC  0E00               	movlw	0
  4758  0007FE  22DD               	addwfc	postdec2,f,c
  4759  000800  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4760  000804  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4761  000808  CFDE F0CC          	movff	postinc2,_width
  4762  00080C  CFDD F0CD          	movff	postdec2,_width+1
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  4766  000810  AFCD               	btfss	(_width+1)& (0+255),7,b
  4767  000812  D045               	goto	u3990
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  4771  000814  81D0               	bsf	_flags& (0+255),0,b
  4772                           
  4773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  4774  000816  6DCC               	negf	_width& (0+255),b
  4775  000818  1FCD               	comf	(_width+1)& (0+255),f,b
  4776  00081A  B0D8               	btfsc	status,0,c
  4777  00081C  2BCD               	incf	(_width+1)& (0+255),f,b
  4778  00081E  D03F               	goto	u3990
  4779  000820                     l4058:
  4780  000820  FFFF               	dw	65535	; assembler added errata NOP
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  4784  000822  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4785  000826  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4786  00082A  CFDE F008          	movff	postinc2,atoi@s
  4787  00082E  CFDD F009          	movff	postdec2,atoi@s+1
  4788  000832  EC80  F015         	call	_atoi	;wreg free
  4789  000836  C008  F0CC         	movff	?_atoi,_width
  4790  00083A  C009  F0CD         	movff	?_atoi+1,_width+1
  4791                           
  4792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4793  00083E  D008               	goto	l4062
  4794  000840                     l4060:
  4795  000840  FFFF               	dw	65535	; assembler added errata NOP
  4796                           
  4797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  4798  000842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4799  000846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4800  00084A  2ADE               	incf	postinc2,f,c
  4801  00084C  0E00               	movlw	0
  4802  00084E  22DD               	addwfc	postdec2,f,c
  4803  000850                     l4062:
  4804  000850  FFFF               	dw	65535	; assembler added errata NOP
  4805  000852  0ED0               	movlw	208
  4806  000854  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4807  000856  0EFF               	movlw	255
  4808  000858  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4809  00085A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  00085E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  000862  CFDE FFF6          	movff	postinc2,tblptrl
  4812  000866  CFDD FFF7          	movff	postdec2,tblptrh
  4813  00086A                     	if	0	;tblptru may be non-zero
  4814  00086A                     	endif
  4815  00086A                     	if	0	;tblptru may be non-zero
  4816  00086A                     	endif
  4817  00086A  0008               	tblrd		*
  4818  00086C  FFFF               	dw	65535	; errata NOP
  4819  00086E  50F5               	movf	tablat,w,c
  4820  000870  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4821  000872  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  4822  000874  5049               	movf	??_vfpfcnvrt,w,c
  4823  000876  264B               	addwf	??_vfpfcnvrt+2,f,c
  4824  000878  504A               	movf	??_vfpfcnvrt+1,w,c
  4825  00087A  224C               	addwfc	??_vfpfcnvrt+3,f,c
  4826  00087C  504C               	movf	??_vfpfcnvrt+3,w,c
  4827  00087E  E106               	bnz	u3970
  4828  000880  0E0A               	movlw	10
  4829  000882  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  4830  000884  B0D8               	btfsc	status,0,c
  4831  000886  D002               	goto	u3970
  4832  000888  0E01               	movlw	1
  4833  00088A  D002               	goto	u3980
  4834  00088C                     u3970:
  4835  00088C  FFFF               	dw	65535	; assembler added errata NOP
  4836  00088E  0E00               	movlw	0
  4837  000890                     u3980:
  4838  000890  FFFF               	dw	65535	; assembler added errata NOP
  4839  000892  6E5B               	movwf	_vfpfcnvrt$1124,c
  4840  000894  6A5C               	clrf	_vfpfcnvrt$1124+1,c
  4841  000896  505B               	movf	_vfpfcnvrt$1124,w,c
  4842  000898  105C               	iorwf	_vfpfcnvrt$1124+1,w,c
  4843  00089A  A4D8               	btfss	status,2,c
  4844  00089C  D7D1               	goto	l4060
  4845  00089E                     u3990:
  4846  00089E  FFFF               	dw	65535	; assembler added errata NOP
  4847                           
  4848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  4849  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4850  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4851  0008A8  CFDE FFF6          	movff	postinc2,tblptrl
  4852  0008AC  CFDD FFF7          	movff	postdec2,tblptrh
  4853  0008B0                     	if	0	;tblptru may be non-zero
  4854  0008B0                     	endif
  4855  0008B0                     	if	0	;tblptru may be non-zero
  4856  0008B0                     	endif
  4857  0008B0  0008               	tblrd		*
  4858  0008B2  FFFF               	dw	65535	; errata NOP
  4859  0008B4  50F5               	movf	tablat,w,c
  4860  0008B6  0A2E               	xorlw	46
  4861  0008B8  A4D8               	btfss	status,2,c
  4862  0008BA  D075               	goto	u4040
  4863                           
  4864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  4865  0008BC  0E00               	movlw	0
  4866  0008BE  0100               	movlb	0	; () banked
  4867  0008C0  6FCF               	movwf	(_prec+1)& (0+255),b
  4868  0008C2  0E00               	movlw	0
  4869  0008C4  6FCE               	movwf	_prec& (0+255),b
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  4873  0008C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4874  0008CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4875  0008CE  2ADE               	incf	postinc2,f,c
  4876  0008D0  0E00               	movlw	0
  4877  0008D2  22DD               	addwfc	postdec2,f,c
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  4881  0008D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4882  0008D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4883  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  4884  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  4885  0008E4                     	if	0	;tblptru may be non-zero
  4886  0008E4                     	endif
  4887  0008E4                     	if	0	;tblptru may be non-zero
  4888  0008E4                     	endif
  4889  0008E4  0008               	tblrd		*
  4890  0008E6  FFFF               	dw	65535	; errata NOP
  4891  0008E8  50F5               	movf	tablat,w,c
  4892  0008EA  0A2A               	xorlw	42
  4893  0008EC  A4D8               	btfss	status,2,c
  4894  0008EE  D01C               	goto	l4078
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  4898  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4899  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4900  0008F8  2ADE               	incf	postinc2,f,c
  4901  0008FA  0E00               	movlw	0
  4902  0008FC  22DD               	addwfc	postdec2,f,c
  4903                           
  4904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  4905  0008FE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4906  000902  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4907  000906  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4908  00090A  0E02               	movlw	2
  4909  00090C  26DE               	addwf	postinc2,f,c
  4910  00090E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4911  000912  0E00               	movlw	0
  4912  000914  22DD               	addwfc	postdec2,f,c
  4913  000916  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4914  00091A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4915  00091E  CFDE F0CE          	movff	postinc2,_prec
  4916  000922  CFDD F0CF          	movff	postdec2,_prec+1
  4917                           
  4918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  4919  000926  D03F               	goto	u4040
  4920  000928                     l4078:
  4921  000928  FFFF               	dw	65535	; assembler added errata NOP
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  4925  00092A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4926  00092E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4927  000932  CFDE F008          	movff	postinc2,atoi@s
  4928  000936  CFDD F009          	movff	postdec2,atoi@s+1
  4929  00093A  EC80  F015         	call	_atoi	;wreg free
  4930  00093E  C008  F0CE         	movff	?_atoi,_prec
  4931  000942  C009  F0CF         	movff	?_atoi+1,_prec+1
  4932                           
  4933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4934  000946  D008               	goto	l4082
  4935  000948                     l4080:
  4936  000948  FFFF               	dw	65535	; assembler added errata NOP
  4937                           
  4938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  4939  00094A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4940  00094E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4941  000952  2ADE               	incf	postinc2,f,c
  4942  000954  0E00               	movlw	0
  4943  000956  22DD               	addwfc	postdec2,f,c
  4944  000958                     l4082:
  4945  000958  FFFF               	dw	65535	; assembler added errata NOP
  4946  00095A  0ED0               	movlw	208
  4947  00095C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4948  00095E  0EFF               	movlw	255
  4949  000960  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  4950  000962  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4951  000966  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4952  00096A  CFDE FFF6          	movff	postinc2,tblptrl
  4953  00096E  CFDD FFF7          	movff	postdec2,tblptrh
  4954  000972                     	if	0	;tblptru may be non-zero
  4955  000972                     	endif
  4956  000972                     	if	0	;tblptru may be non-zero
  4957  000972                     	endif
  4958  000972  0008               	tblrd		*
  4959  000974  FFFF               	dw	65535	; errata NOP
  4960  000976  50F5               	movf	tablat,w,c
  4961  000978  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  4962  00097A  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  4963  00097C  5049               	movf	??_vfpfcnvrt,w,c
  4964  00097E  264B               	addwf	??_vfpfcnvrt+2,f,c
  4965  000980  504A               	movf	??_vfpfcnvrt+1,w,c
  4966  000982  224C               	addwfc	??_vfpfcnvrt+3,f,c
  4967  000984  504C               	movf	??_vfpfcnvrt+3,w,c
  4968  000986  E106               	bnz	u4020
  4969  000988  0E0A               	movlw	10
  4970  00098A  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  4971  00098C  B0D8               	btfsc	status,0,c
  4972  00098E  D002               	goto	u4020
  4973  000990  0E01               	movlw	1
  4974  000992  D002               	goto	u4030
  4975  000994                     u4020:
  4976  000994  FFFF               	dw	65535	; assembler added errata NOP
  4977  000996  0E00               	movlw	0
  4978  000998                     u4030:
  4979  000998  FFFF               	dw	65535	; assembler added errata NOP
  4980  00099A  6E5D               	movwf	_vfpfcnvrt$1125,c
  4981  00099C  6A5E               	clrf	_vfpfcnvrt$1125+1,c
  4982  00099E  505D               	movf	_vfpfcnvrt$1125,w,c
  4983  0009A0  105E               	iorwf	_vfpfcnvrt$1125+1,w,c
  4984  0009A2  A4D8               	btfss	status,2,c
  4985  0009A4  D7D1               	goto	l4080
  4986  0009A6                     u4040:
  4987  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  4988                           
  4989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  4990  0009A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4991  0009AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4992  0009B0  CFDE FFF6          	movff	postinc2,tblptrl
  4993  0009B4  CFDD FFF7          	movff	postdec2,tblptrh
  4994  0009B8                     	if	0	;tblptru may be non-zero
  4995  0009B8                     	endif
  4996  0009B8                     	if	0	;tblptru may be non-zero
  4997  0009B8                     	endif
  4998  0009B8  0008               	tblrd		*
  4999  0009BA  FFFF               	dw	65535	; errata NOP
  5000  0009BC  50F5               	movf	tablat,w,c
  5001  0009BE  0A63               	xorlw	99
  5002  0009C0  A4D8               	btfss	status,2,c
  5003  0009C2  D027               	goto	l4096
  5004                           
  5005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5006  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5007  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5008  0009CC  2ADE               	incf	postinc2,f,c
  5009  0009CE  0E00               	movlw	0
  5010  0009D0  22DD               	addwfc	postdec2,f,c
  5011                           
  5012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5013  0009D2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5014  0009D6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5015  0009DA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5016  0009DE  0E02               	movlw	2
  5017  0009E0  26DE               	addwf	postinc2,f,c
  5018  0009E2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5019  0009E6  0E00               	movlw	0
  5020  0009E8  22DD               	addwfc	postdec2,f,c
  5021  0009EA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5022  0009EE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5023  0009F2  50DF               	movf	indf2,w,c
  5024  0009F4  6E69               	movwf	vfpfcnvrt@c,c
  5025                           
  5026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5027  0009F6  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5028  0009FA  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5029  0009FE  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5030  000A02  EC63  F01D         	call	_ctoa	;wreg free
  5031  000A06  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  5032  000A0A  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5033  000A0E  EF38  F00C         	goto	l553
  5034  000A12                     l4096:
  5035  000A12  FFFF               	dw	65535	; assembler added errata NOP
  5036                           
  5037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  5038  000A14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5039  000A18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5040  000A1C  CFDE F001          	movff	postinc2,strncmp@_l
  5041  000A20  CFDD F002          	movff	postdec2,strncmp@_l+1
  5042  000A24  0E8B               	movlw	low STR_15
  5043  000A26  6E03               	movwf	strncmp@_r,c
  5044  000A28  0E06               	movlw	high STR_15
  5045  000A2A  6E04               	movwf	strncmp@_r+1,c
  5046  000A2C  0E00               	movlw	0
  5047  000A2E  6E06               	movwf	strncmp@n+1,c
  5048  000A30  0E03               	movlw	3
  5049  000A32  6E05               	movwf	strncmp@n,c
  5050  000A34  ECA2  F01A         	call	_strncmp	;wreg free
  5051  000A38  5001               	movf	?_strncmp,w,c
  5052  000A3A  1002               	iorwf	?_strncmp+1,w,c
  5053  000A3C  B4D8               	btfsc	status,2,c
  5054  000A3E  D016               	goto	u4070
  5055  000A40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5056  000A44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5057  000A48  CFDE F001          	movff	postinc2,strncmp@_l
  5058  000A4C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5059  000A50  0E8F               	movlw	low STR_19
  5060  000A52  6E03               	movwf	strncmp@_r,c
  5061  000A54  0E06               	movlw	high STR_19
  5062  000A56  6E04               	movwf	strncmp@_r+1,c
  5063  000A58  0E00               	movlw	0
  5064  000A5A  6E06               	movwf	strncmp@n+1,c
  5065  000A5C  0E03               	movlw	3
  5066  000A5E  6E05               	movwf	strncmp@n,c
  5067  000A60  ECA2  F01A         	call	_strncmp	;wreg free
  5068  000A64  5001               	movf	?_strncmp,w,c
  5069  000A66  1002               	iorwf	?_strncmp+1,w,c
  5070  000A68  A4D8               	btfss	status,2,c
  5071  000A6A  D043               	goto	l4106
  5072  000A6C                     u4070:
  5073  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  5074                           
  5075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  5076  000A6E  0E03               	movlw	3
  5077  000A70  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5078  000A74  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5079  000A78  26DE               	addwf	postinc2,f,c
  5080  000A7A  0E00               	movlw	0
  5081  000A7C  22DD               	addwfc	postdec2,f,c
  5082                           
  5083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5084  000A7E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5085  000A82  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5086  000A86  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5087  000A8A  0E02               	movlw	2
  5088  000A8C  26DE               	addwf	postinc2,f,c
  5089  000A8E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5090  000A92  0E00               	movlw	0
  5091  000A94  22DD               	addwfc	postdec2,f,c
  5092  000A96  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5093  000A9A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5094  000A9E  50DF               	movf	indf2,w,c
  5095  000AA0  6E5F               	movwf	vfpfcnvrt@ll,c
  5096  000AA2  0E00               	movlw	0
  5097  000AA4  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  5098  000AA6  0EFF               	movlw	-1
  5099  000AA8  6E60               	movwf	vfpfcnvrt@ll+1,c
  5100  000AAA                     L8:
  5101  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  5102  000AAC  6E61               	movwf	vfpfcnvrt@ll+2,c
  5103  000AAE  6E62               	movwf	vfpfcnvrt@ll+3,c
  5104  000AB0  6E63               	movwf	vfpfcnvrt@ll+4,c
  5105  000AB2  6E64               	movwf	vfpfcnvrt@ll+5,c
  5106  000AB4  6E65               	movwf	vfpfcnvrt@ll+6,c
  5107  000AB6  6E66               	movwf	vfpfcnvrt@ll+7,c
  5108  000AB8                     l4102:
  5109  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  5110                           
  5111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  5112  000ABA  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5113  000ABE  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5114  000AC2  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5115  000AC6  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5116  000ACA  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5117  000ACE  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5118  000AD2  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5119  000AD6  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5120  000ADA  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5121  000ADE  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5122  000AE2  EC9E  F00F         	call	_dtoa	;wreg free
  5123  000AE6  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5124  000AEA  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5125  000AEE  EF38  F00C         	goto	l553
  5126  000AF2                     l4106:
  5127  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  5128                           
  5129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  5130  000AF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5131  000AF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5132  000AFC  CFDE F001          	movff	postinc2,strncmp@_l
  5133  000B00  CFDD F002          	movff	postdec2,strncmp@_l+1
  5134  000B04  0E8C               	movlw	low (STR_15+1)
  5135  000B06  6E03               	movwf	strncmp@_r,c
  5136  000B08  0E06               	movlw	high (STR_15+1)
  5137  000B0A  6E04               	movwf	strncmp@_r+1,c
  5138  000B0C  0E00               	movlw	0
  5139  000B0E  6E06               	movwf	strncmp@n+1,c
  5140  000B10  0E02               	movlw	2
  5141  000B12  6E05               	movwf	strncmp@n,c
  5142  000B14  ECA2  F01A         	call	_strncmp	;wreg free
  5143  000B18  5001               	movf	?_strncmp,w,c
  5144  000B1A  1002               	iorwf	?_strncmp+1,w,c
  5145  000B1C  B4D8               	btfsc	status,2,c
  5146  000B1E  D016               	goto	u4090
  5147  000B20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5148  000B24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5149  000B28  CFDE F001          	movff	postinc2,strncmp@_l
  5150  000B2C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5151  000B30  0E90               	movlw	low (STR_19+1)
  5152  000B32  6E03               	movwf	strncmp@_r,c
  5153  000B34  0E06               	movlw	high (STR_19+1)
  5154  000B36  6E04               	movwf	strncmp@_r+1,c
  5155  000B38  0E00               	movlw	0
  5156  000B3A  6E06               	movwf	strncmp@n+1,c
  5157  000B3C  0E02               	movlw	2
  5158  000B3E  6E05               	movwf	strncmp@n,c
  5159  000B40  ECA2  F01A         	call	_strncmp	;wreg free
  5160  000B44  5001               	movf	?_strncmp,w,c
  5161  000B46  1002               	iorwf	?_strncmp+1,w,c
  5162  000B48  A4D8               	btfss	status,2,c
  5163  000B4A  D008               	goto	l4116
  5164  000B4C                     u4090:
  5165  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  5166                           
  5167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  5168  000B4E  0E02               	movlw	2
  5169  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5170  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5171  000B58  26DE               	addwf	postinc2,f,c
  5172  000B5A  D023               	goto	L18
  5173  000B5C                     l4116:
  5174  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  5175                           
  5176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5177  000B5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5178  000B62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5179  000B66  CFDE FFF6          	movff	postinc2,tblptrl
  5180  000B6A  CFDD FFF7          	movff	postdec2,tblptrh
  5181  000B6E                     	if	0	;tblptru may be non-zero
  5182  000B6E                     	endif
  5183  000B6E                     	if	0	;tblptru may be non-zero
  5184  000B6E                     	endif
  5185  000B6E  0008               	tblrd		*
  5186  000B70  FFFF               	dw	65535	; errata NOP
  5187  000B72  50F5               	movf	tablat,w,c
  5188  000B74  0A64               	xorlw	100
  5189  000B76  B4D8               	btfsc	status,2,c
  5190  000B78  D00E               	goto	u4110
  5191  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5192  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5193  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  5194  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  5195  000B8A                     	if	0	;tblptru may be non-zero
  5196  000B8A                     	endif
  5197  000B8A                     	if	0	;tblptru may be non-zero
  5198  000B8A                     	endif
  5199  000B8A  0008               	tblrd		*
  5200  000B8C  FFFF               	dw	65535	; errata NOP
  5201  000B8E  50F5               	movf	tablat,w,c
  5202  000B90  0A69               	xorlw	105
  5203  000B92  A4D8               	btfss	status,2,c
  5204  000B94  D021               	goto	l4126
  5205  000B96                     u4110:
  5206  000B96  FFFF               	dw	65535	; assembler added errata NOP
  5207                           
  5208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5209  000B98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5210  000B9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5211  000BA0  2ADE               	incf	postinc2,f,c
  5212  000BA2                     L18:
  5213  000BA2  FFFF               	dw	65535	; assembler added errata NOP
  5214  000BA4  0E00               	movlw	0
  5215  000BA6  22DD               	addwfc	postdec2,f,c
  5216                           
  5217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5218  000BA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5219  000BAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5220  000BB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5221  000BB4  0E02               	movlw	2
  5222  000BB6  26DE               	addwf	postinc2,f,c
  5223  000BB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5224  000BBC  0E00               	movlw	0
  5225  000BBE  22DD               	addwfc	postdec2,f,c
  5226  000BC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5227  000BC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5228  000BC8  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  5229  000BCC  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  5230  000BD0  0E00               	movlw	0
  5231  000BD2  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  5232  000BD4  0EFF               	movlw	-1
  5233  000BD6  D769               	goto	L8
  5234  000BD8                     l4126:
  5235  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  5236                           
  5237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5238  000BDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5239  000BDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5240  000BE2  CFDE F001          	movff	postinc2,strncmp@_l
  5241  000BE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5242  000BEA  0EAD               	movlw	low STR_33
  5243  000BEC  6E03               	movwf	strncmp@_r,c
  5244  000BEE  0E06               	movlw	high STR_33
  5245  000BF0  6E04               	movwf	strncmp@_r+1,c
  5246  000BF2  0E00               	movlw	0
  5247  000BF4  6E06               	movwf	strncmp@n+1,c
  5248  000BF6  0E02               	movlw	2
  5249  000BF8  6E05               	movwf	strncmp@n,c
  5250  000BFA  ECA2  F01A         	call	_strncmp	;wreg free
  5251  000BFE  5001               	movf	?_strncmp,w,c
  5252  000C00  1002               	iorwf	?_strncmp+1,w,c
  5253  000C02  B4D8               	btfsc	status,2,c
  5254  000C04  D016               	goto	u4130
  5255  000C06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5256  000C0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5257  000C0E  CFDE F001          	movff	postinc2,strncmp@_l
  5258  000C12  CFDD F002          	movff	postdec2,strncmp@_l+1
  5259  000C16  0EB3               	movlw	low STR_37
  5260  000C18  6E03               	movwf	strncmp@_r,c
  5261  000C1A  0E06               	movlw	high STR_37
  5262  000C1C  6E04               	movwf	strncmp@_r+1,c
  5263  000C1E  0E00               	movlw	0
  5264  000C20  6E06               	movwf	strncmp@n+1,c
  5265  000C22  0E02               	movlw	2
  5266  000C24  6E05               	movwf	strncmp@n,c
  5267  000C26  ECA2  F01A         	call	_strncmp	;wreg free
  5268  000C2A  5001               	movf	?_strncmp,w,c
  5269  000C2C  1002               	iorwf	?_strncmp+1,w,c
  5270  000C2E  A4D8               	btfss	status,2,c
  5271  000C30  D043               	goto	l4136
  5272  000C32                     u4130:
  5273  000C32  FFFF               	dw	65535	; assembler added errata NOP
  5274                           
  5275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5276  000C34  0E02               	movlw	2
  5277  000C36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5278  000C3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5279  000C3E  26DE               	addwf	postinc2,f,c
  5280  000C40  0E00               	movlw	0
  5281  000C42  22DD               	addwfc	postdec2,f,c
  5282                           
  5283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5284  000C44  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5285  000C48  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5286  000C4C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5287  000C50  0E04               	movlw	4
  5288  000C52  26DE               	addwf	postinc2,f,c
  5289  000C54  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5290  000C58  0E00               	movlw	0
  5291  000C5A  22DD               	addwfc	postdec2,f,c
  5292  000C5C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5293  000C60  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5294  000C64  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5295  000C68  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5296  000C6C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5297  000C70  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5298  000C74  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5299  000C78  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5300  000C7C  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5301  000C80  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5302  000C84  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  5303  000C86  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  5304  000C88  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  5305  000C8A  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5306  000C8E  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5307  000C92  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5308  000C96  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5309  000C9A  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5310  000C9E  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5311  000CA2  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5312  000CA6  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5313  000CAA  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5314  000CAE  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5315  000CB2  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5316  000CB6  D700               	goto	l4102
  5317  000CB8                     l4136:
  5318  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  5319                           
  5320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  5321  000CBA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5322  000CBE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5323  000CC2  CFDE F001          	movff	postinc2,strncmp@_l
  5324  000CC6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5325  000CCA  0EB0               	movlw	low STR_42
  5326  000CCC  6E03               	movwf	strncmp@_r,c
  5327  000CCE  0E06               	movlw	high STR_42
  5328  000CD0  6E04               	movwf	strncmp@_r+1,c
  5329  000CD2  0E00               	movlw	0
  5330  000CD4  6E06               	movwf	strncmp@n+1,c
  5331  000CD6  0E02               	movlw	2
  5332  000CD8  6E05               	movwf	strncmp@n,c
  5333  000CDA  ECA2  F01A         	call	_strncmp	;wreg free
  5334  000CDE  5001               	movf	?_strncmp,w,c
  5335  000CE0  1002               	iorwf	?_strncmp+1,w,c
  5336  000CE2  B4D8               	btfsc	status,2,c
  5337  000CE4  D016               	goto	u4150
  5338  000CE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5339  000CEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5340  000CEE  CFDE F001          	movff	postinc2,strncmp@_l
  5341  000CF2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5342  000CF6  0EB6               	movlw	low STR_46
  5343  000CF8  6E03               	movwf	strncmp@_r,c
  5344  000CFA  0E06               	movlw	high STR_46
  5345  000CFC  6E04               	movwf	strncmp@_r+1,c
  5346  000CFE  0E00               	movlw	0
  5347  000D00  6E06               	movwf	strncmp@n+1,c
  5348  000D02  0E02               	movlw	2
  5349  000D04  6E05               	movwf	strncmp@n,c
  5350  000D06  ECA2  F01A         	call	_strncmp	;wreg free
  5351  000D0A  5001               	movf	?_strncmp,w,c
  5352  000D0C  1002               	iorwf	?_strncmp+1,w,c
  5353  000D0E  A4D8               	btfss	status,2,c
  5354  000D10  D028               	goto	l4146
  5355  000D12                     u4150:
  5356  000D12  FFFF               	dw	65535	; assembler added errata NOP
  5357                           
  5358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  5359  000D14  0E02               	movlw	2
  5360  000D16  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5361  000D1A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5362  000D1E  26DE               	addwf	postinc2,f,c
  5363  000D20  0E00               	movlw	0
  5364  000D22  22DD               	addwfc	postdec2,f,c
  5365                           
  5366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5367  000D24  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5368  000D28  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5369  000D2C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5370  000D30  0E02               	movlw	2
  5371  000D32  26DE               	addwf	postinc2,f,c
  5372  000D34  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5373  000D38  0E00               	movlw	0
  5374  000D3A  22DD               	addwfc	postdec2,f,c
  5375  000D3C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5376  000D40  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5377  000D44  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5378  000D48  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5379  000D4C  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5380  000D50  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5381  000D54  6A61               	clrf	vfpfcnvrt@ll+2,c
  5382  000D56  6A62               	clrf	vfpfcnvrt@ll+3,c
  5383  000D58  6A63               	clrf	vfpfcnvrt@ll+4,c
  5384  000D5A  6A64               	clrf	vfpfcnvrt@ll+5,c
  5385  000D5C  6A65               	clrf	vfpfcnvrt@ll+6,c
  5386  000D5E  6A66               	clrf	vfpfcnvrt@ll+7,c
  5387  000D60  D6AB               	goto	l4102
  5388  000D62                     l4146:
  5389  000D62  FFFF               	dw	65535	; assembler added errata NOP
  5390                           
  5391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5392  000D64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5393  000D68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5394  000D6C  CFDE F001          	movff	postinc2,strncmp@_l
  5395  000D70  CFDD F002          	movff	postdec2,strncmp@_l+1
  5396  000D74  0E97               	movlw	low STR_51
  5397  000D76  6E03               	movwf	strncmp@_r,c
  5398  000D78  0E06               	movlw	high STR_51
  5399  000D7A  6E04               	movwf	strncmp@_r+1,c
  5400  000D7C  0E00               	movlw	0
  5401  000D7E  6E06               	movwf	strncmp@n+1,c
  5402  000D80  0E03               	movlw	3
  5403  000D82  6E05               	movwf	strncmp@n,c
  5404  000D84  ECA2  F01A         	call	_strncmp	;wreg free
  5405  000D88  5001               	movf	?_strncmp,w,c
  5406  000D8A  1002               	iorwf	?_strncmp+1,w,c
  5407  000D8C  A4D8               	btfss	status,2,c
  5408  000D8E  D041               	goto	l4154
  5409                           
  5410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  5411  000D90  0E03               	movlw	3
  5412  000D92  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5413  000D96  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5414  000D9A  26DE               	addwf	postinc2,f,c
  5415  000D9C  0E00               	movlw	0
  5416  000D9E  22DD               	addwfc	postdec2,f,c
  5417                           
  5418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5419  000DA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5420  000DA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5421  000DA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5422  000DAC  0E02               	movlw	2
  5423  000DAE  26DE               	addwf	postinc2,f,c
  5424  000DB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5425  000DB4  0E00               	movlw	0
  5426  000DB6  22DD               	addwfc	postdec2,f,c
  5427  000DB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5428  000DBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5429  000DC0  50DF               	movf	indf2,w,c
  5430  000DC2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5431  000DC4  504B               	movf	??_vfpfcnvrt+2,w,c
  5432  000DC6  6E6A               	movwf	vfpfcnvrt@llu,c
  5433  000DC8  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5434  000DCA                     L9:
  5435  000DCA  FFFF               	dw	65535	; assembler added errata NOP
  5436  000DCC  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5437  000DCE  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5438  000DD0                     L10:
  5439  000DD0  FFFF               	dw	65535	; assembler added errata NOP
  5440  000DD2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5441  000DD4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5442  000DD6  6A70               	clrf	vfpfcnvrt@llu+6,c
  5443  000DD8  6A71               	clrf	vfpfcnvrt@llu+7,c
  5444                           
  5445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  5446  000DDA  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5447  000DDE  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5448  000DE2  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5449  000DE6  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5450  000DEA  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5451  000DEE  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5452  000DF2  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5453  000DF6  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5454  000DFA  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5455  000DFE  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5456  000E02  ECB3  F014         	call	_otoa	;wreg free
  5457  000E06  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5458  000E0A  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5459  000E0E  EF38  F00C         	goto	l553
  5460  000E12                     l4154:
  5461  000E12  FFFF               	dw	65535	; assembler added errata NOP
  5462                           
  5463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5464  000E14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5465  000E18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5466  000E1C  CFDE F001          	movff	postinc2,strncmp@_l
  5467  000E20  CFDD F002          	movff	postdec2,strncmp@_l+1
  5468  000E24  0E98               	movlw	low (STR_51+1)
  5469  000E26  6E03               	movwf	strncmp@_r,c
  5470  000E28  0E06               	movlw	high (STR_51+1)
  5471  000E2A  6E04               	movwf	strncmp@_r+1,c
  5472  000E2C  0E00               	movlw	0
  5473  000E2E  6E06               	movwf	strncmp@n+1,c
  5474  000E30  0E02               	movlw	2
  5475  000E32  6E05               	movwf	strncmp@n,c
  5476  000E34  ECA2  F01A         	call	_strncmp	;wreg free
  5477  000E38  5001               	movf	?_strncmp,w,c
  5478  000E3A  1002               	iorwf	?_strncmp+1,w,c
  5479  000E3C  B4D8               	btfsc	status,2,c
  5480  000E3E  D06B               	goto	u4200
  5481                           
  5482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  5483                           
  5484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5485                           
  5486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  5487  000E40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5488  000E44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5489  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  5490  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  5491  000E50                     	if	0	;tblptru may be non-zero
  5492  000E50                     	endif
  5493  000E50                     	if	0	;tblptru may be non-zero
  5494  000E50                     	endif
  5495  000E50  0008               	tblrd		*
  5496  000E52  FFFF               	dw	65535	; errata NOP
  5497  000E54  50F5               	movf	tablat,w,c
  5498  000E56  0A6F               	xorlw	111
  5499  000E58  A4D8               	btfss	status,2,c
  5500  000E5A  D006               	goto	l4170
  5501                           
  5502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  5503  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5504  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5505  000E64  2ADE               	incf	postinc2,f,c
  5506  000E66  D05E               	goto	L23
  5507  000E68                     l4170:
  5508  000E68  FFFF               	dw	65535	; assembler added errata NOP
  5509                           
  5510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  5511  000E6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5512  000E6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5513  000E72  CFDE F001          	movff	postinc2,strncmp@_l
  5514  000E76  CFDD F002          	movff	postdec2,strncmp@_l+1
  5515  000E7A  0EBF               	movlw	low STR_61
  5516  000E7C  6E03               	movwf	strncmp@_r,c
  5517  000E7E  0E06               	movlw	high STR_61
  5518  000E80  6E04               	movwf	strncmp@_r+1,c
  5519  000E82  0E00               	movlw	0
  5520  000E84  6E06               	movwf	strncmp@n+1,c
  5521  000E86  0E02               	movlw	2
  5522  000E88  6E05               	movwf	strncmp@n,c
  5523  000E8A  ECA2  F01A         	call	_strncmp	;wreg free
  5524  000E8E  5001               	movf	?_strncmp,w,c
  5525  000E90  1002               	iorwf	?_strncmp+1,w,c
  5526  000E92  A4D8               	btfss	status,2,c
  5527  000E94  D029               	goto	l4178
  5528                           
  5529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  5530  000E96  0E02               	movlw	2
  5531  000E98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5532  000E9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5533  000EA0  26DE               	addwf	postinc2,f,c
  5534  000EA2  0E00               	movlw	0
  5535  000EA4  22DD               	addwfc	postdec2,f,c
  5536                           
  5537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  5538  000EA6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5539  000EAA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5540  000EAE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5541  000EB2  0E04               	movlw	4
  5542  000EB4  26DE               	addwf	postinc2,f,c
  5543  000EB6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5544  000EBA  0E00               	movlw	0
  5545  000EBC  22DD               	addwfc	postdec2,f,c
  5546  000EBE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5547  000EC2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5548  000EC6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5549  000ECA  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5550  000ECE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5551  000ED2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5552  000ED6  504B               	movf	??_vfpfcnvrt+2,w,c
  5553  000ED8  6E6A               	movwf	vfpfcnvrt@llu,c
  5554  000EDA  504C               	movf	??_vfpfcnvrt+3,w,c
  5555  000EDC  6E6B               	movwf	vfpfcnvrt@llu+1,c
  5556  000EDE  504D               	movf	??_vfpfcnvrt+4,w,c
  5557  000EE0  6E6C               	movwf	vfpfcnvrt@llu+2,c
  5558  000EE2  504E               	movf	??_vfpfcnvrt+5,w,c
  5559  000EE4  6E6D               	movwf	vfpfcnvrt@llu+3,c
  5560  000EE6  D774               	goto	L10
  5561  000EE8                     l4178:
  5562  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  5563                           
  5564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5565  000EEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5566  000EEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5567  000EF2  CFDE F001          	movff	postinc2,strncmp@_l
  5568  000EF6  CFDD F002          	movff	postdec2,strncmp@_l+1
  5569  000EFA  0EC2               	movlw	low STR_66
  5570  000EFC  6E03               	movwf	strncmp@_r,c
  5571  000EFE  0E06               	movlw	high STR_66
  5572  000F00  6E04               	movwf	strncmp@_r+1,c
  5573  000F02  0E00               	movlw	0
  5574  000F04  6E06               	movwf	strncmp@n+1,c
  5575  000F06  0E02               	movlw	2
  5576  000F08  6E05               	movwf	strncmp@n,c
  5577  000F0A  ECA2  F01A         	call	_strncmp	;wreg free
  5578  000F0E  5001               	movf	?_strncmp,w,c
  5579  000F10  1002               	iorwf	?_strncmp+1,w,c
  5580  000F12  A4D8               	btfss	status,2,c
  5581  000F14  D023               	goto	l4186
  5582  000F16                     u4200:
  5583  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5584                           
  5585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  5586  000F18  0E02               	movlw	2
  5587  000F1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  000F1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  000F22  26DE               	addwf	postinc2,f,c
  5590  000F24                     L23:
  5591  000F24  FFFF               	dw	65535	; assembler added errata NOP
  5592  000F26  0E00               	movlw	0
  5593  000F28  22DD               	addwfc	postdec2,f,c
  5594                           
  5595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5596  000F2A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5597  000F2E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5598  000F32  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5599  000F36  0E02               	movlw	2
  5600  000F38  26DE               	addwf	postinc2,f,c
  5601  000F3A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5602  000F3E  0E00               	movlw	0
  5603  000F40  22DD               	addwfc	postdec2,f,c
  5604  000F42  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5605  000F46  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5606  000F4A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5607  000F4E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5608  000F52  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5609  000F56  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5610  000F5A  D737               	goto	L9
  5611  000F5C                     l4186:
  5612  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  5613                           
  5614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5615  000F5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5616  000F62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5617  000F66  CFDE F001          	movff	postinc2,strncmp@_l
  5618  000F6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5619  000F6E  0E93               	movlw	low STR_71
  5620  000F70  6E03               	movwf	strncmp@_r,c
  5621  000F72  0E06               	movlw	high STR_71
  5622  000F74  6E04               	movwf	strncmp@_r+1,c
  5623  000F76  0E00               	movlw	0
  5624  000F78  6E06               	movwf	strncmp@n+1,c
  5625  000F7A  0E03               	movlw	3
  5626  000F7C  6E05               	movwf	strncmp@n,c
  5627  000F7E  ECA2  F01A         	call	_strncmp	;wreg free
  5628  000F82  5001               	movf	?_strncmp,w,c
  5629  000F84  1002               	iorwf	?_strncmp+1,w,c
  5630  000F86  A4D8               	btfss	status,2,c
  5631  000F88  D028               	goto	l4196
  5632                           
  5633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  5634  000F8A  0E03               	movlw	3
  5635  000F8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5636  000F90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5637  000F94  26DE               	addwf	postinc2,f,c
  5638  000F96  0E00               	movlw	0
  5639  000F98  22DD               	addwfc	postdec2,f,c
  5640                           
  5641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5642  000F9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5643  000F9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5644  000FA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5645  000FA6  0E02               	movlw	2
  5646  000FA8  26DE               	addwf	postinc2,f,c
  5647  000FAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5648  000FAE  0E00               	movlw	0
  5649  000FB0  22DD               	addwfc	postdec2,f,c
  5650  000FB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5651  000FB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5652  000FBA  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5653  000FBE  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5654                           
  5655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  5656  000FC2  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5657  000FC6  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5658  000FCA  C0CA  FFDF         	movff	_nout,indf2
  5659  000FCE                     l4192:
  5660  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  5661                           
  5662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  5663  000FD0  0E00               	movlw	0
  5664  000FD2  6E44               	movwf	?_vfpfcnvrt+1,c
  5665  000FD4  0E00               	movlw	0
  5666  000FD6  EF0F  F00C         	goto	L11
  5667  000FDA                     l4196:
  5668  000FDA  FFFF               	dw	65535	; assembler added errata NOP
  5669                           
  5670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5671  000FDC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5672  000FE0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5673  000FE4  CFDE F001          	movff	postinc2,strncmp@_l
  5674  000FE8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5675  000FEC  0E94               	movlw	low (STR_71+1)
  5676  000FEE  6E03               	movwf	strncmp@_r,c
  5677  000FF0  0E06               	movlw	high (STR_71+1)
  5678  000FF2  6E04               	movwf	strncmp@_r+1,c
  5679  000FF4  0E00               	movlw	0
  5680  000FF6  6E06               	movwf	strncmp@n+1,c
  5681  000FF8  0E02               	movlw	2
  5682  000FFA  6E05               	movwf	strncmp@n,c
  5683  000FFC  ECA2  F01A         	call	_strncmp	;wreg free
  5684  001000  5001               	movf	?_strncmp,w,c
  5685  001002  1002               	iorwf	?_strncmp+1,w,c
  5686  001004  A4D8               	btfss	status,2,c
  5687  001006  D00B               	goto	l4206
  5688  001008  D07F               	goto	u4250
  5689  00100A                     l4200:
  5690  00100A  FFFF               	dw	65535	; assembler added errata NOP
  5691                           
  5692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  5693  00100C  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5694  001010  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5695  001014  C0CA  FFDE         	movff	_nout,postinc2
  5696  001018  C0CB  FFDD         	movff	_nout+1,postdec2
  5697  00101C  D7D8               	goto	l4192
  5698  00101E                     l4206:
  5699  00101E  FFFF               	dw	65535	; assembler added errata NOP
  5700                           
  5701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  5702  001020  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5703  001024  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5704  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5705  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5706  001030                     	if	0	;tblptru may be non-zero
  5707  001030                     	endif
  5708  001030                     	if	0	;tblptru may be non-zero
  5709  001030                     	endif
  5710  001030  0008               	tblrd		*
  5711  001032  FFFF               	dw	65535	; errata NOP
  5712  001034  50F5               	movf	tablat,w,c
  5713  001036  0A6E               	xorlw	110
  5714  001038  A4D8               	btfss	status,2,c
  5715  00103A  D006               	goto	l4216
  5716                           
  5717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  5718  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5719  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5720  001044  2ADE               	incf	postinc2,f,c
  5721  001046  D067               	goto	L20
  5722  001048                     l4216:
  5723  001048  FFFF               	dw	65535	; assembler added errata NOP
  5724                           
  5725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  5726  00104A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5727  00104E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5728  001052  CFDE F001          	movff	postinc2,strncmp@_l
  5729  001056  CFDD F002          	movff	postdec2,strncmp@_l+1
  5730  00105A  0EB9               	movlw	low STR_81
  5731  00105C  6E03               	movwf	strncmp@_r,c
  5732  00105E  0E06               	movlw	high STR_81
  5733  001060  6E04               	movwf	strncmp@_r+1,c
  5734  001062  0E00               	movlw	0
  5735  001064  6E06               	movwf	strncmp@n+1,c
  5736  001066  0E02               	movlw	2
  5737  001068  6E05               	movwf	strncmp@n,c
  5738  00106A  ECA2  F01A         	call	_strncmp	;wreg free
  5739  00106E  5001               	movf	?_strncmp,w,c
  5740  001070  1002               	iorwf	?_strncmp+1,w,c
  5741  001072  A4D8               	btfss	status,2,c
  5742  001074  D032               	goto	l4226
  5743                           
  5744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  5745  001076  0E02               	movlw	2
  5746  001078  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5747  00107C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5748  001080  26DE               	addwf	postinc2,f,c
  5749  001082  0E00               	movlw	0
  5750  001084  22DD               	addwfc	postdec2,f,c
  5751                           
  5752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  5753  001086  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5754  00108A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5755  00108E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5756  001092  0E02               	movlw	2
  5757  001094  26DE               	addwf	postinc2,f,c
  5758  001096  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5759  00109A  0E00               	movlw	0
  5760  00109C  22DD               	addwfc	postdec2,f,c
  5761  00109E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5762  0010A2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5763  0010A6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5764  0010AA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5765                           
  5766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  5767  0010AE  C0CA  F049         	movff	_nout,??_vfpfcnvrt
  5768  0010B2  C0CB  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  5769  0010B6  0E00               	movlw	0
  5770  0010B8  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  5771  0010BA  0EFF               	movlw	255
  5772  0010BC  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5773  0010BE  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  5774  0010C0  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5775  0010C4  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5776  0010C8  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  5777  0010CC  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  5778  0010D0  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  5779  0010D4  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  5780  0010D8  D77A               	goto	l4192
  5781  0010DA                     l4226:
  5782  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  5783                           
  5784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5785  0010DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5786  0010E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5787  0010E4  CFDE F001          	movff	postinc2,strncmp@_l
  5788  0010E8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5789  0010EC  0EBC               	movlw	low STR_86
  5790  0010EE  6E03               	movwf	strncmp@_r,c
  5791  0010F0  0E06               	movlw	high STR_86
  5792  0010F2  6E04               	movwf	strncmp@_r+1,c
  5793  0010F4  0E00               	movlw	0
  5794  0010F6  6E06               	movwf	strncmp@n+1,c
  5795  0010F8  0E02               	movlw	2
  5796  0010FA  6E05               	movwf	strncmp@n,c
  5797  0010FC  ECA2  F01A         	call	_strncmp	;wreg free
  5798  001100  5001               	movf	?_strncmp,w,c
  5799  001102  1002               	iorwf	?_strncmp+1,w,c
  5800  001104  A4D8               	btfss	status,2,c
  5801  001106  D01F               	goto	l4236
  5802  001108                     u4250:
  5803  001108  FFFF               	dw	65535	; assembler added errata NOP
  5804                           
  5805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  5806  00110A  0E02               	movlw	2
  5807  00110C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5808  001110  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5809  001114  26DE               	addwf	postinc2,f,c
  5810  001116                     L20:
  5811  001116  FFFF               	dw	65535	; assembler added errata NOP
  5812  001118  0E00               	movlw	0
  5813  00111A  22DD               	addwfc	postdec2,f,c
  5814                           
  5815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5816  00111C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5817  001120  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5818  001124  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5819  001128  0E02               	movlw	2
  5820  00112A  26DE               	addwf	postinc2,f,c
  5821  00112C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5822  001130  0E00               	movlw	0
  5823  001132  22DD               	addwfc	postdec2,f,c
  5824  001134  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5825  001138  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5826  00113C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5827  001140  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5828  001144  D762               	goto	l4200
  5829  001146                     l4236:
  5830  001146  FFFF               	dw	65535	; assembler added errata NOP
  5831                           
  5832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  5833  001148  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5834  00114C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5835  001150  CFDE FFF6          	movff	postinc2,tblptrl
  5836  001154  CFDD FFF7          	movff	postdec2,tblptrh
  5837  001158                     	if	0	;tblptru may be non-zero
  5838  001158                     	endif
  5839  001158                     	if	0	;tblptru may be non-zero
  5840  001158                     	endif
  5841  001158  0008               	tblrd		*
  5842  00115A  FFFF               	dw	65535	; errata NOP
  5843  00115C  50F5               	movf	tablat,w,c
  5844  00115E  0A70               	xorlw	112
  5845  001160  A4D8               	btfss	status,2,c
  5846  001162  D03E               	goto	l4244
  5847                           
  5848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  5849  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5850  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5851  00116C  2ADE               	incf	postinc2,f,c
  5852  00116E  0E00               	movlw	0
  5853  001170  22DD               	addwfc	postdec2,f,c
  5854                           
  5855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5856  001172  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5857  001176  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5858  00117A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5859  00117E  0E02               	movlw	2
  5860  001180  26DE               	addwf	postinc2,f,c
  5861  001182  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5862  001186  0E00               	movlw	0
  5863  001188  22DD               	addwfc	postdec2,f,c
  5864  00118A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5865  00118E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5866  001192  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5867  001196  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5868  00119A  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5869  00119E  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5870  0011A2  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5871  0011A4  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5872  0011A6  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5873  0011A8  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5874  0011AA  6A70               	clrf	vfpfcnvrt@llu+6,c
  5875  0011AC  6A71               	clrf	vfpfcnvrt@llu+7,c
  5876                           
  5877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  5878  0011AE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5879  0011B2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5880  0011B6  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5881  0011BA  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5882  0011BE  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5883  0011C2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5884  0011C6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5885  0011CA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5886  0011CE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5887  0011D2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5888  0011D6  0E78               	movlw	120
  5889  0011D8  6E26               	movwf	xtoa@x,c
  5890  0011DA  ECD3  F010         	call	_xtoa	;wreg free
  5891  0011DE  D1B4               	goto	L13
  5892  0011E0                     l4244:
  5893  0011E0  FFFF               	dw	65535	; assembler added errata NOP
  5894                           
  5895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5896  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5897  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5898  0011EA  CFDE FFF6          	movff	postinc2,tblptrl
  5899  0011EE  CFDD FFF7          	movff	postdec2,tblptrh
  5900  0011F2                     	if	0	;tblptru may be non-zero
  5901  0011F2                     	endif
  5902  0011F2                     	if	0	;tblptru may be non-zero
  5903  0011F2                     	endif
  5904  0011F2  0008               	tblrd		*
  5905  0011F4  FFFF               	dw	65535	; errata NOP
  5906  0011F6  50F5               	movf	tablat,w,c
  5907  0011F8  0A73               	xorlw	115
  5908  0011FA  A4D8               	btfss	status,2,c
  5909  0011FC  D02A               	goto	l4252
  5910                           
  5911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5912  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5913  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5914  001206  2ADE               	incf	postinc2,f,c
  5915  001208  0E00               	movlw	0
  5916  00120A  22DD               	addwfc	postdec2,f,c
  5917                           
  5918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5919  00120C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5920  001210  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5921  001214  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5922  001218  0E02               	movlw	2
  5923  00121A  26DE               	addwf	postinc2,f,c
  5924  00121C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5925  001220  0E00               	movlw	0
  5926  001222  22DD               	addwfc	postdec2,f,c
  5927  001224  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5928  001228  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5929  00122C  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  5930  001230  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  5931                           
  5932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5933  001234  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5934  001238  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5935  00123C  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5936  001240  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5937  001244  EC8F  F017         	call	_stoa	;wreg free
  5938  001248  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5939  00124C  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5940  001250  D30F               	goto	l553
  5941  001252                     l4252:
  5942  001252  FFFF               	dw	65535	; assembler added errata NOP
  5943                           
  5944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5945  001254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5946  001258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5947  00125C  CFDE F001          	movff	postinc2,strncmp@_l
  5948  001260  CFDD F002          	movff	postdec2,strncmp@_l+1
  5949  001264  0E9B               	movlw	low STR_91
  5950  001266  6E03               	movwf	strncmp@_r,c
  5951  001268  0E06               	movlw	high STR_91
  5952  00126A  6E04               	movwf	strncmp@_r+1,c
  5953  00126C  0E00               	movlw	0
  5954  00126E  6E06               	movwf	strncmp@n+1,c
  5955  001270  0E03               	movlw	3
  5956  001272  6E05               	movwf	strncmp@n,c
  5957  001274  ECA2  F01A         	call	_strncmp	;wreg free
  5958  001278  5001               	movf	?_strncmp,w,c
  5959  00127A  1002               	iorwf	?_strncmp+1,w,c
  5960  00127C  A4D8               	btfss	status,2,c
  5961  00127E  D040               	goto	l4260
  5962                           
  5963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  5964  001280  0E03               	movlw	3
  5965  001282  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5966  001286  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5967  00128A  26DE               	addwf	postinc2,f,c
  5968  00128C  0E00               	movlw	0
  5969  00128E  22DD               	addwfc	postdec2,f,c
  5970                           
  5971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5972  001290  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5973  001294  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5974  001298  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5975  00129C  0E02               	movlw	2
  5976  00129E  26DE               	addwf	postinc2,f,c
  5977  0012A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5978  0012A4  0E00               	movlw	0
  5979  0012A6  22DD               	addwfc	postdec2,f,c
  5980  0012A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5981  0012AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5982  0012B0  50DF               	movf	indf2,w,c
  5983  0012B2  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5984  0012B4  504B               	movf	??_vfpfcnvrt+2,w,c
  5985  0012B6  6E6A               	movwf	vfpfcnvrt@llu,c
  5986  0012B8  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5987  0012BA                     L14:
  5988  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  5989  0012BC  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5990  0012BE  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5991  0012C0                     L15:
  5992  0012C0  FFFF               	dw	65535	; assembler added errata NOP
  5993  0012C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5994  0012C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5995  0012C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  5996  0012C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  5997                           
  5998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  5999  0012CA  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  6000  0012CE  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6001  0012D2  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  6002  0012D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6003  0012DA  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6004  0012DE  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6005  0012E2  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6006  0012E6  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6007  0012EA  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6008  0012EE  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6009  0012F2  ECD2  F013         	call	_utoa	;wreg free
  6010  0012F6  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  6011  0012FA  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  6012  0012FE  D2B8               	goto	l553
  6013  001300                     l4260:
  6014  001300  FFFF               	dw	65535	; assembler added errata NOP
  6015                           
  6016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6017  001302  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6018  001306  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6019  00130A  CFDE F001          	movff	postinc2,strncmp@_l
  6020  00130E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6021  001312  0E9C               	movlw	low (STR_91+1)
  6022  001314  6E03               	movwf	strncmp@_r,c
  6023  001316  0E06               	movlw	high (STR_91+1)
  6024  001318  6E04               	movwf	strncmp@_r+1,c
  6025  00131A  0E00               	movlw	0
  6026  00131C  6E06               	movwf	strncmp@n+1,c
  6027  00131E  0E02               	movlw	2
  6028  001320  6E05               	movwf	strncmp@n,c
  6029  001322  ECA2  F01A         	call	_strncmp	;wreg free
  6030  001326  5001               	movf	?_strncmp,w,c
  6031  001328  1002               	iorwf	?_strncmp+1,w,c
  6032  00132A  B4D8               	btfsc	status,2,c
  6033  00132C  D06B               	goto	u4320
  6034                           
  6035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  6036                           
  6037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6038                           
  6039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  6040  00132E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6041  001332  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6042  001336  CFDE FFF6          	movff	postinc2,tblptrl
  6043  00133A  CFDD FFF7          	movff	postdec2,tblptrh
  6044  00133E                     	if	0	;tblptru may be non-zero
  6045  00133E                     	endif
  6046  00133E                     	if	0	;tblptru may be non-zero
  6047  00133E                     	endif
  6048  00133E  0008               	tblrd		*
  6049  001340  FFFF               	dw	65535	; errata NOP
  6050  001342  50F5               	movf	tablat,w,c
  6051  001344  0A75               	xorlw	117
  6052  001346  A4D8               	btfss	status,2,c
  6053  001348  D006               	goto	l4276
  6054                           
  6055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  6056  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6057  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6058  001352  2ADE               	incf	postinc2,f,c
  6059  001354  D05E               	goto	L24
  6060  001356                     l4276:
  6061  001356  FFFF               	dw	65535	; assembler added errata NOP
  6062                           
  6063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6064  001358  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6065  00135C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6066  001360  CFDE F001          	movff	postinc2,strncmp@_l
  6067  001364  CFDD F002          	movff	postdec2,strncmp@_l+1
  6068  001368  0EA4               	movlw	low (STR_1+1)
  6069  00136A  6E03               	movwf	strncmp@_r,c
  6070  00136C  0E06               	movlw	high (STR_1+1)
  6071  00136E  6E04               	movwf	strncmp@_r+1,c
  6072  001370  0E00               	movlw	0
  6073  001372  6E06               	movwf	strncmp@n+1,c
  6074  001374  0E02               	movlw	2
  6075  001376  6E05               	movwf	strncmp@n,c
  6076  001378  ECA2  F01A         	call	_strncmp	;wreg free
  6077  00137C  5001               	movf	?_strncmp,w,c
  6078  00137E  1002               	iorwf	?_strncmp+1,w,c
  6079  001380  A4D8               	btfss	status,2,c
  6080  001382  D029               	goto	l4284
  6081                           
  6082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  6083  001384  0E02               	movlw	2
  6084  001386  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6085  00138A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6086  00138E  26DE               	addwf	postinc2,f,c
  6087  001390  0E00               	movlw	0
  6088  001392  22DD               	addwfc	postdec2,f,c
  6089                           
  6090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6091  001394  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6092  001398  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6093  00139C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6094  0013A0  0E04               	movlw	4
  6095  0013A2  26DE               	addwf	postinc2,f,c
  6096  0013A4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6097  0013A8  0E00               	movlw	0
  6098  0013AA  22DD               	addwfc	postdec2,f,c
  6099  0013AC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6100  0013B0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6101  0013B4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6102  0013B8  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6103  0013BC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6104  0013C0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6105  0013C4  504B               	movf	??_vfpfcnvrt+2,w,c
  6106  0013C6  6E6A               	movwf	vfpfcnvrt@llu,c
  6107  0013C8  504C               	movf	??_vfpfcnvrt+3,w,c
  6108  0013CA  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6109  0013CC  504D               	movf	??_vfpfcnvrt+4,w,c
  6110  0013CE  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6111  0013D0  504E               	movf	??_vfpfcnvrt+5,w,c
  6112  0013D2  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6113  0013D4  D775               	goto	L15
  6114  0013D6                     l4284:
  6115  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  6116                           
  6117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6118  0013D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6119  0013DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6120  0013E0  CFDE F001          	movff	postinc2,strncmp@_l
  6121  0013E4  CFDD F002          	movff	postdec2,strncmp@_l+1
  6122  0013E8  0EC5               	movlw	low STR_106
  6123  0013EA  6E03               	movwf	strncmp@_r,c
  6124  0013EC  0E06               	movlw	high STR_106
  6125  0013EE  6E04               	movwf	strncmp@_r+1,c
  6126  0013F0  0E00               	movlw	0
  6127  0013F2  6E06               	movwf	strncmp@n+1,c
  6128  0013F4  0E02               	movlw	2
  6129  0013F6  6E05               	movwf	strncmp@n,c
  6130  0013F8  ECA2  F01A         	call	_strncmp	;wreg free
  6131  0013FC  5001               	movf	?_strncmp,w,c
  6132  0013FE  1002               	iorwf	?_strncmp+1,w,c
  6133  001400  A4D8               	btfss	status,2,c
  6134  001402  D023               	goto	l4292
  6135  001404                     u4320:
  6136  001404  FFFF               	dw	65535	; assembler added errata NOP
  6137                           
  6138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  6139  001406  0E02               	movlw	2
  6140  001408  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6141  00140C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6142  001410  26DE               	addwf	postinc2,f,c
  6143  001412                     L24:
  6144  001412  FFFF               	dw	65535	; assembler added errata NOP
  6145  001414  0E00               	movlw	0
  6146  001416  22DD               	addwfc	postdec2,f,c
  6147                           
  6148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6149  001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6150  00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6151  001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6152  001424  0E02               	movlw	2
  6153  001426  26DE               	addwf	postinc2,f,c
  6154  001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6155  00142C  0E00               	movlw	0
  6156  00142E  22DD               	addwfc	postdec2,f,c
  6157  001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6158  001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6159  001438  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6160  00143C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6161  001440  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6162  001444  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6163  001448  D738               	goto	L14
  6164  00144A                     l4292:
  6165  00144A  FFFF               	dw	65535	; assembler added errata NOP
  6166                           
  6167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  6168  00144C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6169  001450  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6170  001454  CFDE F001          	movff	postinc2,strncmp@_l
  6171  001458  CFDD F002          	movff	postdec2,strncmp@_l+1
  6172  00145C  0E9F               	movlw	low STR_111
  6173  00145E  6E03               	movwf	strncmp@_r,c
  6174  001460  0E06               	movlw	high STR_111
  6175  001462  6E04               	movwf	strncmp@_r+1,c
  6176  001464  0E00               	movlw	0
  6177  001466  6E06               	movwf	strncmp@n+1,c
  6178  001468  0E03               	movlw	3
  6179  00146A  6E05               	movwf	strncmp@n,c
  6180  00146C  ECA2  F01A         	call	_strncmp	;wreg free
  6181  001470  5001               	movf	?_strncmp,w,c
  6182  001472  1002               	iorwf	?_strncmp+1,w,c
  6183  001474  B4D8               	btfsc	status,2,c
  6184  001476  D016               	goto	u4340
  6185  001478  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6186  00147C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6187  001480  CFDE F001          	movff	postinc2,strncmp@_l
  6188  001484  CFDD F002          	movff	postdec2,strncmp@_l+1
  6189  001488  0E87               	movlw	low STR_115
  6190  00148A  6E03               	movwf	strncmp@_r,c
  6191  00148C  0E06               	movlw	high STR_115
  6192  00148E  6E04               	movwf	strncmp@_r+1,c
  6193  001490  0E00               	movlw	0
  6194  001492  6E06               	movwf	strncmp@n+1,c
  6195  001494  0E03               	movlw	3
  6196  001496  6E05               	movwf	strncmp@n,c
  6197  001498  ECA2  F01A         	call	_strncmp	;wreg free
  6198  00149C  5001               	movf	?_strncmp,w,c
  6199  00149E  1002               	iorwf	?_strncmp+1,w,c
  6200  0014A0  A4D8               	btfss	status,2,c
  6201  0014A2  D058               	goto	l4306
  6202  0014A4                     u4340:
  6203  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  6204                           
  6205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  6206  0014A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6207  0014AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6208  0014AE  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6209  0014B2  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6210  0014B6  0E02               	movlw	2
  6211  0014B8  2649               	addwf	??_vfpfcnvrt,f,c
  6212  0014BA  0E00               	movlw	0
  6213  0014BC  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6214  0014BE  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6215  0014C2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6216  0014C6                     	if	0	;tblptru may be non-zero
  6217  0014C6                     	endif
  6218  0014C6                     	if	0	;tblptru may be non-zero
  6219  0014C6                     	endif
  6220  0014C6  0008               	tblrd		*
  6221  0014C8  FFFF               	dw	65535	; errata NOP
  6222  0014CA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6223                           
  6224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  6225  0014CE  0E03               	movlw	3
  6226  0014D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6227  0014D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6228  0014D8  26DE               	addwf	postinc2,f,c
  6229  0014DA  0E00               	movlw	0
  6230  0014DC  22DD               	addwfc	postdec2,f,c
  6231                           
  6232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6233  0014DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6234  0014E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6235  0014E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6236  0014EA  0E02               	movlw	2
  6237  0014EC  26DE               	addwf	postinc2,f,c
  6238  0014EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6239  0014F2  0E00               	movlw	0
  6240  0014F4  22DD               	addwfc	postdec2,f,c
  6241  0014F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6242  0014FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6243  0014FE  50DF               	movf	indf2,w,c
  6244  001500  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6245  001502  504B               	movf	??_vfpfcnvrt+2,w,c
  6246  001504  6E6A               	movwf	vfpfcnvrt@llu,c
  6247  001506  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6248  001508                     L16:
  6249  001508  FFFF               	dw	65535	; assembler added errata NOP
  6250  00150A  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6251  00150C  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6252  00150E                     L17:
  6253  00150E  FFFF               	dw	65535	; assembler added errata NOP
  6254  001510  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6255  001512  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6256  001514  6A70               	clrf	vfpfcnvrt@llu+6,c
  6257  001516  6A71               	clrf	vfpfcnvrt@llu+7,c
  6258                           
  6259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  6260  001518  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6261  00151C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6262  001520  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6263  001524  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6264  001528  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6265  00152C  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6266  001530  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6267  001534  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6268  001538  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6269  00153C  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6270  001540  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  6271  001544  ECD3  F010         	call	_xtoa	;wreg free
  6272  001548                     L13:
  6273  001548  FFFF               	dw	65535	; assembler added errata NOP
  6274  00154A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6275  00154E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6276  001552  D18E               	goto	l553
  6277  001554                     l4306:
  6278  001554  FFFF               	dw	65535	; assembler added errata NOP
  6279                           
  6280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  6281  001556  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6282  00155A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6283  00155E  CFDE F001          	movff	postinc2,strncmp@_l
  6284  001562  CFDD F002          	movff	postdec2,strncmp@_l+1
  6285  001566  0EA0               	movlw	low (STR_111+1)
  6286  001568  6E03               	movwf	strncmp@_r,c
  6287  00156A  0E06               	movlw	high (STR_111+1)
  6288  00156C  6E04               	movwf	strncmp@_r+1,c
  6289  00156E  0E00               	movlw	0
  6290  001570  6E06               	movwf	strncmp@n+1,c
  6291  001572  0E02               	movlw	2
  6292  001574  6E05               	movwf	strncmp@n,c
  6293  001576  ECA2  F01A         	call	_strncmp	;wreg free
  6294  00157A  5001               	movf	?_strncmp,w,c
  6295  00157C  1002               	iorwf	?_strncmp+1,w,c
  6296  00157E  B4D8               	btfsc	status,2,c
  6297  001580  D016               	goto	u4360
  6298  001582  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6299  001586  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6300  00158A  CFDE F001          	movff	postinc2,strncmp@_l
  6301  00158E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6302  001592  0E88               	movlw	low (STR_115+1)
  6303  001594  6E03               	movwf	strncmp@_r,c
  6304  001596  0E06               	movlw	high (STR_115+1)
  6305  001598  6E04               	movwf	strncmp@_r+1,c
  6306  00159A  0E00               	movlw	0
  6307  00159C  6E06               	movwf	strncmp@n+1,c
  6308  00159E  0E02               	movlw	2
  6309  0015A0  6E05               	movwf	strncmp@n,c
  6310  0015A2  ECA2  F01A         	call	_strncmp	;wreg free
  6311  0015A6  5001               	movf	?_strncmp,w,c
  6312  0015A8  1002               	iorwf	?_strncmp+1,w,c
  6313  0015AA  A4D8               	btfss	status,2,c
  6314  0015AC  D014               	goto	l4320
  6315  0015AE                     u4360:
  6316  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  6317                           
  6318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  6319  0015B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6320  0015B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6321  0015B8  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6322  0015BC  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6323  0015C0  0E01               	movlw	1
  6324  0015C2  2649               	addwf	??_vfpfcnvrt,f,c
  6325  0015C4  0E00               	movlw	0
  6326  0015C6  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6327  0015C8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6328  0015CC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6329  0015D0                     	if	0	;tblptru may be non-zero
  6330  0015D0                     	endif
  6331  0015D0                     	if	0	;tblptru may be non-zero
  6332  0015D0                     	endif
  6333  0015D0  0008               	tblrd		*
  6334  0015D2  FFFF               	dw	65535	; errata NOP
  6335  0015D4  D0DB               	goto	L28
  6336  0015D6                     l4320:
  6337  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  6338                           
  6339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6340  0015D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6341  0015DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6342  0015E0  CFDE FFF6          	movff	postinc2,tblptrl
  6343  0015E4  CFDD FFF7          	movff	postdec2,tblptrh
  6344  0015E8                     	if	0	;tblptru may be non-zero
  6345  0015E8                     	endif
  6346  0015E8                     	if	0	;tblptru may be non-zero
  6347  0015E8                     	endif
  6348  0015E8  0008               	tblrd		*
  6349  0015EA  FFFF               	dw	65535	; errata NOP
  6350  0015EC  50F5               	movf	tablat,w,c
  6351  0015EE  0A78               	xorlw	120
  6352  0015F0  B4D8               	btfsc	status,2,c
  6353  0015F2  D00E               	goto	u4380
  6354  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6355  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6356  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  6357  001600  CFDD FFF7          	movff	postdec2,tblptrh
  6358  001604                     	if	0	;tblptru may be non-zero
  6359  001604                     	endif
  6360  001604                     	if	0	;tblptru may be non-zero
  6361  001604                     	endif
  6362  001604  0008               	tblrd		*
  6363  001606  FFFF               	dw	65535	; errata NOP
  6364  001608  50F5               	movf	tablat,w,c
  6365  00160A  0A58               	xorlw	88
  6366  00160C  A4D8               	btfss	status,2,c
  6367  00160E  D013               	goto	l4334
  6368  001610                     u4380:
  6369  001610  FFFF               	dw	65535	; assembler added errata NOP
  6370                           
  6371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6372  001612  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6373  001616  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6374  00161A  CFDE FFF6          	movff	postinc2,tblptrl
  6375  00161E  CFDD FFF7          	movff	postdec2,tblptrh
  6376  001622                     	if	0	;tblptru may be non-zero
  6377  001622                     	endif
  6378  001622                     	if	0	;tblptru may be non-zero
  6379  001622                     	endif
  6380  001622  0008               	tblrd		*
  6381  001624  FFFF               	dw	65535	; errata NOP
  6382  001626  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6383                           
  6384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6385  00162A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6386  00162E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6387  001632  2ADE               	incf	postinc2,f,c
  6388  001634  D0B4               	goto	L27
  6389  001636                     l4334:
  6390  001636  FFFF               	dw	65535	; assembler added errata NOP
  6391                           
  6392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  6393  001638  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6394  00163C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6395  001640  CFDE F001          	movff	postinc2,strncmp@_l
  6396  001644  CFDD F002          	movff	postdec2,strncmp@_l+1
  6397  001648  0EC8               	movlw	low STR_129
  6398  00164A  6E03               	movwf	strncmp@_r,c
  6399  00164C  0E06               	movlw	high STR_129
  6400  00164E  6E04               	movwf	strncmp@_r+1,c
  6401  001650  0E00               	movlw	0
  6402  001652  6E06               	movwf	strncmp@n+1,c
  6403  001654  0E02               	movlw	2
  6404  001656  6E05               	movwf	strncmp@n,c
  6405  001658  ECA2  F01A         	call	_strncmp	;wreg free
  6406  00165C  5001               	movf	?_strncmp,w,c
  6407  00165E  1002               	iorwf	?_strncmp+1,w,c
  6408  001660  B4D8               	btfsc	status,2,c
  6409  001662  D016               	goto	u4400
  6410  001664  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6411  001668  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6412  00166C  CFDE F001          	movff	postinc2,strncmp@_l
  6413  001670  CFDD F002          	movff	postdec2,strncmp@_l+1
  6414  001674  0EA7               	movlw	low STR_133
  6415  001676  6E03               	movwf	strncmp@_r,c
  6416  001678  0E06               	movlw	high STR_133
  6417  00167A  6E04               	movwf	strncmp@_r+1,c
  6418  00167C  0E00               	movlw	0
  6419  00167E  6E06               	movwf	strncmp@n+1,c
  6420  001680  0E02               	movlw	2
  6421  001682  6E05               	movwf	strncmp@n,c
  6422  001684  ECA2  F01A         	call	_strncmp	;wreg free
  6423  001688  5001               	movf	?_strncmp,w,c
  6424  00168A  1002               	iorwf	?_strncmp+1,w,c
  6425  00168C  A4D8               	btfss	status,2,c
  6426  00168E  D03E               	goto	l4348
  6427  001690                     u4400:
  6428  001690  FFFF               	dw	65535	; assembler added errata NOP
  6429                           
  6430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  6431  001692  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6432  001696  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6433  00169A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6434  00169E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6435  0016A2  0E01               	movlw	1
  6436  0016A4  2649               	addwf	??_vfpfcnvrt,f,c
  6437  0016A6  0E00               	movlw	0
  6438  0016A8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6439  0016AA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6440  0016AE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6441  0016B2                     	if	0	;tblptru may be non-zero
  6442  0016B2                     	endif
  6443  0016B2                     	if	0	;tblptru may be non-zero
  6444  0016B2                     	endif
  6445  0016B2  0008               	tblrd		*
  6446  0016B4  FFFF               	dw	65535	; errata NOP
  6447  0016B6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6448                           
  6449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  6450  0016BA  0E02               	movlw	2
  6451  0016BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6452  0016C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6453  0016C4  26DE               	addwf	postinc2,f,c
  6454  0016C6  0E00               	movlw	0
  6455  0016C8  22DD               	addwfc	postdec2,f,c
  6456                           
  6457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6458  0016CA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6459  0016CE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6460  0016D2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6461  0016D6  0E04               	movlw	4
  6462  0016D8  26DE               	addwf	postinc2,f,c
  6463  0016DA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6464  0016DE  0E00               	movlw	0
  6465  0016E0  22DD               	addwfc	postdec2,f,c
  6466  0016E2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6467  0016E6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6468  0016EA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6469  0016EE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6470  0016F2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6471  0016F6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6472  0016FA  504B               	movf	??_vfpfcnvrt+2,w,c
  6473  0016FC  6E6A               	movwf	vfpfcnvrt@llu,c
  6474  0016FE  504C               	movf	??_vfpfcnvrt+3,w,c
  6475  001700  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6476  001702  504D               	movf	??_vfpfcnvrt+4,w,c
  6477  001704  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6478  001706  504E               	movf	??_vfpfcnvrt+5,w,c
  6479  001708  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6480  00170A  D701               	goto	L17
  6481  00170C                     l4348:
  6482  00170C  FFFF               	dw	65535	; assembler added errata NOP
  6483                           
  6484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  6485  00170E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6486  001712  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6487  001716  CFDE F001          	movff	postinc2,strncmp@_l
  6488  00171A  CFDD F002          	movff	postdec2,strncmp@_l+1
  6489  00171E  0ECB               	movlw	low STR_138
  6490  001720  6E03               	movwf	strncmp@_r,c
  6491  001722  0E06               	movlw	high STR_138
  6492  001724  6E04               	movwf	strncmp@_r+1,c
  6493  001726  0E00               	movlw	0
  6494  001728  6E06               	movwf	strncmp@n+1,c
  6495  00172A  0E02               	movlw	2
  6496  00172C  6E05               	movwf	strncmp@n,c
  6497  00172E  ECA2  F01A         	call	_strncmp	;wreg free
  6498  001732  5001               	movf	?_strncmp,w,c
  6499  001734  1002               	iorwf	?_strncmp+1,w,c
  6500  001736  B4D8               	btfsc	status,2,c
  6501  001738  D016               	goto	u4420
  6502  00173A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6503  00173E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6504  001742  CFDE F001          	movff	postinc2,strncmp@_l
  6505  001746  CFDD F002          	movff	postdec2,strncmp@_l+1
  6506  00174A  0EAA               	movlw	low STR_142
  6507  00174C  6E03               	movwf	strncmp@_r,c
  6508  00174E  0E06               	movlw	high STR_142
  6509  001750  6E04               	movwf	strncmp@_r+1,c
  6510  001752  0E00               	movlw	0
  6511  001754  6E06               	movwf	strncmp@n+1,c
  6512  001756  0E02               	movlw	2
  6513  001758  6E05               	movwf	strncmp@n,c
  6514  00175A  ECA2  F01A         	call	_strncmp	;wreg free
  6515  00175E  5001               	movf	?_strncmp,w,c
  6516  001760  1002               	iorwf	?_strncmp+1,w,c
  6517  001762  A4D8               	btfss	status,2,c
  6518  001764  D038               	goto	l4362
  6519  001766                     u4420:
  6520  001766  FFFF               	dw	65535	; assembler added errata NOP
  6521                           
  6522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  6523  001768  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6524  00176C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6525  001770  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6526  001774  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6527  001778  0E01               	movlw	1
  6528  00177A  2649               	addwf	??_vfpfcnvrt,f,c
  6529  00177C  0E00               	movlw	0
  6530  00177E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6531  001780  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6532  001784  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6533  001788                     	if	0	;tblptru may be non-zero
  6534  001788                     	endif
  6535  001788                     	if	0	;tblptru may be non-zero
  6536  001788                     	endif
  6537  001788  0008               	tblrd		*
  6538  00178A  FFFF               	dw	65535	; errata NOP
  6539  00178C                     L28:
  6540  00178C  FFFF               	dw	65535	; assembler added errata NOP
  6541  00178E  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6542                           
  6543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  6544  001792  0E02               	movlw	2
  6545  001794  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6546  001798  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6547  00179C  26DE               	addwf	postinc2,f,c
  6548  00179E                     L27:
  6549  00179E  FFFF               	dw	65535	; assembler added errata NOP
  6550  0017A0  0E00               	movlw	0
  6551  0017A2  22DD               	addwfc	postdec2,f,c
  6552                           
  6553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6554  0017A4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6555  0017A8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6556  0017AC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6557  0017B0  0E02               	movlw	2
  6558  0017B2  26DE               	addwf	postinc2,f,c
  6559  0017B4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6560  0017B8  0E00               	movlw	0
  6561  0017BA  22DD               	addwfc	postdec2,f,c
  6562  0017BC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6563  0017C0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6564  0017C4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6565  0017C8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6566  0017CC  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6567  0017D0  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6568  0017D4  D699               	goto	L16
  6569  0017D6                     l4362:
  6570  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  6571                           
  6572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6573  0017D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6574  0017DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6575  0017E0  CFDE FFF6          	movff	postinc2,tblptrl
  6576  0017E4  CFDD FFF7          	movff	postdec2,tblptrh
  6577  0017E8                     	if	0	;tblptru may be non-zero
  6578  0017E8                     	endif
  6579  0017E8                     	if	0	;tblptru may be non-zero
  6580  0017E8                     	endif
  6581  0017E8  0008               	tblrd		*
  6582  0017EA  FFFF               	dw	65535	; errata NOP
  6583  0017EC  50F5               	movf	tablat,w,c
  6584  0017EE  0A25               	xorlw	37
  6585  0017F0  A4D8               	btfss	status,2,c
  6586  0017F2  D018               	goto	l4372
  6587                           
  6588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6589  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6590  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6591  0017FC  2ADE               	incf	postinc2,f,c
  6592  0017FE  0E00               	movlw	0
  6593  001800  22DD               	addwfc	postdec2,f,c
  6594                           
  6595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6596  001802  0E00               	movlw	0
  6597  001804  6E02               	movwf	fputc@c+1,c
  6598  001806  0E25               	movlw	37
  6599  001808  6E01               	movwf	fputc@c,c
  6600  00180A  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6601  00180E  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6602  001812  EC61  F01B         	call	_fputc	;wreg free
  6603  001816                     l4368:
  6604  001816  FFFF               	dw	65535	; assembler added errata NOP
  6605                           
  6606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6607  001818  0E00               	movlw	0
  6608  00181A  6E44               	movwf	?_vfpfcnvrt+1,c
  6609  00181C  0E01               	movlw	1
  6610  00181E                     L11:
  6611  00181E  FFFF               	dw	65535	; assembler added errata NOP
  6612  001820  6E43               	movwf	?_vfpfcnvrt,c
  6613  001822  D026               	goto	l553
  6614  001824                     l4372:
  6615  001824  FFFF               	dw	65535	; assembler added errata NOP
  6616                           
  6617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6618  001826  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6619  00182A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6620  00182E  2ADE               	incf	postinc2,f,c
  6621  001830  0E00               	movlw	0
  6622  001832  22DD               	addwfc	postdec2,f,c
  6623  001834  EFE7  F007         	goto	l4192
  6624  001838                     l4378:
  6625  001838  FFFF               	dw	65535	; assembler added errata NOP
  6626                           
  6627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6628  00183A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6629  00183E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6630  001842  CFDE FFF6          	movff	postinc2,tblptrl
  6631  001846  CFDD FFF7          	movff	postdec2,tblptrh
  6632  00184A                     	if	0	;tblptru may be non-zero
  6633  00184A                     	endif
  6634  00184A                     	if	0	;tblptru may be non-zero
  6635  00184A                     	endif
  6636  00184A  0008               	tblrd		*
  6637  00184C  FFFF               	dw	65535	; errata NOP
  6638  00184E  50F5               	movf	tablat,w,c
  6639  001850  6E01               	movwf	fputc@c,c
  6640  001852  6A02               	clrf	fputc@c+1,c
  6641  001854  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6642  001858  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6643  00185C  EC61  F01B         	call	_fputc	;wreg free
  6644                           
  6645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6646  001860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6647  001864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6648  001868  2ADE               	incf	postinc2,f,c
  6649  00186A  0E00               	movlw	0
  6650  00186C  22DD               	addwfc	postdec2,f,c
  6651  00186E  D7D3               	goto	l4368
  6652  001870                     l553:
  6653  001870  FFFF               	dw	65535	; assembler added errata NOP
  6654  001872  0012               	return		;funcret
  6655  001874  FFFF               	dw	65535	; errata NOP
  6656  001876                     __end_of_vfpfcnvrt:
  6657                           	opt callstack 0
  6658                           
  6659 ;; *************** function _xtoa *****************
  6660 ;; Defined at:
  6661 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6664 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6665 ;;  d               8   29[COMRAM] unsigned long long 
  6666 ;;  x               1   37[COMRAM] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  n               8   54[COMRAM] unsigned long long 
  6669 ;;  c               2   64[COMRAM] int 
  6670 ;;  i               2   62[COMRAM] int 
  6671 ;;  w               2   52[COMRAM] int 
  6672 ;;  p               2   50[COMRAM] int 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2   27[COMRAM] int 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6682 ;;      Params:        11       0       0       0       0       0       0
  6683 ;;      Locals:        20       0       0       0       0       0       0
  6684 ;;      Temps:          8       0       0       0       0       0       0
  6685 ;;      Totals:        39       0       0       0       0       0       0
  6686 ;;Total ram usage:       39 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    6
  6689 ;; This function calls:
  6690 ;;		_isalpha
  6691 ;;		_isupper
  6692 ;;		_pad
  6693 ;;		_toupper
  6694 ;; This function is called by:
  6695 ;;		_vfpfcnvrt
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text22
  6700  0021A6                     __ptext22:
  6701                           	opt callstack 0
  6702  0021A6                     _xtoa:
  6703                           	opt callstack 0
  6704  0021A6  FFFF               	dw	65535	; assembler added errata NOP
  6705                           
  6706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6707                           
  6708                           ;incstack = 0
  6709  0021A8  0100               	movlb	0	; () banked
  6710  0021AA  AFCF               	btfss	(_prec+1)& (0+255),7,b
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6714  0021AC  93D0               	bcf	_flags& (0+255),1,b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6718  0021AE  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  6719  0021B0  D005               	goto	u3640
  6720  0021B2  51CF               	movf	(_prec+1)& (0+255),w,b
  6721  0021B4  E109               	bnz	l491
  6722  0021B6  05CE               	decf	_prec& (0+255),w,b
  6723  0021B8  B0D8               	btfsc	status,0,c
  6724  0021BA  D006               	goto	l491
  6725  0021BC                     u3640:
  6726  0021BC  FFFF               	dw	65535	; assembler added errata NOP
  6727                           
  6728                           ; BSR set to: 0
  6729  0021BE  0E00               	movlw	0
  6730  0021C0  6E34               	movwf	xtoa@p+1,c
  6731  0021C2  0E01               	movlw	1
  6732  0021C4  6E33               	movwf	xtoa@p,c
  6733  0021C6  D005               	goto	l493
  6734  0021C8                     l491:
  6735  0021C8  FFFF               	dw	65535	; assembler added errata NOP
  6736                           
  6737                           ; BSR set to: 0
  6738  0021CA  C0CE  F033         	movff	_prec,xtoa@p
  6739  0021CE  C0CF  F034         	movff	_prec+1,xtoa@p+1
  6740  0021D2                     l493:
  6741  0021D2  FFFF               	dw	65535	; assembler added errata NOP
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6745  0021D4  C0CC  F035         	movff	_width,xtoa@w
  6746  0021D8  C0CD  F036         	movff	_width+1,xtoa@w+1
  6747                           
  6748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6749  0021DC  A9D0               	btfss	_flags& (0+255),4,b
  6750  0021DE  D004               	goto	l3892
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6754  0021E0  0EFE               	movlw	254
  6755  0021E2  2635               	addwf	xtoa@w,f,c
  6756  0021E4  0EFF               	movlw	255
  6757  0021E6  2236               	addwfc	xtoa@w+1,f,c
  6758  0021E8                     l3892:
  6759  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6763  0021EA  C01E  F037         	movff	xtoa@d,xtoa@n
  6764  0021EE  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6765  0021F2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6766  0021F6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6767  0021FA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6768  0021FE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6769  002202  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6770  002206  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6774  00220A  0E00               	movlw	0
  6775  00220C  6E40               	movwf	xtoa@i+1,c
  6776  00220E  0E1F               	movlw	31
  6777  002210  6E3F               	movwf	xtoa@i,c
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6781  002212  0E00               	movlw	0
  6782  002214  6FF4               	movwf	(_dbuf+31)& (0+255),b
  6783                           
  6784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6785  002216  D09D               	goto	l3928
  6786  002218                     l3898:
  6787  002218  FFFF               	dw	65535	; assembler added errata NOP
  6788                           
  6789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6790  00221A  063F               	decf	xtoa@i,f,c
  6791  00221C  A0D8               	btfss	status,0,c
  6792  00221E  0640               	decf	xtoa@i+1,f,c
  6793                           
  6794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6795  002220  0E0F               	movlw	15
  6796  002222  1437               	andwf	xtoa@n,w,c
  6797  002224  6E41               	movwf	xtoa@c,c
  6798  002226  6A42               	clrf	xtoa@c+1,c
  6799                           
  6800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6801  002228  BE42               	btfsc	xtoa@c+1,7,c
  6802  00222A  D008               	goto	l3906
  6803  00222C  5042               	movf	xtoa@c+1,w,c
  6804  00222E  E104               	bnz	u3660
  6805  002230  0E0A               	movlw	10
  6806  002232  5C41               	subwf	xtoa@c,w,c
  6807  002234  A0D8               	btfss	status,0,c
  6808  002236  D002               	goto	l3906
  6809  002238                     u3660:
  6810  002238  0E57               	movlw	87
  6811  00223A  D002               	goto	L25
  6812  00223C                     l3906:
  6813  00223C  FFFF               	dw	65535	; assembler added errata NOP
  6814  00223E  0E30               	movlw	48
  6815  002240                     L25:
  6816  002240  FFFF               	dw	65535	; assembler added errata NOP
  6817  002242  2441               	addwf	xtoa@c,w,c
  6818  002244  6E41               	movwf	xtoa@c,c
  6819  002246  0E00               	movlw	0
  6820  002248  2042               	addwfc	xtoa@c+1,w,c
  6821  00224A  6E42               	movwf	xtoa@c+1,c
  6822                           
  6823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  6824  00224C  0EBF               	movlw	191
  6825  00224E  6E27               	movwf	??_xtoa& (0+255),c
  6826  002250  0EFF               	movlw	255
  6827  002252  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6828  002254  5026               	movf	xtoa@x,w,c
  6829  002256  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6830  002258  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  6831  00225A  5027               	movf	??_xtoa,w,c
  6832  00225C  2629               	addwf	??_xtoa+2,f,c
  6833  00225E  5028               	movf	??_xtoa+1,w,c
  6834  002260  222A               	addwfc	??_xtoa+3,f,c
  6835  002262  502A               	movf	??_xtoa+3,w,c
  6836  002264  E106               	bnz	u3670
  6837  002266  0E1A               	movlw	26
  6838  002268  5C29               	subwf	??_xtoa+2,w,c
  6839  00226A  B0D8               	btfsc	status,0,c
  6840  00226C  D002               	goto	u3670
  6841  00226E  0E01               	movlw	1
  6842  002270  D002               	goto	u3680
  6843  002272                     u3670:
  6844  002272  FFFF               	dw	65535	; assembler added errata NOP
  6845  002274  0E00               	movlw	0
  6846  002276                     u3680:
  6847  002276  FFFF               	dw	65535	; assembler added errata NOP
  6848  002278  6E2F               	movwf	_xtoa$1109,c
  6849  00227A  6A30               	clrf	_xtoa$1109+1,c
  6850  00227C  502F               	movf	_xtoa$1109,w,c
  6851  00227E  1030               	iorwf	_xtoa$1109+1,w,c
  6852  002280  B4D8               	btfsc	status,2,c
  6853  002282  D029               	goto	l3920
  6854  002284  0E9F               	movlw	159
  6855  002286  6E27               	movwf	??_xtoa& (0+255),c
  6856  002288  0EFF               	movlw	255
  6857  00228A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  6858  00228C  0E20               	movlw	32
  6859  00228E  1041               	iorwf	xtoa@c,w,c
  6860  002290  6E29               	movwf	(??_xtoa+2)& (0+255),c
  6861  002292  0E00               	movlw	0
  6862  002294  1042               	iorwf	xtoa@c+1,w,c
  6863  002296  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  6864  002298  5027               	movf	??_xtoa,w,c
  6865  00229A  2629               	addwf	??_xtoa+2,f,c
  6866  00229C  5028               	movf	??_xtoa+1,w,c
  6867  00229E  222A               	addwfc	??_xtoa+3,f,c
  6868  0022A0  502A               	movf	??_xtoa+3,w,c
  6869  0022A2  E106               	bnz	u3700
  6870  0022A4  0E1A               	movlw	26
  6871  0022A6  5C29               	subwf	??_xtoa+2,w,c
  6872  0022A8  B0D8               	btfsc	status,0,c
  6873  0022AA  D002               	goto	u3700
  6874  0022AC  0E01               	movlw	1
  6875  0022AE  D002               	goto	u3710
  6876  0022B0                     u3700:
  6877  0022B0  FFFF               	dw	65535	; assembler added errata NOP
  6878  0022B2  0E00               	movlw	0
  6879  0022B4                     u3710:
  6880  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  6881  0022B6  6E31               	movwf	_xtoa$1110,c
  6882  0022B8  6A32               	clrf	_xtoa$1110+1,c
  6883  0022BA  5031               	movf	_xtoa$1110,w,c
  6884  0022BC  1032               	iorwf	_xtoa$1110+1,w,c
  6885  0022BE  B4D8               	btfsc	status,2,c
  6886  0022C0  D00A               	goto	l3920
  6887                           
  6888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6889  0022C2  C041  F007         	movff	xtoa@c,toupper@c
  6890  0022C6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6891  0022CA  EC38  F01D         	call	_toupper	;wreg free
  6892  0022CE  C007  F041         	movff	?_toupper,xtoa@c
  6893  0022D2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6894  0022D6                     l3920:
  6895  0022D6  FFFF               	dw	65535	; assembler added errata NOP
  6896                           
  6897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6898  0022D8  0ED5               	movlw	low _dbuf
  6899  0022DA  243F               	addwf	xtoa@i,w,c
  6900  0022DC  6ED9               	movwf	fsr2l,c
  6901  0022DE  0E00               	movlw	high _dbuf
  6902  0022E0  2040               	addwfc	xtoa@i+1,w,c
  6903  0022E2  6EDA               	movwf	fsr2h,c
  6904  0022E4  C041  FFDF         	movff	xtoa@c,indf2
  6905                           
  6906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6907  0022E8  0633               	decf	xtoa@p,f,c
  6908  0022EA  A0D8               	btfss	status,0,c
  6909  0022EC  0634               	decf	xtoa@p+1,f,c
  6910                           
  6911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6912  0022EE  0635               	decf	xtoa@w,f,c
  6913  0022F0  A0D8               	btfss	status,0,c
  6914  0022F2  0636               	decf	xtoa@w+1,f,c
  6915                           
  6916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6917  0022F4  C037  F027         	movff	xtoa@n,??_xtoa
  6918  0022F8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6919  0022FC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6920  002300  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6921  002304  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6922  002308  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6923  00230C  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6924  002310  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6925  002314  0E05               	movlw	5
  6926  002316  D00A               	goto	u3730
  6927  002318                     u3735:
  6928  002318  FFFF               	dw	65535	; assembler added errata NOP
  6929  00231A  90D8               	bcf	status,0,c
  6930  00231C  322E               	rrcf	??_xtoa+7,f,c
  6931  00231E  322D               	rrcf	??_xtoa+6,f,c
  6932  002320  322C               	rrcf	??_xtoa+5,f,c
  6933  002322  322B               	rrcf	??_xtoa+4,f,c
  6934  002324  322A               	rrcf	??_xtoa+3,f,c
  6935  002326  3229               	rrcf	??_xtoa+2,f,c
  6936  002328  3228               	rrcf	??_xtoa+1,f,c
  6937  00232A  3227               	rrcf	??_xtoa,f,c
  6938  00232C                     u3730:
  6939  00232C  FFFF               	dw	65535	; assembler added errata NOP
  6940  00232E  2EE8               	decfsz	wreg,f,c
  6941  002330  D7F3               	goto	u3735
  6942  002332  C027  F037         	movff	??_xtoa,xtoa@n
  6943  002336  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6944  00233A  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6945  00233E  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6946  002342  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6947  002346  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6948  00234A  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6949  00234E  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6950  002352                     l3928:
  6951  002352  FFFF               	dw	65535	; assembler added errata NOP
  6952                           
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6954  002354  BE40               	btfsc	xtoa@i+1,7,c
  6955  002356  D022               	goto	u3780
  6956  002358  5040               	movf	xtoa@i+1,w,c
  6957  00235A  E104               	bnz	u3740
  6958  00235C  0E02               	movlw	2
  6959  00235E  5C3F               	subwf	xtoa@i,w,c
  6960  002360  A0D8               	btfss	status,0,c
  6961  002362  D01C               	goto	u3780
  6962  002364                     u3740:
  6963  002364  5037               	movf	xtoa@n,w,c
  6964  002366  1038               	iorwf	xtoa@n+1,w,c
  6965  002368  1039               	iorwf	xtoa@n+2,w,c
  6966  00236A  103A               	iorwf	xtoa@n+3,w,c
  6967  00236C  103B               	iorwf	xtoa@n+4,w,c
  6968  00236E  103C               	iorwf	xtoa@n+5,w,c
  6969  002370  103D               	iorwf	xtoa@n+6,w,c
  6970  002372  103E               	iorwf	xtoa@n+7,w,c
  6971  002374  A4D8               	btfss	status,2,c
  6972  002376  D750               	goto	l3898
  6973  002378  BE34               	btfsc	xtoa@p+1,7,c
  6974  00237A  D005               	goto	u3760
  6975  00237C  5034               	movf	xtoa@p+1,w,c
  6976  00237E  E102               	bnz	u3761
  6977  002380  0433               	decf	xtoa@p,w,c
  6978  002382  B0D8               	btfsc	status,0,c
  6979  002384                     u3761:
  6980  002384  D749               	goto	l3898
  6981  002386                     u3760:
  6982  002386  FFFF               	dw	65535	; assembler added errata NOP
  6983  002388  BE36               	btfsc	xtoa@w+1,7,c
  6984  00238A  D008               	goto	u3780
  6985  00238C  5036               	movf	xtoa@w+1,w,c
  6986  00238E  E103               	bnz	u3770
  6987  002390  0435               	decf	xtoa@w,w,c
  6988  002392  A0D8               	btfss	status,0,c
  6989  002394  D003               	goto	u3780
  6990  002396                     u3770:
  6991  002396  0100               	movlb	0	; () banked
  6992  002398  B3D0               	btfsc	_flags& (0+255),1,b
  6993  00239A  D73E               	goto	l3898
  6994  00239C                     u3780:
  6995  00239C  FFFF               	dw	65535	; assembler added errata NOP
  6996                           
  6997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6998  00239E  0100               	movlb	0	; () banked
  6999  0023A0  A9D0               	btfss	_flags& (0+255),4,b
  7000  0023A2  D016               	goto	l3944
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7004  0023A4  063F               	decf	xtoa@i,f,c
  7005  0023A6  A0D8               	btfss	status,0,c
  7006  0023A8  0640               	decf	xtoa@i+1,f,c
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7010  0023AA  0ED5               	movlw	low _dbuf
  7011  0023AC  243F               	addwf	xtoa@i,w,c
  7012  0023AE  6ED9               	movwf	fsr2l,c
  7013  0023B0  0E00               	movlw	high _dbuf
  7014  0023B2  2040               	addwfc	xtoa@i+1,w,c
  7015  0023B4  6EDA               	movwf	fsr2h,c
  7016  0023B6  C026  FFDF         	movff	xtoa@x,indf2
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7020  0023BA  063F               	decf	xtoa@i,f,c
  7021  0023BC  A0D8               	btfss	status,0,c
  7022  0023BE  0640               	decf	xtoa@i+1,f,c
  7023                           
  7024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7025  0023C0  0ED5               	movlw	low _dbuf
  7026  0023C2  243F               	addwf	xtoa@i,w,c
  7027  0023C4  6ED9               	movwf	fsr2l,c
  7028  0023C6  0E00               	movlw	high _dbuf
  7029  0023C8  2040               	addwfc	xtoa@i+1,w,c
  7030  0023CA  6EDA               	movwf	fsr2h,c
  7031  0023CC  0E30               	movlw	48
  7032  0023CE  6EDF               	movwf	indf2,c
  7033  0023D0                     l3944:
  7034  0023D0  FFFF               	dw	65535	; assembler added errata NOP
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7038  0023D2  C01C  F011         	movff	xtoa@fp,pad@fp
  7039  0023D6  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7040  0023DA  0ED5               	movlw	low _dbuf
  7041  0023DC  243F               	addwf	xtoa@i,w,c
  7042  0023DE  6E13               	movwf	pad@buf,c
  7043  0023E0  0E00               	movlw	high _dbuf
  7044  0023E2  2040               	addwfc	xtoa@i+1,w,c
  7045  0023E4  6E14               	movwf	pad@buf+1,c
  7046  0023E6  C035  F015         	movff	xtoa@w,pad@p
  7047  0023EA  C036  F016         	movff	xtoa@w+1,pad@p+1
  7048  0023EE  ECB7  F01B         	call	_pad	;wreg free
  7049  0023F2  C011  F01C         	movff	?_pad,?_xtoa
  7050  0023F6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7051  0023FA  0012               	return		;funcret
  7052  0023FC  FFFF               	dw	65535	; errata NOP
  7053  0023FE                     __end_of_xtoa:
  7054                           	opt callstack 0
  7055                           
  7056 ;; *************** function _toupper *****************
  7057 ;; Defined at:
  7058 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  c               2    6[COMRAM] int 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  2    6[COMRAM] int 
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7072 ;;      Params:         2       0       0       0       0       0       0
  7073 ;;      Locals:         2       0       0       0       0       0       0
  7074 ;;      Temps:          4       0       0       0       0       0       0
  7075 ;;      Totals:         8       0       0       0       0       0       0
  7076 ;;Total ram usage:        8 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    3
  7079 ;; This function calls:
  7080 ;;		_islower
  7081 ;; This function is called by:
  7082 ;;		_xtoa
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text23
  7087  003A70                     __ptext23:
  7088                           	opt callstack 0
  7089  003A70                     _toupper:
  7090                           	opt callstack 0
  7091  003A70  FFFF               	dw	65535	; assembler added errata NOP
  7092                           
  7093                           ;incstack = 0
  7094  003A72  0E9F               	movlw	159
  7095  003A74  6E09               	movwf	??_toupper& (0+255),c
  7096  003A76  0EFF               	movlw	255
  7097  003A78  6E0A               	movwf	(??_toupper+1)& (0+255),c
  7098  003A7A  C007  F00B         	movff	toupper@c,??_toupper+2
  7099  003A7E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7100  003A82  5009               	movf	??_toupper,w,c
  7101  003A84  260B               	addwf	??_toupper+2,f,c
  7102  003A86  500A               	movf	??_toupper+1,w,c
  7103  003A88  220C               	addwfc	??_toupper+3,f,c
  7104  003A8A  500C               	movf	??_toupper+3,w,c
  7105  003A8C  E106               	bnz	u2940
  7106  003A8E  0E1A               	movlw	26
  7107  003A90  5C0B               	subwf	??_toupper+2,w,c
  7108  003A92  B0D8               	btfsc	status,0,c
  7109  003A94  D002               	goto	u2940
  7110  003A96  0E01               	movlw	1
  7111  003A98  D002               	goto	u2950
  7112  003A9A                     u2940:
  7113  003A9A  FFFF               	dw	65535	; assembler added errata NOP
  7114  003A9C  0E00               	movlw	0
  7115  003A9E                     u2950:
  7116  003A9E  FFFF               	dw	65535	; assembler added errata NOP
  7117  003AA0  6E0D               	movwf	_toupper$1876,c
  7118  003AA2  6A0E               	clrf	_toupper$1876+1,c
  7119  003AA4  500D               	movf	_toupper$1876,w,c
  7120  003AA6  100E               	iorwf	_toupper$1876+1,w,c
  7121  003AA8  B4D8               	btfsc	status,2,c
  7122  003AAA  D005               	goto	l1426
  7123  003AAC  0E5F               	movlw	95
  7124  003AAE  1407               	andwf	toupper@c,w,c
  7125  003AB0  6E07               	movwf	?_toupper,c
  7126  003AB2  6A08               	clrf	?_toupper+1,c
  7127  003AB4  D005               	goto	l1431
  7128  003AB6                     l1426:
  7129  003AB6  FFFF               	dw	65535	; assembler added errata NOP
  7130  003AB8  C007  F007         	movff	toupper@c,?_toupper
  7131  003ABC  C008  F008         	movff	toupper@c+1,?_toupper+1
  7132  003AC0                     l1431:
  7133  003AC0  FFFF               	dw	65535	; assembler added errata NOP
  7134  003AC2  0012               	return		;funcret
  7135  003AC4  FFFF               	dw	65535	; errata NOP
  7136  003AC6                     __end_of_toupper:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function _islower *****************
  7140 ;; Defined at:
  7141 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2    0[COMRAM] int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  2    0[COMRAM] int 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7155 ;;      Params:         2       0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0
  7157 ;;      Temps:          4       0       0       0       0       0       0
  7158 ;;      Totals:         6       0       0       0       0       0       0
  7159 ;;Total ram usage:        6 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    2
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_toupper
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text24
  7170  003D3C                     __ptext24:
  7171                           	opt callstack 0
  7172  003D3C                     _islower:
  7173                           	opt callstack 0
  7174  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  7175                           
  7176                           ;incstack = 0
  7177  003D3E  0E9F               	movlw	159
  7178  003D40  6E03               	movwf	??_islower& (0+255),c
  7179  003D42  0EFF               	movlw	255
  7180  003D44  6E04               	movwf	(??_islower+1)& (0+255),c
  7181  003D46  C001  F005         	movff	islower@c,??_islower+2
  7182  003D4A  C002  F006         	movff	islower@c+1,??_islower+3
  7183  003D4E  5003               	movf	??_islower,w,c
  7184  003D50  2605               	addwf	??_islower+2,f,c
  7185  003D52  5004               	movf	??_islower+1,w,c
  7186  003D54  2206               	addwfc	??_islower+3,f,c
  7187  003D56  5006               	movf	??_islower+3,w,c
  7188  003D58  E106               	bnz	u2830
  7189  003D5A  0E1A               	movlw	26
  7190  003D5C  5C05               	subwf	??_islower+2,w,c
  7191  003D5E  B0D8               	btfsc	status,0,c
  7192  003D60  D002               	goto	u2830
  7193  003D62  0E01               	movlw	1
  7194  003D64  D002               	goto	u2840
  7195  003D66                     u2830:
  7196  003D66  FFFF               	dw	65535	; assembler added errata NOP
  7197  003D68  0E00               	movlw	0
  7198  003D6A                     u2840:
  7199  003D6A  FFFF               	dw	65535	; assembler added errata NOP
  7200  003D6C  6E01               	movwf	?_islower,c
  7201  003D6E  6A02               	clrf	?_islower+1,c
  7202  003D70  0012               	return		;funcret
  7203  003D72  FFFF               	dw	65535	; errata NOP
  7204  003D74                     __end_of_islower:
  7205                           	opt callstack 0
  7206                           
  7207 ;; *************** function _isupper *****************
  7208 ;; Defined at:
  7209 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  c               2    0[COMRAM] int 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  2    0[COMRAM] int 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7223 ;;      Params:         2       0       0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0
  7225 ;;      Temps:          4       0       0       0       0       0       0
  7226 ;;      Totals:         6       0       0       0       0       0       0
  7227 ;;Total ram usage:        6 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    2
  7230 ;; This function calls:
  7231 ;;		Nothing
  7232 ;; This function is called by:
  7233 ;;		_xtoa
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text25
  7238  003D74                     __ptext25:
  7239                           	opt callstack 0
  7240  003D74                     _isupper:
  7241                           	opt callstack 0
  7242  003D74  FFFF               	dw	65535	; assembler added errata NOP
  7243                           
  7244                           ;incstack = 0
  7245  003D76  0EBF               	movlw	191
  7246  003D78  6E03               	movwf	??_isupper& (0+255),c
  7247  003D7A  0EFF               	movlw	255
  7248  003D7C  6E04               	movwf	(??_isupper+1)& (0+255),c
  7249  003D7E  C001  F005         	movff	isupper@c,??_isupper+2
  7250  003D82  C002  F006         	movff	isupper@c+1,??_isupper+3
  7251  003D86  5003               	movf	??_isupper,w,c
  7252  003D88  2605               	addwf	??_isupper+2,f,c
  7253  003D8A  5004               	movf	??_isupper+1,w,c
  7254  003D8C  2206               	addwfc	??_isupper+3,f,c
  7255  003D8E  5006               	movf	??_isupper+3,w,c
  7256  003D90  E106               	bnz	u2900
  7257  003D92  0E1A               	movlw	26
  7258  003D94  5C05               	subwf	??_isupper+2,w,c
  7259  003D96  B0D8               	btfsc	status,0,c
  7260  003D98  D002               	goto	u2900
  7261  003D9A  0E01               	movlw	1
  7262  003D9C  D002               	goto	u2910
  7263  003D9E                     u2900:
  7264  003D9E  FFFF               	dw	65535	; assembler added errata NOP
  7265  003DA0  0E00               	movlw	0
  7266  003DA2                     u2910:
  7267  003DA2  FFFF               	dw	65535	; assembler added errata NOP
  7268  003DA4  6E01               	movwf	?_isupper,c
  7269  003DA6  6A02               	clrf	?_isupper+1,c
  7270  003DA8  0012               	return		;funcret
  7271  003DAA  FFFF               	dw	65535	; errata NOP
  7272  003DAC                     __end_of_isupper:
  7273                           	opt callstack 0
  7274                           
  7275 ;; *************** function _isalpha *****************
  7276 ;; Defined at:
  7277 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  c               2    0[COMRAM] int 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  2    0[COMRAM] int 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7291 ;;      Params:         2       0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0
  7293 ;;      Temps:          4       0       0       0       0       0       0
  7294 ;;      Totals:         6       0       0       0       0       0       0
  7295 ;;Total ram usage:        6 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    2
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_xtoa
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text26
  7306  003CC4                     __ptext26:
  7307                           	opt callstack 0
  7308  003CC4                     _isalpha:
  7309                           	opt callstack 0
  7310  003CC4  FFFF               	dw	65535	; assembler added errata NOP
  7311                           
  7312                           ;incstack = 0
  7313  003CC6  0E9F               	movlw	159
  7314  003CC8  6E03               	movwf	??_isalpha& (0+255),c
  7315  003CCA  0EFF               	movlw	255
  7316  003CCC  6E04               	movwf	(??_isalpha+1)& (0+255),c
  7317  003CCE  0E20               	movlw	32
  7318  003CD0  1001               	iorwf	isalpha@c,w,c
  7319  003CD2  6E05               	movwf	(??_isalpha+2)& (0+255),c
  7320  003CD4  0E00               	movlw	0
  7321  003CD6  1002               	iorwf	isalpha@c+1,w,c
  7322  003CD8  6E06               	movwf	(??_isalpha+3)& (0+255),c
  7323  003CDA  5003               	movf	??_isalpha,w,c
  7324  003CDC  2605               	addwf	??_isalpha+2,f,c
  7325  003CDE  5004               	movf	??_isalpha+1,w,c
  7326  003CE0  2206               	addwfc	??_isalpha+3,f,c
  7327  003CE2  5006               	movf	??_isalpha+3,w,c
  7328  003CE4  E106               	bnz	u2920
  7329  003CE6  0E1A               	movlw	26
  7330  003CE8  5C05               	subwf	??_isalpha+2,w,c
  7331  003CEA  B0D8               	btfsc	status,0,c
  7332  003CEC  D002               	goto	u2920
  7333  003CEE  0E01               	movlw	1
  7334  003CF0  D002               	goto	u2930
  7335  003CF2                     u2920:
  7336  003CF2  FFFF               	dw	65535	; assembler added errata NOP
  7337  003CF4  0E00               	movlw	0
  7338  003CF6                     u2930:
  7339  003CF6  FFFF               	dw	65535	; assembler added errata NOP
  7340  003CF8  6E01               	movwf	?_isalpha,c
  7341  003CFA  6A02               	clrf	?_isalpha+1,c
  7342  003CFC  0012               	return		;funcret
  7343  003CFE  FFFF               	dw	65535	; errata NOP
  7344  003D00                     __end_of_isalpha:
  7345                           	opt callstack 0
  7346                           
  7347 ;; *************** function _utoa *****************
  7348 ;; Defined at:
  7349 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7352 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7353 ;;  d               8   29[COMRAM] unsigned long long 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  n               8   49[COMRAM] unsigned long long 
  7356 ;;  i               2   57[COMRAM] int 
  7357 ;;  w               2   47[COMRAM] int 
  7358 ;;  p               2   45[COMRAM] int 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  2   27[COMRAM] int 
  7361 ;; Registers used:
  7362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7368 ;;      Params:        10       0       0       0       0       0       0
  7369 ;;      Locals:        14       0       0       0       0       0       0
  7370 ;;      Temps:          8       0       0       0       0       0       0
  7371 ;;      Totals:        32       0       0       0       0       0       0
  7372 ;;Total ram usage:       32 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    6
  7375 ;; This function calls:
  7376 ;;		___lodiv
  7377 ;;		___lomod
  7378 ;;		_pad
  7379 ;; This function is called by:
  7380 ;;		_vfpfcnvrt
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text27
  7385  0027A4                     __ptext27:
  7386                           	opt callstack 0
  7387  0027A4                     _utoa:
  7388                           	opt callstack 0
  7389  0027A4  FFFF               	dw	65535	; assembler added errata NOP
  7390                           
  7391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  7392                           
  7393                           ;incstack = 0
  7394  0027A6  0100               	movlb	0	; () banked
  7395  0027A8  AFCF               	btfss	(_prec+1)& (0+255),7,b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  7399  0027AA  93D0               	bcf	_flags& (0+255),1,b
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  7403  0027AC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  7404  0027AE  D005               	goto	u3570
  7405  0027B0  51CF               	movf	(_prec+1)& (0+255),w,b
  7406  0027B2  E109               	bnz	l476
  7407  0027B4  05CE               	decf	_prec& (0+255),w,b
  7408  0027B6  B0D8               	btfsc	status,0,c
  7409  0027B8  D006               	goto	l476
  7410  0027BA                     u3570:
  7411  0027BA  FFFF               	dw	65535	; assembler added errata NOP
  7412                           
  7413                           ; BSR set to: 0
  7414  0027BC  0E00               	movlw	0
  7415  0027BE  6E2F               	movwf	utoa@p+1,c
  7416  0027C0  0E01               	movlw	1
  7417  0027C2  6E2E               	movwf	utoa@p,c
  7418  0027C4  D005               	goto	l478
  7419  0027C6                     l476:
  7420  0027C6  FFFF               	dw	65535	; assembler added errata NOP
  7421                           
  7422                           ; BSR set to: 0
  7423  0027C8  C0CE  F02E         	movff	_prec,utoa@p
  7424  0027CC  C0CF  F02F         	movff	_prec+1,utoa@p+1
  7425  0027D0                     l478:
  7426  0027D0  FFFF               	dw	65535	; assembler added errata NOP
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  7430  0027D2  C0CC  F030         	movff	_width,utoa@w
  7431  0027D6  C0CD  F031         	movff	_width+1,utoa@w+1
  7432                           
  7433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  7434  0027DA  C01E  F032         	movff	utoa@d,utoa@n
  7435  0027DE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7436  0027E2  C020  F034         	movff	utoa@d+2,utoa@n+2
  7437  0027E6  C021  F035         	movff	utoa@d+3,utoa@n+3
  7438  0027EA  C022  F036         	movff	utoa@d+4,utoa@n+4
  7439  0027EE  C023  F037         	movff	utoa@d+5,utoa@n+5
  7440  0027F2  C024  F038         	movff	utoa@d+6,utoa@n+6
  7441  0027F6  C025  F039         	movff	utoa@d+7,utoa@n+7
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  7445  0027FA  0E00               	movlw	0
  7446  0027FC  6E3B               	movwf	utoa@i+1,c
  7447  0027FE  0E1F               	movlw	31
  7448  002800  6E3A               	movwf	utoa@i,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  7452  002802  0E00               	movlw	0
  7453  002804  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7454                           
  7455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7456  002806  D077               	goto	l3868
  7457  002808                     l3858:
  7458  002808  FFFF               	dw	65535	; assembler added errata NOP
  7459                           
  7460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  7461  00280A  063A               	decf	utoa@i,f,c
  7462  00280C  A0D8               	btfss	status,0,c
  7463  00280E  063B               	decf	utoa@i+1,f,c
  7464                           
  7465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  7466  002810  0ED5               	movlw	low _dbuf
  7467  002812  243A               	addwf	utoa@i,w,c
  7468  002814  6ED9               	movwf	fsr2l,c
  7469  002816  0E00               	movlw	high _dbuf
  7470  002818  203B               	addwfc	utoa@i+1,w,c
  7471  00281A  6EDA               	movwf	fsr2h,c
  7472  00281C  C032  F001         	movff	utoa@n,___lomod@dividend
  7473  002820  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7474  002824  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7475  002828  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7476  00282C  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7477  002830  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7478  002834  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7479  002838  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7480  00283C  0E0A               	movlw	10
  7481  00283E  6E09               	movwf	___lomod@divisor,c
  7482  002840  0E00               	movlw	0
  7483  002842  6E0A               	movwf	___lomod@divisor+1,c
  7484  002844  0E00               	movlw	0
  7485  002846  6E0B               	movwf	___lomod@divisor+2,c
  7486  002848  0E00               	movlw	0
  7487  00284A  6E0C               	movwf	___lomod@divisor+3,c
  7488  00284C  0E00               	movlw	0
  7489  00284E  6E0D               	movwf	___lomod@divisor+4,c
  7490  002850  0E00               	movlw	0
  7491  002852  6E0E               	movwf	___lomod@divisor+5,c
  7492  002854  0E00               	movlw	0
  7493  002856  6E0F               	movwf	___lomod@divisor+6,c
  7494  002858  0E00               	movlw	0
  7495  00285A  6E10               	movwf	___lomod@divisor+7,c
  7496  00285C  EC03  F01B         	call	___lomod	;wreg free
  7497  002860  C001  F026         	movff	?___lomod,??_utoa
  7498  002864  C002  F027         	movff	?___lomod+1,??_utoa+1
  7499  002868  C003  F028         	movff	?___lomod+2,??_utoa+2
  7500  00286C  C004  F029         	movff	?___lomod+3,??_utoa+3
  7501  002870  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7502  002874  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7503  002878  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7504  00287C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7505  002880  5026               	movf	??_utoa,w,c
  7506  002882  0F30               	addlw	48
  7507  002884  6EDF               	movwf	indf2,c
  7508                           
  7509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  7510  002886  062E               	decf	utoa@p,f,c
  7511  002888  A0D8               	btfss	status,0,c
  7512  00288A  062F               	decf	utoa@p+1,f,c
  7513                           
  7514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  7515  00288C  0630               	decf	utoa@w,f,c
  7516  00288E  A0D8               	btfss	status,0,c
  7517  002890  0631               	decf	utoa@w+1,f,c
  7518                           
  7519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  7520  002892  C032  F001         	movff	utoa@n,___lodiv@dividend
  7521  002896  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7522  00289A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7523  00289E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7524  0028A2  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7525  0028A6  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7526  0028AA  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7527  0028AE  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7528  0028B2  0E0A               	movlw	10
  7529  0028B4  6E09               	movwf	___lodiv@divisor,c
  7530  0028B6  0E00               	movlw	0
  7531  0028B8  6E0A               	movwf	___lodiv@divisor+1,c
  7532  0028BA  0E00               	movlw	0
  7533  0028BC  6E0B               	movwf	___lodiv@divisor+2,c
  7534  0028BE  0E00               	movlw	0
  7535  0028C0  6E0C               	movwf	___lodiv@divisor+3,c
  7536  0028C2  0E00               	movlw	0
  7537  0028C4  6E0D               	movwf	___lodiv@divisor+4,c
  7538  0028C6  0E00               	movlw	0
  7539  0028C8  6E0E               	movwf	___lodiv@divisor+5,c
  7540  0028CA  0E00               	movlw	0
  7541  0028CC  6E0F               	movwf	___lodiv@divisor+6,c
  7542  0028CE  0E00               	movlw	0
  7543  0028D0  6E10               	movwf	___lodiv@divisor+7,c
  7544  0028D2  EC65  F019         	call	___lodiv	;wreg free
  7545  0028D6  C001  F032         	movff	?___lodiv,utoa@n
  7546  0028DA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7547  0028DE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7548  0028E2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7549  0028E6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7550  0028EA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7551  0028EE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7552  0028F2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7553  0028F6                     l3868:
  7554  0028F6  FFFF               	dw	65535	; assembler added errata NOP
  7555                           
  7556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7557  0028F8  503A               	movf	utoa@i,w,c
  7558  0028FA  103B               	iorwf	utoa@i+1,w,c
  7559  0028FC  B4D8               	btfsc	status,2,c
  7560  0028FE  D01C               	goto	u3620
  7561  002900  5032               	movf	utoa@n,w,c
  7562  002902  1033               	iorwf	utoa@n+1,w,c
  7563  002904  1034               	iorwf	utoa@n+2,w,c
  7564  002906  1035               	iorwf	utoa@n+3,w,c
  7565  002908  1036               	iorwf	utoa@n+4,w,c
  7566  00290A  1037               	iorwf	utoa@n+5,w,c
  7567  00290C  1038               	iorwf	utoa@n+6,w,c
  7568  00290E  1039               	iorwf	utoa@n+7,w,c
  7569  002910  A4D8               	btfss	status,2,c
  7570  002912  D77A               	goto	l3858
  7571  002914  BE2F               	btfsc	utoa@p+1,7,c
  7572  002916  D005               	goto	u3600
  7573  002918  502F               	movf	utoa@p+1,w,c
  7574  00291A  E102               	bnz	u3601
  7575  00291C  042E               	decf	utoa@p,w,c
  7576  00291E  B0D8               	btfsc	status,0,c
  7577  002920                     u3601:
  7578  002920  D773               	goto	l3858
  7579  002922                     u3600:
  7580  002922  FFFF               	dw	65535	; assembler added errata NOP
  7581  002924  BE31               	btfsc	utoa@w+1,7,c
  7582  002926  D008               	goto	u3620
  7583  002928  5031               	movf	utoa@w+1,w,c
  7584  00292A  E103               	bnz	u3610
  7585  00292C  0430               	decf	utoa@w,w,c
  7586  00292E  A0D8               	btfss	status,0,c
  7587  002930  D003               	goto	u3620
  7588  002932                     u3610:
  7589  002932  0100               	movlb	0	; () banked
  7590  002934  B3D0               	btfsc	_flags& (0+255),1,b
  7591  002936  D768               	goto	l3858
  7592  002938                     u3620:
  7593  002938  FFFF               	dw	65535	; assembler added errata NOP
  7594                           
  7595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  7596  00293A  C01C  F011         	movff	utoa@fp,pad@fp
  7597  00293E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7598  002942  0ED5               	movlw	low _dbuf
  7599  002944  243A               	addwf	utoa@i,w,c
  7600  002946  6E13               	movwf	pad@buf,c
  7601  002948  0E00               	movlw	high _dbuf
  7602  00294A  203B               	addwfc	utoa@i+1,w,c
  7603  00294C  6E14               	movwf	pad@buf+1,c
  7604  00294E  C030  F015         	movff	utoa@w,pad@p
  7605  002952  C031  F016         	movff	utoa@w+1,pad@p+1
  7606  002956  ECB7  F01B         	call	_pad	;wreg free
  7607  00295A  C011  F01C         	movff	?_pad,?_utoa
  7608  00295E  C012  F01D         	movff	?_pad+1,?_utoa+1
  7609  002962  0012               	return		;funcret
  7610  002964  FFFF               	dw	65535	; errata NOP
  7611  002966                     __end_of_utoa:
  7612                           	opt callstack 0
  7613                           
  7614 ;; *************** function ___lomod *****************
  7615 ;; Defined at:
  7616 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  dividend        8    0[COMRAM] unsigned long long 
  7619 ;;  divisor         8    8[COMRAM] unsigned long long 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  counter         1   16[COMRAM] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  8    0[COMRAM] unsigned long long 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7631 ;;      Params:        16       0       0       0       0       0       0
  7632 ;;      Locals:         1       0       0       0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0
  7634 ;;      Totals:        17       0       0       0       0       0       0
  7635 ;;Total ram usage:       17 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    2
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_utoa
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text28
  7646  003606                     __ptext28:
  7647                           	opt callstack 0
  7648  003606                     ___lomod:
  7649                           	opt callstack 0
  7650  003606  FFFF               	dw	65535	; assembler added errata NOP
  7651                           
  7652                           ;incstack = 0
  7653  003608  5009               	movf	___lomod@divisor,w,c
  7654  00360A  100A               	iorwf	___lomod@divisor+1,w,c
  7655  00360C  100B               	iorwf	___lomod@divisor+2,w,c
  7656  00360E  100C               	iorwf	___lomod@divisor+3,w,c
  7657  003610  100D               	iorwf	___lomod@divisor+4,w,c
  7658  003612  100E               	iorwf	___lomod@divisor+5,w,c
  7659  003614  100F               	iorwf	___lomod@divisor+6,w,c
  7660  003616  1010               	iorwf	___lomod@divisor+7,w,c
  7661  003618  B4D8               	btfsc	status,2,c
  7662  00361A  D040               	goto	l1058
  7663  00361C  0E01               	movlw	1
  7664  00361E  6E11               	movwf	___lomod@counter,c
  7665  003620  D00B               	goto	l3658
  7666  003622                     l3656:
  7667  003622  FFFF               	dw	65535	; assembler added errata NOP
  7668  003624  90D8               	bcf	status,0,c
  7669  003626  3609               	rlcf	___lomod@divisor,f,c
  7670  003628  360A               	rlcf	___lomod@divisor+1,f,c
  7671  00362A  360B               	rlcf	___lomod@divisor+2,f,c
  7672  00362C  360C               	rlcf	___lomod@divisor+3,f,c
  7673  00362E  360D               	rlcf	___lomod@divisor+4,f,c
  7674  003630  360E               	rlcf	___lomod@divisor+5,f,c
  7675  003632  360F               	rlcf	___lomod@divisor+6,f,c
  7676  003634  3610               	rlcf	___lomod@divisor+7,f,c
  7677  003636  2A11               	incf	___lomod@counter,f,c
  7678  003638                     l3658:
  7679  003638  FFFF               	dw	65535	; assembler added errata NOP
  7680  00363A  AE10               	btfss	___lomod@divisor+7,7,c
  7681  00363C  D7F2               	goto	l3656
  7682  00363E                     u3170:
  7683  00363E  FFFF               	dw	65535	; assembler added errata NOP
  7684  003640  5009               	movf	___lomod@divisor,w,c
  7685  003642  5C01               	subwf	___lomod@dividend,w,c
  7686  003644  500A               	movf	___lomod@divisor+1,w,c
  7687  003646  5802               	subwfb	___lomod@dividend+1,w,c
  7688  003648  500B               	movf	___lomod@divisor+2,w,c
  7689  00364A  5803               	subwfb	___lomod@dividend+2,w,c
  7690  00364C  500C               	movf	___lomod@divisor+3,w,c
  7691  00364E  5804               	subwfb	___lomod@dividend+3,w,c
  7692  003650  500D               	movf	___lomod@divisor+4,w,c
  7693  003652  5805               	subwfb	___lomod@dividend+4,w,c
  7694  003654  500E               	movf	___lomod@divisor+5,w,c
  7695  003656  5806               	subwfb	___lomod@dividend+5,w,c
  7696  003658  500F               	movf	___lomod@divisor+6,w,c
  7697  00365A  5807               	subwfb	___lomod@dividend+6,w,c
  7698  00365C  5010               	movf	___lomod@divisor+7,w,c
  7699  00365E  5808               	subwfb	___lomod@dividend+7,w,c
  7700  003660  A0D8               	btfss	status,0,c
  7701  003662  D010               	goto	l3664
  7702  003664  5009               	movf	___lomod@divisor,w,c
  7703  003666  5E01               	subwf	___lomod@dividend,f,c
  7704  003668  500A               	movf	___lomod@divisor+1,w,c
  7705  00366A  5A02               	subwfb	___lomod@dividend+1,f,c
  7706  00366C  500B               	movf	___lomod@divisor+2,w,c
  7707  00366E  5A03               	subwfb	___lomod@dividend+2,f,c
  7708  003670  500C               	movf	___lomod@divisor+3,w,c
  7709  003672  5A04               	subwfb	___lomod@dividend+3,f,c
  7710  003674  500D               	movf	___lomod@divisor+4,w,c
  7711  003676  5A05               	subwfb	___lomod@dividend+4,f,c
  7712  003678  500E               	movf	___lomod@divisor+5,w,c
  7713  00367A  5A06               	subwfb	___lomod@dividend+5,f,c
  7714  00367C  500F               	movf	___lomod@divisor+6,w,c
  7715  00367E  5A07               	subwfb	___lomod@dividend+6,f,c
  7716  003680  5010               	movf	___lomod@divisor+7,w,c
  7717  003682  5A08               	subwfb	___lomod@dividend+7,f,c
  7718  003684                     l3664:
  7719  003684  FFFF               	dw	65535	; assembler added errata NOP
  7720  003686  90D8               	bcf	status,0,c
  7721  003688  3210               	rrcf	___lomod@divisor+7,f,c
  7722  00368A  320F               	rrcf	___lomod@divisor+6,f,c
  7723  00368C  320E               	rrcf	___lomod@divisor+5,f,c
  7724  00368E  320D               	rrcf	___lomod@divisor+4,f,c
  7725  003690  320C               	rrcf	___lomod@divisor+3,f,c
  7726  003692  320B               	rrcf	___lomod@divisor+2,f,c
  7727  003694  320A               	rrcf	___lomod@divisor+1,f,c
  7728  003696  3209               	rrcf	___lomod@divisor,f,c
  7729  003698  2E11               	decfsz	___lomod@counter,f,c
  7730  00369A  D7D1               	goto	u3170
  7731  00369C                     l1058:
  7732  00369C  FFFF               	dw	65535	; assembler added errata NOP
  7733  00369E  C001  F001         	movff	___lomod@dividend,?___lomod
  7734  0036A2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7735  0036A6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7736  0036AA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7737  0036AE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7738  0036B2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7739  0036B6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7740  0036BA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7741  0036BE  0012               	return		;funcret
  7742  0036C0  FFFF               	dw	65535	; errata NOP
  7743  0036C2                     __end_of___lomod:
  7744                           	opt callstack 0
  7745                           
  7746 ;; *************** function ___lodiv *****************
  7747 ;; Defined at:
  7748 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  dividend        8    0[COMRAM] unsigned long long 
  7751 ;;  divisor         8    8[COMRAM] unsigned long long 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  quotient        8   16[COMRAM] unsigned long long 
  7754 ;;  counter         1   24[COMRAM] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  8    0[COMRAM] unsigned long long 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7764 ;;      Params:        16       0       0       0       0       0       0
  7765 ;;      Locals:         9       0       0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0
  7767 ;;      Totals:        25       0       0       0       0       0       0
  7768 ;;Total ram usage:       25 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    2
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_utoa
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text29
  7779  0032CA                     __ptext29:
  7780                           	opt callstack 0
  7781  0032CA                     ___lodiv:
  7782                           	opt callstack 0
  7783  0032CA  FFFF               	dw	65535	; assembler added errata NOP
  7784                           
  7785                           ;incstack = 0
  7786  0032CC  EE20  F011         	lfsr	2,___lodiv@quotient
  7787  0032D0  0E07               	movlw	7
  7788  0032D2                     u3121:
  7789  0032D2  6ADE               	clrf	postinc2,c
  7790  0032D4  06E8               	decf	wreg,f,c
  7791  0032D6  E2FD               	bc	u3121
  7792  0032D8  5009               	movf	___lodiv@divisor,w,c
  7793  0032DA  100A               	iorwf	___lodiv@divisor+1,w,c
  7794  0032DC  100B               	iorwf	___lodiv@divisor+2,w,c
  7795  0032DE  100C               	iorwf	___lodiv@divisor+3,w,c
  7796  0032E0  100D               	iorwf	___lodiv@divisor+4,w,c
  7797  0032E2  100E               	iorwf	___lodiv@divisor+5,w,c
  7798  0032E4  100F               	iorwf	___lodiv@divisor+6,w,c
  7799  0032E6  1010               	iorwf	___lodiv@divisor+7,w,c
  7800  0032E8  B4D8               	btfsc	status,2,c
  7801  0032EA  D04A               	goto	l1048
  7802  0032EC  0E01               	movlw	1
  7803  0032EE  6E19               	movwf	___lodiv@counter,c
  7804  0032F0  D00B               	goto	l3638
  7805  0032F2                     l3636:
  7806  0032F2  FFFF               	dw	65535	; assembler added errata NOP
  7807  0032F4  90D8               	bcf	status,0,c
  7808  0032F6  3609               	rlcf	___lodiv@divisor,f,c
  7809  0032F8  360A               	rlcf	___lodiv@divisor+1,f,c
  7810  0032FA  360B               	rlcf	___lodiv@divisor+2,f,c
  7811  0032FC  360C               	rlcf	___lodiv@divisor+3,f,c
  7812  0032FE  360D               	rlcf	___lodiv@divisor+4,f,c
  7813  003300  360E               	rlcf	___lodiv@divisor+5,f,c
  7814  003302  360F               	rlcf	___lodiv@divisor+6,f,c
  7815  003304  3610               	rlcf	___lodiv@divisor+7,f,c
  7816  003306  2A19               	incf	___lodiv@counter,f,c
  7817  003308                     l3638:
  7818  003308  FFFF               	dw	65535	; assembler added errata NOP
  7819  00330A  AE10               	btfss	___lodiv@divisor+7,7,c
  7820  00330C  D7F2               	goto	l3636
  7821  00330E                     u3140:
  7822  00330E  FFFF               	dw	65535	; assembler added errata NOP
  7823  003310  90D8               	bcf	status,0,c
  7824  003312  3611               	rlcf	___lodiv@quotient,f,c
  7825  003314  3612               	rlcf	___lodiv@quotient+1,f,c
  7826  003316  3613               	rlcf	___lodiv@quotient+2,f,c
  7827  003318  3614               	rlcf	___lodiv@quotient+3,f,c
  7828  00331A  3615               	rlcf	___lodiv@quotient+4,f,c
  7829  00331C  3616               	rlcf	___lodiv@quotient+5,f,c
  7830  00331E  3617               	rlcf	___lodiv@quotient+6,f,c
  7831  003320  3618               	rlcf	___lodiv@quotient+7,f,c
  7832  003322  5009               	movf	___lodiv@divisor,w,c
  7833  003324  5C01               	subwf	___lodiv@dividend,w,c
  7834  003326  500A               	movf	___lodiv@divisor+1,w,c
  7835  003328  5802               	subwfb	___lodiv@dividend+1,w,c
  7836  00332A  500B               	movf	___lodiv@divisor+2,w,c
  7837  00332C  5803               	subwfb	___lodiv@dividend+2,w,c
  7838  00332E  500C               	movf	___lodiv@divisor+3,w,c
  7839  003330  5804               	subwfb	___lodiv@dividend+3,w,c
  7840  003332  500D               	movf	___lodiv@divisor+4,w,c
  7841  003334  5805               	subwfb	___lodiv@dividend+4,w,c
  7842  003336  500E               	movf	___lodiv@divisor+5,w,c
  7843  003338  5806               	subwfb	___lodiv@dividend+5,w,c
  7844  00333A  500F               	movf	___lodiv@divisor+6,w,c
  7845  00333C  5807               	subwfb	___lodiv@dividend+6,w,c
  7846  00333E  5010               	movf	___lodiv@divisor+7,w,c
  7847  003340  5808               	subwfb	___lodiv@dividend+7,w,c
  7848  003342  A0D8               	btfss	status,0,c
  7849  003344  D011               	goto	l3648
  7850  003346  5009               	movf	___lodiv@divisor,w,c
  7851  003348  5E01               	subwf	___lodiv@dividend,f,c
  7852  00334A  500A               	movf	___lodiv@divisor+1,w,c
  7853  00334C  5A02               	subwfb	___lodiv@dividend+1,f,c
  7854  00334E  500B               	movf	___lodiv@divisor+2,w,c
  7855  003350  5A03               	subwfb	___lodiv@dividend+2,f,c
  7856  003352  500C               	movf	___lodiv@divisor+3,w,c
  7857  003354  5A04               	subwfb	___lodiv@dividend+3,f,c
  7858  003356  500D               	movf	___lodiv@divisor+4,w,c
  7859  003358  5A05               	subwfb	___lodiv@dividend+4,f,c
  7860  00335A  500E               	movf	___lodiv@divisor+5,w,c
  7861  00335C  5A06               	subwfb	___lodiv@dividend+5,f,c
  7862  00335E  500F               	movf	___lodiv@divisor+6,w,c
  7863  003360  5A07               	subwfb	___lodiv@dividend+6,f,c
  7864  003362  5010               	movf	___lodiv@divisor+7,w,c
  7865  003364  5A08               	subwfb	___lodiv@dividend+7,f,c
  7866  003366  8011               	bsf	___lodiv@quotient,0,c
  7867  003368                     l3648:
  7868  003368  FFFF               	dw	65535	; assembler added errata NOP
  7869  00336A  90D8               	bcf	status,0,c
  7870  00336C  3210               	rrcf	___lodiv@divisor+7,f,c
  7871  00336E  320F               	rrcf	___lodiv@divisor+6,f,c
  7872  003370  320E               	rrcf	___lodiv@divisor+5,f,c
  7873  003372  320D               	rrcf	___lodiv@divisor+4,f,c
  7874  003374  320C               	rrcf	___lodiv@divisor+3,f,c
  7875  003376  320B               	rrcf	___lodiv@divisor+2,f,c
  7876  003378  320A               	rrcf	___lodiv@divisor+1,f,c
  7877  00337A  3209               	rrcf	___lodiv@divisor,f,c
  7878  00337C  2E19               	decfsz	___lodiv@counter,f,c
  7879  00337E  D7C7               	goto	u3140
  7880  003380                     l1048:
  7881  003380  FFFF               	dw	65535	; assembler added errata NOP
  7882  003382  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7883  003386  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7884  00338A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7885  00338E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7886  003392  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7887  003396  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7888  00339A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7889  00339E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7890  0033A2  0012               	return		;funcret
  7891  0033A4  FFFF               	dw	65535	; errata NOP
  7892  0033A6                     __end_of___lodiv:
  7893                           	opt callstack 0
  7894                           
  7895 ;; *************** function _strncmp *****************
  7896 ;; Defined at:
  7897 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7900 ;;		 -> STR_2(3), STR_1(4), 
  7901 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7902 ;;		 -> STR_144(3), STR_140(3), STR_135(3), STR_131(3), 
  7903 ;;		 -> STR_126(3), STR_122(3), STR_117(4), STR_113(4), 
  7904 ;;		 -> STR_108(3), STR_103(3), STR_98(3), STR_93(4), 
  7905 ;;		 -> STR_88(3), STR_83(3), STR_78(3), STR_73(4), 
  7906 ;;		 -> STR_68(3), STR_63(3), STR_58(3), STR_53(4), 
  7907 ;;		 -> STR_48(3), STR_44(3), STR_39(3), STR_35(3), 
  7908 ;;		 -> STR_30(3), STR_26(3), STR_21(4), STR_17(4), 
  7909 ;;  n               2    4[COMRAM] unsigned int 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7912 ;;		 -> STR_144(3), STR_140(3), STR_135(3), STR_131(3), 
  7913 ;;		 -> STR_126(3), STR_122(3), STR_117(4), STR_113(4), 
  7914 ;;		 -> STR_108(3), STR_103(3), STR_98(3), STR_93(4), 
  7915 ;;		 -> STR_88(3), STR_83(3), STR_78(3), STR_73(4), 
  7916 ;;		 -> STR_68(3), STR_63(3), STR_58(3), STR_53(4), 
  7917 ;;		 -> STR_48(3), STR_44(3), STR_39(3), STR_35(3), 
  7918 ;;		 -> STR_30(3), STR_26(3), STR_21(4), STR_17(4), 
  7919 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7920 ;;		 -> STR_2(3), STR_1(4), 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    0[COMRAM] int 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7930 ;;      Params:         6       0       0       0       0       0       0
  7931 ;;      Locals:         4       0       0       0       0       0       0
  7932 ;;      Temps:          1       0       0       0       0       0       0
  7933 ;;      Totals:        11       0       0       0       0       0       0
  7934 ;;Total ram usage:       11 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    2
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_vfpfcnvrt
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text30
  7945  003544                     __ptext30:
  7946                           	opt callstack 0
  7947  003544                     _strncmp:
  7948                           	opt callstack 0
  7949  003544  FFFF               	dw	65535	; assembler added errata NOP
  7950                           
  7951                           ;incstack = 0
  7952  003546  C001  F008         	movff	strncmp@_l,strncmp@l
  7953  00354A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7954  00354E  C003  F00A         	movff	strncmp@_r,strncmp@r
  7955  003552  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7956  003556  0605               	decf	strncmp@n,f,c
  7957  003558  A0D8               	btfss	status,0,c
  7958  00355A  0606               	decf	strncmp@n+1,f,c
  7959  00355C  2805               	incf	strncmp@n,w,c
  7960  00355E  E110               	bnz	l3998
  7961  003560  2806               	incf	strncmp@n+1,w,c
  7962  003562  A4D8               	btfss	status,2,c
  7963  003564  D00D               	goto	l3998
  7964  003566  0E00               	movlw	0
  7965  003568  6E02               	movwf	?_strncmp+1,c
  7966  00356A  0E00               	movlw	0
  7967  00356C  6E01               	movwf	?_strncmp,c
  7968  00356E  D048               	goto	l1416
  7969  003570                     l3996:
  7970  003570  FFFF               	dw	65535	; assembler added errata NOP
  7971  003572  4A08               	infsnz	strncmp@l,f,c
  7972  003574  2A09               	incf	strncmp@l+1,f,c
  7973  003576  4A0A               	infsnz	strncmp@r,f,c
  7974  003578  2A0B               	incf	strncmp@r+1,f,c
  7975  00357A  0605               	decf	strncmp@n,f,c
  7976  00357C  A0D8               	btfss	status,0,c
  7977  00357E  0606               	decf	strncmp@n+1,f,c
  7978  003580                     l3998:
  7979  003580  FFFF               	dw	65535	; assembler added errata NOP
  7980  003582  C008  FFF6         	movff	strncmp@l,tblptrl
  7981  003586  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7982  00358A                     	if	0	;tblptru may be non-zero
  7983  00358A                     	endif
  7984  00358A                     	if	0	;tblptru may be non-zero
  7985  00358A                     	endif
  7986  00358A  0008               	tblrd		*
  7987  00358C  FFFF               	dw	65535	; errata NOP
  7988  00358E  50F5               	movf	tablat,w,c
  7989  003590  0900               	iorlw	0
  7990  003592  B4D8               	btfsc	status,2,c
  7991  003594  D020               	goto	u3910
  7992  003596  C00A  FFF6         	movff	strncmp@r,tblptrl
  7993  00359A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7994  00359E                     	if	0	;tblptru may be non-zero
  7995  00359E                     	endif
  7996  00359E                     	if	0	;tblptru may be non-zero
  7997  00359E                     	endif
  7998  00359E  0008               	tblrd		*
  7999  0035A0  FFFF               	dw	65535	; errata NOP
  8000  0035A2  50F5               	movf	tablat,w,c
  8001  0035A4  0900               	iorlw	0
  8002  0035A6  B4D8               	btfsc	status,2,c
  8003  0035A8  D016               	goto	u3910
  8004  0035AA  5005               	movf	strncmp@n,w,c
  8005  0035AC  1006               	iorwf	strncmp@n+1,w,c
  8006  0035AE  B4D8               	btfsc	status,2,c
  8007  0035B0  D012               	goto	u3910
  8008  0035B2  C008  FFF6         	movff	strncmp@l,tblptrl
  8009  0035B6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8010  0035BA                     	if	0	;tblptru may be non-zero
  8011  0035BA                     	endif
  8012  0035BA                     	if	0	;tblptru may be non-zero
  8013  0035BA                     	endif
  8014  0035BA  0008               	tblrd		*
  8015  0035BC  FFFF               	dw	65535	; errata NOP
  8016  0035BE  CFF5 F007          	movff	tablat,??_strncmp
  8017  0035C2  C00A  FFF6         	movff	strncmp@r,tblptrl
  8018  0035C6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8019  0035CA                     	if	0	;tblptru may be non-zero
  8020  0035CA                     	endif
  8021  0035CA                     	if	0	;tblptru may be non-zero
  8022  0035CA                     	endif
  8023  0035CA  0008               	tblrd		*
  8024  0035CC  FFFF               	dw	65535	; errata NOP
  8025  0035CE  50F5               	movf	tablat,w,c
  8026  0035D0  1807               	xorwf	??_strncmp,w,c
  8027  0035D2  B4D8               	btfsc	status,2,c
  8028  0035D4  D7CD               	goto	l3996
  8029  0035D6                     u3910:
  8030  0035D6  FFFF               	dw	65535	; assembler added errata NOP
  8031  0035D8  C008  FFF6         	movff	strncmp@l,tblptrl
  8032  0035DC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8033  0035E0                     	if	0	;tblptru may be non-zero
  8034  0035E0                     	endif
  8035  0035E0                     	if	0	;tblptru may be non-zero
  8036  0035E0                     	endif
  8037  0035E0  0008               	tblrd		*
  8038  0035E2  FFFF               	dw	65535	; errata NOP
  8039  0035E4  CFF5 F007          	movff	tablat,??_strncmp
  8040  0035E8  C00A  FFF6         	movff	strncmp@r,tblptrl
  8041  0035EC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8042  0035F0                     	if	0	;tblptru may be non-zero
  8043  0035F0                     	endif
  8044  0035F0                     	if	0	;tblptru may be non-zero
  8045  0035F0                     	endif
  8046  0035F0  0008               	tblrd		*
  8047  0035F2  FFFF               	dw	65535	; errata NOP
  8048  0035F4  50F5               	movf	tablat,w,c
  8049  0035F6  5C07               	subwf	??_strncmp,w,c
  8050  0035F8  6E01               	movwf	?_strncmp,c
  8051  0035FA  6A02               	clrf	?_strncmp+1,c
  8052  0035FC  A0D8               	btfss	status,0,c
  8053  0035FE  0602               	decf	?_strncmp+1,f,c
  8054  003600                     l1416:
  8055  003600  FFFF               	dw	65535	; assembler added errata NOP
  8056  003602  0012               	return		;funcret
  8057  003604  FFFF               	dw	65535	; errata NOP
  8058  003606                     __end_of_strncmp:
  8059                           	opt callstack 0
  8060                           
  8061 ;; *************** function _stoa *****************
  8062 ;; Defined at:
  8063 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8066 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8067 ;;  s               2   11[COMRAM] PTR unsigned char 
  8068 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8071 ;;  l               2   29[COMRAM] int 
  8072 ;;  p               2   27[COMRAM] int 
  8073 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8074 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  8075 ;;  w               2   23[COMRAM] int 
  8076 ;;  i               2   21[COMRAM] int 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  2    9[COMRAM] int 
  8079 ;; Registers used:
  8080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8086 ;;      Params:         4       0       0       0       0       0       0
  8087 ;;      Locals:        17       0       0       0       0       0       0
  8088 ;;      Temps:          1       0       0       0       0       0       0
  8089 ;;      Totals:        22       0       0       0       0       0       0
  8090 ;;Total ram usage:       22 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    4
  8093 ;; This function calls:
  8094 ;;		_fputc
  8095 ;;		_strlen
  8096 ;; This function is called by:
  8097 ;;		_vfpfcnvrt
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text31
  8102  002F1E                     __ptext31:
  8103                           	opt callstack 0
  8104  002F1E                     _stoa:
  8105                           	opt callstack 0
  8106  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  8107                           
  8108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8109                           
  8110                           ;incstack = 0
  8111  002F20  EE20  F0F5         	lfsr	2,stoa@F1152
  8112  002F24  EE10  F00F         	lfsr	1,stoa@nuls
  8113  002F28  0E06               	movlw	6
  8114  002F2A                     u3471:
  8115  002F2A  CFDB FFE3          	movff	plusw2,plusw1
  8116  002F2E  06E8               	decf	wreg,f,c
  8117  002F30  E2FC               	bc	u3471
  8118                           
  8119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8120  002F32  C00C  F01A         	movff	stoa@s,stoa@cp
  8121  002F36  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8122                           
  8123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8124  002F3A  501A               	movf	stoa@cp,w,c
  8125  002F3C  101B               	iorwf	stoa@cp+1,w,c
  8126  002F3E  A4D8               	btfss	status,2,c
  8127  002F40  D004               	goto	l3812
  8128                           
  8129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8130  002F42  0E0F               	movlw	low stoa@nuls
  8131  002F44  6E1A               	movwf	stoa@cp,c
  8132  002F46  0E00               	movlw	high stoa@nuls
  8133  002F48  6E1B               	movwf	stoa@cp+1,c
  8134  002F4A                     l3812:
  8135  002F4A  FFFF               	dw	65535	; assembler added errata NOP
  8136                           
  8137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8138  002F4C  C01A  F001         	movff	stoa@cp,strlen@s
  8139  002F50  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8140  002F54  ECF2  F01E         	call	_strlen	;wreg free
  8141  002F58  C001  F01E         	movff	?_strlen,stoa@l
  8142  002F5C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8143                           
  8144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8145  002F60  C0CE  F01C         	movff	_prec,stoa@p
  8146  002F64  C0CF  F01D         	movff	_prec+1,stoa@p+1
  8147                           
  8148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8149  002F68  BE1D               	btfsc	stoa@p+1,7,c
  8150  002F6A  D00E               	goto	l457
  8151  002F6C  501E               	movf	stoa@l,w,c
  8152  002F6E  5C1C               	subwf	stoa@p,w,c
  8153  002F70  501D               	movf	stoa@p+1,w,c
  8154  002F72  0A80               	xorlw	128
  8155  002F74  6E0E               	movwf	??_stoa& (0+255),c
  8156  002F76  501F               	movf	stoa@l+1,w,c
  8157  002F78  0A80               	xorlw	128
  8158  002F7A  580E               	subwfb	??_stoa& (0+255),w,c
  8159  002F7C  B0D8               	btfsc	status,0,c
  8160  002F7E  D004               	goto	l457
  8161  002F80  C01C  F01E         	movff	stoa@p,stoa@l
  8162  002F84  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8163  002F88                     l457:
  8164  002F88  FFFF               	dw	65535	; assembler added errata NOP
  8165                           
  8166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8167  002F8A  C01E  F01C         	movff	stoa@l,stoa@p
  8168  002F8E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8169                           
  8170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8171  002F92  C0CC  F018         	movff	_width,stoa@w
  8172  002F96  C0CD  F019         	movff	_width+1,stoa@w+1
  8173                           
  8174                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8175  002F9A  0100               	movlb	0	; () banked
  8176  002F9C  A1D0               	btfss	_flags& (0+255),0,b
  8177  002F9E  D00E               	goto	l3826
  8178  002FA0  D018               	goto	u3520
  8179  002FA2                     l3822:
  8180  002FA2  FFFF               	dw	65535	; assembler added errata NOP
  8181                           
  8182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8183  002FA4  0E00               	movlw	0
  8184  002FA6  6E02               	movwf	fputc@c+1,c
  8185  002FA8  0E20               	movlw	32
  8186  002FAA  6E01               	movwf	fputc@c,c
  8187  002FAC  C00A  F003         	movff	stoa@fp,fputc@fp
  8188  002FB0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8189  002FB4  EC61  F01B         	call	_fputc	;wreg free
  8190                           
  8191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8192  002FB8  4A1E               	infsnz	stoa@l,f,c
  8193  002FBA  2A1F               	incf	stoa@l+1,f,c
  8194  002FBC                     l3826:
  8195  002FBC  FFFF               	dw	65535	; assembler added errata NOP
  8196                           
  8197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8198  002FBE  5018               	movf	stoa@w,w,c
  8199  002FC0  5C1E               	subwf	stoa@l,w,c
  8200  002FC2  501F               	movf	stoa@l+1,w,c
  8201  002FC4  0A80               	xorlw	128
  8202  002FC6  6E0E               	movwf	??_stoa& (0+255),c
  8203  002FC8  5019               	movf	stoa@w+1,w,c
  8204  002FCA  0A80               	xorlw	128
  8205  002FCC  580E               	subwfb	??_stoa& (0+255),w,c
  8206  002FCE  A0D8               	btfss	status,0,c
  8207  002FD0  D7E8               	goto	l3822
  8208  002FD2                     u3520:
  8209  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  8210                           
  8211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8212  002FD4  0E00               	movlw	0
  8213  002FD6  6E17               	movwf	stoa@i+1,c
  8214  002FD8  0E00               	movlw	0
  8215  002FDA  6E16               	movwf	stoa@i,c
  8216                           
  8217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8218  002FDC  D014               	goto	l3836
  8219  002FDE                     l3830:
  8220  002FDE  FFFF               	dw	65535	; assembler added errata NOP
  8221                           
  8222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8223  002FE0  C01A  FFD9         	movff	stoa@cp,fsr2l
  8224  002FE4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8225  002FE8  50DF               	movf	indf2,w,c
  8226  002FEA  6E0E               	movwf	??_stoa& (0+255),c
  8227  002FEC  500E               	movf	??_stoa,w,c
  8228  002FEE  6E01               	movwf	fputc@c,c
  8229  002FF0  6A02               	clrf	fputc@c+1,c
  8230  002FF2  C00A  F003         	movff	stoa@fp,fputc@fp
  8231  002FF6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8232  002FFA  EC61  F01B         	call	_fputc	;wreg free
  8233                           
  8234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8235  002FFE  4A1A               	infsnz	stoa@cp,f,c
  8236  003000  2A1B               	incf	stoa@cp+1,f,c
  8237                           
  8238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8239  003002  4A16               	infsnz	stoa@i,f,c
  8240  003004  2A17               	incf	stoa@i+1,f,c
  8241  003006                     l3836:
  8242  003006  FFFF               	dw	65535	; assembler added errata NOP
  8243                           
  8244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8245  003008  501C               	movf	stoa@p,w,c
  8246  00300A  5C16               	subwf	stoa@i,w,c
  8247  00300C  5017               	movf	stoa@i+1,w,c
  8248  00300E  0A80               	xorlw	128
  8249  003010  6E0E               	movwf	??_stoa& (0+255),c
  8250  003012  501D               	movf	stoa@p+1,w,c
  8251  003014  0A80               	xorlw	128
  8252  003016  580E               	subwfb	??_stoa& (0+255),w,c
  8253  003018  A0D8               	btfss	status,0,c
  8254  00301A  D7E1               	goto	l3830
  8255                           
  8256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8257  00301C  0100               	movlb	0	; () banked
  8258  00301E  B1D0               	btfsc	_flags& (0+255),0,b
  8259  003020  D00E               	goto	l3844
  8260  003022  D018               	goto	u3550
  8261  003024                     l3840:
  8262  003024  FFFF               	dw	65535	; assembler added errata NOP
  8263                           
  8264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8265  003026  0E00               	movlw	0
  8266  003028  6E02               	movwf	fputc@c+1,c
  8267  00302A  0E20               	movlw	32
  8268  00302C  6E01               	movwf	fputc@c,c
  8269  00302E  C00A  F003         	movff	stoa@fp,fputc@fp
  8270  003032  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8271  003036  EC61  F01B         	call	_fputc	;wreg free
  8272                           
  8273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8274  00303A  4A1E               	infsnz	stoa@l,f,c
  8275  00303C  2A1F               	incf	stoa@l+1,f,c
  8276  00303E                     l3844:
  8277  00303E  FFFF               	dw	65535	; assembler added errata NOP
  8278                           
  8279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8280  003040  5018               	movf	stoa@w,w,c
  8281  003042  5C1E               	subwf	stoa@l,w,c
  8282  003044  501F               	movf	stoa@l+1,w,c
  8283  003046  0A80               	xorlw	128
  8284  003048  6E0E               	movwf	??_stoa& (0+255),c
  8285  00304A  5019               	movf	stoa@w+1,w,c
  8286  00304C  0A80               	xorlw	128
  8287  00304E  580E               	subwfb	??_stoa& (0+255),w,c
  8288  003050  A0D8               	btfss	status,0,c
  8289  003052  D7E8               	goto	l3840
  8290  003054                     u3550:
  8291  003054  FFFF               	dw	65535	; assembler added errata NOP
  8292                           
  8293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8294                           
  8295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  8296  003056  C01E  F00A         	movff	stoa@l,?_stoa
  8297  00305A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8298  00305E  0012               	return		;funcret
  8299  003060  FFFF               	dw	65535	; errata NOP
  8300  003062                     __end_of_stoa:
  8301                           	opt callstack 0
  8302                           
  8303 ;; *************** function _otoa *****************
  8304 ;; Defined at:
  8305 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8308 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8309 ;;  d               8   29[COMRAM] unsigned long long 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  n               8   51[COMRAM] unsigned long long 
  8312 ;;  i               2   59[COMRAM] int 
  8313 ;;  w               2   49[COMRAM] int 
  8314 ;;  t               2   47[COMRAM] int 
  8315 ;;  p               2   45[COMRAM] int 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  2   27[COMRAM] int 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8325 ;;      Params:        10       0       0       0       0       0       0
  8326 ;;      Locals:        16       0       0       0       0       0       0
  8327 ;;      Temps:          8       0       0       0       0       0       0
  8328 ;;      Totals:        34       0       0       0       0       0       0
  8329 ;;Total ram usage:       34 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    6
  8332 ;; This function calls:
  8333 ;;		_pad
  8334 ;; This function is called by:
  8335 ;;		_vfpfcnvrt
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text32
  8340  002966                     __ptext32:
  8341                           	opt callstack 0
  8342  002966                     _otoa:
  8343                           	opt callstack 0
  8344  002966  FFFF               	dw	65535	; assembler added errata NOP
  8345                           
  8346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  8347                           
  8348                           ;incstack = 0
  8349  002968  0100               	movlb	0	; () banked
  8350  00296A  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  8354  00296C  93D0               	bcf	_flags& (0+255),1,b
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  8358  00296E  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8359  002970  D005               	goto	u3380
  8360  002972  51CF               	movf	(_prec+1)& (0+255),w,b
  8361  002974  E109               	bnz	l437
  8362  002976  05CE               	decf	_prec& (0+255),w,b
  8363  002978  B0D8               	btfsc	status,0,c
  8364  00297A  D006               	goto	l437
  8365  00297C                     u3380:
  8366  00297C  FFFF               	dw	65535	; assembler added errata NOP
  8367                           
  8368                           ; BSR set to: 0
  8369  00297E  0E00               	movlw	0
  8370  002980  6E2F               	movwf	otoa@p+1,c
  8371  002982  0E01               	movlw	1
  8372  002984  6E2E               	movwf	otoa@p,c
  8373  002986  D005               	goto	l439
  8374  002988                     l437:
  8375  002988  FFFF               	dw	65535	; assembler added errata NOP
  8376                           
  8377                           ; BSR set to: 0
  8378  00298A  C0CE  F02E         	movff	_prec,otoa@p
  8379  00298E  C0CF  F02F         	movff	_prec+1,otoa@p+1
  8380  002992                     l439:
  8381  002992  FFFF               	dw	65535	; assembler added errata NOP
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  8385  002994  C0CC  F032         	movff	_width,otoa@w
  8386  002998  C0CD  F033         	movff	_width+1,otoa@w+1
  8387                           
  8388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  8389  00299C  C01E  F034         	movff	otoa@d,otoa@n
  8390  0029A0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8391  0029A4  C020  F036         	movff	otoa@d+2,otoa@n+2
  8392  0029A8  C021  F037         	movff	otoa@d+3,otoa@n+3
  8393  0029AC  C022  F038         	movff	otoa@d+4,otoa@n+4
  8394  0029B0  C023  F039         	movff	otoa@d+5,otoa@n+5
  8395  0029B4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8396  0029B8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  8400  0029BC  0E00               	movlw	0
  8401  0029BE  6E3D               	movwf	otoa@i+1,c
  8402  0029C0  0E1F               	movlw	31
  8403  0029C2  6E3C               	movwf	otoa@i,c
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  8407  0029C4  0E00               	movlw	0
  8408  0029C6  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  8412  0029C8  0E00               	movlw	0
  8413  0029CA  6E31               	movwf	otoa@t+1,c
  8414  0029CC  0E00               	movlw	0
  8415  0029CE  6E30               	movwf	otoa@t,c
  8416                           
  8417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8418  0029D0  D046               	goto	l3782
  8419  0029D2                     l3770:
  8420  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  8421                           
  8422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  8423  0029D4  063C               	decf	otoa@i,f,c
  8424  0029D6  A0D8               	btfss	status,0,c
  8425  0029D8  063D               	decf	otoa@i+1,f,c
  8426                           
  8427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  8428  0029DA  0E07               	movlw	7
  8429  0029DC  1434               	andwf	otoa@n,w,c
  8430  0029DE  6E30               	movwf	otoa@t,c
  8431  0029E0  6A31               	clrf	otoa@t+1,c
  8432                           
  8433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  8434  0029E2  0ED5               	movlw	low _dbuf
  8435  0029E4  243C               	addwf	otoa@i,w,c
  8436  0029E6  6ED9               	movwf	fsr2l,c
  8437  0029E8  0E00               	movlw	high _dbuf
  8438  0029EA  203D               	addwfc	otoa@i+1,w,c
  8439  0029EC  6EDA               	movwf	fsr2h,c
  8440  0029EE  5030               	movf	otoa@t,w,c
  8441  0029F0  0F30               	addlw	48
  8442  0029F2  6EDF               	movwf	indf2,c
  8443                           
  8444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  8445  0029F4  062E               	decf	otoa@p,f,c
  8446  0029F6  A0D8               	btfss	status,0,c
  8447  0029F8  062F               	decf	otoa@p+1,f,c
  8448                           
  8449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  8450  0029FA  0632               	decf	otoa@w,f,c
  8451  0029FC  A0D8               	btfss	status,0,c
  8452  0029FE  0633               	decf	otoa@w+1,f,c
  8453                           
  8454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  8455  002A00  C034  F026         	movff	otoa@n,??_otoa
  8456  002A04  C035  F027         	movff	otoa@n+1,??_otoa+1
  8457  002A08  C036  F028         	movff	otoa@n+2,??_otoa+2
  8458  002A0C  C037  F029         	movff	otoa@n+3,??_otoa+3
  8459  002A10  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8460  002A14  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8461  002A18  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8462  002A1C  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8463  002A20  0E04               	movlw	4
  8464  002A22  D00A               	goto	u3390
  8465  002A24                     u3395:
  8466  002A24  FFFF               	dw	65535	; assembler added errata NOP
  8467  002A26  90D8               	bcf	status,0,c
  8468  002A28  322D               	rrcf	??_otoa+7,f,c
  8469  002A2A  322C               	rrcf	??_otoa+6,f,c
  8470  002A2C  322B               	rrcf	??_otoa+5,f,c
  8471  002A2E  322A               	rrcf	??_otoa+4,f,c
  8472  002A30  3229               	rrcf	??_otoa+3,f,c
  8473  002A32  3228               	rrcf	??_otoa+2,f,c
  8474  002A34  3227               	rrcf	??_otoa+1,f,c
  8475  002A36  3226               	rrcf	??_otoa,f,c
  8476  002A38                     u3390:
  8477  002A38  FFFF               	dw	65535	; assembler added errata NOP
  8478  002A3A  2EE8               	decfsz	wreg,f,c
  8479  002A3C  D7F3               	goto	u3395
  8480  002A3E  C026  F034         	movff	??_otoa,otoa@n
  8481  002A42  C027  F035         	movff	??_otoa+1,otoa@n+1
  8482  002A46  C028  F036         	movff	??_otoa+2,otoa@n+2
  8483  002A4A  C029  F037         	movff	??_otoa+3,otoa@n+3
  8484  002A4E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8485  002A52  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8486  002A56  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8487  002A5A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8488  002A5E                     l3782:
  8489  002A5E  FFFF               	dw	65535	; assembler added errata NOP
  8490                           
  8491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8492  002A60  BE3D               	btfsc	otoa@i+1,7,c
  8493  002A62  D021               	goto	u3440
  8494  002A64  503D               	movf	otoa@i+1,w,c
  8495  002A66  E103               	bnz	u3400
  8496  002A68  043C               	decf	otoa@i,w,c
  8497  002A6A  A0D8               	btfss	status,0,c
  8498  002A6C  D01C               	goto	u3440
  8499  002A6E                     u3400:
  8500  002A6E  5034               	movf	otoa@n,w,c
  8501  002A70  1035               	iorwf	otoa@n+1,w,c
  8502  002A72  1036               	iorwf	otoa@n+2,w,c
  8503  002A74  1037               	iorwf	otoa@n+3,w,c
  8504  002A76  1038               	iorwf	otoa@n+4,w,c
  8505  002A78  1039               	iorwf	otoa@n+5,w,c
  8506  002A7A  103A               	iorwf	otoa@n+6,w,c
  8507  002A7C  103B               	iorwf	otoa@n+7,w,c
  8508  002A7E  A4D8               	btfss	status,2,c
  8509  002A80  D7A8               	goto	l3770
  8510  002A82  BE2F               	btfsc	otoa@p+1,7,c
  8511  002A84  D005               	goto	u3420
  8512  002A86  502F               	movf	otoa@p+1,w,c
  8513  002A88  E1A4               	bnz	l3770
  8514  002A8A  042E               	decf	otoa@p,w,c
  8515  002A8C  B0D8               	btfsc	status,0,c
  8516  002A8E  D7A1               	goto	l3770
  8517  002A90                     u3420:
  8518  002A90  FFFF               	dw	65535	; assembler added errata NOP
  8519  002A92  BE33               	btfsc	otoa@w+1,7,c
  8520  002A94  D008               	goto	u3440
  8521  002A96  5033               	movf	otoa@w+1,w,c
  8522  002A98  E103               	bnz	u3430
  8523  002A9A  0432               	decf	otoa@w,w,c
  8524  002A9C  A0D8               	btfss	status,0,c
  8525  002A9E  D003               	goto	u3440
  8526  002AA0                     u3430:
  8527  002AA0  0100               	movlb	0	; () banked
  8528  002AA2  B3D0               	btfsc	_flags& (0+255),1,b
  8529  002AA4  D796               	goto	l3770
  8530  002AA6                     u3440:
  8531  002AA6  FFFF               	dw	65535	; assembler added errata NOP
  8532                           
  8533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  8534  002AA8  0100               	movlb	0	; () banked
  8535  002AAA  A9D0               	btfss	_flags& (0+255),4,b
  8536  002AAC  D012               	goto	l3800
  8537                           
  8538                           ; BSR set to: 0
  8539  002AAE  5030               	movf	otoa@t,w,c
  8540  002AB0  1031               	iorwf	otoa@t+1,w,c
  8541  002AB2  B4D8               	btfsc	status,2,c
  8542  002AB4  D00E               	goto	l3800
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  8546  002AB6  063C               	decf	otoa@i,f,c
  8547  002AB8  A0D8               	btfss	status,0,c
  8548  002ABA  063D               	decf	otoa@i+1,f,c
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  8552  002ABC  0ED5               	movlw	low _dbuf
  8553  002ABE  243C               	addwf	otoa@i,w,c
  8554  002AC0  6ED9               	movwf	fsr2l,c
  8555  002AC2  0E00               	movlw	high _dbuf
  8556  002AC4  203D               	addwfc	otoa@i+1,w,c
  8557  002AC6  6EDA               	movwf	fsr2h,c
  8558  002AC8  0E30               	movlw	48
  8559  002ACA  6EDF               	movwf	indf2,c
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  8563  002ACC  0632               	decf	otoa@w,f,c
  8564  002ACE  A0D8               	btfss	status,0,c
  8565  002AD0  0633               	decf	otoa@w+1,f,c
  8566  002AD2                     l3800:
  8567  002AD2  FFFF               	dw	65535	; assembler added errata NOP
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  8571  002AD4  C01C  F011         	movff	otoa@fp,pad@fp
  8572  002AD8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8573  002ADC  0ED5               	movlw	low _dbuf
  8574  002ADE  243C               	addwf	otoa@i,w,c
  8575  002AE0  6E13               	movwf	pad@buf,c
  8576  002AE2  0E00               	movlw	high _dbuf
  8577  002AE4  203D               	addwfc	otoa@i+1,w,c
  8578  002AE6  6E14               	movwf	pad@buf+1,c
  8579  002AE8  C032  F015         	movff	otoa@w,pad@p
  8580  002AEC  C033  F016         	movff	otoa@w+1,pad@p+1
  8581  002AF0  ECB7  F01B         	call	_pad	;wreg free
  8582  002AF4  C011  F01C         	movff	?_pad,?_otoa
  8583  002AF8  C012  F01D         	movff	?_pad+1,?_otoa+1
  8584  002AFC  0012               	return		;funcret
  8585  002AFE  FFFF               	dw	65535	; errata NOP
  8586  002B00                     __end_of_otoa:
  8587                           	opt callstack 0
  8588                           
  8589 ;; *************** function _dtoa *****************
  8590 ;; Defined at:
  8591 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8594 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8595 ;;  d               8   29[COMRAM] long long 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  n               8   53[COMRAM] long long 
  8598 ;;  i               2   61[COMRAM] int 
  8599 ;;  s               2   51[COMRAM] int 
  8600 ;;  w               2   49[COMRAM] int 
  8601 ;;  p               2   47[COMRAM] int 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2   27[COMRAM] int 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8611 ;;      Params:        10       0       0       0       0       0       0
  8612 ;;      Locals:        18       0       0       0       0       0       0
  8613 ;;      Temps:          8       0       0       0       0       0       0
  8614 ;;      Totals:        36       0       0       0       0       0       0
  8615 ;;Total ram usage:       36 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    6
  8618 ;; This function calls:
  8619 ;;		___aodiv
  8620 ;;		___aomod
  8621 ;;		_abs
  8622 ;;		_pad
  8623 ;; This function is called by:
  8624 ;;		_vfpfcnvrt
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text33
  8629  001F3C                     __ptext33:
  8630                           	opt callstack 0
  8631  001F3C                     _dtoa:
  8632                           	opt callstack 0
  8633  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  8634                           
  8635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8636                           
  8637                           ;incstack = 0
  8638  001F3E  C01E  F036         	movff	dtoa@d,dtoa@n
  8639  001F42  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8640  001F46  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8641  001F4A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8642  001F4E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8643  001F52  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8644  001F56  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8645  001F5A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8646                           
  8647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8648  001F5E  AE3D               	btfss	dtoa@n+7,7,c
  8649  001F60  D002               	goto	u3220
  8650  001F62  0E01               	movlw	1
  8651  001F64  D002               	goto	u3230
  8652  001F66                     u3220:
  8653  001F66  FFFF               	dw	65535	; assembler added errata NOP
  8654  001F68  0E00               	movlw	0
  8655  001F6A                     u3230:
  8656  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  8657  001F6C  6E34               	movwf	dtoa@s,c
  8658  001F6E  6A35               	clrf	dtoa@s+1,c
  8659                           
  8660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8661  001F70  5034               	movf	dtoa@s,w,c
  8662  001F72  1035               	iorwf	dtoa@s+1,w,c
  8663  001F74  B4D8               	btfsc	status,2,c
  8664  001F76  D010               	goto	l3700
  8665                           
  8666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8667  001F78  1E3D               	comf	dtoa@n+7,f,c
  8668  001F7A  1E3C               	comf	dtoa@n+6,f,c
  8669  001F7C  1E3B               	comf	dtoa@n+5,f,c
  8670  001F7E  1E3A               	comf	dtoa@n+4,f,c
  8671  001F80  1E39               	comf	dtoa@n+3,f,c
  8672  001F82  1E38               	comf	dtoa@n+2,f,c
  8673  001F84  1E37               	comf	dtoa@n+1,f,c
  8674  001F86  6C36               	negf	dtoa@n,c
  8675  001F88  0E00               	movlw	0
  8676  001F8A  2237               	addwfc	dtoa@n+1,f,c
  8677  001F8C  2238               	addwfc	dtoa@n+2,f,c
  8678  001F8E  2239               	addwfc	dtoa@n+3,f,c
  8679  001F90  223A               	addwfc	dtoa@n+4,f,c
  8680  001F92  223B               	addwfc	dtoa@n+5,f,c
  8681  001F94  223C               	addwfc	dtoa@n+6,f,c
  8682  001F96  223D               	addwfc	dtoa@n+7,f,c
  8683  001F98                     l3700:
  8684  001F98  FFFF               	dw	65535	; assembler added errata NOP
  8685                           
  8686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8687  001F9A  0100               	movlb	0	; () banked
  8688  001F9C  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8692  001F9E  93D0               	bcf	_flags& (0+255),1,b
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8696  001FA0  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8697  001FA2  D005               	goto	u3260
  8698  001FA4  51CF               	movf	(_prec+1)& (0+255),w,b
  8699  001FA6  E109               	bnz	l412
  8700  001FA8  05CE               	decf	_prec& (0+255),w,b
  8701  001FAA  B0D8               	btfsc	status,0,c
  8702  001FAC  D006               	goto	l412
  8703  001FAE                     u3260:
  8704  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  8705                           
  8706                           ; BSR set to: 0
  8707  001FB0  0E00               	movlw	0
  8708  001FB2  6E31               	movwf	dtoa@p+1,c
  8709  001FB4  0E01               	movlw	1
  8710  001FB6  6E30               	movwf	dtoa@p,c
  8711  001FB8  D005               	goto	l414
  8712  001FBA                     l412:
  8713  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  8714                           
  8715                           ; BSR set to: 0
  8716  001FBC  C0CE  F030         	movff	_prec,dtoa@p
  8717  001FC0  C0CF  F031         	movff	_prec+1,dtoa@p+1
  8718  001FC4                     l414:
  8719  001FC4  FFFF               	dw	65535	; assembler added errata NOP
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8723  001FC6  C0CC  F032         	movff	_width,dtoa@w
  8724  001FCA  C0CD  F033         	movff	_width+1,dtoa@w+1
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8728  001FCE  5034               	movf	dtoa@s,w,c
  8729  001FD0  1035               	iorwf	dtoa@s+1,w,c
  8730  001FD2  A4D8               	btfss	status,2,c
  8731  001FD4  D002               	goto	u3280
  8732                           
  8733                           ; BSR set to: 0
  8734  001FD6  A5D0               	btfss	_flags& (0+255),2,b
  8735  001FD8  D004               	goto	l3714
  8736  001FDA                     u3280:
  8737  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8741  001FDC  0632               	decf	dtoa@w,f,c
  8742  001FDE  A0D8               	btfss	status,0,c
  8743  001FE0  0633               	decf	dtoa@w+1,f,c
  8744  001FE2                     l3714:
  8745  001FE2  FFFF               	dw	65535	; assembler added errata NOP
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8749  001FE4  0E00               	movlw	0
  8750  001FE6  6E3F               	movwf	dtoa@i+1,c
  8751  001FE8  0E1F               	movlw	31
  8752  001FEA  6E3E               	movwf	dtoa@i,c
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8756  001FEC  0E00               	movlw	0
  8757  001FEE  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8758                           
  8759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8760  001FF0  D07D               	goto	l3728
  8761  001FF2                     l3718:
  8762  001FF2  FFFF               	dw	65535	; assembler added errata NOP
  8763                           
  8764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8765  001FF4  063E               	decf	dtoa@i,f,c
  8766  001FF6  A0D8               	btfss	status,0,c
  8767  001FF8  063F               	decf	dtoa@i+1,f,c
  8768                           
  8769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8770  001FFA  0ED5               	movlw	low _dbuf
  8771  001FFC  243E               	addwf	dtoa@i,w,c
  8772  001FFE  6ED9               	movwf	fsr2l,c
  8773  002000  0E00               	movlw	high _dbuf
  8774  002002  203F               	addwfc	dtoa@i+1,w,c
  8775  002004  6EDA               	movwf	fsr2h,c
  8776  002006  C036  F001         	movff	dtoa@n,___aomod@dividend
  8777  00200A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8778  00200E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8779  002012  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8780  002016  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8781  00201A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8782  00201E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8783  002022  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8784  002026  0E0A               	movlw	10
  8785  002028  6E09               	movwf	___aomod@divisor,c
  8786  00202A  0E00               	movlw	0
  8787  00202C  6E0A               	movwf	___aomod@divisor+1,c
  8788  00202E  0E00               	movlw	0
  8789  002030  6E0B               	movwf	___aomod@divisor+2,c
  8790  002032  0E00               	movlw	0
  8791  002034  6E0C               	movwf	___aomod@divisor+3,c
  8792  002036  0E00               	movlw	0
  8793  002038  6E0D               	movwf	___aomod@divisor+4,c
  8794  00203A  0E00               	movlw	0
  8795  00203C  6E0E               	movwf	___aomod@divisor+5,c
  8796  00203E  0E00               	movlw	0
  8797  002040  6E0F               	movwf	___aomod@divisor+6,c
  8798  002042  0E00               	movlw	0
  8799  002044  6E10               	movwf	___aomod@divisor+7,c
  8800  002046  EC31  F018         	call	___aomod	;wreg free
  8801  00204A  C001  F026         	movff	?___aomod,??_dtoa
  8802  00204E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8803  002052  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8804  002056  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8805  00205A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8806  00205E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8807  002062  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8808  002066  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8809  00206A  C026  F013         	movff	??_dtoa,abs@a
  8810  00206E  C028  F014         	movff	??_dtoa+2,abs@a+1
  8811  002072  EC80  F01E         	call	_abs	;wreg free
  8812  002076  5013               	movf	?_abs,w,c
  8813  002078  0F30               	addlw	48
  8814  00207A  6EDF               	movwf	indf2,c
  8815                           
  8816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8817  00207C  0630               	decf	dtoa@p,f,c
  8818  00207E  A0D8               	btfss	status,0,c
  8819  002080  0631               	decf	dtoa@p+1,f,c
  8820                           
  8821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8822  002082  0632               	decf	dtoa@w,f,c
  8823  002084  A0D8               	btfss	status,0,c
  8824  002086  0633               	decf	dtoa@w+1,f,c
  8825                           
  8826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8827  002088  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8828  00208C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8829  002090  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8830  002094  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8831  002098  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8832  00209C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8833  0020A0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8834  0020A4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8835  0020A8  0E0A               	movlw	10
  8836  0020AA  6E09               	movwf	___aodiv@divisor,c
  8837  0020AC  0E00               	movlw	0
  8838  0020AE  6E0A               	movwf	___aodiv@divisor+1,c
  8839  0020B0  0E00               	movlw	0
  8840  0020B2  6E0B               	movwf	___aodiv@divisor+2,c
  8841  0020B4  0E00               	movlw	0
  8842  0020B6  6E0C               	movwf	___aodiv@divisor+3,c
  8843  0020B8  0E00               	movlw	0
  8844  0020BA  6E0D               	movwf	___aodiv@divisor+4,c
  8845  0020BC  0E00               	movlw	0
  8846  0020BE  6E0E               	movwf	___aodiv@divisor+5,c
  8847  0020C0  0E00               	movlw	0
  8848  0020C2  6E0F               	movwf	___aodiv@divisor+6,c
  8849  0020C4  0E00               	movlw	0
  8850  0020C6  6E10               	movwf	___aodiv@divisor+7,c
  8851  0020C8  ECE1  F016         	call	___aodiv	;wreg free
  8852  0020CC  C001  F036         	movff	?___aodiv,dtoa@n
  8853  0020D0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8854  0020D4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8855  0020D8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8856  0020DC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8857  0020E0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8858  0020E4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8859  0020E8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8860  0020EC                     l3728:
  8861  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  8862                           
  8863                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8864  0020EE  BE3F               	btfsc	dtoa@i+1,7,c
  8865  0020F0  D021               	goto	u3330
  8866  0020F2  503F               	movf	dtoa@i+1,w,c
  8867  0020F4  E103               	bnz	u3290
  8868  0020F6  043E               	decf	dtoa@i,w,c
  8869  0020F8  A0D8               	btfss	status,0,c
  8870  0020FA  D01C               	goto	u3330
  8871  0020FC                     u3290:
  8872  0020FC  5036               	movf	dtoa@n,w,c
  8873  0020FE  1037               	iorwf	dtoa@n+1,w,c
  8874  002100  1038               	iorwf	dtoa@n+2,w,c
  8875  002102  1039               	iorwf	dtoa@n+3,w,c
  8876  002104  103A               	iorwf	dtoa@n+4,w,c
  8877  002106  103B               	iorwf	dtoa@n+5,w,c
  8878  002108  103C               	iorwf	dtoa@n+6,w,c
  8879  00210A  103D               	iorwf	dtoa@n+7,w,c
  8880  00210C  A4D8               	btfss	status,2,c
  8881  00210E  D771               	goto	l3718
  8882  002110  BE31               	btfsc	dtoa@p+1,7,c
  8883  002112  D005               	goto	u3310
  8884  002114  5031               	movf	dtoa@p+1,w,c
  8885  002116  E102               	bnz	u3311
  8886  002118  0430               	decf	dtoa@p,w,c
  8887  00211A  B0D8               	btfsc	status,0,c
  8888  00211C                     u3311:
  8889  00211C  D76A               	goto	l3718
  8890  00211E                     u3310:
  8891  00211E  FFFF               	dw	65535	; assembler added errata NOP
  8892  002120  BE33               	btfsc	dtoa@w+1,7,c
  8893  002122  D008               	goto	u3330
  8894  002124  5033               	movf	dtoa@w+1,w,c
  8895  002126  E103               	bnz	u3320
  8896  002128  0432               	decf	dtoa@w,w,c
  8897  00212A  A0D8               	btfss	status,0,c
  8898  00212C  D003               	goto	u3330
  8899  00212E                     u3320:
  8900  00212E  0100               	movlb	0	; () banked
  8901  002130  B3D0               	btfsc	_flags& (0+255),1,b
  8902  002132  D75F               	goto	l3718
  8903  002134                     u3330:
  8904  002134  FFFF               	dw	65535	; assembler added errata NOP
  8905                           
  8906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8907  002136  5034               	movf	dtoa@s,w,c
  8908  002138  1035               	iorwf	dtoa@s+1,w,c
  8909  00213A  A4D8               	btfss	status,2,c
  8910  00213C  D003               	goto	u3350
  8911  00213E  0100               	movlb	0	; () banked
  8912  002140  A5D0               	btfss	_flags& (0+255),2,b
  8913  002142  D01A               	goto	l3752
  8914  002144                     u3350:
  8915  002144  FFFF               	dw	65535	; assembler added errata NOP
  8916                           
  8917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8918  002146  063E               	decf	dtoa@i,f,c
  8919  002148  A0D8               	btfss	status,0,c
  8920  00214A  063F               	decf	dtoa@i+1,f,c
  8921                           
  8922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8923  00214C  5034               	movf	dtoa@s,w,c
  8924  00214E  1035               	iorwf	dtoa@s+1,w,c
  8925  002150  A4D8               	btfss	status,2,c
  8926  002152  D004               	goto	l3748
  8927  002154  0E00               	movlw	0
  8928  002156  6E2F               	movwf	_dtoa$1073+1,c
  8929  002158  0E2B               	movlw	43
  8930  00215A  D004               	goto	L26
  8931  00215C                     l3748:
  8932  00215C  FFFF               	dw	65535	; assembler added errata NOP
  8933  00215E  0E00               	movlw	0
  8934  002160  6E2F               	movwf	_dtoa$1073+1,c
  8935  002162  0E2D               	movlw	45
  8936  002164                     L26:
  8937  002164  FFFF               	dw	65535	; assembler added errata NOP
  8938  002166  6E2E               	movwf	_dtoa$1073,c
  8939  002168  0ED5               	movlw	low _dbuf
  8940  00216A  243E               	addwf	dtoa@i,w,c
  8941  00216C  6ED9               	movwf	fsr2l,c
  8942  00216E  0E00               	movlw	high _dbuf
  8943  002170  203F               	addwfc	dtoa@i+1,w,c
  8944  002172  6EDA               	movwf	fsr2h,c
  8945  002174  C02E  FFDF         	movff	_dtoa$1073,indf2
  8946  002178                     l3752:
  8947  002178  FFFF               	dw	65535	; assembler added errata NOP
  8948                           
  8949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8950  00217A  C01C  F011         	movff	dtoa@fp,pad@fp
  8951  00217E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8952  002182  0ED5               	movlw	low _dbuf
  8953  002184  243E               	addwf	dtoa@i,w,c
  8954  002186  6E13               	movwf	pad@buf,c
  8955  002188  0E00               	movlw	high _dbuf
  8956  00218A  203F               	addwfc	dtoa@i+1,w,c
  8957  00218C  6E14               	movwf	pad@buf+1,c
  8958  00218E  C032  F015         	movff	dtoa@w,pad@p
  8959  002192  C033  F016         	movff	dtoa@w+1,pad@p+1
  8960  002196  ECB7  F01B         	call	_pad	;wreg free
  8961  00219A  C011  F01C         	movff	?_pad,?_dtoa
  8962  00219E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8963  0021A2  0012               	return		;funcret
  8964  0021A4  FFFF               	dw	65535	; errata NOP
  8965  0021A6                     __end_of_dtoa:
  8966                           	opt callstack 0
  8967                           
  8968 ;; *************** function _abs *****************
  8969 ;; Defined at:
  8970 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  a               2   18[COMRAM] int 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  2   18[COMRAM] int 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8984 ;;      Params:         2       0       0       0       0       0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0
  8986 ;;      Temps:          2       0       0       0       0       0       0
  8987 ;;      Totals:         4       0       0       0       0       0       0
  8988 ;;Total ram usage:        4 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    2
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_dtoa
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text34
  8999  003D00                     __ptext34:
  9000                           	opt callstack 0
  9001  003D00                     _abs:
  9002                           	opt callstack 0
  9003  003D00  FFFF               	dw	65535	; assembler added errata NOP
  9004                           
  9005                           ;incstack = 0
  9006  003D02  BE14               	btfsc	abs@a+1,7,c
  9007  003D04  D005               	goto	u2890
  9008  003D06  5014               	movf	abs@a+1,w,c
  9009  003D08  E111               	bnz	l1285
  9010  003D0A  0413               	decf	abs@a,w,c
  9011  003D0C  B0D8               	btfsc	status,0,c
  9012  003D0E  D00E               	goto	l1285
  9013  003D10                     u2890:
  9014  003D10  FFFF               	dw	65535	; assembler added errata NOP
  9015  003D12  C013  F015         	movff	abs@a,??_abs
  9016  003D16  C014  F016         	movff	abs@a+1,??_abs+1
  9017  003D1A  1E15               	comf	??_abs,f,c
  9018  003D1C  1E16               	comf	??_abs+1,f,c
  9019  003D1E  4A15               	infsnz	??_abs,f,c
  9020  003D20  2A16               	incf	??_abs+1,f,c
  9021  003D22  C015  F013         	movff	??_abs,?_abs
  9022  003D26  C016  F014         	movff	??_abs+1,?_abs+1
  9023  003D2A  D005               	goto	l1288
  9024  003D2C                     l1285:
  9025  003D2C  FFFF               	dw	65535	; assembler added errata NOP
  9026  003D2E  C013  F013         	movff	abs@a,?_abs
  9027  003D32  C014  F014         	movff	abs@a+1,?_abs+1
  9028  003D36                     l1288:
  9029  003D36  FFFF               	dw	65535	; assembler added errata NOP
  9030  003D38  0012               	return		;funcret
  9031  003D3A  FFFF               	dw	65535	; errata NOP
  9032  003D3C                     __end_of_abs:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function ___aomod *****************
  9036 ;; Defined at:
  9037 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  dividend        8    0[COMRAM] long long 
  9040 ;;  divisor         8    8[COMRAM] long long 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  sign            1   17[COMRAM] unsigned char 
  9043 ;;  counter         1   16[COMRAM] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  8    0[COMRAM] long long 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9053 ;;      Params:        16       0       0       0       0       0       0
  9054 ;;      Locals:         2       0       0       0       0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0
  9056 ;;      Totals:        18       0       0       0       0       0       0
  9057 ;;Total ram usage:       18 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    2
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_dtoa
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text35
  9068  003062                     __ptext35:
  9069                           	opt callstack 0
  9070  003062                     ___aomod:
  9071                           	opt callstack 0
  9072  003062  FFFF               	dw	65535	; assembler added errata NOP
  9073                           
  9074                           ;incstack = 0
  9075  003064  0E00               	movlw	0
  9076  003066  6E12               	movwf	___aomod@sign,c
  9077  003068  AE08               	btfss	___aomod@dividend+7,7,c
  9078  00306A  D012               	goto	l3602
  9079  00306C  1E08               	comf	___aomod@dividend+7,f,c
  9080  00306E  1E07               	comf	___aomod@dividend+6,f,c
  9081  003070  1E06               	comf	___aomod@dividend+5,f,c
  9082  003072  1E05               	comf	___aomod@dividend+4,f,c
  9083  003074  1E04               	comf	___aomod@dividend+3,f,c
  9084  003076  1E03               	comf	___aomod@dividend+2,f,c
  9085  003078  1E02               	comf	___aomod@dividend+1,f,c
  9086  00307A  6C01               	negf	___aomod@dividend,c
  9087  00307C  0E00               	movlw	0
  9088  00307E  2202               	addwfc	___aomod@dividend+1,f,c
  9089  003080  2203               	addwfc	___aomod@dividend+2,f,c
  9090  003082  2204               	addwfc	___aomod@dividend+3,f,c
  9091  003084  2205               	addwfc	___aomod@dividend+4,f,c
  9092  003086  2206               	addwfc	___aomod@dividend+5,f,c
  9093  003088  2207               	addwfc	___aomod@dividend+6,f,c
  9094  00308A  2208               	addwfc	___aomod@dividend+7,f,c
  9095  00308C  0E01               	movlw	1
  9096  00308E  6E12               	movwf	___aomod@sign,c
  9097  003090                     l3602:
  9098  003090  FFFF               	dw	65535	; assembler added errata NOP
  9099  003092  AE10               	btfss	___aomod@divisor+7,7,c
  9100  003094  D010               	goto	l3606
  9101  003096  1E10               	comf	___aomod@divisor+7,f,c
  9102  003098  1E0F               	comf	___aomod@divisor+6,f,c
  9103  00309A  1E0E               	comf	___aomod@divisor+5,f,c
  9104  00309C  1E0D               	comf	___aomod@divisor+4,f,c
  9105  00309E  1E0C               	comf	___aomod@divisor+3,f,c
  9106  0030A0  1E0B               	comf	___aomod@divisor+2,f,c
  9107  0030A2  1E0A               	comf	___aomod@divisor+1,f,c
  9108  0030A4  6C09               	negf	___aomod@divisor,c
  9109  0030A6  0E00               	movlw	0
  9110  0030A8  220A               	addwfc	___aomod@divisor+1,f,c
  9111  0030AA  220B               	addwfc	___aomod@divisor+2,f,c
  9112  0030AC  220C               	addwfc	___aomod@divisor+3,f,c
  9113  0030AE  220D               	addwfc	___aomod@divisor+4,f,c
  9114  0030B0  220E               	addwfc	___aomod@divisor+5,f,c
  9115  0030B2  220F               	addwfc	___aomod@divisor+6,f,c
  9116  0030B4  2210               	addwfc	___aomod@divisor+7,f,c
  9117  0030B6                     l3606:
  9118  0030B6  FFFF               	dw	65535	; assembler added errata NOP
  9119  0030B8  5009               	movf	___aomod@divisor,w,c
  9120  0030BA  100A               	iorwf	___aomod@divisor+1,w,c
  9121  0030BC  100B               	iorwf	___aomod@divisor+2,w,c
  9122  0030BE  100C               	iorwf	___aomod@divisor+3,w,c
  9123  0030C0  100D               	iorwf	___aomod@divisor+4,w,c
  9124  0030C2  100E               	iorwf	___aomod@divisor+5,w,c
  9125  0030C4  100F               	iorwf	___aomod@divisor+6,w,c
  9126  0030C6  1010               	iorwf	___aomod@divisor+7,w,c
  9127  0030C8  B4D8               	btfsc	status,2,c
  9128  0030CA  D040               	goto	l3622
  9129  0030CC  0E01               	movlw	1
  9130  0030CE  6E11               	movwf	___aomod@counter,c
  9131  0030D0  D00B               	goto	l3612
  9132  0030D2                     l3610:
  9133  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  9134  0030D4  90D8               	bcf	status,0,c
  9135  0030D6  3609               	rlcf	___aomod@divisor,f,c
  9136  0030D8  360A               	rlcf	___aomod@divisor+1,f,c
  9137  0030DA  360B               	rlcf	___aomod@divisor+2,f,c
  9138  0030DC  360C               	rlcf	___aomod@divisor+3,f,c
  9139  0030DE  360D               	rlcf	___aomod@divisor+4,f,c
  9140  0030E0  360E               	rlcf	___aomod@divisor+5,f,c
  9141  0030E2  360F               	rlcf	___aomod@divisor+6,f,c
  9142  0030E4  3610               	rlcf	___aomod@divisor+7,f,c
  9143  0030E6  2A11               	incf	___aomod@counter,f,c
  9144  0030E8                     l3612:
  9145  0030E8  FFFF               	dw	65535	; assembler added errata NOP
  9146  0030EA  AE10               	btfss	___aomod@divisor+7,7,c
  9147  0030EC  D7F2               	goto	l3610
  9148  0030EE                     u3090:
  9149  0030EE  FFFF               	dw	65535	; assembler added errata NOP
  9150  0030F0  5009               	movf	___aomod@divisor,w,c
  9151  0030F2  5C01               	subwf	___aomod@dividend,w,c
  9152  0030F4  500A               	movf	___aomod@divisor+1,w,c
  9153  0030F6  5802               	subwfb	___aomod@dividend+1,w,c
  9154  0030F8  500B               	movf	___aomod@divisor+2,w,c
  9155  0030FA  5803               	subwfb	___aomod@dividend+2,w,c
  9156  0030FC  500C               	movf	___aomod@divisor+3,w,c
  9157  0030FE  5804               	subwfb	___aomod@dividend+3,w,c
  9158  003100  500D               	movf	___aomod@divisor+4,w,c
  9159  003102  5805               	subwfb	___aomod@dividend+4,w,c
  9160  003104  500E               	movf	___aomod@divisor+5,w,c
  9161  003106  5806               	subwfb	___aomod@dividend+5,w,c
  9162  003108  500F               	movf	___aomod@divisor+6,w,c
  9163  00310A  5807               	subwfb	___aomod@dividend+6,w,c
  9164  00310C  5010               	movf	___aomod@divisor+7,w,c
  9165  00310E  5808               	subwfb	___aomod@dividend+7,w,c
  9166  003110  A0D8               	btfss	status,0,c
  9167  003112  D010               	goto	l3618
  9168  003114  5009               	movf	___aomod@divisor,w,c
  9169  003116  5E01               	subwf	___aomod@dividend,f,c
  9170  003118  500A               	movf	___aomod@divisor+1,w,c
  9171  00311A  5A02               	subwfb	___aomod@dividend+1,f,c
  9172  00311C  500B               	movf	___aomod@divisor+2,w,c
  9173  00311E  5A03               	subwfb	___aomod@dividend+2,f,c
  9174  003120  500C               	movf	___aomod@divisor+3,w,c
  9175  003122  5A04               	subwfb	___aomod@dividend+3,f,c
  9176  003124  500D               	movf	___aomod@divisor+4,w,c
  9177  003126  5A05               	subwfb	___aomod@dividend+4,f,c
  9178  003128  500E               	movf	___aomod@divisor+5,w,c
  9179  00312A  5A06               	subwfb	___aomod@dividend+5,f,c
  9180  00312C  500F               	movf	___aomod@divisor+6,w,c
  9181  00312E  5A07               	subwfb	___aomod@dividend+6,f,c
  9182  003130  5010               	movf	___aomod@divisor+7,w,c
  9183  003132  5A08               	subwfb	___aomod@dividend+7,f,c
  9184  003134                     l3618:
  9185  003134  FFFF               	dw	65535	; assembler added errata NOP
  9186  003136  90D8               	bcf	status,0,c
  9187  003138  3210               	rrcf	___aomod@divisor+7,f,c
  9188  00313A  320F               	rrcf	___aomod@divisor+6,f,c
  9189  00313C  320E               	rrcf	___aomod@divisor+5,f,c
  9190  00313E  320D               	rrcf	___aomod@divisor+4,f,c
  9191  003140  320C               	rrcf	___aomod@divisor+3,f,c
  9192  003142  320B               	rrcf	___aomod@divisor+2,f,c
  9193  003144  320A               	rrcf	___aomod@divisor+1,f,c
  9194  003146  3209               	rrcf	___aomod@divisor,f,c
  9195  003148  2E11               	decfsz	___aomod@counter,f,c
  9196  00314A  D7D1               	goto	u3090
  9197  00314C                     l3622:
  9198  00314C  FFFF               	dw	65535	; assembler added errata NOP
  9199  00314E  5012               	movf	___aomod@sign,w,c
  9200  003150  B4D8               	btfsc	status,2,c
  9201  003152  D010               	goto	l3626
  9202  003154  1E08               	comf	___aomod@dividend+7,f,c
  9203  003156  1E07               	comf	___aomod@dividend+6,f,c
  9204  003158  1E06               	comf	___aomod@dividend+5,f,c
  9205  00315A  1E05               	comf	___aomod@dividend+4,f,c
  9206  00315C  1E04               	comf	___aomod@dividend+3,f,c
  9207  00315E  1E03               	comf	___aomod@dividend+2,f,c
  9208  003160  1E02               	comf	___aomod@dividend+1,f,c
  9209  003162  6C01               	negf	___aomod@dividend,c
  9210  003164  0E00               	movlw	0
  9211  003166  2202               	addwfc	___aomod@dividend+1,f,c
  9212  003168  2203               	addwfc	___aomod@dividend+2,f,c
  9213  00316A  2204               	addwfc	___aomod@dividend+3,f,c
  9214  00316C  2205               	addwfc	___aomod@dividend+4,f,c
  9215  00316E  2206               	addwfc	___aomod@dividend+5,f,c
  9216  003170  2207               	addwfc	___aomod@dividend+6,f,c
  9217  003172  2208               	addwfc	___aomod@dividend+7,f,c
  9218  003174                     l3626:
  9219  003174  FFFF               	dw	65535	; assembler added errata NOP
  9220  003176  C001  F001         	movff	___aomod@dividend,?___aomod
  9221  00317A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9222  00317E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9223  003182  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9224  003186  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9225  00318A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9226  00318E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9227  003192  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9228  003196  0012               	return		;funcret
  9229  003198  FFFF               	dw	65535	; errata NOP
  9230  00319A                     __end_of___aomod:
  9231                           	opt callstack 0
  9232                           
  9233 ;; *************** function ___aodiv *****************
  9234 ;; Defined at:
  9235 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  dividend        8    0[COMRAM] long long 
  9238 ;;  divisor         8    8[COMRAM] long long 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  quotient        8   18[COMRAM] long long 
  9241 ;;  sign            1   17[COMRAM] unsigned char 
  9242 ;;  counter         1   16[COMRAM] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  8    0[COMRAM] long long 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9252 ;;      Params:        16       0       0       0       0       0       0
  9253 ;;      Locals:        10       0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0
  9255 ;;      Totals:        26       0       0       0       0       0       0
  9256 ;;Total ram usage:       26 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    2
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_dtoa
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text36
  9267  002DC2                     __ptext36:
  9268                           	opt callstack 0
  9269  002DC2                     ___aodiv:
  9270                           	opt callstack 0
  9271  002DC2  FFFF               	dw	65535	; assembler added errata NOP
  9272                           
  9273                           ;incstack = 0
  9274  002DC4  0E00               	movlw	0
  9275  002DC6  6E12               	movwf	___aodiv@sign,c
  9276  002DC8  AE10               	btfss	___aodiv@divisor+7,7,c
  9277  002DCA  D012               	goto	l3558
  9278  002DCC  1E10               	comf	___aodiv@divisor+7,f,c
  9279  002DCE  1E0F               	comf	___aodiv@divisor+6,f,c
  9280  002DD0  1E0E               	comf	___aodiv@divisor+5,f,c
  9281  002DD2  1E0D               	comf	___aodiv@divisor+4,f,c
  9282  002DD4  1E0C               	comf	___aodiv@divisor+3,f,c
  9283  002DD6  1E0B               	comf	___aodiv@divisor+2,f,c
  9284  002DD8  1E0A               	comf	___aodiv@divisor+1,f,c
  9285  002DDA  6C09               	negf	___aodiv@divisor,c
  9286  002DDC  0E00               	movlw	0
  9287  002DDE  220A               	addwfc	___aodiv@divisor+1,f,c
  9288  002DE0  220B               	addwfc	___aodiv@divisor+2,f,c
  9289  002DE2  220C               	addwfc	___aodiv@divisor+3,f,c
  9290  002DE4  220D               	addwfc	___aodiv@divisor+4,f,c
  9291  002DE6  220E               	addwfc	___aodiv@divisor+5,f,c
  9292  002DE8  220F               	addwfc	___aodiv@divisor+6,f,c
  9293  002DEA  2210               	addwfc	___aodiv@divisor+7,f,c
  9294  002DEC  0E01               	movlw	1
  9295  002DEE  6E12               	movwf	___aodiv@sign,c
  9296  002DF0                     l3558:
  9297  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  9298  002DF2  AE08               	btfss	___aodiv@dividend+7,7,c
  9299  002DF4  D012               	goto	l3564
  9300  002DF6  1E08               	comf	___aodiv@dividend+7,f,c
  9301  002DF8  1E07               	comf	___aodiv@dividend+6,f,c
  9302  002DFA  1E06               	comf	___aodiv@dividend+5,f,c
  9303  002DFC  1E05               	comf	___aodiv@dividend+4,f,c
  9304  002DFE  1E04               	comf	___aodiv@dividend+3,f,c
  9305  002E00  1E03               	comf	___aodiv@dividend+2,f,c
  9306  002E02  1E02               	comf	___aodiv@dividend+1,f,c
  9307  002E04  6C01               	negf	___aodiv@dividend,c
  9308  002E06  0E00               	movlw	0
  9309  002E08  2202               	addwfc	___aodiv@dividend+1,f,c
  9310  002E0A  2203               	addwfc	___aodiv@dividend+2,f,c
  9311  002E0C  2204               	addwfc	___aodiv@dividend+3,f,c
  9312  002E0E  2205               	addwfc	___aodiv@dividend+4,f,c
  9313  002E10  2206               	addwfc	___aodiv@dividend+5,f,c
  9314  002E12  2207               	addwfc	___aodiv@dividend+6,f,c
  9315  002E14  2208               	addwfc	___aodiv@dividend+7,f,c
  9316  002E16  0E01               	movlw	1
  9317  002E18  1A12               	xorwf	___aodiv@sign,f,c
  9318  002E1A                     l3564:
  9319  002E1A  FFFF               	dw	65535	; assembler added errata NOP
  9320  002E1C  EE20  F013         	lfsr	2,___aodiv@quotient
  9321  002E20  0E07               	movlw	7
  9322  002E22                     u3011:
  9323  002E22  6ADE               	clrf	postinc2,c
  9324  002E24  06E8               	decf	wreg,f,c
  9325  002E26  E2FD               	bc	u3011
  9326  002E28  5009               	movf	___aodiv@divisor,w,c
  9327  002E2A  100A               	iorwf	___aodiv@divisor+1,w,c
  9328  002E2C  100B               	iorwf	___aodiv@divisor+2,w,c
  9329  002E2E  100C               	iorwf	___aodiv@divisor+3,w,c
  9330  002E30  100D               	iorwf	___aodiv@divisor+4,w,c
  9331  002E32  100E               	iorwf	___aodiv@divisor+5,w,c
  9332  002E34  100F               	iorwf	___aodiv@divisor+6,w,c
  9333  002E36  1010               	iorwf	___aodiv@divisor+7,w,c
  9334  002E38  B4D8               	btfsc	status,2,c
  9335  002E3A  D04A               	goto	l3586
  9336  002E3C  0E01               	movlw	1
  9337  002E3E  6E11               	movwf	___aodiv@counter,c
  9338  002E40  D00B               	goto	l3572
  9339  002E42                     l3570:
  9340  002E42  FFFF               	dw	65535	; assembler added errata NOP
  9341  002E44  90D8               	bcf	status,0,c
  9342  002E46  3609               	rlcf	___aodiv@divisor,f,c
  9343  002E48  360A               	rlcf	___aodiv@divisor+1,f,c
  9344  002E4A  360B               	rlcf	___aodiv@divisor+2,f,c
  9345  002E4C  360C               	rlcf	___aodiv@divisor+3,f,c
  9346  002E4E  360D               	rlcf	___aodiv@divisor+4,f,c
  9347  002E50  360E               	rlcf	___aodiv@divisor+5,f,c
  9348  002E52  360F               	rlcf	___aodiv@divisor+6,f,c
  9349  002E54  3610               	rlcf	___aodiv@divisor+7,f,c
  9350  002E56  2A11               	incf	___aodiv@counter,f,c
  9351  002E58                     l3572:
  9352  002E58  FFFF               	dw	65535	; assembler added errata NOP
  9353  002E5A  AE10               	btfss	___aodiv@divisor+7,7,c
  9354  002E5C  D7F2               	goto	l3570
  9355  002E5E                     u3030:
  9356  002E5E  FFFF               	dw	65535	; assembler added errata NOP
  9357  002E60  90D8               	bcf	status,0,c
  9358  002E62  3613               	rlcf	___aodiv@quotient,f,c
  9359  002E64  3614               	rlcf	___aodiv@quotient+1,f,c
  9360  002E66  3615               	rlcf	___aodiv@quotient+2,f,c
  9361  002E68  3616               	rlcf	___aodiv@quotient+3,f,c
  9362  002E6A  3617               	rlcf	___aodiv@quotient+4,f,c
  9363  002E6C  3618               	rlcf	___aodiv@quotient+5,f,c
  9364  002E6E  3619               	rlcf	___aodiv@quotient+6,f,c
  9365  002E70  361A               	rlcf	___aodiv@quotient+7,f,c
  9366  002E72  5009               	movf	___aodiv@divisor,w,c
  9367  002E74  5C01               	subwf	___aodiv@dividend,w,c
  9368  002E76  500A               	movf	___aodiv@divisor+1,w,c
  9369  002E78  5802               	subwfb	___aodiv@dividend+1,w,c
  9370  002E7A  500B               	movf	___aodiv@divisor+2,w,c
  9371  002E7C  5803               	subwfb	___aodiv@dividend+2,w,c
  9372  002E7E  500C               	movf	___aodiv@divisor+3,w,c
  9373  002E80  5804               	subwfb	___aodiv@dividend+3,w,c
  9374  002E82  500D               	movf	___aodiv@divisor+4,w,c
  9375  002E84  5805               	subwfb	___aodiv@dividend+4,w,c
  9376  002E86  500E               	movf	___aodiv@divisor+5,w,c
  9377  002E88  5806               	subwfb	___aodiv@dividend+5,w,c
  9378  002E8A  500F               	movf	___aodiv@divisor+6,w,c
  9379  002E8C  5807               	subwfb	___aodiv@dividend+6,w,c
  9380  002E8E  5010               	movf	___aodiv@divisor+7,w,c
  9381  002E90  5808               	subwfb	___aodiv@dividend+7,w,c
  9382  002E92  A0D8               	btfss	status,0,c
  9383  002E94  D011               	goto	l3582
  9384  002E96  5009               	movf	___aodiv@divisor,w,c
  9385  002E98  5E01               	subwf	___aodiv@dividend,f,c
  9386  002E9A  500A               	movf	___aodiv@divisor+1,w,c
  9387  002E9C  5A02               	subwfb	___aodiv@dividend+1,f,c
  9388  002E9E  500B               	movf	___aodiv@divisor+2,w,c
  9389  002EA0  5A03               	subwfb	___aodiv@dividend+2,f,c
  9390  002EA2  500C               	movf	___aodiv@divisor+3,w,c
  9391  002EA4  5A04               	subwfb	___aodiv@dividend+3,f,c
  9392  002EA6  500D               	movf	___aodiv@divisor+4,w,c
  9393  002EA8  5A05               	subwfb	___aodiv@dividend+4,f,c
  9394  002EAA  500E               	movf	___aodiv@divisor+5,w,c
  9395  002EAC  5A06               	subwfb	___aodiv@dividend+5,f,c
  9396  002EAE  500F               	movf	___aodiv@divisor+6,w,c
  9397  002EB0  5A07               	subwfb	___aodiv@dividend+6,f,c
  9398  002EB2  5010               	movf	___aodiv@divisor+7,w,c
  9399  002EB4  5A08               	subwfb	___aodiv@dividend+7,f,c
  9400  002EB6  8013               	bsf	___aodiv@quotient,0,c
  9401  002EB8                     l3582:
  9402  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  9403  002EBA  90D8               	bcf	status,0,c
  9404  002EBC  3210               	rrcf	___aodiv@divisor+7,f,c
  9405  002EBE  320F               	rrcf	___aodiv@divisor+6,f,c
  9406  002EC0  320E               	rrcf	___aodiv@divisor+5,f,c
  9407  002EC2  320D               	rrcf	___aodiv@divisor+4,f,c
  9408  002EC4  320C               	rrcf	___aodiv@divisor+3,f,c
  9409  002EC6  320B               	rrcf	___aodiv@divisor+2,f,c
  9410  002EC8  320A               	rrcf	___aodiv@divisor+1,f,c
  9411  002ECA  3209               	rrcf	___aodiv@divisor,f,c
  9412  002ECC  2E11               	decfsz	___aodiv@counter,f,c
  9413  002ECE  D7C7               	goto	u3030
  9414  002ED0                     l3586:
  9415  002ED0  FFFF               	dw	65535	; assembler added errata NOP
  9416  002ED2  5012               	movf	___aodiv@sign,w,c
  9417  002ED4  B4D8               	btfsc	status,2,c
  9418  002ED6  D010               	goto	l3590
  9419  002ED8  1E1A               	comf	___aodiv@quotient+7,f,c
  9420  002EDA  1E19               	comf	___aodiv@quotient+6,f,c
  9421  002EDC  1E18               	comf	___aodiv@quotient+5,f,c
  9422  002EDE  1E17               	comf	___aodiv@quotient+4,f,c
  9423  002EE0  1E16               	comf	___aodiv@quotient+3,f,c
  9424  002EE2  1E15               	comf	___aodiv@quotient+2,f,c
  9425  002EE4  1E14               	comf	___aodiv@quotient+1,f,c
  9426  002EE6  6C13               	negf	___aodiv@quotient,c
  9427  002EE8  0E00               	movlw	0
  9428  002EEA  2214               	addwfc	___aodiv@quotient+1,f,c
  9429  002EEC  2215               	addwfc	___aodiv@quotient+2,f,c
  9430  002EEE  2216               	addwfc	___aodiv@quotient+3,f,c
  9431  002EF0  2217               	addwfc	___aodiv@quotient+4,f,c
  9432  002EF2  2218               	addwfc	___aodiv@quotient+5,f,c
  9433  002EF4  2219               	addwfc	___aodiv@quotient+6,f,c
  9434  002EF6  221A               	addwfc	___aodiv@quotient+7,f,c
  9435  002EF8                     l3590:
  9436  002EF8  FFFF               	dw	65535	; assembler added errata NOP
  9437  002EFA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9438  002EFE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9439  002F02  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9440  002F06  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9441  002F0A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9442  002F0E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9443  002F12  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9444  002F16  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9445  002F1A  0012               	return		;funcret
  9446  002F1C  FFFF               	dw	65535	; errata NOP
  9447  002F1E                     __end_of___aodiv:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function _ctoa *****************
  9451 ;; Defined at:
  9452 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9455 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9456 ;;  c               1   29[COMRAM] unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  w               2   30[COMRAM] int 
  9459 ;;  l               2    0        int 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  2   27[COMRAM] int 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9469 ;;      Params:         3       0       0       0       0       0       0
  9470 ;;      Locals:         2       0       0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0
  9472 ;;      Totals:         5       0       0       0       0       0       0
  9473 ;;Total ram usage:        5 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    6
  9476 ;; This function calls:
  9477 ;;		_pad
  9478 ;; This function is called by:
  9479 ;;		_vfpfcnvrt
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text37
  9484  003AC6                     __ptext37:
  9485                           	opt callstack 0
  9486  003AC6                     _ctoa:
  9487                           	opt callstack 0
  9488  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  9489                           
  9490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9491                           
  9492                           ;incstack = 0
  9493  003AC8  0100               	movlb	0	; () banked
  9494  003ACA  51CC               	movf	_width& (0+255),w,b
  9495  003ACC  11CD               	iorwf	(_width+1)& (0+255),w,b
  9496  003ACE  A4D8               	btfss	status,2,c
  9497  003AD0  D005               	goto	l3684
  9498                           
  9499                           ; BSR set to: 0
  9500  003AD2  C0CC  F01F         	movff	_width,ctoa@w
  9501  003AD6  C0CD  F020         	movff	_width+1,ctoa@w+1
  9502  003ADA  D007               	goto	l3686
  9503  003ADC                     l3684:
  9504  003ADC  FFFF               	dw	65535	; assembler added errata NOP
  9505                           
  9506                           ; BSR set to: 0
  9507  003ADE  0EFF               	movlw	255
  9508  003AE0  25CC               	addwf	_width& (0+255),w,b
  9509  003AE2  6E1F               	movwf	ctoa@w,c
  9510  003AE4  0EFF               	movlw	255
  9511  003AE6  21CD               	addwfc	(_width+1)& (0+255),w,b
  9512  003AE8  6E20               	movwf	ctoa@w+1,c
  9513  003AEA                     l3686:
  9514  003AEA  FFFF               	dw	65535	; assembler added errata NOP
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9518  003AEC  C01E  F0D5         	movff	ctoa@c,_dbuf
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9522  003AF0  0E00               	movlw	0
  9523  003AF2  6FD6               	movwf	(_dbuf+1)& (0+255),b
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9527  003AF4  C01C  F011         	movff	ctoa@fp,pad@fp
  9528  003AF8  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9529  003AFC  0ED5               	movlw	low _dbuf
  9530  003AFE  6E13               	movwf	pad@buf,c
  9531  003B00  0E00               	movlw	high _dbuf
  9532  003B02  6E14               	movwf	pad@buf+1,c
  9533  003B04  C01F  F015         	movff	ctoa@w,pad@p
  9534  003B08  C020  F016         	movff	ctoa@w+1,pad@p+1
  9535  003B0C  ECB7  F01B         	call	_pad	;wreg free
  9536  003B10  C011  F01C         	movff	?_pad,?_ctoa
  9537  003B14  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9538  003B18  0012               	return		;funcret
  9539  003B1A  FFFF               	dw	65535	; errata NOP
  9540  003B1C                     __end_of_ctoa:
  9541                           	opt callstack 0
  9542                           
  9543 ;; *************** function _pad *****************
  9544 ;; Defined at:
  9545 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9548 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9549 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9550 ;;		 -> dbuf(32), 
  9551 ;;  p               2   20[COMRAM] int 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  w               2   25[COMRAM] int 
  9554 ;;  i               2   23[COMRAM] int 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  2   16[COMRAM] int 
  9557 ;; Registers used:
  9558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9564 ;;      Params:         6       0       0       0       0       0       0
  9565 ;;      Locals:         4       0       0       0       0       0       0
  9566 ;;      Temps:          1       0       0       0       0       0       0
  9567 ;;      Totals:        11       0       0       0       0       0       0
  9568 ;;Total ram usage:       11 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    5
  9571 ;; This function calls:
  9572 ;;		_fputc
  9573 ;;		_fputs
  9574 ;;		_strlen
  9575 ;; This function is called by:
  9576 ;;		_ctoa
  9577 ;;		_dtoa
  9578 ;;		_otoa
  9579 ;;		_utoa
  9580 ;;		_xtoa
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text38
  9585  00376E                     __ptext38:
  9586                           	opt callstack 0
  9587  00376E                     _pad:
  9588                           	opt callstack 0
  9589  00376E  FFFF               	dw	65535	; assembler added errata NOP
  9590                           
  9591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9592                           
  9593                           ;incstack = 0
  9594  003770  0100               	movlb	0	; () banked
  9595  003772  A1D0               	btfss	_flags& (0+255),0,b
  9596  003774  D00A               	goto	l3500
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9600  003776  C013  F00A         	movff	pad@buf,fputs@s
  9601  00377A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9602  00377E  C011  F00C         	movff	pad@fp,fputs@fp
  9603  003782  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9604  003786  EC23  F01E         	call	_fputs	;wreg free
  9605  00378A                     l3500:
  9606  00378A  FFFF               	dw	65535	; assembler added errata NOP
  9607                           
  9608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9609  00378C  BE16               	btfsc	pad@p+1,7,c
  9610  00378E  D005               	goto	l3504
  9611  003790  C015  F01A         	movff	pad@p,pad@w
  9612  003794  C016  F01B         	movff	pad@p+1,pad@w+1
  9613  003798  D005               	goto	l394
  9614  00379A                     l3504:
  9615  00379A  FFFF               	dw	65535	; assembler added errata NOP
  9616  00379C  0E00               	movlw	0
  9617  00379E  6E1B               	movwf	pad@w+1,c
  9618  0037A0  0E00               	movlw	0
  9619  0037A2  6E1A               	movwf	pad@w,c
  9620  0037A4                     l394:
  9621  0037A4  FFFF               	dw	65535	; assembler added errata NOP
  9622                           
  9623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9624  0037A6  0E00               	movlw	0
  9625  0037A8  6E19               	movwf	pad@i+1,c
  9626  0037AA  0E00               	movlw	0
  9627  0037AC  6E18               	movwf	pad@i,c
  9628                           
  9629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9630  0037AE  D00D               	goto	l3510
  9631  0037B0                     l3506:
  9632  0037B0  FFFF               	dw	65535	; assembler added errata NOP
  9633                           
  9634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9635  0037B2  0E00               	movlw	0
  9636  0037B4  6E02               	movwf	fputc@c+1,c
  9637  0037B6  0E20               	movlw	32
  9638  0037B8  6E01               	movwf	fputc@c,c
  9639  0037BA  C011  F003         	movff	pad@fp,fputc@fp
  9640  0037BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9641  0037C2  EC61  F01B         	call	_fputc	;wreg free
  9642                           
  9643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9644  0037C6  4A18               	infsnz	pad@i,f,c
  9645  0037C8  2A19               	incf	pad@i+1,f,c
  9646  0037CA                     l3510:
  9647  0037CA  FFFF               	dw	65535	; assembler added errata NOP
  9648                           
  9649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9650  0037CC  501A               	movf	pad@w,w,c
  9651  0037CE  5C18               	subwf	pad@i,w,c
  9652  0037D0  5019               	movf	pad@i+1,w,c
  9653  0037D2  0A80               	xorlw	128
  9654  0037D4  6E17               	movwf	??_pad& (0+255),c
  9655  0037D6  501B               	movf	pad@w+1,w,c
  9656  0037D8  0A80               	xorlw	128
  9657  0037DA  5817               	subwfb	??_pad& (0+255),w,c
  9658  0037DC  A0D8               	btfss	status,0,c
  9659  0037DE  D7E8               	goto	l3506
  9660                           
  9661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9662  0037E0  0100               	movlb	0	; () banked
  9663  0037E2  B1D0               	btfsc	_flags& (0+255),0,b
  9664  0037E4  D00A               	goto	l3514
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9668  0037E6  C013  F00A         	movff	pad@buf,fputs@s
  9669  0037EA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9670  0037EE  C011  F00C         	movff	pad@fp,fputs@fp
  9671  0037F2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9672  0037F6  EC23  F01E         	call	_fputs	;wreg free
  9673  0037FA                     l3514:
  9674  0037FA  FFFF               	dw	65535	; assembler added errata NOP
  9675                           
  9676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9677  0037FC  C013  F001         	movff	pad@buf,strlen@s
  9678  003800  C014  F002         	movff	pad@buf+1,strlen@s+1
  9679  003804  ECF2  F01E         	call	_strlen	;wreg free
  9680  003808  501A               	movf	pad@w,w,c
  9681  00380A  2401               	addwf	?_strlen,w,c
  9682  00380C  6E11               	movwf	?_pad,c
  9683  00380E  501B               	movf	pad@w+1,w,c
  9684  003810  2002               	addwfc	?_strlen+1,w,c
  9685  003812  6E12               	movwf	?_pad+1,c
  9686  003814  0012               	return		;funcret
  9687  003816  FFFF               	dw	65535	; errata NOP
  9688  003818                     __end_of_pad:
  9689                           	opt callstack 0
  9690                           
  9691 ;; *************** function _strlen *****************
  9692 ;; Defined at:
  9693 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9696 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9699 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  2    0[COMRAM] unsigned int 
  9702 ;; Registers used:
  9703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9709 ;;      Params:         2       0       0       0       0       0       0
  9710 ;;      Locals:         2       0       0       0       0       0       0
  9711 ;;      Temps:          0       0       0       0       0       0       0
  9712 ;;      Totals:         4       0       0       0       0       0       0
  9713 ;;Total ram usage:        4 bytes
  9714 ;; Hardware stack levels used:    1
  9715 ;; Hardware stack levels required when called:    2
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_pad
  9720 ;;		_stoa
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text39
  9725  003DE4                     __ptext39:
  9726                           	opt callstack 0
  9727  003DE4                     _strlen:
  9728                           	opt callstack 0
  9729  003DE4  FFFF               	dw	65535	; assembler added errata NOP
  9730                           
  9731                           ;incstack = 0
  9732  003DE6  C001  F003         	movff	strlen@s,strlen@a
  9733  003DEA  C002  F004         	movff	strlen@s+1,strlen@a+1
  9734  003DEE  D003               	goto	l3486
  9735  003DF0                     l3484:
  9736  003DF0  FFFF               	dw	65535	; assembler added errata NOP
  9737  003DF2  4A01               	infsnz	strlen@s,f,c
  9738  003DF4  2A02               	incf	strlen@s+1,f,c
  9739  003DF6                     l3486:
  9740  003DF6  FFFF               	dw	65535	; assembler added errata NOP
  9741  003DF8  C001  FFD9         	movff	strlen@s,fsr2l
  9742  003DFC  C002  FFDA         	movff	strlen@s+1,fsr2h
  9743  003E00  50DF               	movf	indf2,w,c
  9744  003E02  A4D8               	btfss	status,2,c
  9745  003E04  D7F5               	goto	l3484
  9746  003E06  5003               	movf	strlen@a,w,c
  9747  003E08  5C01               	subwf	strlen@s,w,c
  9748  003E0A  6E01               	movwf	?_strlen,c
  9749  003E0C  5004               	movf	strlen@a+1,w,c
  9750  003E0E  5802               	subwfb	strlen@s+1,w,c
  9751  003E10  6E02               	movwf	?_strlen+1,c
  9752  003E12  0012               	return		;funcret
  9753  003E14  FFFF               	dw	65535	; errata NOP
  9754  003E16                     __end_of_strlen:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function _fputs *****************
  9758 ;; Defined at:
  9759 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9762 ;;		 -> dbuf(32), 
  9763 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9764 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  i               2   14[COMRAM] int 
  9767 ;;  c               1   13[COMRAM] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    9[COMRAM] int 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9777 ;;      Params:         4       0       0       0       0       0       0
  9778 ;;      Locals:         3       0       0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0
  9780 ;;      Totals:         7       0       0       0       0       0       0
  9781 ;;Total ram usage:        7 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    4
  9784 ;; This function calls:
  9785 ;;		_fputc
  9786 ;; This function is called by:
  9787 ;;		_pad
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text40
  9792  003C46                     __ptext40:
  9793                           	opt callstack 0
  9794  003C46                     _fputs:
  9795                           	opt callstack 0
  9796  003C46  FFFF               	dw	65535	; assembler added errata NOP
  9797                           
  9798                           ;incstack = 0
  9799  003C48  0E00               	movlw	0
  9800  003C4A  6E10               	movwf	fputs@i+1,c
  9801  003C4C  0E00               	movlw	0
  9802  003C4E  6E0F               	movwf	fputs@i,c
  9803  003C50  D00C               	goto	l3480
  9804  003C52                     l3476:
  9805  003C52  FFFF               	dw	65535	; assembler added errata NOP
  9806  003C54  C00E  F001         	movff	fputs@c,fputc@c
  9807  003C58  6A02               	clrf	fputc@c+1,c
  9808  003C5A  C00C  F003         	movff	fputs@fp,fputc@fp
  9809  003C5E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9810  003C62  EC61  F01B         	call	_fputc	;wreg free
  9811  003C66  4A0F               	infsnz	fputs@i,f,c
  9812  003C68  2A10               	incf	fputs@i+1,f,c
  9813  003C6A                     l3480:
  9814  003C6A  FFFF               	dw	65535	; assembler added errata NOP
  9815  003C6C  500F               	movf	fputs@i,w,c
  9816  003C6E  240A               	addwf	fputs@s,w,c
  9817  003C70  6ED9               	movwf	fsr2l,c
  9818  003C72  5010               	movf	fputs@i+1,w,c
  9819  003C74  200B               	addwfc	fputs@s+1,w,c
  9820  003C76  6EDA               	movwf	fsr2h,c
  9821  003C78  50DF               	movf	indf2,w,c
  9822  003C7A  6E0E               	movwf	fputs@c,c
  9823  003C7C  500E               	movf	fputs@c,w,c
  9824  003C7E  B4D8               	btfsc	status,2,c
  9825  003C80  0012               	return		;funcret
  9826  003C82  FFFF               	dw	65535	; assembler added errata NOP
  9827  003C84  D7E6               	goto	l3476
  9828  003C86  FFFF               	dw	65535	; errata NOP
  9829  003C88                     __end_of_fputs:
  9830                           	opt callstack 0
  9831                           
  9832 ;; *************** function _fputc *****************
  9833 ;; Defined at:
  9834 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  c               2    0[COMRAM] int 
  9837 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9838 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;		None
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2    0[COMRAM] int 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9850 ;;      Params:         4       0       0       0       0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0
  9852 ;;      Temps:          5       0       0       0       0       0       0
  9853 ;;      Totals:         9       0       0       0       0       0       0
  9854 ;;Total ram usage:        9 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    3
  9857 ;; This function calls:
  9858 ;;		_putch
  9859 ;; This function is called by:
  9860 ;;		_pad
  9861 ;;		_stoa
  9862 ;;		_vfpfcnvrt
  9863 ;;		_fputs
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text41
  9868  0036C2                     __ptext41:
  9869                           	opt callstack 0
  9870  0036C2                     _fputc:
  9871                           	opt callstack 0
  9872  0036C2  FFFF               	dw	65535	; assembler added errata NOP
  9873                           
  9874                           ;incstack = 0
  9875  0036C4  5003               	movf	fputc@fp,w,c
  9876  0036C6  1004               	iorwf	fputc@fp+1,w,c
  9877  0036C8  B4D8               	btfsc	status,2,c
  9878  0036CA  D004               	goto	u2780
  9879  0036CC  5003               	movf	fputc@fp,w,c
  9880  0036CE  1004               	iorwf	fputc@fp+1,w,c
  9881  0036D0  A4D8               	btfss	status,2,c
  9882  0036D2  D005               	goto	l3466
  9883  0036D4                     u2780:
  9884  0036D4  FFFF               	dw	65535	; assembler added errata NOP
  9885  0036D6  5001               	movf	fputc@c,w,c
  9886  0036D8  ECEF  F01F         	call	_putch
  9887  0036DC  D045               	goto	l1362
  9888  0036DE                     l3466:
  9889  0036DE  FFFF               	dw	65535	; assembler added errata NOP
  9890  0036E0  EE20 F004          	lfsr	2,4
  9891  0036E4  5003               	movf	fputc@fp,w,c
  9892  0036E6  26D9               	addwf	fsr2l,f,c
  9893  0036E8  5004               	movf	fputc@fp+1,w,c
  9894  0036EA  22DA               	addwfc	fsr2h,f,c
  9895  0036EC  50DE               	movf	postinc2,w,c
  9896  0036EE  10DE               	iorwf	postinc2,w,c
  9897  0036F0  B4D8               	btfsc	status,2,c
  9898  0036F2  D016               	goto	u2800
  9899  0036F4  EE20 F004          	lfsr	2,4
  9900  0036F8  5003               	movf	fputc@fp,w,c
  9901  0036FA  26D9               	addwf	fsr2l,f,c
  9902  0036FC  5004               	movf	fputc@fp+1,w,c
  9903  0036FE  22DA               	addwfc	fsr2h,f,c
  9904  003700  EE10 F002          	lfsr	1,2
  9905  003704  5003               	movf	fputc@fp,w,c
  9906  003706  26E1               	addwf	fsr1l,f,c
  9907  003708  5004               	movf	fputc@fp+1,w,c
  9908  00370A  22E2               	addwfc	fsr1h,f,c
  9909  00370C  50DE               	movf	postinc2,w,c
  9910  00370E  5CE6               	subwf	postinc1,w,c
  9911  003710  50E6               	movf	postinc1,w,c
  9912  003712  0A80               	xorlw	128
  9913  003714  6E09               	movwf	(??_fputc+4)& (0+255),c
  9914  003716  50DE               	movf	postinc2,w,c
  9915  003718  0A80               	xorlw	128
  9916  00371A  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  9917  00371C  B0D8               	btfsc	status,0,c
  9918  00371E  D024               	goto	l1362
  9919  003720                     u2800:
  9920  003720  FFFF               	dw	65535	; assembler added errata NOP
  9921  003722  EE20 F002          	lfsr	2,2
  9922  003726  5003               	movf	fputc@fp,w,c
  9923  003728  26D9               	addwf	fsr2l,f,c
  9924  00372A  5004               	movf	fputc@fp+1,w,c
  9925  00372C  22DA               	addwfc	fsr2h,f,c
  9926  00372E  CFDE F005          	movff	postinc2,??_fputc
  9927  003732  CFDD F006          	movff	postdec2,??_fputc+1
  9928  003736  C003  FFD9         	movff	fputc@fp,fsr2l
  9929  00373A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9930  00373E  CFDE F007          	movff	postinc2,??_fputc+2
  9931  003742  CFDD F008          	movff	postdec2,??_fputc+3
  9932  003746  5005               	movf	??_fputc,w,c
  9933  003748  2407               	addwf	??_fputc+2,w,c
  9934  00374A  6ED9               	movwf	fsr2l,c
  9935  00374C  5006               	movf	??_fputc+1,w,c
  9936  00374E  2008               	addwfc	??_fputc+3,w,c
  9937  003750  6EDA               	movwf	fsr2h,c
  9938  003752  C001  FFDF         	movff	fputc@c,indf2
  9939  003756  EE20 F002          	lfsr	2,2
  9940  00375A  5003               	movf	fputc@fp,w,c
  9941  00375C  26D9               	addwf	fsr2l,f,c
  9942  00375E  5004               	movf	fputc@fp+1,w,c
  9943  003760  22DA               	addwfc	fsr2h,f,c
  9944  003762  2ADE               	incf	postinc2,f,c
  9945  003764  0E00               	movlw	0
  9946  003766  22DD               	addwfc	postdec2,f,c
  9947  003768                     l1362:
  9948  003768  FFFF               	dw	65535	; assembler added errata NOP
  9949  00376A  0012               	return		;funcret
  9950  00376C  FFFF               	dw	65535	; errata NOP
  9951  00376E                     __end_of_fputc:
  9952                           	opt callstack 0
  9953                           
  9954 ;; *************** function _putch *****************
  9955 ;; Defined at:
  9956 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  c               1    wreg     unsigned char 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  c               1    0[COMRAM] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9970 ;;      Params:         0       0       0       0       0       0       0
  9971 ;;      Locals:         0       0       0       0       0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0
  9973 ;;      Totals:         0       0       0       0       0       0       0
  9974 ;;Total ram usage:        0 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    2
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_fputc
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           	psect	text42
  9985  003FDE                     __ptext42:
  9986                           	opt callstack 0
  9987  003FDE                     _putch:
  9988                           	opt callstack 0
  9989  003FDE  FFFF               	dw	65535	; assembler added errata NOP
  9990                           
  9991                           ;incstack = 0
  9992  003FE0  0012               	return		;funcret
  9993  003FE2  FFFF               	dw	65535	; errata NOP
  9994  003FE4                     __end_of_putch:
  9995                           	opt callstack 0
  9996                           
  9997 ;; *************** function _atoi *****************
  9998 ;; Defined at:
  9999 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10002 ;;		 -> STR_2(3), STR_1(4), 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  n               2   20[COMRAM] int 
 10005 ;;  neg             2   13[COMRAM] int 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  2    7[COMRAM] int 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10015 ;;      Params:         2       0       0       0       0       0       0
 10016 ;;      Locals:         9       0       0       0       0       0       0
 10017 ;;      Temps:          4       0       0       0       0       0       0
 10018 ;;      Totals:        15       0       0       0       0       0       0
 10019 ;;Total ram usage:       15 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    3
 10022 ;; This function calls:
 10023 ;;		___wmul
 10024 ;;		_isdigit
 10025 ;;		_isspace
 10026 ;; This function is called by:
 10027 ;;		_vfpfcnvrt
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text43
 10032  002B00                     __ptext43:
 10033                           	opt callstack 0
 10034  002B00                     _atoi:
 10035                           	opt callstack 0
 10036  002B00  FFFF               	dw	65535	; assembler added errata NOP
 10037                           
 10038                           ;incstack = 0
 10039  002B02  0E00               	movlw	0
 10040  002B04  6E16               	movwf	atoi@n+1,c
 10041  002B06  0E00               	movlw	0
 10042  002B08  6E15               	movwf	atoi@n,c
 10043  002B0A  0E00               	movlw	0
 10044  002B0C  6E0F               	movwf	atoi@neg+1,c
 10045  002B0E  0E00               	movlw	0
 10046  002B10  6E0E               	movwf	atoi@neg,c
 10047  002B12  D003               	goto	l3952
 10048  002B14                     l3950:
 10049  002B14  FFFF               	dw	65535	; assembler added errata NOP
 10050  002B16  4A08               	infsnz	atoi@s,f,c
 10051  002B18  2A09               	incf	atoi@s+1,f,c
 10052  002B1A                     l3952:
 10053  002B1A  FFFF               	dw	65535	; assembler added errata NOP
 10054  002B1C  0E01               	movlw	1
 10055  002B1E  6E14               	movwf	_atoi$1720,c
 10056  002B20  C008  FFF6         	movff	atoi@s,tblptrl
 10057  002B24  C009  FFF7         	movff	atoi@s+1,tblptrh
 10058  002B28                     	if	0	;tblptru may be non-zero
 10059  002B28                     	endif
 10060  002B28                     	if	0	;tblptru may be non-zero
 10061  002B28                     	endif
 10062  002B28  0008               	tblrd		*
 10063  002B2A  FFFF               	dw	65535	; errata NOP
 10064  002B2C  50F5               	movf	tablat,w,c
 10065  002B2E  0A20               	xorlw	32
 10066  002B30  B4D8               	btfsc	status,2,c
 10067  002B32  D019               	goto	l3960
 10068  002B34  0EF7               	movlw	247
 10069  002B36  6E0A               	movwf	??_atoi& (0+255),c
 10070  002B38  0EFF               	movlw	255
 10071  002B3A  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10072  002B3C  C008  FFF6         	movff	atoi@s,tblptrl
 10073  002B40  C009  FFF7         	movff	atoi@s+1,tblptrh
 10074  002B44                     	if	0	;tblptru may be non-zero
 10075  002B44                     	endif
 10076  002B44                     	if	0	;tblptru may be non-zero
 10077  002B44                     	endif
 10078  002B44  0008               	tblrd		*
 10079  002B46  FFFF               	dw	65535	; errata NOP
 10080  002B48  50F5               	movf	tablat,w,c
 10081  002B4A  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10082  002B4C  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10083  002B4E  500A               	movf	??_atoi,w,c
 10084  002B50  260C               	addwf	??_atoi+2,f,c
 10085  002B52  500B               	movf	??_atoi+1,w,c
 10086  002B54  220D               	addwfc	??_atoi+3,f,c
 10087  002B56  500D               	movf	??_atoi+3,w,c
 10088  002B58  E104               	bnz	u3810
 10089  002B5A  0E05               	movlw	5
 10090  002B5C  5C0C               	subwf	??_atoi+2,w,c
 10091  002B5E  A0D8               	btfss	status,0,c
 10092  002B60  D002               	goto	l3960
 10093  002B62                     u3810:
 10094  002B62  0E00               	movlw	0
 10095  002B64  6E14               	movwf	_atoi$1720,c
 10096  002B66                     l3960:
 10097  002B66  FFFF               	dw	65535	; assembler added errata NOP
 10098  002B68  C014  F010         	movff	_atoi$1720,_atoi$1719
 10099  002B6C  6A11               	clrf	_atoi$1719+1,c
 10100  002B6E  5010               	movf	_atoi$1719,w,c
 10101  002B70  1011               	iorwf	_atoi$1719+1,w,c
 10102  002B72  B4D8               	btfsc	status,2,c
 10103  002B74  D00A               	goto	l3970
 10104  002B76  D7CE               	goto	l3950
 10105  002B78                     l3966:
 10106  002B78  FFFF               	dw	65535	; assembler added errata NOP
 10107  002B7A  0E00               	movlw	0
 10108  002B7C  6E0F               	movwf	atoi@neg+1,c
 10109  002B7E  0E01               	movlw	1
 10110  002B80  6E0E               	movwf	atoi@neg,c
 10111  002B82                     l3968:
 10112  002B82  FFFF               	dw	65535	; assembler added errata NOP
 10113  002B84  4A08               	infsnz	atoi@s,f,c
 10114  002B86  2A09               	incf	atoi@s+1,f,c
 10115  002B88  D032               	goto	l3976
 10116  002B8A                     l3970:
 10117  002B8A  FFFF               	dw	65535	; assembler added errata NOP
 10118  002B8C  C008  FFF6         	movff	atoi@s,tblptrl
 10119  002B90  C009  FFF7         	movff	atoi@s+1,tblptrh
 10120  002B94                     	if	0	;tblptru may be non-zero
 10121  002B94                     	endif
 10122  002B94                     	if	0	;tblptru may be non-zero
 10123  002B94                     	endif
 10124  002B94  0008               	tblrd		*
 10125  002B96  FFFF               	dw	65535	; errata NOP
 10126  002B98  50F5               	movf	tablat,w,c
 10127  002B9A  6E0A               	movwf	??_atoi& (0+255),c
 10128  002B9C  6A0B               	clrf	(??_atoi+1)& (0+255),c
 10129                           
 10130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10131                           ; Switch size 1, requested type "simple"
 10132                           ; Number of cases is 1, Range of values is 0 to 0
 10133                           ; switch strategies available:
 10134                           ; Name         Instructions Cycles
 10135                           ; simple_byte            4     3 (average)
 10136                           ;	Chosen strategy is simple_byte
 10137  002B9E  500B               	movf	??_atoi+1,w,c
 10138  002BA0  0A00               	xorlw	0	; case 0
 10139  002BA2  A4D8               	btfss	status,2,c
 10140  002BA4  D024               	goto	l3976
 10141                           
 10142                           ; Switch size 1, requested type "simple"
 10143                           ; Number of cases is 2, Range of values is 43 to 45
 10144                           ; switch strategies available:
 10145                           ; Name         Instructions Cycles
 10146                           ; simple_byte            7     4 (average)
 10147                           ;	Chosen strategy is simple_byte
 10148  002BA6  500A               	movf	??_atoi,w,c
 10149  002BA8  0A2B               	xorlw	43	; case 43
 10150  002BAA  B4D8               	btfsc	status,2,c
 10151  002BAC  D7EA               	goto	l3968
 10152  002BAE  0A06               	xorlw	6	; case 45
 10153  002BB0  B4D8               	btfsc	status,2,c
 10154  002BB2  D7E2               	goto	l3966
 10155  002BB4  D01C               	goto	l3976
 10156  002BB6                     l3972:
 10157  002BB6  FFFF               	dw	65535	; assembler added errata NOP
 10158  002BB8  C015  F001         	movff	atoi@n,___wmul@multiplier
 10159  002BBC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10160  002BC0  0E00               	movlw	0
 10161  002BC2  6E04               	movwf	___wmul@multiplicand+1,c
 10162  002BC4  0E0A               	movlw	10
 10163  002BC6  6E03               	movwf	___wmul@multiplicand,c
 10164  002BC8  EC21  F01F         	call	___wmul	;wreg free
 10165  002BCC  C008  FFF6         	movff	atoi@s,tblptrl
 10166  002BD0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10167  002BD4                     	if	0	;tblptru may be non-zero
 10168  002BD4                     	endif
 10169  002BD4                     	if	0	;tblptru may be non-zero
 10170  002BD4                     	endif
 10171  002BD4  0008               	tblrd		*
 10172  002BD6  FFFF               	dw	65535	; errata NOP
 10173  002BD8  50F5               	movf	tablat,w,c
 10174  002BDA  5E01               	subwf	?___wmul,f,c
 10175  002BDC  0E00               	movlw	0
 10176  002BDE  5A02               	subwfb	?___wmul+1,f,c
 10177  002BE0  0E30               	movlw	48
 10178  002BE2  2401               	addwf	?___wmul,w,c
 10179  002BE4  6E15               	movwf	atoi@n,c
 10180  002BE6  0E00               	movlw	0
 10181  002BE8  2002               	addwfc	?___wmul+1,w,c
 10182  002BEA  6E16               	movwf	atoi@n+1,c
 10183  002BEC  D7CA               	goto	l3968
 10184  002BEE                     l3976:
 10185  002BEE  FFFF               	dw	65535	; assembler added errata NOP
 10186  002BF0  0ED0               	movlw	208
 10187  002BF2  6E0A               	movwf	??_atoi& (0+255),c
 10188  002BF4  0EFF               	movlw	255
 10189  002BF6  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10190  002BF8  C008  FFF6         	movff	atoi@s,tblptrl
 10191  002BFC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10192  002C00                     	if	0	;tblptru may be non-zero
 10193  002C00                     	endif
 10194  002C00                     	if	0	;tblptru may be non-zero
 10195  002C00                     	endif
 10196  002C00  0008               	tblrd		*
 10197  002C02  FFFF               	dw	65535	; errata NOP
 10198  002C04  50F5               	movf	tablat,w,c
 10199  002C06  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10200  002C08  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10201  002C0A  500A               	movf	??_atoi,w,c
 10202  002C0C  260C               	addwf	??_atoi+2,f,c
 10203  002C0E  500B               	movf	??_atoi+1,w,c
 10204  002C10  220D               	addwfc	??_atoi+3,f,c
 10205  002C12  500D               	movf	??_atoi+3,w,c
 10206  002C14  E106               	bnz	u3830
 10207  002C16  0E0A               	movlw	10
 10208  002C18  5C0C               	subwf	??_atoi+2,w,c
 10209  002C1A  B0D8               	btfsc	status,0,c
 10210  002C1C  D002               	goto	u3830
 10211  002C1E  0E01               	movlw	1
 10212  002C20  D002               	goto	u3840
 10213  002C22                     u3830:
 10214  002C22  FFFF               	dw	65535	; assembler added errata NOP
 10215  002C24  0E00               	movlw	0
 10216  002C26                     u3840:
 10217  002C26  FFFF               	dw	65535	; assembler added errata NOP
 10218  002C28  6E12               	movwf	_atoi$1721,c
 10219  002C2A  6A13               	clrf	_atoi$1721+1,c
 10220  002C2C  5012               	movf	_atoi$1721,w,c
 10221  002C2E  1013               	iorwf	_atoi$1721+1,w,c
 10222  002C30  A4D8               	btfss	status,2,c
 10223  002C32  D7C1               	goto	l3972
 10224  002C34  500E               	movf	atoi@neg,w,c
 10225  002C36  100F               	iorwf	atoi@neg+1,w,c
 10226  002C38  A4D8               	btfss	status,2,c
 10227  002C3A  D00D               	goto	l1316
 10228  002C3C  C015  F00A         	movff	atoi@n,??_atoi
 10229  002C40  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10230  002C44  1E0A               	comf	??_atoi,f,c
 10231  002C46  1E0B               	comf	??_atoi+1,f,c
 10232  002C48  4A0A               	infsnz	??_atoi,f,c
 10233  002C4A  2A0B               	incf	??_atoi+1,f,c
 10234  002C4C  C00A  F008         	movff	??_atoi,?_atoi
 10235  002C50  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10236  002C54  D005               	goto	l1319
 10237  002C56                     l1316:
 10238  002C56  FFFF               	dw	65535	; assembler added errata NOP
 10239  002C58  C015  F008         	movff	atoi@n,?_atoi
 10240  002C5C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10241  002C60                     l1319:
 10242  002C60  FFFF               	dw	65535	; assembler added errata NOP
 10243  002C62  0012               	return		;funcret
 10244  002C64  FFFF               	dw	65535	; errata NOP
 10245  002C66                     __end_of_atoi:
 10246                           	opt callstack 0
 10247                           
 10248 ;; *************** function _isspace *****************
 10249 ;; Defined at:
 10250 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  c               2    0[COMRAM] int 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  2    0[COMRAM] int 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10264 ;;      Params:         2       0       0       0       0       0       0
 10265 ;;      Locals:         1       0       0       0       0       0       0
 10266 ;;      Temps:          4       0       0       0       0       0       0
 10267 ;;      Totals:         7       0       0       0       0       0       0
 10268 ;;Total ram usage:        7 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    2
 10271 ;; This function calls:
 10272 ;;		Nothing
 10273 ;; This function is called by:
 10274 ;;		_atoi
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text44
 10279  003C02                     __ptext44:
 10280                           	opt callstack 0
 10281  003C02                     _isspace:
 10282                           	opt callstack 0
 10283  003C02  FFFF               	dw	65535	; assembler added errata NOP
 10284                           
 10285                           ;incstack = 0
 10286  003C04  0E01               	movlw	1
 10287  003C06  6E07               	movwf	_isspace$1756,c
 10288  003C08  0E20               	movlw	32
 10289  003C0A  1801               	xorwf	isspace@c,w,c
 10290  003C0C  1002               	iorwf	isspace@c+1,w,c
 10291  003C0E  B4D8               	btfsc	status,2,c
 10292  003C10  D014               	goto	l3676
 10293  003C12  0EF7               	movlw	247
 10294  003C14  6E03               	movwf	??_isspace& (0+255),c
 10295  003C16  0EFF               	movlw	255
 10296  003C18  6E04               	movwf	(??_isspace+1)& (0+255),c
 10297  003C1A  C001  F005         	movff	isspace@c,??_isspace+2
 10298  003C1E  C002  F006         	movff	isspace@c+1,??_isspace+3
 10299  003C22  5003               	movf	??_isspace,w,c
 10300  003C24  2605               	addwf	??_isspace+2,f,c
 10301  003C26  5004               	movf	??_isspace+1,w,c
 10302  003C28  2206               	addwfc	??_isspace+3,f,c
 10303  003C2A  5006               	movf	??_isspace+3,w,c
 10304  003C2C  E104               	bnz	u3200
 10305  003C2E  0E05               	movlw	5
 10306  003C30  5C05               	subwf	??_isspace+2,w,c
 10307  003C32  A0D8               	btfss	status,0,c
 10308  003C34  D002               	goto	l3676
 10309  003C36                     u3200:
 10310  003C36  0E00               	movlw	0
 10311  003C38  6E07               	movwf	_isspace$1756,c
 10312  003C3A                     l3676:
 10313  003C3A  FFFF               	dw	65535	; assembler added errata NOP
 10314  003C3C  C007  F001         	movff	_isspace$1756,?_isspace
 10315  003C40  6A02               	clrf	?_isspace+1,c
 10316  003C42  0012               	return		;funcret
 10317  003C44  FFFF               	dw	65535	; errata NOP
 10318  003C46                     __end_of_isspace:
 10319                           	opt callstack 0
 10320                           
 10321 ;; *************** function _isdigit *****************
 10322 ;; Defined at:
 10323 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  c               2    0[COMRAM] int 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;		None
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  2    0[COMRAM] int 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10337 ;;      Params:         2       0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0
 10339 ;;      Temps:          4       0       0       0       0       0       0
 10340 ;;      Totals:         6       0       0       0       0       0       0
 10341 ;;Total ram usage:        6 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    2
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_vfpfcnvrt
 10348 ;;		_atoi
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text45
 10353  003DAC                     __ptext45:
 10354                           	opt callstack 0
 10355  003DAC                     _isdigit:
 10356                           	opt callstack 0
 10357  003DAC  FFFF               	dw	65535	; assembler added errata NOP
 10358                           
 10359                           ;incstack = 0
 10360  003DAE  0ED0               	movlw	208
 10361  003DB0  6E03               	movwf	??_isdigit& (0+255),c
 10362  003DB2  0EFF               	movlw	255
 10363  003DB4  6E04               	movwf	(??_isdigit+1)& (0+255),c
 10364  003DB6  C001  F005         	movff	isdigit@c,??_isdigit+2
 10365  003DBA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10366  003DBE  5003               	movf	??_isdigit,w,c
 10367  003DC0  2605               	addwf	??_isdigit+2,f,c
 10368  003DC2  5004               	movf	??_isdigit+1,w,c
 10369  003DC4  2206               	addwfc	??_isdigit+3,f,c
 10370  003DC6  5006               	movf	??_isdigit+3,w,c
 10371  003DC8  E106               	bnz	u2970
 10372  003DCA  0E0A               	movlw	10
 10373  003DCC  5C05               	subwf	??_isdigit+2,w,c
 10374  003DCE  B0D8               	btfsc	status,0,c
 10375  003DD0  D002               	goto	u2970
 10376  003DD2  0E01               	movlw	1
 10377  003DD4  D002               	goto	u2980
 10378  003DD6                     u2970:
 10379  003DD6  FFFF               	dw	65535	; assembler added errata NOP
 10380  003DD8  0E00               	movlw	0
 10381  003DDA                     u2980:
 10382  003DDA  FFFF               	dw	65535	; assembler added errata NOP
 10383  003DDC  6E01               	movwf	?_isdigit,c
 10384  003DDE  6A02               	clrf	?_isdigit+1,c
 10385  003DE0  0012               	return		;funcret
 10386  003DE2  FFFF               	dw	65535	; errata NOP
 10387  003DE4                     __end_of_isdigit:
 10388                           	opt callstack 0
 10389                           
 10390 ;; *************** function ___wmul *****************
 10391 ;; Defined at:
 10392 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  multiplier      2    0[COMRAM] unsigned int 
 10395 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  product         2    4[COMRAM] unsigned int 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  2    0[COMRAM] unsigned int 
 10400 ;; Registers used:
 10401 ;;		wreg, status,2, status,0, prodl, prodh
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10407 ;;      Params:         4       0       0       0       0       0       0
 10408 ;;      Locals:         2       0       0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0
 10410 ;;      Totals:         6       0       0       0       0       0       0
 10411 ;;Total ram usage:        6 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    2
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_atoi
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text46
 10422  003E42                     __ptext46:
 10423                           	opt callstack 0
 10424  003E42                     ___wmul:
 10425                           	opt callstack 0
 10426  003E42  FFFF               	dw	65535	; assembler added errata NOP
 10427                           
 10428                           ;incstack = 0
 10429  003E44  5001               	movf	___wmul@multiplier,w,c
 10430  003E46  0203               	mulwf	___wmul@multiplicand,c
 10431  003E48  CFF3 F005          	movff	prodl,___wmul@product
 10432  003E4C  CFF4 F006          	movff	prodh,___wmul@product+1
 10433  003E50  5001               	movf	___wmul@multiplier,w,c
 10434  003E52  0204               	mulwf	___wmul@multiplicand+1,c
 10435  003E54  50F3               	movf	prodl,w,c
 10436  003E56  2606               	addwf	___wmul@product+1,f,c
 10437  003E58  5002               	movf	___wmul@multiplier+1,w,c
 10438  003E5A  0203               	mulwf	___wmul@multiplicand,c
 10439  003E5C  50F3               	movf	prodl,w,c
 10440  003E5E  2606               	addwf	___wmul@product+1,f,c
 10441  003E60  C005  F001         	movff	___wmul@product,?___wmul
 10442  003E64  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10443  003E68  0012               	return		;funcret
 10444  003E6A  FFFF               	dw	65535	; errata NOP
 10445  003E6C                     __end_of___wmul:
 10446                           	opt callstack 0
 10447                           
 10448 ;; *************** function _getchar *****************
 10449 ;; Defined at:
 10450 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  2   26[None  ] int 
 10457 ;; Registers used:
 10458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10464 ;;      Params:         0       0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    4
 10471 ;; This function calls:
 10472 ;;		_fgetc
 10473 ;; This function is called by:
 10474 ;;		_int_to_char
 10475 ;;		_float_to_char
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           	psect	text47
 10480  003F76                     __ptext47:
 10481                           	opt callstack 0
 10482  003F76                     _getchar:
 10483                           	opt callstack 0
 10484  003F76  FFFF               	dw	65535	; assembler added errata NOP
 10485                           
 10486                           ;	Return value of _getchar is never used
 10487                           
 10488                           ;incstack = 0
 10489  003F78  0E00               	movlw	0
 10490  003F7A  6E03               	movwf	fgetc@fp,c
 10491  003F7C  0E00               	movlw	0
 10492  003F7E  6E04               	movwf	fgetc@fp+1,c
 10493  003F80  EC54  F01C         	call	_fgetc	;wreg free
 10494  003F84  0012               	return		;funcret
 10495  003F86  FFFF               	dw	65535	; errata NOP
 10496  003F88                     __end_of_getchar:
 10497                           	opt callstack 0
 10498                           
 10499 ;; *************** function _fgetc *****************
 10500 ;; Defined at:
 10501 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10504 ;;		 -> NULL(0), 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  c               2    9[COMRAM] int 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2    2[COMRAM] int 
 10509 ;; Registers used:
 10510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10516 ;;      Params:         2       0       0       0       0       0       0
 10517 ;;      Locals:         2       0       0       0       0       0       0
 10518 ;;      Temps:          5       0       0       0       0       0       0
 10519 ;;      Totals:         9       0       0       0       0       0       0
 10520 ;;Total ram usage:        9 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    3
 10523 ;; This function calls:
 10524 ;;		_getch
 10525 ;; This function is called by:
 10526 ;;		_getchar
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text48
 10531  0038A8                     __ptext48:
 10532                           	opt callstack 0
 10533  0038A8                     _fgetc:
 10534                           	opt callstack 0
 10535  0038A8  FFFF               	dw	65535	; assembler added errata NOP
 10536                           
 10537                           ;incstack = 0
 10538  0038AA  5003               	movf	fgetc@fp,w,c
 10539  0038AC  1004               	iorwf	fgetc@fp+1,w,c
 10540  0038AE  A4D8               	btfss	status,2,c
 10541  0038B0  D012               	goto	l4612
 10542  0038B2  507E               	movf	_ungetcnt,w,c
 10543  0038B4  B4D8               	btfsc	status,2,c
 10544  0038B6  D007               	goto	l4610
 10545  0038B8  0E00               	movlw	0
 10546  0038BA  6E0B               	movwf	fgetc@c+1,c
 10547  0038BC  0E00               	movlw	0
 10548  0038BE  6E0A               	movwf	fgetc@c,c
 10549  0038C0  0E00               	movlw	0
 10550  0038C2  6E7E               	movwf	_ungetcnt,c
 10551  0038C4  D02F               	goto	l4614
 10552  0038C6                     l4610:
 10553  0038C6  FFFF               	dw	65535	; assembler added errata NOP
 10554  0038C8  ECDA  F01F         	call	_getch	;wreg free
 10555  0038CC  C001  F00A         	movff	?_getch,fgetc@c
 10556  0038D0  C002  F00B         	movff	?_getch+1,fgetc@c+1
 10557  0038D4  D027               	goto	l4614
 10558  0038D6                     l4612:
 10559  0038D6  FFFF               	dw	65535	; assembler added errata NOP
 10560  0038D8  EE20 F002          	lfsr	2,2
 10561  0038DC  5003               	movf	fgetc@fp,w,c
 10562  0038DE  26D9               	addwf	fsr2l,f,c
 10563  0038E0  5004               	movf	fgetc@fp+1,w,c
 10564  0038E2  22DA               	addwfc	fsr2h,f,c
 10565  0038E4  CFDE F005          	movff	postinc2,??_fgetc
 10566  0038E8  CFDD F006          	movff	postdec2,??_fgetc+1
 10567  0038EC  C003  FFD9         	movff	fgetc@fp,fsr2l
 10568  0038F0  C004  FFDA         	movff	fgetc@fp+1,fsr2h
 10569  0038F4  CFDE F007          	movff	postinc2,??_fgetc+2
 10570  0038F8  CFDD F008          	movff	postdec2,??_fgetc+3
 10571  0038FC  5005               	movf	??_fgetc,w,c
 10572  0038FE  2407               	addwf	??_fgetc+2,w,c
 10573  003900  6ED9               	movwf	fsr2l,c
 10574  003902  5006               	movf	??_fgetc+1,w,c
 10575  003904  2008               	addwfc	??_fgetc+3,w,c
 10576  003906  6EDA               	movwf	fsr2h,c
 10577  003908  50DF               	movf	indf2,w,c
 10578  00390A  6E09               	movwf	(??_fgetc+4)& (0+255),c
 10579  00390C  5009               	movf	??_fgetc+4,w,c
 10580  00390E  6E0A               	movwf	fgetc@c,c
 10581  003910  6A0B               	clrf	fgetc@c+1,c
 10582  003912  EE20 F002          	lfsr	2,2
 10583  003916  5003               	movf	fgetc@fp,w,c
 10584  003918  26D9               	addwf	fsr2l,f,c
 10585  00391A  5004               	movf	fgetc@fp+1,w,c
 10586  00391C  22DA               	addwfc	fsr2h,f,c
 10587  00391E  2ADE               	incf	postinc2,f,c
 10588  003920  0E00               	movlw	0
 10589  003922  22DD               	addwfc	postdec2,f,c
 10590  003924                     l4614:
 10591  003924  FFFF               	dw	65535	; assembler added errata NOP
 10592  003926  C00A  F003         	movff	fgetc@c,?_fgetc
 10593  00392A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 10594  00392E  0012               	return		;funcret
 10595  003930  FFFF               	dw	65535	; errata NOP
 10596  003932                     __end_of_fgetc:
 10597                           	opt callstack 0
 10598                           
 10599 ;; *************** function _getch *****************
 10600 ;; Defined at:
 10601 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  2    0[COMRAM] int 
 10608 ;; Registers used:
 10609 ;;		None
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10615 ;;      Params:         2       0       0       0       0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0
 10618 ;;      Totals:         2       0       0       0       0       0       0
 10619 ;;Total ram usage:        2 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    2
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_fgetc
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           	psect	text49
 10630  003FB4                     __ptext49:
 10631                           	opt callstack 0
 10632  003FB4                     _getch:
 10633                           	opt callstack 0
 10634  003FB4  FFFF               	dw	65535	; assembler added errata NOP
 10635                           
 10636                           ;incstack = 0
 10637  003FB6  6801               	setf	?_getch,c
 10638  003FB8  6802               	setf	?_getch+1,c
 10639  003FBA  0012               	return		;funcret
 10640  003FBC  FFFF               	dw	65535	; errata NOP
 10641  003FBE                     __end_of_getch:
 10642                           	opt callstack 0
 10643                           
 10644 ;; *************** function _UARTSendString *****************
 10645 ;; Defined at:
 10646 ;;		line 72 in file "serial.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10649 ;;		 -> STR_14(24), STR_13(13), STR_12(9), STR_11(13), 
 10650 ;;		 -> STR_10(9), STR_9(26), STR_8(9), STR_7(3), 
 10651 ;;		 -> STR_6(17), STR_5(12), STR_4(3), STR_3(24), 
 10652 ;;		 -> int_to_char@result(10), 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;  i               2   36[BANK0 ] int 
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10664 ;;      Params:         0       2       0       0       0       0       0
 10665 ;;      Locals:         0       2       0       0       0       0       0
 10666 ;;      Temps:          0       2       0       0       0       0       0
 10667 ;;      Totals:         0       6       0       0       0       0       0
 10668 ;;Total ram usage:        6 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    3
 10671 ;; This function calls:
 10672 ;;		_UARTSendChar
 10673 ;; This function is called by:
 10674 ;;		_main
 10675 ;;		_read_SRAM
 10676 ;;		_write_SRAM
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text50
 10681  003932                     __ptext50:
 10682                           	opt callstack 0
 10683  003932                     _UARTSendString:
 10684                           	opt callstack 0
 10685  003932  FFFF               	dw	65535	; assembler added errata NOP
 10686                           
 10687                           ;serial.c: 73:   TRISCbits.TRISC7 = 0;
 10688                           
 10689                           ;incstack = 0
 10690  003934  9E94               	bcf	3988,7,c	;volatile
 10691                           
 10692                           ;serial.c: 74:   int i = 0;
 10693  003936  0E00               	movlw	0
 10694  003938  0100               	movlb	0	; () banked
 10695  00393A  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
 10696  00393C  0E00               	movlw	0
 10697  00393E  6FA4               	movwf	UARTSendString@i& (0+255),b
 10698                           
 10699                           ;serial.c: 75:   while (c[i] != '\0') {
 10700  003940  D01E               	goto	l4944
 10701  003942                     l4940:
 10702  003942  FFFF               	dw	65535	; assembler added errata NOP
 10703                           
 10704                           ;serial.c: 76:     UARTSendChar(c[i]);
 10705  003944  0100               	movlb	0	; () banked
 10706  003946  51A4               	movf	UARTSendString@i& (0+255),w,b
 10707  003948  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10708  00394A  6FA2               	movwf	??_UARTSendString& (0+255),b
 10709  00394C  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10710  00394E  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10711  003950  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10712  003952  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10713  003956  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10714  00395A  6AF8               	clrf	tblptru,c
 10715  00395C  0E05               	movlw	(high __ramtop+-1)
 10716  00395E  64F7               	cpfsgt	tblptrh,c
 10717  003960  D004               	bra	u5227
 10718  003962  0008               	tblrd		*
 10719  003964  FFFF               	dw	65535	; errata NOP
 10720  003966  50F5               	movf	tablat,w,c
 10721  003968  D005               	bra	u5220
 10722  00396A                     u5227:
 10723  00396A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10724  00396E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10725  003972  50EF               	movf	indf0,w,c
 10726  003974                     u5220:
 10727  003974  EC9D  F01F         	call	_UARTSendChar
 10728                           
 10729                           ;serial.c: 77:     i++;
 10730  003978  0100               	movlb	0	; () banked
 10731  00397A  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
 10732  00397C  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
 10733  00397E                     l4944:
 10734  00397E  FFFF               	dw	65535	; assembler added errata NOP
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;serial.c: 75:   while (c[i] != '\0') {
 10738  003980  51A4               	movf	UARTSendString@i& (0+255),w,b
 10739  003982  25A0               	addwf	UARTSendString@c& (0+255),w,b
 10740  003984  6FA2               	movwf	??_UARTSendString& (0+255),b
 10741  003986  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 10742  003988  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 10743  00398A  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 10744  00398C  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 10745  003990  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 10746  003994  6AF8               	clrf	tblptru,c
 10747  003996  0E05               	movlw	(high __ramtop+-1)
 10748  003998  64F7               	cpfsgt	tblptrh,c
 10749  00399A  D004               	bra	u5237
 10750  00399C  0008               	tblrd		*
 10751  00399E  FFFF               	dw	65535	; errata NOP
 10752  0039A0  50F5               	movf	tablat,w,c
 10753  0039A2  D005               	bra	u5230
 10754  0039A4                     u5237:
 10755  0039A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10756  0039A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10757  0039AC  50EF               	movf	indf0,w,c
 10758  0039AE                     u5230:
 10759  0039AE  0900               	iorlw	0
 10760  0039B0  B4D8               	btfsc	status,2,c
 10761  0039B2  0012               	return		;funcret
 10762  0039B4  FFFF               	dw	65535	; assembler added errata NOP
 10763  0039B6  D7C5               	goto	l4940
 10764  0039B8  FFFF               	dw	65535	; errata NOP
 10765  0039BA                     __end_of_UARTSendString:
 10766                           	opt callstack 0
 10767                           
 10768 ;; *************** function _UARTNewLine *****************
 10769 ;; Defined at:
 10770 ;;		line 48 in file "serial.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		wreg, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10784 ;;      Params:         0       0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0       0
 10787 ;;      Totals:         0       0       0       0       0       0       0
 10788 ;;Total ram usage:        0 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    3
 10791 ;; This function calls:
 10792 ;;		_UARTSendChar
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;;		_read_SRAM
 10796 ;;		_write_SRAM
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text51
 10801  003F26                     __ptext51:
 10802                           	opt callstack 0
 10803  003F26                     _UARTNewLine:
 10804                           	opt callstack 0
 10805  003F26  FFFF               	dw	65535	; assembler added errata NOP
 10806                           
 10807                           ;serial.c: 49:   TRISCbits.TRISC7 = 0;
 10808                           
 10809                           ;incstack = 0
 10810  003F28  9E94               	bcf	3988,7,c	;volatile
 10811                           
 10812                           ;serial.c: 50:   UARTSendChar(0x0a);
 10813  003F2A  0E0A               	movlw	10
 10814  003F2C  EC9D  F01F         	call	_UARTSendChar
 10815                           
 10816                           ;serial.c: 51:   UARTSendChar(0x0d);
 10817  003F30  0E0D               	movlw	13
 10818  003F32  EC9D  F01F         	call	_UARTSendChar
 10819  003F36  0012               	return		;funcret
 10820  003F38  FFFF               	dw	65535	; errata NOP
 10821  003F3A                     __end_of_UARTNewLine:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _UARTSendChar *****************
 10825 ;; Defined at:
 10826 ;;		line 54 in file "serial.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;  c               1    wreg     unsigned char 
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  c               1    0[COMRAM] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10840 ;;      Params:         0       0       0       0       0       0       0
 10841 ;;      Locals:         1       0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0
 10843 ;;      Totals:         1       0       0       0       0       0       0
 10844 ;;Total ram usage:        1 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    2
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_UARTNewLine
 10851 ;;		_UARTSendString
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text52
 10856  003F3A                     __ptext52:
 10857                           	opt callstack 0
 10858  003F3A                     _UARTSendChar:
 10859                           	opt callstack 0
 10860  003F3A  FFFF               	dw	65535	; assembler added errata NOP
 10861                           
 10862                           ;incstack = 0
 10863                           ;UARTSendChar@c stored from wreg
 10864  003F3C  6E01               	movwf	UARTSendChar@c,c
 10865                           
 10866                           ;serial.c: 55:   TRISCbits.TRISC7 = 0;
 10867  003F3E  9E94               	bcf	3988,7,c	;volatile
 10868  003F40                     l232:
 10869  003F40  FFFF               	dw	65535	; assembler added errata NOP
 10870  003F42  A2AC               	btfss	4012,1,c	;volatile
 10871  003F44  D7FD               	goto	l232
 10872                           
 10873                           ;serial.c: 57:   TXREG = c;
 10874  003F46  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 10875  003F4A  0012               	return		;funcret
 10876  003F4C  FFFF               	dw	65535	; errata NOP
 10877  003F4E                     __end_of_UARTSendChar:
 10878                           	opt callstack 0
 10879                           
 10880 ;; *************** function _interrupt_enable *****************
 10881 ;; Defined at:
 10882 ;;		line 15 in file "serial.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		None
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10896 ;;      Params:         0       0       0       0       0       0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0
 10899 ;;      Totals:         0       0       0       0       0       0       0
 10900 ;;Total ram usage:        0 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    2
 10903 ;; This function calls:
 10904 ;;		Nothing
 10905 ;; This function is called by:
 10906 ;;		_main
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text53
 10911  003F88                     __ptext53:
 10912                           	opt callstack 0
 10913  003F88                     _interrupt_enable:
 10914                           	opt callstack 0
 10915  003F88  FFFF               	dw	65535	; assembler added errata NOP
 10916                           
 10917                           ;serial.c: 16:   INTCONbits.GIE = 1;
 10918                           
 10919                           ;incstack = 0
 10920  003F8A  8EF2               	bsf	4082,7,c	;volatile
 10921                           
 10922                           ;serial.c: 17:   INTCONbits.PEIE = 1;
 10923  003F8C  8CF2               	bsf	4082,6,c	;volatile
 10924                           
 10925                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
 10926  003F8E  8AF2               	bsf	4082,5,c	;volatile
 10927                           
 10928                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
 10929  003F90  84F1               	bsf	4081,2,c	;volatile
 10930                           
 10931                           ;serial.c: 20:   RCONbits.IPEN = 1;
 10932  003F92  8ED0               	bsf	4048,7,c	;volatile
 10933  003F94  0012               	return		;funcret
 10934  003F96  FFFF               	dw	65535	; errata NOP
 10935  003F98                     __end_of_interrupt_enable:
 10936                           	opt callstack 0
 10937                           
 10938 ;; *************** function _interrupt_disable *****************
 10939 ;; Defined at:
 10940 ;;		line 23 in file "serial.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		None
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10954 ;;      Params:         0       0       0       0       0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; Hardware stack levels required when called:    2
 10961 ;; This function calls:
 10962 ;;		Nothing
 10963 ;; This function is called by:
 10964 ;;		_main
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text54
 10969  003FA6                     __ptext54:
 10970                           	opt callstack 0
 10971  003FA6                     _interrupt_disable:
 10972                           	opt callstack 0
 10973  003FA6  FFFF               	dw	65535	; assembler added errata NOP
 10974                           
 10975                           ;serial.c: 24:   INTCONbits.GIE = 0;
 10976                           
 10977                           ;incstack = 0
 10978  003FA8  9EF2               	bcf	4082,7,c	;volatile
 10979                           
 10980                           ;serial.c: 25:   INTCONbits.PEIE = 0;
 10981  003FAA  9CF2               	bcf	4082,6,c	;volatile
 10982                           
 10983                           ;serial.c: 26:   INTCONbits.TMR0IE = 0;
 10984  003FAC  9AF2               	bcf	4082,5,c	;volatile
 10985                           
 10986                           ;serial.c: 27:   INTCON2bits.TMR0IP = 0;
 10987  003FAE  94F1               	bcf	4081,2,c	;volatile
 10988  003FB0  0012               	return		;funcret
 10989  003FB2  FFFF               	dw	65535	; errata NOP
 10990  003FB4                     __end_of_interrupt_disable:
 10991                           	opt callstack 0
 10992                           
 10993 ;; *************** function _initialize_TX *****************
 10994 ;; Defined at:
 10995 ;;		line 30 in file "serial.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11009 ;;      Params:         0       0       0       0       0       0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used:    1
 11015 ;; Hardware stack levels required when called:    2
 11016 ;; This function calls:
 11017 ;;		Nothing
 11018 ;; This function is called by:
 11019 ;;		_main
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text55
 11024  003F4E                     __ptext55:
 11025                           	opt callstack 0
 11026  003F4E                     _initialize_TX:
 11027                           	opt callstack 0
 11028  003F4E  FFFF               	dw	65535	; assembler added errata NOP
 11029                           
 11030                           ;serial.c: 31:   TXSTAbits.TX9 = 1;
 11031                           
 11032                           ;incstack = 0
 11033  003F50  8CAC               	bsf	4012,6,c	;volatile
 11034                           
 11035                           ;serial.c: 32:   TXSTAbits.TXEN = 1;
 11036  003F52  8AAC               	bsf	4012,5,c	;volatile
 11037                           
 11038                           ;serial.c: 33:   TXSTAbits.SYNC = 0;
 11039  003F54  98AC               	bcf	4012,4,c	;volatile
 11040                           
 11041                           ;serial.c: 34:   TXSTAbits.BRGH = 0;
 11042  003F56  94AC               	bcf	4012,2,c	;volatile
 11043                           
 11044                           ;serial.c: 35:   TXSTAbits.TX9D = 1;
 11045  003F58  80AC               	bsf	4012,0,c	;volatile
 11046                           
 11047                           ;serial.c: 36:   SPBRG = 25;
 11048  003F5A  0E19               	movlw	25
 11049  003F5C  6EAF               	movwf	4015,c	;volatile
 11050  003F5E  0012               	return		;funcret
 11051  003F60  FFFF               	dw	65535	; errata NOP
 11052  003F62                     __end_of_initialize_TX:
 11053                           	opt callstack 0
 11054                           
 11055 ;; *************** function _initialize_RX *****************
 11056 ;; Defined at:
 11057 ;;		line 39 in file "serial.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;		None
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;		None
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  1    wreg      void 
 11064 ;; Registers used:
 11065 ;;		wreg, status,2
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11071 ;;      Params:         0       0       0       0       0       0       0
 11072 ;;      Locals:         0       0       0       0       0       0       0
 11073 ;;      Temps:          0       0       0       0       0       0       0
 11074 ;;      Totals:         0       0       0       0       0       0       0
 11075 ;;Total ram usage:        0 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; Hardware stack levels required when called:    2
 11078 ;; This function calls:
 11079 ;;		Nothing
 11080 ;; This function is called by:
 11081 ;;		_main
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           	psect	text56
 11086  003F62                     __ptext56:
 11087                           	opt callstack 0
 11088  003F62                     _initialize_RX:
 11089                           	opt callstack 0
 11090  003F62  FFFF               	dw	65535	; assembler added errata NOP
 11091                           
 11092                           ;serial.c: 40:   RCSTA = 0x00;
 11093                           
 11094                           ;incstack = 0
 11095  003F64  0E00               	movlw	0
 11096  003F66  6EAB               	movwf	4011,c	;volatile
 11097                           
 11098                           ;serial.c: 41:   RCSTAbits.SPEN = 1;
 11099  003F68  8EAB               	bsf	4011,7,c	;volatile
 11100                           
 11101                           ;serial.c: 42:   RCSTAbits.RX9 = 1;
 11102  003F6A  8CAB               	bsf	4011,6,c	;volatile
 11103                           
 11104                           ;serial.c: 43:   RCSTAbits.CREN = 1;
 11105  003F6C  88AB               	bsf	4011,4,c	;volatile
 11106                           
 11107                           ;serial.c: 44:   RCSTAbits.ADDEN = 0;
 11108  003F6E  96AB               	bcf	4011,3,c	;volatile
 11109                           
 11110                           ;serial.c: 45:   RCSTAbits.RX9D = 1;
 11111  003F70  80AB               	bsf	4011,0,c	;volatile
 11112  003F72  0012               	return		;funcret
 11113  003F74  FFFF               	dw	65535	; errata NOP
 11114  003F76                     __end_of_initialize_RX:
 11115                           	opt callstack 0
 11116                           
 11117 ;; *************** function _initialize_PWM *****************
 11118 ;; Defined at:
 11119 ;;		line 5 in file "pwm.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  freq            2    0[COMRAM] int 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11133 ;;      Params:         2       0       0       0       0       0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0
 11136 ;;      Totals:         2       0       0       0       0       0       0
 11137 ;;Total ram usage:        2 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    2
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_main
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text57
 11148  003EF8                     __ptext57:
 11149                           	opt callstack 0
 11150  003EF8                     _initialize_PWM:
 11151                           	opt callstack 0
 11152  003EF8  FFFF               	dw	65535	; assembler added errata NOP
 11153                           
 11154                           ;pwm.c: 6:   T2CON &= ~(0x04);
 11155                           
 11156                           ;incstack = 0
 11157  003EFA  94CA               	bcf	4042,2,c	;volatile
 11158                           
 11159                           ;pwm.c: 7:   PR2 = 0xFF;
 11160  003EFC  68CB               	setf	4043,c	;volatile
 11161                           
 11162                           ;pwm.c: 8:   CCPR1L = 0xAA;
 11163  003EFE  0EAA               	movlw	170
 11164  003F00  6EBE               	movwf	4030,c	;volatile
 11165                           
 11166                           ;pwm.c: 9:   CCP1CON |= 0x00;
 11167  003F02  50BD               	movf	4029,w,c	;volatile
 11168                           
 11169                           ;pwm.c: 10:   T2CON = 0x07;
 11170  003F04  0E07               	movlw	7
 11171  003F06  6ECA               	movwf	4042,c	;volatile
 11172                           
 11173                           ;pwm.c: 11:   CCP1CON |= 0x0C;
 11174  003F08  0E0C               	movlw	12
 11175  003F0A  12BD               	iorwf	4029,f,c	;volatile
 11176  003F0C  0012               	return		;funcret
 11177  003F0E  FFFF               	dw	65535	; errata NOP
 11178  003F10                     __end_of_initialize_PWM:
 11179                           	opt callstack 0
 11180                           
 11181 ;; *************** function _UARTRecieveChar *****************
 11182 ;; Defined at:
 11183 ;;		line 60 in file "serial.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      unsigned char 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11197 ;;      Params:         0       0       0       0       0       0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0
 11199 ;;      Temps:          1       0       0       0       0       0       0
 11200 ;;      Totals:         1       0       0       0       0       0       0
 11201 ;;Total ram usage:        1 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    2
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text58
 11212  003E16                     __ptext58:
 11213                           	opt callstack 0
 11214  003E16                     _UARTRecieveChar:
 11215                           	opt callstack 0
 11216  003E16  FFFF               	dw	65535	; assembler added errata NOP
 11217                           
 11218                           ;serial.c: 61:   while (RCIF == 0) {
 11219                           
 11220                           ;incstack = 0
 11221  003E18  D00E               	goto	l5082
 11222  003E1A                     l239:
 11223  003E1A  FFFF               	dw	65535	; assembler added errata NOP
 11224                           
 11225                           ;serial.c: 62:     if (RCSTAbits.OERR == 1) {
 11226  003E1C  A2AB               	btfss	4011,1,c	;volatile
 11227  003E1E  D00B               	goto	l5082
 11228                           
 11229                           ;serial.c: 63:       RCSTAbits.OERR = 0;
 11230  003E20  92AB               	bcf	4011,1,c	;volatile
 11231                           
 11232                           ;serial.c: 64:       RCSTAbits.CREN = 0;
 11233  003E22  98AB               	bcf	4011,4,c	;volatile
 11234                           
 11235                           ;serial.c: 65:       RCSTAbits.CREN = 1;
 11236  003E24  88AB               	bsf	4011,4,c	;volatile
 11237                           
 11238                           ;serial.c: 66:       _delay((unsigned long)((10)*(16000000/4000.0)));
 11239  003E26  0E27               	movlw	39
 11240  003E28  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 11241  003E2A  0EFC               	movlw	252
 11242  003E2C                     u5557:
 11243  003E2C  FFFF               	dw	65535	; errata NOP
 11244  003E2E  2EE8               	decfsz	wreg,f,c
 11245  003E30  D7FD               	bra	u5557
 11246  003E32  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 11247  003E34  D7FB               	bra	u5557
 11248  003E36                     l5082:
 11249  003E36  FFFF               	dw	65535	; assembler added errata NOP
 11250                           
 11251                           ;serial.c: 61:   while (RCIF == 0) {
 11252  003E38  AA9E               	btfss	3998,5,c	;volatile
 11253  003E3A  D7EF               	goto	l239
 11254                           
 11255                           ;serial.c: 69:   return RCREG1;
 11256  003E3C  50AE               	movf	4014,w,c	;volatile
 11257  003E3E  0012               	return		;funcret
 11258  003E40  FFFF               	dw	65535	; errata NOP
 11259  003E42                     __end_of_UARTRecieveChar:
 11260                           	opt callstack 0
 11261                           
 11262 ;; *************** function _Timer0_Init *****************
 11263 ;; Defined at:
 11264 ;;		line 8 in file "timer.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, status,2
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11278 ;;      Params:         0       0       0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    2
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_main
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text59
 11293  003E6C                     __ptext59:
 11294                           	opt callstack 0
 11295  003E6C                     _Timer0_Init:
 11296                           	opt callstack 0
 11297  003E6C  FFFF               	dw	65535	; assembler added errata NOP
 11298                           
 11299                           ;timer.c: 9:  time_ms = 0;
 11300                           
 11301                           ;incstack = 0
 11302  003E6E  0E00               	movlw	0
 11303  003E70  0100               	movlb	0	; () banked
 11304  003E72  6FC4               	movwf	_time_ms& (0+255),b	;volatile
 11305  003E74  0E00               	movlw	0
 11306  003E76  6FC5               	movwf	(_time_ms+1)& (0+255),b	;volatile
 11307  003E78  0E00               	movlw	0
 11308  003E7A  6FC6               	movwf	(_time_ms+2)& (0+255),b	;volatile
 11309  003E7C  0E00               	movlw	0
 11310  003E7E  6FC7               	movwf	(_time_ms+3)& (0+255),b	;volatile
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 11314  003E80  9CD5               	bcf	4053,6,c	;volatile
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;timer.c: 11:  TMR0H = 0xFF;
 11318  003E82  68D7               	setf	4055,c	;volatile
 11319                           
 11320                           ;timer.c: 12:  TMR0L = 0x34;
 11321  003E84  0E34               	movlw	52
 11322  003E86  6ED6               	movwf	4054,c	;volatile
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 11326  003E88  94F2               	bcf	4082,2,c	;volatile
 11327                           
 11328                           ;timer.c: 14:  T0CON = 0x00;
 11329  003E8A  0E00               	movlw	0
 11330  003E8C  6ED5               	movwf	4053,c	;volatile
 11331                           
 11332                           ; BSR set to: 0
 11333  003E8E  0012               	return		;funcret
 11334  003E90  FFFF               	dw	65535	; errata NOP
 11335  003E92                     __end_of_Timer0_Init:
 11336                           	opt callstack 0
 11337                           
 11338 ;; *************** function _timingISR *****************
 11339 ;; Defined at:
 11340 ;;		line 31 in file "timer.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0, cstack
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11354 ;;      Params:         0       0       0       0       0       0       0
 11355 ;;      Locals:         0       0       0       0       0       0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0
 11357 ;;      Totals:         0       0       0       0       0       0       0
 11358 ;;Total ram usage:        0 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    1
 11361 ;; This function calls:
 11362 ;;		i2_Timer0_StartTimer
 11363 ;; This function is called by:
 11364 ;;		Interrupt level 2
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           	psect	intcode
 11369  000008                     __pintcode:
 11370                           	opt callstack 0
 11371  000008                     _timingISR:
 11372                           	opt callstack 0
 11373  000008  FFFF               	dw	65535	; assembler added errata NOP
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;incstack = 0
 11377  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11378                           
 11379                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11380  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11381  00000E  AAF2               	btfss	4082,5,c	;volatile
 11382  000010  D00D               	goto	i2l295
 11383                           
 11384                           ;timer.c: 33:   TMR0IF = 0;
 11385  000012  94F2               	bcf	4082,2,c	;volatile
 11386                           
 11387                           ;timer.c: 34:   time_ms++;
 11388  000014  0E01               	movlw	1
 11389  000016  0100               	movlb	0	; () banked
 11390  000018  27C4               	addwf	_time_ms& (0+255),f,b	;volatile
 11391  00001A  0E00               	movlw	0
 11392  00001C  23C5               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11393  00001E  23C6               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11394  000020  23C7               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;timer.c: 35:   TMR0H = 0xFF;
 11398  000022  68D7               	setf	4055,c	;volatile
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;timer.c: 36:   TMR0L = 0x34;
 11402  000024  0E34               	movlw	52
 11403  000026  6ED6               	movwf	4054,c	;volatile
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;timer.c: 37:   Timer0_StartTimer();
 11407  000028  ECE7  F01F         	call	i2_Timer0_StartTimer	;wreg free
 11408  00002C                     i2l295:
 11409  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11410  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11411  000030  0011               	retfie		f
 11412  000032  FFFF               	dw	65535	; errata NOP
 11413  000034                     __end_of_timingISR:
 11414                           	opt callstack 0
 11415                           
 11416 ;; *************** function i2_Timer0_StartTimer *****************
 11417 ;; Defined at:
 11418 ;;		line 21 in file "timer.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  2    0[None  ] int 
 11425 ;; Registers used:
 11426 ;;		None
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11432 ;;      Params:         0       0       0       0       0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0
 11435 ;;      Totals:         0       0       0       0       0       0       0
 11436 ;;Total ram usage:        0 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; This function calls:
 11439 ;;		Nothing
 11440 ;; This function is called by:
 11441 ;;		_timingISR
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text61
 11446  003FCE                     __ptext61:
 11447                           	opt callstack 0
 11448  003FCE                     i2_Timer0_StartTimer:
 11449                           	opt callstack 0
 11450  003FCE  FFFF               	dw	65535	; assembler added errata NOP
 11451                           
 11452                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11453                           
 11454                           ;incstack = 0
 11455  003FD0  8ED5               	bsf	4053,7,c	;volatile
 11456                           
 11457                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11458  003FD2  0012               	return		;funcret
 11459  003FD4  FFFF               	dw	65535	; errata NOP
 11460  003FD6                     __end_ofi2_Timer0_StartTimer:
 11461                           	opt callstack 0
 11462                           
 11463                           	psect	rparam
 11464  0000                     
 11465                           	psect	temp
 11466  00007F                     btemp:
 11467                           	opt callstack 0
 11468  00007F                     	ds	1
 11469  0000                     int$flags	set	btemp
 11470  0000                     wtemp8	set	btemp+1
 11471  0000                     ttemp5	set	btemp+1
 11472  0000                     ttemp6	set	btemp+4
 11473  0000                     ttemp7	set	btemp+8
 11474                           tosu	equ	0xFFF
 11475                           tosh	equ	0xFFE
 11476                           tosl	equ	0xFFD
 11477                           stkptr	equ	0xFFC
 11478                           pclatu	equ	0xFFB
 11479                           pclath	equ	0xFFA
 11480                           pcl	equ	0xFF9
 11481                           tblptru	equ	0xFF8
 11482                           tblptrh	equ	0xFF7
 11483                           tblptrl	equ	0xFF6
 11484                           tablat	equ	0xFF5
 11485                           prodh	equ	0xFF4
 11486                           prodl	equ	0xFF3
 11487                           indf0	equ	0xFEF
 11488                           postinc0	equ	0xFEE
 11489                           postdec0	equ	0xFED
 11490                           preinc0	equ	0xFEC
 11491                           plusw0	equ	0xFEB
 11492                           fsr0h	equ	0xFEA
 11493                           fsr0l	equ	0xFE9
 11494                           wreg	equ	0xFE8
 11495                           indf1	equ	0xFE7
 11496                           postinc1	equ	0xFE6
 11497                           postdec1	equ	0xFE5
 11498                           preinc1	equ	0xFE4
 11499                           plusw1	equ	0xFE3
 11500                           fsr1h	equ	0xFE2
 11501                           fsr1l	equ	0xFE1
 11502                           bsr	equ	0xFE0
 11503                           indf2	equ	0xFDF
 11504                           postinc2	equ	0xFDE
 11505                           postdec2	equ	0xFDD
 11506                           preinc2	equ	0xFDC
 11507                           plusw2	equ	0xFDB
 11508                           fsr2h	equ	0xFDA
 11509                           fsr2l	equ	0xFD9
 11510                           status	equ	0xFD8


Data Sizes:
    Strings     211
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     59     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_144(CODE[3]), STR_140(CODE[3]), STR_135(CODE[3]), STR_131(CODE[3]), 
		 -> STR_126(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), STR_113(CODE[4]), 
		 -> STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[4]), 
		 -> STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[4]), 
		 -> STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), 
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_144(CODE[3]), STR_140(CODE[3]), STR_135(CODE[3]), STR_131(CODE[3]), 
		 -> STR_126(CODE[3]), STR_122(CODE[3]), STR_117(CODE[4]), STR_113(CODE[4]), 
		 -> STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_93(CODE[4]), 
		 -> STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[4]), 
		 -> STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), 
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1722_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 26
		 -> STR_14(CODE[24]), STR_13(CODE[13]), STR_12(CODE[9]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_9(CODE[26]), STR_8(CODE[9]), STR_7(CODE[3]), 
		 -> STR_6(CODE[17]), STR_5(CODE[12]), STR_4(CODE[3]), STR_3(CODE[24]), 
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _write_SRAM->_int_to_char
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_SRAM
    _write_SRAM->_UARTSendString
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  166720
                                             52 BANK0      7     7      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                  _interrupt_disable
                   _interrupt_enable
                          _read_SRAM
                     _set_duty_cycle
                         _write_SRAM
 ---------------------------------------------------------------------------------
 (1) _write_SRAM                                          14    14      0   57615
                                             38 BANK0     14    14      0
                           _ReadTime
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (2) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     547
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51547
                                             38 BANK0      8     6      2
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49562
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1708
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_disable
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _set_duty_cycle
   _write_SRAM
     _ReadTime
     _Timer0_StartTimer
     _Timer0_StopTimer
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     ___fltol
       _get_temp (ARG)
         _ADC_Init
         _ADC_Read
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
     ___lldiv
       _ReadTime (ARG)
     _get_temp
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3B      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      15        0.0%
DATA                 0      0      FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar  4 01:26:48 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                                l232 3F40  
                                                                l163 2628  
                                                                l412 1FBA  
                                                                l333 3B6A  
                                                                l414 1FC4  
                                                                l334 3B52  
                                                                l239 3E1A  
                                                                l437 2988  
                                                                l439 2992  
                                                                l457 2F88  
                                                                l553 1870  
                                                                l394 37A4  
                                                                l491 21C8  
                                                                l476 27C6  
                                                                l493 21D2  
                                                                l637 3892  
                                                                l478 27D0  
                                                                l907 3474  
                                                       __CFG_CPB$OFF 000000  
                                                                _RC0 007C10  
                                                                _RB5 007C0D  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _abs 3D00  
                                                                _lcd 00BB  
                                                                _pad 376E  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                   ?_UARTRecieveChar 0001  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               ?_abs 0013  
                                                               l1140 1D2E  
                                                               l1048 3380  
                                                               l1224 1902  
                                                               l1241 1BBA  
                                                               l1233 1B2C  
                                                               l1058 369C  
                                                               l1234 1B26  
                                                               l1155 1E22  
                                                               l1147 1F36  
                                                               l1139 1D56  
                                                               l1316 2C56  
                                                               l1228 1BF2  
                                                               l1164 1E9A  
                                                               l1165 1E94  
                                                               l1319 2C60  
                                                               l1431 3AC0  
                                                               l1416 3600  
                                                               l1272 2D30  
                                                               l1265 2CA6  
                                                               l1362 3768  
                                                               l1426 3AB6  
                                                               l4020 0722  
                                                               l1268 2DBC  
                                                               l1285 3D2C  
                                                               l4102 0AB8  
                                                               l4022 0728  
                                                               l1288 3D36  
                                                               l4200 100A  
                                                               l4040 075A  
                                                               l4032 074A  
                                                               l4024 073A  
                                                               l4106 0AF2  
                                                               l5010 3442  
                                                               l5002 342A  
                                                               l3500 378A  
                                                               l4116 0B5C  
                                                               l4060 0840  
                                                               l4044 0768  
                                                               l4036 0752  
                                                               l4028 0742  
                                                               l3510 37CA  
                                                               l4206 101E  
                                                               l4126 0BD8  
                                                               l4062 0850  
                                                               l4046 07AE  
                                                               l3504 379A  
                                                               l4320 15D6  
                                                               l4216 1048  
                                                               l4136 0CB8  
                                                               l4080 0948  
                                                               l4400 39F8  
                                                               l5016 3462  
                                                               l5008 3434  
                                                               l3514 37FA  
                                                               l3506 37B0  
                                                               l3610 30D2  
                                                               l3602 3090  
                                                               l4306 1554  
                                                               l4226 10DA  
                                                               l4170 0E68  
                                                               l4154 0E12  
                                                               l4146 0D62  
                                                               l4082 0958  
                                                               l4058 0820  
                                                               l3612 30E8  
                                                               l3700 1F98  
                                                               l4260 1300  
                                                               l4252 1252  
                                                               l4244 11E0  
                                                               l4236 1146  
                                                               l5300 2620  
                                                               l3622 314C  
                                                               l3606 30B6  
                                                               l4334 1636  
                                                               l4078 0928  
                                                               l4414 1C26  
                                                               l3480 3C6A  
                                                               l3800 2AD2  
                                                               l4192 0FCE  
                                                               l4096 0A12  
                                                               l5304 2630  
                                                               l5082 3E36  
                                                               l4610 38C6  
                                                               l3466 36DE  
                                                               l3570 2E42  
                                                               l3626 3174  
                                                               l3618 3134  
                                                               l3714 1FE2  
                                                               l4362 17D6  
                                                               l4186 0F5C  
                                                               l4178 0EE8  
                                                               l4450 1C9E  
                                                               l4442 1C7A  
                                                               l4418 1C2C  
                                                               l5314 2664  
                                                               l4612 38D6  
                                                               l3476 3C52  
                                                               l3484 3DF0  
                                                               l3572 2E58  
                                                               l3564 2E1A  
                                                               l3812 2F4A  
                                                               l3636 32F2  
                                                               l4372 1824  
                                                               l4348 170C  
                                                               l4292 144A  
                                                               l4284 13D6  
                                                               l4276 1356  
                                                               l4196 0FDA  
                                                               l4516 1D8E  
                                                               l5340 2710  
                                                               l5324 2686  
                                                               l4614 3924  
                                                               l3486 3DF6  
                                                               l3590 2EF8  
                                                               l3582 2EB8  
                                                               l3558 2DF0  
                                                               l3718 1FF2  
                                                               l3830 2FDE  
                                                               l3822 2FA2  
                                                               l3638 3308  
                                                               l4518 1D94  
                                                               l4526 1DA8  
                                                               l4438 1C74  
                                                               l5350 275C  
                                                               ?_pad 0011  
                                                               l3752 2178  
                                                               l3728 20EC  
                                                               l3840 3024  
                                                               l3648 3368  
                                                               l3664 3684  
                                                               l3656 3622  
                                                               l3920 22D6  
                                                               l4368 1816  
                                                               l4544 1E4A  
                                                               l4560 1E70  
                                                               l4536 1E10  
                                                               l4480 1CDC  
                                                               l5344 2730  
                                                               l5336 26F0  
                                                               l3586 2ED0  
                                                               l3770 29D2  
                                                               l3826 2FBC  
                                                               l3658 3638  
                                                               l3906 223C  
                                                               l4378 1838  
                                                               l4554 1E62  
                                                               l4810 2D16  
                                                               l5354 277E  
                                                               l5290 25FE  
                                                               l3676 3C3A  
                                                               l3684 3ADC  
                                                               l3748 215C  
                                                               l3844 303E  
                                                               l3836 3006  
                                                               l4580 1EE2  
                                                               l4492 1D3E  
                                                               l4804 2CD8  
                                                               l5348 2750  
                                                               l3950 2B14  
                                                               l3686 3AEA  
                                                               l3782 2A5E  
                                                               l4398 39D0  
                                                               l4646 3B30  
                                                               l4670 18AA  
                                                               l4494 1D44  
                                                               l4806 2CE0  
                                                               l5294 2606  
                                                               l3960 2B66  
                                                               l3952 2B1A  
                                                               l3944 23D0  
                                                               l3928 2352  
                                                               l4744 1AEC  
                                                               l4672 18BC  
                                                               l4592 1F16  
                                                               l4816 2D58  
                                                               l4808 2CEE  
                                                               l3970 2B8A  
                                                               l3858 2808  
                                                               l4738 1ACC  
                                                               l4594 1F1A  
                                                               l4834 2DAA  
                                                               l4818 2D66  
                                                               l4940 3942  
                                                               l3972 2BB6  
                                                               l3868 28F6  
                                                               l3892 21E8  
                                                               l4780 1BDC  
                                                               l4764 1B72  
                                                               l4668 18A4  
                                                               l4588 1F0C  
                                                               l3966 2B78  
                                                               l4686 18EA  
                                                               l4944 397E  
                                                               l3976 2BEE  
                                                               l3968 2B82  
                                                               l4960 383C  
                                                               l4768 1B92  
                                                               l4696 1924  
                                                               l4688 18F0  
                                                               l3898 2218  
                                                               l4962 384A  
                                                               l3996 3570  
                                                               l4972 3882  
                                                               l3998 3580  
                                                               l4982 33C8  
                                                               l4798 2CB8  
                                                               l4998 3418  
                                                               STR_1 06A3  
                                                               STR_2 06D1  
                                                               STR_3 061B  
                                                               STR_4 06CE  
                                                               STR_5 0669  
                                                               STR_6 064B  
                                                               STR_7 06CE  
                                                               STR_8 067E  
                                                               STR_9 0601  
                                                               u3011 2E22  
                                                               u3030 2E5E  
                                                               u3200 3C36  
                                                               u3121 32D2  
                                                               u3220 1F66  
                                                               u3140 330E  
                                                               u4020 0994  
                                                               u3310 211E  
                                                               u3230 1F6A  
                                                               u4110 0B96  
                                                               u4030 0998  
                                                               u3311 211C  
                                                               u3320 212E  
                                                               u3400 2A6E  
                                                               u4200 0F16  
                                                               u4040 09A6  
                                                               u3090 30EE  
                                                               u3330 2134  
                                                               u3170 363E  
                                                               u4130 0C32  
                                                               u5010 1B1E  
                                                               u3260 1FAE  
                                                               u3420 2A90  
                                                               u3350 2144  
                                                               u3430 2AA0  
                                                               u4150 0D12  
                                                               u4070 0A6C  
                                                               u2800 3720  
                                                               u3280 1FDA  
                                                               u3440 2AA6  
                                                               u3520 2FD2  
                                                               u3600 2922  
                                                               u4400 1690  
                                                               u4320 1404  
                                                               u3601 2920  
                                                               u3290 20FC  
                                                               u3610 2932  
                                                               u4250 1108  
                                                               u4090 0B4C  
                                                               u5050 1B82  
                                                               u5220 3974  
                                                               u3380 297C  
                                                               u3620 2938  
                                                               u2900 3D9E  
                                                               u3700 22B0  
                                                               u4420 1766  
                                                               u4340 14A4  
                                                               u5060 1BA2  
                                                               u5140 2D72  
                                                               u5230 39AE  
                                                               u3390 2A38  
                                                               u3550 3054  
                                                               u2910 3DA2  
                                                               u2830 3D66  
                                                               u3710 22B4  
                                                               u3471 2F2A  
                                                               u2920 3CF2  
                                                               u2840 3D6A  
                                                               u3640 21BC  
                                                               u4360 15AE  
                                                               u3810 2B62  
                                                               u3570 27BA  
                                                               u2930 3CF6  
                                                               u3730 232C  
                                                               u5330 344A  
                                                               u5227 396A  
                                                               u3395 2A24  
                                                               u2780 36D4  
                                                               u2940 3A9A  
                                                               u3740 2364  
                                                               u3660 2238  
                                                               u4380 1610  
                                                               u5260 3850  
                                                               u4540 1D00  
                                                               u5500 2742  
                                                               u5237 39A4  
                                                               u3830 2C22  
                                                               u3910 35D6  
                                                               u2950 3A9E  
                                                               u3670 2272  
                                                               u4550 1D10  
                                                               u3735 2318  
                                                               u3840 2C26  
                                                               u3760 2386  
                                                               u3680 2276  
                                                               u5280 33B4  
                                                               u4800 1EF0  
                                                               u4720 1E76  
                                                               u4560 1D14  
                                                               u3761 2384  
                                                               u2970 3DD6  
                                                               u2890 3D10  
                                                               u3770 2396  
                                                               u5290 33EA  
                                                               u2980 3DDA  
                                                               u3780 239C  
                                                               u4740 1E8C  
                                                               _RCIF 007CF5  
                                                               u4590 1D60  
                                                               u5470 26E2  
                                                               u5295 33DE  
                                                               u4680 1E36  
                                                               u5480 2702  
                                                               u5537 276A  
                                                               u3970 088C  
                                                               u5490 2722  
                                                               u5547 3B44  
                                                               u3980 0890  
                                                               u5557 3E2C  
                                                               u3990 089E  
                                                               u4960 1910  
                                                               u4970 1A8C  
                                                               u4975 1A80  
                                                   ??_initialize_PWM 0003  
                                                       __CFG_STVR$ON 000000  
                                                               abs@a 0013  
                                                               _dbuf 00D5  
                                                 initialize_PWM@freq 0001  
                                                               _atoi 2B00  
                                                               _ctoa 3AC6  
                                                               _main 25DE  
                                                               _dtoa 1F3C  
                                                               _prec 00CE  
                                                               _otoa 2966  
                                                               _nout 00CA  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr0h 000FEA  
                                                               fsr1h 000FE2  
                                                               indf0 000FEF  
                                                               fsr2h 000FDA  
                                                               fsr0l 000FE9  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 2F1E  
                                                               btemp 007F  
                                                               _utoa 27A4  
                                                               _xtoa 21A6  
                                                   __end_of_ADC_Init 3FA6  
                                                   __end_of_ADC_Read 3B70  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                              write_SRAM@temperature 00B0  
                                                      __CFG_OSC$RCIO 000000  
                                                  int_to_char@result 0092  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                           __end_of_interrupt_enable 3F98  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 2F1E  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 1F3C  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 319A  
                                                              STR_10 0675  
                                                              STR_11 065C  
                                                              STR_12 0675  
                                                              STR_13 065C  
                                                              STR_21 068F  
                                                              STR_30 0690  
                                                              STR_14 0633  
                                                              STR_15 068B  
                                                              STR_17 068B  
                                                              STR_33 06AD  
                                                              STR_26 068C  
                                                              STR_42 06B0  
                                                              STR_35 06AD  
                                                              STR_51 0697  
                                                              STR_19 068F  
                                                              STR_44 06B0  
                                                              STR_53 0697  
                                                              STR_61 06BF  
                                                              STR_37 06B3  
                                                              STR_46 06B6  
                                                              STR_39 06B3  
                                                              STR_63 06BF  
                                                              STR_71 0693  
                                                              STR_48 06B6  
                                                              STR_73 0693  
                                                              STR_81 06B9  
                                                              STR_58 0698  
                                                              STR_66 06C2  
                                                              STR_83 06B9  
                                                              STR_91 069B  
                                                              STR_68 06C2  
                                                              STR_93 069B  
                                                              STR_78 0694  
                                                              STR_86 06BC  
                                                              STR_88 06BC  
                                                    __end_of___flmul 1BF8  
                                                              STR_98 069C  
                                                              ?_otoa 001C  
                                                    __end_of___flsub 3BBA  
                                                    __end_of___fltol 347A  
                                                              ?_stoa 000A  
                                                    __end_of___lldiv 38A8  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 33A6  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 36C2  
                                                              i2l295 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_getchar 3F88  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _fgetc 38A8  
                                                              _flags 00D0  
                                                              _getch 3FB4  
                                                              _errno 00C8  
                                                              _fputc 36C2  
                                                    __end_of_isalpha 3D00  
                                                              _fputs 3C46  
                                                    __end_of_isdigit 3DE4  
                                                    __end_of_read_op 3EF8  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 00CC  
                                                              ctoa@c 001E  
                                                              _putch 3FDE  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3D74  
                                                    __end_of_isspace 3C46  
                                                    __end_of_isupper 3DAC  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 3A70  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 3606  
                                                    __end_of_toupper 3AC6  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1876 000D  
                                                    __initialization 3C88  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2C66  
                                                       __end_of_ctoa 3B1C  
                                                       __end_of_main 27A4  
                                                       __end_of_dtoa 21A6  
                                                       __end_of_otoa 2B00  
                                                       __end_of_stoa 3062  
                                                       __end_of_utoa 2966  
                                                       __end_of_xtoa 23FE  
                                                   __end_of_ReadTime 3F26  
                                                 int_to_char@the_num 009C  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00B4  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             ?_fputs 000A  
                                                             STR_103 06A4  
                                                             STR_111 069F  
                                                             STR_113 069F  
                                                             STR_122 06A0  
                                                             STR_106 06C5  
                                                             _ADRESH 000FC4  
                                                             STR_131 06C8  
                                                             STR_115 0687  
                                                             STR_108 06C5  
                                                             STR_140 06CB  
                                                             STR_117 0687  
                                                             STR_133 06A7  
                                                             STR_126 0688  
                                                             STR_142 06AA  
                                                             _ADRESL 000FC3  
                                                             STR_135 06A7  
                                                             STR_144 06AA  
                                                             STR_129 06C8  
                                                             STR_138 06CB  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 2DC2  
                                                      ??_Timer0_Init 0001  
                                                    write_op@address 0002  
                                                i2_Timer0_StartTimer 3FCE  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 3544  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 3E42  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lldiv 000D  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 3CAE  
                                            __size_of_UARTSendString 0088  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                  main@input_address 00B6  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3DE4  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ??_read_op 0001  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 3A1A  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                   __end_of_write_op 3EB4  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 3CB6  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                  ?_Timer0_StopTimer 0001  
                                                     __pcstackCOMRAM 0001  
                                                 ??_Timer0_StopTimer 0001  
                                                       __pidataBANK0 3FD6  
                                                      __end_of_fgetc 3932  
                                                      __end_of_getch 3FBE  
                                                      __end_of_fputc 376E  
                                                      __end_of_fputs 3C88  
                                                __end_of_Timer0_Init 3E92  
                                                      __end_of_putch 3FE4  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 00BB  
                                                          ?_ReadTime 0001  
                                                 __size_of_read_SRAM 0130  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 3F62  
                                                      _initialize_TX 3F4E  
                                                    _write_SRAM$2152 00A8  
                                                    _write_SRAM$2153 00AC  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                  ?_interrupt_enable 0001  
                                                            ?_strlen 0001  
                                                 ??_interrupt_enable 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                         ??_ReadTime 0005  
                                           __size_of_UARTRecieveChar 002C  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 3E6C  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2DC2  
                                                            ___fladd 1BF8  
                                                            ___aomod 3062  
                                                            ___flmul 1876  
                                                            ___flsub 3B70  
                                                            ___fltol 33A6  
                                                            ___lldiv 3818  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 32CA  
                                                            ___lomod 3606  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 3932  
                                                            _address 00D2  
                                                            __pcinit 3C88  
                                                            __ramtop 0600  
                                                            __ptext0 25DE  
                                                            __ptext1 23FE  
                                                            __ptext2 3E92  
                                                            __ptext3 347A  
                                                            __ptext4 2C66  
                                                            __ptext5 3B70  
                                                            __ptext6 1BF8  
                                                            __ptext7 1876  
                                                            __ptext8 3B1C  
                                                            __ptext9 3F98  
                                                          ?_write_op 0001  
                                                            _getchar 3F76  
                                                          _T0CONbits 000FD5  
                                                  __end_of_read_SRAM 32CA  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3CC4  
                                                            _isdigit 3DAC  
                                                            _read_op 3ED6  
                                                         ??___xxtofl 0005  
                                                            _islower 3D3C  
                                                            _isspace 3C02  
                                                            _isupper 3D74  
                                                            fgetc@fp 0003  
                                                            _time_ms 00C4  
                                                            atoi@neg 000E  
                                                            _sprintf 3A1A  
                                                         ??_get_temp 0034  
                                                            _strncmp 3544  
                                                            _toupper 3A70  
                                               end_of_initialization 3CB6  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                    ___lldiv@divisor 0009  
                                                  __end_of_timingISR 0034  
                                                    ___lldiv@counter 0011  
                                                  __end_of_vfpfcnvrt 1876  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 39BA  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                         ??_write_op 0002  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 3EB4  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 3FC6  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00A0  
                                                  ??_UARTRecieveChar 0001  
                                                         _write_SRAM 23FE  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 3E6C  
                                                        vfpfcnvrt@vp 0067  
                                             __end_of_set_duty_cycle 3ED6  
                                          __size_of_Timer0_StopTimer 0008  
                                          __end_of_Timer0_StartTimer 3FCE  
                                               read_SRAM@stored_temp 00AA  
                                                     __end_of_strlen 3E16  
                                                start_initialization 3C88  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 3D3C  
                                                        __end_of_pad 3818  
                                                 set_duty_cycle@mask 0003  
                                                  __size_of_ReadTime 0016  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00F5  
                                               __end_of_UARTSendChar 3F4E  
                                        __end_ofi2_Timer0_StartTimer 3FD6  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 0080  
                                              set_duty_cycle@upper_8 0002  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                          __size_of_interrupt_enable 0010  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1720 0014  
                                                          _atoi$1721 0012  
                                                          _atoi$1719 0010  
                                                       ?_Timer0_Init 0001  
                                                          _dtoa$1073 002E  
                                                      UARTSendChar@c 0001  
                                                     _initialize_PWM 3EF8  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lldiv 0005  
                                                           ?___lodiv 0001  
                                                        ?_write_SRAM 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                  _interrupt_disable 3FA6  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           ?_read_op 0001  
                                                           _ADC_Init 3F98  
                                                           _ADC_Read 3B1C  
                                                  __size_of_write_op 0022  
                                                           ?_islower 0001  
                                                 ?_interrupt_disable 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                          _read_SRAM 319A  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 0080  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                ??_interrupt_disable 0001  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00A0  
                                                    UARTSendString@i 00A4  
                                             __end_of_initialize_PWM 3F10  
                                                __end_of_int_to_char 3C02  
                                                write_SRAM@curr_time 00B2  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 00C0  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 06D6  
                                          __end_of_interrupt_disable 3FB4  
                                                          _xtoa$1110 0031  
                                                          _xtoa$1109 002F  
                                                  ___wmul@multiplier 0001  
                                                   _Timer0_StopTimer 3FBE  
                                                          main@input 00BA  
                                                       _isspace$1756 0007  
                                                         ?_read_SRAM 00A6  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 3C9C  
                                                __size_of_write_SRAM 01E0  
                                                    _UARTRecieveChar 3E16  
                                                           _ReadTime 3F10  
                                                   ??_UARTSendString 00A2  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 3F3A  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lldiv 0090  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 0082  
                                                           ___xxtofl 2C66  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_read_op 0022  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 3818  
                                                           __ptext11 33A6  
                                                           __ptext20 39BA  
                                                           __ptext12 3FBE  
                                                           __ptext21 06D6  
                                                           __ptext13 3FC6  
                                                           __ptext30 3544  
                                                           __ptext22 21A6  
                                                           __ptext14 3F10  
                                                           __ptext31 2F1E  
                                                           __ptext23 3A70  
                                                           __ptext15 3EB4  
                                                           __ptext40 3C46  
                                                           __ptext32 2966  
                                                           __ptext24 3D3C  
                                                           __ptext16 319A  
                                                           __ptext41 36C2  
                                                           __ptext33 1F3C  
                                                           __ptext25 3D74  
                                                           __ptext17 3ED6  
                                                           __ptext50 3932  
                                                           __ptext42 3FDE  
                                                           __ptext34 3D00  
                                                           __ptext26 3CC4  
                                                           __ptext18 3BBA  
                                                           __ptext51 3F26  
                                                           __ptext43 2B00  
                                                           __ptext35 3062  
                                                           __ptext27 27A4  
                                                           __ptext19 3A1A  
                                                           __ptext52 3F3A  
                                                           __ptext44 3C02  
                                                           __ptext36 2DC2  
                                                           __ptext28 3606  
                                                           __ptext61 3FCE  
                                                           __ptext53 3F88  
                                                           __ptext45 3DAC  
                                                           __ptext37 3AC6  
                                                           __ptext29 32CA  
                                                           __ptext54 3FA6  
                                                           __ptext46 3E42  
                                                           __ptext38 376E  
                                                           __ptext55 3F4E  
                                                           __ptext47 3F76  
                                                           __ptext39 3DE4  
                                                           __ptext56 3F62  
                                                           __ptext48 38A8  
                                                           __ptext57 3EF8  
                                                           __ptext49 3FB4  
                                                           __ptext58 3E16  
                                                           __ptext59 3E6C  
                                                   __size_of_isupper 0038  
                                                           _get_temp 347A  
                                                   _interrupt_enable 3F88  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                       _UARTSendChar 3F3A  
                                                        _int_to_char 3BBA  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 01C6  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 3F76  
                                              __end_of_initialize_TX 3F62  
                                                          stoa@F1152 00F5  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                     read_op@address 0001  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 00D4  
                                                           _ungetcnt 007E  
                                                           _vfprintf 39BA  
                                                   read_SRAM@address 00A6  
                                         __size_of_interrupt_disable 000E  
                                                           main@temp 00B8  
                                              read_SRAM@time_elapsed 00AC  
                                                   ___aomod@dividend 0001  
                                                           _write_op 3E92  
                                                     _vfpfcnvrt$1124 005B  
                                                     _vfpfcnvrt$1125 005D  
                                                         _INTCONbits 000FF2  
                                            __end_of_UARTRecieveChar 3E42  
                                                        ??_read_SRAM 00A8  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 3FE4  
                                                          sprintf@ap 0090  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                   ___lldiv@dividend 0005  
                                                        _UARTNewLine 3F26  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                       ??_write_SRAM 00A6  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                      read_op@result 0002  
                                                           sprintf@f 008A  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 0080  
                                                   ___lldiv@quotient 000D  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                 __end_of_write_SRAM 25DE  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                           __end_of_Timer0_StopTimer 3FC6  
                                                       ___aomod@sign 0012  
