

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar  1 02:13:50 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F452 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  0001EE                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for stoa@F1152
   119  0001EE  28                 	db	40
   120  0001EF  6E                 	db	110
   121  0001F0  75                 	db	117
   122  0001F1  6C                 	db	108
   123  0001F2  6C                 	db	108
   124  0001F3  29                 	db	41
   125  0001F4  00                 	db	0
   126  0000                     _CCP1CON	set	4029
   127  0000                     _CCPR1L	set	4030
   128  0000                     _PR2	set	4043
   129  0000                     _T2CON	set	4042
   130  0000                     _ADRESL	set	4035
   131  0000                     _ADRESH	set	4036
   132  0000                     _ADCON0	set	4034
   133  0000                     _SSPBUF	set	4041
   134  0000                     _SSPCON1	set	4038
   135  0000                     _SSPSTATbits	set	4039
   136  0000                     _T0CON	set	4053
   137  0000                     _TMR0L	set	4054
   138  0000                     _TMR0H	set	4055
   139  0000                     _T0CONbits	set	4053
   140  0000                     _ADCON1	set	4033
   141  0000                     _RCREG1	set	4014
   142  0000                     _TXREG	set	4013
   143  0000                     _RCSTAbits	set	4011
   144  0000                     _RCSTA	set	4011
   145  0000                     _SPBRG	set	4015
   146  0000                     _TXSTAbits	set	4012
   147  0000                     _RCONbits	set	4048
   148  0000                     _INTCON2bits	set	4081
   149  0000                     _INTCONbits	set	4082
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TRISA	set	3986
   152  0000                     _PORTA	set	3968
   153  0000                     _PORTD	set	3971
   154  0000                     _PORTB	set	3969
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISC	set	3988
   158  0000                     _GO_nDONE	set	32274
   159  0000                     _TMR0IE	set	32661
   160  0000                     _TMR0IF	set	32658
   161  0000                     _RCIF	set	31989
   162  0000                     _TMR2IP	set	31993
   163  0000                     _TMR2IE	set	31977
   164  0000                     _RC0	set	31760
   165  0000                     _RB5	set	31757
   166                           
   167                           	psect	smallconst
   168  000600                     __psmallconst:
   169                           	opt callstack 0
   170  000600  00                 	db	0
   171  000601                     STR_3:
   172  000601  52                 	db	82	;'R'
   173  000602  65                 	db	101	;'e'
   174  000603  61                 	db	97	;'a'
   175  000604  64                 	db	100	;'d'
   176  000605  79                 	db	121	;'y'
   177  000606  20                 	db	32
   178  000607  66                 	db	102	;'f'
   179  000608  6F                 	db	111	;'o'
   180  000609  72                 	db	114	;'r'
   181  00060A  20                 	db	32
   182  00060B  65                 	db	101	;'e'
   183  00060C  76                 	db	118	;'v'
   184  00060D  65                 	db	101	;'e'
   185  00060E  6E                 	db	110	;'n'
   186  00060F  20                 	db	32
   187  000610  61                 	db	97	;'a'
   188  000611  64                 	db	100	;'d'
   189  000612  64                 	db	100	;'d'
   190  000613  72                 	db	114	;'r'
   191  000614  65                 	db	101	;'e'
   192  000615  73                 	db	115	;'s'
   193  000616  73                 	db	115	;'s'
   194  000617  20                 	db	32
   195  000618  69                 	db	105	;'i'
   196  000619  6E                 	db	110	;'n'
   197  00061A  70                 	db	112	;'p'
   198  00061B  75                 	db	117	;'u'
   199  00061C  74                 	db	116	;'t'
   200  00061D  00                 	db	0
   201  00061E                     STR_10:
   202  00061E  44                 	db	68	;'D'
   203  00061F  6F                 	db	111	;'o'
   204  000620  6E                 	db	110	;'n'
   205  000621  65                 	db	101	;'e'
   206  000622  20                 	db	32
   207  000623  72                 	db	114	;'r'
   208  000624  65                 	db	101	;'e'
   209  000625  61                 	db	97	;'a'
   210  000626  64                 	db	100	;'d'
   211  000627  69                 	db	105	;'i'
   212  000628  6E                 	db	110	;'n'
   213  000629  67                 	db	103	;'g'
   214  00062A  20                 	db	32
   215  00062B  66                 	db	102	;'f'
   216  00062C  72                 	db	114	;'r'
   217  00062D  6F                 	db	111	;'o'
   218  00062E  6D                 	db	109	;'m'
   219  00062F  20                 	db	32
   220  000630  6D                 	db	109	;'m'
   221  000631  65                 	db	101	;'e'
   222  000632  6D                 	db	109	;'m'
   223  000633  6F                 	db	111	;'o'
   224  000634  72                 	db	114	;'r'
   225  000635  79                 	db	121	;'y'
   226  000636  2E                 	db	46
   227  000637  00                 	db	0
   228  000638                     STR_4:
   229  000638  54                 	db	84	;'T'
   230  000639  65                 	db	101	;'e'
   231  00063A  6D                 	db	109	;'m'
   232  00063B  70                 	db	112	;'p'
   233  00063C  65                 	db	101	;'e'
   234  00063D  72                 	db	114	;'r'
   235  00063E  61                 	db	97	;'a'
   236  00063F  74                 	db	116	;'t'
   237  000640  75                 	db	117	;'u'
   238  000641  72                 	db	114	;'r'
   239  000642  65                 	db	101	;'e'
   240  000643  20                 	db	32
   241  000644  61                 	db	97	;'a'
   242  000645  74                 	db	116	;'t'
   243  000646  20                 	db	32
   244  000647  61                 	db	97	;'a'
   245  000648  64                 	db	100	;'d'
   246  000649  64                 	db	100	;'d'
   247  00064A  72                 	db	114	;'r'
   248  00064B  65                 	db	101	;'e'
   249  00064C  73                 	db	115	;'s'
   250  00064D  73                 	db	115	;'s'
   251  00064E  20                 	db	32
   252  00064F  00                 	db	0
   253  000650                     STR_15:
   254  000650  44                 	db	68	;'D'
   255  000651  6F                 	db	111	;'o'
   256  000652  6E                 	db	110	;'n'
   257  000653  65                 	db	101	;'e'
   258  000654  20                 	db	32
   259  000655  77                 	db	119	;'w'
   260  000656  72                 	db	114	;'r'
   261  000657  69                 	db	105	;'i'
   262  000658  74                 	db	116	;'t'
   263  000659  69                 	db	105	;'i'
   264  00065A  6E                 	db	110	;'n'
   265  00065B  67                 	db	103	;'g'
   266  00065C  20                 	db	32
   267  00065D  74                 	db	116	;'t'
   268  00065E  6F                 	db	111	;'o'
   269  00065F  20                 	db	32
   270  000660  6D                 	db	109	;'m'
   271  000661  65                 	db	101	;'e'
   272  000662  6D                 	db	109	;'m'
   273  000663  6F                 	db	111	;'o'
   274  000664  72                 	db	114	;'r'
   275  000665  79                 	db	121	;'y'
   276  000666  2E                 	db	46
   277  000667  00                 	db	0
   278  000668                     STR_7:
   279  000668  54                 	db	84	;'T'
   280  000669  69                 	db	105	;'i'
   281  00066A  6D                 	db	109	;'m'
   282  00066B  65                 	db	101	;'e'
   283  00066C  20                 	db	32
   284  00066D  61                 	db	97	;'a'
   285  00066E  74                 	db	116	;'t'
   286  00066F  20                 	db	32
   287  000670  61                 	db	97	;'a'
   288  000671  64                 	db	100	;'d'
   289  000672  64                 	db	100	;'d'
   290  000673  72                 	db	114	;'r'
   291  000674  65                 	db	101	;'e'
   292  000675  73                 	db	115	;'s'
   293  000676  73                 	db	115	;'s'
   294  000677  20                 	db	32
   295  000678  00                 	db	0
   296  000679                     STR_12:
   297  000679  20                 	db	32
   298  00067A  74                 	db	116	;'t'
   299  00067B  6F                 	db	111	;'o'
   300  00067C  20                 	db	32
   301  00067D  61                 	db	97	;'a'
   302  00067E  64                 	db	100	;'d'
   303  00067F  64                 	db	100	;'d'
   304  000680  72                 	db	114	;'r'
   305  000681  65                 	db	101	;'e'
   306  000682  73                 	db	115	;'s'
   307  000683  73                 	db	115	;'s'
   308  000684  20                 	db	32
   309  000685  00                 	db	0
   310  000686                     STR_6:
   311  000686  20                 	db	32
   312  000687  64                 	db	100	;'d'
   313  000688  65                 	db	101	;'e'
   314  000689  67                 	db	103	;'g'
   315  00068A  72                 	db	114	;'r'
   316  00068B  65                 	db	101	;'e'
   317  00068C  65                 	db	101	;'e'
   318  00068D  73                 	db	115	;'s'
   319  00068E  20                 	db	32
   320  00068F  43                 	db	67	;'C'
   321  000690  20                 	db	32
   322  000691  00                 	db	0
   323  000692                     STR_11:
   324  000692  57                 	db	87	;'W'
   325  000693  72                 	db	114	;'r'
   326  000694  69                 	db	105	;'i'
   327  000695  74                 	db	116	;'t'
   328  000696  69                 	db	105	;'i'
   329  000697  6E                 	db	110	;'n'
   330  000698  67                 	db	103	;'g'
   331  000699  20                 	db	32
   332  00069A  00                 	db	0
   333  00069B                     STR_9:
   334  00069B  20                 	db	32
   335  00069C  6D                 	db	109	;'m'
   336  00069D  69                 	db	105	;'i'
   337  00069E  6E                 	db	110	;'n'
   338  00069F  75                 	db	117	;'u'
   339  0006A0  74                 	db	116	;'t'
   340  0006A1  65                 	db	101	;'e'
   341  0006A2  73                 	db	115	;'s'
   342  0006A3  00                 	db	0
   343  0006A4                     STR_116:
   344  0006A4  68                 	db	104	;'h'
   345  0006A5  68                 	db	104	;'h'
   346  0006A6  58                 	db	88	;'X'
   347  0006A7  00                 	db	0
   348  0006A8                     STR_16:
   349  0006A8  68                 	db	104	;'h'
   350  0006A9  68                 	db	104	;'h'
   351  0006AA  64                 	db	100	;'d'
   352  0006AB  00                 	db	0
   353  0006AC                     STR_20:
   354  0006AC  68                 	db	104	;'h'
   355  0006AD  68                 	db	104	;'h'
   356  0006AE  69                 	db	105	;'i'
   357  0006AF  00                 	db	0
   358  0006B0                     STR_72:
   359  0006B0  68                 	db	104	;'h'
   360  0006B1  68                 	db	104	;'h'
   361  0006B2  6E                 	db	110	;'n'
   362  0006B3  00                 	db	0
   363  0006B4                     STR_52:
   364  0006B4  68                 	db	104	;'h'
   365  0006B5  68                 	db	104	;'h'
   366  0006B6  6F                 	db	111	;'o'
   367  0006B7  00                 	db	0
   368  0006B8                     STR_92:
   369  0006B8  68                 	db	104	;'h'
   370  0006B9  68                 	db	104	;'h'
   371  0006BA  75                 	db	117	;'u'
   372  0006BB  00                 	db	0
   373  0006BC                     STR_112:
   374  0006BC  68                 	db	104	;'h'
   375  0006BD  68                 	db	104	;'h'
   376  0006BE  78                 	db	120	;'x'
   377  0006BF  00                 	db	0
   378  0006C0                     STR_1:
   379  0006C0  25                 	db	37
   380  0006C1  6C                 	db	108	;'l'
   381  0006C2  75                 	db	117	;'u'
   382  0006C3  00                 	db	0
   383  0006C4                     STR_134:
   384  0006C4  6C                 	db	108	;'l'
   385  0006C5  58                 	db	88	;'X'
   386  0006C6  00                 	db	0
   387  0006C7                     STR_143:
   388  0006C7  7A                 	db	122	;'z'
   389  0006C8  58                 	db	88	;'X'
   390  0006C9  00                 	db	0
   391  0006CA                     STR_34:
   392  0006CA  6C                 	db	108	;'l'
   393  0006CB  64                 	db	100	;'d'
   394  0006CC  00                 	db	0
   395  0006CD                     STR_43:
   396  0006CD  7A                 	db	122	;'z'
   397  0006CE  64                 	db	100	;'d'
   398  0006CF  00                 	db	0
   399  0006D0                     STR_38:
   400  0006D0  6C                 	db	108	;'l'
   401  0006D1  69                 	db	105	;'i'
   402  0006D2  00                 	db	0
   403  0006D3                     STR_47:
   404  0006D3  7A                 	db	122	;'z'
   405  0006D4  69                 	db	105	;'i'
   406  0006D5  00                 	db	0
   407  0006D6                     STR_82:
   408  0006D6  6C                 	db	108	;'l'
   409  0006D7  6E                 	db	110	;'n'
   410  0006D8  00                 	db	0
   411  0006D9                     STR_87:
   412  0006D9  7A                 	db	122	;'z'
   413  0006DA  6E                 	db	110	;'n'
   414  0006DB  00                 	db	0
   415  0006DC                     STR_62:
   416  0006DC  6C                 	db	108	;'l'
   417  0006DD  6F                 	db	111	;'o'
   418  0006DE  00                 	db	0
   419  0006DF                     STR_67:
   420  0006DF  7A                 	db	122	;'z'
   421  0006E0  6F                 	db	111	;'o'
   422  0006E1  00                 	db	0
   423  0006E2                     STR_107:
   424  0006E2  7A                 	db	122	;'z'
   425  0006E3  75                 	db	117	;'u'
   426  0006E4  00                 	db	0
   427  0006E5                     STR_130:
   428  0006E5  6C                 	db	108	;'l'
   429  0006E6  78                 	db	120	;'x'
   430  0006E7  00                 	db	0
   431  0006E8                     STR_139:
   432  0006E8  7A                 	db	122	;'z'
   433  0006E9  78                 	db	120	;'x'
   434  0006EA  00                 	db	0
   435  0006EB                     STR_5:
   436  0006EB  3A                 	db	58	;':'
   437  0006EC  20                 	db	32
   438  0006ED  00                 	db	0
   439  0006EE  25                 	db	37
   440  0006EF  64                 	db	100	;'d'
   441  0006F0  00                 	db	0
   442  0000                     
   443                           ; #config settings
   444  0006F1  00                 	db	0	; dummy byte at the end
   445  0000                     
   446                           	psect	cinit
   447  003E68                     __pcinit:
   448                           	opt callstack 0
   449  003E68                     start_initialization:
   450                           	opt callstack 0
   451  003E68                     __initialization:
   452                           	opt callstack 0
   453                           
   454                           ; Initialize objects allocated to BANK0 (7 bytes)
   455                           ; load TBLPTR registers with __pidataBANK0
   456  003E68  0EEE               	movlw	low __pidataBANK0
   457  003E6A  6EF6               	movwf	tblptrl,c
   458  003E6C  0E01               	movlw	high __pidataBANK0
   459  003E6E  6EF7               	movwf	tblptrh,c
   460  003E70  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   461  003E72  6EF8               	movwf	tblptru,c
   462  003E74  EE00  F0F5         	lfsr	0,__pdataBANK0
   463  003E78  EE10 F007          	lfsr	1,7
   464  003E7C                     copy_data0:
   465  003E7C  0009               	tblrd		*+
   466  003E7E  CFF5 FFEE          	movff	tablat,postinc0
   467  003E82  50E5               	movf	postdec1,w,c
   468  003E84  50E1               	movf	fsr1l,w,c
   469  003E86  E1FA               	bnz	copy_data0
   470                           
   471                           ; Clear objects allocated to BANK0 (58 bytes)
   472  003E88  EE00  F0BB         	lfsr	0,__pbssBANK0
   473  003E8C  0E3A               	movlw	58
   474  003E8E                     clear_0:
   475  003E8E  6AEE               	clrf	postinc0,c
   476  003E90  06E8               	decf	wreg,f,c
   477  003E92  E1FD               	bnz	clear_0
   478                           
   479                           ; Clear objects allocated to COMRAM (1 bytes)
   480  003E94  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   481  003E96                     end_of_initialization:
   482                           	opt callstack 0
   483  003E96                     __end_of__initialization:
   484                           	opt callstack 0
   485  003E96  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   486  003E98  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   487  003E9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   488  003E9C  6EF8               	movwf	tblptru,c
   489  003E9E  0100               	movlb	0
   490  003EA0  EF77  F013         	goto	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMRAM
   493  00007E                     __pbssCOMRAM:
   494                           	opt callstack 0
   495  00007E                     _ungetcnt:
   496                           	opt callstack 0
   497  00007E                     	ds	1
   498                           
   499                           	psect	bssBANK0
   500  0000BB                     __pbssBANK0:
   501                           	opt callstack 0
   502  0000BB                     _lcd:
   503                           	opt callstack 0
   504  0000BB                     	ds	5
   505  0000C0                     _time_ms_2:
   506                           	opt callstack 0
   507  0000C0                     	ds	4
   508  0000C4                     _time_ms:
   509                           	opt callstack 0
   510  0000C4                     	ds	4
   511  0000C8                     _errno:
   512                           	opt callstack 0
   513  0000C8                     	ds	2
   514  0000CA                     _nout:
   515                           	opt callstack 0
   516  0000CA                     	ds	2
   517  0000CC                     _width:
   518                           	opt callstack 0
   519  0000CC                     	ds	2
   520  0000CE                     _prec:
   521                           	opt callstack 0
   522  0000CE                     	ds	2
   523  0000D0                     _flags:
   524                           	opt callstack 0
   525  0000D0                     	ds	2
   526  0000D2                     _address:
   527                           	opt callstack 0
   528  0000D2                     	ds	2
   529  0000D4                     	ds	1
   530  0000D5                     _dbuf:
   531                           	opt callstack 0
   532  0000D5                     	ds	32
   533                           
   534                           	psect	dataBANK0
   535  0000F5                     __pdataBANK0:
   536                           	opt callstack 0
   537  0000F5                     stoa@F1152:
   538                           	opt callstack 0
   539  0000F5                     	ds	7
   540                           
   541                           	psect	cstackBANK0
   542  000080                     __pcstackBANK0:
   543                           	opt callstack 0
   544  000080                     ?_sprintf:
   545                           	opt callstack 0
   546  000080                     sprintf@s:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x0
   550  000080                     	ds	2
   551  000082                     sprintf@fmt:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x2
   555  000082                     	ds	8
   556  00008A                     sprintf@f:
   557                           	opt callstack 0
   558                           
   559                           ; 6 bytes @ 0xA
   560  00008A                     	ds	6
   561  000090                     sprintf@ap:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x10
   565  000090                     	ds	2
   566  000092                     int_to_char@result:
   567                           	opt callstack 0
   568                           
   569                           ; 10 bytes @ 0x12
   570  000092                     	ds	10
   571  00009C                     int_to_char@the_num:
   572                           	opt callstack 0
   573                           
   574                           ; 4 bytes @ 0x1C
   575  00009C                     	ds	4
   576  0000A0                     UARTSendString@c:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x20
   580  0000A0                     	ds	2
   581  0000A2                     ??_UARTSendString:
   582                           
   583                           ; 1 bytes @ 0x22
   584  0000A2                     	ds	2
   585  0000A4                     UARTSendString@i:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x24
   589  0000A4                     	ds	2
   590  0000A6                     ??_write_SRAM:
   591  0000A6                     read_SRAM@address:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x26
   595  0000A6                     	ds	2
   596  0000A8                     ??_read_SRAM:
   597  0000A8                     _write_SRAM$2154:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x28
   601  0000A8                     	ds	2
   602  0000AA                     read_SRAM@stored_temp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x2A
   606  0000AA                     	ds	2
   607  0000AC                     read_SRAM@time_elapsed:
   608                           	opt callstack 0
   609  0000AC                     _write_SRAM$2155:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x2C
   613  0000AC                     	ds	4
   614  0000B0                     write_SRAM@temperature:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x30
   618  0000B0                     	ds	2
   619  0000B2                     write_SRAM@curr_time:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x32
   623  0000B2                     	ds	2
   624  0000B4                     ??_main:
   625                           
   626                           ; 1 bytes @ 0x34
   627  0000B4                     	ds	2
   628  0000B6                     main@input_address:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x36
   632  0000B6                     	ds	2
   633  0000B8                     main@temp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x38
   637  0000B8                     	ds	2
   638  0000BA                     main@input:
   639                           	opt callstack 0
   640                           
   641                           ; 1 bytes @ 0x3A
   642  0000BA                     	ds	1
   643                           
   644                           	psect	cstackCOMRAM
   645  000001                     __pcstackCOMRAM:
   646                           	opt callstack 0
   647  000001                     ??_UARTRecieveChar:
   648  000001                     ?_ADC_Read:
   649                           	opt callstack 0
   650  000001                     ?_strlen:
   651                           	opt callstack 0
   652  000001                     ?_isupper:
   653                           	opt callstack 0
   654  000001                     ?_isalpha:
   655                           	opt callstack 0
   656  000001                     ?_isdigit:
   657                           	opt callstack 0
   658  000001                     ?_strncmp:
   659                           	opt callstack 0
   660  000001                     ?_isspace:
   661                           	opt callstack 0
   662  000001                     ?_getch:
   663                           	opt callstack 0
   664  000001                     ?_islower:
   665                           	opt callstack 0
   666  000001                     ?___wmul:
   667                           	opt callstack 0
   668  000001                     ?_ReadTime:
   669                           	opt callstack 0
   670  000001                     ?___fladd:
   671                           	opt callstack 0
   672  000001                     ?___xxtofl:
   673                           	opt callstack 0
   674  000001                     ?___aodiv:
   675                           	opt callstack 0
   676  000001                     ?___aomod:
   677                           	opt callstack 0
   678  000001                     ?___lodiv:
   679                           	opt callstack 0
   680  000001                     ?___lomod:
   681                           	opt callstack 0
   682  000001                     write_op@data:
   683                           	opt callstack 0
   684  000001                     read_op@address:
   685                           	opt callstack 0
   686  000001                     UARTSendChar@c:
   687                           	opt callstack 0
   688  000001                     set_duty_cycle@lower_2:
   689                           	opt callstack 0
   690  000001                     initialize_PWM@freq:
   691                           	opt callstack 0
   692  000001                     ___wmul@multiplier:
   693                           	opt callstack 0
   694  000001                     isalpha@c:
   695                           	opt callstack 0
   696  000001                     isdigit@c:
   697                           	opt callstack 0
   698  000001                     isspace@c:
   699                           	opt callstack 0
   700  000001                     isupper@c:
   701                           	opt callstack 0
   702  000001                     fputc@c:
   703                           	opt callstack 0
   704  000001                     strlen@s:
   705                           	opt callstack 0
   706  000001                     strncmp@_l:
   707                           	opt callstack 0
   708  000001                     islower@c:
   709                           	opt callstack 0
   710  000001                     ___fladd@b:
   711                           	opt callstack 0
   712  000001                     ___xxtofl@val:
   713                           	opt callstack 0
   714  000001                     ___aodiv@dividend:
   715                           	opt callstack 0
   716  000001                     ___aomod@dividend:
   717                           	opt callstack 0
   718  000001                     ___lodiv@dividend:
   719                           	opt callstack 0
   720  000001                     ___lomod@dividend:
   721                           	opt callstack 0
   722                           
   723                           ; 8 bytes @ 0x0
   724  000001                     	ds	1
   725  000002                     write_op@address:
   726                           	opt callstack 0
   727  000002                     read_op@result:
   728                           	opt callstack 0
   729  000002                     set_duty_cycle@upper_8:
   730                           	opt callstack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     ??_ADC_Read:
   735  000003                     ??_isupper:
   736  000003                     ??_isalpha:
   737  000003                     ??_isdigit:
   738  000003                     ??_isspace:
   739  000003                     ??_islower:
   740  000003                     ?_fgetc:
   741                           	opt callstack 0
   742  000003                     set_duty_cycle@mask:
   743                           	opt callstack 0
   744  000003                     ___wmul@multiplicand:
   745                           	opt callstack 0
   746  000003                     fputc@fp:
   747                           	opt callstack 0
   748  000003                     fgetc@fp:
   749                           	opt callstack 0
   750  000003                     strlen@a:
   751                           	opt callstack 0
   752  000003                     strncmp@_r:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000003                     	ds	2
   757  000005                     ??_fputc:
   758  000005                     ??_fgetc:
   759  000005                     ??___xxtofl:
   760  000005                     ?___lldiv:
   761                           	opt callstack 0
   762  000005                     ADC_Read@channel:
   763                           	opt callstack 0
   764  000005                     ___wmul@product:
   765                           	opt callstack 0
   766  000005                     strncmp@n:
   767                           	opt callstack 0
   768  000005                     ___lldiv@dividend:
   769                           	opt callstack 0
   770  000005                     ___fladd@a:
   771                           	opt callstack 0
   772                           
   773                           ; 4 bytes @ 0x4
   774  000005                     	ds	2
   775  000007                     ??_strncmp:
   776  000007                     ?_toupper:
   777                           	opt callstack 0
   778  000007                     _isspace$1758:
   779                           	opt callstack 0
   780  000007                     toupper@c:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x6
   784  000007                     	ds	1
   785  000008                     ?_atoi:
   786                           	opt callstack 0
   787  000008                     atoi@s:
   788                           	opt callstack 0
   789  000008                     strncmp@l:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x7
   793  000008                     	ds	1
   794  000009                     ??_toupper:
   795  000009                     ??___fladd:
   796  000009                     ___xxtofl@sign:
   797                           	opt callstack 0
   798  000009                     ___lldiv@divisor:
   799                           	opt callstack 0
   800  000009                     ___aodiv@divisor:
   801                           	opt callstack 0
   802  000009                     ___aomod@divisor:
   803                           	opt callstack 0
   804  000009                     ___lodiv@divisor:
   805                           	opt callstack 0
   806  000009                     ___lomod@divisor:
   807                           	opt callstack 0
   808                           
   809                           ; 8 bytes @ 0x8
   810  000009                     	ds	1
   811  00000A                     ??_atoi:
   812  00000A                     ?_stoa:
   813                           	opt callstack 0
   814  00000A                     ___xxtofl@exp:
   815                           	opt callstack 0
   816  00000A                     stoa@fp:
   817                           	opt callstack 0
   818  00000A                     fputs@s:
   819                           	opt callstack 0
   820  00000A                     fgetc@c:
   821                           	opt callstack 0
   822  00000A                     strncmp@r:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x9
   826  00000A                     	ds	1
   827  00000B                     ___xxtofl@arg:
   828                           	opt callstack 0
   829                           
   830                           ; 4 bytes @ 0xA
   831  00000B                     	ds	1
   832  00000C                     stoa@s:
   833                           	opt callstack 0
   834  00000C                     fputs@fp:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0xB
   838  00000C                     	ds	1
   839  00000D                     ___fladd@signs:
   840                           	opt callstack 0
   841  00000D                     _toupper$1878:
   842                           	opt callstack 0
   843  00000D                     ___lldiv@quotient:
   844                           	opt callstack 0
   845                           
   846                           ; 4 bytes @ 0xC
   847  00000D                     	ds	1
   848  00000E                     ??_stoa:
   849  00000E                     ___fladd@aexp:
   850                           	opt callstack 0
   851  00000E                     fputs@c:
   852                           	opt callstack 0
   853  00000E                     atoi@neg:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0xD
   857  00000E                     	ds	1
   858  00000F                     ?___flmul:
   859                           	opt callstack 0
   860  00000F                     ___fladd@bexp:
   861                           	opt callstack 0
   862  00000F                     fputs@i:
   863                           	opt callstack 0
   864  00000F                     ___flmul@b:
   865                           	opt callstack 0
   866  00000F                     stoa@nuls:
   867                           	opt callstack 0
   868                           
   869                           ; 7 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	opt callstack 0
   873  000010                     _atoi$1721:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	opt callstack 0
   880  000011                     ___lldiv@counter:
   881                           	opt callstack 0
   882  000011                     ___aodiv@counter:
   883                           	opt callstack 0
   884  000011                     ___aomod@counter:
   885                           	opt callstack 0
   886  000011                     ___lomod@counter:
   887                           	opt callstack 0
   888  000011                     pad@fp:
   889                           	opt callstack 0
   890  000011                     ___lodiv@quotient:
   891                           	opt callstack 0
   892                           
   893                           ; 8 bytes @ 0x10
   894  000011                     	ds	1
   895  000012                     ___aodiv@sign:
   896                           	opt callstack 0
   897  000012                     ___aomod@sign:
   898                           	opt callstack 0
   899  000012                     _atoi$1723:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903  000012                     	ds	1
   904  000013                     ?_abs:
   905                           	opt callstack 0
   906  000013                     pad@buf:
   907                           	opt callstack 0
   908  000013                     abs@a:
   909                           	opt callstack 0
   910  000013                     ___flmul@a:
   911                           	opt callstack 0
   912  000013                     ___aodiv@quotient:
   913                           	opt callstack 0
   914                           
   915                           ; 8 bytes @ 0x12
   916  000013                     	ds	1
   917  000014                     _atoi$1722:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x13
   921  000014                     	ds	1
   922  000015                     ??_abs:
   923  000015                     pad@p:
   924                           	opt callstack 0
   925  000015                     atoi@n:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x14
   929  000015                     	ds	1
   930  000016                     stoa@i:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x15
   934  000016                     	ds	1
   935  000017                     ??___flmul:
   936  000017                     ??_pad:
   937                           
   938                           ; 1 bytes @ 0x16
   939  000017                     	ds	1
   940  000018                     pad@i:
   941                           	opt callstack 0
   942  000018                     stoa@w:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x17
   946  000018                     	ds	1
   947  000019                     ___lodiv@counter:
   948                           	opt callstack 0
   949                           
   950                           ; 1 bytes @ 0x18
   951  000019                     	ds	1
   952  00001A                     pad@w:
   953                           	opt callstack 0
   954  00001A                     stoa@cp:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x19
   958  00001A                     	ds	1
   959  00001B                     ___flmul@sign:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0x1A
   963  00001B                     	ds	1
   964  00001C                     ?_ctoa:
   965                           	opt callstack 0
   966  00001C                     ?_dtoa:
   967                           	opt callstack 0
   968  00001C                     ?_otoa:
   969                           	opt callstack 0
   970  00001C                     ?_utoa:
   971                           	opt callstack 0
   972  00001C                     ?_xtoa:
   973                           	opt callstack 0
   974  00001C                     ctoa@fp:
   975                           	opt callstack 0
   976  00001C                     dtoa@fp:
   977                           	opt callstack 0
   978  00001C                     otoa@fp:
   979                           	opt callstack 0
   980  00001C                     stoa@p:
   981                           	opt callstack 0
   982  00001C                     utoa@fp:
   983                           	opt callstack 0
   984  00001C                     xtoa@fp:
   985                           	opt callstack 0
   986  00001C                     ___flmul@grs:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x1B
   990  00001C                     	ds	2
   991  00001E                     ctoa@c:
   992                           	opt callstack 0
   993  00001E                     stoa@l:
   994                           	opt callstack 0
   995  00001E                     dtoa@d:
   996                           	opt callstack 0
   997  00001E                     otoa@d:
   998                           	opt callstack 0
   999  00001E                     utoa@d:
  1000                           	opt callstack 0
  1001  00001E                     xtoa@d:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x1D
  1005  00001E                     	ds	1
  1006  00001F                     ctoa@w:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1E
  1010  00001F                     	ds	1
  1011  000020                     ___flmul@aexp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015  000020                     	ds	1
  1016  000021                     ___flmul@bexp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x20
  1020  000021                     	ds	1
  1021  000022                     ___flmul@prod:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x21
  1025  000022                     	ds	4
  1026  000026                     ??_dtoa:
  1027  000026                     ??_otoa:
  1028  000026                     ??_utoa:
  1029  000026                     xtoa@x:
  1030                           	opt callstack 0
  1031  000026                     ___flmul@temp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x25
  1035  000026                     	ds	1
  1036  000027                     ??_xtoa:
  1037                           
  1038                           ; 1 bytes @ 0x26
  1039  000027                     	ds	1
  1040  000028                     ?___flsub:
  1041                           	opt callstack 0
  1042  000028                     ___flsub@b:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x27
  1046  000028                     	ds	4
  1047  00002C                     ___flsub@a:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x2B
  1051  00002C                     	ds	2
  1052  00002E                     _dtoa$1075:
  1053                           	opt callstack 0
  1054  00002E                     otoa@p:
  1055                           	opt callstack 0
  1056  00002E                     utoa@p:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x2D
  1060  00002E                     	ds	1
  1061  00002F                     _xtoa$1111:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x2E
  1065  00002F                     	ds	1
  1066  000030                     ?_get_temp:
  1067                           	opt callstack 0
  1068  000030                     dtoa@p:
  1069                           	opt callstack 0
  1070  000030                     otoa@t:
  1071                           	opt callstack 0
  1072  000030                     utoa@w:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x2F
  1076  000030                     	ds	1
  1077  000031                     _xtoa$1112:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x30
  1081  000031                     	ds	1
  1082  000032                     dtoa@w:
  1083                           	opt callstack 0
  1084  000032                     otoa@w:
  1085                           	opt callstack 0
  1086  000032                     utoa@n:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x31
  1090  000032                     	ds	1
  1091  000033                     xtoa@p:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x32
  1095  000033                     	ds	1
  1096  000034                     dtoa@s:
  1097                           	opt callstack 0
  1098  000034                     get_temp@real_voltage:
  1099                           	opt callstack 0
  1100  000034                     otoa@n:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x33
  1104  000034                     	ds	1
  1105  000035                     xtoa@w:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x34
  1109  000035                     	ds	1
  1110  000036                     dtoa@n:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 8 bytes @ 0x35
  1114  000036                     	ds	1
  1115  000037                     xtoa@n:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x36
  1119  000037                     	ds	1
  1120  000038                     get_temp@temp:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x37
  1124  000038                     	ds	2
  1125  00003A                     utoa@i:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x39
  1129  00003A                     	ds	2
  1130  00003C                     get_temp@adc_voltage:
  1131                           	opt callstack 0
  1132  00003C                     otoa@i:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x3B
  1136  00003C                     	ds	2
  1137  00003E                     ?___fltol:
  1138                           	opt callstack 0
  1139  00003E                     dtoa@i:
  1140                           	opt callstack 0
  1141  00003E                     ___fltol@f1:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3D
  1145  00003E                     	ds	1
  1146  00003F                     xtoa@i:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3E
  1150  00003F                     	ds	2
  1151  000041                     xtoa@c:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x40
  1155  000041                     	ds	1
  1156  000042                     ??___fltol:
  1157                           
  1158                           ; 1 bytes @ 0x41
  1159  000042                     	ds	1
  1160  000043                     ?_vfpfcnvrt:
  1161                           	opt callstack 0
  1162  000043                     vfpfcnvrt@fp:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x42
  1166  000043                     	ds	2
  1167  000045                     vfpfcnvrt@fmt:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x44
  1171  000045                     	ds	1
  1172  000046                     ___fltol@sign1:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x45
  1176  000046                     	ds	1
  1177  000047                     ___fltol@exp1:
  1178                           	opt callstack 0
  1179  000047                     vfpfcnvrt@ap:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x46
  1183  000047                     	ds	2
  1184  000049                     ??_vfpfcnvrt:
  1185                           
  1186                           ; 1 bytes @ 0x48
  1187  000049                     	ds	14
  1188  000057                     vfpfcnvrt@cp:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x56
  1192  000057                     	ds	2
  1193  000059                     vfpfcnvrt@done:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x58
  1197  000059                     	ds	2
  1198  00005B                     _vfpfcnvrt$1126:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x5A
  1202  00005B                     	ds	2
  1203  00005D                     _vfpfcnvrt$1127:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x5C
  1207  00005D                     	ds	2
  1208  00005F                     vfpfcnvrt@ll:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x5E
  1212  00005F                     	ds	8
  1213  000067                     vfpfcnvrt@vp:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x66
  1217  000067                     	ds	2
  1218  000069                     vfpfcnvrt@c:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x68
  1222  000069                     	ds	1
  1223  00006A                     vfpfcnvrt@llu:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x69
  1227  00006A                     	ds	8
  1228  000072                     ?_vfprintf:
  1229                           	opt callstack 0
  1230  000072                     vfprintf@fp:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x71
  1234  000072                     	ds	2
  1235  000074                     vfprintf@fmt:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x73
  1239  000074                     	ds	2
  1240  000076                     vfprintf@ap:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x75
  1244  000076                     	ds	2
  1245  000078                     vfprintf@cfmt:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x77
  1249  000078                     	ds	2
  1250  00007A                     ?_int_to_char:
  1251                           	opt callstack 0
  1252  00007A                     int_to_char@num:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x79
  1256  00007A                     	ds	4
  1257  00007E                     
  1258                           ; 1 bytes @ 0x7D
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 27 in file "main.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  temp            2   56[BANK0 ] int 
  1269 ;;  input_addres    2   54[BANK0 ] int 
  1270 ;;  input           1   58[BANK0 ] unsigned char 
  1271 ;;  temperature     2    0        int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:         0       5       0       0       0       0       0
  1283 ;;      Temps:          0       2       0       0       0       0       0
  1284 ;;      Totals:         0       7       0       0       0       0       0
  1285 ;;Total ram usage:        7 bytes
  1286 ;; Hardware stack levels required when called:   12
  1287 ;; This function calls:
  1288 ;;		_Timer0_Init
  1289 ;;		_Timer0_StartTimer
  1290 ;;		_UARTNewLine
  1291 ;;		_UARTRecieveChar
  1292 ;;		_UARTSendString
  1293 ;;		___fltol
  1294 ;;		_get_temp
  1295 ;;		_initialize_PWM
  1296 ;;		_initialize_RX
  1297 ;;		_initialize_TX
  1298 ;;		_int_to_char
  1299 ;;		_interrupt_disable
  1300 ;;		_interrupt_enable
  1301 ;;		_read_SRAM
  1302 ;;		_set_duty_cycle
  1303 ;;		_write_SRAM
  1304 ;; This function is called by:
  1305 ;;		Startup code after reset
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text0
  1310  0026EE                     __ptext0:
  1311                           	opt callstack 0
  1312  0026EE                     _main:
  1313                           	opt callstack 0
  1314  0026EE  FFFF               	dw	65535	; assembler added errata NOP
  1315                           
  1316                           ;main.c: 28:   interrupt_enable();
  1317                           
  1318                           ;incstack = 0
  1319  0026F0  ECD5  F000         	call	_interrupt_enable	;wreg free
  1320                           
  1321                           ;main.c: 29:   TRISCbits.TRISC2 = 0;
  1322  0026F4  9494               	bcf	3988,2,c	;volatile
  1323                           
  1324                           ;main.c: 30:   TMR2IE = 1;
  1325  0026F6  829D               	bsf	3997,1,c	;volatile
  1326                           
  1327                           ;main.c: 31:   TMR2IP = 1;
  1328  0026F8  829F               	bsf	3999,1,c	;volatile
  1329                           
  1330                           ;main.c: 32:   int temperature;;main.c: 33:   Timer0_Init();
  1331  0026FA  EC47  F000         	call	_Timer0_Init	;wreg free
  1332                           
  1333                           ;main.c: 34:   Timer0_StartTimer();
  1334  0026FE  ECEF  F000         	call	_Timer0_StartTimer	;wreg free
  1335                           
  1336                           ;main.c: 35:   initialize_TX();
  1337  002702  ECB8  F000         	call	_initialize_TX	;wreg free
  1338                           
  1339                           ;main.c: 36:   initialize_RX();
  1340  002706  ECC2  F000         	call	_initialize_RX	;wreg free
  1341                           
  1342                           ;main.c: 37:   TRISCbits.TRISC7 = 1;
  1343  00270A  8E94               	bsf	3988,7,c	;volatile
  1344                           
  1345                           ;main.c: 38:   TRISCbits.TRISC6 = 0;
  1346  00270C  9C94               	bcf	3988,6,c	;volatile
  1347  00270E                     l5356:
  1348  00270E  FFFF               	dw	65535	; assembler added errata NOP
  1349                           
  1350                           ;main.c: 40:     TRISCbits.TRISC7 = 1;
  1351  002710  8E94               	bsf	3988,7,c	;volatile
  1352                           
  1353                           ;main.c: 41:     char input = ' ';
  1354  002712  0E20               	movlw	32
  1355  002714  D003               	goto	L1
  1356  002716                     l5360:
  1357  002716  FFFF               	dw	65535	; assembler added errata NOP
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 43:      input = UARTRecieveChar();
  1361  002718  EC1C  F000         	call	_UARTRecieveChar	;wreg free
  1362  00271C                     L1:
  1363  00271C  FFFF               	dw	65535	; assembler added errata NOP
  1364  00271E  0100               	movlb	0	; () banked
  1365  002720  6FBA               	movwf	main@input& (0+255),b
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;main.c: 42:     while (input < 'a' || input > 'z') {
  1369  002722  0E60               	movlw	96
  1370  002724  65BA               	cpfsgt	main@input& (0+255),b
  1371  002726  D7F7               	goto	l5360
  1372                           
  1373                           ; BSR set to: 0
  1374  002728  0E7B               	movlw	123
  1375  00272A  61BA               	cpfslt	main@input& (0+255),b
  1376  00272C  D7F4               	goto	l5360
  1377  00272E  D0BF               	goto	l5430
  1378  002730                     l5366:
  1379  002730  FFFF               	dw	65535	; assembler added errata NOP
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 47:       write_SRAM();
  1383  002732  EC6A  F014         	call	_write_SRAM	;wreg free
  1384                           
  1385                           ;main.c: 48:       break;
  1386  002736  D7EB               	goto	l5356
  1387  002738                     l163:
  1388  002738  FFFF               	dw	65535	; assembler added errata NOP
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;main.c: 50:       TRISCbits.TRISC7 = 0;
  1392  00273A  9E94               	bcf	3988,7,c	;volatile
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 51:       UARTSendString("Ready for even address input");
  1396  00273C  0E01               	movlw	low STR_3
  1397  00273E  6FA0               	movwf	UARTSendString@c& (0+255),b
  1398  002740  0E06               	movlw	high STR_3
  1399  002742  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1400  002744  EC89  F01D         	call	_UARTSendString	;wreg free
  1401                           
  1402                           ;main.c: 52:       UARTNewLine();
  1403  002748  ECA4  F000         	call	_UARTNewLine	;wreg free
  1404                           
  1405                           ;main.c: 53:       input = ' ';
  1406  00274C  0E20               	movlw	32
  1407  00274E  D003               	goto	L2
  1408  002750                     l5374:
  1409  002750  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;main.c: 55:         input = UARTRecieveChar();
  1413  002752  EC1C  F000         	call	_UARTRecieveChar	;wreg free
  1414  002756                     L2:
  1415  002756  FFFF               	dw	65535	; assembler added errata NOP
  1416  002758  0100               	movlb	0	; () banked
  1417  00275A  6FBA               	movwf	main@input& (0+255),b
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 54:       while (input < '0' || input > '9') {
  1421  00275C  0E2F               	movlw	47
  1422  00275E  65BA               	cpfsgt	main@input& (0+255),b
  1423  002760  D7F7               	goto	l5374
  1424                           
  1425                           ; BSR set to: 0
  1426  002762  0E3A               	movlw	58
  1427  002764  61BA               	cpfslt	main@input& (0+255),b
  1428  002766  D7F4               	goto	l5374
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 57:       int input_address = input & 0xF;
  1432  002768  C0BA  F0B4         	movff	main@input,??_main
  1433  00276C  0E0F               	movlw	15
  1434  00276E  17B4               	andwf	??_main& (0+255),f,b
  1435  002770  51B4               	movf	??_main& (0+255),w,b
  1436  002772  6FB6               	movwf	main@input_address& (0+255),b
  1437  002774  6BB7               	clrf	(main@input_address+1)& (0+255),b
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 58:       read_SRAM(input_address);
  1441  002776  C0B6  F0A6         	movff	main@input_address,read_SRAM@address
  1442  00277A  C0B7  F0A7         	movff	main@input_address+1,read_SRAM@address+1
  1443  00277E  ECAC  F00F         	call	_read_SRAM	;wreg free
  1444                           
  1445                           ;main.c: 59:       break;
  1446  002782  D7C5               	goto	l5356
  1447  002784                     l5384:
  1448  002784  FFFF               	dw	65535	; assembler added errata NOP
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 61:       interrupt_enable();
  1452  002786  ECD5  F000         	call	_interrupt_enable	;wreg free
  1453                           
  1454                           ;main.c: 62:       interrupt_disable();
  1455  00278A  ECE4  F000         	call	_interrupt_disable	;wreg free
  1456                           
  1457                           ;main.c: 63:       TRISCbits.TRISC2 = 0;
  1458  00278E  9494               	bcf	3988,2,c	;volatile
  1459                           
  1460                           ;main.c: 64:       TMR2IE = 1;
  1461  002790  829D               	bsf	3997,1,c	;volatile
  1462                           
  1463                           ;main.c: 65:       TMR2IP = 1;
  1464  002792  829F               	bsf	3999,1,c	;volatile
  1465                           
  1466                           ;main.c: 66:       Timer0_Init();
  1467  002794  EC47  F000         	call	_Timer0_Init	;wreg free
  1468                           
  1469                           ;main.c: 67:       Timer0_StartTimer();
  1470  002798  ECEF  F000         	call	_Timer0_StartTimer	;wreg free
  1471                           
  1472                           ;main.c: 68:       initialize_TX();
  1473  00279C  ECB8  F000         	call	_initialize_TX	;wreg free
  1474                           
  1475                           ;main.c: 69:       initialize_RX();
  1476  0027A0  ECC2  F000         	call	_initialize_RX	;wreg free
  1477                           
  1478                           ;main.c: 70:       TRISCbits.TRISC7 = 1;
  1479  0027A4  8E94               	bsf	3988,7,c	;volatile
  1480                           
  1481                           ;main.c: 71:       TRISCbits.TRISC6 = 0;
  1482  0027A6  9C94               	bcf	3988,6,c	;volatile
  1483                           
  1484                           ;main.c: 72:       initialize_PWM(0xFF);
  1485  0027A8  0E00               	movlw	0
  1486  0027AA  6E02               	movwf	initialize_PWM@freq+1,c
  1487  0027AC  6801               	setf	initialize_PWM@freq,c
  1488  0027AE  EC8D  F000         	call	_initialize_PWM	;wreg free
  1489                           
  1490                           ;main.c: 73:       set_duty_cycle(0x00, 0x00);
  1491  0027B2  0E00               	movlw	0
  1492  0027B4  6E01               	movwf	set_duty_cycle@lower_2,c
  1493  0027B6  0E00               	movlw	0
  1494  0027B8  EC6B  F000         	call	_set_duty_cycle
  1495  0027BC                     l5404:
  1496  0027BC  FFFF               	dw	65535	; assembler added errata NOP
  1497                           
  1498                           ;main.c: 75:         int temp = (int) get_temp();
  1499  0027BE  EC2D  F01B         	call	_get_temp	;wreg free
  1500  0027C2  C030  F03E         	movff	?_get_temp,___fltol@f1
  1501  0027C6  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1502  0027CA  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1503  0027CE  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1504  0027D2  ECC3  F01A         	call	___fltol	;wreg free
  1505  0027D6  C03E  F0B8         	movff	?___fltol,main@temp
  1506  0027DA  C03F  F0B9         	movff	?___fltol+1,main@temp+1
  1507                           
  1508                           ;main.c: 76:         UARTSendString(int_to_char(temp));
  1509  0027DE  C0B8  F07A         	movff	main@temp,int_to_char@num
  1510  0027E2  C0B9  F07B         	movff	main@temp+1,int_to_char@num+1
  1511  0027E6  0E00               	movlw	0
  1512  0027E8  BE7B               	btfsc	int_to_char@num+1,7,c
  1513  0027EA  0EFF               	movlw	-1
  1514  0027EC  6E7C               	movwf	int_to_char@num+2,c
  1515  0027EE  6E7D               	movwf	int_to_char@num+3,c
  1516  0027F0  ECCD  F01E         	call	_int_to_char	;wreg free
  1517  0027F4  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1518  0027F8  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1519  0027FC  EC89  F01D         	call	_UARTSendString	;wreg free
  1520                           
  1521                           ;main.c: 77:         if (temp < 30) set_duty_cycle(0x00, 0x00);
  1522  002800  0100               	movlb	0	; () banked
  1523  002802  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1524  002804  D006               	goto	u5470
  1525  002806  51B9               	movf	(main@temp+1)& (0+255),w,b
  1526  002808  E10B               	bnz	l5412
  1527  00280A  0E1E               	movlw	30
  1528  00280C  5DB8               	subwf	main@temp& (0+255),w,b
  1529  00280E  B0D8               	btfsc	status,0,c
  1530  002810  D007               	goto	l5412
  1531  002812                     u5470:
  1532  002812  FFFF               	dw	65535	; assembler added errata NOP
  1533                           
  1534                           ; BSR set to: 0
  1535  002814  0E00               	movlw	0
  1536  002816  6E01               	movwf	set_duty_cycle@lower_2,c
  1537  002818  0E00               	movlw	0
  1538  00281A  EC6B  F000         	call	_set_duty_cycle
  1539  00281E  D036               	goto	l5426
  1540  002820                     l5412:
  1541  002820  FFFF               	dw	65535	; assembler added errata NOP
  1542                           
  1543                           ; BSR set to: 0
  1544  002822  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1545  002824  D006               	goto	u5480
  1546  002826  51B9               	movf	(main@temp+1)& (0+255),w,b
  1547  002828  E10B               	bnz	l5416
  1548  00282A  0E32               	movlw	50
  1549  00282C  5DB8               	subwf	main@temp& (0+255),w,b
  1550  00282E  B0D8               	btfsc	status,0,c
  1551  002830  D007               	goto	l5416
  1552  002832                     u5480:
  1553  002832  FFFF               	dw	65535	; assembler added errata NOP
  1554                           
  1555                           ; BSR set to: 0
  1556  002834  0E03               	movlw	3
  1557  002836  6E01               	movwf	set_duty_cycle@lower_2,c
  1558  002838  0E0F               	movlw	15
  1559  00283A  EC6B  F000         	call	_set_duty_cycle
  1560  00283E  D026               	goto	l5426
  1561  002840                     l5416:
  1562  002840  FFFF               	dw	65535	; assembler added errata NOP
  1563                           
  1564                           ; BSR set to: 0
  1565  002842  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1566  002844  D006               	goto	u5490
  1567  002846  51B9               	movf	(main@temp+1)& (0+255),w,b
  1568  002848  E10B               	bnz	l5420
  1569  00284A  0E46               	movlw	70
  1570  00284C  5DB8               	subwf	main@temp& (0+255),w,b
  1571  00284E  B0D8               	btfsc	status,0,c
  1572  002850  D007               	goto	l5420
  1573  002852                     u5490:
  1574  002852  FFFF               	dw	65535	; assembler added errata NOP
  1575                           
  1576                           ; BSR set to: 0
  1577  002854  0E03               	movlw	3
  1578  002856  6E01               	movwf	set_duty_cycle@lower_2,c
  1579  002858  0E5F               	movlw	95
  1580  00285A  EC6B  F000         	call	_set_duty_cycle
  1581  00285E  D016               	goto	l5426
  1582  002860                     l5420:
  1583  002860  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ; BSR set to: 0
  1586  002862  BFB9               	btfsc	(main@temp+1)& (0+255),7,b
  1587  002864  D006               	goto	u5500
  1588  002866  51B9               	movf	(main@temp+1)& (0+255),w,b
  1589  002868  E10B               	bnz	l5424
  1590  00286A  0E64               	movlw	100
  1591  00286C  5DB8               	subwf	main@temp& (0+255),w,b
  1592  00286E  B0D8               	btfsc	status,0,c
  1593  002870  D007               	goto	l5424
  1594  002872                     u5500:
  1595  002872  FFFF               	dw	65535	; assembler added errata NOP
  1596                           
  1597                           ; BSR set to: 0
  1598  002874  0E03               	movlw	3
  1599  002876  6E01               	movwf	set_duty_cycle@lower_2,c
  1600  002878  0EF2               	movlw	242
  1601  00287A  EC6B  F000         	call	_set_duty_cycle
  1602  00287E  D006               	goto	l5426
  1603  002880                     l5424:
  1604  002880  FFFF               	dw	65535	; assembler added errata NOP
  1605                           
  1606                           ; BSR set to: 0
  1607  002882  0E03               	movlw	3
  1608  002884  6E01               	movwf	set_duty_cycle@lower_2,c
  1609  002886  0EFF               	movlw	255
  1610  002888  EC6B  F000         	call	_set_duty_cycle
  1611  00288C                     l5426:
  1612  00288C  FFFF               	dw	65535	; assembler added errata NOP
  1613                           
  1614                           ;main.c: 82:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1615  00288E  0E02               	movlw	2
  1616  002890  0100               	movlb	0	; () banked
  1617  002892  6FB5               	movwf	(??_main+1)& (0+255),b
  1618  002894  0E86               	movlw	134
  1619  002896  6FB4               	movwf	??_main& (0+255),b
  1620  002898  0EDA               	movlw	218
  1621  00289A                     u5537:
  1622  00289A  FFFF               	dw	65535	; errata NOP
  1623  00289C  2EE8               	decfsz	wreg,f,c
  1624  00289E  D7FD               	bra	u5537
  1625  0028A0  2FB4               	decfsz	??_main& (0+255),f,b
  1626  0028A2  D7FB               	bra	u5537
  1627  0028A4  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1628  0028A6  D7F9               	bra	u5537
  1629  0028A8  D000               	nop2	
  1630  0028AA  F000               	nop	
  1631  0028AC  D787               	goto	l5404
  1632  0028AE                     l5430:
  1633  0028AE  FFFF               	dw	65535	; assembler added errata NOP
  1634                           
  1635                           ; BSR set to: 0
  1636  0028B0  51BA               	movf	main@input& (0+255),w,b
  1637  0028B2  6FB4               	movwf	??_main& (0+255),b
  1638  0028B4  6BB5               	clrf	(??_main+1)& (0+255),b
  1639                           
  1640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 1, Range of values is 0 to 0
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte            4     3 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  0028B6  51B5               	movf	(??_main+1)& (0+255),w,b
  1648  0028B8  0A00               	xorlw	0	; case 0
  1649  0028BA  A4D8               	btfss	status,2,c
  1650  0028BC  D728               	goto	l5356
  1651                           
  1652                           ; BSR set to: 0
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 3, Range of values is 114 to 120
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           10     6 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659  0028BE  51B4               	movf	??_main& (0+255),w,b
  1660  0028C0  0A72               	xorlw	114	; case 114
  1661  0028C2  B4D8               	btfsc	status,2,c
  1662  0028C4  D739               	goto	l163
  1663  0028C6  0A01               	xorlw	1	; case 115
  1664  0028C8  B4D8               	btfsc	status,2,c
  1665  0028CA  D732               	goto	l5366
  1666  0028CC  0A0B               	xorlw	11	; case 120
  1667  0028CE  B4D8               	btfsc	status,2,c
  1668  0028D0  D759               	goto	l5384
  1669  0028D2  D71D               	goto	l5356
  1670  0028D4                     __end_of_main:
  1671                           	opt callstack 0
  1672                           
  1673 ;; *************** function _write_SRAM *****************
  1674 ;; Defined at:
  1675 ;;		line 126 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  curr_time       2   50[BANK0 ] int 
  1680 ;;  temperature     2   48[BANK0 ] int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         0      12       0       0       0       0       0
  1692 ;;      Temps:          0       2       0       0       0       0       0
  1693 ;;      Totals:         0      14       0       0       0       0       0
  1694 ;;Total ram usage:       14 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:   11
  1697 ;; This function calls:
  1698 ;;		_ReadTime
  1699 ;;		_Timer0_StartTimer
  1700 ;;		_Timer0_StopTimer
  1701 ;;		_UARTNewLine
  1702 ;;		_UARTSendString
  1703 ;;		___fltol
  1704 ;;		___lldiv
  1705 ;;		_get_temp
  1706 ;;		_int_to_char
  1707 ;;		_write_op
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text1
  1714  0028D4                     __ptext1:
  1715                           	opt callstack 0
  1716  0028D4                     _write_SRAM:
  1717                           	opt callstack 0
  1718  0028D4  FFFF               	dw	65535	; assembler added errata NOP
  1719                           
  1720                           ;main.c: 127:   TRISCbits.TRISC7 = 0;
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;incstack = 0
  1724  0028D6  9E94               	bcf	3988,7,c	;volatile
  1725                           
  1726                           ;main.c: 128:   int temperature = (int) get_temp();
  1727  0028D8  EC2D  F01B         	call	_get_temp	;wreg free
  1728  0028DC  C030  F03E         	movff	?_get_temp,___fltol@f1
  1729  0028E0  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1730  0028E4  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1731  0028E8  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1732  0028EC  ECC3  F01A         	call	___fltol	;wreg free
  1733  0028F0  C03E  F0B0         	movff	?___fltol,write_SRAM@temperature
  1734  0028F4  C03F  F0B1         	movff	?___fltol+1,write_SRAM@temperature+1
  1735                           
  1736                           ;main.c: 129:   Timer0_StopTimer();
  1737  0028F8  ECEB  F000         	call	_Timer0_StopTimer	;wreg free
  1738                           
  1739                           ;main.c: 130:   int curr_time = (int) (ReadTime()/60/100/60);
  1740  0028FC  0E3C               	movlw	60
  1741  0028FE  6E09               	movwf	___lldiv@divisor,c
  1742  002900  0E00               	movlw	0
  1743  002902  6E0A               	movwf	___lldiv@divisor+1,c
  1744  002904  0E00               	movlw	0
  1745  002906  6E0B               	movwf	___lldiv@divisor+2,c
  1746  002908  0E00               	movlw	0
  1747  00290A  6E0C               	movwf	___lldiv@divisor+3,c
  1748  00290C  EC99  F000         	call	_ReadTime	;wreg free
  1749  002910  C001  F005         	movff	?_ReadTime,___lldiv@dividend
  1750  002914  C002  F006         	movff	?_ReadTime+1,___lldiv@dividend+1
  1751  002918  C003  F007         	movff	?_ReadTime+2,___lldiv@dividend+2
  1752  00291C  C004  F008         	movff	?_ReadTime+3,___lldiv@dividend+3
  1753  002920  ECFC  F01C         	call	___lldiv	;wreg free
  1754  002924  C005  F0A8         	movff	?___lldiv,_write_SRAM$2154
  1755  002928  C006  F0A9         	movff	?___lldiv+1,_write_SRAM$2154+1
  1756  00292C  C007  F0AA         	movff	?___lldiv+2,_write_SRAM$2154+2
  1757  002930  C008  F0AB         	movff	?___lldiv+3,_write_SRAM$2154+3
  1758                           
  1759                           ;main.c: 130:   int curr_time = (int) (ReadTime()/60/100/60);
  1760  002934  0E64               	movlw	100
  1761  002936  6E09               	movwf	___lldiv@divisor,c
  1762  002938  0E00               	movlw	0
  1763  00293A  6E0A               	movwf	___lldiv@divisor+1,c
  1764  00293C  0E00               	movlw	0
  1765  00293E  6E0B               	movwf	___lldiv@divisor+2,c
  1766  002940  0E00               	movlw	0
  1767  002942  6E0C               	movwf	___lldiv@divisor+3,c
  1768  002944  C0A8  F005         	movff	_write_SRAM$2154,___lldiv@dividend
  1769  002948  C0A9  F006         	movff	_write_SRAM$2154+1,___lldiv@dividend+1
  1770  00294C  C0AA  F007         	movff	_write_SRAM$2154+2,___lldiv@dividend+2
  1771  002950  C0AB  F008         	movff	_write_SRAM$2154+3,___lldiv@dividend+3
  1772  002954  ECFC  F01C         	call	___lldiv	;wreg free
  1773  002958  C005  F0AC         	movff	?___lldiv,_write_SRAM$2155
  1774  00295C  C006  F0AD         	movff	?___lldiv+1,_write_SRAM$2155+1
  1775  002960  C007  F0AE         	movff	?___lldiv+2,_write_SRAM$2155+2
  1776  002964  C008  F0AF         	movff	?___lldiv+3,_write_SRAM$2155+3
  1777                           
  1778                           ;main.c: 130:   int curr_time = (int) (ReadTime()/60/100/60);
  1779  002968  C0AC  F005         	movff	_write_SRAM$2155,___lldiv@dividend
  1780  00296C  C0AD  F006         	movff	_write_SRAM$2155+1,___lldiv@dividend+1
  1781  002970  C0AE  F007         	movff	_write_SRAM$2155+2,___lldiv@dividend+2
  1782  002974  C0AF  F008         	movff	_write_SRAM$2155+3,___lldiv@dividend+3
  1783  002978  0E3C               	movlw	60
  1784  00297A  6E09               	movwf	___lldiv@divisor,c
  1785  00297C  0E00               	movlw	0
  1786  00297E  6E0A               	movwf	___lldiv@divisor+1,c
  1787  002980  0E00               	movlw	0
  1788  002982  6E0B               	movwf	___lldiv@divisor+2,c
  1789  002984  0E00               	movlw	0
  1790  002986  6E0C               	movwf	___lldiv@divisor+3,c
  1791  002988  ECFC  F01C         	call	___lldiv	;wreg free
  1792  00298C  C005  F0B2         	movff	?___lldiv,write_SRAM@curr_time
  1793  002990  C006  F0B3         	movff	?___lldiv+1,write_SRAM@curr_time+1
  1794                           
  1795                           ;main.c: 131:   Timer0_StartTimer();
  1796  002994  ECEF  F000         	call	_Timer0_StartTimer	;wreg free
  1797                           
  1798                           ;main.c: 132:   UARTSendString("Writing ");
  1799  002998  0E92               	movlw	low STR_11
  1800  00299A  0100               	movlb	0	; () banked
  1801  00299C  6FA0               	movwf	UARTSendString@c& (0+255),b
  1802  00299E  0E06               	movlw	high STR_11
  1803  0029A0  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1804  0029A2  EC89  F01D         	call	_UARTSendString	;wreg free
  1805                           
  1806                           ;main.c: 133:   UARTSendString(int_to_char(temperature));
  1807  0029A6  C0B0  F07A         	movff	write_SRAM@temperature,int_to_char@num
  1808  0029AA  C0B1  F07B         	movff	write_SRAM@temperature+1,int_to_char@num+1
  1809  0029AE  0E00               	movlw	0
  1810  0029B0  BE7B               	btfsc	int_to_char@num+1,7,c
  1811  0029B2  0EFF               	movlw	-1
  1812  0029B4  6E7C               	movwf	int_to_char@num+2,c
  1813  0029B6  6E7D               	movwf	int_to_char@num+3,c
  1814  0029B8  ECCD  F01E         	call	_int_to_char	;wreg free
  1815  0029BC  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1816  0029C0  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1817  0029C4  EC89  F01D         	call	_UARTSendString	;wreg free
  1818                           
  1819                           ;main.c: 134:   UARTSendString(" to address ");
  1820  0029C8  0E79               	movlw	low STR_12
  1821  0029CA  0100               	movlb	0	; () banked
  1822  0029CC  6FA0               	movwf	UARTSendString@c& (0+255),b
  1823  0029CE  0E06               	movlw	high STR_12
  1824  0029D0  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1825  0029D2  EC89  F01D         	call	_UARTSendString	;wreg free
  1826                           
  1827                           ;main.c: 135:   UARTSendString(int_to_char(address));
  1828  0029D6  C0D2  F07A         	movff	_address,int_to_char@num
  1829  0029DA  C0D3  F07B         	movff	_address+1,int_to_char@num+1
  1830  0029DE  0E00               	movlw	0
  1831  0029E0  BE7B               	btfsc	int_to_char@num+1,7,c
  1832  0029E2  0EFF               	movlw	-1
  1833  0029E4  6E7C               	movwf	int_to_char@num+2,c
  1834  0029E6  6E7D               	movwf	int_to_char@num+3,c
  1835  0029E8  ECCD  F01E         	call	_int_to_char	;wreg free
  1836  0029EC  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1837  0029F0  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1838  0029F4  EC89  F01D         	call	_UARTSendString	;wreg free
  1839                           
  1840                           ;main.c: 136:   UARTNewLine();
  1841  0029F8  ECA4  F000         	call	_UARTNewLine	;wreg free
  1842                           
  1843                           ;main.c: 137:   write_op(address, temperature);
  1844  0029FC  C0B0  F001         	movff	write_SRAM@temperature,write_op@data
  1845  002A00  0100               	movlb	0	; () banked
  1846  002A02  51D2               	movf	_address& (0+255),w,b
  1847  002A04  EC5A  F000         	call	_write_op
  1848                           
  1849                           ;main.c: 138:   UARTSendString("Writing ");
  1850  002A08  0E92               	movlw	low STR_11
  1851  002A0A  0100               	movlb	0	; () banked
  1852  002A0C  6FA0               	movwf	UARTSendString@c& (0+255),b
  1853  002A0E  0E06               	movlw	high STR_11
  1854  002A10  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1855  002A12  EC89  F01D         	call	_UARTSendString	;wreg free
  1856                           
  1857                           ;main.c: 139:   UARTSendString(int_to_char(curr_time));
  1858  002A16  C0B2  F07A         	movff	write_SRAM@curr_time,int_to_char@num
  1859  002A1A  C0B3  F07B         	movff	write_SRAM@curr_time+1,int_to_char@num+1
  1860  002A1E  0E00               	movlw	0
  1861  002A20  BE7B               	btfsc	int_to_char@num+1,7,c
  1862  002A22  0EFF               	movlw	-1
  1863  002A24  6E7C               	movwf	int_to_char@num+2,c
  1864  002A26  6E7D               	movwf	int_to_char@num+3,c
  1865  002A28  ECCD  F01E         	call	_int_to_char	;wreg free
  1866  002A2C  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1867  002A30  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1868  002A34  EC89  F01D         	call	_UARTSendString	;wreg free
  1869                           
  1870                           ;main.c: 140:   UARTSendString(" to address ");
  1871  002A38  0E79               	movlw	low STR_12
  1872  002A3A  0100               	movlb	0	; () banked
  1873  002A3C  6FA0               	movwf	UARTSendString@c& (0+255),b
  1874  002A3E  0E06               	movlw	high STR_12
  1875  002A40  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1876  002A42  EC89  F01D         	call	_UARTSendString	;wreg free
  1877                           
  1878                           ;main.c: 141:   UARTSendString(int_to_char(address + 1));
  1879  002A46  0E01               	movlw	1
  1880  002A48  0100               	movlb	0	; () banked
  1881  002A4A  25D2               	addwf	_address& (0+255),w,b
  1882  002A4C  6FA6               	movwf	??_write_SRAM& (0+255),b
  1883  002A4E  0E00               	movlw	0
  1884  002A50  21D3               	addwfc	(_address+1)& (0+255),w,b
  1885  002A52  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1886  002A54  C0A6  F07A         	movff	??_write_SRAM,int_to_char@num
  1887  002A58  C0A7  F07B         	movff	??_write_SRAM+1,int_to_char@num+1
  1888  002A5C  0E00               	movlw	0
  1889  002A5E  BE7B               	btfsc	int_to_char@num+1,7,c
  1890  002A60  0EFF               	movlw	-1
  1891  002A62  6E7C               	movwf	int_to_char@num+2,c
  1892  002A64  6E7D               	movwf	int_to_char@num+3,c
  1893  002A66  ECCD  F01E         	call	_int_to_char	;wreg free
  1894  002A6A  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  1895  002A6E  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  1896  002A72  EC89  F01D         	call	_UARTSendString	;wreg free
  1897                           
  1898                           ;main.c: 142:   UARTNewLine();
  1899  002A76  ECA4  F000         	call	_UARTNewLine	;wreg free
  1900                           
  1901                           ;main.c: 143:   write_op(address + 1, curr_time);
  1902  002A7A  C0B2  F001         	movff	write_SRAM@curr_time,write_op@data
  1903  002A7E  0100               	movlb	0	; () banked
  1904  002A80  29D2               	incf	_address& (0+255),w,b
  1905  002A82  EC5A  F000         	call	_write_op
  1906                           
  1907                           ;main.c: 144:   address = (address + 2) % 16;
  1908  002A86  0E02               	movlw	2
  1909  002A88  0100               	movlb	0	; () banked
  1910  002A8A  25D2               	addwf	_address& (0+255),w,b
  1911  002A8C  6FA6               	movwf	??_write_SRAM& (0+255),b
  1912  002A8E  0E00               	movlw	0
  1913  002A90  21D3               	addwfc	(_address+1)& (0+255),w,b
  1914  002A92  6FA7               	movwf	(??_write_SRAM+1)& (0+255),b
  1915  002A94  0E0F               	movlw	15
  1916  002A96  15A6               	andwf	??_write_SRAM& (0+255),w,b
  1917  002A98  6FD2               	movwf	_address& (0+255),b
  1918  002A9A  6BD3               	clrf	(_address+1)& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;main.c: 145:   UARTSendString("Done writing to memory.");
  1922  002A9C  0E50               	movlw	low STR_15
  1923  002A9E  6FA0               	movwf	UARTSendString@c& (0+255),b
  1924  002AA0  0E06               	movlw	high STR_15
  1925  002AA2  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  1926  002AA4  EC89  F01D         	call	_UARTSendString	;wreg free
  1927                           
  1928                           ;main.c: 146:   UARTNewLine();
  1929  002AA8  ECA4  F000         	call	_UARTNewLine	;wreg free
  1930                           
  1931                           ;main.c: 147:   UARTNewLine();
  1932  002AAC  ECA4  F000         	call	_UARTNewLine	;wreg free
  1933  002AB0  0012               	return		;funcret
  1934  002AB2  FFFF               	dw	65535	; errata NOP
  1935  002AB4                     __end_of_write_SRAM:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _write_op *****************
  1939 ;; Defined at:
  1940 ;;		line 9 in file "drive_memory.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  address         1    wreg     unsigned char 
  1943 ;;  data            1    0[COMRAM] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  address         1    1[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1955 ;;      Params:         1       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0
  1958 ;;      Totals:         2       0       0       0       0       0       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_write_SRAM
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text2
  1970  0000B4                     __ptext2:
  1971                           	opt callstack 0
  1972  0000B4                     _write_op:
  1973                           	opt callstack 0
  1974  0000B4  FFFF               	dw	65535	; assembler added errata NOP
  1975                           
  1976                           ;incstack = 0
  1977                           ;write_op@address stored from wreg
  1978  0000B6  6E02               	movwf	write_op@address,c
  1979                           
  1980                           ;drive_memory.c: 11:   TRISC &= ~(0x01);
  1981  0000B8  9094               	bcf	3988,0,c	;volatile
  1982                           
  1983                           ;drive_memory.c: 12:   TRISD = 0x00;
  1984  0000BA  0E00               	movlw	0
  1985  0000BC  6E95               	movwf	3989,c	;volatile
  1986                           
  1987                           ;drive_memory.c: 13:   TRISB &= ~(0x3f);
  1988  0000BE  0EC0               	movlw	192
  1989  0000C0  1693               	andwf	3987,f,c	;volatile
  1990                           
  1991                           ;drive_memory.c: 14:   PORTB = address;
  1992  0000C2  C002  FF81         	movff	write_op@address,3969	;volatile
  1993                           
  1994                           ;drive_memory.c: 15:   RB5 = 0;
  1995  0000C6  9A81               	bcf	3969,5,c	;volatile
  1996                           
  1997                           ;drive_memory.c: 17:   RC0 = 1;
  1998  0000C8  8082               	bsf	3970,0,c	;volatile
  1999                           
  2000                           ;drive_memory.c: 21:   RC0 = 0;
  2001  0000CA  9082               	bcf	3970,0,c	;volatile
  2002                           
  2003                           ;drive_memory.c: 23:   PORTD = data;
  2004                           
  2005                           ;drive_memory.c: 22:   _delay((unsigned long)((0.025)*(16000000/4000000.0)));
  2006  0000CC  C001  FF83         	movff	write_op@data,3971	;volatile
  2007                           
  2008                           ;drive_memory.c: 26:   RC0 = 1;
  2009                           
  2010                           ;drive_memory.c: 24:   _delay((unsigned long)((0.03)*(16000000/4000000.0)));
  2011  0000D0  8082               	bsf	3970,0,c	;volatile
  2012  0000D2  0012               	return		;funcret
  2013  0000D4  FFFF               	dw	65535	; errata NOP
  2014  0000D6                     __end_of_write_op:
  2015                           	opt callstack 0
  2016                           
  2017 ;; *************** function _get_temp *****************
  2018 ;; Defined at:
  2019 ;;		line 10 in file "temp_adc.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  temp            4   55[COMRAM] float 
  2024 ;;  real_voltage    4   51[COMRAM] float 
  2025 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  4   47[COMRAM] float 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2035 ;;      Params:         4       0       0       0       0       0       0
  2036 ;;      Locals:        10       0       0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0
  2038 ;;      Totals:        14       0       0       0       0       0       0
  2039 ;;Total ram usage:       14 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    4
  2042 ;; This function calls:
  2043 ;;		_ADC_Init
  2044 ;;		_ADC_Read
  2045 ;;		___flmul
  2046 ;;		___flsub
  2047 ;;		___xxtofl
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;;		_write_SRAM
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text3
  2055  00365A                     __ptext3:
  2056                           	opt callstack 0
  2057  00365A                     _get_temp:
  2058                           	opt callstack 0
  2059  00365A  FFFF               	dw	65535	; assembler added errata NOP
  2060                           
  2061                           ;temp_adc.c: 11:   ADC_Init();
  2062                           
  2063                           ;incstack = 0
  2064  00365C  ECDD  F000         	call	_ADC_Init	;wreg free
  2065                           
  2066                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  2067  003660  90C1               	bcf	4033,0,c	;volatile
  2068                           
  2069                           ;temp_adc.c: 13:   TRISA |= 0x01;
  2070  003662  8092               	bsf	3986,0,c	;volatile
  2071                           
  2072                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  2073  003664  0E00               	movlw	0
  2074  003666  EC7E  F01E         	call	_ADC_Read
  2075  00366A  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  2076  00366E  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  2077                           
  2078                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  2079  003672  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  2080  003676  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  2081  00367A  6A03               	clrf	___xxtofl@val+2,c
  2082  00367C  6A04               	clrf	___xxtofl@val+3,c
  2083  00367E  0E00               	movlw	0
  2084  003680  ECBB  F017         	call	___xxtofl
  2085  003684  C001  F00F         	movff	?___xxtofl,___flmul@b
  2086  003688  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2087  00368C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2088  003690  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2089  003694  0E9F               	movlw	159
  2090  003696  6E13               	movwf	___flmul@a,c
  2091  003698  0EAB               	movlw	171
  2092  00369A  6E14               	movwf	___flmul@a+1,c
  2093  00369C  0EAD               	movlw	173
  2094  00369E  6E15               	movwf	___flmul@a+2,c
  2095  0036A0  0E3B               	movlw	59
  2096  0036A2  6E16               	movwf	___flmul@a+3,c
  2097  0036A4  EC49  F00C         	call	___flmul	;wreg free
  2098  0036A8  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  2099  0036AC  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  2100  0036B0  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  2101  0036B4  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  2102                           
  2103                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  2104  0036B8  0E00               	movlw	0
  2105  0036BA  6E28               	movwf	___flsub@b,c
  2106  0036BC  0E00               	movlw	0
  2107  0036BE  6E29               	movwf	___flsub@b+1,c
  2108  0036C0  0E48               	movlw	72
  2109  0036C2  6E2A               	movwf	___flsub@b+2,c
  2110  0036C4  0E43               	movlw	67
  2111  0036C6  6E2B               	movwf	___flsub@b+3,c
  2112  0036C8  0E00               	movlw	0
  2113  0036CA  6E13               	movwf	___flmul@a,c
  2114  0036CC  0E00               	movlw	0
  2115  0036CE  6E14               	movwf	___flmul@a+1,c
  2116  0036D0  0E0C               	movlw	12
  2117  0036D2  6E15               	movwf	___flmul@a+2,c
  2118  0036D4  0E42               	movlw	66
  2119  0036D6  6E16               	movwf	___flmul@a+3,c
  2120  0036D8  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  2121  0036DC  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  2122  0036E0  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  2123  0036E4  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  2124  0036E8  EC49  F00C         	call	___flmul	;wreg free
  2125  0036EC  C00F  F02C         	movff	?___flmul,___flsub@a
  2126  0036F0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2127  0036F4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2128  0036F8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2129  0036FC  ECA8  F01E         	call	___flsub	;wreg free
  2130  003700  C028  F038         	movff	?___flsub,get_temp@temp
  2131  003704  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  2132  003708  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  2133  00370C  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  2134                           
  2135                           ;temp_adc.c: 18:   return temp;
  2136  003710  C038  F030         	movff	get_temp@temp,?_get_temp
  2137  003714  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  2138  003718  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  2139  00371C  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  2140  003720  0012               	return		;funcret
  2141  003722  FFFF               	dw	65535	; errata NOP
  2142  003724                     __end_of_get_temp:
  2143                           	opt callstack 0
  2144                           
  2145 ;; *************** function ___xxtofl *****************
  2146 ;; Defined at:
  2147 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  sign            1    wreg     unsigned char 
  2150 ;;  val             4    0[COMRAM] long 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  sign            1    8[COMRAM] unsigned char 
  2153 ;;  arg             4   10[COMRAM] unsigned long 
  2154 ;;  exp             1    9[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  4    0[COMRAM] unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         4       0       0       0       0       0       0
  2165 ;;      Locals:         6       0       0       0       0       0       0
  2166 ;;      Temps:          4       0       0       0       0       0       0
  2167 ;;      Totals:        14       0       0       0       0       0       0
  2168 ;;Total ram usage:       14 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_get_temp
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text4
  2179  002F76                     __ptext4:
  2180                           	opt callstack 0
  2181  002F76                     ___xxtofl:
  2182                           	opt callstack 0
  2183  002F76  FFFF               	dw	65535	; assembler added errata NOP
  2184                           
  2185                           ;incstack = 0
  2186                           ;___xxtofl@sign stored from wreg
  2187  002F78  6E09               	movwf	___xxtofl@sign,c
  2188  002F7A  5009               	movf	___xxtofl@sign,w,c
  2189  002F7C  A4D8               	btfss	status,2,c
  2190  002F7E  AE04               	btfss	___xxtofl@val+3,7,c
  2191  002F80  D01A               	goto	l1265
  2192  002F82  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2193  002F86  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2194  002F8A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2195  002F8E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2196  002F92  1E05               	comf	??___xxtofl,f,c
  2197  002F94  1E06               	comf	??___xxtofl+1,f,c
  2198  002F96  1E07               	comf	??___xxtofl+2,f,c
  2199  002F98  1E08               	comf	??___xxtofl+3,f,c
  2200  002F9A  2A05               	incf	??___xxtofl,f,c
  2201  002F9C  0E00               	movlw	0
  2202  002F9E  2206               	addwfc	??___xxtofl+1,f,c
  2203  002FA0  2207               	addwfc	??___xxtofl+2,f,c
  2204  002FA2  2208               	addwfc	??___xxtofl+3,f,c
  2205  002FA4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2206  002FA8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2207  002FAC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2208  002FB0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2209  002FB4  D009               	goto	l4836
  2210  002FB6                     l1265:
  2211  002FB6  FFFF               	dw	65535	; assembler added errata NOP
  2212  002FB8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2213  002FBC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2214  002FC0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2215  002FC4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2216  002FC8                     l4836:
  2217  002FC8  FFFF               	dw	65535	; assembler added errata NOP
  2218  002FCA  5001               	movf	___xxtofl@val,w,c
  2219  002FCC  1002               	iorwf	___xxtofl@val+1,w,c
  2220  002FCE  1003               	iorwf	___xxtofl@val+2,w,c
  2221  002FD0  1004               	iorwf	___xxtofl@val+3,w,c
  2222  002FD2  A4D8               	btfss	status,2,c
  2223  002FD4  D009               	goto	l4842
  2224  002FD6  0E00               	movlw	0
  2225  002FD8  6E01               	movwf	?___xxtofl,c
  2226  002FDA  0E00               	movlw	0
  2227  002FDC  6E02               	movwf	?___xxtofl+1,c
  2228  002FDE  0E00               	movlw	0
  2229  002FE0  6E03               	movwf	?___xxtofl+2,c
  2230  002FE2  0E00               	movlw	0
  2231  002FE4  6E04               	movwf	?___xxtofl+3,c
  2232  002FE6  D072               	goto	l1268
  2233  002FE8                     l4842:
  2234  002FE8  FFFF               	dw	65535	; assembler added errata NOP
  2235  002FEA  0E96               	movlw	150
  2236  002FEC  6E0A               	movwf	___xxtofl@exp,c
  2237  002FEE  D007               	goto	l4846
  2238  002FF0                     l4844:
  2239  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  2240  002FF2  2A0A               	incf	___xxtofl@exp,f,c
  2241  002FF4  90D8               	bcf	status,0,c
  2242  002FF6  320E               	rrcf	___xxtofl@arg+3,f,c
  2243  002FF8  320D               	rrcf	___xxtofl@arg+2,f,c
  2244  002FFA  320C               	rrcf	___xxtofl@arg+1,f,c
  2245  002FFC  320B               	rrcf	___xxtofl@arg,f,c
  2246  002FFE                     l4846:
  2247  002FFE  FFFF               	dw	65535	; assembler added errata NOP
  2248  003000  0E00               	movlw	0
  2249  003002  140B               	andwf	___xxtofl@arg,w,c
  2250  003004  6E05               	movwf	??___xxtofl& (0+255),c
  2251  003006  0E00               	movlw	0
  2252  003008  140C               	andwf	___xxtofl@arg+1,w,c
  2253  00300A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2254  00300C  0E00               	movlw	0
  2255  00300E  140D               	andwf	___xxtofl@arg+2,w,c
  2256  003010  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2257  003012  0EFE               	movlw	254
  2258  003014  140E               	andwf	___xxtofl@arg+3,w,c
  2259  003016  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2260  003018  5005               	movf	??___xxtofl,w,c
  2261  00301A  1006               	iorwf	??___xxtofl+1,w,c
  2262  00301C  1007               	iorwf	??___xxtofl+2,w,c
  2263  00301E  1008               	iorwf	??___xxtofl+3,w,c
  2264  003020  B4D8               	btfsc	status,2,c
  2265  003022  D00E               	goto	l1272
  2266  003024  D7E5               	goto	l4844
  2267  003026                     l4848:
  2268  003026  FFFF               	dw	65535	; assembler added errata NOP
  2269  003028  2A0A               	incf	___xxtofl@exp,f,c
  2270  00302A  0E01               	movlw	1
  2271  00302C  260B               	addwf	___xxtofl@arg,f,c
  2272  00302E  0E00               	movlw	0
  2273  003030  220C               	addwfc	___xxtofl@arg+1,f,c
  2274  003032  220D               	addwfc	___xxtofl@arg+2,f,c
  2275  003034  220E               	addwfc	___xxtofl@arg+3,f,c
  2276  003036  90D8               	bcf	status,0,c
  2277  003038  320E               	rrcf	___xxtofl@arg+3,f,c
  2278  00303A  320D               	rrcf	___xxtofl@arg+2,f,c
  2279  00303C  320C               	rrcf	___xxtofl@arg+1,f,c
  2280  00303E  320B               	rrcf	___xxtofl@arg,f,c
  2281  003040                     l1272:
  2282  003040  FFFF               	dw	65535	; assembler added errata NOP
  2283  003042  0E00               	movlw	0
  2284  003044  140B               	andwf	___xxtofl@arg,w,c
  2285  003046  6E05               	movwf	??___xxtofl& (0+255),c
  2286  003048  0E00               	movlw	0
  2287  00304A  140C               	andwf	___xxtofl@arg+1,w,c
  2288  00304C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2289  00304E  0E00               	movlw	0
  2290  003050  140D               	andwf	___xxtofl@arg+2,w,c
  2291  003052  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2292  003054  0EFF               	movlw	255
  2293  003056  140E               	andwf	___xxtofl@arg+3,w,c
  2294  003058  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2295  00305A  5005               	movf	??___xxtofl,w,c
  2296  00305C  1006               	iorwf	??___xxtofl+1,w,c
  2297  00305E  1007               	iorwf	??___xxtofl+2,w,c
  2298  003060  1008               	iorwf	??___xxtofl+3,w,c
  2299  003062  B4D8               	btfsc	status,2,c
  2300  003064  D008               	goto	l4856
  2301  003066  D7DF               	goto	l4848
  2302  003068                     l4854:
  2303  003068  FFFF               	dw	65535	; assembler added errata NOP
  2304  00306A  060A               	decf	___xxtofl@exp,f,c
  2305  00306C  90D8               	bcf	status,0,c
  2306  00306E  360B               	rlcf	___xxtofl@arg,f,c
  2307  003070  360C               	rlcf	___xxtofl@arg+1,f,c
  2308  003072  360D               	rlcf	___xxtofl@arg+2,f,c
  2309  003074  360E               	rlcf	___xxtofl@arg+3,f,c
  2310  003076                     l4856:
  2311  003076  FFFF               	dw	65535	; assembler added errata NOP
  2312  003078  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2313  00307A  D003               	goto	u5140
  2314  00307C  0E02               	movlw	2
  2315  00307E  600A               	cpfslt	___xxtofl@exp,c
  2316  003080  D7F3               	goto	l4854
  2317  003082                     u5140:
  2318  003082  FFFF               	dw	65535	; assembler added errata NOP
  2319  003084  A00A               	btfss	___xxtofl@exp,0,c
  2320  003086  9E0D               	bcf	___xxtofl@arg+2,7,c
  2321  003088  90D8               	bcf	status,0,c
  2322  00308A  320A               	rrcf	___xxtofl@exp,f,c
  2323  00308C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2324  003090  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2325  003092  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2326  003094  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2327  003096  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2328  00309A  6A07               	clrf	??___xxtofl+2,c
  2329  00309C  6A06               	clrf	??___xxtofl+1,c
  2330  00309E  6A05               	clrf	??___xxtofl,c
  2331  0030A0  5005               	movf	??___xxtofl,w,c
  2332  0030A2  120B               	iorwf	___xxtofl@arg,f,c
  2333  0030A4  5006               	movf	??___xxtofl+1,w,c
  2334  0030A6  120C               	iorwf	___xxtofl@arg+1,f,c
  2335  0030A8  5007               	movf	??___xxtofl+2,w,c
  2336  0030AA  120D               	iorwf	___xxtofl@arg+2,f,c
  2337  0030AC  5008               	movf	??___xxtofl+3,w,c
  2338  0030AE  120E               	iorwf	___xxtofl@arg+3,f,c
  2339  0030B0  5009               	movf	___xxtofl@sign,w,c
  2340  0030B2  A4D8               	btfss	status,2,c
  2341  0030B4  AE04               	btfss	___xxtofl@val+3,7,c
  2342  0030B6  D001               	goto	l4872
  2343  0030B8  8E0E               	bsf	___xxtofl@arg+3,7,c
  2344  0030BA                     l4872:
  2345  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  2346  0030BC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2347  0030C0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2348  0030C4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2349  0030C8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2350  0030CC                     l1268:
  2351  0030CC  FFFF               	dw	65535	; assembler added errata NOP
  2352  0030CE  0012               	return		;funcret
  2353  0030D0  FFFF               	dw	65535	; errata NOP
  2354  0030D2                     __end_of___xxtofl:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function ___flsub *****************
  2358 ;; Defined at:
  2359 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  b               4   39[COMRAM] unsigned char 
  2362 ;;  a               4   43[COMRAM] unsigned char 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  4   39[COMRAM] unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         8       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         8       0       0       0       0       0       0
  2378 ;;Total ram usage:        8 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		___fladd
  2383 ;; This function is called by:
  2384 ;;		_get_temp
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text5
  2389  003D50                     __ptext5:
  2390                           	opt callstack 0
  2391  003D50                     ___flsub:
  2392                           	opt callstack 0
  2393  003D50  FFFF               	dw	65535	; assembler added errata NOP
  2394                           
  2395                           ;incstack = 0
  2396  003D52  0E00               	movlw	0
  2397  003D54  1A2C               	xorwf	___flsub@a,f,c
  2398  003D56  0E00               	movlw	0
  2399  003D58  1A2D               	xorwf	___flsub@a+1,f,c
  2400  003D5A  0E00               	movlw	0
  2401  003D5C  1A2E               	xorwf	___flsub@a+2,f,c
  2402  003D5E  0E80               	movlw	128
  2403  003D60  1A2F               	xorwf	___flsub@a+3,f,c
  2404  003D62  C028  F001         	movff	___flsub@b,___fladd@b
  2405  003D66  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  2406  003D6A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  2407  003D6E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  2408  003D72  C02C  F005         	movff	___flsub@a,___fladd@a
  2409  003D76  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  2410  003D7A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  2411  003D7E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  2412  003D82  EC0A  F00E         	call	___fladd	;wreg free
  2413  003D86  C001  F028         	movff	?___fladd,?___flsub
  2414  003D8A  C002  F029         	movff	?___fladd+1,?___flsub+1
  2415  003D8E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  2416  003D92  C004  F02B         	movff	?___fladd+3,?___flsub+3
  2417  003D96  0012               	return		;funcret
  2418  003D98  FFFF               	dw	65535	; errata NOP
  2419  003D9A                     __end_of___flsub:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function ___fladd *****************
  2423 ;; Defined at:
  2424 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  b               4    0[COMRAM] unsigned char 
  2427 ;;  a               4    4[COMRAM] unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  grs             1   15[COMRAM] unsigned char 
  2430 ;;  bexp            1   14[COMRAM] unsigned char 
  2431 ;;  aexp            1   13[COMRAM] unsigned char 
  2432 ;;  signs           1   12[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  4    0[COMRAM] unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         8       0       0       0       0       0       0
  2443 ;;      Locals:         4       0       0       0       0       0       0
  2444 ;;      Temps:          4       0       0       0       0       0       0
  2445 ;;      Totals:        16       0       0       0       0       0       0
  2446 ;;Total ram usage:       16 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		___flsub
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text6
  2457  001C14                     __ptext6:
  2458                           	opt callstack 0
  2459  001C14                     ___fladd:
  2460                           	opt callstack 0
  2461  001C14  FFFF               	dw	65535	; assembler added errata NOP
  2462                           
  2463                           ;incstack = 0
  2464  001C16  5004               	movf	___fladd@b+3,w,c
  2465  001C18  0B80               	andlw	128
  2466  001C1A  6E0D               	movwf	___fladd@signs,c
  2467  001C1C  5004               	movf	___fladd@b+3,w,c
  2468  001C1E  2404               	addwf	___fladd@b+3,w,c
  2469  001C20  6E0F               	movwf	___fladd@bexp,c
  2470  001C22  BE03               	btfsc	___fladd@b+2,7,c
  2471  001C24  800F               	bsf	___fladd@bexp,0,c
  2472  001C26  500F               	movf	___fladd@bexp,w,c
  2473  001C28  B4D8               	btfsc	status,2,c
  2474  001C2A  D00E               	goto	l4456
  2475  001C2C  280F               	incf	___fladd@bexp,w,c
  2476  001C2E  A4D8               	btfss	status,2,c
  2477  001C30  D008               	goto	l4452
  2478  001C32  0E00               	movlw	0
  2479  001C34  6E01               	movwf	___fladd@b,c
  2480  001C36  0E00               	movlw	0
  2481  001C38  6E02               	movwf	___fladd@b+1,c
  2482  001C3A  0E00               	movlw	0
  2483  001C3C  6E03               	movwf	___fladd@b+2,c
  2484  001C3E  0E00               	movlw	0
  2485  001C40  6E04               	movwf	___fladd@b+3,c
  2486  001C42                     l4452:
  2487  001C42  FFFF               	dw	65535	; assembler added errata NOP
  2488  001C44  8E03               	bsf	___fladd@b+2,7,c
  2489  001C46  D007               	goto	L3
  2490  001C48                     l4456:
  2491  001C48  FFFF               	dw	65535	; assembler added errata NOP
  2492  001C4A  0E00               	movlw	0
  2493  001C4C  6E01               	movwf	___fladd@b,c
  2494  001C4E  0E00               	movlw	0
  2495  001C50  6E02               	movwf	___fladd@b+1,c
  2496  001C52  0E00               	movlw	0
  2497  001C54  6E03               	movwf	___fladd@b+2,c
  2498  001C56                     L3:
  2499  001C56  FFFF               	dw	65535	; assembler added errata NOP
  2500  001C58  0E00               	movlw	0
  2501  001C5A  6E04               	movwf	___fladd@b+3,c
  2502  001C5C  5008               	movf	___fladd@a+3,w,c
  2503  001C5E  0B80               	andlw	128
  2504  001C60  6E0E               	movwf	___fladd@aexp,c
  2505  001C62  500D               	movf	___fladd@signs,w,c
  2506  001C64  180E               	xorwf	___fladd@aexp,w,c
  2507  001C66  A4D8               	btfss	status,2,c
  2508  001C68  8C0D               	bsf	___fladd@signs,6,c
  2509  001C6A  5008               	movf	___fladd@a+3,w,c
  2510  001C6C  2408               	addwf	___fladd@a+3,w,c
  2511  001C6E  6E0E               	movwf	___fladd@aexp,c
  2512  001C70  BE07               	btfsc	___fladd@a+2,7,c
  2513  001C72  800E               	bsf	___fladd@aexp,0,c
  2514  001C74  500E               	movf	___fladd@aexp,w,c
  2515  001C76  B4D8               	btfsc	status,2,c
  2516  001C78  D00E               	goto	l4480
  2517  001C7A  280E               	incf	___fladd@aexp,w,c
  2518  001C7C  A4D8               	btfss	status,2,c
  2519  001C7E  D008               	goto	l4476
  2520  001C80  0E00               	movlw	0
  2521  001C82  6E05               	movwf	___fladd@a,c
  2522  001C84  0E00               	movlw	0
  2523  001C86  6E06               	movwf	___fladd@a+1,c
  2524  001C88  0E00               	movlw	0
  2525  001C8A  6E07               	movwf	___fladd@a+2,c
  2526  001C8C  0E00               	movlw	0
  2527  001C8E  6E08               	movwf	___fladd@a+3,c
  2528  001C90                     l4476:
  2529  001C90  FFFF               	dw	65535	; assembler added errata NOP
  2530  001C92  8E07               	bsf	___fladd@a+2,7,c
  2531  001C94  D007               	goto	L4
  2532  001C96                     l4480:
  2533  001C96  FFFF               	dw	65535	; assembler added errata NOP
  2534  001C98  0E00               	movlw	0
  2535  001C9A  6E05               	movwf	___fladd@a,c
  2536  001C9C  0E00               	movlw	0
  2537  001C9E  6E06               	movwf	___fladd@a+1,c
  2538  001CA0  0E00               	movlw	0
  2539  001CA2  6E07               	movwf	___fladd@a+2,c
  2540  001CA4                     L4:
  2541  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  2542  001CA6  0E00               	movlw	0
  2543  001CA8  6E08               	movwf	___fladd@a+3,c
  2544  001CAA  500F               	movf	___fladd@bexp,w,c
  2545  001CAC  5C0E               	subwf	___fladd@aexp,w,c
  2546  001CAE  B0D8               	btfsc	status,0,c
  2547  001CB0  D023               	goto	l4518
  2548  001CB2  AC0D               	btfss	___fladd@signs,6,c
  2549  001CB4  D002               	goto	l4488
  2550  001CB6  0E80               	movlw	128
  2551  001CB8  1A0D               	xorwf	___fladd@signs,f,c
  2552  001CBA                     l4488:
  2553  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  2554  001CBC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2555  001CC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2556  001CC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2557  001CC8  C001  F010         	movff	___fladd@b,___fladd@grs
  2558  001CCC  C005  F001         	movff	___fladd@a,___fladd@b
  2559  001CD0  C010  F005         	movff	___fladd@grs,___fladd@a
  2560  001CD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2561  001CD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2562  001CDC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2563  001CE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2564  001CE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2565  001CE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2566  001CEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2567  001CF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2568  001CF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2569  001CF8                     l4518:
  2570  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  2571  001CFA  0E00               	movlw	0
  2572  001CFC  6E10               	movwf	___fladd@grs,c
  2573  001CFE  500F               	movf	___fladd@bexp,w,c
  2574  001D00  C00E  F009         	movff	___fladd@aexp,??___fladd
  2575  001D04  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2576  001D06  5E09               	subwf	??___fladd,f,c
  2577  001D08  0E00               	movlw	0
  2578  001D0A  5A0A               	subwfb	??___fladd+1,f,c
  2579  001D0C  BE0A               	btfsc	??___fladd+1,7,c
  2580  001D0E  D031               	goto	l1139
  2581  001D10  500A               	movf	??___fladd+1,w,c
  2582  001D12  E104               	bnz	u4540
  2583  001D14  0E1A               	movlw	26
  2584  001D16  5C09               	subwf	??___fladd,w,c
  2585  001D18  A0D8               	btfss	status,0,c
  2586  001D1A  D02B               	goto	l1139
  2587  001D1C                     u4540:
  2588  001D1C  5001               	movf	___fladd@b,w,c
  2589  001D1E  1002               	iorwf	___fladd@b+1,w,c
  2590  001D20  1003               	iorwf	___fladd@b+2,w,c
  2591  001D22  1004               	iorwf	___fladd@b+3,w,c
  2592  001D24  B4D8               	btfsc	status,2,c
  2593  001D26  D002               	goto	u4550
  2594  001D28  0E01               	movlw	1
  2595  001D2A  D002               	goto	u4560
  2596  001D2C                     u4550:
  2597  001D2C  FFFF               	dw	65535	; assembler added errata NOP
  2598  001D2E  0E00               	movlw	0
  2599  001D30                     u4560:
  2600  001D30  FFFF               	dw	65535	; assembler added errata NOP
  2601  001D32  6E10               	movwf	___fladd@grs,c
  2602  001D34  0E00               	movlw	0
  2603  001D36  6E01               	movwf	___fladd@b,c
  2604  001D38  0E00               	movlw	0
  2605  001D3A  6E02               	movwf	___fladd@b+1,c
  2606  001D3C  0E00               	movlw	0
  2607  001D3E  6E03               	movwf	___fladd@b+2,c
  2608  001D40  0E00               	movlw	0
  2609  001D42  6E04               	movwf	___fladd@b+3,c
  2610  001D44  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2611  001D48  D019               	goto	u4590
  2612  001D4A                     l1140:
  2613  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  2614  001D4C  A010               	btfss	___fladd@grs,0,c
  2615  001D4E  D005               	goto	l4530
  2616  001D50  90D8               	bcf	status,0,c
  2617  001D52  3010               	rrcf	___fladd@grs,w,c
  2618  001D54  0901               	iorlw	1
  2619  001D56  6E10               	movwf	___fladd@grs,c
  2620  001D58  D003               	goto	l4532
  2621  001D5A                     l4530:
  2622  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  2623  001D5C  90D8               	bcf	status,0,c
  2624  001D5E  3210               	rrcf	___fladd@grs,f,c
  2625  001D60                     l4532:
  2626  001D60  FFFF               	dw	65535	; assembler added errata NOP
  2627  001D62  B001               	btfsc	___fladd@b,0,c
  2628  001D64  8E10               	bsf	___fladd@grs,7,c
  2629  001D66  3404               	rlcf	___fladd@b+3,w,c
  2630  001D68  3204               	rrcf	___fladd@b+3,f,c
  2631  001D6A  3203               	rrcf	___fladd@b+2,f,c
  2632  001D6C  3202               	rrcf	___fladd@b+1,f,c
  2633  001D6E  3201               	rrcf	___fladd@b,f,c
  2634  001D70  2A0F               	incf	___fladd@bexp,f,c
  2635  001D72                     l1139:
  2636  001D72  FFFF               	dw	65535	; assembler added errata NOP
  2637  001D74  500E               	movf	___fladd@aexp,w,c
  2638  001D76  5C0F               	subwf	___fladd@bexp,w,c
  2639  001D78  A0D8               	btfss	status,0,c
  2640  001D7A  D7E7               	goto	l1140
  2641  001D7C                     u4590:
  2642  001D7C  FFFF               	dw	65535	; assembler added errata NOP
  2643  001D7E  BC0D               	btfsc	___fladd@signs,6,c
  2644  001D80  D021               	goto	l4564
  2645  001D82  500F               	movf	___fladd@bexp,w,c
  2646  001D84  B4D8               	btfsc	status,2,c
  2647  001D86  D065               	goto	u4680
  2648  001D88  5005               	movf	___fladd@a,w,c
  2649  001D8A  2601               	addwf	___fladd@b,f,c
  2650  001D8C  5006               	movf	___fladd@a+1,w,c
  2651  001D8E  2202               	addwfc	___fladd@b+1,f,c
  2652  001D90  5007               	movf	___fladd@a+2,w,c
  2653  001D92  2203               	addwfc	___fladd@b+2,f,c
  2654  001D94  5008               	movf	___fladd@a+3,w,c
  2655  001D96  2204               	addwfc	___fladd@b+3,f,c
  2656  001D98  A004               	btfss	___fladd@b+3,0,c
  2657  001D9A  D07B               	goto	u4720
  2658  001D9C  A010               	btfss	___fladd@grs,0,c
  2659  001D9E  D005               	goto	l4554
  2660  001DA0  90D8               	bcf	status,0,c
  2661  001DA2  3010               	rrcf	___fladd@grs,w,c
  2662  001DA4  0901               	iorlw	1
  2663  001DA6  6E10               	movwf	___fladd@grs,c
  2664  001DA8  D003               	goto	l4556
  2665  001DAA                     l4554:
  2666  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  2667  001DAC  90D8               	bcf	status,0,c
  2668  001DAE  3210               	rrcf	___fladd@grs,f,c
  2669  001DB0                     l4556:
  2670  001DB0  FFFF               	dw	65535	; assembler added errata NOP
  2671  001DB2  B001               	btfsc	___fladd@b,0,c
  2672  001DB4  8E10               	bsf	___fladd@grs,7,c
  2673  001DB6  3404               	rlcf	___fladd@b+3,w,c
  2674  001DB8  3204               	rrcf	___fladd@b+3,f,c
  2675  001DBA  3203               	rrcf	___fladd@b+2,f,c
  2676  001DBC  3202               	rrcf	___fladd@b+1,f,c
  2677  001DBE  3201               	rrcf	___fladd@b,f,c
  2678  001DC0  2A0F               	incf	___fladd@bexp,f,c
  2679  001DC2  D067               	goto	u4720
  2680  001DC4                     l4564:
  2681  001DC4  FFFF               	dw	65535	; assembler added errata NOP
  2682  001DC6  5005               	movf	___fladd@a,w,c
  2683  001DC8  5C01               	subwf	___fladd@b,w,c
  2684  001DCA  5006               	movf	___fladd@a+1,w,c
  2685  001DCC  5802               	subwfb	___fladd@b+1,w,c
  2686  001DCE  5007               	movf	___fladd@a+2,w,c
  2687  001DD0  5803               	subwfb	___fladd@b+2,w,c
  2688  001DD2  5004               	movf	___fladd@b+3,w,c
  2689  001DD4  0A80               	xorlw	128
  2690  001DD6  6E09               	movwf	??___fladd& (0+255),c
  2691  001DD8  5008               	movf	___fladd@a+3,w,c
  2692  001DDA  0A80               	xorlw	128
  2693  001DDC  5809               	subwfb	??___fladd& (0+255),w,c
  2694  001DDE  B0D8               	btfsc	status,0,c
  2695  001DE0  D025               	goto	l4574
  2696  001DE2  5001               	movf	___fladd@b,w,c
  2697  001DE4  5C05               	subwf	___fladd@a,w,c
  2698  001DE6  6E09               	movwf	??___fladd& (0+255),c
  2699  001DE8  5002               	movf	___fladd@b+1,w,c
  2700  001DEA  5806               	subwfb	___fladd@a+1,w,c
  2701  001DEC  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2702  001DEE  5003               	movf	___fladd@b+2,w,c
  2703  001DF0  5807               	subwfb	___fladd@a+2,w,c
  2704  001DF2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2705  001DF4  5004               	movf	___fladd@b+3,w,c
  2706  001DF6  5808               	subwfb	___fladd@a+3,w,c
  2707  001DF8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2708  001DFA  0EFF               	movlw	255
  2709  001DFC  2409               	addwf	??___fladd,w,c
  2710  001DFE  6E01               	movwf	___fladd@b,c
  2711  001E00  0EFF               	movlw	255
  2712  001E02  200A               	addwfc	??___fladd+1,w,c
  2713  001E04  6E02               	movwf	___fladd@b+1,c
  2714  001E06  0EFF               	movlw	255
  2715  001E08  200B               	addwfc	??___fladd+2,w,c
  2716  001E0A  6E03               	movwf	___fladd@b+2,c
  2717  001E0C  0EFF               	movlw	255
  2718  001E0E  200C               	addwfc	??___fladd+3,w,c
  2719  001E10  6E04               	movwf	___fladd@b+3,c
  2720  001E12  0E80               	movlw	128
  2721  001E14  1A0D               	xorwf	___fladd@signs,f,c
  2722  001E16  6C10               	negf	___fladd@grs,c
  2723  001E18  5010               	movf	___fladd@grs,w,c
  2724  001E1A  A4D8               	btfss	status,2,c
  2725  001E1C  D010               	goto	l1155
  2726  001E1E  0E01               	movlw	1
  2727  001E20  2601               	addwf	___fladd@b,f,c
  2728  001E22  0E00               	movlw	0
  2729  001E24  2202               	addwfc	___fladd@b+1,f,c
  2730  001E26  2203               	addwfc	___fladd@b+2,f,c
  2731  001E28  2204               	addwfc	___fladd@b+3,f,c
  2732  001E2A  D009               	goto	l1155
  2733  001E2C                     l4574:
  2734  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  2735  001E2E  5005               	movf	___fladd@a,w,c
  2736  001E30  5E01               	subwf	___fladd@b,f,c
  2737  001E32  5006               	movf	___fladd@a+1,w,c
  2738  001E34  5A02               	subwfb	___fladd@b+1,f,c
  2739  001E36  5007               	movf	___fladd@a+2,w,c
  2740  001E38  5A03               	subwfb	___fladd@b+2,f,c
  2741  001E3A  5008               	movf	___fladd@a+3,w,c
  2742  001E3C  5A04               	subwfb	___fladd@b+3,f,c
  2743  001E3E                     l1155:
  2744  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  2745  001E40  5001               	movf	___fladd@b,w,c
  2746  001E42  1002               	iorwf	___fladd@b+1,w,c
  2747  001E44  1003               	iorwf	___fladd@b+2,w,c
  2748  001E46  1004               	iorwf	___fladd@b+3,w,c
  2749  001E48  A4D8               	btfss	status,2,c
  2750  001E4A  D020               	goto	l4598
  2751  001E4C  5010               	movf	___fladd@grs,w,c
  2752  001E4E  A4D8               	btfss	status,2,c
  2753  001E50  D01D               	goto	l4598
  2754  001E52                     u4680:
  2755  001E52  FFFF               	dw	65535	; assembler added errata NOP
  2756  001E54  0E00               	movlw	0
  2757  001E56  6E01               	movwf	?___fladd,c
  2758  001E58  0E00               	movlw	0
  2759  001E5A  6E02               	movwf	?___fladd+1,c
  2760  001E5C  0E00               	movlw	0
  2761  001E5E  6E03               	movwf	?___fladd+2,c
  2762  001E60  0E00               	movlw	0
  2763  001E62  6E04               	movwf	?___fladd+3,c
  2764  001E64  D076               	goto	l1147
  2765  001E66                     l4582:
  2766  001E66  FFFF               	dw	65535	; assembler added errata NOP
  2767  001E68  90D8               	bcf	status,0,c
  2768  001E6A  3601               	rlcf	___fladd@b,f,c
  2769  001E6C  3602               	rlcf	___fladd@b+1,f,c
  2770  001E6E  3603               	rlcf	___fladd@b+2,f,c
  2771  001E70  3604               	rlcf	___fladd@b+3,f,c
  2772  001E72  BE10               	btfsc	___fladd@grs,7,c
  2773  001E74  8001               	bsf	___fladd@b,0,c
  2774  001E76  A010               	btfss	___fladd@grs,0,c
  2775  001E78  D002               	goto	l4592
  2776  001E7A  80D8               	bsf	status,0,c
  2777  001E7C  D002               	goto	L5
  2778  001E7E                     l4592:
  2779  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  2780  001E80  90D8               	bcf	status,0,c
  2781  001E82                     L5:
  2782  001E82  FFFF               	dw	65535	; assembler added errata NOP
  2783  001E84  3610               	rlcf	___fladd@grs,f,c
  2784  001E86  500F               	movf	___fladd@bexp,w,c
  2785  001E88  A4D8               	btfss	status,2,c
  2786  001E8A  060F               	decf	___fladd@bexp,f,c
  2787  001E8C                     l4598:
  2788  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  2789  001E8E  AE03               	btfss	___fladd@b+2,7,c
  2790  001E90  D7EA               	goto	l4582
  2791  001E92                     u4720:
  2792  001E92  FFFF               	dw	65535	; assembler added errata NOP
  2793  001E94  0E00               	movlw	0
  2794  001E96  6E0E               	movwf	___fladd@aexp,c
  2795  001E98  AE10               	btfss	___fladd@grs,7,c
  2796  001E9A  D00D               	goto	l1164
  2797  001E9C  C010  F009         	movff	___fladd@grs,??___fladd
  2798  001EA0  0E7F               	movlw	127
  2799  001EA2  1609               	andwf	??___fladd,f,c
  2800  001EA4  B4D8               	btfsc	status,2,c
  2801  001EA6  D004               	goto	l1165
  2802  001EA8                     u4740:
  2803  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  2804  001EAA  0E01               	movlw	1
  2805  001EAC  6E0E               	movwf	___fladd@aexp,c
  2806  001EAE  D003               	goto	l1164
  2807  001EB0                     l1165:
  2808  001EB0  FFFF               	dw	65535	; assembler added errata NOP
  2809  001EB2  B001               	btfsc	___fladd@b,0,c
  2810  001EB4  D7F9               	goto	u4740
  2811  001EB6                     l1164:
  2812  001EB6  FFFF               	dw	65535	; assembler added errata NOP
  2813  001EB8  500E               	movf	___fladd@aexp,w,c
  2814  001EBA  B4D8               	btfsc	status,2,c
  2815  001EBC  D020               	goto	l4618
  2816  001EBE  0E01               	movlw	1
  2817  001EC0  2601               	addwf	___fladd@b,f,c
  2818  001EC2  0E00               	movlw	0
  2819  001EC4  2202               	addwfc	___fladd@b+1,f,c
  2820  001EC6  2203               	addwfc	___fladd@b+2,f,c
  2821  001EC8  2204               	addwfc	___fladd@b+3,f,c
  2822  001ECA  A004               	btfss	___fladd@b+3,0,c
  2823  001ECC  D018               	goto	l4618
  2824  001ECE  C001  F009         	movff	___fladd@b,??___fladd
  2825  001ED2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2826  001ED6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2827  001EDA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2828  001EDE  340C               	rlcf	??___fladd+3,w,c
  2829  001EE0  320C               	rrcf	??___fladd+3,f,c
  2830  001EE2  320B               	rrcf	??___fladd+2,f,c
  2831  001EE4  320A               	rrcf	??___fladd+1,f,c
  2832  001EE6  3209               	rrcf	??___fladd,f,c
  2833  001EE8  C009  F001         	movff	??___fladd,___fladd@b
  2834  001EEC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2835  001EF0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2836  001EF4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2837  001EF8  280F               	incf	___fladd@bexp,w,c
  2838  001EFA  A4D8               	btfss	status,2,c
  2839  001EFC  2A0F               	incf	___fladd@bexp,f,c
  2840  001EFE                     l4618:
  2841  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  2842  001F00  280F               	incf	___fladd@bexp,w,c
  2843  001F02  B4D8               	btfsc	status,2,c
  2844  001F04  D003               	goto	u4800
  2845  001F06  500F               	movf	___fladd@bexp,w,c
  2846  001F08  A4D8               	btfss	status,2,c
  2847  001F0A  D00E               	goto	l4626
  2848  001F0C                     u4800:
  2849  001F0C  FFFF               	dw	65535	; assembler added errata NOP
  2850  001F0E  0E00               	movlw	0
  2851  001F10  6E01               	movwf	___fladd@b,c
  2852  001F12  0E00               	movlw	0
  2853  001F14  6E02               	movwf	___fladd@b+1,c
  2854  001F16  0E00               	movlw	0
  2855  001F18  6E03               	movwf	___fladd@b+2,c
  2856  001F1A  0E00               	movlw	0
  2857  001F1C  6E04               	movwf	___fladd@b+3,c
  2858  001F1E  500F               	movf	___fladd@bexp,w,c
  2859  001F20  A4D8               	btfss	status,2,c
  2860  001F22  D002               	goto	l4626
  2861  001F24  0E00               	movlw	0
  2862  001F26  6E0D               	movwf	___fladd@signs,c
  2863  001F28                     l4626:
  2864  001F28  FFFF               	dw	65535	; assembler added errata NOP
  2865  001F2A  A00F               	btfss	___fladd@bexp,0,c
  2866  001F2C  D002               	goto	l4630
  2867  001F2E  8E03               	bsf	___fladd@b+2,7,c
  2868  001F30  D002               	goto	l4632
  2869  001F32                     l4630:
  2870  001F32  FFFF               	dw	65535	; assembler added errata NOP
  2871  001F34  9E03               	bcf	___fladd@b+2,7,c
  2872  001F36                     l4632:
  2873  001F36  FFFF               	dw	65535	; assembler added errata NOP
  2874  001F38  90D8               	bcf	status,0,c
  2875  001F3A  300F               	rrcf	___fladd@bexp,w,c
  2876  001F3C  6E04               	movwf	___fladd@b+3,c
  2877  001F3E  BE0D               	btfsc	___fladd@signs,7,c
  2878  001F40  8E04               	bsf	___fladd@b+3,7,c
  2879  001F42  C001  F001         	movff	___fladd@b,?___fladd
  2880  001F46  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2881  001F4A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2882  001F4E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2883  001F52                     l1147:
  2884  001F52  FFFF               	dw	65535	; assembler added errata NOP
  2885  001F54  0012               	return		;funcret
  2886  001F56  FFFF               	dw	65535	; errata NOP
  2887  001F58                     __end_of___fladd:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function ___flmul *****************
  2891 ;; Defined at:
  2892 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  b               4   14[COMRAM] unsigned char 
  2895 ;;  a               4   18[COMRAM] unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  prod            4   33[COMRAM] struct .
  2898 ;;  grs             4   27[COMRAM] unsigned long 
  2899 ;;  temp            2   37[COMRAM] struct .
  2900 ;;  bexp            1   32[COMRAM] unsigned char 
  2901 ;;  aexp            1   31[COMRAM] unsigned char 
  2902 ;;  sign            1   26[COMRAM] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  4   14[COMRAM] unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, prodl, prodh
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         8       0       0       0       0       0       0
  2913 ;;      Locals:        13       0       0       0       0       0       0
  2914 ;;      Temps:          4       0       0       0       0       0       0
  2915 ;;      Totals:        25       0       0       0       0       0       0
  2916 ;;Total ram usage:       25 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_get_temp
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text7
  2927  001892                     __ptext7:
  2928                           	opt callstack 0
  2929  001892                     ___flmul:
  2930                           	opt callstack 0
  2931  001892  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ;incstack = 0
  2934  001894  5012               	movf	___flmul@b+3,w,c
  2935  001896  0B80               	andlw	128
  2936  001898  6E1B               	movwf	___flmul@sign,c
  2937  00189A  5012               	movf	___flmul@b+3,w,c
  2938  00189C  2412               	addwf	___flmul@b+3,w,c
  2939  00189E  6E21               	movwf	___flmul@bexp,c
  2940  0018A0  BE11               	btfsc	___flmul@b+2,7,c
  2941  0018A2  8021               	bsf	___flmul@bexp,0,c
  2942  0018A4  5021               	movf	___flmul@bexp,w,c
  2943  0018A6  B4D8               	btfsc	status,2,c
  2944  0018A8  D00E               	goto	l4708
  2945  0018AA  2821               	incf	___flmul@bexp,w,c
  2946  0018AC  A4D8               	btfss	status,2,c
  2947  0018AE  D008               	goto	l4706
  2948  0018B0  0E00               	movlw	0
  2949  0018B2  6E0F               	movwf	___flmul@b,c
  2950  0018B4  0E00               	movlw	0
  2951  0018B6  6E10               	movwf	___flmul@b+1,c
  2952  0018B8  0E00               	movlw	0
  2953  0018BA  6E11               	movwf	___flmul@b+2,c
  2954  0018BC  0E00               	movlw	0
  2955  0018BE  6E12               	movwf	___flmul@b+3,c
  2956  0018C0                     l4706:
  2957  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  2958  0018C2  8E11               	bsf	___flmul@b+2,7,c
  2959  0018C4  D009               	goto	l4710
  2960  0018C6                     l4708:
  2961  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  2962  0018C8  0E00               	movlw	0
  2963  0018CA  6E0F               	movwf	___flmul@b,c
  2964  0018CC  0E00               	movlw	0
  2965  0018CE  6E10               	movwf	___flmul@b+1,c
  2966  0018D0  0E00               	movlw	0
  2967  0018D2  6E11               	movwf	___flmul@b+2,c
  2968  0018D4  0E00               	movlw	0
  2969  0018D6  6E12               	movwf	___flmul@b+3,c
  2970  0018D8                     l4710:
  2971  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  2972  0018DA  5016               	movf	___flmul@a+3,w,c
  2973  0018DC  0B80               	andlw	128
  2974  0018DE  1A1B               	xorwf	___flmul@sign,f,c
  2975  0018E0  5016               	movf	___flmul@a+3,w,c
  2976  0018E2  2416               	addwf	___flmul@a+3,w,c
  2977  0018E4  6E20               	movwf	___flmul@aexp,c
  2978  0018E6  BE15               	btfsc	___flmul@a+2,7,c
  2979  0018E8  8020               	bsf	___flmul@aexp,0,c
  2980  0018EA  5020               	movf	___flmul@aexp,w,c
  2981  0018EC  B4D8               	btfsc	status,2,c
  2982  0018EE  D00E               	goto	l4726
  2983  0018F0  2820               	incf	___flmul@aexp,w,c
  2984  0018F2  A4D8               	btfss	status,2,c
  2985  0018F4  D008               	goto	l4724
  2986  0018F6  0E00               	movlw	0
  2987  0018F8  6E13               	movwf	___flmul@a,c
  2988  0018FA  0E00               	movlw	0
  2989  0018FC  6E14               	movwf	___flmul@a+1,c
  2990  0018FE  0E00               	movlw	0
  2991  001900  6E15               	movwf	___flmul@a+2,c
  2992  001902  0E00               	movlw	0
  2993  001904  6E16               	movwf	___flmul@a+3,c
  2994  001906                     l4724:
  2995  001906  FFFF               	dw	65535	; assembler added errata NOP
  2996  001908  8E15               	bsf	___flmul@a+2,7,c
  2997  00190A  D009               	goto	l1224
  2998  00190C                     l4726:
  2999  00190C  FFFF               	dw	65535	; assembler added errata NOP
  3000  00190E  0E00               	movlw	0
  3001  001910  6E13               	movwf	___flmul@a,c
  3002  001912  0E00               	movlw	0
  3003  001914  6E14               	movwf	___flmul@a+1,c
  3004  001916  0E00               	movlw	0
  3005  001918  6E15               	movwf	___flmul@a+2,c
  3006  00191A  0E00               	movlw	0
  3007  00191C  6E16               	movwf	___flmul@a+3,c
  3008  00191E                     l1224:
  3009  00191E  FFFF               	dw	65535	; assembler added errata NOP
  3010  001920  5020               	movf	___flmul@aexp,w,c
  3011  001922  B4D8               	btfsc	status,2,c
  3012  001924  D003               	goto	u4960
  3013  001926  5021               	movf	___flmul@bexp,w,c
  3014  001928  A4D8               	btfss	status,2,c
  3015  00192A  D00A               	goto	l4734
  3016  00192C                     u4960:
  3017  00192C  FFFF               	dw	65535	; assembler added errata NOP
  3018  00192E  0E00               	movlw	0
  3019  001930  6E0F               	movwf	?___flmul,c
  3020  001932  0E00               	movlw	0
  3021  001934  6E10               	movwf	?___flmul+1,c
  3022  001936  0E00               	movlw	0
  3023  001938  6E11               	movwf	?___flmul+2,c
  3024  00193A  0E00               	movlw	0
  3025  00193C  6E12               	movwf	?___flmul+3,c
  3026  00193E  D167               	goto	l1228
  3027  001940                     l4734:
  3028  001940  FFFF               	dw	65535	; assembler added errata NOP
  3029  001942  5015               	movf	___flmul@a+2,w,c
  3030  001944  020F               	mulwf	___flmul@b,c
  3031  001946  CFF3 F026          	movff	prodl,___flmul@temp
  3032  00194A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3033  00194E  5026               	movf	___flmul@temp,w,c
  3034  001950  6E1C               	movwf	___flmul@grs,c
  3035  001952  6A1D               	clrf	___flmul@grs+1,c
  3036  001954  6A1E               	clrf	___flmul@grs+2,c
  3037  001956  6A1F               	clrf	___flmul@grs+3,c
  3038  001958  5027               	movf	___flmul@temp+1,w,c
  3039  00195A  6E22               	movwf	___flmul@prod,c
  3040  00195C  6A23               	clrf	___flmul@prod+1,c
  3041  00195E  6A24               	clrf	___flmul@prod+2,c
  3042  001960  6A25               	clrf	___flmul@prod+3,c
  3043  001962  5014               	movf	___flmul@a+1,w,c
  3044  001964  0210               	mulwf	___flmul@b+1,c
  3045  001966  CFF3 F026          	movff	prodl,___flmul@temp
  3046  00196A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3047  00196E  5026               	movf	___flmul@temp,w,c
  3048  001970  261C               	addwf	___flmul@grs,f,c
  3049  001972  0E00               	movlw	0
  3050  001974  221D               	addwfc	___flmul@grs+1,f,c
  3051  001976  221E               	addwfc	___flmul@grs+2,f,c
  3052  001978  221F               	addwfc	___flmul@grs+3,f,c
  3053  00197A  5027               	movf	___flmul@temp+1,w,c
  3054  00197C  2622               	addwf	___flmul@prod,f,c
  3055  00197E  0E00               	movlw	0
  3056  001980  2223               	addwfc	___flmul@prod+1,f,c
  3057  001982  2224               	addwfc	___flmul@prod+2,f,c
  3058  001984  2225               	addwfc	___flmul@prod+3,f,c
  3059  001986  5013               	movf	___flmul@a,w,c
  3060  001988  0211               	mulwf	___flmul@b+2,c
  3061  00198A  CFF3 F026          	movff	prodl,___flmul@temp
  3062  00198E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3063  001992  5026               	movf	___flmul@temp,w,c
  3064  001994  261C               	addwf	___flmul@grs,f,c
  3065  001996  0E00               	movlw	0
  3066  001998  221D               	addwfc	___flmul@grs+1,f,c
  3067  00199A  221E               	addwfc	___flmul@grs+2,f,c
  3068  00199C  221F               	addwfc	___flmul@grs+3,f,c
  3069  00199E  5027               	movf	___flmul@temp+1,w,c
  3070  0019A0  2622               	addwf	___flmul@prod,f,c
  3071  0019A2  0E00               	movlw	0
  3072  0019A4  2223               	addwfc	___flmul@prod+1,f,c
  3073  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  3074  0019A8  2225               	addwfc	___flmul@prod+3,f,c
  3075  0019AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3076  0019AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3077  0019B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3078  0019B6  6A1C               	clrf	___flmul@grs,c
  3079  0019B8  5013               	movf	___flmul@a,w,c
  3080  0019BA  0210               	mulwf	___flmul@b+1,c
  3081  0019BC  CFF3 F026          	movff	prodl,___flmul@temp
  3082  0019C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3083  0019C4  5026               	movf	___flmul@temp,w,c
  3084  0019C6  261C               	addwf	___flmul@grs,f,c
  3085  0019C8  5027               	movf	___flmul@temp+1,w,c
  3086  0019CA  221D               	addwfc	___flmul@grs+1,f,c
  3087  0019CC  0E00               	movlw	0
  3088  0019CE  221E               	addwfc	___flmul@grs+2,f,c
  3089  0019D0  0E00               	movlw	0
  3090  0019D2  221F               	addwfc	___flmul@grs+3,f,c
  3091  0019D4  5014               	movf	___flmul@a+1,w,c
  3092  0019D6  020F               	mulwf	___flmul@b,c
  3093  0019D8  CFF3 F026          	movff	prodl,___flmul@temp
  3094  0019DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  3095  0019E0  5026               	movf	___flmul@temp,w,c
  3096  0019E2  261C               	addwf	___flmul@grs,f,c
  3097  0019E4  5027               	movf	___flmul@temp+1,w,c
  3098  0019E6  221D               	addwfc	___flmul@grs+1,f,c
  3099  0019E8  0E00               	movlw	0
  3100  0019EA  221E               	addwfc	___flmul@grs+2,f,c
  3101  0019EC  0E00               	movlw	0
  3102  0019EE  221F               	addwfc	___flmul@grs+3,f,c
  3103  0019F0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3104  0019F4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3105  0019F8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3106  0019FC  6A1C               	clrf	___flmul@grs,c
  3107  0019FE  5013               	movf	___flmul@a,w,c
  3108  001A00  020F               	mulwf	___flmul@b,c
  3109  001A02  CFF3 F026          	movff	prodl,___flmul@temp
  3110  001A06  CFF4 F027          	movff	prodh,___flmul@temp+1
  3111  001A0A  5026               	movf	___flmul@temp,w,c
  3112  001A0C  261C               	addwf	___flmul@grs,f,c
  3113  001A0E  5027               	movf	___flmul@temp+1,w,c
  3114  001A10  221D               	addwfc	___flmul@grs+1,f,c
  3115  001A12  0E00               	movlw	0
  3116  001A14  221E               	addwfc	___flmul@grs+2,f,c
  3117  001A16  0E00               	movlw	0
  3118  001A18  221F               	addwfc	___flmul@grs+3,f,c
  3119  001A1A  5015               	movf	___flmul@a+2,w,c
  3120  001A1C  0210               	mulwf	___flmul@b+1,c
  3121  001A1E  CFF3 F026          	movff	prodl,___flmul@temp
  3122  001A22  CFF4 F027          	movff	prodh,___flmul@temp+1
  3123  001A26  5026               	movf	___flmul@temp,w,c
  3124  001A28  2622               	addwf	___flmul@prod,f,c
  3125  001A2A  5027               	movf	___flmul@temp+1,w,c
  3126  001A2C  2223               	addwfc	___flmul@prod+1,f,c
  3127  001A2E  0E00               	movlw	0
  3128  001A30  2224               	addwfc	___flmul@prod+2,f,c
  3129  001A32  0E00               	movlw	0
  3130  001A34  2225               	addwfc	___flmul@prod+3,f,c
  3131  001A36  5014               	movf	___flmul@a+1,w,c
  3132  001A38  0211               	mulwf	___flmul@b+2,c
  3133  001A3A  CFF3 F026          	movff	prodl,___flmul@temp
  3134  001A3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3135  001A42  5026               	movf	___flmul@temp,w,c
  3136  001A44  2622               	addwf	___flmul@prod,f,c
  3137  001A46  5027               	movf	___flmul@temp+1,w,c
  3138  001A48  2223               	addwfc	___flmul@prod+1,f,c
  3139  001A4A  0E00               	movlw	0
  3140  001A4C  2224               	addwfc	___flmul@prod+2,f,c
  3141  001A4E  0E00               	movlw	0
  3142  001A50  2225               	addwfc	___flmul@prod+3,f,c
  3143  001A52  5015               	movf	___flmul@a+2,w,c
  3144  001A54  0211               	mulwf	___flmul@b+2,c
  3145  001A56  CFF3 F026          	movff	prodl,___flmul@temp
  3146  001A5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3147  001A5E  5026               	movf	___flmul@temp,w,c
  3148  001A60  6E17               	movwf	??___flmul& (0+255),c
  3149  001A62  5027               	movf	___flmul@temp+1,w,c
  3150  001A64  6E18               	movwf	(??___flmul+1)& (0+255),c
  3151  001A66  6A19               	clrf	(??___flmul+2)& (0+255),c
  3152  001A68  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3153  001A6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3154  001A6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  3155  001A72  C017  F018         	movff	??___flmul,??___flmul+1
  3156  001A76  6A17               	clrf	??___flmul,c
  3157  001A78  5017               	movf	??___flmul,w,c
  3158  001A7A  2622               	addwf	___flmul@prod,f,c
  3159  001A7C  5018               	movf	??___flmul+1,w,c
  3160  001A7E  2223               	addwfc	___flmul@prod+1,f,c
  3161  001A80  5019               	movf	??___flmul+2,w,c
  3162  001A82  2224               	addwfc	___flmul@prod+2,f,c
  3163  001A84  501A               	movf	??___flmul+3,w,c
  3164  001A86  2225               	addwfc	___flmul@prod+3,f,c
  3165  001A88  C01C  F017         	movff	___flmul@grs,??___flmul
  3166  001A8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3167  001A90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3168  001A94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3169  001A98  0E19               	movlw	25
  3170  001A9A  D006               	goto	u4970
  3171  001A9C                     u4975:
  3172  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  3173  001A9E  90D8               	bcf	status,0,c
  3174  001AA0  321A               	rrcf	??___flmul+3,f,c
  3175  001AA2  3219               	rrcf	??___flmul+2,f,c
  3176  001AA4  3218               	rrcf	??___flmul+1,f,c
  3177  001AA6  3217               	rrcf	??___flmul,f,c
  3178  001AA8                     u4970:
  3179  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  3180  001AAA  2EE8               	decfsz	wreg,f,c
  3181  001AAC  D7F7               	goto	u4975
  3182  001AAE  5017               	movf	??___flmul,w,c
  3183  001AB0  2622               	addwf	___flmul@prod,f,c
  3184  001AB2  5018               	movf	??___flmul+1,w,c
  3185  001AB4  2223               	addwfc	___flmul@prod+1,f,c
  3186  001AB6  5019               	movf	??___flmul+2,w,c
  3187  001AB8  2224               	addwfc	___flmul@prod+2,f,c
  3188  001ABA  501A               	movf	??___flmul+3,w,c
  3189  001ABC  2225               	addwfc	___flmul@prod+3,f,c
  3190  001ABE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3191  001AC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3192  001AC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3193  001ACA  6A1C               	clrf	___flmul@grs,c
  3194  001ACC  5020               	movf	___flmul@aexp,w,c
  3195  001ACE  C021  F017         	movff	___flmul@bexp,??___flmul
  3196  001AD2  6A18               	clrf	(??___flmul+1)& (0+255),c
  3197  001AD4  2617               	addwf	??___flmul,f,c
  3198  001AD6  0E00               	movlw	0
  3199  001AD8  2218               	addwfc	??___flmul+1,f,c
  3200  001ADA  0E82               	movlw	130
  3201  001ADC  2417               	addwf	??___flmul,w,c
  3202  001ADE  6E26               	movwf	___flmul@temp,c
  3203  001AE0  0EFF               	movlw	255
  3204  001AE2  2018               	addwfc	??___flmul+1,w,c
  3205  001AE4  6E27               	movwf	___flmul@temp+1,c
  3206  001AE6  D010               	goto	l4782
  3207  001AE8                     l4776:
  3208  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  3209  001AEA  90D8               	bcf	status,0,c
  3210  001AEC  3622               	rlcf	___flmul@prod,f,c
  3211  001AEE  3623               	rlcf	___flmul@prod+1,f,c
  3212  001AF0  3624               	rlcf	___flmul@prod+2,f,c
  3213  001AF2  3625               	rlcf	___flmul@prod+3,f,c
  3214  001AF4  BE1F               	btfsc	___flmul@grs+3,7,c
  3215  001AF6  8022               	bsf	___flmul@prod,0,c
  3216  001AF8  90D8               	bcf	status,0,c
  3217  001AFA  361C               	rlcf	___flmul@grs,f,c
  3218  001AFC  361D               	rlcf	___flmul@grs+1,f,c
  3219  001AFE  361E               	rlcf	___flmul@grs+2,f,c
  3220  001B00  361F               	rlcf	___flmul@grs+3,f,c
  3221  001B02  0626               	decf	___flmul@temp,f,c
  3222  001B04  A0D8               	btfss	status,0,c
  3223  001B06  0627               	decf	___flmul@temp+1,f,c
  3224  001B08                     l4782:
  3225  001B08  FFFF               	dw	65535	; assembler added errata NOP
  3226  001B0A  AE24               	btfss	___flmul@prod+2,7,c
  3227  001B0C  D7ED               	goto	l4776
  3228  001B0E  0E00               	movlw	0
  3229  001B10  6E20               	movwf	___flmul@aexp,c
  3230  001B12  AE1F               	btfss	___flmul@grs+3,7,c
  3231  001B14  D019               	goto	l1233
  3232  001B16  0EFF               	movlw	255
  3233  001B18  141C               	andwf	___flmul@grs,w,c
  3234  001B1A  6E17               	movwf	??___flmul& (0+255),c
  3235  001B1C  0EFF               	movlw	255
  3236  001B1E  141D               	andwf	___flmul@grs+1,w,c
  3237  001B20  6E18               	movwf	(??___flmul+1)& (0+255),c
  3238  001B22  0EFF               	movlw	255
  3239  001B24  141E               	andwf	___flmul@grs+2,w,c
  3240  001B26  6E19               	movwf	(??___flmul+2)& (0+255),c
  3241  001B28  0E7F               	movlw	127
  3242  001B2A  141F               	andwf	___flmul@grs+3,w,c
  3243  001B2C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3244  001B2E  5017               	movf	??___flmul,w,c
  3245  001B30  1018               	iorwf	??___flmul+1,w,c
  3246  001B32  1019               	iorwf	??___flmul+2,w,c
  3247  001B34  101A               	iorwf	??___flmul+3,w,c
  3248  001B36  B4D8               	btfsc	status,2,c
  3249  001B38  D004               	goto	l1234
  3250  001B3A                     u5010:
  3251  001B3A  FFFF               	dw	65535	; assembler added errata NOP
  3252  001B3C  0E01               	movlw	1
  3253  001B3E  6E20               	movwf	___flmul@aexp,c
  3254  001B40  D003               	goto	l1233
  3255  001B42                     l1234:
  3256  001B42  FFFF               	dw	65535	; assembler added errata NOP
  3257  001B44  B022               	btfsc	___flmul@prod,0,c
  3258  001B46  D7F9               	goto	u5010
  3259  001B48                     l1233:
  3260  001B48  FFFF               	dw	65535	; assembler added errata NOP
  3261  001B4A  5020               	movf	___flmul@aexp,w,c
  3262  001B4C  B4D8               	btfsc	status,2,c
  3263  001B4E  D01F               	goto	l4802
  3264  001B50  0E01               	movlw	1
  3265  001B52  2622               	addwf	___flmul@prod,f,c
  3266  001B54  0E00               	movlw	0
  3267  001B56  2223               	addwfc	___flmul@prod+1,f,c
  3268  001B58  2224               	addwfc	___flmul@prod+2,f,c
  3269  001B5A  2225               	addwfc	___flmul@prod+3,f,c
  3270  001B5C  A025               	btfss	___flmul@prod+3,0,c
  3271  001B5E  D017               	goto	l4802
  3272  001B60  C022  F017         	movff	___flmul@prod,??___flmul
  3273  001B64  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3274  001B68  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3275  001B6C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3276  001B70  341A               	rlcf	??___flmul+3,w,c
  3277  001B72  321A               	rrcf	??___flmul+3,f,c
  3278  001B74  3219               	rrcf	??___flmul+2,f,c
  3279  001B76  3218               	rrcf	??___flmul+1,f,c
  3280  001B78  3217               	rrcf	??___flmul,f,c
  3281  001B7A  C017  F022         	movff	??___flmul,___flmul@prod
  3282  001B7E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3283  001B82  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3284  001B86  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3285  001B8A  4A26               	infsnz	___flmul@temp,f,c
  3286  001B8C  2A27               	incf	___flmul@temp+1,f,c
  3287  001B8E                     l4802:
  3288  001B8E  FFFF               	dw	65535	; assembler added errata NOP
  3289  001B90  BE27               	btfsc	___flmul@temp+1,7,c
  3290  001B92  D00D               	goto	l4806
  3291  001B94  5027               	movf	___flmul@temp+1,w,c
  3292  001B96  E103               	bnz	u5050
  3293  001B98  2826               	incf	___flmul@temp,w,c
  3294  001B9A  A0D8               	btfss	status,0,c
  3295  001B9C  D008               	goto	l4806
  3296  001B9E                     u5050:
  3297  001B9E  0E00               	movlw	0
  3298  001BA0  6E22               	movwf	___flmul@prod,c
  3299  001BA2  0E00               	movlw	0
  3300  001BA4  6E23               	movwf	___flmul@prod+1,c
  3301  001BA6  0E80               	movlw	128
  3302  001BA8  6E24               	movwf	___flmul@prod+2,c
  3303  001BAA  0E7F               	movlw	127
  3304  001BAC  D023               	goto	L6
  3305  001BAE                     l4806:
  3306  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  3307  001BB0  BE27               	btfsc	___flmul@temp+1,7,c
  3308  001BB2  D005               	goto	u5060
  3309  001BB4  5027               	movf	___flmul@temp+1,w,c
  3310  001BB6  E10F               	bnz	l1241
  3311  001BB8  0426               	decf	___flmul@temp,w,c
  3312  001BBA  B0D8               	btfsc	status,0,c
  3313  001BBC  D00C               	goto	l1241
  3314  001BBE                     u5060:
  3315  001BBE  FFFF               	dw	65535	; assembler added errata NOP
  3316  001BC0  0E00               	movlw	0
  3317  001BC2  6E22               	movwf	___flmul@prod,c
  3318  001BC4  0E00               	movlw	0
  3319  001BC6  6E23               	movwf	___flmul@prod+1,c
  3320  001BC8  0E00               	movlw	0
  3321  001BCA  6E24               	movwf	___flmul@prod+2,c
  3322  001BCC  0E00               	movlw	0
  3323  001BCE  6E25               	movwf	___flmul@prod+3,c
  3324  001BD0  0E00               	movlw	0
  3325  001BD2  6E1B               	movwf	___flmul@sign,c
  3326  001BD4  D011               	goto	l4818
  3327  001BD6                     l1241:
  3328  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  3329  001BD8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3330  001BDC  0EFF               	movlw	255
  3331  001BDE  1622               	andwf	___flmul@prod,f,c
  3332  001BE0  0EFF               	movlw	255
  3333  001BE2  1623               	andwf	___flmul@prod+1,f,c
  3334  001BE4  0E7F               	movlw	127
  3335  001BE6  1624               	andwf	___flmul@prod+2,f,c
  3336  001BE8  0E00               	movlw	0
  3337  001BEA  1625               	andwf	___flmul@prod+3,f,c
  3338  001BEC  B021               	btfsc	___flmul@bexp,0,c
  3339  001BEE  8E24               	bsf	___flmul@prod+2,7,c
  3340  001BF0  90D8               	bcf	status,0,c
  3341  001BF2  3021               	rrcf	___flmul@bexp,w,c
  3342  001BF4                     L6:
  3343  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  3344  001BF6  6E25               	movwf	___flmul@prod+3,c
  3345  001BF8                     l4818:
  3346  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  3347  001BFA  501B               	movf	___flmul@sign,w,c
  3348  001BFC  1225               	iorwf	___flmul@prod+3,f,c
  3349  001BFE  C022  F00F         	movff	___flmul@prod,?___flmul
  3350  001C02  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3351  001C06  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3352  001C0A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3353  001C0E                     l1228:
  3354  001C0E  FFFF               	dw	65535	; assembler added errata NOP
  3355  001C10  0012               	return		;funcret
  3356  001C12  FFFF               	dw	65535	; errata NOP
  3357  001C14                     __end_of___flmul:
  3358                           	opt callstack 0
  3359                           
  3360 ;; *************** function _ADC_Read *****************
  3361 ;; Defined at:
  3362 ;;		line 28 in file "adc.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  channel         1    wreg     unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  channel         1    4[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2    0[COMRAM] unsigned int 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3376 ;;      Params:         2       0       0       0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0
  3378 ;;      Temps:          2       0       0       0       0       0       0
  3379 ;;      Totals:         5       0       0       0       0       0       0
  3380 ;;Total ram usage:        5 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    2
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_get_temp
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text8
  3391  003CFC                     __ptext8:
  3392                           	opt callstack 0
  3393  003CFC                     _ADC_Read:
  3394                           	opt callstack 0
  3395  003CFC  FFFF               	dw	65535	; assembler added errata NOP
  3396                           
  3397                           ;incstack = 0
  3398                           ;ADC_Read@channel stored from wreg
  3399  003CFE  6E05               	movwf	ADC_Read@channel,c
  3400                           
  3401                           ;adc.c: 29:  if(channel > 7)
  3402  003D00  0E07               	movlw	7
  3403  003D02  6405               	cpfsgt	ADC_Read@channel,c
  3404  003D04  D005               	goto	l4684
  3405                           
  3406                           ;adc.c: 30:  return 0;
  3407  003D06  0E00               	movlw	0
  3408  003D08  6E02               	movwf	?_ADC_Read+1,c
  3409  003D0A  0E00               	movlw	0
  3410  003D0C  6E01               	movwf	?_ADC_Read,c
  3411  003D0E  D01D               	goto	l333
  3412  003D10                     l4684:
  3413  003D10  FFFF               	dw	65535	; assembler added errata NOP
  3414                           
  3415                           ;adc.c: 31:  ADCON0 &= 0xC5;
  3416  003D12  0EC5               	movlw	197
  3417  003D14  16C2               	andwf	4034,f,c	;volatile
  3418                           
  3419                           ;adc.c: 32:  ADCON0 |= channel<<3;
  3420  003D16  3805               	swapf	ADC_Read@channel,w,c	;volatile
  3421  003D18  42E8               	rrncf	wreg,f,c
  3422  003D1A  0BF8               	andlw	248
  3423  003D1C  12C2               	iorwf	4034,f,c	;volatile
  3424                           
  3425                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  3426  003D1E  0E08               	movlw	8
  3427  003D20  6E03               	movwf	??_ADC_Read& (0+255),c
  3428  003D22  0ECB               	movlw	203
  3429  003D24                     u5547:
  3430  003D24  FFFF               	dw	65535	; errata NOP
  3431  003D26  2EE8               	decfsz	wreg,f,c
  3432  003D28  D7FD               	bra	u5547
  3433  003D2A  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  3434  003D2C  D7FB               	bra	u5547
  3435  003D2E  D000               	nop2	
  3436                           
  3437                           ;adc.c: 34:  GO_nDONE = 1;
  3438  003D30  84C2               	bsf	4034,2,c	;volatile
  3439  003D32                     l334:
  3440  003D32  FFFF               	dw	65535	; assembler added errata NOP
  3441  003D34  B4C2               	btfsc	4034,2,c	;volatile
  3442  003D36  D7FD               	goto	l334
  3443                           
  3444                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  3445  003D38  50C4               	movf	4036,w,c	;volatile
  3446  003D3A  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  3447  003D3C  6A03               	clrf	??_ADC_Read& (0+255),c
  3448  003D3E  50C3               	movf	4035,w,c	;volatile
  3449  003D40  2403               	addwf	??_ADC_Read,w,c
  3450  003D42  6E01               	movwf	?_ADC_Read,c
  3451  003D44  0E00               	movlw	0
  3452  003D46  2004               	addwfc	??_ADC_Read+1,w,c
  3453  003D48  6E02               	movwf	?_ADC_Read+1,c
  3454  003D4A                     l333:
  3455  003D4A  FFFF               	dw	65535	; assembler added errata NOP
  3456  003D4C  0012               	return		;funcret
  3457  003D4E  FFFF               	dw	65535	; errata NOP
  3458  003D50                     __end_of_ADC_Read:
  3459                           	opt callstack 0
  3460                           
  3461 ;; *************** function _ADC_Init *****************
  3462 ;; Defined at:
  3463 ;;		line 23 in file "adc.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         0       0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    2
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_get_temp
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text9
  3492  0001BA                     __ptext9:
  3493                           	opt callstack 0
  3494  0001BA                     _ADC_Init:
  3495                           	opt callstack 0
  3496  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  3497                           
  3498                           ;adc.c: 24:  ADCON0 = 0x81;
  3499                           
  3500                           ;incstack = 0
  3501  0001BC  0E81               	movlw	129
  3502  0001BE  6EC2               	movwf	4034,c	;volatile
  3503                           
  3504                           ;adc.c: 25:  ADCON1 = 0x80;
  3505  0001C0  0E80               	movlw	128
  3506  0001C2  6EC1               	movwf	4033,c	;volatile
  3507  0001C4  0012               	return		;funcret
  3508  0001C6  FFFF               	dw	65535	; errata NOP
  3509  0001C8                     __end_of_ADC_Init:
  3510                           	opt callstack 0
  3511                           
  3512 ;; *************** function ___lldiv *****************
  3513 ;; Defined at:
  3514 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  dividend        4    4[COMRAM] unsigned long 
  3517 ;;  divisor         4    8[COMRAM] unsigned long 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  quotient        4   12[COMRAM] unsigned long 
  3520 ;;  counter         1   16[COMRAM] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  4    4[COMRAM] unsigned long 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3530 ;;      Params:         8       0       0       0       0       0       0
  3531 ;;      Locals:         5       0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0
  3533 ;;      Totals:        13       0       0       0       0       0       0
  3534 ;;Total ram usage:       13 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    2
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_write_SRAM
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text10
  3545  0039F8                     __ptext10:
  3546                           	opt callstack 0
  3547  0039F8                     ___lldiv:
  3548                           	opt callstack 0
  3549  0039F8  FFFF               	dw	65535	; assembler added errata NOP
  3550                           
  3551                           ;incstack = 0
  3552  0039FA  0E00               	movlw	0
  3553  0039FC  6E0D               	movwf	___lldiv@quotient,c
  3554  0039FE  0E00               	movlw	0
  3555  003A00  6E0E               	movwf	___lldiv@quotient+1,c
  3556  003A02  0E00               	movlw	0
  3557  003A04  6E0F               	movwf	___lldiv@quotient+2,c
  3558  003A06  0E00               	movlw	0
  3559  003A08  6E10               	movwf	___lldiv@quotient+3,c
  3560  003A0A  5009               	movf	___lldiv@divisor,w,c
  3561  003A0C  100A               	iorwf	___lldiv@divisor+1,w,c
  3562  003A0E  100B               	iorwf	___lldiv@divisor+2,w,c
  3563  003A10  100C               	iorwf	___lldiv@divisor+3,w,c
  3564  003A12  B4D8               	btfsc	status,2,c
  3565  003A14  D02E               	goto	l637
  3566  003A16  0E01               	movlw	1
  3567  003A18  6E11               	movwf	___lldiv@counter,c
  3568  003A1A  D007               	goto	l5000
  3569  003A1C                     l4998:
  3570  003A1C  FFFF               	dw	65535	; assembler added errata NOP
  3571  003A1E  90D8               	bcf	status,0,c
  3572  003A20  3609               	rlcf	___lldiv@divisor,f,c
  3573  003A22  360A               	rlcf	___lldiv@divisor+1,f,c
  3574  003A24  360B               	rlcf	___lldiv@divisor+2,f,c
  3575  003A26  360C               	rlcf	___lldiv@divisor+3,f,c
  3576  003A28  2A11               	incf	___lldiv@counter,f,c
  3577  003A2A                     l5000:
  3578  003A2A  FFFF               	dw	65535	; assembler added errata NOP
  3579  003A2C  AE0C               	btfss	___lldiv@divisor+3,7,c
  3580  003A2E  D7F6               	goto	l4998
  3581  003A30                     u5260:
  3582  003A30  FFFF               	dw	65535	; assembler added errata NOP
  3583  003A32  90D8               	bcf	status,0,c
  3584  003A34  360D               	rlcf	___lldiv@quotient,f,c
  3585  003A36  360E               	rlcf	___lldiv@quotient+1,f,c
  3586  003A38  360F               	rlcf	___lldiv@quotient+2,f,c
  3587  003A3A  3610               	rlcf	___lldiv@quotient+3,f,c
  3588  003A3C  5009               	movf	___lldiv@divisor,w,c
  3589  003A3E  5C05               	subwf	___lldiv@dividend,w,c
  3590  003A40  500A               	movf	___lldiv@divisor+1,w,c
  3591  003A42  5806               	subwfb	___lldiv@dividend+1,w,c
  3592  003A44  500B               	movf	___lldiv@divisor+2,w,c
  3593  003A46  5807               	subwfb	___lldiv@dividend+2,w,c
  3594  003A48  500C               	movf	___lldiv@divisor+3,w,c
  3595  003A4A  5808               	subwfb	___lldiv@dividend+3,w,c
  3596  003A4C  A0D8               	btfss	status,0,c
  3597  003A4E  D009               	goto	l5010
  3598  003A50  5009               	movf	___lldiv@divisor,w,c
  3599  003A52  5E05               	subwf	___lldiv@dividend,f,c
  3600  003A54  500A               	movf	___lldiv@divisor+1,w,c
  3601  003A56  5A06               	subwfb	___lldiv@dividend+1,f,c
  3602  003A58  500B               	movf	___lldiv@divisor+2,w,c
  3603  003A5A  5A07               	subwfb	___lldiv@dividend+2,f,c
  3604  003A5C  500C               	movf	___lldiv@divisor+3,w,c
  3605  003A5E  5A08               	subwfb	___lldiv@dividend+3,f,c
  3606  003A60  800D               	bsf	___lldiv@quotient,0,c
  3607  003A62                     l5010:
  3608  003A62  FFFF               	dw	65535	; assembler added errata NOP
  3609  003A64  90D8               	bcf	status,0,c
  3610  003A66  320C               	rrcf	___lldiv@divisor+3,f,c
  3611  003A68  320B               	rrcf	___lldiv@divisor+2,f,c
  3612  003A6A  320A               	rrcf	___lldiv@divisor+1,f,c
  3613  003A6C  3209               	rrcf	___lldiv@divisor,f,c
  3614  003A6E  2E11               	decfsz	___lldiv@counter,f,c
  3615  003A70  D7DF               	goto	u5260
  3616  003A72                     l637:
  3617  003A72  FFFF               	dw	65535	; assembler added errata NOP
  3618  003A74  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3619  003A78  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3620  003A7C  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3621  003A80  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3622  003A84  0012               	return		;funcret
  3623  003A86  FFFF               	dw	65535	; errata NOP
  3624  003A88                     __end_of___lldiv:
  3625                           	opt callstack 0
  3626                           
  3627 ;; *************** function ___fltol *****************
  3628 ;; Defined at:
  3629 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  f1              4   61[COMRAM] unsigned long 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  exp1            1   70[COMRAM] unsigned char 
  3634 ;;  sign1           1   69[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  4   61[COMRAM] long 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3644 ;;      Params:         4       0       0       0       0       0       0
  3645 ;;      Locals:         2       0       0       0       0       0       0
  3646 ;;      Temps:          4       0       0       0       0       0       0
  3647 ;;      Totals:        10       0       0       0       0       0       0
  3648 ;;Total ram usage:       10 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    2
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;;		_write_SRAM
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text11
  3660  003586                     __ptext11:
  3661                           	opt callstack 0
  3662  003586                     ___fltol:
  3663                           	opt callstack 0
  3664  003586  FFFF               	dw	65535	; assembler added errata NOP
  3665                           
  3666                           ;incstack = 0
  3667  003588  3440               	rlcf	___fltol@f1+2,w,c
  3668  00358A  3441               	rlcf	___fltol@f1+3,w,c
  3669  00358C  6E47               	movwf	___fltol@exp1,c
  3670  00358E  5047               	movf	___fltol@exp1,w,c
  3671  003590  A4D8               	btfss	status,2,c
  3672  003592  D00A               	goto	l5020
  3673  003594                     u5280:
  3674  003594  FFFF               	dw	65535	; assembler added errata NOP
  3675  003596  0E00               	movlw	0
  3676  003598  6E3E               	movwf	?___fltol,c
  3677  00359A  0E00               	movlw	0
  3678  00359C  6E3F               	movwf	?___fltol+1,c
  3679  00359E  0E00               	movlw	0
  3680  0035A0  6E40               	movwf	?___fltol+2,c
  3681  0035A2  0E00               	movlw	0
  3682  0035A4  6E41               	movwf	?___fltol+3,c
  3683  0035A6  D056               	goto	l907
  3684  0035A8                     l5020:
  3685  0035A8  FFFF               	dw	65535	; assembler added errata NOP
  3686  0035AA  C03E  F042         	movff	___fltol@f1,??___fltol
  3687  0035AE  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  3688  0035B2  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  3689  0035B6  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  3690  0035BA  0E20               	movlw	32
  3691  0035BC  D006               	goto	u5290
  3692  0035BE                     u5295:
  3693  0035BE  FFFF               	dw	65535	; assembler added errata NOP
  3694  0035C0  90D8               	bcf	status,0,c
  3695  0035C2  3245               	rrcf	??___fltol+3,f,c
  3696  0035C4  3244               	rrcf	??___fltol+2,f,c
  3697  0035C6  3243               	rrcf	??___fltol+1,f,c
  3698  0035C8  3242               	rrcf	??___fltol,f,c
  3699  0035CA                     u5290:
  3700  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  3701  0035CC  2EE8               	decfsz	wreg,f,c
  3702  0035CE  D7F7               	goto	u5295
  3703  0035D0  5042               	movf	??___fltol,w,c
  3704  0035D2  6E46               	movwf	___fltol@sign1,c
  3705  0035D4  8E40               	bsf	___fltol@f1+2,7,c
  3706  0035D6  0EFF               	movlw	255
  3707  0035D8  163E               	andwf	___fltol@f1,f,c
  3708  0035DA  0EFF               	movlw	255
  3709  0035DC  163F               	andwf	___fltol@f1+1,f,c
  3710  0035DE  0EFF               	movlw	255
  3711  0035E0  1640               	andwf	___fltol@f1+2,f,c
  3712  0035E2  0E00               	movlw	0
  3713  0035E4  1641               	andwf	___fltol@f1+3,f,c
  3714  0035E6  0E96               	movlw	150
  3715  0035E8  5E47               	subwf	___fltol@exp1,f,c
  3716  0035EA  AE47               	btfss	___fltol@exp1,7,c
  3717  0035EC  D00E               	goto	l5040
  3718  0035EE  5047               	movf	___fltol@exp1,w,c
  3719  0035F0  0A80               	xorlw	128
  3720  0035F2  0F97               	addlw	151
  3721  0035F4  A0D8               	btfss	status,0,c
  3722  0035F6  D7CE               	goto	u5280
  3723  0035F8                     l5036:
  3724  0035F8  FFFF               	dw	65535	; assembler added errata NOP
  3725  0035FA  90D8               	bcf	status,0,c
  3726  0035FC  3241               	rrcf	___fltol@f1+3,f,c
  3727  0035FE  3240               	rrcf	___fltol@f1+2,f,c
  3728  003600  323F               	rrcf	___fltol@f1+1,f,c
  3729  003602  323E               	rrcf	___fltol@f1,f,c
  3730  003604  3E47               	incfsz	___fltol@exp1,f,c
  3731  003606  D7F8               	goto	l5036
  3732  003608  D010               	goto	u5330
  3733  00360A                     l5040:
  3734  00360A  FFFF               	dw	65535	; assembler added errata NOP
  3735  00360C  0E1F               	movlw	31
  3736  00360E  6447               	cpfsgt	___fltol@exp1,c
  3737  003610  D008               	goto	l5048
  3738  003612  D7C0               	goto	u5280
  3739  003614                     l5046:
  3740  003614  FFFF               	dw	65535	; assembler added errata NOP
  3741  003616  90D8               	bcf	status,0,c
  3742  003618  363E               	rlcf	___fltol@f1,f,c
  3743  00361A  363F               	rlcf	___fltol@f1+1,f,c
  3744  00361C  3640               	rlcf	___fltol@f1+2,f,c
  3745  00361E  3641               	rlcf	___fltol@f1+3,f,c
  3746  003620  0647               	decf	___fltol@exp1,f,c
  3747  003622                     l5048:
  3748  003622  FFFF               	dw	65535	; assembler added errata NOP
  3749  003624  5047               	movf	___fltol@exp1,w,c
  3750  003626  A4D8               	btfss	status,2,c
  3751  003628  D7F5               	goto	l5046
  3752  00362A                     u5330:
  3753  00362A  FFFF               	dw	65535	; assembler added errata NOP
  3754  00362C  5046               	movf	___fltol@sign1,w,c
  3755  00362E  B4D8               	btfsc	status,2,c
  3756  003630  D008               	goto	l5054
  3757  003632  1E41               	comf	___fltol@f1+3,f,c
  3758  003634  1E40               	comf	___fltol@f1+2,f,c
  3759  003636  1E3F               	comf	___fltol@f1+1,f,c
  3760  003638  6C3E               	negf	___fltol@f1,c
  3761  00363A  0E00               	movlw	0
  3762  00363C  223F               	addwfc	___fltol@f1+1,f,c
  3763  00363E  2240               	addwfc	___fltol@f1+2,f,c
  3764  003640  2241               	addwfc	___fltol@f1+3,f,c
  3765  003642                     l5054:
  3766  003642  FFFF               	dw	65535	; assembler added errata NOP
  3767  003644  C03E  F03E         	movff	___fltol@f1,?___fltol
  3768  003648  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  3769  00364C  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  3770  003650  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  3771  003654                     l907:
  3772  003654  FFFF               	dw	65535	; assembler added errata NOP
  3773  003656  0012               	return		;funcret
  3774  003658  FFFF               	dw	65535	; errata NOP
  3775  00365A                     __end_of___fltol:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _Timer0_StopTimer *****************
  3779 ;; Defined at:
  3780 ;;		line 26 in file "timer.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2  139[None  ] int 
  3787 ;; Registers used:
  3788 ;;		None
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3794 ;;      Params:         0       0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    2
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_write_SRAM
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text12
  3809  0001D6                     __ptext12:
  3810                           	opt callstack 0
  3811  0001D6                     _Timer0_StopTimer:
  3812                           	opt callstack 0
  3813  0001D6  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;timer.c: 27:  T0CONbits.TMR0ON = 0;
  3816                           
  3817                           ;incstack = 0
  3818  0001D8  9ED5               	bcf	4053,7,c	;volatile
  3819                           
  3820                           ;timer.c: 28:  return 0;;	Return value of _Timer0_StopTimer is never used
  3821  0001DA  0012               	return		;funcret
  3822  0001DC  FFFF               	dw	65535	; errata NOP
  3823  0001DE                     __end_of_Timer0_StopTimer:
  3824                           	opt callstack 0
  3825                           
  3826 ;; *************** function _Timer0_StartTimer *****************
  3827 ;; Defined at:
  3828 ;;		line 21 in file "timer.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2  109[None  ] int 
  3835 ;; Registers used:
  3836 ;;		None
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3842 ;;      Params:         0       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    2
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;;		_write_SRAM
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text13
  3858  0001DE                     __ptext13:
  3859                           	opt callstack 0
  3860  0001DE                     _Timer0_StartTimer:
  3861                           	opt callstack 0
  3862  0001DE  FFFF               	dw	65535	; assembler added errata NOP
  3863                           
  3864                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  3865                           
  3866                           ;incstack = 0
  3867  0001E0  8ED5               	bsf	4053,7,c	;volatile
  3868                           
  3869                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  3870  0001E2  0012               	return		;funcret
  3871  0001E4  FFFF               	dw	65535	; errata NOP
  3872  0001E6                     __end_of_Timer0_StartTimer:
  3873                           	opt callstack 0
  3874                           
  3875 ;; *************** function _ReadTime *****************
  3876 ;; Defined at:
  3877 ;;		line 17 in file "timer.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  4    0[COMRAM] unsigned long 
  3884 ;; Registers used:
  3885 ;;		None
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3891 ;;      Params:         4       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0
  3894 ;;      Totals:         4       0       0       0       0       0       0
  3895 ;;Total ram usage:        4 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_write_SRAM
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text14
  3906  000132                     __ptext14:
  3907                           	opt callstack 0
  3908  000132                     _ReadTime:
  3909                           	opt callstack 0
  3910  000132  FFFF               	dw	65535	; assembler added errata NOP
  3911                           
  3912                           ;timer.c: 18:  return time_ms;
  3913                           
  3914                           ;incstack = 0
  3915  000134  C0C4  F001         	movff	_time_ms,?_ReadTime	;volatile
  3916  000138  C0C5  F002         	movff	_time_ms+1,?_ReadTime+1	;volatile
  3917  00013C  C0C6  F003         	movff	_time_ms+2,?_ReadTime+2	;volatile
  3918  000140  C0C7  F004         	movff	_time_ms+3,?_ReadTime+3	;volatile
  3919  000144  0012               	return		;funcret
  3920  000146  FFFF               	dw	65535	; errata NOP
  3921  000148                     __end_of_ReadTime:
  3922                           	opt callstack 0
  3923                           
  3924 ;; *************** function _set_duty_cycle *****************
  3925 ;; Defined at:
  3926 ;;		line 18 in file "pwm.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  upper_8         1    wreg     unsigned char 
  3929 ;;  lower_2         1    0[COMRAM] unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  upper_8         1    1[COMRAM] unsigned char 
  3932 ;;  mask            1    2[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         1       0       0       0       0       0       0
  3943 ;;      Locals:         2       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0
  3945 ;;      Totals:         3       0       0       0       0       0       0
  3946 ;;Total ram usage:        3 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    2
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text15
  3957  0000D6                     __ptext15:
  3958                           	opt callstack 0
  3959  0000D6                     _set_duty_cycle:
  3960                           	opt callstack 0
  3961  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3962                           
  3963                           ;incstack = 0
  3964                           ;set_duty_cycle@upper_8 stored from wreg
  3965  0000D8  6E02               	movwf	set_duty_cycle@upper_8,c
  3966                           
  3967                           ;pwm.c: 19:   CCPR1L = upper_8;
  3968  0000DA  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  3969                           
  3970                           ;pwm.c: 20:   char mask = 0;
  3971  0000DE  0E00               	movlw	0
  3972  0000E0  6E03               	movwf	set_duty_cycle@mask,c
  3973                           
  3974                           ;pwm.c: 21:   mask |= lower_2;
  3975  0000E2  5001               	movf	set_duty_cycle@lower_2,w,c
  3976  0000E4  1203               	iorwf	set_duty_cycle@mask,f,c
  3977                           
  3978                           ;pwm.c: 22:   mask = mask << 4;
  3979  0000E6  3803               	swapf	set_duty_cycle@mask,w,c
  3980  0000E8  0BF0               	andlw	240
  3981  0000EA  6E03               	movwf	set_duty_cycle@mask,c
  3982                           
  3983                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  3984  0000EC  50BD               	movf	4029,w,c	;volatile
  3985  0000EE  0BCF               	andlw	207
  3986  0000F0  1003               	iorwf	set_duty_cycle@mask,w,c
  3987  0000F2  6EBD               	movwf	4029,c	;volatile
  3988  0000F4  0012               	return		;funcret
  3989  0000F6  FFFF               	dw	65535	; errata NOP
  3990  0000F8                     __end_of_set_duty_cycle:
  3991                           	opt callstack 0
  3992                           
  3993 ;; *************** function _read_SRAM *****************
  3994 ;; Defined at:
  3995 ;;		line 91 in file "main.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  address         2   38[BANK0 ] int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  time_elapsed    2   44[BANK0 ] int 
  4000 ;;  stored_temp     2   42[BANK0 ] int 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4010 ;;      Params:         0       2       0       0       0       0       0
  4011 ;;      Locals:         0       4       0       0       0       0       0
  4012 ;;      Temps:          0       2       0       0       0       0       0
  4013 ;;      Totals:         0       8       0       0       0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:   11
  4017 ;; This function calls:
  4018 ;;		_UARTNewLine
  4019 ;;		_UARTSendString
  4020 ;;		_int_to_char
  4021 ;;		_read_op
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text16
  4028  001F58                     __ptext16:
  4029                           	opt callstack 0
  4030  001F58                     _read_SRAM:
  4031                           	opt callstack 0
  4032  001F58  FFFF               	dw	65535	; assembler added errata NOP
  4033                           
  4034                           ;main.c: 92:   int stored_temp = read_op(address);
  4035                           
  4036                           ;incstack = 0
  4037  001F5A  0100               	movlb	0	; () banked
  4038  001F5C  51A6               	movf	read_SRAM@address& (0+255),w,b
  4039  001F5E  EC7C  F000         	call	_read_op
  4040  001F62  0100               	movlb	0	; () banked
  4041  001F64  6FA8               	movwf	??_read_SRAM& (0+255),b
  4042  001F66  51A8               	movf	??_read_SRAM& (0+255),w,b
  4043  001F68  6FAA               	movwf	read_SRAM@stored_temp& (0+255),b
  4044  001F6A  6BAB               	clrf	(read_SRAM@stored_temp+1)& (0+255),b
  4045                           
  4046                           ;main.c: 93:   int time_elapsed = read_op(address + 1);
  4047  001F6C  29A6               	incf	read_SRAM@address& (0+255),w,b
  4048  001F6E  EC7C  F000         	call	_read_op
  4049  001F72  0100               	movlb	0	; () banked
  4050  001F74  6FA8               	movwf	??_read_SRAM& (0+255),b
  4051  001F76  51A8               	movf	??_read_SRAM& (0+255),w,b
  4052  001F78  6FAC               	movwf	read_SRAM@time_elapsed& (0+255),b
  4053  001F7A  6BAD               	clrf	(read_SRAM@time_elapsed+1)& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 94:   TRISCbits.TRISC7 = 0;
  4057  001F7C  9E94               	bcf	3988,7,c	;volatile
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 95:   UARTSendString("Temperature at address ");
  4061  001F7E  0E38               	movlw	low STR_4
  4062  001F80  6FA0               	movwf	UARTSendString@c& (0+255),b
  4063  001F82  0E06               	movlw	high STR_4
  4064  001F84  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4065  001F86  EC89  F01D         	call	_UARTSendString	;wreg free
  4066                           
  4067                           ;main.c: 96:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4068  001F8A  0E02               	movlw	2
  4069  001F8C  0100               	movlb	0	; () banked
  4070  001F8E  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4071  001F90  0E86               	movlw	134
  4072  001F92  6FA8               	movwf	??_read_SRAM& (0+255),b
  4073  001F94  0EDA               	movlw	218
  4074  001F96                     u5557:
  4075  001F96  FFFF               	dw	65535	; errata NOP
  4076  001F98  2EE8               	decfsz	wreg,f,c
  4077  001F9A  D7FD               	bra	u5557
  4078  001F9C  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4079  001F9E  D7FB               	bra	u5557
  4080  001FA0  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4081  001FA2  D7F9               	bra	u5557
  4082  001FA4  D000               	nop2	
  4083  001FA6  F000               	nop	
  4084                           
  4085                           ;main.c: 97:   UARTSendString(int_to_char(address));
  4086  001FA8  C0A6  F07A         	movff	read_SRAM@address,int_to_char@num
  4087  001FAC  C0A7  F07B         	movff	read_SRAM@address+1,int_to_char@num+1
  4088  001FB0  0E00               	movlw	0
  4089  001FB2  BE7B               	btfsc	int_to_char@num+1,7,c
  4090  001FB4  0EFF               	movlw	-1
  4091  001FB6  6E7C               	movwf	int_to_char@num+2,c
  4092  001FB8  6E7D               	movwf	int_to_char@num+3,c
  4093  001FBA  ECCD  F01E         	call	_int_to_char	;wreg free
  4094  001FBE  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4095  001FC2  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4096  001FC6  EC89  F01D         	call	_UARTSendString	;wreg free
  4097                           
  4098                           ;main.c: 98:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4099  001FCA  0E02               	movlw	2
  4100  001FCC  0100               	movlb	0	; () banked
  4101  001FCE  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4102  001FD0  0E86               	movlw	134
  4103  001FD2  6FA8               	movwf	??_read_SRAM& (0+255),b
  4104  001FD4  0EDA               	movlw	218
  4105  001FD6                     u5567:
  4106  001FD6  FFFF               	dw	65535	; errata NOP
  4107  001FD8  2EE8               	decfsz	wreg,f,c
  4108  001FDA  D7FD               	bra	u5567
  4109  001FDC  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4110  001FDE  D7FB               	bra	u5567
  4111  001FE0  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4112  001FE2  D7F9               	bra	u5567
  4113  001FE4  D000               	nop2	
  4114  001FE6  F000               	nop	
  4115                           
  4116                           ;main.c: 99:   UARTSendString(": ");
  4117  001FE8  0EEB               	movlw	low STR_5
  4118  001FEA  0100               	movlb	0	; () banked
  4119  001FEC  6FA0               	movwf	UARTSendString@c& (0+255),b
  4120  001FEE  0E06               	movlw	high STR_5
  4121  001FF0  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4122  001FF2  EC89  F01D         	call	_UARTSendString	;wreg free
  4123                           
  4124                           ;main.c: 100:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4125  001FF6  0E02               	movlw	2
  4126  001FF8  0100               	movlb	0	; () banked
  4127  001FFA  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4128  001FFC  0E86               	movlw	134
  4129  001FFE  6FA8               	movwf	??_read_SRAM& (0+255),b
  4130  002000  0EDA               	movlw	218
  4131  002002                     u5577:
  4132  002002  FFFF               	dw	65535	; errata NOP
  4133  002004  2EE8               	decfsz	wreg,f,c
  4134  002006  D7FD               	bra	u5577
  4135  002008  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4136  00200A  D7FB               	bra	u5577
  4137  00200C  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4138  00200E  D7F9               	bra	u5577
  4139  002010  D000               	nop2	
  4140  002012  F000               	nop	
  4141                           
  4142                           ;main.c: 101:   UARTSendString(int_to_char(stored_temp));
  4143  002014  C0AA  F07A         	movff	read_SRAM@stored_temp,int_to_char@num
  4144  002018  C0AB  F07B         	movff	read_SRAM@stored_temp+1,int_to_char@num+1
  4145  00201C  0E00               	movlw	0
  4146  00201E  BE7B               	btfsc	int_to_char@num+1,7,c
  4147  002020  0EFF               	movlw	-1
  4148  002022  6E7C               	movwf	int_to_char@num+2,c
  4149  002024  6E7D               	movwf	int_to_char@num+3,c
  4150  002026  ECCD  F01E         	call	_int_to_char	;wreg free
  4151  00202A  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4152  00202E  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4153  002032  EC89  F01D         	call	_UARTSendString	;wreg free
  4154                           
  4155                           ;main.c: 102:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4156  002036  0E02               	movlw	2
  4157  002038  0100               	movlb	0	; () banked
  4158  00203A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4159  00203C  0E86               	movlw	134
  4160  00203E  6FA8               	movwf	??_read_SRAM& (0+255),b
  4161  002040  0EDA               	movlw	218
  4162  002042                     u5587:
  4163  002042  FFFF               	dw	65535	; errata NOP
  4164  002044  2EE8               	decfsz	wreg,f,c
  4165  002046  D7FD               	bra	u5587
  4166  002048  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4167  00204A  D7FB               	bra	u5587
  4168  00204C  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4169  00204E  D7F9               	bra	u5587
  4170  002050  D000               	nop2	
  4171  002052  F000               	nop	
  4172                           
  4173                           ;main.c: 103:   UARTSendString(" degrees C ");
  4174  002054  0E86               	movlw	low STR_6
  4175  002056  0100               	movlb	0	; () banked
  4176  002058  6FA0               	movwf	UARTSendString@c& (0+255),b
  4177  00205A  0E06               	movlw	high STR_6
  4178  00205C  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4179  00205E  EC89  F01D         	call	_UARTSendString	;wreg free
  4180                           
  4181                           ;main.c: 104:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4182  002062  0E02               	movlw	2
  4183  002064  0100               	movlb	0	; () banked
  4184  002066  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4185  002068  0E86               	movlw	134
  4186  00206A  6FA8               	movwf	??_read_SRAM& (0+255),b
  4187  00206C  0EDA               	movlw	218
  4188  00206E                     u5597:
  4189  00206E  FFFF               	dw	65535	; errata NOP
  4190  002070  2EE8               	decfsz	wreg,f,c
  4191  002072  D7FD               	bra	u5597
  4192  002074  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4193  002076  D7FB               	bra	u5597
  4194  002078  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4195  00207A  D7F9               	bra	u5597
  4196  00207C  D000               	nop2	
  4197  00207E  F000               	nop	
  4198                           
  4199                           ;main.c: 105:   UARTNewLine();
  4200  002080  ECA4  F000         	call	_UARTNewLine	;wreg free
  4201                           
  4202                           ;main.c: 106:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4203  002084  0E02               	movlw	2
  4204  002086  0100               	movlb	0	; () banked
  4205  002088  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4206  00208A  0E86               	movlw	134
  4207  00208C  6FA8               	movwf	??_read_SRAM& (0+255),b
  4208  00208E  0EDA               	movlw	218
  4209  002090                     u5607:
  4210  002090  FFFF               	dw	65535	; errata NOP
  4211  002092  2EE8               	decfsz	wreg,f,c
  4212  002094  D7FD               	bra	u5607
  4213  002096  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4214  002098  D7FB               	bra	u5607
  4215  00209A  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4216  00209C  D7F9               	bra	u5607
  4217  00209E  D000               	nop2	
  4218  0020A0  F000               	nop	
  4219                           
  4220                           ;main.c: 107:   UARTSendString("Time at address ");
  4221  0020A2  0E68               	movlw	low STR_7
  4222  0020A4  0100               	movlb	0	; () banked
  4223  0020A6  6FA0               	movwf	UARTSendString@c& (0+255),b
  4224  0020A8  0E06               	movlw	high STR_7
  4225  0020AA  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4226  0020AC  EC89  F01D         	call	_UARTSendString	;wreg free
  4227                           
  4228                           ;main.c: 108:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4229  0020B0  0E02               	movlw	2
  4230  0020B2  0100               	movlb	0	; () banked
  4231  0020B4  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4232  0020B6  0E86               	movlw	134
  4233  0020B8  6FA8               	movwf	??_read_SRAM& (0+255),b
  4234  0020BA  0EDA               	movlw	218
  4235  0020BC                     u5617:
  4236  0020BC  FFFF               	dw	65535	; errata NOP
  4237  0020BE  2EE8               	decfsz	wreg,f,c
  4238  0020C0  D7FD               	bra	u5617
  4239  0020C2  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4240  0020C4  D7FB               	bra	u5617
  4241  0020C6  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4242  0020C8  D7F9               	bra	u5617
  4243  0020CA  D000               	nop2	
  4244  0020CC  F000               	nop	
  4245                           
  4246                           ;main.c: 109:   UARTSendString(int_to_char(address + 1));
  4247  0020CE  0E01               	movlw	1
  4248  0020D0  0100               	movlb	0	; () banked
  4249  0020D2  25A6               	addwf	read_SRAM@address& (0+255),w,b
  4250  0020D4  6FA8               	movwf	??_read_SRAM& (0+255),b
  4251  0020D6  0E00               	movlw	0
  4252  0020D8  21A7               	addwfc	(read_SRAM@address+1)& (0+255),w,b
  4253  0020DA  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4254  0020DC  C0A8  F07A         	movff	??_read_SRAM,int_to_char@num
  4255  0020E0  C0A9  F07B         	movff	??_read_SRAM+1,int_to_char@num+1
  4256  0020E4  0E00               	movlw	0
  4257  0020E6  BE7B               	btfsc	int_to_char@num+1,7,c
  4258  0020E8  0EFF               	movlw	-1
  4259  0020EA  6E7C               	movwf	int_to_char@num+2,c
  4260  0020EC  6E7D               	movwf	int_to_char@num+3,c
  4261  0020EE  ECCD  F01E         	call	_int_to_char	;wreg free
  4262  0020F2  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4263  0020F6  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4264  0020FA  EC89  F01D         	call	_UARTSendString	;wreg free
  4265                           
  4266                           ;main.c: 110:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4267  0020FE  0E02               	movlw	2
  4268  002100  0100               	movlb	0	; () banked
  4269  002102  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4270  002104  0E86               	movlw	134
  4271  002106  6FA8               	movwf	??_read_SRAM& (0+255),b
  4272  002108  0EDA               	movlw	218
  4273  00210A                     u5627:
  4274  00210A  FFFF               	dw	65535	; errata NOP
  4275  00210C  2EE8               	decfsz	wreg,f,c
  4276  00210E  D7FD               	bra	u5627
  4277  002110  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4278  002112  D7FB               	bra	u5627
  4279  002114  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4280  002116  D7F9               	bra	u5627
  4281  002118  D000               	nop2	
  4282  00211A  F000               	nop	
  4283                           
  4284                           ;main.c: 111:   UARTSendString(": ");
  4285  00211C  0EEB               	movlw	low STR_5
  4286  00211E  0100               	movlb	0	; () banked
  4287  002120  6FA0               	movwf	UARTSendString@c& (0+255),b
  4288  002122  0E06               	movlw	high STR_5
  4289  002124  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4290  002126  EC89  F01D         	call	_UARTSendString	;wreg free
  4291                           
  4292                           ;main.c: 112:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4293  00212A  0E02               	movlw	2
  4294  00212C  0100               	movlb	0	; () banked
  4295  00212E  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4296  002130  0E86               	movlw	134
  4297  002132  6FA8               	movwf	??_read_SRAM& (0+255),b
  4298  002134  0EDA               	movlw	218
  4299  002136                     u5637:
  4300  002136  FFFF               	dw	65535	; errata NOP
  4301  002138  2EE8               	decfsz	wreg,f,c
  4302  00213A  D7FD               	bra	u5637
  4303  00213C  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4304  00213E  D7FB               	bra	u5637
  4305  002140  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4306  002142  D7F9               	bra	u5637
  4307  002144  D000               	nop2	
  4308  002146  F000               	nop	
  4309                           
  4310                           ;main.c: 113:   UARTSendString(int_to_char(time_elapsed));
  4311  002148  C0AC  F07A         	movff	read_SRAM@time_elapsed,int_to_char@num
  4312  00214C  C0AD  F07B         	movff	read_SRAM@time_elapsed+1,int_to_char@num+1
  4313  002150  0E00               	movlw	0
  4314  002152  BE7B               	btfsc	int_to_char@num+1,7,c
  4315  002154  0EFF               	movlw	-1
  4316  002156  6E7C               	movwf	int_to_char@num+2,c
  4317  002158  6E7D               	movwf	int_to_char@num+3,c
  4318  00215A  ECCD  F01E         	call	_int_to_char	;wreg free
  4319  00215E  C07A  F0A0         	movff	?_int_to_char,UARTSendString@c
  4320  002162  C07B  F0A1         	movff	?_int_to_char+1,UARTSendString@c+1
  4321  002166  EC89  F01D         	call	_UARTSendString	;wreg free
  4322                           
  4323                           ;main.c: 114:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4324  00216A  0E02               	movlw	2
  4325  00216C  0100               	movlb	0	; () banked
  4326  00216E  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4327  002170  0E86               	movlw	134
  4328  002172  6FA8               	movwf	??_read_SRAM& (0+255),b
  4329  002174  0EDA               	movlw	218
  4330  002176                     u5647:
  4331  002176  FFFF               	dw	65535	; errata NOP
  4332  002178  2EE8               	decfsz	wreg,f,c
  4333  00217A  D7FD               	bra	u5647
  4334  00217C  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4335  00217E  D7FB               	bra	u5647
  4336  002180  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4337  002182  D7F9               	bra	u5647
  4338  002184  D000               	nop2	
  4339  002186  F000               	nop	
  4340                           
  4341                           ;main.c: 115:   UARTSendString(" minutes");
  4342  002188  0E9B               	movlw	low STR_9
  4343  00218A  0100               	movlb	0	; () banked
  4344  00218C  6FA0               	movwf	UARTSendString@c& (0+255),b
  4345  00218E  0E06               	movlw	high STR_9
  4346  002190  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4347  002192  EC89  F01D         	call	_UARTSendString	;wreg free
  4348                           
  4349                           ;main.c: 116:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4350  002196  0E02               	movlw	2
  4351  002198  0100               	movlb	0	; () banked
  4352  00219A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4353  00219C  0E86               	movlw	134
  4354  00219E  6FA8               	movwf	??_read_SRAM& (0+255),b
  4355  0021A0  0EDA               	movlw	218
  4356  0021A2                     u5657:
  4357  0021A2  FFFF               	dw	65535	; errata NOP
  4358  0021A4  2EE8               	decfsz	wreg,f,c
  4359  0021A6  D7FD               	bra	u5657
  4360  0021A8  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4361  0021AA  D7FB               	bra	u5657
  4362  0021AC  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4363  0021AE  D7F9               	bra	u5657
  4364  0021B0  D000               	nop2	
  4365  0021B2  F000               	nop	
  4366                           
  4367                           ;main.c: 117:   UARTNewLine();
  4368  0021B4  ECA4  F000         	call	_UARTNewLine	;wreg free
  4369                           
  4370                           ;main.c: 118:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4371  0021B8  0E02               	movlw	2
  4372  0021BA  0100               	movlb	0	; () banked
  4373  0021BC  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4374  0021BE  0E86               	movlw	134
  4375  0021C0  6FA8               	movwf	??_read_SRAM& (0+255),b
  4376  0021C2  0EDA               	movlw	218
  4377  0021C4                     u5667:
  4378  0021C4  FFFF               	dw	65535	; errata NOP
  4379  0021C6  2EE8               	decfsz	wreg,f,c
  4380  0021C8  D7FD               	bra	u5667
  4381  0021CA  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4382  0021CC  D7FB               	bra	u5667
  4383  0021CE  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4384  0021D0  D7F9               	bra	u5667
  4385  0021D2  D000               	nop2	
  4386  0021D4  F000               	nop	
  4387                           
  4388                           ;main.c: 119:   UARTSendString("Done reading from memory.");
  4389  0021D6  0E1E               	movlw	low STR_10
  4390  0021D8  0100               	movlb	0	; () banked
  4391  0021DA  6FA0               	movwf	UARTSendString@c& (0+255),b
  4392  0021DC  0E06               	movlw	high STR_10
  4393  0021DE  6FA1               	movwf	(UARTSendString@c+1)& (0+255),b
  4394  0021E0  EC89  F01D         	call	_UARTSendString	;wreg free
  4395                           
  4396                           ;main.c: 120:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4397  0021E4  0E02               	movlw	2
  4398  0021E6  0100               	movlb	0	; () banked
  4399  0021E8  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4400  0021EA  0E86               	movlw	134
  4401  0021EC  6FA8               	movwf	??_read_SRAM& (0+255),b
  4402  0021EE  0EDA               	movlw	218
  4403  0021F0                     u5677:
  4404  0021F0  FFFF               	dw	65535	; errata NOP
  4405  0021F2  2EE8               	decfsz	wreg,f,c
  4406  0021F4  D7FD               	bra	u5677
  4407  0021F6  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4408  0021F8  D7FB               	bra	u5677
  4409  0021FA  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4410  0021FC  D7F9               	bra	u5677
  4411  0021FE  D000               	nop2	
  4412  002200  F000               	nop	
  4413                           
  4414                           ;main.c: 121:   UARTNewLine();
  4415  002202  ECA4  F000         	call	_UARTNewLine	;wreg free
  4416                           
  4417                           ;main.c: 122:   _delay((unsigned long)((100)*(16000000/4000.0)));
  4418  002206  0E02               	movlw	2
  4419  002208  0100               	movlb	0	; () banked
  4420  00220A  6FA9               	movwf	(??_read_SRAM+1)& (0+255),b
  4421  00220C  0E86               	movlw	134
  4422  00220E  6FA8               	movwf	??_read_SRAM& (0+255),b
  4423  002210  0EDA               	movlw	218
  4424  002212                     u5687:
  4425  002212  FFFF               	dw	65535	; errata NOP
  4426  002214  2EE8               	decfsz	wreg,f,c
  4427  002216  D7FD               	bra	u5687
  4428  002218  2FA8               	decfsz	??_read_SRAM& (0+255),f,b
  4429  00221A  D7FB               	bra	u5687
  4430  00221C  2FA9               	decfsz	(??_read_SRAM+1)& (0+255),f,b
  4431  00221E  D7F9               	bra	u5687
  4432  002220  D000               	nop2	
  4433  002222  F000               	nop	
  4434                           
  4435                           ;main.c: 123:   UARTNewLine();
  4436  002224  ECA4  F000         	call	_UARTNewLine	;wreg free
  4437  002228  0012               	return		;funcret
  4438  00222A  FFFF               	dw	65535	; errata NOP
  4439  00222C                     __end_of_read_SRAM:
  4440                           	opt callstack 0
  4441                           
  4442 ;; *************** function _read_op *****************
  4443 ;; Defined at:
  4444 ;;		line 30 in file "drive_memory.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  address         1    wreg     unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  address         1    0[COMRAM] unsigned char 
  4449 ;;  result          1    1[COMRAM] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      unsigned char 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4459 ;;      Params:         0       0       0       0       0       0       0
  4460 ;;      Locals:         2       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    2
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_read_SRAM
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text17
  4474  0000F8                     __ptext17:
  4475                           	opt callstack 0
  4476  0000F8                     _read_op:
  4477                           	opt callstack 0
  4478  0000F8  FFFF               	dw	65535	; assembler added errata NOP
  4479                           
  4480                           ;incstack = 0
  4481                           ;read_op@address stored from wreg
  4482  0000FA  6E01               	movwf	read_op@address,c
  4483                           
  4484                           ;drive_memory.c: 32:   TRISC &= ~(0x01);
  4485  0000FC  9094               	bcf	3988,0,c	;volatile
  4486                           
  4487                           ;drive_memory.c: 33:   TRISD = 0xFF;
  4488  0000FE  6895               	setf	3989,c	;volatile
  4489                           
  4490                           ;drive_memory.c: 34:   TRISB &= ~(0x3F);
  4491  000100  0EC0               	movlw	192
  4492  000102  1693               	andwf	3987,f,c	;volatile
  4493                           
  4494                           ;drive_memory.c: 35:   PORTB = address;
  4495  000104  C001  FF81         	movff	read_op@address,3969	;volatile
  4496                           
  4497                           ;drive_memory.c: 36:   RB5 = 1;
  4498  000108  8A81               	bsf	3969,5,c	;volatile
  4499                           
  4500                           ;drive_memory.c: 38:   RC0 = 1;
  4501  00010A  8082               	bsf	3970,0,c	;volatile
  4502                           
  4503                           ;drive_memory.c: 41:   RB5 = 0;
  4504  00010C  9A81               	bcf	3969,5,c	;volatile
  4505                           
  4506                           ;drive_memory.c: 45:   RB5 = 1;
  4507                           
  4508                           ;drive_memory.c: 42:   _delay((unsigned long)((0.07)*(16000000/4000000.0)));
  4509  00010E  8A81               	bsf	3969,5,c	;volatile
  4510                           
  4511                           ;drive_memory.c: 46:   char result = PORTD;
  4512  000110  CF83 F002          	movff	3971,read_op@result	;volatile
  4513                           
  4514                           ;drive_memory.c: 47:   return result;
  4515  000114  5002               	movf	read_op@result,w,c
  4516  000116  0012               	return		;funcret
  4517  000118  FFFF               	dw	65535	; errata NOP
  4518  00011A                     __end_of_read_op:
  4519                           	opt callstack 0
  4520                           
  4521 ;; *************** function _int_to_char *****************
  4522 ;; Defined at:
  4523 ;;		line 18 in file "lcd.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  num             4  121[COMRAM] unsigned long 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  result         10   18[BANK0 ] unsigned char [10]
  4528 ;;  the_num         4   28[BANK0 ] unsigned long 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2  121[COMRAM] PTR unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4538 ;;      Params:         4       0       0       0       0       0       0
  4539 ;;      Locals:         0      14       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0
  4541 ;;      Totals:         4      14       0       0       0       0       0
  4542 ;;Total ram usage:       18 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:   10
  4545 ;; This function calls:
  4546 ;;		_getchar
  4547 ;;		_sprintf
  4548 ;; This function is called by:
  4549 ;;		_main
  4550 ;;		_read_SRAM
  4551 ;;		_write_SRAM
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text18
  4556  003D9A                     __ptext18:
  4557                           	opt callstack 0
  4558  003D9A                     _int_to_char:
  4559                           	opt callstack 0
  4560  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  4561                           
  4562                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  4563                           
  4564                           ;incstack = 0
  4565  003D9C  C07A  F09C         	movff	int_to_char@num,int_to_char@the_num
  4566  003DA0  C07B  F09D         	movff	int_to_char@num+1,int_to_char@the_num+1
  4567  003DA4  C07C  F09E         	movff	int_to_char@num+2,int_to_char@the_num+2
  4568  003DA8  C07D  F09F         	movff	int_to_char@num+3,int_to_char@the_num+3
  4569                           
  4570                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  4571  003DAC  0E92               	movlw	low int_to_char@result
  4572  003DAE  0100               	movlb	0	; () banked
  4573  003DB0  6F80               	movwf	sprintf@s& (0+255),b
  4574  003DB2  0E00               	movlw	high int_to_char@result
  4575  003DB4  6F81               	movwf	(sprintf@s+1)& (0+255),b
  4576  003DB6  0EC0               	movlw	low STR_1
  4577  003DB8  6F82               	movwf	sprintf@fmt& (0+255),b
  4578  003DBA  0E06               	movlw	high STR_1
  4579  003DBC  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  4580  003DBE  C09C  F084         	movff	int_to_char@the_num,?_sprintf+4
  4581  003DC2  C09D  F085         	movff	int_to_char@the_num+1,?_sprintf+5
  4582  003DC6  C09E  F086         	movff	int_to_char@the_num+2,?_sprintf+6
  4583  003DCA  C09F  F087         	movff	int_to_char@the_num+3,?_sprintf+7
  4584  003DCE  ECFD  F01D         	call	_sprintf	;wreg free
  4585                           
  4586                           ;lcd.c: 22:   getchar();
  4587  003DD2  ECCC  F000         	call	_getchar	;wreg free
  4588                           
  4589                           ;lcd.c: 23:   return result;
  4590  003DD6  0E92               	movlw	low int_to_char@result
  4591  003DD8  6E7A               	movwf	?_int_to_char,c
  4592  003DDA  0E00               	movlw	high int_to_char@result
  4593  003DDC  6E7B               	movwf	?_int_to_char+1,c
  4594  003DDE  0012               	return		;funcret
  4595  003DE0  FFFF               	dw	65535	; errata NOP
  4596  003DE2                     __end_of_int_to_char:
  4597                           	opt callstack 0
  4598                           
  4599 ;; *************** function _sprintf *****************
  4600 ;; Defined at:
  4601 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4604 ;;		 -> int_to_char@result(10), 
  4605 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4606 ;;		 -> STR_1(4), 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  f               6   10[BANK0 ] struct _IO_FILE
  4609 ;;  ap              2   16[BANK0 ] PTR void [1]
  4610 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4611 ;;  ret             2    0        int 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    0[BANK0 ] int 
  4614 ;; Registers used:
  4615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4621 ;;      Params:         0       8       0       0       0       0       0
  4622 ;;      Locals:         0      10       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0
  4624 ;;      Totals:         0      18       0       0       0       0       0
  4625 ;;Total ram usage:       18 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    9
  4628 ;; This function calls:
  4629 ;;		_vfprintf
  4630 ;; This function is called by:
  4631 ;;		_int_to_char
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text19
  4636  003BFA                     __ptext19:
  4637                           	opt callstack 0
  4638  003BFA                     _sprintf:
  4639                           	opt callstack 0
  4640  003BFA  FFFF               	dw	65535	; assembler added errata NOP
  4641                           
  4642                           ;incstack = 0
  4643  003BFC  0E84               	movlw	low (?_sprintf+4)
  4644  003BFE  0100               	movlb	0	; () banked
  4645  003C00  6F90               	movwf	sprintf@ap& (0+255),b
  4646  003C02  0E00               	movlw	high (?_sprintf+4)
  4647  003C04  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  4648  003C06  C080  F08A         	movff	sprintf@s,sprintf@f
  4649  003C0A  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  4650                           
  4651                           ; BSR set to: 0
  4652  003C0E  0E00               	movlw	0
  4653  003C10  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  4654  003C12  0E00               	movlw	0
  4655  003C14  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658  003C16  0E00               	movlw	0
  4659  003C18  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  4660  003C1A  0E00               	movlw	0
  4661  003C1C  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  4662                           
  4663                           ; BSR set to: 0
  4664  003C1E  0E8A               	movlw	low sprintf@f
  4665  003C20  6E72               	movwf	vfprintf@fp,c
  4666  003C22  0E00               	movlw	high sprintf@f
  4667  003C24  6E73               	movwf	vfprintf@fp+1,c
  4668  003C26  C082  F074         	movff	sprintf@fmt,vfprintf@fmt
  4669  003C2A  C083  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4670  003C2E  0E90               	movlw	low sprintf@ap
  4671  003C30  6E76               	movwf	vfprintf@ap,c
  4672  003C32  0E00               	movlw	high sprintf@ap
  4673  003C34  6E77               	movwf	vfprintf@ap+1,c
  4674  003C36  ECCD  F01D         	call	_vfprintf	;wreg free
  4675  003C3A  0100               	movlb	0	; () banked
  4676  003C3C  518C               	movf	(sprintf@f+2)& (0+255),w,b
  4677  003C3E  2580               	addwf	sprintf@s& (0+255),w,b
  4678  003C40  6ED9               	movwf	fsr2l,c
  4679  003C42  518D               	movf	(sprintf@f+3)& (0+255),w,b
  4680  003C44  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  4681  003C46  6EDA               	movwf	fsr2h,c
  4682  003C48  0E00               	movlw	0
  4683  003C4A  6EDF               	movwf	indf2,c
  4684                           
  4685                           ; BSR set to: 0
  4686  003C4C  0012               	return		;funcret
  4687  003C4E  FFFF               	dw	65535	; errata NOP
  4688  003C50                     __end_of_sprintf:
  4689                           	opt callstack 0
  4690                           
  4691 ;; *************** function _vfprintf *****************
  4692 ;; Defined at:
  4693 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  4696 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4697 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  4698 ;;		 -> STR_2(3), STR_1(4), 
  4699 ;;  ap              2  117[COMRAM] PTR PTR void 
  4700 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  4703 ;;		 -> STR_2(3), STR_1(4), 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  2  113[COMRAM] int 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4713 ;;      Params:         6       0       0       0       0       0       0
  4714 ;;      Locals:         2       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0
  4716 ;;      Totals:         8       0       0       0       0       0       0
  4717 ;;Total ram usage:        8 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    8
  4720 ;; This function calls:
  4721 ;;		_vfpfcnvrt
  4722 ;; This function is called by:
  4723 ;;		_sprintf
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text20
  4728  003B9A                     __ptext20:
  4729                           	opt callstack 0
  4730  003B9A                     _vfprintf:
  4731                           	opt callstack 0
  4732  003B9A  FFFF               	dw	65535	; assembler added errata NOP
  4733                           
  4734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;incstack = 0
  4738  003B9C  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  4739  003BA0  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4740                           
  4741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4742  003BA4  0E00               	movlw	0
  4743  003BA6  0100               	movlb	0	; () banked
  4744  003BA8  6FCB               	movwf	(_nout+1)& (0+255),b
  4745  003BAA  0E00               	movlw	0
  4746  003BAC  6FCA               	movwf	_nout& (0+255),b
  4747                           
  4748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4749  003BAE  D014               	goto	l4438
  4750  003BB0                     l4436:
  4751  003BB0  FFFF               	dw	65535	; assembler added errata NOP
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4755  003BB2  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4756  003BB6  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4757  003BBA  0E78               	movlw	low vfprintf@cfmt
  4758  003BBC  6E45               	movwf	vfpfcnvrt@fmt,c
  4759  003BBE  0E00               	movlw	high vfprintf@cfmt
  4760  003BC0  6E46               	movwf	vfpfcnvrt@fmt+1,c
  4761  003BC2  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4762  003BC6  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4763  003BCA  EC79  F003         	call	_vfpfcnvrt	;wreg free
  4764  003BCE  5043               	movf	?_vfpfcnvrt,w,c
  4765  003BD0  0100               	movlb	0	; () banked
  4766  003BD2  27CA               	addwf	_nout& (0+255),f,b
  4767  003BD4  5044               	movf	?_vfpfcnvrt+1,w,c
  4768  003BD6  23CB               	addwfc	(_nout+1)& (0+255),f,b
  4769  003BD8                     l4438:
  4770  003BD8  FFFF               	dw	65535	; assembler added errata NOP
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4774  003BDA  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  4775  003BDE  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4776  003BE2                     	if	0	;tblptru may be non-zero
  4777  003BE2                     	endif
  4778  003BE2                     	if	0	;tblptru may be non-zero
  4779  003BE2                     	endif
  4780  003BE2  0008               	tblrd		*
  4781  003BE4  FFFF               	dw	65535	; errata NOP
  4782  003BE6  50F5               	movf	tablat,w,c
  4783  003BE8  0900               	iorlw	0
  4784  003BEA  A4D8               	btfss	status,2,c
  4785  003BEC  D7E1               	goto	l4436
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4789  003BEE  C0CA  F072         	movff	_nout,?_vfprintf
  4790  003BF2  C0CB  F073         	movff	_nout+1,?_vfprintf+1
  4791                           
  4792                           ; BSR set to: 0
  4793  003BF6  0012               	return		;funcret
  4794  003BF8  FFFF               	dw	65535	; errata NOP
  4795  003BFA                     __end_of_vfprintf:
  4796                           	opt callstack 0
  4797                           
  4798 ;; *************** function _vfpfcnvrt *****************
  4799 ;; Defined at:
  4800 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4803 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4804 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4805 ;;		 -> vfprintf@cfmt(2), 
  4806 ;;  ap              2   70[COMRAM] PTR PTR void 
  4807 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  llu             8  105[COMRAM] unsigned long long 
  4810 ;;  ll              8   94[COMRAM] long long 
  4811 ;;  f               4    0        long long 
  4812 ;;  ct              3    0        unsigned char [3]
  4813 ;;  vp              2  102[COMRAM] PTR void 
  4814 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4815 ;;  done            2   88[COMRAM] int 
  4816 ;;  cp              2   86[COMRAM] PTR unsigned char 
  4817 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  4818 ;;  i               2    0        int 
  4819 ;;  c               1  104[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  2   66[COMRAM] int 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4829 ;;      Params:         6       0       0       0       0       0       0
  4830 ;;      Locals:        27       0       0       0       0       0       0
  4831 ;;      Temps:         14       0       0       0       0       0       0
  4832 ;;      Totals:        47       0       0       0       0       0       0
  4833 ;;Total ram usage:       47 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    7
  4836 ;; This function calls:
  4837 ;;		_atoi
  4838 ;;		_ctoa
  4839 ;;		_dtoa
  4840 ;;		_fputc
  4841 ;;		_isdigit
  4842 ;;		_otoa
  4843 ;;		_stoa
  4844 ;;		_strncmp
  4845 ;;		_utoa
  4846 ;;		_xtoa
  4847 ;; This function is called by:
  4848 ;;		_vfprintf
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text21
  4853  0006F2                     __ptext21:
  4854                           	opt callstack 0
  4855  0006F2                     _vfpfcnvrt:
  4856                           	opt callstack 0
  4857  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  4858                           
  4859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;incstack = 0
  4863  0006F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4864  0006F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4865  0006FC  CFDE FFF6          	movff	postinc2,tblptrl
  4866  000700  CFDD FFF7          	movff	postdec2,tblptrh
  4867  000704                     	if	0	;tblptru may be non-zero
  4868  000704                     	endif
  4869  000704                     	if	0	;tblptru may be non-zero
  4870  000704                     	endif
  4871  000704  0008               	tblrd		*
  4872  000706  FFFF               	dw	65535	; errata NOP
  4873  000708  50F5               	movf	tablat,w,c
  4874  00070A  0A25               	xorlw	37
  4875  00070C  A4D8               	btfss	status,2,c
  4876  00070E  EF2A  F00C         	goto	l4416
  4877                           
  4878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  4879  000712  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4880  000716  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4881  00071A  2ADE               	incf	postinc2,f,c
  4882  00071C  0E00               	movlw	0
  4883  00071E  22DD               	addwfc	postdec2,f,c
  4884                           
  4885                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  4886  000720  0E00               	movlw	0
  4887  000722  0100               	movlb	0	; () banked
  4888  000724  6FCD               	movwf	(_width+1)& (0+255),b
  4889  000726  0E00               	movlw	0
  4890  000728  6FCC               	movwf	_width& (0+255),b
  4891  00072A  C0CC  F0D0         	movff	_width,_flags
  4892  00072E  C0CD  F0D1         	movff	_width+1,_flags+1
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  4896  000732  69CE               	setf	_prec& (0+255),b
  4897  000734  69CF               	setf	(_prec+1)& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  4901  000736  0E00               	movlw	0
  4902  000738  6E5A               	movwf	vfpfcnvrt@done+1,c
  4903  00073A  0E00               	movlw	0
  4904  00073C  D020               	goto	L7
  4905  00073E                     l4058:
  4906  00073E  FFFF               	dw	65535	; assembler added errata NOP
  4907                           
  4908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  4909  000740  0100               	movlb	0	; () banked
  4910  000742  81D0               	bsf	_flags& (0+255),0,b
  4911  000744                     l4060:
  4912  000744  FFFF               	dw	65535	; assembler added errata NOP
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  4916  000746  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4917  00074A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4918  00074E  2ADE               	incf	postinc2,f,c
  4919  000750  0E00               	movlw	0
  4920  000752  22DD               	addwfc	postdec2,f,c
  4921                           
  4922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  4923  000754  D03A               	goto	l4084
  4924  000756                     l4062:
  4925  000756  FFFF               	dw	65535	; assembler added errata NOP
  4926                           
  4927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  4928  000758  0100               	movlb	0	; () banked
  4929  00075A  83D0               	bsf	_flags& (0+255),1,b
  4930  00075C  D7F3               	goto	l4060
  4931  00075E                     l4066:
  4932  00075E  FFFF               	dw	65535	; assembler added errata NOP
  4933                           
  4934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  4935  000760  0100               	movlb	0	; () banked
  4936  000762  85D0               	bsf	_flags& (0+255),2,b
  4937  000764  D7EF               	goto	l4060
  4938  000766                     l4070:
  4939  000766  FFFF               	dw	65535	; assembler added errata NOP
  4940                           
  4941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  4942  000768  0100               	movlb	0	; () banked
  4943  00076A  87D0               	bsf	_flags& (0+255),3,b
  4944  00076C  D7EB               	goto	l4060
  4945  00076E                     l4074:
  4946  00076E  FFFF               	dw	65535	; assembler added errata NOP
  4947                           
  4948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  4949  000770  0100               	movlb	0	; () banked
  4950  000772  89D0               	bsf	_flags& (0+255),4,b
  4951  000774  D7E7               	goto	l4060
  4952  000776                     l4078:
  4953  000776  FFFF               	dw	65535	; assembler added errata NOP
  4954                           
  4955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  4956  000778  0E00               	movlw	0
  4957  00077A  6E5A               	movwf	vfpfcnvrt@done+1,c
  4958  00077C  0E01               	movlw	1
  4959  00077E                     L7:
  4960  00077E  FFFF               	dw	65535	; assembler added errata NOP
  4961  000780  6E59               	movwf	vfpfcnvrt@done,c
  4962                           
  4963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  4964  000782  D023               	goto	l4084
  4965  000784                     l4082:
  4966  000784  FFFF               	dw	65535	; assembler added errata NOP
  4967  000786  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4968  00078A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4969  00078E  CFDE FFF6          	movff	postinc2,tblptrl
  4970  000792  CFDD FFF7          	movff	postdec2,tblptrh
  4971  000796                     	if	0	;tblptru may be non-zero
  4972  000796                     	endif
  4973  000796                     	if	0	;tblptru may be non-zero
  4974  000796                     	endif
  4975  000796  0008               	tblrd		*
  4976  000798  FFFF               	dw	65535	; errata NOP
  4977  00079A  50F5               	movf	tablat,w,c
  4978  00079C  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  4979  00079E  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  4980                           
  4981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4982                           ; Switch size 1, requested type "simple"
  4983                           ; Number of cases is 1, Range of values is 0 to 0
  4984                           ; switch strategies available:
  4985                           ; Name         Instructions Cycles
  4986                           ; simple_byte            4     3 (average)
  4987                           ;	Chosen strategy is simple_byte
  4988  0007A0  504A               	movf	??_vfpfcnvrt+1,w,c
  4989  0007A2  0A00               	xorlw	0	; case 0
  4990  0007A4  A4D8               	btfss	status,2,c
  4991  0007A6  D7E7               	goto	l4078
  4992                           
  4993                           ; Switch size 1, requested type "simple"
  4994                           ; Number of cases is 5, Range of values is 32 to 48
  4995                           ; switch strategies available:
  4996                           ; Name         Instructions Cycles
  4997                           ; simple_byte           16     9 (average)
  4998                           ;	Chosen strategy is simple_byte
  4999  0007A8  5049               	movf	??_vfpfcnvrt,w,c
  5000  0007AA  0A20               	xorlw	32	; case 32
  5001  0007AC  B4D8               	btfsc	status,2,c
  5002  0007AE  D7DB               	goto	l4070
  5003  0007B0  0A03               	xorlw	3	; case 35
  5004  0007B2  B4D8               	btfsc	status,2,c
  5005  0007B4  D7DC               	goto	l4074
  5006  0007B6  0A08               	xorlw	8	; case 43
  5007  0007B8  B4D8               	btfsc	status,2,c
  5008  0007BA  D7D1               	goto	l4066
  5009  0007BC  0A06               	xorlw	6	; case 45
  5010  0007BE  B4D8               	btfsc	status,2,c
  5011  0007C0  D7BE               	goto	l4058
  5012  0007C2  0A1D               	xorlw	29	; case 48
  5013  0007C4  B4D8               	btfsc	status,2,c
  5014  0007C6  D7C7               	goto	l4062
  5015  0007C8  D7D6               	goto	l4078
  5016  0007CA                     l4084:
  5017  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  5018                           
  5019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5020  0007CC  5059               	movf	vfpfcnvrt@done,w,c
  5021  0007CE  105A               	iorwf	vfpfcnvrt@done+1,w,c
  5022  0007D0  B4D8               	btfsc	status,2,c
  5023  0007D2  D7D8               	goto	l4082
  5024                           
  5025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  5026  0007D4  0100               	movlb	0	; () banked
  5027  0007D6  B1D0               	btfsc	_flags& (0+255),0,b
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  5031  0007D8  93D0               	bcf	_flags& (0+255),1,b
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  5035  0007DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5036  0007DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5037  0007E2  CFDE FFF6          	movff	postinc2,tblptrl
  5038  0007E6  CFDD FFF7          	movff	postdec2,tblptrh
  5039  0007EA                     	if	0	;tblptru may be non-zero
  5040  0007EA                     	endif
  5041  0007EA                     	if	0	;tblptru may be non-zero
  5042  0007EA                     	endif
  5043  0007EA  0008               	tblrd		*
  5044  0007EC  FFFF               	dw	65535	; errata NOP
  5045  0007EE  50F5               	movf	tablat,w,c
  5046  0007F0  0A2A               	xorlw	42
  5047  0007F2  A4D8               	btfss	status,2,c
  5048  0007F4  D023               	goto	l4096
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  5052  0007F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5053  0007FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5054  0007FE  2ADE               	incf	postinc2,f,c
  5055  000800  0E00               	movlw	0
  5056  000802  22DD               	addwfc	postdec2,f,c
  5057                           
  5058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5059  000804  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5060  000808  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5061  00080C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5062  000810  0E02               	movlw	2
  5063  000812  26DE               	addwf	postinc2,f,c
  5064  000814  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5065  000818  0E00               	movlw	0
  5066  00081A  22DD               	addwfc	postdec2,f,c
  5067  00081C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5068  000820  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5069  000824  CFDE F0CC          	movff	postinc2,_width
  5070  000828  CFDD F0CD          	movff	postdec2,_width+1
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  5074  00082C  AFCD               	btfss	(_width+1)& (0+255),7,b
  5075  00082E  D045               	goto	u3990
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  5079  000830  81D0               	bsf	_flags& (0+255),0,b
  5080                           
  5081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  5082  000832  6DCC               	negf	_width& (0+255),b
  5083  000834  1FCD               	comf	(_width+1)& (0+255),f,b
  5084  000836  B0D8               	btfsc	status,0,c
  5085  000838  2BCD               	incf	(_width+1)& (0+255),f,b
  5086  00083A  D03F               	goto	u3990
  5087  00083C                     l4096:
  5088  00083C  FFFF               	dw	65535	; assembler added errata NOP
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  5092  00083E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5093  000842  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5094  000846  CFDE F008          	movff	postinc2,atoi@s
  5095  00084A  CFDD F009          	movff	postdec2,atoi@s+1
  5096  00084E  EC08  F017         	call	_atoi	;wreg free
  5097  000852  C008  F0CC         	movff	?_atoi,_width
  5098  000856  C009  F0CD         	movff	?_atoi+1,_width+1
  5099                           
  5100                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5101  00085A  D008               	goto	l4100
  5102  00085C                     l4098:
  5103  00085C  FFFF               	dw	65535	; assembler added errata NOP
  5104                           
  5105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  5106  00085E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5107  000862  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5108  000866  2ADE               	incf	postinc2,f,c
  5109  000868  0E00               	movlw	0
  5110  00086A  22DD               	addwfc	postdec2,f,c
  5111  00086C                     l4100:
  5112  00086C  FFFF               	dw	65535	; assembler added errata NOP
  5113  00086E  0ED0               	movlw	208
  5114  000870  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  5115  000872  0EFF               	movlw	255
  5116  000874  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  5117  000876  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5118  00087A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5119  00087E  CFDE FFF6          	movff	postinc2,tblptrl
  5120  000882  CFDD FFF7          	movff	postdec2,tblptrh
  5121  000886                     	if	0	;tblptru may be non-zero
  5122  000886                     	endif
  5123  000886                     	if	0	;tblptru may be non-zero
  5124  000886                     	endif
  5125  000886  0008               	tblrd		*
  5126  000888  FFFF               	dw	65535	; errata NOP
  5127  00088A  50F5               	movf	tablat,w,c
  5128  00088C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5129  00088E  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5130  000890  5049               	movf	??_vfpfcnvrt,w,c
  5131  000892  264B               	addwf	??_vfpfcnvrt+2,f,c
  5132  000894  504A               	movf	??_vfpfcnvrt+1,w,c
  5133  000896  224C               	addwfc	??_vfpfcnvrt+3,f,c
  5134  000898  504C               	movf	??_vfpfcnvrt+3,w,c
  5135  00089A  E106               	bnz	u3970
  5136  00089C  0E0A               	movlw	10
  5137  00089E  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5138  0008A0  B0D8               	btfsc	status,0,c
  5139  0008A2  D002               	goto	u3970
  5140  0008A4  0E01               	movlw	1
  5141  0008A6  D002               	goto	u3980
  5142  0008A8                     u3970:
  5143  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  5144  0008AA  0E00               	movlw	0
  5145  0008AC                     u3980:
  5146  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  5147  0008AE  6E5B               	movwf	_vfpfcnvrt$1126,c
  5148  0008B0  6A5C               	clrf	_vfpfcnvrt$1126+1,c
  5149  0008B2  505B               	movf	_vfpfcnvrt$1126,w,c
  5150  0008B4  105C               	iorwf	_vfpfcnvrt$1126+1,w,c
  5151  0008B6  A4D8               	btfss	status,2,c
  5152  0008B8  D7D1               	goto	l4098
  5153  0008BA                     u3990:
  5154  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  5155                           
  5156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  5157  0008BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5158  0008C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5159  0008C4  CFDE FFF6          	movff	postinc2,tblptrl
  5160  0008C8  CFDD FFF7          	movff	postdec2,tblptrh
  5161  0008CC                     	if	0	;tblptru may be non-zero
  5162  0008CC                     	endif
  5163  0008CC                     	if	0	;tblptru may be non-zero
  5164  0008CC                     	endif
  5165  0008CC  0008               	tblrd		*
  5166  0008CE  FFFF               	dw	65535	; errata NOP
  5167  0008D0  50F5               	movf	tablat,w,c
  5168  0008D2  0A2E               	xorlw	46
  5169  0008D4  A4D8               	btfss	status,2,c
  5170  0008D6  D075               	goto	u4040
  5171                           
  5172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  5173  0008D8  0E00               	movlw	0
  5174  0008DA  0100               	movlb	0	; () banked
  5175  0008DC  6FCF               	movwf	(_prec+1)& (0+255),b
  5176  0008DE  0E00               	movlw	0
  5177  0008E0  6FCE               	movwf	_prec& (0+255),b
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  5181  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5182  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5183  0008EA  2ADE               	incf	postinc2,f,c
  5184  0008EC  0E00               	movlw	0
  5185  0008EE  22DD               	addwfc	postdec2,f,c
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  5189  0008F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5190  0008F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5191  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  5192  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  5193  000900                     	if	0	;tblptru may be non-zero
  5194  000900                     	endif
  5195  000900                     	if	0	;tblptru may be non-zero
  5196  000900                     	endif
  5197  000900  0008               	tblrd		*
  5198  000902  FFFF               	dw	65535	; errata NOP
  5199  000904  50F5               	movf	tablat,w,c
  5200  000906  0A2A               	xorlw	42
  5201  000908  A4D8               	btfss	status,2,c
  5202  00090A  D01C               	goto	l4116
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  5206  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5207  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5208  000914  2ADE               	incf	postinc2,f,c
  5209  000916  0E00               	movlw	0
  5210  000918  22DD               	addwfc	postdec2,f,c
  5211                           
  5212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  5213  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5214  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5215  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5216  000926  0E02               	movlw	2
  5217  000928  26DE               	addwf	postinc2,f,c
  5218  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5219  00092E  0E00               	movlw	0
  5220  000930  22DD               	addwfc	postdec2,f,c
  5221  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5222  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5223  00093A  CFDE F0CE          	movff	postinc2,_prec
  5224  00093E  CFDD F0CF          	movff	postdec2,_prec+1
  5225                           
  5226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  5227  000942  D03F               	goto	u4040
  5228  000944                     l4116:
  5229  000944  FFFF               	dw	65535	; assembler added errata NOP
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  5233  000946  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5234  00094A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5235  00094E  CFDE F008          	movff	postinc2,atoi@s
  5236  000952  CFDD F009          	movff	postdec2,atoi@s+1
  5237  000956  EC08  F017         	call	_atoi	;wreg free
  5238  00095A  C008  F0CE         	movff	?_atoi,_prec
  5239  00095E  C009  F0CF         	movff	?_atoi+1,_prec+1
  5240                           
  5241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5242  000962  D008               	goto	l4120
  5243  000964                     l4118:
  5244  000964  FFFF               	dw	65535	; assembler added errata NOP
  5245                           
  5246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  5247  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5248  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5249  00096E  2ADE               	incf	postinc2,f,c
  5250  000970  0E00               	movlw	0
  5251  000972  22DD               	addwfc	postdec2,f,c
  5252  000974                     l4120:
  5253  000974  FFFF               	dw	65535	; assembler added errata NOP
  5254  000976  0ED0               	movlw	208
  5255  000978  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  5256  00097A  0EFF               	movlw	255
  5257  00097C  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  5258  00097E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5259  000982  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5260  000986  CFDE FFF6          	movff	postinc2,tblptrl
  5261  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  5262  00098E                     	if	0	;tblptru may be non-zero
  5263  00098E                     	endif
  5264  00098E                     	if	0	;tblptru may be non-zero
  5265  00098E                     	endif
  5266  00098E  0008               	tblrd		*
  5267  000990  FFFF               	dw	65535	; errata NOP
  5268  000992  50F5               	movf	tablat,w,c
  5269  000994  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5270  000996  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5271  000998  5049               	movf	??_vfpfcnvrt,w,c
  5272  00099A  264B               	addwf	??_vfpfcnvrt+2,f,c
  5273  00099C  504A               	movf	??_vfpfcnvrt+1,w,c
  5274  00099E  224C               	addwfc	??_vfpfcnvrt+3,f,c
  5275  0009A0  504C               	movf	??_vfpfcnvrt+3,w,c
  5276  0009A2  E106               	bnz	u4020
  5277  0009A4  0E0A               	movlw	10
  5278  0009A6  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  5279  0009A8  B0D8               	btfsc	status,0,c
  5280  0009AA  D002               	goto	u4020
  5281  0009AC  0E01               	movlw	1
  5282  0009AE  D002               	goto	u4030
  5283  0009B0                     u4020:
  5284  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  5285  0009B2  0E00               	movlw	0
  5286  0009B4                     u4030:
  5287  0009B4  FFFF               	dw	65535	; assembler added errata NOP
  5288  0009B6  6E5D               	movwf	_vfpfcnvrt$1127,c
  5289  0009B8  6A5E               	clrf	_vfpfcnvrt$1127+1,c
  5290  0009BA  505D               	movf	_vfpfcnvrt$1127,w,c
  5291  0009BC  105E               	iorwf	_vfpfcnvrt$1127+1,w,c
  5292  0009BE  A4D8               	btfss	status,2,c
  5293  0009C0  D7D1               	goto	l4118
  5294  0009C2                     u4040:
  5295  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  5296                           
  5297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5298  0009C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5299  0009C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5300  0009CC  CFDE FFF6          	movff	postinc2,tblptrl
  5301  0009D0  CFDD FFF7          	movff	postdec2,tblptrh
  5302  0009D4                     	if	0	;tblptru may be non-zero
  5303  0009D4                     	endif
  5304  0009D4                     	if	0	;tblptru may be non-zero
  5305  0009D4                     	endif
  5306  0009D4  0008               	tblrd		*
  5307  0009D6  FFFF               	dw	65535	; errata NOP
  5308  0009D8  50F5               	movf	tablat,w,c
  5309  0009DA  0A63               	xorlw	99
  5310  0009DC  A4D8               	btfss	status,2,c
  5311  0009DE  D027               	goto	l4134
  5312                           
  5313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5314  0009E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5315  0009E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5316  0009E8  2ADE               	incf	postinc2,f,c
  5317  0009EA  0E00               	movlw	0
  5318  0009EC  22DD               	addwfc	postdec2,f,c
  5319                           
  5320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5321  0009EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5322  0009F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5323  0009F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5324  0009FA  0E02               	movlw	2
  5325  0009FC  26DE               	addwf	postinc2,f,c
  5326  0009FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5327  000A02  0E00               	movlw	0
  5328  000A04  22DD               	addwfc	postdec2,f,c
  5329  000A06  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5330  000A0A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5331  000A0E  50DF               	movf	indf2,w,c
  5332  000A10  6E69               	movwf	vfpfcnvrt@c,c
  5333                           
  5334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5335  000A12  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  5336  000A16  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5337  000A1A  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  5338  000A1E  EC53  F01E         	call	_ctoa	;wreg free
  5339  000A22  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  5340  000A26  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5341  000A2A  EF46  F00C         	goto	l553
  5342  000A2E                     l4134:
  5343  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  5344                           
  5345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  5346  000A30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5347  000A34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5348  000A38  CFDE F001          	movff	postinc2,strncmp@_l
  5349  000A3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5350  000A40  0EA8               	movlw	low STR_16
  5351  000A42  6E03               	movwf	strncmp@_r,c
  5352  000A44  0E06               	movlw	high STR_16
  5353  000A46  6E04               	movwf	strncmp@_r+1,c
  5354  000A48  0E00               	movlw	0
  5355  000A4A  6E06               	movwf	strncmp@n+1,c
  5356  000A4C  0E03               	movlw	3
  5357  000A4E  6E05               	movwf	strncmp@n,c
  5358  000A50  EC92  F01B         	call	_strncmp	;wreg free
  5359  000A54  5001               	movf	?_strncmp,w,c
  5360  000A56  1002               	iorwf	?_strncmp+1,w,c
  5361  000A58  B4D8               	btfsc	status,2,c
  5362  000A5A  D016               	goto	u4070
  5363  000A5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5364  000A60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5365  000A64  CFDE F001          	movff	postinc2,strncmp@_l
  5366  000A68  CFDD F002          	movff	postdec2,strncmp@_l+1
  5367  000A6C  0EAC               	movlw	low STR_20
  5368  000A6E  6E03               	movwf	strncmp@_r,c
  5369  000A70  0E06               	movlw	high STR_20
  5370  000A72  6E04               	movwf	strncmp@_r+1,c
  5371  000A74  0E00               	movlw	0
  5372  000A76  6E06               	movwf	strncmp@n+1,c
  5373  000A78  0E03               	movlw	3
  5374  000A7A  6E05               	movwf	strncmp@n,c
  5375  000A7C  EC92  F01B         	call	_strncmp	;wreg free
  5376  000A80  5001               	movf	?_strncmp,w,c
  5377  000A82  1002               	iorwf	?_strncmp+1,w,c
  5378  000A84  A4D8               	btfss	status,2,c
  5379  000A86  D043               	goto	l4144
  5380  000A88                     u4070:
  5381  000A88  FFFF               	dw	65535	; assembler added errata NOP
  5382                           
  5383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  5384  000A8A  0E03               	movlw	3
  5385  000A8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5386  000A90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5387  000A94  26DE               	addwf	postinc2,f,c
  5388  000A96  0E00               	movlw	0
  5389  000A98  22DD               	addwfc	postdec2,f,c
  5390                           
  5391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5392  000A9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5393  000A9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5394  000AA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5395  000AA6  0E02               	movlw	2
  5396  000AA8  26DE               	addwf	postinc2,f,c
  5397  000AAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5398  000AAE  0E00               	movlw	0
  5399  000AB0  22DD               	addwfc	postdec2,f,c
  5400  000AB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5401  000AB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5402  000ABA  50DF               	movf	indf2,w,c
  5403  000ABC  6E5F               	movwf	vfpfcnvrt@ll,c
  5404  000ABE  0E00               	movlw	0
  5405  000AC0  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  5406  000AC2  0EFF               	movlw	-1
  5407  000AC4  6E60               	movwf	vfpfcnvrt@ll+1,c
  5408  000AC6                     L8:
  5409  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  5410  000AC8  6E61               	movwf	vfpfcnvrt@ll+2,c
  5411  000ACA  6E62               	movwf	vfpfcnvrt@ll+3,c
  5412  000ACC  6E63               	movwf	vfpfcnvrt@ll+4,c
  5413  000ACE  6E64               	movwf	vfpfcnvrt@ll+5,c
  5414  000AD0  6E65               	movwf	vfpfcnvrt@ll+6,c
  5415  000AD2  6E66               	movwf	vfpfcnvrt@ll+7,c
  5416  000AD4                     l4140:
  5417  000AD4  FFFF               	dw	65535	; assembler added errata NOP
  5418                           
  5419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  5420  000AD6  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5421  000ADA  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5422  000ADE  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5423  000AE2  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5424  000AE6  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5425  000AEA  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5426  000AEE  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5427  000AF2  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5428  000AF6  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5429  000AFA  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5430  000AFE  EC16  F011         	call	_dtoa	;wreg free
  5431  000B02  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  5432  000B06  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5433  000B0A  EF46  F00C         	goto	l553
  5434  000B0E                     l4144:
  5435  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  5436                           
  5437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  5438  000B10  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5439  000B14  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5440  000B18  CFDE F001          	movff	postinc2,strncmp@_l
  5441  000B1C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5442  000B20  0EA9               	movlw	low (STR_16+1)
  5443  000B22  6E03               	movwf	strncmp@_r,c
  5444  000B24  0E06               	movlw	high (STR_16+1)
  5445  000B26  6E04               	movwf	strncmp@_r+1,c
  5446  000B28  0E00               	movlw	0
  5447  000B2A  6E06               	movwf	strncmp@n+1,c
  5448  000B2C  0E02               	movlw	2
  5449  000B2E  6E05               	movwf	strncmp@n,c
  5450  000B30  EC92  F01B         	call	_strncmp	;wreg free
  5451  000B34  5001               	movf	?_strncmp,w,c
  5452  000B36  1002               	iorwf	?_strncmp+1,w,c
  5453  000B38  B4D8               	btfsc	status,2,c
  5454  000B3A  D016               	goto	u4090
  5455  000B3C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5456  000B40  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5457  000B44  CFDE F001          	movff	postinc2,strncmp@_l
  5458  000B48  CFDD F002          	movff	postdec2,strncmp@_l+1
  5459  000B4C  0EAD               	movlw	low (STR_20+1)
  5460  000B4E  6E03               	movwf	strncmp@_r,c
  5461  000B50  0E06               	movlw	high (STR_20+1)
  5462  000B52  6E04               	movwf	strncmp@_r+1,c
  5463  000B54  0E00               	movlw	0
  5464  000B56  6E06               	movwf	strncmp@n+1,c
  5465  000B58  0E02               	movlw	2
  5466  000B5A  6E05               	movwf	strncmp@n,c
  5467  000B5C  EC92  F01B         	call	_strncmp	;wreg free
  5468  000B60  5001               	movf	?_strncmp,w,c
  5469  000B62  1002               	iorwf	?_strncmp+1,w,c
  5470  000B64  A4D8               	btfss	status,2,c
  5471  000B66  D008               	goto	l4154
  5472  000B68                     u4090:
  5473  000B68  FFFF               	dw	65535	; assembler added errata NOP
  5474                           
  5475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  5476  000B6A  0E02               	movlw	2
  5477  000B6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5478  000B70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5479  000B74  26DE               	addwf	postinc2,f,c
  5480  000B76  D023               	goto	L18
  5481  000B78                     l4154:
  5482  000B78  FFFF               	dw	65535	; assembler added errata NOP
  5483                           
  5484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5485  000B7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5486  000B7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5487  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  5488  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  5489  000B8A                     	if	0	;tblptru may be non-zero
  5490  000B8A                     	endif
  5491  000B8A                     	if	0	;tblptru may be non-zero
  5492  000B8A                     	endif
  5493  000B8A  0008               	tblrd		*
  5494  000B8C  FFFF               	dw	65535	; errata NOP
  5495  000B8E  50F5               	movf	tablat,w,c
  5496  000B90  0A64               	xorlw	100
  5497  000B92  B4D8               	btfsc	status,2,c
  5498  000B94  D00E               	goto	u4110
  5499  000B96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5500  000B9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5501  000B9E  CFDE FFF6          	movff	postinc2,tblptrl
  5502  000BA2  CFDD FFF7          	movff	postdec2,tblptrh
  5503  000BA6                     	if	0	;tblptru may be non-zero
  5504  000BA6                     	endif
  5505  000BA6                     	if	0	;tblptru may be non-zero
  5506  000BA6                     	endif
  5507  000BA6  0008               	tblrd		*
  5508  000BA8  FFFF               	dw	65535	; errata NOP
  5509  000BAA  50F5               	movf	tablat,w,c
  5510  000BAC  0A69               	xorlw	105
  5511  000BAE  A4D8               	btfss	status,2,c
  5512  000BB0  D021               	goto	l4164
  5513  000BB2                     u4110:
  5514  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  5515                           
  5516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5517  000BB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5518  000BB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5519  000BBC  2ADE               	incf	postinc2,f,c
  5520  000BBE                     L18:
  5521  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  5522  000BC0  0E00               	movlw	0
  5523  000BC2  22DD               	addwfc	postdec2,f,c
  5524                           
  5525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5526  000BC4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5527  000BC8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5528  000BCC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5529  000BD0  0E02               	movlw	2
  5530  000BD2  26DE               	addwf	postinc2,f,c
  5531  000BD4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5532  000BD8  0E00               	movlw	0
  5533  000BDA  22DD               	addwfc	postdec2,f,c
  5534  000BDC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5535  000BE0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5536  000BE4  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  5537  000BE8  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  5538  000BEC  0E00               	movlw	0
  5539  000BEE  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  5540  000BF0  0EFF               	movlw	-1
  5541  000BF2  D769               	goto	L8
  5542  000BF4                     l4164:
  5543  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  5544                           
  5545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5546  000BF6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5547  000BFA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5548  000BFE  CFDE F001          	movff	postinc2,strncmp@_l
  5549  000C02  CFDD F002          	movff	postdec2,strncmp@_l+1
  5550  000C06  0ECA               	movlw	low STR_34
  5551  000C08  6E03               	movwf	strncmp@_r,c
  5552  000C0A  0E06               	movlw	high STR_34
  5553  000C0C  6E04               	movwf	strncmp@_r+1,c
  5554  000C0E  0E00               	movlw	0
  5555  000C10  6E06               	movwf	strncmp@n+1,c
  5556  000C12  0E02               	movlw	2
  5557  000C14  6E05               	movwf	strncmp@n,c
  5558  000C16  EC92  F01B         	call	_strncmp	;wreg free
  5559  000C1A  5001               	movf	?_strncmp,w,c
  5560  000C1C  1002               	iorwf	?_strncmp+1,w,c
  5561  000C1E  B4D8               	btfsc	status,2,c
  5562  000C20  D016               	goto	u4130
  5563  000C22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5564  000C26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5565  000C2A  CFDE F001          	movff	postinc2,strncmp@_l
  5566  000C2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5567  000C32  0ED0               	movlw	low STR_38
  5568  000C34  6E03               	movwf	strncmp@_r,c
  5569  000C36  0E06               	movlw	high STR_38
  5570  000C38  6E04               	movwf	strncmp@_r+1,c
  5571  000C3A  0E00               	movlw	0
  5572  000C3C  6E06               	movwf	strncmp@n+1,c
  5573  000C3E  0E02               	movlw	2
  5574  000C40  6E05               	movwf	strncmp@n,c
  5575  000C42  EC92  F01B         	call	_strncmp	;wreg free
  5576  000C46  5001               	movf	?_strncmp,w,c
  5577  000C48  1002               	iorwf	?_strncmp+1,w,c
  5578  000C4A  A4D8               	btfss	status,2,c
  5579  000C4C  D043               	goto	l4174
  5580  000C4E                     u4130:
  5581  000C4E  FFFF               	dw	65535	; assembler added errata NOP
  5582                           
  5583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5584  000C50  0E02               	movlw	2
  5585  000C52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5586  000C56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5587  000C5A  26DE               	addwf	postinc2,f,c
  5588  000C5C  0E00               	movlw	0
  5589  000C5E  22DD               	addwfc	postdec2,f,c
  5590                           
  5591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5592  000C60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5593  000C64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5594  000C68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5595  000C6C  0E04               	movlw	4
  5596  000C6E  26DE               	addwf	postinc2,f,c
  5597  000C70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5598  000C74  0E00               	movlw	0
  5599  000C76  22DD               	addwfc	postdec2,f,c
  5600  000C78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5601  000C7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5602  000C80  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5603  000C84  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5604  000C88  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5605  000C8C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5606  000C90  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5607  000C94  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5608  000C98  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5609  000C9C  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5610  000CA0  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  5611  000CA2  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  5612  000CA4  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  5613  000CA6  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5614  000CAA  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5615  000CAE  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5616  000CB2  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5617  000CB6  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5618  000CBA  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5619  000CBE  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5620  000CC2  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5621  000CC6  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5622  000CCA  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5623  000CCE  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5624  000CD2  D700               	goto	l4140
  5625  000CD4                     l4174:
  5626  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  5627                           
  5628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  5629  000CD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5630  000CDA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5631  000CDE  CFDE F001          	movff	postinc2,strncmp@_l
  5632  000CE2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5633  000CE6  0ECD               	movlw	low STR_43
  5634  000CE8  6E03               	movwf	strncmp@_r,c
  5635  000CEA  0E06               	movlw	high STR_43
  5636  000CEC  6E04               	movwf	strncmp@_r+1,c
  5637  000CEE  0E00               	movlw	0
  5638  000CF0  6E06               	movwf	strncmp@n+1,c
  5639  000CF2  0E02               	movlw	2
  5640  000CF4  6E05               	movwf	strncmp@n,c
  5641  000CF6  EC92  F01B         	call	_strncmp	;wreg free
  5642  000CFA  5001               	movf	?_strncmp,w,c
  5643  000CFC  1002               	iorwf	?_strncmp+1,w,c
  5644  000CFE  B4D8               	btfsc	status,2,c
  5645  000D00  D016               	goto	u4150
  5646  000D02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5647  000D06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5648  000D0A  CFDE F001          	movff	postinc2,strncmp@_l
  5649  000D0E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5650  000D12  0ED3               	movlw	low STR_47
  5651  000D14  6E03               	movwf	strncmp@_r,c
  5652  000D16  0E06               	movlw	high STR_47
  5653  000D18  6E04               	movwf	strncmp@_r+1,c
  5654  000D1A  0E00               	movlw	0
  5655  000D1C  6E06               	movwf	strncmp@n+1,c
  5656  000D1E  0E02               	movlw	2
  5657  000D20  6E05               	movwf	strncmp@n,c
  5658  000D22  EC92  F01B         	call	_strncmp	;wreg free
  5659  000D26  5001               	movf	?_strncmp,w,c
  5660  000D28  1002               	iorwf	?_strncmp+1,w,c
  5661  000D2A  A4D8               	btfss	status,2,c
  5662  000D2C  D028               	goto	l4184
  5663  000D2E                     u4150:
  5664  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  5665                           
  5666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  5667  000D30  0E02               	movlw	2
  5668  000D32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5669  000D36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5670  000D3A  26DE               	addwf	postinc2,f,c
  5671  000D3C  0E00               	movlw	0
  5672  000D3E  22DD               	addwfc	postdec2,f,c
  5673                           
  5674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5675  000D40  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5676  000D44  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5677  000D48  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5678  000D4C  0E02               	movlw	2
  5679  000D4E  26DE               	addwf	postinc2,f,c
  5680  000D50  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5681  000D54  0E00               	movlw	0
  5682  000D56  22DD               	addwfc	postdec2,f,c
  5683  000D58  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5684  000D5C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5685  000D60  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5686  000D64  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5687  000D68  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5688  000D6C  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5689  000D70  6A61               	clrf	vfpfcnvrt@ll+2,c
  5690  000D72  6A62               	clrf	vfpfcnvrt@ll+3,c
  5691  000D74  6A63               	clrf	vfpfcnvrt@ll+4,c
  5692  000D76  6A64               	clrf	vfpfcnvrt@ll+5,c
  5693  000D78  6A65               	clrf	vfpfcnvrt@ll+6,c
  5694  000D7A  6A66               	clrf	vfpfcnvrt@ll+7,c
  5695  000D7C  D6AB               	goto	l4140
  5696  000D7E                     l4184:
  5697  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  5698                           
  5699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5700  000D80  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5701  000D84  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5702  000D88  CFDE F001          	movff	postinc2,strncmp@_l
  5703  000D8C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5704  000D90  0EB4               	movlw	low STR_52
  5705  000D92  6E03               	movwf	strncmp@_r,c
  5706  000D94  0E06               	movlw	high STR_52
  5707  000D96  6E04               	movwf	strncmp@_r+1,c
  5708  000D98  0E00               	movlw	0
  5709  000D9A  6E06               	movwf	strncmp@n+1,c
  5710  000D9C  0E03               	movlw	3
  5711  000D9E  6E05               	movwf	strncmp@n,c
  5712  000DA0  EC92  F01B         	call	_strncmp	;wreg free
  5713  000DA4  5001               	movf	?_strncmp,w,c
  5714  000DA6  1002               	iorwf	?_strncmp+1,w,c
  5715  000DA8  A4D8               	btfss	status,2,c
  5716  000DAA  D041               	goto	l4192
  5717                           
  5718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  5719  000DAC  0E03               	movlw	3
  5720  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5721  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5722  000DB6  26DE               	addwf	postinc2,f,c
  5723  000DB8  0E00               	movlw	0
  5724  000DBA  22DD               	addwfc	postdec2,f,c
  5725                           
  5726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5727  000DBC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5728  000DC0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5729  000DC4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5730  000DC8  0E02               	movlw	2
  5731  000DCA  26DE               	addwf	postinc2,f,c
  5732  000DCC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5733  000DD0  0E00               	movlw	0
  5734  000DD2  22DD               	addwfc	postdec2,f,c
  5735  000DD4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5736  000DD8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5737  000DDC  50DF               	movf	indf2,w,c
  5738  000DDE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5739  000DE0  504B               	movf	??_vfpfcnvrt+2,w,c
  5740  000DE2  6E6A               	movwf	vfpfcnvrt@llu,c
  5741  000DE4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  5742  000DE6                     L9:
  5743  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  5744  000DE8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  5745  000DEA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  5746  000DEC                     L10:
  5747  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  5748  000DEE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  5749  000DF0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  5750  000DF2  6A70               	clrf	vfpfcnvrt@llu+6,c
  5751  000DF4  6A71               	clrf	vfpfcnvrt@llu+7,c
  5752                           
  5753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  5754  000DF6  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5755  000DFA  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5756  000DFE  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5757  000E02  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5758  000E06  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5759  000E0A  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5760  000E0E  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5761  000E12  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5762  000E16  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5763  000E1A  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5764  000E1E  EC3B  F016         	call	_otoa	;wreg free
  5765  000E22  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5766  000E26  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5767  000E2A  EF46  F00C         	goto	l553
  5768  000E2E                     l4192:
  5769  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  5770                           
  5771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5772  000E30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5773  000E34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5774  000E38  CFDE F001          	movff	postinc2,strncmp@_l
  5775  000E3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5776  000E40  0EB5               	movlw	low (STR_52+1)
  5777  000E42  6E03               	movwf	strncmp@_r,c
  5778  000E44  0E06               	movlw	high (STR_52+1)
  5779  000E46  6E04               	movwf	strncmp@_r+1,c
  5780  000E48  0E00               	movlw	0
  5781  000E4A  6E06               	movwf	strncmp@n+1,c
  5782  000E4C  0E02               	movlw	2
  5783  000E4E  6E05               	movwf	strncmp@n,c
  5784  000E50  EC92  F01B         	call	_strncmp	;wreg free
  5785  000E54  5001               	movf	?_strncmp,w,c
  5786  000E56  1002               	iorwf	?_strncmp+1,w,c
  5787  000E58  B4D8               	btfsc	status,2,c
  5788  000E5A  D06B               	goto	u4200
  5789                           
  5790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  5791                           
  5792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5793                           
  5794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  5795  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5796  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5797  000E64  CFDE FFF6          	movff	postinc2,tblptrl
  5798  000E68  CFDD FFF7          	movff	postdec2,tblptrh
  5799  000E6C                     	if	0	;tblptru may be non-zero
  5800  000E6C                     	endif
  5801  000E6C                     	if	0	;tblptru may be non-zero
  5802  000E6C                     	endif
  5803  000E6C  0008               	tblrd		*
  5804  000E6E  FFFF               	dw	65535	; errata NOP
  5805  000E70  50F5               	movf	tablat,w,c
  5806  000E72  0A6F               	xorlw	111
  5807  000E74  A4D8               	btfss	status,2,c
  5808  000E76  D006               	goto	l4208
  5809                           
  5810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  5811  000E78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5812  000E7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5813  000E80  2ADE               	incf	postinc2,f,c
  5814  000E82  D05E               	goto	L23
  5815  000E84                     l4208:
  5816  000E84  FFFF               	dw	65535	; assembler added errata NOP
  5817                           
  5818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  5819  000E86  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5820  000E8A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5821  000E8E  CFDE F001          	movff	postinc2,strncmp@_l
  5822  000E92  CFDD F002          	movff	postdec2,strncmp@_l+1
  5823  000E96  0EDC               	movlw	low STR_62
  5824  000E98  6E03               	movwf	strncmp@_r,c
  5825  000E9A  0E06               	movlw	high STR_62
  5826  000E9C  6E04               	movwf	strncmp@_r+1,c
  5827  000E9E  0E00               	movlw	0
  5828  000EA0  6E06               	movwf	strncmp@n+1,c
  5829  000EA2  0E02               	movlw	2
  5830  000EA4  6E05               	movwf	strncmp@n,c
  5831  000EA6  EC92  F01B         	call	_strncmp	;wreg free
  5832  000EAA  5001               	movf	?_strncmp,w,c
  5833  000EAC  1002               	iorwf	?_strncmp+1,w,c
  5834  000EAE  A4D8               	btfss	status,2,c
  5835  000EB0  D029               	goto	l4216
  5836                           
  5837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  5838  000EB2  0E02               	movlw	2
  5839  000EB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5840  000EB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5841  000EBC  26DE               	addwf	postinc2,f,c
  5842  000EBE  0E00               	movlw	0
  5843  000EC0  22DD               	addwfc	postdec2,f,c
  5844                           
  5845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  5846  000EC2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5847  000EC6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5848  000ECA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5849  000ECE  0E04               	movlw	4
  5850  000ED0  26DE               	addwf	postinc2,f,c
  5851  000ED2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5852  000ED6  0E00               	movlw	0
  5853  000ED8  22DD               	addwfc	postdec2,f,c
  5854  000EDA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5855  000EDE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5856  000EE2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5857  000EE6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  5858  000EEA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  5859  000EEE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  5860  000EF2  504B               	movf	??_vfpfcnvrt+2,w,c
  5861  000EF4  6E6A               	movwf	vfpfcnvrt@llu,c
  5862  000EF6  504C               	movf	??_vfpfcnvrt+3,w,c
  5863  000EF8  6E6B               	movwf	vfpfcnvrt@llu+1,c
  5864  000EFA  504D               	movf	??_vfpfcnvrt+4,w,c
  5865  000EFC  6E6C               	movwf	vfpfcnvrt@llu+2,c
  5866  000EFE  504E               	movf	??_vfpfcnvrt+5,w,c
  5867  000F00  6E6D               	movwf	vfpfcnvrt@llu+3,c
  5868  000F02  D774               	goto	L10
  5869  000F04                     l4216:
  5870  000F04  FFFF               	dw	65535	; assembler added errata NOP
  5871                           
  5872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5873  000F06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5874  000F0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5875  000F0E  CFDE F001          	movff	postinc2,strncmp@_l
  5876  000F12  CFDD F002          	movff	postdec2,strncmp@_l+1
  5877  000F16  0EDF               	movlw	low STR_67
  5878  000F18  6E03               	movwf	strncmp@_r,c
  5879  000F1A  0E06               	movlw	high STR_67
  5880  000F1C  6E04               	movwf	strncmp@_r+1,c
  5881  000F1E  0E00               	movlw	0
  5882  000F20  6E06               	movwf	strncmp@n+1,c
  5883  000F22  0E02               	movlw	2
  5884  000F24  6E05               	movwf	strncmp@n,c
  5885  000F26  EC92  F01B         	call	_strncmp	;wreg free
  5886  000F2A  5001               	movf	?_strncmp,w,c
  5887  000F2C  1002               	iorwf	?_strncmp+1,w,c
  5888  000F2E  A4D8               	btfss	status,2,c
  5889  000F30  D023               	goto	l4224
  5890  000F32                     u4200:
  5891  000F32  FFFF               	dw	65535	; assembler added errata NOP
  5892                           
  5893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  5894  000F34  0E02               	movlw	2
  5895  000F36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5896  000F3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5897  000F3E  26DE               	addwf	postinc2,f,c
  5898  000F40                     L23:
  5899  000F40  FFFF               	dw	65535	; assembler added errata NOP
  5900  000F42  0E00               	movlw	0
  5901  000F44  22DD               	addwfc	postdec2,f,c
  5902                           
  5903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5904  000F46  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5905  000F4A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5906  000F4E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5907  000F52  0E02               	movlw	2
  5908  000F54  26DE               	addwf	postinc2,f,c
  5909  000F56  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5910  000F5A  0E00               	movlw	0
  5911  000F5C  22DD               	addwfc	postdec2,f,c
  5912  000F5E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5913  000F62  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5914  000F66  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5915  000F6A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5916  000F6E  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5917  000F72  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5918  000F76  D737               	goto	L9
  5919  000F78                     l4224:
  5920  000F78  FFFF               	dw	65535	; assembler added errata NOP
  5921                           
  5922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5923  000F7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5924  000F7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5925  000F82  CFDE F001          	movff	postinc2,strncmp@_l
  5926  000F86  CFDD F002          	movff	postdec2,strncmp@_l+1
  5927  000F8A  0EB0               	movlw	low STR_72
  5928  000F8C  6E03               	movwf	strncmp@_r,c
  5929  000F8E  0E06               	movlw	high STR_72
  5930  000F90  6E04               	movwf	strncmp@_r+1,c
  5931  000F92  0E00               	movlw	0
  5932  000F94  6E06               	movwf	strncmp@n+1,c
  5933  000F96  0E03               	movlw	3
  5934  000F98  6E05               	movwf	strncmp@n,c
  5935  000F9A  EC92  F01B         	call	_strncmp	;wreg free
  5936  000F9E  5001               	movf	?_strncmp,w,c
  5937  000FA0  1002               	iorwf	?_strncmp+1,w,c
  5938  000FA2  A4D8               	btfss	status,2,c
  5939  000FA4  D028               	goto	l4234
  5940                           
  5941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  5942  000FA6  0E03               	movlw	3
  5943  000FA8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5944  000FAC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5945  000FB0  26DE               	addwf	postinc2,f,c
  5946  000FB2  0E00               	movlw	0
  5947  000FB4  22DD               	addwfc	postdec2,f,c
  5948                           
  5949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5950  000FB6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5951  000FBA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5952  000FBE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5953  000FC2  0E02               	movlw	2
  5954  000FC4  26DE               	addwf	postinc2,f,c
  5955  000FC6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5956  000FCA  0E00               	movlw	0
  5957  000FCC  22DD               	addwfc	postdec2,f,c
  5958  000FCE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5959  000FD2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5960  000FD6  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  5961  000FDA  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  5962                           
  5963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  5964  000FDE  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5965  000FE2  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5966  000FE6  C0CA  FFDF         	movff	_nout,indf2
  5967  000FEA                     l4230:
  5968  000FEA  FFFF               	dw	65535	; assembler added errata NOP
  5969                           
  5970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  5971  000FEC  0E00               	movlw	0
  5972  000FEE  6E44               	movwf	?_vfpfcnvrt+1,c
  5973  000FF0  0E00               	movlw	0
  5974  000FF2  EF1D  F00C         	goto	L11
  5975  000FF6                     l4234:
  5976  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  5977                           
  5978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5979  000FF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5980  000FFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5981  001000  CFDE F001          	movff	postinc2,strncmp@_l
  5982  001004  CFDD F002          	movff	postdec2,strncmp@_l+1
  5983  001008  0EB1               	movlw	low (STR_72+1)
  5984  00100A  6E03               	movwf	strncmp@_r,c
  5985  00100C  0E06               	movlw	high (STR_72+1)
  5986  00100E  6E04               	movwf	strncmp@_r+1,c
  5987  001010  0E00               	movlw	0
  5988  001012  6E06               	movwf	strncmp@n+1,c
  5989  001014  0E02               	movlw	2
  5990  001016  6E05               	movwf	strncmp@n,c
  5991  001018  EC92  F01B         	call	_strncmp	;wreg free
  5992  00101C  5001               	movf	?_strncmp,w,c
  5993  00101E  1002               	iorwf	?_strncmp+1,w,c
  5994  001020  A4D8               	btfss	status,2,c
  5995  001022  D00B               	goto	l4244
  5996  001024  D07F               	goto	u4250
  5997  001026                     l4238:
  5998  001026  FFFF               	dw	65535	; assembler added errata NOP
  5999                           
  6000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  6001  001028  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6002  00102C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6003  001030  C0CA  FFDE         	movff	_nout,postinc2
  6004  001034  C0CB  FFDD         	movff	_nout+1,postdec2
  6005  001038  D7D8               	goto	l4230
  6006  00103A                     l4244:
  6007  00103A  FFFF               	dw	65535	; assembler added errata NOP
  6008                           
  6009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  6010  00103C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6011  001040  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6012  001044  CFDE FFF6          	movff	postinc2,tblptrl
  6013  001048  CFDD FFF7          	movff	postdec2,tblptrh
  6014  00104C                     	if	0	;tblptru may be non-zero
  6015  00104C                     	endif
  6016  00104C                     	if	0	;tblptru may be non-zero
  6017  00104C                     	endif
  6018  00104C  0008               	tblrd		*
  6019  00104E  FFFF               	dw	65535	; errata NOP
  6020  001050  50F5               	movf	tablat,w,c
  6021  001052  0A6E               	xorlw	110
  6022  001054  A4D8               	btfss	status,2,c
  6023  001056  D006               	goto	l4254
  6024                           
  6025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  6026  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6027  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6028  001060  2ADE               	incf	postinc2,f,c
  6029  001062  D067               	goto	L20
  6030  001064                     l4254:
  6031  001064  FFFF               	dw	65535	; assembler added errata NOP
  6032                           
  6033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  6034  001066  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6035  00106A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6036  00106E  CFDE F001          	movff	postinc2,strncmp@_l
  6037  001072  CFDD F002          	movff	postdec2,strncmp@_l+1
  6038  001076  0ED6               	movlw	low STR_82
  6039  001078  6E03               	movwf	strncmp@_r,c
  6040  00107A  0E06               	movlw	high STR_82
  6041  00107C  6E04               	movwf	strncmp@_r+1,c
  6042  00107E  0E00               	movlw	0
  6043  001080  6E06               	movwf	strncmp@n+1,c
  6044  001082  0E02               	movlw	2
  6045  001084  6E05               	movwf	strncmp@n,c
  6046  001086  EC92  F01B         	call	_strncmp	;wreg free
  6047  00108A  5001               	movf	?_strncmp,w,c
  6048  00108C  1002               	iorwf	?_strncmp+1,w,c
  6049  00108E  A4D8               	btfss	status,2,c
  6050  001090  D032               	goto	l4264
  6051                           
  6052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  6053  001092  0E02               	movlw	2
  6054  001094  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6055  001098  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6056  00109C  26DE               	addwf	postinc2,f,c
  6057  00109E  0E00               	movlw	0
  6058  0010A0  22DD               	addwfc	postdec2,f,c
  6059                           
  6060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  6061  0010A2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6062  0010A6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6063  0010AA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6064  0010AE  0E02               	movlw	2
  6065  0010B0  26DE               	addwf	postinc2,f,c
  6066  0010B2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6067  0010B6  0E00               	movlw	0
  6068  0010B8  22DD               	addwfc	postdec2,f,c
  6069  0010BA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6070  0010BE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6071  0010C2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  6072  0010C6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  6073                           
  6074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  6075  0010CA  C0CA  F049         	movff	_nout,??_vfpfcnvrt
  6076  0010CE  C0CB  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  6077  0010D2  0E00               	movlw	0
  6078  0010D4  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  6079  0010D6  0EFF               	movlw	255
  6080  0010D8  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6081  0010DA  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  6082  0010DC  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  6083  0010E0  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  6084  0010E4  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  6085  0010E8  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  6086  0010EC  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  6087  0010F0  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  6088  0010F4  D77A               	goto	l4230
  6089  0010F6                     l4264:
  6090  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  6091                           
  6092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  6093  0010F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6094  0010FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6095  001100  CFDE F001          	movff	postinc2,strncmp@_l
  6096  001104  CFDD F002          	movff	postdec2,strncmp@_l+1
  6097  001108  0ED9               	movlw	low STR_87
  6098  00110A  6E03               	movwf	strncmp@_r,c
  6099  00110C  0E06               	movlw	high STR_87
  6100  00110E  6E04               	movwf	strncmp@_r+1,c
  6101  001110  0E00               	movlw	0
  6102  001112  6E06               	movwf	strncmp@n+1,c
  6103  001114  0E02               	movlw	2
  6104  001116  6E05               	movwf	strncmp@n,c
  6105  001118  EC92  F01B         	call	_strncmp	;wreg free
  6106  00111C  5001               	movf	?_strncmp,w,c
  6107  00111E  1002               	iorwf	?_strncmp+1,w,c
  6108  001120  A4D8               	btfss	status,2,c
  6109  001122  D01F               	goto	l4274
  6110  001124                     u4250:
  6111  001124  FFFF               	dw	65535	; assembler added errata NOP
  6112                           
  6113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  6114  001126  0E02               	movlw	2
  6115  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6116  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6117  001130  26DE               	addwf	postinc2,f,c
  6118  001132                     L20:
  6119  001132  FFFF               	dw	65535	; assembler added errata NOP
  6120  001134  0E00               	movlw	0
  6121  001136  22DD               	addwfc	postdec2,f,c
  6122                           
  6123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  6124  001138  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6125  00113C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6126  001140  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6127  001144  0E02               	movlw	2
  6128  001146  26DE               	addwf	postinc2,f,c
  6129  001148  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6130  00114C  0E00               	movlw	0
  6131  00114E  22DD               	addwfc	postdec2,f,c
  6132  001150  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6133  001154  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6134  001158  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  6135  00115C  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  6136  001160  D762               	goto	l4238
  6137  001162                     l4274:
  6138  001162  FFFF               	dw	65535	; assembler added errata NOP
  6139                           
  6140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  6141  001164  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6142  001168  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6143  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  6144  001170  CFDD FFF7          	movff	postdec2,tblptrh
  6145  001174                     	if	0	;tblptru may be non-zero
  6146  001174                     	endif
  6147  001174                     	if	0	;tblptru may be non-zero
  6148  001174                     	endif
  6149  001174  0008               	tblrd		*
  6150  001176  FFFF               	dw	65535	; errata NOP
  6151  001178  50F5               	movf	tablat,w,c
  6152  00117A  0A70               	xorlw	112
  6153  00117C  A4D8               	btfss	status,2,c
  6154  00117E  D03E               	goto	l4282
  6155                           
  6156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  6157  001180  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6158  001184  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6159  001188  2ADE               	incf	postinc2,f,c
  6160  00118A  0E00               	movlw	0
  6161  00118C  22DD               	addwfc	postdec2,f,c
  6162                           
  6163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  6164  00118E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6165  001192  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6166  001196  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6167  00119A  0E02               	movlw	2
  6168  00119C  26DE               	addwf	postinc2,f,c
  6169  00119E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6170  0011A2  0E00               	movlw	0
  6171  0011A4  22DD               	addwfc	postdec2,f,c
  6172  0011A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6173  0011AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6174  0011AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6175  0011B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6176  0011B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6177  0011BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6178  0011BE  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6179  0011C0  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6180  0011C2  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6181  0011C4  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6182  0011C6  6A70               	clrf	vfpfcnvrt@llu+6,c
  6183  0011C8  6A71               	clrf	vfpfcnvrt@llu+7,c
  6184                           
  6185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  6186  0011CA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6187  0011CE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6188  0011D2  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6189  0011D6  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6190  0011DA  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6191  0011DE  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6192  0011E2  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6193  0011E6  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6194  0011EA  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6195  0011EE  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6196  0011F2  0E78               	movlw	120
  6197  0011F4  6E26               	movwf	xtoa@x,c
  6198  0011F6  EC4B  F012         	call	_xtoa	;wreg free
  6199  0011FA  D1B4               	goto	L13
  6200  0011FC                     l4282:
  6201  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  6202                           
  6203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6204  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6205  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6206  001206  CFDE FFF6          	movff	postinc2,tblptrl
  6207  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  6208  00120E                     	if	0	;tblptru may be non-zero
  6209  00120E                     	endif
  6210  00120E                     	if	0	;tblptru may be non-zero
  6211  00120E                     	endif
  6212  00120E  0008               	tblrd		*
  6213  001210  FFFF               	dw	65535	; errata NOP
  6214  001212  50F5               	movf	tablat,w,c
  6215  001214  0A73               	xorlw	115
  6216  001216  A4D8               	btfss	status,2,c
  6217  001218  D02A               	goto	l4290
  6218                           
  6219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6220  00121A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6221  00121E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6222  001222  2ADE               	incf	postinc2,f,c
  6223  001224  0E00               	movlw	0
  6224  001226  22DD               	addwfc	postdec2,f,c
  6225                           
  6226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6227  001228  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6228  00122C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6229  001230  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6230  001234  0E02               	movlw	2
  6231  001236  26DE               	addwf	postinc2,f,c
  6232  001238  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6233  00123C  0E00               	movlw	0
  6234  00123E  22DD               	addwfc	postdec2,f,c
  6235  001240  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6236  001244  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6237  001248  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  6238  00124C  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  6239                           
  6240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6241  001250  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  6242  001254  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6243  001258  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  6244  00125C  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6245  001260  EC17  F019         	call	_stoa	;wreg free
  6246  001264  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  6247  001268  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  6248  00126C  D30F               	goto	l553
  6249  00126E                     l4290:
  6250  00126E  FFFF               	dw	65535	; assembler added errata NOP
  6251                           
  6252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  6253  001270  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6254  001274  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6255  001278  CFDE F001          	movff	postinc2,strncmp@_l
  6256  00127C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6257  001280  0EB8               	movlw	low STR_92
  6258  001282  6E03               	movwf	strncmp@_r,c
  6259  001284  0E06               	movlw	high STR_92
  6260  001286  6E04               	movwf	strncmp@_r+1,c
  6261  001288  0E00               	movlw	0
  6262  00128A  6E06               	movwf	strncmp@n+1,c
  6263  00128C  0E03               	movlw	3
  6264  00128E  6E05               	movwf	strncmp@n,c
  6265  001290  EC92  F01B         	call	_strncmp	;wreg free
  6266  001294  5001               	movf	?_strncmp,w,c
  6267  001296  1002               	iorwf	?_strncmp+1,w,c
  6268  001298  A4D8               	btfss	status,2,c
  6269  00129A  D040               	goto	l4298
  6270                           
  6271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  6272  00129C  0E03               	movlw	3
  6273  00129E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6274  0012A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6275  0012A6  26DE               	addwf	postinc2,f,c
  6276  0012A8  0E00               	movlw	0
  6277  0012AA  22DD               	addwfc	postdec2,f,c
  6278                           
  6279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6280  0012AC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6281  0012B0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6282  0012B4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6283  0012B8  0E02               	movlw	2
  6284  0012BA  26DE               	addwf	postinc2,f,c
  6285  0012BC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6286  0012C0  0E00               	movlw	0
  6287  0012C2  22DD               	addwfc	postdec2,f,c
  6288  0012C4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6289  0012C8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6290  0012CC  50DF               	movf	indf2,w,c
  6291  0012CE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6292  0012D0  504B               	movf	??_vfpfcnvrt+2,w,c
  6293  0012D2  6E6A               	movwf	vfpfcnvrt@llu,c
  6294  0012D4  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6295  0012D6                     L14:
  6296  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  6297  0012D8  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6298  0012DA  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6299  0012DC                     L15:
  6300  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  6301  0012DE  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6302  0012E0  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6303  0012E2  6A70               	clrf	vfpfcnvrt@llu+6,c
  6304  0012E4  6A71               	clrf	vfpfcnvrt@llu+7,c
  6305                           
  6306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  6307  0012E6  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  6308  0012EA  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6309  0012EE  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  6310  0012F2  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6311  0012F6  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6312  0012FA  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6313  0012FE  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6314  001302  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6315  001306  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6316  00130A  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6317  00130E  EC5A  F015         	call	_utoa	;wreg free
  6318  001312  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  6319  001316  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  6320  00131A  D2B8               	goto	l553
  6321  00131C                     l4298:
  6322  00131C  FFFF               	dw	65535	; assembler added errata NOP
  6323                           
  6324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6325  00131E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6326  001322  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6327  001326  CFDE F001          	movff	postinc2,strncmp@_l
  6328  00132A  CFDD F002          	movff	postdec2,strncmp@_l+1
  6329  00132E  0EB9               	movlw	low (STR_92+1)
  6330  001330  6E03               	movwf	strncmp@_r,c
  6331  001332  0E06               	movlw	high (STR_92+1)
  6332  001334  6E04               	movwf	strncmp@_r+1,c
  6333  001336  0E00               	movlw	0
  6334  001338  6E06               	movwf	strncmp@n+1,c
  6335  00133A  0E02               	movlw	2
  6336  00133C  6E05               	movwf	strncmp@n,c
  6337  00133E  EC92  F01B         	call	_strncmp	;wreg free
  6338  001342  5001               	movf	?_strncmp,w,c
  6339  001344  1002               	iorwf	?_strncmp+1,w,c
  6340  001346  B4D8               	btfsc	status,2,c
  6341  001348  D06B               	goto	u4320
  6342                           
  6343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  6344                           
  6345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6346                           
  6347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  6348  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6349  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6350  001352  CFDE FFF6          	movff	postinc2,tblptrl
  6351  001356  CFDD FFF7          	movff	postdec2,tblptrh
  6352  00135A                     	if	0	;tblptru may be non-zero
  6353  00135A                     	endif
  6354  00135A                     	if	0	;tblptru may be non-zero
  6355  00135A                     	endif
  6356  00135A  0008               	tblrd		*
  6357  00135C  FFFF               	dw	65535	; errata NOP
  6358  00135E  50F5               	movf	tablat,w,c
  6359  001360  0A75               	xorlw	117
  6360  001362  A4D8               	btfss	status,2,c
  6361  001364  D006               	goto	l4314
  6362                           
  6363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  6364  001366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6365  00136A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6366  00136E  2ADE               	incf	postinc2,f,c
  6367  001370  D05E               	goto	L24
  6368  001372                     l4314:
  6369  001372  FFFF               	dw	65535	; assembler added errata NOP
  6370                           
  6371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  6372  001374  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6373  001378  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6374  00137C  CFDE F001          	movff	postinc2,strncmp@_l
  6375  001380  CFDD F002          	movff	postdec2,strncmp@_l+1
  6376  001384  0EC1               	movlw	low (STR_1+1)
  6377  001386  6E03               	movwf	strncmp@_r,c
  6378  001388  0E06               	movlw	high (STR_1+1)
  6379  00138A  6E04               	movwf	strncmp@_r+1,c
  6380  00138C  0E00               	movlw	0
  6381  00138E  6E06               	movwf	strncmp@n+1,c
  6382  001390  0E02               	movlw	2
  6383  001392  6E05               	movwf	strncmp@n,c
  6384  001394  EC92  F01B         	call	_strncmp	;wreg free
  6385  001398  5001               	movf	?_strncmp,w,c
  6386  00139A  1002               	iorwf	?_strncmp+1,w,c
  6387  00139C  A4D8               	btfss	status,2,c
  6388  00139E  D029               	goto	l4322
  6389                           
  6390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  6391  0013A0  0E02               	movlw	2
  6392  0013A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6393  0013A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6394  0013AA  26DE               	addwf	postinc2,f,c
  6395  0013AC  0E00               	movlw	0
  6396  0013AE  22DD               	addwfc	postdec2,f,c
  6397                           
  6398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6399  0013B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6400  0013B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6401  0013B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6402  0013BC  0E04               	movlw	4
  6403  0013BE  26DE               	addwf	postinc2,f,c
  6404  0013C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6405  0013C4  0E00               	movlw	0
  6406  0013C6  22DD               	addwfc	postdec2,f,c
  6407  0013C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6408  0013CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6409  0013D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6410  0013D4  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6411  0013D8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6412  0013DC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6413  0013E0  504B               	movf	??_vfpfcnvrt+2,w,c
  6414  0013E2  6E6A               	movwf	vfpfcnvrt@llu,c
  6415  0013E4  504C               	movf	??_vfpfcnvrt+3,w,c
  6416  0013E6  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6417  0013E8  504D               	movf	??_vfpfcnvrt+4,w,c
  6418  0013EA  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6419  0013EC  504E               	movf	??_vfpfcnvrt+5,w,c
  6420  0013EE  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6421  0013F0  D775               	goto	L15
  6422  0013F2                     l4322:
  6423  0013F2  FFFF               	dw	65535	; assembler added errata NOP
  6424                           
  6425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6426  0013F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6427  0013F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6428  0013FC  CFDE F001          	movff	postinc2,strncmp@_l
  6429  001400  CFDD F002          	movff	postdec2,strncmp@_l+1
  6430  001404  0EE2               	movlw	low STR_107
  6431  001406  6E03               	movwf	strncmp@_r,c
  6432  001408  0E06               	movlw	high STR_107
  6433  00140A  6E04               	movwf	strncmp@_r+1,c
  6434  00140C  0E00               	movlw	0
  6435  00140E  6E06               	movwf	strncmp@n+1,c
  6436  001410  0E02               	movlw	2
  6437  001412  6E05               	movwf	strncmp@n,c
  6438  001414  EC92  F01B         	call	_strncmp	;wreg free
  6439  001418  5001               	movf	?_strncmp,w,c
  6440  00141A  1002               	iorwf	?_strncmp+1,w,c
  6441  00141C  A4D8               	btfss	status,2,c
  6442  00141E  D023               	goto	l4330
  6443  001420                     u4320:
  6444  001420  FFFF               	dw	65535	; assembler added errata NOP
  6445                           
  6446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  6447  001422  0E02               	movlw	2
  6448  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6449  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6450  00142C  26DE               	addwf	postinc2,f,c
  6451  00142E                     L24:
  6452  00142E  FFFF               	dw	65535	; assembler added errata NOP
  6453  001430  0E00               	movlw	0
  6454  001432  22DD               	addwfc	postdec2,f,c
  6455                           
  6456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6457  001434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6458  001438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6459  00143C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6460  001440  0E02               	movlw	2
  6461  001442  26DE               	addwf	postinc2,f,c
  6462  001444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6463  001448  0E00               	movlw	0
  6464  00144A  22DD               	addwfc	postdec2,f,c
  6465  00144C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6466  001450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6467  001454  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6468  001458  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6469  00145C  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6470  001460  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6471  001464  D738               	goto	L14
  6472  001466                     l4330:
  6473  001466  FFFF               	dw	65535	; assembler added errata NOP
  6474                           
  6475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  6476  001468  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6477  00146C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6478  001470  CFDE F001          	movff	postinc2,strncmp@_l
  6479  001474  CFDD F002          	movff	postdec2,strncmp@_l+1
  6480  001478  0EBC               	movlw	low STR_112
  6481  00147A  6E03               	movwf	strncmp@_r,c
  6482  00147C  0E06               	movlw	high STR_112
  6483  00147E  6E04               	movwf	strncmp@_r+1,c
  6484  001480  0E00               	movlw	0
  6485  001482  6E06               	movwf	strncmp@n+1,c
  6486  001484  0E03               	movlw	3
  6487  001486  6E05               	movwf	strncmp@n,c
  6488  001488  EC92  F01B         	call	_strncmp	;wreg free
  6489  00148C  5001               	movf	?_strncmp,w,c
  6490  00148E  1002               	iorwf	?_strncmp+1,w,c
  6491  001490  B4D8               	btfsc	status,2,c
  6492  001492  D016               	goto	u4340
  6493  001494  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6494  001498  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6495  00149C  CFDE F001          	movff	postinc2,strncmp@_l
  6496  0014A0  CFDD F002          	movff	postdec2,strncmp@_l+1
  6497  0014A4  0EA4               	movlw	low STR_116
  6498  0014A6  6E03               	movwf	strncmp@_r,c
  6499  0014A8  0E06               	movlw	high STR_116
  6500  0014AA  6E04               	movwf	strncmp@_r+1,c
  6501  0014AC  0E00               	movlw	0
  6502  0014AE  6E06               	movwf	strncmp@n+1,c
  6503  0014B0  0E03               	movlw	3
  6504  0014B2  6E05               	movwf	strncmp@n,c
  6505  0014B4  EC92  F01B         	call	_strncmp	;wreg free
  6506  0014B8  5001               	movf	?_strncmp,w,c
  6507  0014BA  1002               	iorwf	?_strncmp+1,w,c
  6508  0014BC  A4D8               	btfss	status,2,c
  6509  0014BE  D058               	goto	l4344
  6510  0014C0                     u4340:
  6511  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  6512                           
  6513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  6514  0014C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6515  0014C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6516  0014CA  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6517  0014CE  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6518  0014D2  0E02               	movlw	2
  6519  0014D4  2649               	addwf	??_vfpfcnvrt,f,c
  6520  0014D6  0E00               	movlw	0
  6521  0014D8  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6522  0014DA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6523  0014DE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6524  0014E2                     	if	0	;tblptru may be non-zero
  6525  0014E2                     	endif
  6526  0014E2                     	if	0	;tblptru may be non-zero
  6527  0014E2                     	endif
  6528  0014E2  0008               	tblrd		*
  6529  0014E4  FFFF               	dw	65535	; errata NOP
  6530  0014E6  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6531                           
  6532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  6533  0014EA  0E03               	movlw	3
  6534  0014EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6535  0014F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6536  0014F4  26DE               	addwf	postinc2,f,c
  6537  0014F6  0E00               	movlw	0
  6538  0014F8  22DD               	addwfc	postdec2,f,c
  6539                           
  6540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6541  0014FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6542  0014FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6543  001502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6544  001506  0E02               	movlw	2
  6545  001508  26DE               	addwf	postinc2,f,c
  6546  00150A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6547  00150E  0E00               	movlw	0
  6548  001510  22DD               	addwfc	postdec2,f,c
  6549  001512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6550  001516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6551  00151A  50DF               	movf	indf2,w,c
  6552  00151C  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6553  00151E  504B               	movf	??_vfpfcnvrt+2,w,c
  6554  001520  6E6A               	movwf	vfpfcnvrt@llu,c
  6555  001522  6A6B               	clrf	vfpfcnvrt@llu+1,c
  6556  001524                     L16:
  6557  001524  FFFF               	dw	65535	; assembler added errata NOP
  6558  001526  6A6C               	clrf	vfpfcnvrt@llu+2,c
  6559  001528  6A6D               	clrf	vfpfcnvrt@llu+3,c
  6560  00152A                     L17:
  6561  00152A  FFFF               	dw	65535	; assembler added errata NOP
  6562  00152C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  6563  00152E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  6564  001530  6A70               	clrf	vfpfcnvrt@llu+6,c
  6565  001532  6A71               	clrf	vfpfcnvrt@llu+7,c
  6566                           
  6567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  6568  001534  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6569  001538  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6570  00153C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6571  001540  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6572  001544  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6573  001548  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6574  00154C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6575  001550  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6576  001554  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6577  001558  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6578  00155C  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  6579  001560  EC4B  F012         	call	_xtoa	;wreg free
  6580  001564                     L13:
  6581  001564  FFFF               	dw	65535	; assembler added errata NOP
  6582  001566  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6583  00156A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6584  00156E  D18E               	goto	l553
  6585  001570                     l4344:
  6586  001570  FFFF               	dw	65535	; assembler added errata NOP
  6587                           
  6588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  6589  001572  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6590  001576  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6591  00157A  CFDE F001          	movff	postinc2,strncmp@_l
  6592  00157E  CFDD F002          	movff	postdec2,strncmp@_l+1
  6593  001582  0EBD               	movlw	low (STR_112+1)
  6594  001584  6E03               	movwf	strncmp@_r,c
  6595  001586  0E06               	movlw	high (STR_112+1)
  6596  001588  6E04               	movwf	strncmp@_r+1,c
  6597  00158A  0E00               	movlw	0
  6598  00158C  6E06               	movwf	strncmp@n+1,c
  6599  00158E  0E02               	movlw	2
  6600  001590  6E05               	movwf	strncmp@n,c
  6601  001592  EC92  F01B         	call	_strncmp	;wreg free
  6602  001596  5001               	movf	?_strncmp,w,c
  6603  001598  1002               	iorwf	?_strncmp+1,w,c
  6604  00159A  B4D8               	btfsc	status,2,c
  6605  00159C  D016               	goto	u4360
  6606  00159E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6607  0015A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6608  0015A6  CFDE F001          	movff	postinc2,strncmp@_l
  6609  0015AA  CFDD F002          	movff	postdec2,strncmp@_l+1
  6610  0015AE  0EA5               	movlw	low (STR_116+1)
  6611  0015B0  6E03               	movwf	strncmp@_r,c
  6612  0015B2  0E06               	movlw	high (STR_116+1)
  6613  0015B4  6E04               	movwf	strncmp@_r+1,c
  6614  0015B6  0E00               	movlw	0
  6615  0015B8  6E06               	movwf	strncmp@n+1,c
  6616  0015BA  0E02               	movlw	2
  6617  0015BC  6E05               	movwf	strncmp@n,c
  6618  0015BE  EC92  F01B         	call	_strncmp	;wreg free
  6619  0015C2  5001               	movf	?_strncmp,w,c
  6620  0015C4  1002               	iorwf	?_strncmp+1,w,c
  6621  0015C6  A4D8               	btfss	status,2,c
  6622  0015C8  D014               	goto	l4358
  6623  0015CA                     u4360:
  6624  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  6625                           
  6626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  6627  0015CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6628  0015D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6629  0015D4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6630  0015D8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6631  0015DC  0E01               	movlw	1
  6632  0015DE  2649               	addwf	??_vfpfcnvrt,f,c
  6633  0015E0  0E00               	movlw	0
  6634  0015E2  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6635  0015E4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6636  0015E8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6637  0015EC                     	if	0	;tblptru may be non-zero
  6638  0015EC                     	endif
  6639  0015EC                     	if	0	;tblptru may be non-zero
  6640  0015EC                     	endif
  6641  0015EC  0008               	tblrd		*
  6642  0015EE  FFFF               	dw	65535	; errata NOP
  6643  0015F0  D0DB               	goto	L28
  6644  0015F2                     l4358:
  6645  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  6646                           
  6647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6648  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6649  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6650  0015FC  CFDE FFF6          	movff	postinc2,tblptrl
  6651  001600  CFDD FFF7          	movff	postdec2,tblptrh
  6652  001604                     	if	0	;tblptru may be non-zero
  6653  001604                     	endif
  6654  001604                     	if	0	;tblptru may be non-zero
  6655  001604                     	endif
  6656  001604  0008               	tblrd		*
  6657  001606  FFFF               	dw	65535	; errata NOP
  6658  001608  50F5               	movf	tablat,w,c
  6659  00160A  0A78               	xorlw	120
  6660  00160C  B4D8               	btfsc	status,2,c
  6661  00160E  D00E               	goto	u4380
  6662  001610  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6663  001614  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6664  001618  CFDE FFF6          	movff	postinc2,tblptrl
  6665  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  6666  001620                     	if	0	;tblptru may be non-zero
  6667  001620                     	endif
  6668  001620                     	if	0	;tblptru may be non-zero
  6669  001620                     	endif
  6670  001620  0008               	tblrd		*
  6671  001622  FFFF               	dw	65535	; errata NOP
  6672  001624  50F5               	movf	tablat,w,c
  6673  001626  0A58               	xorlw	88
  6674  001628  A4D8               	btfss	status,2,c
  6675  00162A  D013               	goto	l4372
  6676  00162C                     u4380:
  6677  00162C  FFFF               	dw	65535	; assembler added errata NOP
  6678                           
  6679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6680  00162E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6681  001632  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6682  001636  CFDE FFF6          	movff	postinc2,tblptrl
  6683  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  6684  00163E                     	if	0	;tblptru may be non-zero
  6685  00163E                     	endif
  6686  00163E                     	if	0	;tblptru may be non-zero
  6687  00163E                     	endif
  6688  00163E  0008               	tblrd		*
  6689  001640  FFFF               	dw	65535	; errata NOP
  6690  001642  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6691                           
  6692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6693  001646  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6694  00164A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6695  00164E  2ADE               	incf	postinc2,f,c
  6696  001650  D0B4               	goto	L27
  6697  001652                     l4372:
  6698  001652  FFFF               	dw	65535	; assembler added errata NOP
  6699                           
  6700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  6701  001654  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6702  001658  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6703  00165C  CFDE F001          	movff	postinc2,strncmp@_l
  6704  001660  CFDD F002          	movff	postdec2,strncmp@_l+1
  6705  001664  0EE5               	movlw	low STR_130
  6706  001666  6E03               	movwf	strncmp@_r,c
  6707  001668  0E06               	movlw	high STR_130
  6708  00166A  6E04               	movwf	strncmp@_r+1,c
  6709  00166C  0E00               	movlw	0
  6710  00166E  6E06               	movwf	strncmp@n+1,c
  6711  001670  0E02               	movlw	2
  6712  001672  6E05               	movwf	strncmp@n,c
  6713  001674  EC92  F01B         	call	_strncmp	;wreg free
  6714  001678  5001               	movf	?_strncmp,w,c
  6715  00167A  1002               	iorwf	?_strncmp+1,w,c
  6716  00167C  B4D8               	btfsc	status,2,c
  6717  00167E  D016               	goto	u4400
  6718  001680  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6719  001684  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6720  001688  CFDE F001          	movff	postinc2,strncmp@_l
  6721  00168C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6722  001690  0EC4               	movlw	low STR_134
  6723  001692  6E03               	movwf	strncmp@_r,c
  6724  001694  0E06               	movlw	high STR_134
  6725  001696  6E04               	movwf	strncmp@_r+1,c
  6726  001698  0E00               	movlw	0
  6727  00169A  6E06               	movwf	strncmp@n+1,c
  6728  00169C  0E02               	movlw	2
  6729  00169E  6E05               	movwf	strncmp@n,c
  6730  0016A0  EC92  F01B         	call	_strncmp	;wreg free
  6731  0016A4  5001               	movf	?_strncmp,w,c
  6732  0016A6  1002               	iorwf	?_strncmp+1,w,c
  6733  0016A8  A4D8               	btfss	status,2,c
  6734  0016AA  D03E               	goto	l4386
  6735  0016AC                     u4400:
  6736  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  6737                           
  6738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  6739  0016AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6740  0016B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6741  0016B6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6742  0016BA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6743  0016BE  0E01               	movlw	1
  6744  0016C0  2649               	addwf	??_vfpfcnvrt,f,c
  6745  0016C2  0E00               	movlw	0
  6746  0016C4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6747  0016C6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6748  0016CA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6749  0016CE                     	if	0	;tblptru may be non-zero
  6750  0016CE                     	endif
  6751  0016CE                     	if	0	;tblptru may be non-zero
  6752  0016CE                     	endif
  6753  0016CE  0008               	tblrd		*
  6754  0016D0  FFFF               	dw	65535	; errata NOP
  6755  0016D2  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6756                           
  6757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  6758  0016D6  0E02               	movlw	2
  6759  0016D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6760  0016DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6761  0016E0  26DE               	addwf	postinc2,f,c
  6762  0016E2  0E00               	movlw	0
  6763  0016E4  22DD               	addwfc	postdec2,f,c
  6764                           
  6765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  6766  0016E6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6767  0016EA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6768  0016EE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6769  0016F2  0E04               	movlw	4
  6770  0016F4  26DE               	addwf	postinc2,f,c
  6771  0016F6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6772  0016FA  0E00               	movlw	0
  6773  0016FC  22DD               	addwfc	postdec2,f,c
  6774  0016FE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6775  001702  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6776  001706  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6777  00170A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  6778  00170E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  6779  001712  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  6780  001716  504B               	movf	??_vfpfcnvrt+2,w,c
  6781  001718  6E6A               	movwf	vfpfcnvrt@llu,c
  6782  00171A  504C               	movf	??_vfpfcnvrt+3,w,c
  6783  00171C  6E6B               	movwf	vfpfcnvrt@llu+1,c
  6784  00171E  504D               	movf	??_vfpfcnvrt+4,w,c
  6785  001720  6E6C               	movwf	vfpfcnvrt@llu+2,c
  6786  001722  504E               	movf	??_vfpfcnvrt+5,w,c
  6787  001724  6E6D               	movwf	vfpfcnvrt@llu+3,c
  6788  001726  D701               	goto	L17
  6789  001728                     l4386:
  6790  001728  FFFF               	dw	65535	; assembler added errata NOP
  6791                           
  6792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  6793  00172A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6794  00172E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6795  001732  CFDE F001          	movff	postinc2,strncmp@_l
  6796  001736  CFDD F002          	movff	postdec2,strncmp@_l+1
  6797  00173A  0EE8               	movlw	low STR_139
  6798  00173C  6E03               	movwf	strncmp@_r,c
  6799  00173E  0E06               	movlw	high STR_139
  6800  001740  6E04               	movwf	strncmp@_r+1,c
  6801  001742  0E00               	movlw	0
  6802  001744  6E06               	movwf	strncmp@n+1,c
  6803  001746  0E02               	movlw	2
  6804  001748  6E05               	movwf	strncmp@n,c
  6805  00174A  EC92  F01B         	call	_strncmp	;wreg free
  6806  00174E  5001               	movf	?_strncmp,w,c
  6807  001750  1002               	iorwf	?_strncmp+1,w,c
  6808  001752  B4D8               	btfsc	status,2,c
  6809  001754  D016               	goto	u4420
  6810  001756  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6811  00175A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6812  00175E  CFDE F001          	movff	postinc2,strncmp@_l
  6813  001762  CFDD F002          	movff	postdec2,strncmp@_l+1
  6814  001766  0EC7               	movlw	low STR_143
  6815  001768  6E03               	movwf	strncmp@_r,c
  6816  00176A  0E06               	movlw	high STR_143
  6817  00176C  6E04               	movwf	strncmp@_r+1,c
  6818  00176E  0E00               	movlw	0
  6819  001770  6E06               	movwf	strncmp@n+1,c
  6820  001772  0E02               	movlw	2
  6821  001774  6E05               	movwf	strncmp@n,c
  6822  001776  EC92  F01B         	call	_strncmp	;wreg free
  6823  00177A  5001               	movf	?_strncmp,w,c
  6824  00177C  1002               	iorwf	?_strncmp+1,w,c
  6825  00177E  A4D8               	btfss	status,2,c
  6826  001780  D038               	goto	l4400
  6827  001782                     u4420:
  6828  001782  FFFF               	dw	65535	; assembler added errata NOP
  6829                           
  6830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  6831  001784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6832  001788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6833  00178C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6834  001790  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6835  001794  0E01               	movlw	1
  6836  001796  2649               	addwf	??_vfpfcnvrt,f,c
  6837  001798  0E00               	movlw	0
  6838  00179A  224A               	addwfc	??_vfpfcnvrt+1,f,c
  6839  00179C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6840  0017A0  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6841  0017A4                     	if	0	;tblptru may be non-zero
  6842  0017A4                     	endif
  6843  0017A4                     	if	0	;tblptru may be non-zero
  6844  0017A4                     	endif
  6845  0017A4  0008               	tblrd		*
  6846  0017A6  FFFF               	dw	65535	; errata NOP
  6847  0017A8                     L28:
  6848  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  6849  0017AA  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  6850                           
  6851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  6852  0017AE  0E02               	movlw	2
  6853  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6854  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6855  0017B8  26DE               	addwf	postinc2,f,c
  6856  0017BA                     L27:
  6857  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  6858  0017BC  0E00               	movlw	0
  6859  0017BE  22DD               	addwfc	postdec2,f,c
  6860                           
  6861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6862  0017C0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6863  0017C4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6864  0017C8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6865  0017CC  0E02               	movlw	2
  6866  0017CE  26DE               	addwf	postinc2,f,c
  6867  0017D0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6868  0017D4  0E00               	movlw	0
  6869  0017D6  22DD               	addwfc	postdec2,f,c
  6870  0017D8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6871  0017DC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6872  0017E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6873  0017E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6874  0017E8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6875  0017EC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6876  0017F0  D699               	goto	L16
  6877  0017F2                     l4400:
  6878  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  6879                           
  6880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6881  0017F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6882  0017F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6883  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
  6884  001800  CFDD FFF7          	movff	postdec2,tblptrh
  6885  001804                     	if	0	;tblptru may be non-zero
  6886  001804                     	endif
  6887  001804                     	if	0	;tblptru may be non-zero
  6888  001804                     	endif
  6889  001804  0008               	tblrd		*
  6890  001806  FFFF               	dw	65535	; errata NOP
  6891  001808  50F5               	movf	tablat,w,c
  6892  00180A  0A25               	xorlw	37
  6893  00180C  A4D8               	btfss	status,2,c
  6894  00180E  D018               	goto	l4410
  6895                           
  6896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6897  001810  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6898  001814  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6899  001818  2ADE               	incf	postinc2,f,c
  6900  00181A  0E00               	movlw	0
  6901  00181C  22DD               	addwfc	postdec2,f,c
  6902                           
  6903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6904  00181E  0E00               	movlw	0
  6905  001820  6E02               	movwf	fputc@c+1,c
  6906  001822  0E25               	movlw	37
  6907  001824  6E01               	movwf	fputc@c,c
  6908  001826  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6909  00182A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6910  00182E  EC51  F01C         	call	_fputc	;wreg free
  6911  001832                     l4406:
  6912  001832  FFFF               	dw	65535	; assembler added errata NOP
  6913                           
  6914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6915  001834  0E00               	movlw	0
  6916  001836  6E44               	movwf	?_vfpfcnvrt+1,c
  6917  001838  0E01               	movlw	1
  6918  00183A                     L11:
  6919  00183A  FFFF               	dw	65535	; assembler added errata NOP
  6920  00183C  6E43               	movwf	?_vfpfcnvrt,c
  6921  00183E  D026               	goto	l553
  6922  001840                     l4410:
  6923  001840  FFFF               	dw	65535	; assembler added errata NOP
  6924                           
  6925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6926  001842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6927  001846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6928  00184A  2ADE               	incf	postinc2,f,c
  6929  00184C  0E00               	movlw	0
  6930  00184E  22DD               	addwfc	postdec2,f,c
  6931  001850  EFF5  F007         	goto	l4230
  6932  001854                     l4416:
  6933  001854  FFFF               	dw	65535	; assembler added errata NOP
  6934                           
  6935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6936  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6937  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6938  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  6939  001862  CFDD FFF7          	movff	postdec2,tblptrh
  6940  001866                     	if	0	;tblptru may be non-zero
  6941  001866                     	endif
  6942  001866                     	if	0	;tblptru may be non-zero
  6943  001866                     	endif
  6944  001866  0008               	tblrd		*
  6945  001868  FFFF               	dw	65535	; errata NOP
  6946  00186A  50F5               	movf	tablat,w,c
  6947  00186C  6E01               	movwf	fputc@c,c
  6948  00186E  6A02               	clrf	fputc@c+1,c
  6949  001870  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6950  001874  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6951  001878  EC51  F01C         	call	_fputc	;wreg free
  6952                           
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6954  00187C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6955  001880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6956  001884  2ADE               	incf	postinc2,f,c
  6957  001886  0E00               	movlw	0
  6958  001888  22DD               	addwfc	postdec2,f,c
  6959  00188A  D7D3               	goto	l4406
  6960  00188C                     l553:
  6961  00188C  FFFF               	dw	65535	; assembler added errata NOP
  6962  00188E  0012               	return		;funcret
  6963  001890  FFFF               	dw	65535	; errata NOP
  6964  001892                     __end_of_vfpfcnvrt:
  6965                           	opt callstack 0
  6966                           
  6967 ;; *************** function _xtoa *****************
  6968 ;; Defined at:
  6969 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6972 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6973 ;;  d               8   29[COMRAM] unsigned long long 
  6974 ;;  x               1   37[COMRAM] unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  n               8   54[COMRAM] unsigned long long 
  6977 ;;  c               2   64[COMRAM] int 
  6978 ;;  i               2   62[COMRAM] int 
  6979 ;;  w               2   52[COMRAM] int 
  6980 ;;  p               2   50[COMRAM] int 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  2   27[COMRAM] int 
  6983 ;; Registers used:
  6984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6990 ;;      Params:        11       0       0       0       0       0       0
  6991 ;;      Locals:        20       0       0       0       0       0       0
  6992 ;;      Temps:          8       0       0       0       0       0       0
  6993 ;;      Totals:        39       0       0       0       0       0       0
  6994 ;;Total ram usage:       39 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    6
  6997 ;; This function calls:
  6998 ;;		_isalpha
  6999 ;;		_isupper
  7000 ;;		_pad
  7001 ;;		_toupper
  7002 ;; This function is called by:
  7003 ;;		_vfpfcnvrt
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text22
  7008  002496                     __ptext22:
  7009                           	opt callstack 0
  7010  002496                     _xtoa:
  7011                           	opt callstack 0
  7012  002496  FFFF               	dw	65535	; assembler added errata NOP
  7013                           
  7014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7015                           
  7016                           ;incstack = 0
  7017  002498  0100               	movlb	0	; () banked
  7018  00249A  AFCF               	btfss	(_prec+1)& (0+255),7,b
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7022  00249C  93D0               	bcf	_flags& (0+255),1,b
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7026  00249E  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  7027  0024A0  D005               	goto	u3640
  7028  0024A2  51CF               	movf	(_prec+1)& (0+255),w,b
  7029  0024A4  E109               	bnz	l491
  7030  0024A6  05CE               	decf	_prec& (0+255),w,b
  7031  0024A8  B0D8               	btfsc	status,0,c
  7032  0024AA  D006               	goto	l491
  7033  0024AC                     u3640:
  7034  0024AC  FFFF               	dw	65535	; assembler added errata NOP
  7035                           
  7036                           ; BSR set to: 0
  7037  0024AE  0E00               	movlw	0
  7038  0024B0  6E34               	movwf	xtoa@p+1,c
  7039  0024B2  0E01               	movlw	1
  7040  0024B4  6E33               	movwf	xtoa@p,c
  7041  0024B6  D005               	goto	l493
  7042  0024B8                     l491:
  7043  0024B8  FFFF               	dw	65535	; assembler added errata NOP
  7044                           
  7045                           ; BSR set to: 0
  7046  0024BA  C0CE  F033         	movff	_prec,xtoa@p
  7047  0024BE  C0CF  F034         	movff	_prec+1,xtoa@p+1
  7048  0024C2                     l493:
  7049  0024C2  FFFF               	dw	65535	; assembler added errata NOP
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7053  0024C4  C0CC  F035         	movff	_width,xtoa@w
  7054  0024C8  C0CD  F036         	movff	_width+1,xtoa@w+1
  7055                           
  7056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7057  0024CC  A9D0               	btfss	_flags& (0+255),4,b
  7058  0024CE  D004               	goto	l3930
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7062  0024D0  0EFE               	movlw	254
  7063  0024D2  2635               	addwf	xtoa@w,f,c
  7064  0024D4  0EFF               	movlw	255
  7065  0024D6  2236               	addwfc	xtoa@w+1,f,c
  7066  0024D8                     l3930:
  7067  0024D8  FFFF               	dw	65535	; assembler added errata NOP
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7071  0024DA  C01E  F037         	movff	xtoa@d,xtoa@n
  7072  0024DE  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  7073  0024E2  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  7074  0024E6  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  7075  0024EA  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  7076  0024EE  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  7077  0024F2  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  7078  0024F6  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7082  0024FA  0E00               	movlw	0
  7083  0024FC  6E40               	movwf	xtoa@i+1,c
  7084  0024FE  0E1F               	movlw	31
  7085  002500  6E3F               	movwf	xtoa@i,c
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7089  002502  0E00               	movlw	0
  7090  002504  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7091                           
  7092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7093  002506  D09D               	goto	l3966
  7094  002508                     l3936:
  7095  002508  FFFF               	dw	65535	; assembler added errata NOP
  7096                           
  7097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  7098  00250A  063F               	decf	xtoa@i,f,c
  7099  00250C  A0D8               	btfss	status,0,c
  7100  00250E  0640               	decf	xtoa@i+1,f,c
  7101                           
  7102                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7103  002510  0E0F               	movlw	15
  7104  002512  1437               	andwf	xtoa@n,w,c
  7105  002514  6E41               	movwf	xtoa@c,c
  7106  002516  6A42               	clrf	xtoa@c+1,c
  7107                           
  7108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7109  002518  BE42               	btfsc	xtoa@c+1,7,c
  7110  00251A  D008               	goto	l3944
  7111  00251C  5042               	movf	xtoa@c+1,w,c
  7112  00251E  E104               	bnz	u3660
  7113  002520  0E0A               	movlw	10
  7114  002522  5C41               	subwf	xtoa@c,w,c
  7115  002524  A0D8               	btfss	status,0,c
  7116  002526  D002               	goto	l3944
  7117  002528                     u3660:
  7118  002528  0E57               	movlw	87
  7119  00252A  D002               	goto	L25
  7120  00252C                     l3944:
  7121  00252C  FFFF               	dw	65535	; assembler added errata NOP
  7122  00252E  0E30               	movlw	48
  7123  002530                     L25:
  7124  002530  FFFF               	dw	65535	; assembler added errata NOP
  7125  002532  2441               	addwf	xtoa@c,w,c
  7126  002534  6E41               	movwf	xtoa@c,c
  7127  002536  0E00               	movlw	0
  7128  002538  2042               	addwfc	xtoa@c+1,w,c
  7129  00253A  6E42               	movwf	xtoa@c+1,c
  7130                           
  7131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  7132  00253C  0EBF               	movlw	191
  7133  00253E  6E27               	movwf	??_xtoa& (0+255),c
  7134  002540  0EFF               	movlw	255
  7135  002542  6E28               	movwf	(??_xtoa+1)& (0+255),c
  7136  002544  5026               	movf	xtoa@x,w,c
  7137  002546  6E29               	movwf	(??_xtoa+2)& (0+255),c
  7138  002548  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  7139  00254A  5027               	movf	??_xtoa,w,c
  7140  00254C  2629               	addwf	??_xtoa+2,f,c
  7141  00254E  5028               	movf	??_xtoa+1,w,c
  7142  002550  222A               	addwfc	??_xtoa+3,f,c
  7143  002552  502A               	movf	??_xtoa+3,w,c
  7144  002554  E106               	bnz	u3670
  7145  002556  0E1A               	movlw	26
  7146  002558  5C29               	subwf	??_xtoa+2,w,c
  7147  00255A  B0D8               	btfsc	status,0,c
  7148  00255C  D002               	goto	u3670
  7149  00255E  0E01               	movlw	1
  7150  002560  D002               	goto	u3680
  7151  002562                     u3670:
  7152  002562  FFFF               	dw	65535	; assembler added errata NOP
  7153  002564  0E00               	movlw	0
  7154  002566                     u3680:
  7155  002566  FFFF               	dw	65535	; assembler added errata NOP
  7156  002568  6E2F               	movwf	_xtoa$1111,c
  7157  00256A  6A30               	clrf	_xtoa$1111+1,c
  7158  00256C  502F               	movf	_xtoa$1111,w,c
  7159  00256E  1030               	iorwf	_xtoa$1111+1,w,c
  7160  002570  B4D8               	btfsc	status,2,c
  7161  002572  D029               	goto	l3958
  7162  002574  0E9F               	movlw	159
  7163  002576  6E27               	movwf	??_xtoa& (0+255),c
  7164  002578  0EFF               	movlw	255
  7165  00257A  6E28               	movwf	(??_xtoa+1)& (0+255),c
  7166  00257C  0E20               	movlw	32
  7167  00257E  1041               	iorwf	xtoa@c,w,c
  7168  002580  6E29               	movwf	(??_xtoa+2)& (0+255),c
  7169  002582  0E00               	movlw	0
  7170  002584  1042               	iorwf	xtoa@c+1,w,c
  7171  002586  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  7172  002588  5027               	movf	??_xtoa,w,c
  7173  00258A  2629               	addwf	??_xtoa+2,f,c
  7174  00258C  5028               	movf	??_xtoa+1,w,c
  7175  00258E  222A               	addwfc	??_xtoa+3,f,c
  7176  002590  502A               	movf	??_xtoa+3,w,c
  7177  002592  E106               	bnz	u3700
  7178  002594  0E1A               	movlw	26
  7179  002596  5C29               	subwf	??_xtoa+2,w,c
  7180  002598  B0D8               	btfsc	status,0,c
  7181  00259A  D002               	goto	u3700
  7182  00259C  0E01               	movlw	1
  7183  00259E  D002               	goto	u3710
  7184  0025A0                     u3700:
  7185  0025A0  FFFF               	dw	65535	; assembler added errata NOP
  7186  0025A2  0E00               	movlw	0
  7187  0025A4                     u3710:
  7188  0025A4  FFFF               	dw	65535	; assembler added errata NOP
  7189  0025A6  6E31               	movwf	_xtoa$1112,c
  7190  0025A8  6A32               	clrf	_xtoa$1112+1,c
  7191  0025AA  5031               	movf	_xtoa$1112,w,c
  7192  0025AC  1032               	iorwf	_xtoa$1112+1,w,c
  7193  0025AE  B4D8               	btfsc	status,2,c
  7194  0025B0  D00A               	goto	l3958
  7195                           
  7196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7197  0025B2  C041  F007         	movff	xtoa@c,toupper@c
  7198  0025B6  C042  F008         	movff	xtoa@c+1,toupper@c+1
  7199  0025BA  EC28  F01E         	call	_toupper	;wreg free
  7200  0025BE  C007  F041         	movff	?_toupper,xtoa@c
  7201  0025C2  C008  F042         	movff	?_toupper+1,xtoa@c+1
  7202  0025C6                     l3958:
  7203  0025C6  FFFF               	dw	65535	; assembler added errata NOP
  7204                           
  7205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7206  0025C8  0ED5               	movlw	low _dbuf
  7207  0025CA  243F               	addwf	xtoa@i,w,c
  7208  0025CC  6ED9               	movwf	fsr2l,c
  7209  0025CE  0E00               	movlw	high _dbuf
  7210  0025D0  2040               	addwfc	xtoa@i+1,w,c
  7211  0025D2  6EDA               	movwf	fsr2h,c
  7212  0025D4  C041  FFDF         	movff	xtoa@c,indf2
  7213                           
  7214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7215  0025D8  0633               	decf	xtoa@p,f,c
  7216  0025DA  A0D8               	btfss	status,0,c
  7217  0025DC  0634               	decf	xtoa@p+1,f,c
  7218                           
  7219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7220  0025DE  0635               	decf	xtoa@w,f,c
  7221  0025E0  A0D8               	btfss	status,0,c
  7222  0025E2  0636               	decf	xtoa@w+1,f,c
  7223                           
  7224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7225  0025E4  C037  F027         	movff	xtoa@n,??_xtoa
  7226  0025E8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  7227  0025EC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  7228  0025F0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  7229  0025F4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  7230  0025F8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  7231  0025FC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  7232  002600  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  7233  002604  0E05               	movlw	5
  7234  002606  D00A               	goto	u3730
  7235  002608                     u3735:
  7236  002608  FFFF               	dw	65535	; assembler added errata NOP
  7237  00260A  90D8               	bcf	status,0,c
  7238  00260C  322E               	rrcf	??_xtoa+7,f,c
  7239  00260E  322D               	rrcf	??_xtoa+6,f,c
  7240  002610  322C               	rrcf	??_xtoa+5,f,c
  7241  002612  322B               	rrcf	??_xtoa+4,f,c
  7242  002614  322A               	rrcf	??_xtoa+3,f,c
  7243  002616  3229               	rrcf	??_xtoa+2,f,c
  7244  002618  3228               	rrcf	??_xtoa+1,f,c
  7245  00261A  3227               	rrcf	??_xtoa,f,c
  7246  00261C                     u3730:
  7247  00261C  FFFF               	dw	65535	; assembler added errata NOP
  7248  00261E  2EE8               	decfsz	wreg,f,c
  7249  002620  D7F3               	goto	u3735
  7250  002622  C027  F037         	movff	??_xtoa,xtoa@n
  7251  002626  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  7252  00262A  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  7253  00262E  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  7254  002632  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  7255  002636  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  7256  00263A  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  7257  00263E  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  7258  002642                     l3966:
  7259  002642  FFFF               	dw	65535	; assembler added errata NOP
  7260                           
  7261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7262  002644  BE40               	btfsc	xtoa@i+1,7,c
  7263  002646  D022               	goto	u3780
  7264  002648  5040               	movf	xtoa@i+1,w,c
  7265  00264A  E104               	bnz	u3740
  7266  00264C  0E02               	movlw	2
  7267  00264E  5C3F               	subwf	xtoa@i,w,c
  7268  002650  A0D8               	btfss	status,0,c
  7269  002652  D01C               	goto	u3780
  7270  002654                     u3740:
  7271  002654  5037               	movf	xtoa@n,w,c
  7272  002656  1038               	iorwf	xtoa@n+1,w,c
  7273  002658  1039               	iorwf	xtoa@n+2,w,c
  7274  00265A  103A               	iorwf	xtoa@n+3,w,c
  7275  00265C  103B               	iorwf	xtoa@n+4,w,c
  7276  00265E  103C               	iorwf	xtoa@n+5,w,c
  7277  002660  103D               	iorwf	xtoa@n+6,w,c
  7278  002662  103E               	iorwf	xtoa@n+7,w,c
  7279  002664  A4D8               	btfss	status,2,c
  7280  002666  D750               	goto	l3936
  7281  002668  BE34               	btfsc	xtoa@p+1,7,c
  7282  00266A  D005               	goto	u3760
  7283  00266C  5034               	movf	xtoa@p+1,w,c
  7284  00266E  E102               	bnz	u3761
  7285  002670  0433               	decf	xtoa@p,w,c
  7286  002672  B0D8               	btfsc	status,0,c
  7287  002674                     u3761:
  7288  002674  D749               	goto	l3936
  7289  002676                     u3760:
  7290  002676  FFFF               	dw	65535	; assembler added errata NOP
  7291  002678  BE36               	btfsc	xtoa@w+1,7,c
  7292  00267A  D008               	goto	u3780
  7293  00267C  5036               	movf	xtoa@w+1,w,c
  7294  00267E  E103               	bnz	u3770
  7295  002680  0435               	decf	xtoa@w,w,c
  7296  002682  A0D8               	btfss	status,0,c
  7297  002684  D003               	goto	u3780
  7298  002686                     u3770:
  7299  002686  0100               	movlb	0	; () banked
  7300  002688  B3D0               	btfsc	_flags& (0+255),1,b
  7301  00268A  D73E               	goto	l3936
  7302  00268C                     u3780:
  7303  00268C  FFFF               	dw	65535	; assembler added errata NOP
  7304                           
  7305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7306  00268E  0100               	movlb	0	; () banked
  7307  002690  A9D0               	btfss	_flags& (0+255),4,b
  7308  002692  D016               	goto	l3982
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7312  002694  063F               	decf	xtoa@i,f,c
  7313  002696  A0D8               	btfss	status,0,c
  7314  002698  0640               	decf	xtoa@i+1,f,c
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7318  00269A  0ED5               	movlw	low _dbuf
  7319  00269C  243F               	addwf	xtoa@i,w,c
  7320  00269E  6ED9               	movwf	fsr2l,c
  7321  0026A0  0E00               	movlw	high _dbuf
  7322  0026A2  2040               	addwfc	xtoa@i+1,w,c
  7323  0026A4  6EDA               	movwf	fsr2h,c
  7324  0026A6  C026  FFDF         	movff	xtoa@x,indf2
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7328  0026AA  063F               	decf	xtoa@i,f,c
  7329  0026AC  A0D8               	btfss	status,0,c
  7330  0026AE  0640               	decf	xtoa@i+1,f,c
  7331                           
  7332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7333  0026B0  0ED5               	movlw	low _dbuf
  7334  0026B2  243F               	addwf	xtoa@i,w,c
  7335  0026B4  6ED9               	movwf	fsr2l,c
  7336  0026B6  0E00               	movlw	high _dbuf
  7337  0026B8  2040               	addwfc	xtoa@i+1,w,c
  7338  0026BA  6EDA               	movwf	fsr2h,c
  7339  0026BC  0E30               	movlw	48
  7340  0026BE  6EDF               	movwf	indf2,c
  7341  0026C0                     l3982:
  7342  0026C0  FFFF               	dw	65535	; assembler added errata NOP
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7346  0026C2  C01C  F011         	movff	xtoa@fp,pad@fp
  7347  0026C6  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7348  0026CA  0ED5               	movlw	low _dbuf
  7349  0026CC  243F               	addwf	xtoa@i,w,c
  7350  0026CE  6E13               	movwf	pad@buf,c
  7351  0026D0  0E00               	movlw	high _dbuf
  7352  0026D2  2040               	addwfc	xtoa@i+1,w,c
  7353  0026D4  6E14               	movwf	pad@buf+1,c
  7354  0026D6  C035  F015         	movff	xtoa@w,pad@p
  7355  0026DA  C036  F016         	movff	xtoa@w+1,pad@p+1
  7356  0026DE  ECA7  F01C         	call	_pad	;wreg free
  7357  0026E2  C011  F01C         	movff	?_pad,?_xtoa
  7358  0026E6  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7359  0026EA  0012               	return		;funcret
  7360  0026EC  FFFF               	dw	65535	; errata NOP
  7361  0026EE                     __end_of_xtoa:
  7362                           	opt callstack 0
  7363                           
  7364 ;; *************** function _toupper *****************
  7365 ;; Defined at:
  7366 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  c               2    6[COMRAM] int 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  2    6[COMRAM] int 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7380 ;;      Params:         2       0       0       0       0       0       0
  7381 ;;      Locals:         2       0       0       0       0       0       0
  7382 ;;      Temps:          4       0       0       0       0       0       0
  7383 ;;      Totals:         8       0       0       0       0       0       0
  7384 ;;Total ram usage:        8 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    3
  7387 ;; This function calls:
  7388 ;;		_islower
  7389 ;; This function is called by:
  7390 ;;		_xtoa
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text23
  7395  003C50                     __ptext23:
  7396                           	opt callstack 0
  7397  003C50                     _toupper:
  7398                           	opt callstack 0
  7399  003C50  FFFF               	dw	65535	; assembler added errata NOP
  7400                           
  7401                           ;incstack = 0
  7402  003C52  0E9F               	movlw	159
  7403  003C54  6E09               	movwf	??_toupper& (0+255),c
  7404  003C56  0EFF               	movlw	255
  7405  003C58  6E0A               	movwf	(??_toupper+1)& (0+255),c
  7406  003C5A  C007  F00B         	movff	toupper@c,??_toupper+2
  7407  003C5E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7408  003C62  5009               	movf	??_toupper,w,c
  7409  003C64  260B               	addwf	??_toupper+2,f,c
  7410  003C66  500A               	movf	??_toupper+1,w,c
  7411  003C68  220C               	addwfc	??_toupper+3,f,c
  7412  003C6A  500C               	movf	??_toupper+3,w,c
  7413  003C6C  E106               	bnz	u2940
  7414  003C6E  0E1A               	movlw	26
  7415  003C70  5C0B               	subwf	??_toupper+2,w,c
  7416  003C72  B0D8               	btfsc	status,0,c
  7417  003C74  D002               	goto	u2940
  7418  003C76  0E01               	movlw	1
  7419  003C78  D002               	goto	u2950
  7420  003C7A                     u2940:
  7421  003C7A  FFFF               	dw	65535	; assembler added errata NOP
  7422  003C7C  0E00               	movlw	0
  7423  003C7E                     u2950:
  7424  003C7E  FFFF               	dw	65535	; assembler added errata NOP
  7425  003C80  6E0D               	movwf	_toupper$1878,c
  7426  003C82  6A0E               	clrf	_toupper$1878+1,c
  7427  003C84  500D               	movf	_toupper$1878,w,c
  7428  003C86  100E               	iorwf	_toupper$1878+1,w,c
  7429  003C88  B4D8               	btfsc	status,2,c
  7430  003C8A  D005               	goto	l1426
  7431  003C8C  0E5F               	movlw	95
  7432  003C8E  1407               	andwf	toupper@c,w,c
  7433  003C90  6E07               	movwf	?_toupper,c
  7434  003C92  6A08               	clrf	?_toupper+1,c
  7435  003C94  D005               	goto	l1431
  7436  003C96                     l1426:
  7437  003C96  FFFF               	dw	65535	; assembler added errata NOP
  7438  003C98  C007  F007         	movff	toupper@c,?_toupper
  7439  003C9C  C008  F008         	movff	toupper@c+1,?_toupper+1
  7440  003CA0                     l1431:
  7441  003CA0  FFFF               	dw	65535	; assembler added errata NOP
  7442  003CA2  0012               	return		;funcret
  7443  003CA4  FFFF               	dw	65535	; errata NOP
  7444  003CA6                     __end_of_toupper:
  7445                           	opt callstack 0
  7446                           
  7447 ;; *************** function _islower *****************
  7448 ;; Defined at:
  7449 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  c               2    0[COMRAM] int 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  2    0[COMRAM] int 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7463 ;;      Params:         2       0       0       0       0       0       0
  7464 ;;      Locals:         0       0       0       0       0       0       0
  7465 ;;      Temps:          4       0       0       0       0       0       0
  7466 ;;      Totals:         6       0       0       0       0       0       0
  7467 ;;Total ram usage:        6 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    2
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_toupper
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text24
  7478  003F1C                     __ptext24:
  7479                           	opt callstack 0
  7480  003F1C                     _islower:
  7481                           	opt callstack 0
  7482  003F1C  FFFF               	dw	65535	; assembler added errata NOP
  7483                           
  7484                           ;incstack = 0
  7485  003F1E  0E9F               	movlw	159
  7486  003F20  6E03               	movwf	??_islower& (0+255),c
  7487  003F22  0EFF               	movlw	255
  7488  003F24  6E04               	movwf	(??_islower+1)& (0+255),c
  7489  003F26  C001  F005         	movff	islower@c,??_islower+2
  7490  003F2A  C002  F006         	movff	islower@c+1,??_islower+3
  7491  003F2E  5003               	movf	??_islower,w,c
  7492  003F30  2605               	addwf	??_islower+2,f,c
  7493  003F32  5004               	movf	??_islower+1,w,c
  7494  003F34  2206               	addwfc	??_islower+3,f,c
  7495  003F36  5006               	movf	??_islower+3,w,c
  7496  003F38  E106               	bnz	u2830
  7497  003F3A  0E1A               	movlw	26
  7498  003F3C  5C05               	subwf	??_islower+2,w,c
  7499  003F3E  B0D8               	btfsc	status,0,c
  7500  003F40  D002               	goto	u2830
  7501  003F42  0E01               	movlw	1
  7502  003F44  D002               	goto	u2840
  7503  003F46                     u2830:
  7504  003F46  FFFF               	dw	65535	; assembler added errata NOP
  7505  003F48  0E00               	movlw	0
  7506  003F4A                     u2840:
  7507  003F4A  FFFF               	dw	65535	; assembler added errata NOP
  7508  003F4C  6E01               	movwf	?_islower,c
  7509  003F4E  6A02               	clrf	?_islower+1,c
  7510  003F50  0012               	return		;funcret
  7511  003F52  FFFF               	dw	65535	; errata NOP
  7512  003F54                     __end_of_islower:
  7513                           	opt callstack 0
  7514                           
  7515 ;; *************** function _isupper *****************
  7516 ;; Defined at:
  7517 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  c               2    0[COMRAM] int 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  2    0[COMRAM] int 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7531 ;;      Params:         2       0       0       0       0       0       0
  7532 ;;      Locals:         0       0       0       0       0       0       0
  7533 ;;      Temps:          4       0       0       0       0       0       0
  7534 ;;      Totals:         6       0       0       0       0       0       0
  7535 ;;Total ram usage:        6 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    2
  7538 ;; This function calls:
  7539 ;;		Nothing
  7540 ;; This function is called by:
  7541 ;;		_xtoa
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text25
  7546  003F54                     __ptext25:
  7547                           	opt callstack 0
  7548  003F54                     _isupper:
  7549                           	opt callstack 0
  7550  003F54  FFFF               	dw	65535	; assembler added errata NOP
  7551                           
  7552                           ;incstack = 0
  7553  003F56  0EBF               	movlw	191
  7554  003F58  6E03               	movwf	??_isupper& (0+255),c
  7555  003F5A  0EFF               	movlw	255
  7556  003F5C  6E04               	movwf	(??_isupper+1)& (0+255),c
  7557  003F5E  C001  F005         	movff	isupper@c,??_isupper+2
  7558  003F62  C002  F006         	movff	isupper@c+1,??_isupper+3
  7559  003F66  5003               	movf	??_isupper,w,c
  7560  003F68  2605               	addwf	??_isupper+2,f,c
  7561  003F6A  5004               	movf	??_isupper+1,w,c
  7562  003F6C  2206               	addwfc	??_isupper+3,f,c
  7563  003F6E  5006               	movf	??_isupper+3,w,c
  7564  003F70  E106               	bnz	u2900
  7565  003F72  0E1A               	movlw	26
  7566  003F74  5C05               	subwf	??_isupper+2,w,c
  7567  003F76  B0D8               	btfsc	status,0,c
  7568  003F78  D002               	goto	u2900
  7569  003F7A  0E01               	movlw	1
  7570  003F7C  D002               	goto	u2910
  7571  003F7E                     u2900:
  7572  003F7E  FFFF               	dw	65535	; assembler added errata NOP
  7573  003F80  0E00               	movlw	0
  7574  003F82                     u2910:
  7575  003F82  FFFF               	dw	65535	; assembler added errata NOP
  7576  003F84  6E01               	movwf	?_isupper,c
  7577  003F86  6A02               	clrf	?_isupper+1,c
  7578  003F88  0012               	return		;funcret
  7579  003F8A  FFFF               	dw	65535	; errata NOP
  7580  003F8C                     __end_of_isupper:
  7581                           	opt callstack 0
  7582                           
  7583 ;; *************** function _isalpha *****************
  7584 ;; Defined at:
  7585 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  c               2    0[COMRAM] int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[COMRAM] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7599 ;;      Params:         2       0       0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0
  7601 ;;      Temps:          4       0       0       0       0       0       0
  7602 ;;      Totals:         6       0       0       0       0       0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    2
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_xtoa
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text26
  7614  003EA4                     __ptext26:
  7615                           	opt callstack 0
  7616  003EA4                     _isalpha:
  7617                           	opt callstack 0
  7618  003EA4  FFFF               	dw	65535	; assembler added errata NOP
  7619                           
  7620                           ;incstack = 0
  7621  003EA6  0E9F               	movlw	159
  7622  003EA8  6E03               	movwf	??_isalpha& (0+255),c
  7623  003EAA  0EFF               	movlw	255
  7624  003EAC  6E04               	movwf	(??_isalpha+1)& (0+255),c
  7625  003EAE  0E20               	movlw	32
  7626  003EB0  1001               	iorwf	isalpha@c,w,c
  7627  003EB2  6E05               	movwf	(??_isalpha+2)& (0+255),c
  7628  003EB4  0E00               	movlw	0
  7629  003EB6  1002               	iorwf	isalpha@c+1,w,c
  7630  003EB8  6E06               	movwf	(??_isalpha+3)& (0+255),c
  7631  003EBA  5003               	movf	??_isalpha,w,c
  7632  003EBC  2605               	addwf	??_isalpha+2,f,c
  7633  003EBE  5004               	movf	??_isalpha+1,w,c
  7634  003EC0  2206               	addwfc	??_isalpha+3,f,c
  7635  003EC2  5006               	movf	??_isalpha+3,w,c
  7636  003EC4  E106               	bnz	u2920
  7637  003EC6  0E1A               	movlw	26
  7638  003EC8  5C05               	subwf	??_isalpha+2,w,c
  7639  003ECA  B0D8               	btfsc	status,0,c
  7640  003ECC  D002               	goto	u2920
  7641  003ECE  0E01               	movlw	1
  7642  003ED0  D002               	goto	u2930
  7643  003ED2                     u2920:
  7644  003ED2  FFFF               	dw	65535	; assembler added errata NOP
  7645  003ED4  0E00               	movlw	0
  7646  003ED6                     u2930:
  7647  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  7648  003ED8  6E01               	movwf	?_isalpha,c
  7649  003EDA  6A02               	clrf	?_isalpha+1,c
  7650  003EDC  0012               	return		;funcret
  7651  003EDE  FFFF               	dw	65535	; errata NOP
  7652  003EE0                     __end_of_isalpha:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _utoa *****************
  7656 ;; Defined at:
  7657 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7660 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  7661 ;;  d               8   29[COMRAM] unsigned long long 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  n               8   49[COMRAM] unsigned long long 
  7664 ;;  i               2   57[COMRAM] int 
  7665 ;;  w               2   47[COMRAM] int 
  7666 ;;  p               2   45[COMRAM] int 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  2   27[COMRAM] int 
  7669 ;; Registers used:
  7670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7676 ;;      Params:        10       0       0       0       0       0       0
  7677 ;;      Locals:        14       0       0       0       0       0       0
  7678 ;;      Temps:          8       0       0       0       0       0       0
  7679 ;;      Totals:        32       0       0       0       0       0       0
  7680 ;;Total ram usage:       32 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    6
  7683 ;; This function calls:
  7684 ;;		___lodiv
  7685 ;;		___lomod
  7686 ;;		_pad
  7687 ;; This function is called by:
  7688 ;;		_vfpfcnvrt
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text27
  7693  002AB4                     __ptext27:
  7694                           	opt callstack 0
  7695  002AB4                     _utoa:
  7696                           	opt callstack 0
  7697  002AB4  FFFF               	dw	65535	; assembler added errata NOP
  7698                           
  7699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  7700                           
  7701                           ;incstack = 0
  7702  002AB6  0100               	movlb	0	; () banked
  7703  002AB8  AFCF               	btfss	(_prec+1)& (0+255),7,b
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  7707  002ABA  93D0               	bcf	_flags& (0+255),1,b
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  7711  002ABC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  7712  002ABE  D005               	goto	u3570
  7713  002AC0  51CF               	movf	(_prec+1)& (0+255),w,b
  7714  002AC2  E109               	bnz	l476
  7715  002AC4  05CE               	decf	_prec& (0+255),w,b
  7716  002AC6  B0D8               	btfsc	status,0,c
  7717  002AC8  D006               	goto	l476
  7718  002ACA                     u3570:
  7719  002ACA  FFFF               	dw	65535	; assembler added errata NOP
  7720                           
  7721                           ; BSR set to: 0
  7722  002ACC  0E00               	movlw	0
  7723  002ACE  6E2F               	movwf	utoa@p+1,c
  7724  002AD0  0E01               	movlw	1
  7725  002AD2  6E2E               	movwf	utoa@p,c
  7726  002AD4  D005               	goto	l478
  7727  002AD6                     l476:
  7728  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  7729                           
  7730                           ; BSR set to: 0
  7731  002AD8  C0CE  F02E         	movff	_prec,utoa@p
  7732  002ADC  C0CF  F02F         	movff	_prec+1,utoa@p+1
  7733  002AE0                     l478:
  7734  002AE0  FFFF               	dw	65535	; assembler added errata NOP
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  7738  002AE2  C0CC  F030         	movff	_width,utoa@w
  7739  002AE6  C0CD  F031         	movff	_width+1,utoa@w+1
  7740                           
  7741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  7742  002AEA  C01E  F032         	movff	utoa@d,utoa@n
  7743  002AEE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7744  002AF2  C020  F034         	movff	utoa@d+2,utoa@n+2
  7745  002AF6  C021  F035         	movff	utoa@d+3,utoa@n+3
  7746  002AFA  C022  F036         	movff	utoa@d+4,utoa@n+4
  7747  002AFE  C023  F037         	movff	utoa@d+5,utoa@n+5
  7748  002B02  C024  F038         	movff	utoa@d+6,utoa@n+6
  7749  002B06  C025  F039         	movff	utoa@d+7,utoa@n+7
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  7753  002B0A  0E00               	movlw	0
  7754  002B0C  6E3B               	movwf	utoa@i+1,c
  7755  002B0E  0E1F               	movlw	31
  7756  002B10  6E3A               	movwf	utoa@i,c
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  7760  002B12  0E00               	movlw	0
  7761  002B14  6FF4               	movwf	(_dbuf+31)& (0+255),b
  7762                           
  7763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7764  002B16  D077               	goto	l3906
  7765  002B18                     l3896:
  7766  002B18  FFFF               	dw	65535	; assembler added errata NOP
  7767                           
  7768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  7769  002B1A  063A               	decf	utoa@i,f,c
  7770  002B1C  A0D8               	btfss	status,0,c
  7771  002B1E  063B               	decf	utoa@i+1,f,c
  7772                           
  7773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  7774  002B20  0ED5               	movlw	low _dbuf
  7775  002B22  243A               	addwf	utoa@i,w,c
  7776  002B24  6ED9               	movwf	fsr2l,c
  7777  002B26  0E00               	movlw	high _dbuf
  7778  002B28  203B               	addwfc	utoa@i+1,w,c
  7779  002B2A  6EDA               	movwf	fsr2h,c
  7780  002B2C  C032  F001         	movff	utoa@n,___lomod@dividend
  7781  002B30  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7782  002B34  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7783  002B38  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7784  002B3C  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7785  002B40  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7786  002B44  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7787  002B48  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7788  002B4C  0E0A               	movlw	10
  7789  002B4E  6E09               	movwf	___lomod@divisor,c
  7790  002B50  0E00               	movlw	0
  7791  002B52  6E0A               	movwf	___lomod@divisor+1,c
  7792  002B54  0E00               	movlw	0
  7793  002B56  6E0B               	movwf	___lomod@divisor+2,c
  7794  002B58  0E00               	movlw	0
  7795  002B5A  6E0C               	movwf	___lomod@divisor+3,c
  7796  002B5C  0E00               	movlw	0
  7797  002B5E  6E0D               	movwf	___lomod@divisor+4,c
  7798  002B60  0E00               	movlw	0
  7799  002B62  6E0E               	movwf	___lomod@divisor+5,c
  7800  002B64  0E00               	movlw	0
  7801  002B66  6E0F               	movwf	___lomod@divisor+6,c
  7802  002B68  0E00               	movlw	0
  7803  002B6A  6E10               	movwf	___lomod@divisor+7,c
  7804  002B6C  ECF3  F01B         	call	___lomod	;wreg free
  7805  002B70  C001  F026         	movff	?___lomod,??_utoa
  7806  002B74  C002  F027         	movff	?___lomod+1,??_utoa+1
  7807  002B78  C003  F028         	movff	?___lomod+2,??_utoa+2
  7808  002B7C  C004  F029         	movff	?___lomod+3,??_utoa+3
  7809  002B80  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7810  002B84  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7811  002B88  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7812  002B8C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7813  002B90  5026               	movf	??_utoa,w,c
  7814  002B92  0F30               	addlw	48
  7815  002B94  6EDF               	movwf	indf2,c
  7816                           
  7817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  7818  002B96  062E               	decf	utoa@p,f,c
  7819  002B98  A0D8               	btfss	status,0,c
  7820  002B9A  062F               	decf	utoa@p+1,f,c
  7821                           
  7822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  7823  002B9C  0630               	decf	utoa@w,f,c
  7824  002B9E  A0D8               	btfss	status,0,c
  7825  002BA0  0631               	decf	utoa@w+1,f,c
  7826                           
  7827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  7828  002BA2  C032  F001         	movff	utoa@n,___lodiv@dividend
  7829  002BA6  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7830  002BAA  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7831  002BAE  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7832  002BB2  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7833  002BB6  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7834  002BBA  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7835  002BBE  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7836  002BC2  0E0A               	movlw	10
  7837  002BC4  6E09               	movwf	___lodiv@divisor,c
  7838  002BC6  0E00               	movlw	0
  7839  002BC8  6E0A               	movwf	___lodiv@divisor+1,c
  7840  002BCA  0E00               	movlw	0
  7841  002BCC  6E0B               	movwf	___lodiv@divisor+2,c
  7842  002BCE  0E00               	movlw	0
  7843  002BD0  6E0C               	movwf	___lodiv@divisor+3,c
  7844  002BD2  0E00               	movlw	0
  7845  002BD4  6E0D               	movwf	___lodiv@divisor+4,c
  7846  002BD6  0E00               	movlw	0
  7847  002BD8  6E0E               	movwf	___lodiv@divisor+5,c
  7848  002BDA  0E00               	movlw	0
  7849  002BDC  6E0F               	movwf	___lodiv@divisor+6,c
  7850  002BDE  0E00               	movlw	0
  7851  002BE0  6E10               	movwf	___lodiv@divisor+7,c
  7852  002BE2  EC55  F01A         	call	___lodiv	;wreg free
  7853  002BE6  C001  F032         	movff	?___lodiv,utoa@n
  7854  002BEA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7855  002BEE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7856  002BF2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7857  002BF6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7858  002BFA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7859  002BFE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7860  002C02  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7861  002C06                     l3906:
  7862  002C06  FFFF               	dw	65535	; assembler added errata NOP
  7863                           
  7864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7865  002C08  503A               	movf	utoa@i,w,c
  7866  002C0A  103B               	iorwf	utoa@i+1,w,c
  7867  002C0C  B4D8               	btfsc	status,2,c
  7868  002C0E  D01C               	goto	u3620
  7869  002C10  5032               	movf	utoa@n,w,c
  7870  002C12  1033               	iorwf	utoa@n+1,w,c
  7871  002C14  1034               	iorwf	utoa@n+2,w,c
  7872  002C16  1035               	iorwf	utoa@n+3,w,c
  7873  002C18  1036               	iorwf	utoa@n+4,w,c
  7874  002C1A  1037               	iorwf	utoa@n+5,w,c
  7875  002C1C  1038               	iorwf	utoa@n+6,w,c
  7876  002C1E  1039               	iorwf	utoa@n+7,w,c
  7877  002C20  A4D8               	btfss	status,2,c
  7878  002C22  D77A               	goto	l3896
  7879  002C24  BE2F               	btfsc	utoa@p+1,7,c
  7880  002C26  D005               	goto	u3600
  7881  002C28  502F               	movf	utoa@p+1,w,c
  7882  002C2A  E102               	bnz	u3601
  7883  002C2C  042E               	decf	utoa@p,w,c
  7884  002C2E  B0D8               	btfsc	status,0,c
  7885  002C30                     u3601:
  7886  002C30  D773               	goto	l3896
  7887  002C32                     u3600:
  7888  002C32  FFFF               	dw	65535	; assembler added errata NOP
  7889  002C34  BE31               	btfsc	utoa@w+1,7,c
  7890  002C36  D008               	goto	u3620
  7891  002C38  5031               	movf	utoa@w+1,w,c
  7892  002C3A  E103               	bnz	u3610
  7893  002C3C  0430               	decf	utoa@w,w,c
  7894  002C3E  A0D8               	btfss	status,0,c
  7895  002C40  D003               	goto	u3620
  7896  002C42                     u3610:
  7897  002C42  0100               	movlb	0	; () banked
  7898  002C44  B3D0               	btfsc	_flags& (0+255),1,b
  7899  002C46  D768               	goto	l3896
  7900  002C48                     u3620:
  7901  002C48  FFFF               	dw	65535	; assembler added errata NOP
  7902                           
  7903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  7904  002C4A  C01C  F011         	movff	utoa@fp,pad@fp
  7905  002C4E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7906  002C52  0ED5               	movlw	low _dbuf
  7907  002C54  243A               	addwf	utoa@i,w,c
  7908  002C56  6E13               	movwf	pad@buf,c
  7909  002C58  0E00               	movlw	high _dbuf
  7910  002C5A  203B               	addwfc	utoa@i+1,w,c
  7911  002C5C  6E14               	movwf	pad@buf+1,c
  7912  002C5E  C030  F015         	movff	utoa@w,pad@p
  7913  002C62  C031  F016         	movff	utoa@w+1,pad@p+1
  7914  002C66  ECA7  F01C         	call	_pad	;wreg free
  7915  002C6A  C011  F01C         	movff	?_pad,?_utoa
  7916  002C6E  C012  F01D         	movff	?_pad+1,?_utoa+1
  7917  002C72  0012               	return		;funcret
  7918  002C74  FFFF               	dw	65535	; errata NOP
  7919  002C76                     __end_of_utoa:
  7920                           	opt callstack 0
  7921                           
  7922 ;; *************** function ___lomod *****************
  7923 ;; Defined at:
  7924 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  dividend        8    0[COMRAM] unsigned long long 
  7927 ;;  divisor         8    8[COMRAM] unsigned long long 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  counter         1   16[COMRAM] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  8    0[COMRAM] unsigned long long 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7939 ;;      Params:        16       0       0       0       0       0       0
  7940 ;;      Locals:         1       0       0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0
  7942 ;;      Totals:        17       0       0       0       0       0       0
  7943 ;;Total ram usage:       17 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    2
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_utoa
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text28
  7954  0037E6                     __ptext28:
  7955                           	opt callstack 0
  7956  0037E6                     ___lomod:
  7957                           	opt callstack 0
  7958  0037E6  FFFF               	dw	65535	; assembler added errata NOP
  7959                           
  7960                           ;incstack = 0
  7961  0037E8  5009               	movf	___lomod@divisor,w,c
  7962  0037EA  100A               	iorwf	___lomod@divisor+1,w,c
  7963  0037EC  100B               	iorwf	___lomod@divisor+2,w,c
  7964  0037EE  100C               	iorwf	___lomod@divisor+3,w,c
  7965  0037F0  100D               	iorwf	___lomod@divisor+4,w,c
  7966  0037F2  100E               	iorwf	___lomod@divisor+5,w,c
  7967  0037F4  100F               	iorwf	___lomod@divisor+6,w,c
  7968  0037F6  1010               	iorwf	___lomod@divisor+7,w,c
  7969  0037F8  B4D8               	btfsc	status,2,c
  7970  0037FA  D040               	goto	l1058
  7971  0037FC  0E01               	movlw	1
  7972  0037FE  6E11               	movwf	___lomod@counter,c
  7973  003800  D00B               	goto	l3696
  7974  003802                     l3694:
  7975  003802  FFFF               	dw	65535	; assembler added errata NOP
  7976  003804  90D8               	bcf	status,0,c
  7977  003806  3609               	rlcf	___lomod@divisor,f,c
  7978  003808  360A               	rlcf	___lomod@divisor+1,f,c
  7979  00380A  360B               	rlcf	___lomod@divisor+2,f,c
  7980  00380C  360C               	rlcf	___lomod@divisor+3,f,c
  7981  00380E  360D               	rlcf	___lomod@divisor+4,f,c
  7982  003810  360E               	rlcf	___lomod@divisor+5,f,c
  7983  003812  360F               	rlcf	___lomod@divisor+6,f,c
  7984  003814  3610               	rlcf	___lomod@divisor+7,f,c
  7985  003816  2A11               	incf	___lomod@counter,f,c
  7986  003818                     l3696:
  7987  003818  FFFF               	dw	65535	; assembler added errata NOP
  7988  00381A  AE10               	btfss	___lomod@divisor+7,7,c
  7989  00381C  D7F2               	goto	l3694
  7990  00381E                     u3170:
  7991  00381E  FFFF               	dw	65535	; assembler added errata NOP
  7992  003820  5009               	movf	___lomod@divisor,w,c
  7993  003822  5C01               	subwf	___lomod@dividend,w,c
  7994  003824  500A               	movf	___lomod@divisor+1,w,c
  7995  003826  5802               	subwfb	___lomod@dividend+1,w,c
  7996  003828  500B               	movf	___lomod@divisor+2,w,c
  7997  00382A  5803               	subwfb	___lomod@dividend+2,w,c
  7998  00382C  500C               	movf	___lomod@divisor+3,w,c
  7999  00382E  5804               	subwfb	___lomod@dividend+3,w,c
  8000  003830  500D               	movf	___lomod@divisor+4,w,c
  8001  003832  5805               	subwfb	___lomod@dividend+4,w,c
  8002  003834  500E               	movf	___lomod@divisor+5,w,c
  8003  003836  5806               	subwfb	___lomod@dividend+5,w,c
  8004  003838  500F               	movf	___lomod@divisor+6,w,c
  8005  00383A  5807               	subwfb	___lomod@dividend+6,w,c
  8006  00383C  5010               	movf	___lomod@divisor+7,w,c
  8007  00383E  5808               	subwfb	___lomod@dividend+7,w,c
  8008  003840  A0D8               	btfss	status,0,c
  8009  003842  D010               	goto	l3702
  8010  003844  5009               	movf	___lomod@divisor,w,c
  8011  003846  5E01               	subwf	___lomod@dividend,f,c
  8012  003848  500A               	movf	___lomod@divisor+1,w,c
  8013  00384A  5A02               	subwfb	___lomod@dividend+1,f,c
  8014  00384C  500B               	movf	___lomod@divisor+2,w,c
  8015  00384E  5A03               	subwfb	___lomod@dividend+2,f,c
  8016  003850  500C               	movf	___lomod@divisor+3,w,c
  8017  003852  5A04               	subwfb	___lomod@dividend+3,f,c
  8018  003854  500D               	movf	___lomod@divisor+4,w,c
  8019  003856  5A05               	subwfb	___lomod@dividend+4,f,c
  8020  003858  500E               	movf	___lomod@divisor+5,w,c
  8021  00385A  5A06               	subwfb	___lomod@dividend+5,f,c
  8022  00385C  500F               	movf	___lomod@divisor+6,w,c
  8023  00385E  5A07               	subwfb	___lomod@dividend+6,f,c
  8024  003860  5010               	movf	___lomod@divisor+7,w,c
  8025  003862  5A08               	subwfb	___lomod@dividend+7,f,c
  8026  003864                     l3702:
  8027  003864  FFFF               	dw	65535	; assembler added errata NOP
  8028  003866  90D8               	bcf	status,0,c
  8029  003868  3210               	rrcf	___lomod@divisor+7,f,c
  8030  00386A  320F               	rrcf	___lomod@divisor+6,f,c
  8031  00386C  320E               	rrcf	___lomod@divisor+5,f,c
  8032  00386E  320D               	rrcf	___lomod@divisor+4,f,c
  8033  003870  320C               	rrcf	___lomod@divisor+3,f,c
  8034  003872  320B               	rrcf	___lomod@divisor+2,f,c
  8035  003874  320A               	rrcf	___lomod@divisor+1,f,c
  8036  003876  3209               	rrcf	___lomod@divisor,f,c
  8037  003878  2E11               	decfsz	___lomod@counter,f,c
  8038  00387A  D7D1               	goto	u3170
  8039  00387C                     l1058:
  8040  00387C  FFFF               	dw	65535	; assembler added errata NOP
  8041  00387E  C001  F001         	movff	___lomod@dividend,?___lomod
  8042  003882  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  8043  003886  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  8044  00388A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  8045  00388E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  8046  003892  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  8047  003896  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  8048  00389A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  8049  00389E  0012               	return		;funcret
  8050  0038A0  FFFF               	dw	65535	; errata NOP
  8051  0038A2                     __end_of___lomod:
  8052                           	opt callstack 0
  8053                           
  8054 ;; *************** function ___lodiv *****************
  8055 ;; Defined at:
  8056 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  dividend        8    0[COMRAM] unsigned long long 
  8059 ;;  divisor         8    8[COMRAM] unsigned long long 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  quotient        8   16[COMRAM] unsigned long long 
  8062 ;;  counter         1   24[COMRAM] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  8    0[COMRAM] unsigned long long 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8072 ;;      Params:        16       0       0       0       0       0       0
  8073 ;;      Locals:         9       0       0       0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0
  8075 ;;      Totals:        25       0       0       0       0       0       0
  8076 ;;Total ram usage:       25 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    2
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_utoa
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text29
  8087  0034AA                     __ptext29:
  8088                           	opt callstack 0
  8089  0034AA                     ___lodiv:
  8090                           	opt callstack 0
  8091  0034AA  FFFF               	dw	65535	; assembler added errata NOP
  8092                           
  8093                           ;incstack = 0
  8094  0034AC  EE20  F011         	lfsr	2,___lodiv@quotient
  8095  0034B0  0E07               	movlw	7
  8096  0034B2                     u3121:
  8097  0034B2  6ADE               	clrf	postinc2,c
  8098  0034B4  06E8               	decf	wreg,f,c
  8099  0034B6  E2FD               	bc	u3121
  8100  0034B8  5009               	movf	___lodiv@divisor,w,c
  8101  0034BA  100A               	iorwf	___lodiv@divisor+1,w,c
  8102  0034BC  100B               	iorwf	___lodiv@divisor+2,w,c
  8103  0034BE  100C               	iorwf	___lodiv@divisor+3,w,c
  8104  0034C0  100D               	iorwf	___lodiv@divisor+4,w,c
  8105  0034C2  100E               	iorwf	___lodiv@divisor+5,w,c
  8106  0034C4  100F               	iorwf	___lodiv@divisor+6,w,c
  8107  0034C6  1010               	iorwf	___lodiv@divisor+7,w,c
  8108  0034C8  B4D8               	btfsc	status,2,c
  8109  0034CA  D04A               	goto	l1048
  8110  0034CC  0E01               	movlw	1
  8111  0034CE  6E19               	movwf	___lodiv@counter,c
  8112  0034D0  D00B               	goto	l3676
  8113  0034D2                     l3674:
  8114  0034D2  FFFF               	dw	65535	; assembler added errata NOP
  8115  0034D4  90D8               	bcf	status,0,c
  8116  0034D6  3609               	rlcf	___lodiv@divisor,f,c
  8117  0034D8  360A               	rlcf	___lodiv@divisor+1,f,c
  8118  0034DA  360B               	rlcf	___lodiv@divisor+2,f,c
  8119  0034DC  360C               	rlcf	___lodiv@divisor+3,f,c
  8120  0034DE  360D               	rlcf	___lodiv@divisor+4,f,c
  8121  0034E0  360E               	rlcf	___lodiv@divisor+5,f,c
  8122  0034E2  360F               	rlcf	___lodiv@divisor+6,f,c
  8123  0034E4  3610               	rlcf	___lodiv@divisor+7,f,c
  8124  0034E6  2A19               	incf	___lodiv@counter,f,c
  8125  0034E8                     l3676:
  8126  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  8127  0034EA  AE10               	btfss	___lodiv@divisor+7,7,c
  8128  0034EC  D7F2               	goto	l3674
  8129  0034EE                     u3140:
  8130  0034EE  FFFF               	dw	65535	; assembler added errata NOP
  8131  0034F0  90D8               	bcf	status,0,c
  8132  0034F2  3611               	rlcf	___lodiv@quotient,f,c
  8133  0034F4  3612               	rlcf	___lodiv@quotient+1,f,c
  8134  0034F6  3613               	rlcf	___lodiv@quotient+2,f,c
  8135  0034F8  3614               	rlcf	___lodiv@quotient+3,f,c
  8136  0034FA  3615               	rlcf	___lodiv@quotient+4,f,c
  8137  0034FC  3616               	rlcf	___lodiv@quotient+5,f,c
  8138  0034FE  3617               	rlcf	___lodiv@quotient+6,f,c
  8139  003500  3618               	rlcf	___lodiv@quotient+7,f,c
  8140  003502  5009               	movf	___lodiv@divisor,w,c
  8141  003504  5C01               	subwf	___lodiv@dividend,w,c
  8142  003506  500A               	movf	___lodiv@divisor+1,w,c
  8143  003508  5802               	subwfb	___lodiv@dividend+1,w,c
  8144  00350A  500B               	movf	___lodiv@divisor+2,w,c
  8145  00350C  5803               	subwfb	___lodiv@dividend+2,w,c
  8146  00350E  500C               	movf	___lodiv@divisor+3,w,c
  8147  003510  5804               	subwfb	___lodiv@dividend+3,w,c
  8148  003512  500D               	movf	___lodiv@divisor+4,w,c
  8149  003514  5805               	subwfb	___lodiv@dividend+4,w,c
  8150  003516  500E               	movf	___lodiv@divisor+5,w,c
  8151  003518  5806               	subwfb	___lodiv@dividend+5,w,c
  8152  00351A  500F               	movf	___lodiv@divisor+6,w,c
  8153  00351C  5807               	subwfb	___lodiv@dividend+6,w,c
  8154  00351E  5010               	movf	___lodiv@divisor+7,w,c
  8155  003520  5808               	subwfb	___lodiv@dividend+7,w,c
  8156  003522  A0D8               	btfss	status,0,c
  8157  003524  D011               	goto	l3686
  8158  003526  5009               	movf	___lodiv@divisor,w,c
  8159  003528  5E01               	subwf	___lodiv@dividend,f,c
  8160  00352A  500A               	movf	___lodiv@divisor+1,w,c
  8161  00352C  5A02               	subwfb	___lodiv@dividend+1,f,c
  8162  00352E  500B               	movf	___lodiv@divisor+2,w,c
  8163  003530  5A03               	subwfb	___lodiv@dividend+2,f,c
  8164  003532  500C               	movf	___lodiv@divisor+3,w,c
  8165  003534  5A04               	subwfb	___lodiv@dividend+3,f,c
  8166  003536  500D               	movf	___lodiv@divisor+4,w,c
  8167  003538  5A05               	subwfb	___lodiv@dividend+4,f,c
  8168  00353A  500E               	movf	___lodiv@divisor+5,w,c
  8169  00353C  5A06               	subwfb	___lodiv@dividend+5,f,c
  8170  00353E  500F               	movf	___lodiv@divisor+6,w,c
  8171  003540  5A07               	subwfb	___lodiv@dividend+6,f,c
  8172  003542  5010               	movf	___lodiv@divisor+7,w,c
  8173  003544  5A08               	subwfb	___lodiv@dividend+7,f,c
  8174  003546  8011               	bsf	___lodiv@quotient,0,c
  8175  003548                     l3686:
  8176  003548  FFFF               	dw	65535	; assembler added errata NOP
  8177  00354A  90D8               	bcf	status,0,c
  8178  00354C  3210               	rrcf	___lodiv@divisor+7,f,c
  8179  00354E  320F               	rrcf	___lodiv@divisor+6,f,c
  8180  003550  320E               	rrcf	___lodiv@divisor+5,f,c
  8181  003552  320D               	rrcf	___lodiv@divisor+4,f,c
  8182  003554  320C               	rrcf	___lodiv@divisor+3,f,c
  8183  003556  320B               	rrcf	___lodiv@divisor+2,f,c
  8184  003558  320A               	rrcf	___lodiv@divisor+1,f,c
  8185  00355A  3209               	rrcf	___lodiv@divisor,f,c
  8186  00355C  2E19               	decfsz	___lodiv@counter,f,c
  8187  00355E  D7C7               	goto	u3140
  8188  003560                     l1048:
  8189  003560  FFFF               	dw	65535	; assembler added errata NOP
  8190  003562  C011  F001         	movff	___lodiv@quotient,?___lodiv
  8191  003566  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  8192  00356A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  8193  00356E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  8194  003572  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  8195  003576  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  8196  00357A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  8197  00357E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  8198  003582  0012               	return		;funcret
  8199  003584  FFFF               	dw	65535	; errata NOP
  8200  003586                     __end_of___lodiv:
  8201                           	opt callstack 0
  8202                           
  8203 ;; *************** function _strncmp *****************
  8204 ;; Defined at:
  8205 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8208 ;;		 -> STR_2(3), STR_1(4), 
  8209 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8210 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  8211 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  8212 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  8213 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  8214 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  8215 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  8216 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  8217 ;;  n               2    4[COMRAM] unsigned int 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8220 ;;		 -> STR_145(3), STR_141(3), STR_136(3), STR_132(3), 
  8221 ;;		 -> STR_127(3), STR_123(3), STR_118(4), STR_114(4), 
  8222 ;;		 -> STR_109(3), STR_104(3), STR_99(3), STR_94(4), 
  8223 ;;		 -> STR_89(3), STR_84(3), STR_79(3), STR_74(4), 
  8224 ;;		 -> STR_69(3), STR_64(3), STR_59(3), STR_54(4), 
  8225 ;;		 -> STR_49(3), STR_45(3), STR_40(3), STR_36(3), 
  8226 ;;		 -> STR_31(3), STR_27(3), STR_22(4), STR_18(4), 
  8227 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8228 ;;		 -> STR_2(3), STR_1(4), 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  2    0[COMRAM] int 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8238 ;;      Params:         6       0       0       0       0       0       0
  8239 ;;      Locals:         4       0       0       0       0       0       0
  8240 ;;      Temps:          1       0       0       0       0       0       0
  8241 ;;      Totals:        11       0       0       0       0       0       0
  8242 ;;Total ram usage:       11 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    2
  8245 ;; This function calls:
  8246 ;;		Nothing
  8247 ;; This function is called by:
  8248 ;;		_vfpfcnvrt
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text30
  8253  003724                     __ptext30:
  8254                           	opt callstack 0
  8255  003724                     _strncmp:
  8256                           	opt callstack 0
  8257  003724  FFFF               	dw	65535	; assembler added errata NOP
  8258                           
  8259                           ;incstack = 0
  8260  003726  C001  F008         	movff	strncmp@_l,strncmp@l
  8261  00372A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8262  00372E  C003  F00A         	movff	strncmp@_r,strncmp@r
  8263  003732  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8264  003736  0605               	decf	strncmp@n,f,c
  8265  003738  A0D8               	btfss	status,0,c
  8266  00373A  0606               	decf	strncmp@n+1,f,c
  8267  00373C  2805               	incf	strncmp@n,w,c
  8268  00373E  E110               	bnz	l4036
  8269  003740  2806               	incf	strncmp@n+1,w,c
  8270  003742  A4D8               	btfss	status,2,c
  8271  003744  D00D               	goto	l4036
  8272  003746  0E00               	movlw	0
  8273  003748  6E02               	movwf	?_strncmp+1,c
  8274  00374A  0E00               	movlw	0
  8275  00374C  6E01               	movwf	?_strncmp,c
  8276  00374E  D048               	goto	l1416
  8277  003750                     l4034:
  8278  003750  FFFF               	dw	65535	; assembler added errata NOP
  8279  003752  4A08               	infsnz	strncmp@l,f,c
  8280  003754  2A09               	incf	strncmp@l+1,f,c
  8281  003756  4A0A               	infsnz	strncmp@r,f,c
  8282  003758  2A0B               	incf	strncmp@r+1,f,c
  8283  00375A  0605               	decf	strncmp@n,f,c
  8284  00375C  A0D8               	btfss	status,0,c
  8285  00375E  0606               	decf	strncmp@n+1,f,c
  8286  003760                     l4036:
  8287  003760  FFFF               	dw	65535	; assembler added errata NOP
  8288  003762  C008  FFF6         	movff	strncmp@l,tblptrl
  8289  003766  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8290  00376A                     	if	0	;tblptru may be non-zero
  8291  00376A                     	endif
  8292  00376A                     	if	0	;tblptru may be non-zero
  8293  00376A                     	endif
  8294  00376A  0008               	tblrd		*
  8295  00376C  FFFF               	dw	65535	; errata NOP
  8296  00376E  50F5               	movf	tablat,w,c
  8297  003770  0900               	iorlw	0
  8298  003772  B4D8               	btfsc	status,2,c
  8299  003774  D020               	goto	u3910
  8300  003776  C00A  FFF6         	movff	strncmp@r,tblptrl
  8301  00377A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8302  00377E                     	if	0	;tblptru may be non-zero
  8303  00377E                     	endif
  8304  00377E                     	if	0	;tblptru may be non-zero
  8305  00377E                     	endif
  8306  00377E  0008               	tblrd		*
  8307  003780  FFFF               	dw	65535	; errata NOP
  8308  003782  50F5               	movf	tablat,w,c
  8309  003784  0900               	iorlw	0
  8310  003786  B4D8               	btfsc	status,2,c
  8311  003788  D016               	goto	u3910
  8312  00378A  5005               	movf	strncmp@n,w,c
  8313  00378C  1006               	iorwf	strncmp@n+1,w,c
  8314  00378E  B4D8               	btfsc	status,2,c
  8315  003790  D012               	goto	u3910
  8316  003792  C008  FFF6         	movff	strncmp@l,tblptrl
  8317  003796  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8318  00379A                     	if	0	;tblptru may be non-zero
  8319  00379A                     	endif
  8320  00379A                     	if	0	;tblptru may be non-zero
  8321  00379A                     	endif
  8322  00379A  0008               	tblrd		*
  8323  00379C  FFFF               	dw	65535	; errata NOP
  8324  00379E  CFF5 F007          	movff	tablat,??_strncmp
  8325  0037A2  C00A  FFF6         	movff	strncmp@r,tblptrl
  8326  0037A6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8327  0037AA                     	if	0	;tblptru may be non-zero
  8328  0037AA                     	endif
  8329  0037AA                     	if	0	;tblptru may be non-zero
  8330  0037AA                     	endif
  8331  0037AA  0008               	tblrd		*
  8332  0037AC  FFFF               	dw	65535	; errata NOP
  8333  0037AE  50F5               	movf	tablat,w,c
  8334  0037B0  1807               	xorwf	??_strncmp,w,c
  8335  0037B2  B4D8               	btfsc	status,2,c
  8336  0037B4  D7CD               	goto	l4034
  8337  0037B6                     u3910:
  8338  0037B6  FFFF               	dw	65535	; assembler added errata NOP
  8339  0037B8  C008  FFF6         	movff	strncmp@l,tblptrl
  8340  0037BC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8341  0037C0                     	if	0	;tblptru may be non-zero
  8342  0037C0                     	endif
  8343  0037C0                     	if	0	;tblptru may be non-zero
  8344  0037C0                     	endif
  8345  0037C0  0008               	tblrd		*
  8346  0037C2  FFFF               	dw	65535	; errata NOP
  8347  0037C4  CFF5 F007          	movff	tablat,??_strncmp
  8348  0037C8  C00A  FFF6         	movff	strncmp@r,tblptrl
  8349  0037CC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8350  0037D0                     	if	0	;tblptru may be non-zero
  8351  0037D0                     	endif
  8352  0037D0                     	if	0	;tblptru may be non-zero
  8353  0037D0                     	endif
  8354  0037D0  0008               	tblrd		*
  8355  0037D2  FFFF               	dw	65535	; errata NOP
  8356  0037D4  50F5               	movf	tablat,w,c
  8357  0037D6  5C07               	subwf	??_strncmp,w,c
  8358  0037D8  6E01               	movwf	?_strncmp,c
  8359  0037DA  6A02               	clrf	?_strncmp+1,c
  8360  0037DC  A0D8               	btfss	status,0,c
  8361  0037DE  0602               	decf	?_strncmp+1,f,c
  8362  0037E0                     l1416:
  8363  0037E0  FFFF               	dw	65535	; assembler added errata NOP
  8364  0037E2  0012               	return		;funcret
  8365  0037E4  FFFF               	dw	65535	; errata NOP
  8366  0037E6                     __end_of_strncmp:
  8367                           	opt callstack 0
  8368                           
  8369 ;; *************** function _stoa *****************
  8370 ;; Defined at:
  8371 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8374 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8375 ;;  s               2   11[COMRAM] PTR unsigned char 
  8376 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8379 ;;  l               2   29[COMRAM] int 
  8380 ;;  p               2   27[COMRAM] int 
  8381 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8382 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  8383 ;;  w               2   23[COMRAM] int 
  8384 ;;  i               2   21[COMRAM] int 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  2    9[COMRAM] int 
  8387 ;; Registers used:
  8388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8394 ;;      Params:         4       0       0       0       0       0       0
  8395 ;;      Locals:        17       0       0       0       0       0       0
  8396 ;;      Temps:          1       0       0       0       0       0       0
  8397 ;;      Totals:        22       0       0       0       0       0       0
  8398 ;;Total ram usage:       22 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    4
  8401 ;; This function calls:
  8402 ;;		_fputc
  8403 ;;		_strlen
  8404 ;; This function is called by:
  8405 ;;		_vfpfcnvrt
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text31
  8410  00322E                     __ptext31:
  8411                           	opt callstack 0
  8412  00322E                     _stoa:
  8413                           	opt callstack 0
  8414  00322E  FFFF               	dw	65535	; assembler added errata NOP
  8415                           
  8416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8417                           
  8418                           ;incstack = 0
  8419  003230  EE20  F0F5         	lfsr	2,stoa@F1152
  8420  003234  EE10  F00F         	lfsr	1,stoa@nuls
  8421  003238  0E06               	movlw	6
  8422  00323A                     u3471:
  8423  00323A  CFDB FFE3          	movff	plusw2,plusw1
  8424  00323E  06E8               	decf	wreg,f,c
  8425  003240  E2FC               	bc	u3471
  8426                           
  8427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8428  003242  C00C  F01A         	movff	stoa@s,stoa@cp
  8429  003246  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8430                           
  8431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8432  00324A  501A               	movf	stoa@cp,w,c
  8433  00324C  101B               	iorwf	stoa@cp+1,w,c
  8434  00324E  A4D8               	btfss	status,2,c
  8435  003250  D004               	goto	l3850
  8436                           
  8437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8438  003252  0E0F               	movlw	low stoa@nuls
  8439  003254  6E1A               	movwf	stoa@cp,c
  8440  003256  0E00               	movlw	high stoa@nuls
  8441  003258  6E1B               	movwf	stoa@cp+1,c
  8442  00325A                     l3850:
  8443  00325A  FFFF               	dw	65535	; assembler added errata NOP
  8444                           
  8445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8446  00325C  C01A  F001         	movff	stoa@cp,strlen@s
  8447  003260  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8448  003264  ECE2  F01F         	call	_strlen	;wreg free
  8449  003268  C001  F01E         	movff	?_strlen,stoa@l
  8450  00326C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8451                           
  8452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8453  003270  C0CE  F01C         	movff	_prec,stoa@p
  8454  003274  C0CF  F01D         	movff	_prec+1,stoa@p+1
  8455                           
  8456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8457  003278  BE1D               	btfsc	stoa@p+1,7,c
  8458  00327A  D00E               	goto	l457
  8459  00327C  501E               	movf	stoa@l,w,c
  8460  00327E  5C1C               	subwf	stoa@p,w,c
  8461  003280  501D               	movf	stoa@p+1,w,c
  8462  003282  0A80               	xorlw	128
  8463  003284  6E0E               	movwf	??_stoa& (0+255),c
  8464  003286  501F               	movf	stoa@l+1,w,c
  8465  003288  0A80               	xorlw	128
  8466  00328A  580E               	subwfb	??_stoa& (0+255),w,c
  8467  00328C  B0D8               	btfsc	status,0,c
  8468  00328E  D004               	goto	l457
  8469  003290  C01C  F01E         	movff	stoa@p,stoa@l
  8470  003294  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8471  003298                     l457:
  8472  003298  FFFF               	dw	65535	; assembler added errata NOP
  8473                           
  8474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8475  00329A  C01E  F01C         	movff	stoa@l,stoa@p
  8476  00329E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8477                           
  8478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8479  0032A2  C0CC  F018         	movff	_width,stoa@w
  8480  0032A6  C0CD  F019         	movff	_width+1,stoa@w+1
  8481                           
  8482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8483  0032AA  0100               	movlb	0	; () banked
  8484  0032AC  A1D0               	btfss	_flags& (0+255),0,b
  8485  0032AE  D00E               	goto	l3864
  8486  0032B0  D018               	goto	u3520
  8487  0032B2                     l3860:
  8488  0032B2  FFFF               	dw	65535	; assembler added errata NOP
  8489                           
  8490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8491  0032B4  0E00               	movlw	0
  8492  0032B6  6E02               	movwf	fputc@c+1,c
  8493  0032B8  0E20               	movlw	32
  8494  0032BA  6E01               	movwf	fputc@c,c
  8495  0032BC  C00A  F003         	movff	stoa@fp,fputc@fp
  8496  0032C0  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8497  0032C4  EC51  F01C         	call	_fputc	;wreg free
  8498                           
  8499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8500  0032C8  4A1E               	infsnz	stoa@l,f,c
  8501  0032CA  2A1F               	incf	stoa@l+1,f,c
  8502  0032CC                     l3864:
  8503  0032CC  FFFF               	dw	65535	; assembler added errata NOP
  8504                           
  8505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8506  0032CE  5018               	movf	stoa@w,w,c
  8507  0032D0  5C1E               	subwf	stoa@l,w,c
  8508  0032D2  501F               	movf	stoa@l+1,w,c
  8509  0032D4  0A80               	xorlw	128
  8510  0032D6  6E0E               	movwf	??_stoa& (0+255),c
  8511  0032D8  5019               	movf	stoa@w+1,w,c
  8512  0032DA  0A80               	xorlw	128
  8513  0032DC  580E               	subwfb	??_stoa& (0+255),w,c
  8514  0032DE  A0D8               	btfss	status,0,c
  8515  0032E0  D7E8               	goto	l3860
  8516  0032E2                     u3520:
  8517  0032E2  FFFF               	dw	65535	; assembler added errata NOP
  8518                           
  8519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8520  0032E4  0E00               	movlw	0
  8521  0032E6  6E17               	movwf	stoa@i+1,c
  8522  0032E8  0E00               	movlw	0
  8523  0032EA  6E16               	movwf	stoa@i,c
  8524                           
  8525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8526  0032EC  D014               	goto	l3874
  8527  0032EE                     l3868:
  8528  0032EE  FFFF               	dw	65535	; assembler added errata NOP
  8529                           
  8530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8531  0032F0  C01A  FFD9         	movff	stoa@cp,fsr2l
  8532  0032F4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8533  0032F8  50DF               	movf	indf2,w,c
  8534  0032FA  6E0E               	movwf	??_stoa& (0+255),c
  8535  0032FC  500E               	movf	??_stoa,w,c
  8536  0032FE  6E01               	movwf	fputc@c,c
  8537  003300  6A02               	clrf	fputc@c+1,c
  8538  003302  C00A  F003         	movff	stoa@fp,fputc@fp
  8539  003306  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8540  00330A  EC51  F01C         	call	_fputc	;wreg free
  8541                           
  8542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8543  00330E  4A1A               	infsnz	stoa@cp,f,c
  8544  003310  2A1B               	incf	stoa@cp+1,f,c
  8545                           
  8546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8547  003312  4A16               	infsnz	stoa@i,f,c
  8548  003314  2A17               	incf	stoa@i+1,f,c
  8549  003316                     l3874:
  8550  003316  FFFF               	dw	65535	; assembler added errata NOP
  8551                           
  8552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8553  003318  501C               	movf	stoa@p,w,c
  8554  00331A  5C16               	subwf	stoa@i,w,c
  8555  00331C  5017               	movf	stoa@i+1,w,c
  8556  00331E  0A80               	xorlw	128
  8557  003320  6E0E               	movwf	??_stoa& (0+255),c
  8558  003322  501D               	movf	stoa@p+1,w,c
  8559  003324  0A80               	xorlw	128
  8560  003326  580E               	subwfb	??_stoa& (0+255),w,c
  8561  003328  A0D8               	btfss	status,0,c
  8562  00332A  D7E1               	goto	l3868
  8563                           
  8564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8565  00332C  0100               	movlb	0	; () banked
  8566  00332E  B1D0               	btfsc	_flags& (0+255),0,b
  8567  003330  D00E               	goto	l3882
  8568  003332  D018               	goto	u3550
  8569  003334                     l3878:
  8570  003334  FFFF               	dw	65535	; assembler added errata NOP
  8571                           
  8572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8573  003336  0E00               	movlw	0
  8574  003338  6E02               	movwf	fputc@c+1,c
  8575  00333A  0E20               	movlw	32
  8576  00333C  6E01               	movwf	fputc@c,c
  8577  00333E  C00A  F003         	movff	stoa@fp,fputc@fp
  8578  003342  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8579  003346  EC51  F01C         	call	_fputc	;wreg free
  8580                           
  8581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8582  00334A  4A1E               	infsnz	stoa@l,f,c
  8583  00334C  2A1F               	incf	stoa@l+1,f,c
  8584  00334E                     l3882:
  8585  00334E  FFFF               	dw	65535	; assembler added errata NOP
  8586                           
  8587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8588  003350  5018               	movf	stoa@w,w,c
  8589  003352  5C1E               	subwf	stoa@l,w,c
  8590  003354  501F               	movf	stoa@l+1,w,c
  8591  003356  0A80               	xorlw	128
  8592  003358  6E0E               	movwf	??_stoa& (0+255),c
  8593  00335A  5019               	movf	stoa@w+1,w,c
  8594  00335C  0A80               	xorlw	128
  8595  00335E  580E               	subwfb	??_stoa& (0+255),w,c
  8596  003360  A0D8               	btfss	status,0,c
  8597  003362  D7E8               	goto	l3878
  8598  003364                     u3550:
  8599  003364  FFFF               	dw	65535	; assembler added errata NOP
  8600                           
  8601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8602                           
  8603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  8604  003366  C01E  F00A         	movff	stoa@l,?_stoa
  8605  00336A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8606  00336E  0012               	return		;funcret
  8607  003370  FFFF               	dw	65535	; errata NOP
  8608  003372                     __end_of_stoa:
  8609                           	opt callstack 0
  8610                           
  8611 ;; *************** function _otoa *****************
  8612 ;; Defined at:
  8613 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8616 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8617 ;;  d               8   29[COMRAM] unsigned long long 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  n               8   51[COMRAM] unsigned long long 
  8620 ;;  i               2   59[COMRAM] int 
  8621 ;;  w               2   49[COMRAM] int 
  8622 ;;  t               2   47[COMRAM] int 
  8623 ;;  p               2   45[COMRAM] int 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  2   27[COMRAM] int 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8633 ;;      Params:        10       0       0       0       0       0       0
  8634 ;;      Locals:        16       0       0       0       0       0       0
  8635 ;;      Temps:          8       0       0       0       0       0       0
  8636 ;;      Totals:        34       0       0       0       0       0       0
  8637 ;;Total ram usage:       34 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    6
  8640 ;; This function calls:
  8641 ;;		_pad
  8642 ;; This function is called by:
  8643 ;;		_vfpfcnvrt
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text32
  8648  002C76                     __ptext32:
  8649                           	opt callstack 0
  8650  002C76                     _otoa:
  8651                           	opt callstack 0
  8652  002C76  FFFF               	dw	65535	; assembler added errata NOP
  8653                           
  8654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  8655                           
  8656                           ;incstack = 0
  8657  002C78  0100               	movlb	0	; () banked
  8658  002C7A  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  8662  002C7C  93D0               	bcf	_flags& (0+255),1,b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  8666  002C7E  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  8667  002C80  D005               	goto	u3380
  8668  002C82  51CF               	movf	(_prec+1)& (0+255),w,b
  8669  002C84  E109               	bnz	l437
  8670  002C86  05CE               	decf	_prec& (0+255),w,b
  8671  002C88  B0D8               	btfsc	status,0,c
  8672  002C8A  D006               	goto	l437
  8673  002C8C                     u3380:
  8674  002C8C  FFFF               	dw	65535	; assembler added errata NOP
  8675                           
  8676                           ; BSR set to: 0
  8677  002C8E  0E00               	movlw	0
  8678  002C90  6E2F               	movwf	otoa@p+1,c
  8679  002C92  0E01               	movlw	1
  8680  002C94  6E2E               	movwf	otoa@p,c
  8681  002C96  D005               	goto	l439
  8682  002C98                     l437:
  8683  002C98  FFFF               	dw	65535	; assembler added errata NOP
  8684                           
  8685                           ; BSR set to: 0
  8686  002C9A  C0CE  F02E         	movff	_prec,otoa@p
  8687  002C9E  C0CF  F02F         	movff	_prec+1,otoa@p+1
  8688  002CA2                     l439:
  8689  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  8693  002CA4  C0CC  F032         	movff	_width,otoa@w
  8694  002CA8  C0CD  F033         	movff	_width+1,otoa@w+1
  8695                           
  8696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  8697  002CAC  C01E  F034         	movff	otoa@d,otoa@n
  8698  002CB0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8699  002CB4  C020  F036         	movff	otoa@d+2,otoa@n+2
  8700  002CB8  C021  F037         	movff	otoa@d+3,otoa@n+3
  8701  002CBC  C022  F038         	movff	otoa@d+4,otoa@n+4
  8702  002CC0  C023  F039         	movff	otoa@d+5,otoa@n+5
  8703  002CC4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8704  002CC8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  8708  002CCC  0E00               	movlw	0
  8709  002CCE  6E3D               	movwf	otoa@i+1,c
  8710  002CD0  0E1F               	movlw	31
  8711  002CD2  6E3C               	movwf	otoa@i,c
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  8715  002CD4  0E00               	movlw	0
  8716  002CD6  6FF4               	movwf	(_dbuf+31)& (0+255),b
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  8720  002CD8  0E00               	movlw	0
  8721  002CDA  6E31               	movwf	otoa@t+1,c
  8722  002CDC  0E00               	movlw	0
  8723  002CDE  6E30               	movwf	otoa@t,c
  8724                           
  8725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8726  002CE0  D046               	goto	l3820
  8727  002CE2                     l3808:
  8728  002CE2  FFFF               	dw	65535	; assembler added errata NOP
  8729                           
  8730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  8731  002CE4  063C               	decf	otoa@i,f,c
  8732  002CE6  A0D8               	btfss	status,0,c
  8733  002CE8  063D               	decf	otoa@i+1,f,c
  8734                           
  8735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  8736  002CEA  0E07               	movlw	7
  8737  002CEC  1434               	andwf	otoa@n,w,c
  8738  002CEE  6E30               	movwf	otoa@t,c
  8739  002CF0  6A31               	clrf	otoa@t+1,c
  8740                           
  8741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  8742  002CF2  0ED5               	movlw	low _dbuf
  8743  002CF4  243C               	addwf	otoa@i,w,c
  8744  002CF6  6ED9               	movwf	fsr2l,c
  8745  002CF8  0E00               	movlw	high _dbuf
  8746  002CFA  203D               	addwfc	otoa@i+1,w,c
  8747  002CFC  6EDA               	movwf	fsr2h,c
  8748  002CFE  5030               	movf	otoa@t,w,c
  8749  002D00  0F30               	addlw	48
  8750  002D02  6EDF               	movwf	indf2,c
  8751                           
  8752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  8753  002D04  062E               	decf	otoa@p,f,c
  8754  002D06  A0D8               	btfss	status,0,c
  8755  002D08  062F               	decf	otoa@p+1,f,c
  8756                           
  8757                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  8758  002D0A  0632               	decf	otoa@w,f,c
  8759  002D0C  A0D8               	btfss	status,0,c
  8760  002D0E  0633               	decf	otoa@w+1,f,c
  8761                           
  8762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  8763  002D10  C034  F026         	movff	otoa@n,??_otoa
  8764  002D14  C035  F027         	movff	otoa@n+1,??_otoa+1
  8765  002D18  C036  F028         	movff	otoa@n+2,??_otoa+2
  8766  002D1C  C037  F029         	movff	otoa@n+3,??_otoa+3
  8767  002D20  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8768  002D24  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8769  002D28  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8770  002D2C  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8771  002D30  0E04               	movlw	4
  8772  002D32  D00A               	goto	u3390
  8773  002D34                     u3395:
  8774  002D34  FFFF               	dw	65535	; assembler added errata NOP
  8775  002D36  90D8               	bcf	status,0,c
  8776  002D38  322D               	rrcf	??_otoa+7,f,c
  8777  002D3A  322C               	rrcf	??_otoa+6,f,c
  8778  002D3C  322B               	rrcf	??_otoa+5,f,c
  8779  002D3E  322A               	rrcf	??_otoa+4,f,c
  8780  002D40  3229               	rrcf	??_otoa+3,f,c
  8781  002D42  3228               	rrcf	??_otoa+2,f,c
  8782  002D44  3227               	rrcf	??_otoa+1,f,c
  8783  002D46  3226               	rrcf	??_otoa,f,c
  8784  002D48                     u3390:
  8785  002D48  FFFF               	dw	65535	; assembler added errata NOP
  8786  002D4A  2EE8               	decfsz	wreg,f,c
  8787  002D4C  D7F3               	goto	u3395
  8788  002D4E  C026  F034         	movff	??_otoa,otoa@n
  8789  002D52  C027  F035         	movff	??_otoa+1,otoa@n+1
  8790  002D56  C028  F036         	movff	??_otoa+2,otoa@n+2
  8791  002D5A  C029  F037         	movff	??_otoa+3,otoa@n+3
  8792  002D5E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8793  002D62  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8794  002D66  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8795  002D6A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8796  002D6E                     l3820:
  8797  002D6E  FFFF               	dw	65535	; assembler added errata NOP
  8798                           
  8799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8800  002D70  BE3D               	btfsc	otoa@i+1,7,c
  8801  002D72  D021               	goto	u3440
  8802  002D74  503D               	movf	otoa@i+1,w,c
  8803  002D76  E103               	bnz	u3400
  8804  002D78  043C               	decf	otoa@i,w,c
  8805  002D7A  A0D8               	btfss	status,0,c
  8806  002D7C  D01C               	goto	u3440
  8807  002D7E                     u3400:
  8808  002D7E  5034               	movf	otoa@n,w,c
  8809  002D80  1035               	iorwf	otoa@n+1,w,c
  8810  002D82  1036               	iorwf	otoa@n+2,w,c
  8811  002D84  1037               	iorwf	otoa@n+3,w,c
  8812  002D86  1038               	iorwf	otoa@n+4,w,c
  8813  002D88  1039               	iorwf	otoa@n+5,w,c
  8814  002D8A  103A               	iorwf	otoa@n+6,w,c
  8815  002D8C  103B               	iorwf	otoa@n+7,w,c
  8816  002D8E  A4D8               	btfss	status,2,c
  8817  002D90  D7A8               	goto	l3808
  8818  002D92  BE2F               	btfsc	otoa@p+1,7,c
  8819  002D94  D005               	goto	u3420
  8820  002D96  502F               	movf	otoa@p+1,w,c
  8821  002D98  E1A4               	bnz	l3808
  8822  002D9A  042E               	decf	otoa@p,w,c
  8823  002D9C  B0D8               	btfsc	status,0,c
  8824  002D9E  D7A1               	goto	l3808
  8825  002DA0                     u3420:
  8826  002DA0  FFFF               	dw	65535	; assembler added errata NOP
  8827  002DA2  BE33               	btfsc	otoa@w+1,7,c
  8828  002DA4  D008               	goto	u3440
  8829  002DA6  5033               	movf	otoa@w+1,w,c
  8830  002DA8  E103               	bnz	u3430
  8831  002DAA  0432               	decf	otoa@w,w,c
  8832  002DAC  A0D8               	btfss	status,0,c
  8833  002DAE  D003               	goto	u3440
  8834  002DB0                     u3430:
  8835  002DB0  0100               	movlb	0	; () banked
  8836  002DB2  B3D0               	btfsc	_flags& (0+255),1,b
  8837  002DB4  D796               	goto	l3808
  8838  002DB6                     u3440:
  8839  002DB6  FFFF               	dw	65535	; assembler added errata NOP
  8840                           
  8841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  8842  002DB8  0100               	movlb	0	; () banked
  8843  002DBA  A9D0               	btfss	_flags& (0+255),4,b
  8844  002DBC  D012               	goto	l3838
  8845                           
  8846                           ; BSR set to: 0
  8847  002DBE  5030               	movf	otoa@t,w,c
  8848  002DC0  1031               	iorwf	otoa@t+1,w,c
  8849  002DC2  B4D8               	btfsc	status,2,c
  8850  002DC4  D00E               	goto	l3838
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  8854  002DC6  063C               	decf	otoa@i,f,c
  8855  002DC8  A0D8               	btfss	status,0,c
  8856  002DCA  063D               	decf	otoa@i+1,f,c
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  8860  002DCC  0ED5               	movlw	low _dbuf
  8861  002DCE  243C               	addwf	otoa@i,w,c
  8862  002DD0  6ED9               	movwf	fsr2l,c
  8863  002DD2  0E00               	movlw	high _dbuf
  8864  002DD4  203D               	addwfc	otoa@i+1,w,c
  8865  002DD6  6EDA               	movwf	fsr2h,c
  8866  002DD8  0E30               	movlw	48
  8867  002DDA  6EDF               	movwf	indf2,c
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  8871  002DDC  0632               	decf	otoa@w,f,c
  8872  002DDE  A0D8               	btfss	status,0,c
  8873  002DE0  0633               	decf	otoa@w+1,f,c
  8874  002DE2                     l3838:
  8875  002DE2  FFFF               	dw	65535	; assembler added errata NOP
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  8879  002DE4  C01C  F011         	movff	otoa@fp,pad@fp
  8880  002DE8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8881  002DEC  0ED5               	movlw	low _dbuf
  8882  002DEE  243C               	addwf	otoa@i,w,c
  8883  002DF0  6E13               	movwf	pad@buf,c
  8884  002DF2  0E00               	movlw	high _dbuf
  8885  002DF4  203D               	addwfc	otoa@i+1,w,c
  8886  002DF6  6E14               	movwf	pad@buf+1,c
  8887  002DF8  C032  F015         	movff	otoa@w,pad@p
  8888  002DFC  C033  F016         	movff	otoa@w+1,pad@p+1
  8889  002E00  ECA7  F01C         	call	_pad	;wreg free
  8890  002E04  C011  F01C         	movff	?_pad,?_otoa
  8891  002E08  C012  F01D         	movff	?_pad+1,?_otoa+1
  8892  002E0C  0012               	return		;funcret
  8893  002E0E  FFFF               	dw	65535	; errata NOP
  8894  002E10                     __end_of_otoa:
  8895                           	opt callstack 0
  8896                           
  8897 ;; *************** function _dtoa *****************
  8898 ;; Defined at:
  8899 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8902 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  8903 ;;  d               8   29[COMRAM] long long 
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  n               8   53[COMRAM] long long 
  8906 ;;  i               2   61[COMRAM] int 
  8907 ;;  s               2   51[COMRAM] int 
  8908 ;;  w               2   49[COMRAM] int 
  8909 ;;  p               2   47[COMRAM] int 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  2   27[COMRAM] int 
  8912 ;; Registers used:
  8913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8919 ;;      Params:        10       0       0       0       0       0       0
  8920 ;;      Locals:        18       0       0       0       0       0       0
  8921 ;;      Temps:          8       0       0       0       0       0       0
  8922 ;;      Totals:        36       0       0       0       0       0       0
  8923 ;;Total ram usage:       36 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    6
  8926 ;; This function calls:
  8927 ;;		___aodiv
  8928 ;;		___aomod
  8929 ;;		_abs
  8930 ;;		_pad
  8931 ;; This function is called by:
  8932 ;;		_vfpfcnvrt
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           	psect	text33
  8937  00222C                     __ptext33:
  8938                           	opt callstack 0
  8939  00222C                     _dtoa:
  8940                           	opt callstack 0
  8941  00222C  FFFF               	dw	65535	; assembler added errata NOP
  8942                           
  8943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8944                           
  8945                           ;incstack = 0
  8946  00222E  C01E  F036         	movff	dtoa@d,dtoa@n
  8947  002232  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8948  002236  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8949  00223A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8950  00223E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8951  002242  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8952  002246  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8953  00224A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8954                           
  8955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8956  00224E  AE3D               	btfss	dtoa@n+7,7,c
  8957  002250  D002               	goto	u3220
  8958  002252  0E01               	movlw	1
  8959  002254  D002               	goto	u3230
  8960  002256                     u3220:
  8961  002256  FFFF               	dw	65535	; assembler added errata NOP
  8962  002258  0E00               	movlw	0
  8963  00225A                     u3230:
  8964  00225A  FFFF               	dw	65535	; assembler added errata NOP
  8965  00225C  6E34               	movwf	dtoa@s,c
  8966  00225E  6A35               	clrf	dtoa@s+1,c
  8967                           
  8968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8969  002260  5034               	movf	dtoa@s,w,c
  8970  002262  1035               	iorwf	dtoa@s+1,w,c
  8971  002264  B4D8               	btfsc	status,2,c
  8972  002266  D010               	goto	l3738
  8973                           
  8974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8975  002268  1E3D               	comf	dtoa@n+7,f,c
  8976  00226A  1E3C               	comf	dtoa@n+6,f,c
  8977  00226C  1E3B               	comf	dtoa@n+5,f,c
  8978  00226E  1E3A               	comf	dtoa@n+4,f,c
  8979  002270  1E39               	comf	dtoa@n+3,f,c
  8980  002272  1E38               	comf	dtoa@n+2,f,c
  8981  002274  1E37               	comf	dtoa@n+1,f,c
  8982  002276  6C36               	negf	dtoa@n,c
  8983  002278  0E00               	movlw	0
  8984  00227A  2237               	addwfc	dtoa@n+1,f,c
  8985  00227C  2238               	addwfc	dtoa@n+2,f,c
  8986  00227E  2239               	addwfc	dtoa@n+3,f,c
  8987  002280  223A               	addwfc	dtoa@n+4,f,c
  8988  002282  223B               	addwfc	dtoa@n+5,f,c
  8989  002284  223C               	addwfc	dtoa@n+6,f,c
  8990  002286  223D               	addwfc	dtoa@n+7,f,c
  8991  002288                     l3738:
  8992  002288  FFFF               	dw	65535	; assembler added errata NOP
  8993                           
  8994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8995  00228A  0100               	movlb	0	; () banked
  8996  00228C  AFCF               	btfss	(_prec+1)& (0+255),7,b
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9000  00228E  93D0               	bcf	_flags& (0+255),1,b
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9004  002290  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  9005  002292  D005               	goto	u3260
  9006  002294  51CF               	movf	(_prec+1)& (0+255),w,b
  9007  002296  E109               	bnz	l412
  9008  002298  05CE               	decf	_prec& (0+255),w,b
  9009  00229A  B0D8               	btfsc	status,0,c
  9010  00229C  D006               	goto	l412
  9011  00229E                     u3260:
  9012  00229E  FFFF               	dw	65535	; assembler added errata NOP
  9013                           
  9014                           ; BSR set to: 0
  9015  0022A0  0E00               	movlw	0
  9016  0022A2  6E31               	movwf	dtoa@p+1,c
  9017  0022A4  0E01               	movlw	1
  9018  0022A6  6E30               	movwf	dtoa@p,c
  9019  0022A8  D005               	goto	l414
  9020  0022AA                     l412:
  9021  0022AA  FFFF               	dw	65535	; assembler added errata NOP
  9022                           
  9023                           ; BSR set to: 0
  9024  0022AC  C0CE  F030         	movff	_prec,dtoa@p
  9025  0022B0  C0CF  F031         	movff	_prec+1,dtoa@p+1
  9026  0022B4                     l414:
  9027  0022B4  FFFF               	dw	65535	; assembler added errata NOP
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  9031  0022B6  C0CC  F032         	movff	_width,dtoa@w
  9032  0022BA  C0CD  F033         	movff	_width+1,dtoa@w+1
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  9036  0022BE  5034               	movf	dtoa@s,w,c
  9037  0022C0  1035               	iorwf	dtoa@s+1,w,c
  9038  0022C2  A4D8               	btfss	status,2,c
  9039  0022C4  D002               	goto	u3280
  9040                           
  9041                           ; BSR set to: 0
  9042  0022C6  A5D0               	btfss	_flags& (0+255),2,b
  9043  0022C8  D004               	goto	l3752
  9044  0022CA                     u3280:
  9045  0022CA  FFFF               	dw	65535	; assembler added errata NOP
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  9049  0022CC  0632               	decf	dtoa@w,f,c
  9050  0022CE  A0D8               	btfss	status,0,c
  9051  0022D0  0633               	decf	dtoa@w+1,f,c
  9052  0022D2                     l3752:
  9053  0022D2  FFFF               	dw	65535	; assembler added errata NOP
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  9057  0022D4  0E00               	movlw	0
  9058  0022D6  6E3F               	movwf	dtoa@i+1,c
  9059  0022D8  0E1F               	movlw	31
  9060  0022DA  6E3E               	movwf	dtoa@i,c
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  9064  0022DC  0E00               	movlw	0
  9065  0022DE  6FF4               	movwf	(_dbuf+31)& (0+255),b
  9066                           
  9067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9068  0022E0  D07D               	goto	l3766
  9069  0022E2                     l3756:
  9070  0022E2  FFFF               	dw	65535	; assembler added errata NOP
  9071                           
  9072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  9073  0022E4  063E               	decf	dtoa@i,f,c
  9074  0022E6  A0D8               	btfss	status,0,c
  9075  0022E8  063F               	decf	dtoa@i+1,f,c
  9076                           
  9077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  9078  0022EA  0ED5               	movlw	low _dbuf
  9079  0022EC  243E               	addwf	dtoa@i,w,c
  9080  0022EE  6ED9               	movwf	fsr2l,c
  9081  0022F0  0E00               	movlw	high _dbuf
  9082  0022F2  203F               	addwfc	dtoa@i+1,w,c
  9083  0022F4  6EDA               	movwf	fsr2h,c
  9084  0022F6  C036  F001         	movff	dtoa@n,___aomod@dividend
  9085  0022FA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9086  0022FE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9087  002302  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9088  002306  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9089  00230A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9090  00230E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9091  002312  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9092  002316  0E0A               	movlw	10
  9093  002318  6E09               	movwf	___aomod@divisor,c
  9094  00231A  0E00               	movlw	0
  9095  00231C  6E0A               	movwf	___aomod@divisor+1,c
  9096  00231E  0E00               	movlw	0
  9097  002320  6E0B               	movwf	___aomod@divisor+2,c
  9098  002322  0E00               	movlw	0
  9099  002324  6E0C               	movwf	___aomod@divisor+3,c
  9100  002326  0E00               	movlw	0
  9101  002328  6E0D               	movwf	___aomod@divisor+4,c
  9102  00232A  0E00               	movlw	0
  9103  00232C  6E0E               	movwf	___aomod@divisor+5,c
  9104  00232E  0E00               	movlw	0
  9105  002330  6E0F               	movwf	___aomod@divisor+6,c
  9106  002332  0E00               	movlw	0
  9107  002334  6E10               	movwf	___aomod@divisor+7,c
  9108  002336  ECB9  F019         	call	___aomod	;wreg free
  9109  00233A  C001  F026         	movff	?___aomod,??_dtoa
  9110  00233E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9111  002342  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9112  002346  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9113  00234A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9114  00234E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9115  002352  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9116  002356  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9117  00235A  C026  F013         	movff	??_dtoa,abs@a
  9118  00235E  C028  F014         	movff	??_dtoa+2,abs@a+1
  9119  002362  EC70  F01F         	call	_abs	;wreg free
  9120  002366  5013               	movf	?_abs,w,c
  9121  002368  0F30               	addlw	48
  9122  00236A  6EDF               	movwf	indf2,c
  9123                           
  9124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  9125  00236C  0630               	decf	dtoa@p,f,c
  9126  00236E  A0D8               	btfss	status,0,c
  9127  002370  0631               	decf	dtoa@p+1,f,c
  9128                           
  9129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  9130  002372  0632               	decf	dtoa@w,f,c
  9131  002374  A0D8               	btfss	status,0,c
  9132  002376  0633               	decf	dtoa@w+1,f,c
  9133                           
  9134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  9135  002378  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9136  00237C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9137  002380  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9138  002384  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9139  002388  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9140  00238C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9141  002390  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9142  002394  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9143  002398  0E0A               	movlw	10
  9144  00239A  6E09               	movwf	___aodiv@divisor,c
  9145  00239C  0E00               	movlw	0
  9146  00239E  6E0A               	movwf	___aodiv@divisor+1,c
  9147  0023A0  0E00               	movlw	0
  9148  0023A2  6E0B               	movwf	___aodiv@divisor+2,c
  9149  0023A4  0E00               	movlw	0
  9150  0023A6  6E0C               	movwf	___aodiv@divisor+3,c
  9151  0023A8  0E00               	movlw	0
  9152  0023AA  6E0D               	movwf	___aodiv@divisor+4,c
  9153  0023AC  0E00               	movlw	0
  9154  0023AE  6E0E               	movwf	___aodiv@divisor+5,c
  9155  0023B0  0E00               	movlw	0
  9156  0023B2  6E0F               	movwf	___aodiv@divisor+6,c
  9157  0023B4  0E00               	movlw	0
  9158  0023B6  6E10               	movwf	___aodiv@divisor+7,c
  9159  0023B8  EC69  F018         	call	___aodiv	;wreg free
  9160  0023BC  C001  F036         	movff	?___aodiv,dtoa@n
  9161  0023C0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9162  0023C4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9163  0023C8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9164  0023CC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9165  0023D0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9166  0023D4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9167  0023D8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9168  0023DC                     l3766:
  9169  0023DC  FFFF               	dw	65535	; assembler added errata NOP
  9170                           
  9171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9172  0023DE  BE3F               	btfsc	dtoa@i+1,7,c
  9173  0023E0  D021               	goto	u3330
  9174  0023E2  503F               	movf	dtoa@i+1,w,c
  9175  0023E4  E103               	bnz	u3290
  9176  0023E6  043E               	decf	dtoa@i,w,c
  9177  0023E8  A0D8               	btfss	status,0,c
  9178  0023EA  D01C               	goto	u3330
  9179  0023EC                     u3290:
  9180  0023EC  5036               	movf	dtoa@n,w,c
  9181  0023EE  1037               	iorwf	dtoa@n+1,w,c
  9182  0023F0  1038               	iorwf	dtoa@n+2,w,c
  9183  0023F2  1039               	iorwf	dtoa@n+3,w,c
  9184  0023F4  103A               	iorwf	dtoa@n+4,w,c
  9185  0023F6  103B               	iorwf	dtoa@n+5,w,c
  9186  0023F8  103C               	iorwf	dtoa@n+6,w,c
  9187  0023FA  103D               	iorwf	dtoa@n+7,w,c
  9188  0023FC  A4D8               	btfss	status,2,c
  9189  0023FE  D771               	goto	l3756
  9190  002400  BE31               	btfsc	dtoa@p+1,7,c
  9191  002402  D005               	goto	u3310
  9192  002404  5031               	movf	dtoa@p+1,w,c
  9193  002406  E102               	bnz	u3311
  9194  002408  0430               	decf	dtoa@p,w,c
  9195  00240A  B0D8               	btfsc	status,0,c
  9196  00240C                     u3311:
  9197  00240C  D76A               	goto	l3756
  9198  00240E                     u3310:
  9199  00240E  FFFF               	dw	65535	; assembler added errata NOP
  9200  002410  BE33               	btfsc	dtoa@w+1,7,c
  9201  002412  D008               	goto	u3330
  9202  002414  5033               	movf	dtoa@w+1,w,c
  9203  002416  E103               	bnz	u3320
  9204  002418  0432               	decf	dtoa@w,w,c
  9205  00241A  A0D8               	btfss	status,0,c
  9206  00241C  D003               	goto	u3330
  9207  00241E                     u3320:
  9208  00241E  0100               	movlb	0	; () banked
  9209  002420  B3D0               	btfsc	_flags& (0+255),1,b
  9210  002422  D75F               	goto	l3756
  9211  002424                     u3330:
  9212  002424  FFFF               	dw	65535	; assembler added errata NOP
  9213                           
  9214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9215  002426  5034               	movf	dtoa@s,w,c
  9216  002428  1035               	iorwf	dtoa@s+1,w,c
  9217  00242A  A4D8               	btfss	status,2,c
  9218  00242C  D003               	goto	u3350
  9219  00242E  0100               	movlb	0	; () banked
  9220  002430  A5D0               	btfss	_flags& (0+255),2,b
  9221  002432  D01A               	goto	l3790
  9222  002434                     u3350:
  9223  002434  FFFF               	dw	65535	; assembler added errata NOP
  9224                           
  9225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9226  002436  063E               	decf	dtoa@i,f,c
  9227  002438  A0D8               	btfss	status,0,c
  9228  00243A  063F               	decf	dtoa@i+1,f,c
  9229                           
  9230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  9231  00243C  5034               	movf	dtoa@s,w,c
  9232  00243E  1035               	iorwf	dtoa@s+1,w,c
  9233  002440  A4D8               	btfss	status,2,c
  9234  002442  D004               	goto	l3786
  9235  002444  0E00               	movlw	0
  9236  002446  6E2F               	movwf	_dtoa$1075+1,c
  9237  002448  0E2B               	movlw	43
  9238  00244A  D004               	goto	L26
  9239  00244C                     l3786:
  9240  00244C  FFFF               	dw	65535	; assembler added errata NOP
  9241  00244E  0E00               	movlw	0
  9242  002450  6E2F               	movwf	_dtoa$1075+1,c
  9243  002452  0E2D               	movlw	45
  9244  002454                     L26:
  9245  002454  FFFF               	dw	65535	; assembler added errata NOP
  9246  002456  6E2E               	movwf	_dtoa$1075,c
  9247  002458  0ED5               	movlw	low _dbuf
  9248  00245A  243E               	addwf	dtoa@i,w,c
  9249  00245C  6ED9               	movwf	fsr2l,c
  9250  00245E  0E00               	movlw	high _dbuf
  9251  002460  203F               	addwfc	dtoa@i+1,w,c
  9252  002462  6EDA               	movwf	fsr2h,c
  9253  002464  C02E  FFDF         	movff	_dtoa$1075,indf2
  9254  002468                     l3790:
  9255  002468  FFFF               	dw	65535	; assembler added errata NOP
  9256                           
  9257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  9258  00246A  C01C  F011         	movff	dtoa@fp,pad@fp
  9259  00246E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9260  002472  0ED5               	movlw	low _dbuf
  9261  002474  243E               	addwf	dtoa@i,w,c
  9262  002476  6E13               	movwf	pad@buf,c
  9263  002478  0E00               	movlw	high _dbuf
  9264  00247A  203F               	addwfc	dtoa@i+1,w,c
  9265  00247C  6E14               	movwf	pad@buf+1,c
  9266  00247E  C032  F015         	movff	dtoa@w,pad@p
  9267  002482  C033  F016         	movff	dtoa@w+1,pad@p+1
  9268  002486  ECA7  F01C         	call	_pad	;wreg free
  9269  00248A  C011  F01C         	movff	?_pad,?_dtoa
  9270  00248E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9271  002492  0012               	return		;funcret
  9272  002494  FFFF               	dw	65535	; errata NOP
  9273  002496                     __end_of_dtoa:
  9274                           	opt callstack 0
  9275                           
  9276 ;; *************** function _abs *****************
  9277 ;; Defined at:
  9278 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  a               2   18[COMRAM] int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2   18[COMRAM] int 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9292 ;;      Params:         2       0       0       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0
  9294 ;;      Temps:          2       0       0       0       0       0       0
  9295 ;;      Totals:         4       0       0       0       0       0       0
  9296 ;;Total ram usage:        4 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    2
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_dtoa
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text34
  9307  003EE0                     __ptext34:
  9308                           	opt callstack 0
  9309  003EE0                     _abs:
  9310                           	opt callstack 0
  9311  003EE0  FFFF               	dw	65535	; assembler added errata NOP
  9312                           
  9313                           ;incstack = 0
  9314  003EE2  BE14               	btfsc	abs@a+1,7,c
  9315  003EE4  D005               	goto	u2890
  9316  003EE6  5014               	movf	abs@a+1,w,c
  9317  003EE8  E111               	bnz	l1285
  9318  003EEA  0413               	decf	abs@a,w,c
  9319  003EEC  B0D8               	btfsc	status,0,c
  9320  003EEE  D00E               	goto	l1285
  9321  003EF0                     u2890:
  9322  003EF0  FFFF               	dw	65535	; assembler added errata NOP
  9323  003EF2  C013  F015         	movff	abs@a,??_abs
  9324  003EF6  C014  F016         	movff	abs@a+1,??_abs+1
  9325  003EFA  1E15               	comf	??_abs,f,c
  9326  003EFC  1E16               	comf	??_abs+1,f,c
  9327  003EFE  4A15               	infsnz	??_abs,f,c
  9328  003F00  2A16               	incf	??_abs+1,f,c
  9329  003F02  C015  F013         	movff	??_abs,?_abs
  9330  003F06  C016  F014         	movff	??_abs+1,?_abs+1
  9331  003F0A  D005               	goto	l1288
  9332  003F0C                     l1285:
  9333  003F0C  FFFF               	dw	65535	; assembler added errata NOP
  9334  003F0E  C013  F013         	movff	abs@a,?_abs
  9335  003F12  C014  F014         	movff	abs@a+1,?_abs+1
  9336  003F16                     l1288:
  9337  003F16  FFFF               	dw	65535	; assembler added errata NOP
  9338  003F18  0012               	return		;funcret
  9339  003F1A  FFFF               	dw	65535	; errata NOP
  9340  003F1C                     __end_of_abs:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function ___aomod *****************
  9344 ;; Defined at:
  9345 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  dividend        8    0[COMRAM] long long 
  9348 ;;  divisor         8    8[COMRAM] long long 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  sign            1   17[COMRAM] unsigned char 
  9351 ;;  counter         1   16[COMRAM] unsigned char 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  8    0[COMRAM] long long 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9361 ;;      Params:        16       0       0       0       0       0       0
  9362 ;;      Locals:         2       0       0       0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0       0       0
  9364 ;;      Totals:        18       0       0       0       0       0       0
  9365 ;;Total ram usage:       18 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    2
  9368 ;; This function calls:
  9369 ;;		Nothing
  9370 ;; This function is called by:
  9371 ;;		_dtoa
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text35
  9376  003372                     __ptext35:
  9377                           	opt callstack 0
  9378  003372                     ___aomod:
  9379                           	opt callstack 0
  9380  003372  FFFF               	dw	65535	; assembler added errata NOP
  9381                           
  9382                           ;incstack = 0
  9383  003374  0E00               	movlw	0
  9384  003376  6E12               	movwf	___aomod@sign,c
  9385  003378  AE08               	btfss	___aomod@dividend+7,7,c
  9386  00337A  D012               	goto	l3640
  9387  00337C  1E08               	comf	___aomod@dividend+7,f,c
  9388  00337E  1E07               	comf	___aomod@dividend+6,f,c
  9389  003380  1E06               	comf	___aomod@dividend+5,f,c
  9390  003382  1E05               	comf	___aomod@dividend+4,f,c
  9391  003384  1E04               	comf	___aomod@dividend+3,f,c
  9392  003386  1E03               	comf	___aomod@dividend+2,f,c
  9393  003388  1E02               	comf	___aomod@dividend+1,f,c
  9394  00338A  6C01               	negf	___aomod@dividend,c
  9395  00338C  0E00               	movlw	0
  9396  00338E  2202               	addwfc	___aomod@dividend+1,f,c
  9397  003390  2203               	addwfc	___aomod@dividend+2,f,c
  9398  003392  2204               	addwfc	___aomod@dividend+3,f,c
  9399  003394  2205               	addwfc	___aomod@dividend+4,f,c
  9400  003396  2206               	addwfc	___aomod@dividend+5,f,c
  9401  003398  2207               	addwfc	___aomod@dividend+6,f,c
  9402  00339A  2208               	addwfc	___aomod@dividend+7,f,c
  9403  00339C  0E01               	movlw	1
  9404  00339E  6E12               	movwf	___aomod@sign,c
  9405  0033A0                     l3640:
  9406  0033A0  FFFF               	dw	65535	; assembler added errata NOP
  9407  0033A2  AE10               	btfss	___aomod@divisor+7,7,c
  9408  0033A4  D010               	goto	l3644
  9409  0033A6  1E10               	comf	___aomod@divisor+7,f,c
  9410  0033A8  1E0F               	comf	___aomod@divisor+6,f,c
  9411  0033AA  1E0E               	comf	___aomod@divisor+5,f,c
  9412  0033AC  1E0D               	comf	___aomod@divisor+4,f,c
  9413  0033AE  1E0C               	comf	___aomod@divisor+3,f,c
  9414  0033B0  1E0B               	comf	___aomod@divisor+2,f,c
  9415  0033B2  1E0A               	comf	___aomod@divisor+1,f,c
  9416  0033B4  6C09               	negf	___aomod@divisor,c
  9417  0033B6  0E00               	movlw	0
  9418  0033B8  220A               	addwfc	___aomod@divisor+1,f,c
  9419  0033BA  220B               	addwfc	___aomod@divisor+2,f,c
  9420  0033BC  220C               	addwfc	___aomod@divisor+3,f,c
  9421  0033BE  220D               	addwfc	___aomod@divisor+4,f,c
  9422  0033C0  220E               	addwfc	___aomod@divisor+5,f,c
  9423  0033C2  220F               	addwfc	___aomod@divisor+6,f,c
  9424  0033C4  2210               	addwfc	___aomod@divisor+7,f,c
  9425  0033C6                     l3644:
  9426  0033C6  FFFF               	dw	65535	; assembler added errata NOP
  9427  0033C8  5009               	movf	___aomod@divisor,w,c
  9428  0033CA  100A               	iorwf	___aomod@divisor+1,w,c
  9429  0033CC  100B               	iorwf	___aomod@divisor+2,w,c
  9430  0033CE  100C               	iorwf	___aomod@divisor+3,w,c
  9431  0033D0  100D               	iorwf	___aomod@divisor+4,w,c
  9432  0033D2  100E               	iorwf	___aomod@divisor+5,w,c
  9433  0033D4  100F               	iorwf	___aomod@divisor+6,w,c
  9434  0033D6  1010               	iorwf	___aomod@divisor+7,w,c
  9435  0033D8  B4D8               	btfsc	status,2,c
  9436  0033DA  D040               	goto	l3660
  9437  0033DC  0E01               	movlw	1
  9438  0033DE  6E11               	movwf	___aomod@counter,c
  9439  0033E0  D00B               	goto	l3650
  9440  0033E2                     l3648:
  9441  0033E2  FFFF               	dw	65535	; assembler added errata NOP
  9442  0033E4  90D8               	bcf	status,0,c
  9443  0033E6  3609               	rlcf	___aomod@divisor,f,c
  9444  0033E8  360A               	rlcf	___aomod@divisor+1,f,c
  9445  0033EA  360B               	rlcf	___aomod@divisor+2,f,c
  9446  0033EC  360C               	rlcf	___aomod@divisor+3,f,c
  9447  0033EE  360D               	rlcf	___aomod@divisor+4,f,c
  9448  0033F0  360E               	rlcf	___aomod@divisor+5,f,c
  9449  0033F2  360F               	rlcf	___aomod@divisor+6,f,c
  9450  0033F4  3610               	rlcf	___aomod@divisor+7,f,c
  9451  0033F6  2A11               	incf	___aomod@counter,f,c
  9452  0033F8                     l3650:
  9453  0033F8  FFFF               	dw	65535	; assembler added errata NOP
  9454  0033FA  AE10               	btfss	___aomod@divisor+7,7,c
  9455  0033FC  D7F2               	goto	l3648
  9456  0033FE                     u3090:
  9457  0033FE  FFFF               	dw	65535	; assembler added errata NOP
  9458  003400  5009               	movf	___aomod@divisor,w,c
  9459  003402  5C01               	subwf	___aomod@dividend,w,c
  9460  003404  500A               	movf	___aomod@divisor+1,w,c
  9461  003406  5802               	subwfb	___aomod@dividend+1,w,c
  9462  003408  500B               	movf	___aomod@divisor+2,w,c
  9463  00340A  5803               	subwfb	___aomod@dividend+2,w,c
  9464  00340C  500C               	movf	___aomod@divisor+3,w,c
  9465  00340E  5804               	subwfb	___aomod@dividend+3,w,c
  9466  003410  500D               	movf	___aomod@divisor+4,w,c
  9467  003412  5805               	subwfb	___aomod@dividend+4,w,c
  9468  003414  500E               	movf	___aomod@divisor+5,w,c
  9469  003416  5806               	subwfb	___aomod@dividend+5,w,c
  9470  003418  500F               	movf	___aomod@divisor+6,w,c
  9471  00341A  5807               	subwfb	___aomod@dividend+6,w,c
  9472  00341C  5010               	movf	___aomod@divisor+7,w,c
  9473  00341E  5808               	subwfb	___aomod@dividend+7,w,c
  9474  003420  A0D8               	btfss	status,0,c
  9475  003422  D010               	goto	l3656
  9476  003424  5009               	movf	___aomod@divisor,w,c
  9477  003426  5E01               	subwf	___aomod@dividend,f,c
  9478  003428  500A               	movf	___aomod@divisor+1,w,c
  9479  00342A  5A02               	subwfb	___aomod@dividend+1,f,c
  9480  00342C  500B               	movf	___aomod@divisor+2,w,c
  9481  00342E  5A03               	subwfb	___aomod@dividend+2,f,c
  9482  003430  500C               	movf	___aomod@divisor+3,w,c
  9483  003432  5A04               	subwfb	___aomod@dividend+3,f,c
  9484  003434  500D               	movf	___aomod@divisor+4,w,c
  9485  003436  5A05               	subwfb	___aomod@dividend+4,f,c
  9486  003438  500E               	movf	___aomod@divisor+5,w,c
  9487  00343A  5A06               	subwfb	___aomod@dividend+5,f,c
  9488  00343C  500F               	movf	___aomod@divisor+6,w,c
  9489  00343E  5A07               	subwfb	___aomod@dividend+6,f,c
  9490  003440  5010               	movf	___aomod@divisor+7,w,c
  9491  003442  5A08               	subwfb	___aomod@dividend+7,f,c
  9492  003444                     l3656:
  9493  003444  FFFF               	dw	65535	; assembler added errata NOP
  9494  003446  90D8               	bcf	status,0,c
  9495  003448  3210               	rrcf	___aomod@divisor+7,f,c
  9496  00344A  320F               	rrcf	___aomod@divisor+6,f,c
  9497  00344C  320E               	rrcf	___aomod@divisor+5,f,c
  9498  00344E  320D               	rrcf	___aomod@divisor+4,f,c
  9499  003450  320C               	rrcf	___aomod@divisor+3,f,c
  9500  003452  320B               	rrcf	___aomod@divisor+2,f,c
  9501  003454  320A               	rrcf	___aomod@divisor+1,f,c
  9502  003456  3209               	rrcf	___aomod@divisor,f,c
  9503  003458  2E11               	decfsz	___aomod@counter,f,c
  9504  00345A  D7D1               	goto	u3090
  9505  00345C                     l3660:
  9506  00345C  FFFF               	dw	65535	; assembler added errata NOP
  9507  00345E  5012               	movf	___aomod@sign,w,c
  9508  003460  B4D8               	btfsc	status,2,c
  9509  003462  D010               	goto	l3664
  9510  003464  1E08               	comf	___aomod@dividend+7,f,c
  9511  003466  1E07               	comf	___aomod@dividend+6,f,c
  9512  003468  1E06               	comf	___aomod@dividend+5,f,c
  9513  00346A  1E05               	comf	___aomod@dividend+4,f,c
  9514  00346C  1E04               	comf	___aomod@dividend+3,f,c
  9515  00346E  1E03               	comf	___aomod@dividend+2,f,c
  9516  003470  1E02               	comf	___aomod@dividend+1,f,c
  9517  003472  6C01               	negf	___aomod@dividend,c
  9518  003474  0E00               	movlw	0
  9519  003476  2202               	addwfc	___aomod@dividend+1,f,c
  9520  003478  2203               	addwfc	___aomod@dividend+2,f,c
  9521  00347A  2204               	addwfc	___aomod@dividend+3,f,c
  9522  00347C  2205               	addwfc	___aomod@dividend+4,f,c
  9523  00347E  2206               	addwfc	___aomod@dividend+5,f,c
  9524  003480  2207               	addwfc	___aomod@dividend+6,f,c
  9525  003482  2208               	addwfc	___aomod@dividend+7,f,c
  9526  003484                     l3664:
  9527  003484  FFFF               	dw	65535	; assembler added errata NOP
  9528  003486  C001  F001         	movff	___aomod@dividend,?___aomod
  9529  00348A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9530  00348E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9531  003492  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9532  003496  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9533  00349A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9534  00349E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9535  0034A2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9536  0034A6  0012               	return		;funcret
  9537  0034A8  FFFF               	dw	65535	; errata NOP
  9538  0034AA                     __end_of___aomod:
  9539                           	opt callstack 0
  9540                           
  9541 ;; *************** function ___aodiv *****************
  9542 ;; Defined at:
  9543 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  dividend        8    0[COMRAM] long long 
  9546 ;;  divisor         8    8[COMRAM] long long 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  quotient        8   18[COMRAM] long long 
  9549 ;;  sign            1   17[COMRAM] unsigned char 
  9550 ;;  counter         1   16[COMRAM] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  8    0[COMRAM] long long 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9560 ;;      Params:        16       0       0       0       0       0       0
  9561 ;;      Locals:        10       0       0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0
  9563 ;;      Totals:        26       0       0       0       0       0       0
  9564 ;;Total ram usage:       26 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    2
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		_dtoa
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text36
  9575  0030D2                     __ptext36:
  9576                           	opt callstack 0
  9577  0030D2                     ___aodiv:
  9578                           	opt callstack 0
  9579  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  9580                           
  9581                           ;incstack = 0
  9582  0030D4  0E00               	movlw	0
  9583  0030D6  6E12               	movwf	___aodiv@sign,c
  9584  0030D8  AE10               	btfss	___aodiv@divisor+7,7,c
  9585  0030DA  D012               	goto	l3596
  9586  0030DC  1E10               	comf	___aodiv@divisor+7,f,c
  9587  0030DE  1E0F               	comf	___aodiv@divisor+6,f,c
  9588  0030E0  1E0E               	comf	___aodiv@divisor+5,f,c
  9589  0030E2  1E0D               	comf	___aodiv@divisor+4,f,c
  9590  0030E4  1E0C               	comf	___aodiv@divisor+3,f,c
  9591  0030E6  1E0B               	comf	___aodiv@divisor+2,f,c
  9592  0030E8  1E0A               	comf	___aodiv@divisor+1,f,c
  9593  0030EA  6C09               	negf	___aodiv@divisor,c
  9594  0030EC  0E00               	movlw	0
  9595  0030EE  220A               	addwfc	___aodiv@divisor+1,f,c
  9596  0030F0  220B               	addwfc	___aodiv@divisor+2,f,c
  9597  0030F2  220C               	addwfc	___aodiv@divisor+3,f,c
  9598  0030F4  220D               	addwfc	___aodiv@divisor+4,f,c
  9599  0030F6  220E               	addwfc	___aodiv@divisor+5,f,c
  9600  0030F8  220F               	addwfc	___aodiv@divisor+6,f,c
  9601  0030FA  2210               	addwfc	___aodiv@divisor+7,f,c
  9602  0030FC  0E01               	movlw	1
  9603  0030FE  6E12               	movwf	___aodiv@sign,c
  9604  003100                     l3596:
  9605  003100  FFFF               	dw	65535	; assembler added errata NOP
  9606  003102  AE08               	btfss	___aodiv@dividend+7,7,c
  9607  003104  D012               	goto	l3602
  9608  003106  1E08               	comf	___aodiv@dividend+7,f,c
  9609  003108  1E07               	comf	___aodiv@dividend+6,f,c
  9610  00310A  1E06               	comf	___aodiv@dividend+5,f,c
  9611  00310C  1E05               	comf	___aodiv@dividend+4,f,c
  9612  00310E  1E04               	comf	___aodiv@dividend+3,f,c
  9613  003110  1E03               	comf	___aodiv@dividend+2,f,c
  9614  003112  1E02               	comf	___aodiv@dividend+1,f,c
  9615  003114  6C01               	negf	___aodiv@dividend,c
  9616  003116  0E00               	movlw	0
  9617  003118  2202               	addwfc	___aodiv@dividend+1,f,c
  9618  00311A  2203               	addwfc	___aodiv@dividend+2,f,c
  9619  00311C  2204               	addwfc	___aodiv@dividend+3,f,c
  9620  00311E  2205               	addwfc	___aodiv@dividend+4,f,c
  9621  003120  2206               	addwfc	___aodiv@dividend+5,f,c
  9622  003122  2207               	addwfc	___aodiv@dividend+6,f,c
  9623  003124  2208               	addwfc	___aodiv@dividend+7,f,c
  9624  003126  0E01               	movlw	1
  9625  003128  1A12               	xorwf	___aodiv@sign,f,c
  9626  00312A                     l3602:
  9627  00312A  FFFF               	dw	65535	; assembler added errata NOP
  9628  00312C  EE20  F013         	lfsr	2,___aodiv@quotient
  9629  003130  0E07               	movlw	7
  9630  003132                     u3011:
  9631  003132  6ADE               	clrf	postinc2,c
  9632  003134  06E8               	decf	wreg,f,c
  9633  003136  E2FD               	bc	u3011
  9634  003138  5009               	movf	___aodiv@divisor,w,c
  9635  00313A  100A               	iorwf	___aodiv@divisor+1,w,c
  9636  00313C  100B               	iorwf	___aodiv@divisor+2,w,c
  9637  00313E  100C               	iorwf	___aodiv@divisor+3,w,c
  9638  003140  100D               	iorwf	___aodiv@divisor+4,w,c
  9639  003142  100E               	iorwf	___aodiv@divisor+5,w,c
  9640  003144  100F               	iorwf	___aodiv@divisor+6,w,c
  9641  003146  1010               	iorwf	___aodiv@divisor+7,w,c
  9642  003148  B4D8               	btfsc	status,2,c
  9643  00314A  D04A               	goto	l3624
  9644  00314C  0E01               	movlw	1
  9645  00314E  6E11               	movwf	___aodiv@counter,c
  9646  003150  D00B               	goto	l3610
  9647  003152                     l3608:
  9648  003152  FFFF               	dw	65535	; assembler added errata NOP
  9649  003154  90D8               	bcf	status,0,c
  9650  003156  3609               	rlcf	___aodiv@divisor,f,c
  9651  003158  360A               	rlcf	___aodiv@divisor+1,f,c
  9652  00315A  360B               	rlcf	___aodiv@divisor+2,f,c
  9653  00315C  360C               	rlcf	___aodiv@divisor+3,f,c
  9654  00315E  360D               	rlcf	___aodiv@divisor+4,f,c
  9655  003160  360E               	rlcf	___aodiv@divisor+5,f,c
  9656  003162  360F               	rlcf	___aodiv@divisor+6,f,c
  9657  003164  3610               	rlcf	___aodiv@divisor+7,f,c
  9658  003166  2A11               	incf	___aodiv@counter,f,c
  9659  003168                     l3610:
  9660  003168  FFFF               	dw	65535	; assembler added errata NOP
  9661  00316A  AE10               	btfss	___aodiv@divisor+7,7,c
  9662  00316C  D7F2               	goto	l3608
  9663  00316E                     u3030:
  9664  00316E  FFFF               	dw	65535	; assembler added errata NOP
  9665  003170  90D8               	bcf	status,0,c
  9666  003172  3613               	rlcf	___aodiv@quotient,f,c
  9667  003174  3614               	rlcf	___aodiv@quotient+1,f,c
  9668  003176  3615               	rlcf	___aodiv@quotient+2,f,c
  9669  003178  3616               	rlcf	___aodiv@quotient+3,f,c
  9670  00317A  3617               	rlcf	___aodiv@quotient+4,f,c
  9671  00317C  3618               	rlcf	___aodiv@quotient+5,f,c
  9672  00317E  3619               	rlcf	___aodiv@quotient+6,f,c
  9673  003180  361A               	rlcf	___aodiv@quotient+7,f,c
  9674  003182  5009               	movf	___aodiv@divisor,w,c
  9675  003184  5C01               	subwf	___aodiv@dividend,w,c
  9676  003186  500A               	movf	___aodiv@divisor+1,w,c
  9677  003188  5802               	subwfb	___aodiv@dividend+1,w,c
  9678  00318A  500B               	movf	___aodiv@divisor+2,w,c
  9679  00318C  5803               	subwfb	___aodiv@dividend+2,w,c
  9680  00318E  500C               	movf	___aodiv@divisor+3,w,c
  9681  003190  5804               	subwfb	___aodiv@dividend+3,w,c
  9682  003192  500D               	movf	___aodiv@divisor+4,w,c
  9683  003194  5805               	subwfb	___aodiv@dividend+4,w,c
  9684  003196  500E               	movf	___aodiv@divisor+5,w,c
  9685  003198  5806               	subwfb	___aodiv@dividend+5,w,c
  9686  00319A  500F               	movf	___aodiv@divisor+6,w,c
  9687  00319C  5807               	subwfb	___aodiv@dividend+6,w,c
  9688  00319E  5010               	movf	___aodiv@divisor+7,w,c
  9689  0031A0  5808               	subwfb	___aodiv@dividend+7,w,c
  9690  0031A2  A0D8               	btfss	status,0,c
  9691  0031A4  D011               	goto	l3620
  9692  0031A6  5009               	movf	___aodiv@divisor,w,c
  9693  0031A8  5E01               	subwf	___aodiv@dividend,f,c
  9694  0031AA  500A               	movf	___aodiv@divisor+1,w,c
  9695  0031AC  5A02               	subwfb	___aodiv@dividend+1,f,c
  9696  0031AE  500B               	movf	___aodiv@divisor+2,w,c
  9697  0031B0  5A03               	subwfb	___aodiv@dividend+2,f,c
  9698  0031B2  500C               	movf	___aodiv@divisor+3,w,c
  9699  0031B4  5A04               	subwfb	___aodiv@dividend+3,f,c
  9700  0031B6  500D               	movf	___aodiv@divisor+4,w,c
  9701  0031B8  5A05               	subwfb	___aodiv@dividend+4,f,c
  9702  0031BA  500E               	movf	___aodiv@divisor+5,w,c
  9703  0031BC  5A06               	subwfb	___aodiv@dividend+5,f,c
  9704  0031BE  500F               	movf	___aodiv@divisor+6,w,c
  9705  0031C0  5A07               	subwfb	___aodiv@dividend+6,f,c
  9706  0031C2  5010               	movf	___aodiv@divisor+7,w,c
  9707  0031C4  5A08               	subwfb	___aodiv@dividend+7,f,c
  9708  0031C6  8013               	bsf	___aodiv@quotient,0,c
  9709  0031C8                     l3620:
  9710  0031C8  FFFF               	dw	65535	; assembler added errata NOP
  9711  0031CA  90D8               	bcf	status,0,c
  9712  0031CC  3210               	rrcf	___aodiv@divisor+7,f,c
  9713  0031CE  320F               	rrcf	___aodiv@divisor+6,f,c
  9714  0031D0  320E               	rrcf	___aodiv@divisor+5,f,c
  9715  0031D2  320D               	rrcf	___aodiv@divisor+4,f,c
  9716  0031D4  320C               	rrcf	___aodiv@divisor+3,f,c
  9717  0031D6  320B               	rrcf	___aodiv@divisor+2,f,c
  9718  0031D8  320A               	rrcf	___aodiv@divisor+1,f,c
  9719  0031DA  3209               	rrcf	___aodiv@divisor,f,c
  9720  0031DC  2E11               	decfsz	___aodiv@counter,f,c
  9721  0031DE  D7C7               	goto	u3030
  9722  0031E0                     l3624:
  9723  0031E0  FFFF               	dw	65535	; assembler added errata NOP
  9724  0031E2  5012               	movf	___aodiv@sign,w,c
  9725  0031E4  B4D8               	btfsc	status,2,c
  9726  0031E6  D010               	goto	l3628
  9727  0031E8  1E1A               	comf	___aodiv@quotient+7,f,c
  9728  0031EA  1E19               	comf	___aodiv@quotient+6,f,c
  9729  0031EC  1E18               	comf	___aodiv@quotient+5,f,c
  9730  0031EE  1E17               	comf	___aodiv@quotient+4,f,c
  9731  0031F0  1E16               	comf	___aodiv@quotient+3,f,c
  9732  0031F2  1E15               	comf	___aodiv@quotient+2,f,c
  9733  0031F4  1E14               	comf	___aodiv@quotient+1,f,c
  9734  0031F6  6C13               	negf	___aodiv@quotient,c
  9735  0031F8  0E00               	movlw	0
  9736  0031FA  2214               	addwfc	___aodiv@quotient+1,f,c
  9737  0031FC  2215               	addwfc	___aodiv@quotient+2,f,c
  9738  0031FE  2216               	addwfc	___aodiv@quotient+3,f,c
  9739  003200  2217               	addwfc	___aodiv@quotient+4,f,c
  9740  003202  2218               	addwfc	___aodiv@quotient+5,f,c
  9741  003204  2219               	addwfc	___aodiv@quotient+6,f,c
  9742  003206  221A               	addwfc	___aodiv@quotient+7,f,c
  9743  003208                     l3628:
  9744  003208  FFFF               	dw	65535	; assembler added errata NOP
  9745  00320A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9746  00320E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9747  003212  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9748  003216  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9749  00321A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9750  00321E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9751  003222  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9752  003226  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9753  00322A  0012               	return		;funcret
  9754  00322C  FFFF               	dw	65535	; errata NOP
  9755  00322E                     __end_of___aodiv:
  9756                           	opt callstack 0
  9757                           
  9758 ;; *************** function _ctoa *****************
  9759 ;; Defined at:
  9760 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9763 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9764 ;;  c               1   29[COMRAM] unsigned char 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  w               2   30[COMRAM] int 
  9767 ;;  l               2    0        int 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2   27[COMRAM] int 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9777 ;;      Params:         3       0       0       0       0       0       0
  9778 ;;      Locals:         2       0       0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0
  9780 ;;      Totals:         5       0       0       0       0       0       0
  9781 ;;Total ram usage:        5 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    6
  9784 ;; This function calls:
  9785 ;;		_pad
  9786 ;; This function is called by:
  9787 ;;		_vfpfcnvrt
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text37
  9792  003CA6                     __ptext37:
  9793                           	opt callstack 0
  9794  003CA6                     _ctoa:
  9795                           	opt callstack 0
  9796  003CA6  FFFF               	dw	65535	; assembler added errata NOP
  9797                           
  9798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9799                           
  9800                           ;incstack = 0
  9801  003CA8  0100               	movlb	0	; () banked
  9802  003CAA  51CC               	movf	_width& (0+255),w,b
  9803  003CAC  11CD               	iorwf	(_width+1)& (0+255),w,b
  9804  003CAE  A4D8               	btfss	status,2,c
  9805  003CB0  D005               	goto	l3722
  9806                           
  9807                           ; BSR set to: 0
  9808  003CB2  C0CC  F01F         	movff	_width,ctoa@w
  9809  003CB6  C0CD  F020         	movff	_width+1,ctoa@w+1
  9810  003CBA  D007               	goto	l3724
  9811  003CBC                     l3722:
  9812  003CBC  FFFF               	dw	65535	; assembler added errata NOP
  9813                           
  9814                           ; BSR set to: 0
  9815  003CBE  0EFF               	movlw	255
  9816  003CC0  25CC               	addwf	_width& (0+255),w,b
  9817  003CC2  6E1F               	movwf	ctoa@w,c
  9818  003CC4  0EFF               	movlw	255
  9819  003CC6  21CD               	addwfc	(_width+1)& (0+255),w,b
  9820  003CC8  6E20               	movwf	ctoa@w+1,c
  9821  003CCA                     l3724:
  9822  003CCA  FFFF               	dw	65535	; assembler added errata NOP
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9826  003CCC  C01E  F0D5         	movff	ctoa@c,_dbuf
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9830  003CD0  0E00               	movlw	0
  9831  003CD2  6FD6               	movwf	(_dbuf+1)& (0+255),b
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9835  003CD4  C01C  F011         	movff	ctoa@fp,pad@fp
  9836  003CD8  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9837  003CDC  0ED5               	movlw	low _dbuf
  9838  003CDE  6E13               	movwf	pad@buf,c
  9839  003CE0  0E00               	movlw	high _dbuf
  9840  003CE2  6E14               	movwf	pad@buf+1,c
  9841  003CE4  C01F  F015         	movff	ctoa@w,pad@p
  9842  003CE8  C020  F016         	movff	ctoa@w+1,pad@p+1
  9843  003CEC  ECA7  F01C         	call	_pad	;wreg free
  9844  003CF0  C011  F01C         	movff	?_pad,?_ctoa
  9845  003CF4  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9846  003CF8  0012               	return		;funcret
  9847  003CFA  FFFF               	dw	65535	; errata NOP
  9848  003CFC                     __end_of_ctoa:
  9849                           	opt callstack 0
  9850                           
  9851 ;; *************** function _pad *****************
  9852 ;; Defined at:
  9853 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9856 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  9857 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9858 ;;		 -> dbuf(32), 
  9859 ;;  p               2   20[COMRAM] int 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  w               2   25[COMRAM] int 
  9862 ;;  i               2   23[COMRAM] int 
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  2   16[COMRAM] int 
  9865 ;; Registers used:
  9866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9872 ;;      Params:         6       0       0       0       0       0       0
  9873 ;;      Locals:         4       0       0       0       0       0       0
  9874 ;;      Temps:          1       0       0       0       0       0       0
  9875 ;;      Totals:        11       0       0       0       0       0       0
  9876 ;;Total ram usage:       11 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:    5
  9879 ;; This function calls:
  9880 ;;		_fputc
  9881 ;;		_fputs
  9882 ;;		_strlen
  9883 ;; This function is called by:
  9884 ;;		_ctoa
  9885 ;;		_dtoa
  9886 ;;		_otoa
  9887 ;;		_utoa
  9888 ;;		_xtoa
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text38
  9893  00394E                     __ptext38:
  9894                           	opt callstack 0
  9895  00394E                     _pad:
  9896                           	opt callstack 0
  9897  00394E  FFFF               	dw	65535	; assembler added errata NOP
  9898                           
  9899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9900                           
  9901                           ;incstack = 0
  9902  003950  0100               	movlb	0	; () banked
  9903  003952  A1D0               	btfss	_flags& (0+255),0,b
  9904  003954  D00A               	goto	l3538
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9908  003956  C013  F00A         	movff	pad@buf,fputs@s
  9909  00395A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9910  00395E  C011  F00C         	movff	pad@fp,fputs@fp
  9911  003962  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9912  003966  EC13  F01F         	call	_fputs	;wreg free
  9913  00396A                     l3538:
  9914  00396A  FFFF               	dw	65535	; assembler added errata NOP
  9915                           
  9916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9917  00396C  BE16               	btfsc	pad@p+1,7,c
  9918  00396E  D005               	goto	l3542
  9919  003970  C015  F01A         	movff	pad@p,pad@w
  9920  003974  C016  F01B         	movff	pad@p+1,pad@w+1
  9921  003978  D005               	goto	l394
  9922  00397A                     l3542:
  9923  00397A  FFFF               	dw	65535	; assembler added errata NOP
  9924  00397C  0E00               	movlw	0
  9925  00397E  6E1B               	movwf	pad@w+1,c
  9926  003980  0E00               	movlw	0
  9927  003982  6E1A               	movwf	pad@w,c
  9928  003984                     l394:
  9929  003984  FFFF               	dw	65535	; assembler added errata NOP
  9930                           
  9931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9932  003986  0E00               	movlw	0
  9933  003988  6E19               	movwf	pad@i+1,c
  9934  00398A  0E00               	movlw	0
  9935  00398C  6E18               	movwf	pad@i,c
  9936                           
  9937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9938  00398E  D00D               	goto	l3548
  9939  003990                     l3544:
  9940  003990  FFFF               	dw	65535	; assembler added errata NOP
  9941                           
  9942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9943  003992  0E00               	movlw	0
  9944  003994  6E02               	movwf	fputc@c+1,c
  9945  003996  0E20               	movlw	32
  9946  003998  6E01               	movwf	fputc@c,c
  9947  00399A  C011  F003         	movff	pad@fp,fputc@fp
  9948  00399E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9949  0039A2  EC51  F01C         	call	_fputc	;wreg free
  9950                           
  9951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9952  0039A6  4A18               	infsnz	pad@i,f,c
  9953  0039A8  2A19               	incf	pad@i+1,f,c
  9954  0039AA                     l3548:
  9955  0039AA  FFFF               	dw	65535	; assembler added errata NOP
  9956                           
  9957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9958  0039AC  501A               	movf	pad@w,w,c
  9959  0039AE  5C18               	subwf	pad@i,w,c
  9960  0039B0  5019               	movf	pad@i+1,w,c
  9961  0039B2  0A80               	xorlw	128
  9962  0039B4  6E17               	movwf	??_pad& (0+255),c
  9963  0039B6  501B               	movf	pad@w+1,w,c
  9964  0039B8  0A80               	xorlw	128
  9965  0039BA  5817               	subwfb	??_pad& (0+255),w,c
  9966  0039BC  A0D8               	btfss	status,0,c
  9967  0039BE  D7E8               	goto	l3544
  9968                           
  9969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9970  0039C0  0100               	movlb	0	; () banked
  9971  0039C2  B1D0               	btfsc	_flags& (0+255),0,b
  9972  0039C4  D00A               	goto	l3552
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9976  0039C6  C013  F00A         	movff	pad@buf,fputs@s
  9977  0039CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9978  0039CE  C011  F00C         	movff	pad@fp,fputs@fp
  9979  0039D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9980  0039D6  EC13  F01F         	call	_fputs	;wreg free
  9981  0039DA                     l3552:
  9982  0039DA  FFFF               	dw	65535	; assembler added errata NOP
  9983                           
  9984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9985  0039DC  C013  F001         	movff	pad@buf,strlen@s
  9986  0039E0  C014  F002         	movff	pad@buf+1,strlen@s+1
  9987  0039E4  ECE2  F01F         	call	_strlen	;wreg free
  9988  0039E8  501A               	movf	pad@w,w,c
  9989  0039EA  2401               	addwf	?_strlen,w,c
  9990  0039EC  6E11               	movwf	?_pad,c
  9991  0039EE  501B               	movf	pad@w+1,w,c
  9992  0039F0  2002               	addwfc	?_strlen+1,w,c
  9993  0039F2  6E12               	movwf	?_pad+1,c
  9994  0039F4  0012               	return		;funcret
  9995  0039F6  FFFF               	dw	65535	; errata NOP
  9996  0039F8                     __end_of_pad:
  9997                           	opt callstack 0
  9998                           
  9999 ;; *************** function _strlen *****************
 10000 ;; Defined at:
 10001 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10004 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10007 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  2    0[COMRAM] unsigned int 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10017 ;;      Params:         2       0       0       0       0       0       0
 10018 ;;      Locals:         2       0       0       0       0       0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0
 10020 ;;      Totals:         4       0       0       0       0       0       0
 10021 ;;Total ram usage:        4 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    2
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_pad
 10028 ;;		_stoa
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text39
 10033  003FC4                     __ptext39:
 10034                           	opt callstack 0
 10035  003FC4                     _strlen:
 10036                           	opt callstack 0
 10037  003FC4  FFFF               	dw	65535	; assembler added errata NOP
 10038                           
 10039                           ;incstack = 0
 10040  003FC6  C001  F003         	movff	strlen@s,strlen@a
 10041  003FCA  C002  F004         	movff	strlen@s+1,strlen@a+1
 10042  003FCE  D003               	goto	l3524
 10043  003FD0                     l3522:
 10044  003FD0  FFFF               	dw	65535	; assembler added errata NOP
 10045  003FD2  4A01               	infsnz	strlen@s,f,c
 10046  003FD4  2A02               	incf	strlen@s+1,f,c
 10047  003FD6                     l3524:
 10048  003FD6  FFFF               	dw	65535	; assembler added errata NOP
 10049  003FD8  C001  FFD9         	movff	strlen@s,fsr2l
 10050  003FDC  C002  FFDA         	movff	strlen@s+1,fsr2h
 10051  003FE0  50DF               	movf	indf2,w,c
 10052  003FE2  A4D8               	btfss	status,2,c
 10053  003FE4  D7F5               	goto	l3522
 10054  003FE6  5003               	movf	strlen@a,w,c
 10055  003FE8  5C01               	subwf	strlen@s,w,c
 10056  003FEA  6E01               	movwf	?_strlen,c
 10057  003FEC  5004               	movf	strlen@a+1,w,c
 10058  003FEE  5802               	subwfb	strlen@s+1,w,c
 10059  003FF0  6E02               	movwf	?_strlen+1,c
 10060  003FF2  0012               	return		;funcret
 10061  003FF4  FFFF               	dw	65535	; errata NOP
 10062  003FF6                     __end_of_strlen:
 10063                           	opt callstack 0
 10064                           
 10065 ;; *************** function _fputs *****************
 10066 ;; Defined at:
 10067 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10070 ;;		 -> dbuf(32), 
 10071 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10072 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  i               2   14[COMRAM] int 
 10075 ;;  c               1   13[COMRAM] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  2    9[COMRAM] int 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10085 ;;      Params:         4       0       0       0       0       0       0
 10086 ;;      Locals:         3       0       0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0
 10088 ;;      Totals:         7       0       0       0       0       0       0
 10089 ;;Total ram usage:        7 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    4
 10092 ;; This function calls:
 10093 ;;		_fputc
 10094 ;; This function is called by:
 10095 ;;		_pad
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text40
 10100  003E26                     __ptext40:
 10101                           	opt callstack 0
 10102  003E26                     _fputs:
 10103                           	opt callstack 0
 10104  003E26  FFFF               	dw	65535	; assembler added errata NOP
 10105                           
 10106                           ;incstack = 0
 10107  003E28  0E00               	movlw	0
 10108  003E2A  6E10               	movwf	fputs@i+1,c
 10109  003E2C  0E00               	movlw	0
 10110  003E2E  6E0F               	movwf	fputs@i,c
 10111  003E30  D00C               	goto	l3518
 10112  003E32                     l3514:
 10113  003E32  FFFF               	dw	65535	; assembler added errata NOP
 10114  003E34  C00E  F001         	movff	fputs@c,fputc@c
 10115  003E38  6A02               	clrf	fputc@c+1,c
 10116  003E3A  C00C  F003         	movff	fputs@fp,fputc@fp
 10117  003E3E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10118  003E42  EC51  F01C         	call	_fputc	;wreg free
 10119  003E46  4A0F               	infsnz	fputs@i,f,c
 10120  003E48  2A10               	incf	fputs@i+1,f,c
 10121  003E4A                     l3518:
 10122  003E4A  FFFF               	dw	65535	; assembler added errata NOP
 10123  003E4C  500F               	movf	fputs@i,w,c
 10124  003E4E  240A               	addwf	fputs@s,w,c
 10125  003E50  6ED9               	movwf	fsr2l,c
 10126  003E52  5010               	movf	fputs@i+1,w,c
 10127  003E54  200B               	addwfc	fputs@s+1,w,c
 10128  003E56  6EDA               	movwf	fsr2h,c
 10129  003E58  50DF               	movf	indf2,w,c
 10130  003E5A  6E0E               	movwf	fputs@c,c
 10131  003E5C  500E               	movf	fputs@c,w,c
 10132  003E5E  B4D8               	btfsc	status,2,c
 10133  003E60  0012               	return		;funcret
 10134  003E62  FFFF               	dw	65535	; assembler added errata NOP
 10135  003E64  D7E6               	goto	l3514
 10136  003E66  FFFF               	dw	65535	; errata NOP
 10137  003E68                     __end_of_fputs:
 10138                           	opt callstack 0
 10139                           
 10140 ;; *************** function _fputc *****************
 10141 ;; Defined at:
 10142 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  c               2    0[COMRAM] int 
 10145 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10146 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;		None
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  2    0[COMRAM] int 
 10151 ;; Registers used:
 10152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10158 ;;      Params:         4       0       0       0       0       0       0
 10159 ;;      Locals:         0       0       0       0       0       0       0
 10160 ;;      Temps:          5       0       0       0       0       0       0
 10161 ;;      Totals:         9       0       0       0       0       0       0
 10162 ;;Total ram usage:        9 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; Hardware stack levels required when called:    3
 10165 ;; This function calls:
 10166 ;;		_putch
 10167 ;; This function is called by:
 10168 ;;		_pad
 10169 ;;		_stoa
 10170 ;;		_vfpfcnvrt
 10171 ;;		_fputs
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text41
 10176  0038A2                     __ptext41:
 10177                           	opt callstack 0
 10178  0038A2                     _fputc:
 10179                           	opt callstack 0
 10180  0038A2  FFFF               	dw	65535	; assembler added errata NOP
 10181                           
 10182                           ;incstack = 0
 10183  0038A4  5003               	movf	fputc@fp,w,c
 10184  0038A6  1004               	iorwf	fputc@fp+1,w,c
 10185  0038A8  B4D8               	btfsc	status,2,c
 10186  0038AA  D004               	goto	u2780
 10187  0038AC  5003               	movf	fputc@fp,w,c
 10188  0038AE  1004               	iorwf	fputc@fp+1,w,c
 10189  0038B0  A4D8               	btfss	status,2,c
 10190  0038B2  D005               	goto	l3504
 10191  0038B4                     u2780:
 10192  0038B4  FFFF               	dw	65535	; assembler added errata NOP
 10193  0038B6  5001               	movf	fputc@c,w,c
 10194  0038B8  ECFB  F000         	call	_putch
 10195  0038BC  D045               	goto	l1362
 10196  0038BE                     l3504:
 10197  0038BE  FFFF               	dw	65535	; assembler added errata NOP
 10198  0038C0  EE20 F004          	lfsr	2,4
 10199  0038C4  5003               	movf	fputc@fp,w,c
 10200  0038C6  26D9               	addwf	fsr2l,f,c
 10201  0038C8  5004               	movf	fputc@fp+1,w,c
 10202  0038CA  22DA               	addwfc	fsr2h,f,c
 10203  0038CC  50DE               	movf	postinc2,w,c
 10204  0038CE  10DE               	iorwf	postinc2,w,c
 10205  0038D0  B4D8               	btfsc	status,2,c
 10206  0038D2  D016               	goto	u2800
 10207  0038D4  EE20 F004          	lfsr	2,4
 10208  0038D8  5003               	movf	fputc@fp,w,c
 10209  0038DA  26D9               	addwf	fsr2l,f,c
 10210  0038DC  5004               	movf	fputc@fp+1,w,c
 10211  0038DE  22DA               	addwfc	fsr2h,f,c
 10212  0038E0  EE10 F002          	lfsr	1,2
 10213  0038E4  5003               	movf	fputc@fp,w,c
 10214  0038E6  26E1               	addwf	fsr1l,f,c
 10215  0038E8  5004               	movf	fputc@fp+1,w,c
 10216  0038EA  22E2               	addwfc	fsr1h,f,c
 10217  0038EC  50DE               	movf	postinc2,w,c
 10218  0038EE  5CE6               	subwf	postinc1,w,c
 10219  0038F0  50E6               	movf	postinc1,w,c
 10220  0038F2  0A80               	xorlw	128
 10221  0038F4  6E09               	movwf	(??_fputc+4)& (0+255),c
 10222  0038F6  50DE               	movf	postinc2,w,c
 10223  0038F8  0A80               	xorlw	128
 10224  0038FA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
 10225  0038FC  B0D8               	btfsc	status,0,c
 10226  0038FE  D024               	goto	l1362
 10227  003900                     u2800:
 10228  003900  FFFF               	dw	65535	; assembler added errata NOP
 10229  003902  EE20 F002          	lfsr	2,2
 10230  003906  5003               	movf	fputc@fp,w,c
 10231  003908  26D9               	addwf	fsr2l,f,c
 10232  00390A  5004               	movf	fputc@fp+1,w,c
 10233  00390C  22DA               	addwfc	fsr2h,f,c
 10234  00390E  CFDE F005          	movff	postinc2,??_fputc
 10235  003912  CFDD F006          	movff	postdec2,??_fputc+1
 10236  003916  C003  FFD9         	movff	fputc@fp,fsr2l
 10237  00391A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10238  00391E  CFDE F007          	movff	postinc2,??_fputc+2
 10239  003922  CFDD F008          	movff	postdec2,??_fputc+3
 10240  003926  5005               	movf	??_fputc,w,c
 10241  003928  2407               	addwf	??_fputc+2,w,c
 10242  00392A  6ED9               	movwf	fsr2l,c
 10243  00392C  5006               	movf	??_fputc+1,w,c
 10244  00392E  2008               	addwfc	??_fputc+3,w,c
 10245  003930  6EDA               	movwf	fsr2h,c
 10246  003932  C001  FFDF         	movff	fputc@c,indf2
 10247  003936  EE20 F002          	lfsr	2,2
 10248  00393A  5003               	movf	fputc@fp,w,c
 10249  00393C  26D9               	addwf	fsr2l,f,c
 10250  00393E  5004               	movf	fputc@fp+1,w,c
 10251  003940  22DA               	addwfc	fsr2h,f,c
 10252  003942  2ADE               	incf	postinc2,f,c
 10253  003944  0E00               	movlw	0
 10254  003946  22DD               	addwfc	postdec2,f,c
 10255  003948                     l1362:
 10256  003948  FFFF               	dw	65535	; assembler added errata NOP
 10257  00394A  0012               	return		;funcret
 10258  00394C  FFFF               	dw	65535	; errata NOP
 10259  00394E                     __end_of_fputc:
 10260                           	opt callstack 0
 10261                           
 10262 ;; *************** function _putch *****************
 10263 ;; Defined at:
 10264 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  c               1    wreg     unsigned char 
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  c               1    0[COMRAM] unsigned char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10278 ;;      Params:         0       0       0       0       0       0       0
 10279 ;;      Locals:         0       0       0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0
 10281 ;;      Totals:         0       0       0       0       0       0       0
 10282 ;;Total ram usage:        0 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    2
 10285 ;; This function calls:
 10286 ;;		Nothing
 10287 ;; This function is called by:
 10288 ;;		_fputc
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text42
 10293  0001F6                     __ptext42:
 10294                           	opt callstack 0
 10295  0001F6                     _putch:
 10296                           	opt callstack 0
 10297  0001F6  FFFF               	dw	65535	; assembler added errata NOP
 10298                           
 10299                           ;incstack = 0
 10300  0001F8  0012               	return		;funcret
 10301  0001FA  FFFF               	dw	65535	; errata NOP
 10302  0001FC                     __end_of_putch:
 10303                           	opt callstack 0
 10304                           
 10305 ;; *************** function _atoi *****************
 10306 ;; Defined at:
 10307 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10310 ;;		 -> STR_2(3), STR_1(4), 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;  n               2   20[COMRAM] int 
 10313 ;;  neg             2   13[COMRAM] int 
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  2    7[COMRAM] int 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10323 ;;      Params:         2       0       0       0       0       0       0
 10324 ;;      Locals:         9       0       0       0       0       0       0
 10325 ;;      Temps:          4       0       0       0       0       0       0
 10326 ;;      Totals:        15       0       0       0       0       0       0
 10327 ;;Total ram usage:       15 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    3
 10330 ;; This function calls:
 10331 ;;		___wmul
 10332 ;;		_isdigit
 10333 ;;		_isspace
 10334 ;; This function is called by:
 10335 ;;		_vfpfcnvrt
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text43
 10340  002E10                     __ptext43:
 10341                           	opt callstack 0
 10342  002E10                     _atoi:
 10343                           	opt callstack 0
 10344  002E10  FFFF               	dw	65535	; assembler added errata NOP
 10345                           
 10346                           ;incstack = 0
 10347  002E12  0E00               	movlw	0
 10348  002E14  6E16               	movwf	atoi@n+1,c
 10349  002E16  0E00               	movlw	0
 10350  002E18  6E15               	movwf	atoi@n,c
 10351  002E1A  0E00               	movlw	0
 10352  002E1C  6E0F               	movwf	atoi@neg+1,c
 10353  002E1E  0E00               	movlw	0
 10354  002E20  6E0E               	movwf	atoi@neg,c
 10355  002E22  D003               	goto	l3990
 10356  002E24                     l3988:
 10357  002E24  FFFF               	dw	65535	; assembler added errata NOP
 10358  002E26  4A08               	infsnz	atoi@s,f,c
 10359  002E28  2A09               	incf	atoi@s+1,f,c
 10360  002E2A                     l3990:
 10361  002E2A  FFFF               	dw	65535	; assembler added errata NOP
 10362  002E2C  0E01               	movlw	1
 10363  002E2E  6E14               	movwf	_atoi$1722,c
 10364  002E30  C008  FFF6         	movff	atoi@s,tblptrl
 10365  002E34  C009  FFF7         	movff	atoi@s+1,tblptrh
 10366  002E38                     	if	0	;tblptru may be non-zero
 10367  002E38                     	endif
 10368  002E38                     	if	0	;tblptru may be non-zero
 10369  002E38                     	endif
 10370  002E38  0008               	tblrd		*
 10371  002E3A  FFFF               	dw	65535	; errata NOP
 10372  002E3C  50F5               	movf	tablat,w,c
 10373  002E3E  0A20               	xorlw	32
 10374  002E40  B4D8               	btfsc	status,2,c
 10375  002E42  D019               	goto	l3998
 10376  002E44  0EF7               	movlw	247
 10377  002E46  6E0A               	movwf	??_atoi& (0+255),c
 10378  002E48  0EFF               	movlw	255
 10379  002E4A  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10380  002E4C  C008  FFF6         	movff	atoi@s,tblptrl
 10381  002E50  C009  FFF7         	movff	atoi@s+1,tblptrh
 10382  002E54                     	if	0	;tblptru may be non-zero
 10383  002E54                     	endif
 10384  002E54                     	if	0	;tblptru may be non-zero
 10385  002E54                     	endif
 10386  002E54  0008               	tblrd		*
 10387  002E56  FFFF               	dw	65535	; errata NOP
 10388  002E58  50F5               	movf	tablat,w,c
 10389  002E5A  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10390  002E5C  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10391  002E5E  500A               	movf	??_atoi,w,c
 10392  002E60  260C               	addwf	??_atoi+2,f,c
 10393  002E62  500B               	movf	??_atoi+1,w,c
 10394  002E64  220D               	addwfc	??_atoi+3,f,c
 10395  002E66  500D               	movf	??_atoi+3,w,c
 10396  002E68  E104               	bnz	u3810
 10397  002E6A  0E05               	movlw	5
 10398  002E6C  5C0C               	subwf	??_atoi+2,w,c
 10399  002E6E  A0D8               	btfss	status,0,c
 10400  002E70  D002               	goto	l3998
 10401  002E72                     u3810:
 10402  002E72  0E00               	movlw	0
 10403  002E74  6E14               	movwf	_atoi$1722,c
 10404  002E76                     l3998:
 10405  002E76  FFFF               	dw	65535	; assembler added errata NOP
 10406  002E78  C014  F010         	movff	_atoi$1722,_atoi$1721
 10407  002E7C  6A11               	clrf	_atoi$1721+1,c
 10408  002E7E  5010               	movf	_atoi$1721,w,c
 10409  002E80  1011               	iorwf	_atoi$1721+1,w,c
 10410  002E82  B4D8               	btfsc	status,2,c
 10411  002E84  D00A               	goto	l4008
 10412  002E86  D7CE               	goto	l3988
 10413  002E88                     l4004:
 10414  002E88  FFFF               	dw	65535	; assembler added errata NOP
 10415  002E8A  0E00               	movlw	0
 10416  002E8C  6E0F               	movwf	atoi@neg+1,c
 10417  002E8E  0E01               	movlw	1
 10418  002E90  6E0E               	movwf	atoi@neg,c
 10419  002E92                     l4006:
 10420  002E92  FFFF               	dw	65535	; assembler added errata NOP
 10421  002E94  4A08               	infsnz	atoi@s,f,c
 10422  002E96  2A09               	incf	atoi@s+1,f,c
 10423  002E98  D032               	goto	l4014
 10424  002E9A                     l4008:
 10425  002E9A  FFFF               	dw	65535	; assembler added errata NOP
 10426  002E9C  C008  FFF6         	movff	atoi@s,tblptrl
 10427  002EA0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10428  002EA4                     	if	0	;tblptru may be non-zero
 10429  002EA4                     	endif
 10430  002EA4                     	if	0	;tblptru may be non-zero
 10431  002EA4                     	endif
 10432  002EA4  0008               	tblrd		*
 10433  002EA6  FFFF               	dw	65535	; errata NOP
 10434  002EA8  50F5               	movf	tablat,w,c
 10435  002EAA  6E0A               	movwf	??_atoi& (0+255),c
 10436  002EAC  6A0B               	clrf	(??_atoi+1)& (0+255),c
 10437                           
 10438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10439                           ; Switch size 1, requested type "simple"
 10440                           ; Number of cases is 1, Range of values is 0 to 0
 10441                           ; switch strategies available:
 10442                           ; Name         Instructions Cycles
 10443                           ; simple_byte            4     3 (average)
 10444                           ;	Chosen strategy is simple_byte
 10445  002EAE  500B               	movf	??_atoi+1,w,c
 10446  002EB0  0A00               	xorlw	0	; case 0
 10447  002EB2  A4D8               	btfss	status,2,c
 10448  002EB4  D024               	goto	l4014
 10449                           
 10450                           ; Switch size 1, requested type "simple"
 10451                           ; Number of cases is 2, Range of values is 43 to 45
 10452                           ; switch strategies available:
 10453                           ; Name         Instructions Cycles
 10454                           ; simple_byte            7     4 (average)
 10455                           ;	Chosen strategy is simple_byte
 10456  002EB6  500A               	movf	??_atoi,w,c
 10457  002EB8  0A2B               	xorlw	43	; case 43
 10458  002EBA  B4D8               	btfsc	status,2,c
 10459  002EBC  D7EA               	goto	l4006
 10460  002EBE  0A06               	xorlw	6	; case 45
 10461  002EC0  B4D8               	btfsc	status,2,c
 10462  002EC2  D7E2               	goto	l4004
 10463  002EC4  D01C               	goto	l4014
 10464  002EC6                     l4010:
 10465  002EC6  FFFF               	dw	65535	; assembler added errata NOP
 10466  002EC8  C015  F001         	movff	atoi@n,___wmul@multiplier
 10467  002ECC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10468  002ED0  0E00               	movlw	0
 10469  002ED2  6E04               	movwf	___wmul@multiplicand+1,c
 10470  002ED4  0E0A               	movlw	10
 10471  002ED6  6E03               	movwf	___wmul@multiplicand,c
 10472  002ED8  EC32  F000         	call	___wmul	;wreg free
 10473  002EDC  C008  FFF6         	movff	atoi@s,tblptrl
 10474  002EE0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10475  002EE4                     	if	0	;tblptru may be non-zero
 10476  002EE4                     	endif
 10477  002EE4                     	if	0	;tblptru may be non-zero
 10478  002EE4                     	endif
 10479  002EE4  0008               	tblrd		*
 10480  002EE6  FFFF               	dw	65535	; errata NOP
 10481  002EE8  50F5               	movf	tablat,w,c
 10482  002EEA  5E01               	subwf	?___wmul,f,c
 10483  002EEC  0E00               	movlw	0
 10484  002EEE  5A02               	subwfb	?___wmul+1,f,c
 10485  002EF0  0E30               	movlw	48
 10486  002EF2  2401               	addwf	?___wmul,w,c
 10487  002EF4  6E15               	movwf	atoi@n,c
 10488  002EF6  0E00               	movlw	0
 10489  002EF8  2002               	addwfc	?___wmul+1,w,c
 10490  002EFA  6E16               	movwf	atoi@n+1,c
 10491  002EFC  D7CA               	goto	l4006
 10492  002EFE                     l4014:
 10493  002EFE  FFFF               	dw	65535	; assembler added errata NOP
 10494  002F00  0ED0               	movlw	208
 10495  002F02  6E0A               	movwf	??_atoi& (0+255),c
 10496  002F04  0EFF               	movlw	255
 10497  002F06  6E0B               	movwf	(??_atoi+1)& (0+255),c
 10498  002F08  C008  FFF6         	movff	atoi@s,tblptrl
 10499  002F0C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10500  002F10                     	if	0	;tblptru may be non-zero
 10501  002F10                     	endif
 10502  002F10                     	if	0	;tblptru may be non-zero
 10503  002F10                     	endif
 10504  002F10  0008               	tblrd		*
 10505  002F12  FFFF               	dw	65535	; errata NOP
 10506  002F14  50F5               	movf	tablat,w,c
 10507  002F16  6E0C               	movwf	(??_atoi+2)& (0+255),c
 10508  002F18  6A0D               	clrf	(??_atoi+3)& (0+255),c
 10509  002F1A  500A               	movf	??_atoi,w,c
 10510  002F1C  260C               	addwf	??_atoi+2,f,c
 10511  002F1E  500B               	movf	??_atoi+1,w,c
 10512  002F20  220D               	addwfc	??_atoi+3,f,c
 10513  002F22  500D               	movf	??_atoi+3,w,c
 10514  002F24  E106               	bnz	u3830
 10515  002F26  0E0A               	movlw	10
 10516  002F28  5C0C               	subwf	??_atoi+2,w,c
 10517  002F2A  B0D8               	btfsc	status,0,c
 10518  002F2C  D002               	goto	u3830
 10519  002F2E  0E01               	movlw	1
 10520  002F30  D002               	goto	u3840
 10521  002F32                     u3830:
 10522  002F32  FFFF               	dw	65535	; assembler added errata NOP
 10523  002F34  0E00               	movlw	0
 10524  002F36                     u3840:
 10525  002F36  FFFF               	dw	65535	; assembler added errata NOP
 10526  002F38  6E12               	movwf	_atoi$1723,c
 10527  002F3A  6A13               	clrf	_atoi$1723+1,c
 10528  002F3C  5012               	movf	_atoi$1723,w,c
 10529  002F3E  1013               	iorwf	_atoi$1723+1,w,c
 10530  002F40  A4D8               	btfss	status,2,c
 10531  002F42  D7C1               	goto	l4010
 10532  002F44  500E               	movf	atoi@neg,w,c
 10533  002F46  100F               	iorwf	atoi@neg+1,w,c
 10534  002F48  A4D8               	btfss	status,2,c
 10535  002F4A  D00D               	goto	l1316
 10536  002F4C  C015  F00A         	movff	atoi@n,??_atoi
 10537  002F50  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10538  002F54  1E0A               	comf	??_atoi,f,c
 10539  002F56  1E0B               	comf	??_atoi+1,f,c
 10540  002F58  4A0A               	infsnz	??_atoi,f,c
 10541  002F5A  2A0B               	incf	??_atoi+1,f,c
 10542  002F5C  C00A  F008         	movff	??_atoi,?_atoi
 10543  002F60  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10544  002F64  D005               	goto	l1319
 10545  002F66                     l1316:
 10546  002F66  FFFF               	dw	65535	; assembler added errata NOP
 10547  002F68  C015  F008         	movff	atoi@n,?_atoi
 10548  002F6C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10549  002F70                     l1319:
 10550  002F70  FFFF               	dw	65535	; assembler added errata NOP
 10551  002F72  0012               	return		;funcret
 10552  002F74  FFFF               	dw	65535	; errata NOP
 10553  002F76                     __end_of_atoi:
 10554                           	opt callstack 0
 10555                           
 10556 ;; *************** function _isspace *****************
 10557 ;; Defined at:
 10558 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  c               2    0[COMRAM] int 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  2    0[COMRAM] int 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10572 ;;      Params:         2       0       0       0       0       0       0
 10573 ;;      Locals:         1       0       0       0       0       0       0
 10574 ;;      Temps:          4       0       0       0       0       0       0
 10575 ;;      Totals:         7       0       0       0       0       0       0
 10576 ;;Total ram usage:        7 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:    2
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_atoi
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text44
 10587  003DE2                     __ptext44:
 10588                           	opt callstack 0
 10589  003DE2                     _isspace:
 10590                           	opt callstack 0
 10591  003DE2  FFFF               	dw	65535	; assembler added errata NOP
 10592                           
 10593                           ;incstack = 0
 10594  003DE4  0E01               	movlw	1
 10595  003DE6  6E07               	movwf	_isspace$1758,c
 10596  003DE8  0E20               	movlw	32
 10597  003DEA  1801               	xorwf	isspace@c,w,c
 10598  003DEC  1002               	iorwf	isspace@c+1,w,c
 10599  003DEE  B4D8               	btfsc	status,2,c
 10600  003DF0  D014               	goto	l3714
 10601  003DF2  0EF7               	movlw	247
 10602  003DF4  6E03               	movwf	??_isspace& (0+255),c
 10603  003DF6  0EFF               	movlw	255
 10604  003DF8  6E04               	movwf	(??_isspace+1)& (0+255),c
 10605  003DFA  C001  F005         	movff	isspace@c,??_isspace+2
 10606  003DFE  C002  F006         	movff	isspace@c+1,??_isspace+3
 10607  003E02  5003               	movf	??_isspace,w,c
 10608  003E04  2605               	addwf	??_isspace+2,f,c
 10609  003E06  5004               	movf	??_isspace+1,w,c
 10610  003E08  2206               	addwfc	??_isspace+3,f,c
 10611  003E0A  5006               	movf	??_isspace+3,w,c
 10612  003E0C  E104               	bnz	u3200
 10613  003E0E  0E05               	movlw	5
 10614  003E10  5C05               	subwf	??_isspace+2,w,c
 10615  003E12  A0D8               	btfss	status,0,c
 10616  003E14  D002               	goto	l3714
 10617  003E16                     u3200:
 10618  003E16  0E00               	movlw	0
 10619  003E18  6E07               	movwf	_isspace$1758,c
 10620  003E1A                     l3714:
 10621  003E1A  FFFF               	dw	65535	; assembler added errata NOP
 10622  003E1C  C007  F001         	movff	_isspace$1758,?_isspace
 10623  003E20  6A02               	clrf	?_isspace+1,c
 10624  003E22  0012               	return		;funcret
 10625  003E24  FFFF               	dw	65535	; errata NOP
 10626  003E26                     __end_of_isspace:
 10627                           	opt callstack 0
 10628                           
 10629 ;; *************** function _isdigit *****************
 10630 ;; Defined at:
 10631 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  c               2    0[COMRAM] int 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;		None
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  2    0[COMRAM] int 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2, status,0
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10645 ;;      Params:         2       0       0       0       0       0       0
 10646 ;;      Locals:         0       0       0       0       0       0       0
 10647 ;;      Temps:          4       0       0       0       0       0       0
 10648 ;;      Totals:         6       0       0       0       0       0       0
 10649 ;;Total ram usage:        6 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:    2
 10652 ;; This function calls:
 10653 ;;		Nothing
 10654 ;; This function is called by:
 10655 ;;		_vfpfcnvrt
 10656 ;;		_atoi
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	text45
 10661  003F8C                     __ptext45:
 10662                           	opt callstack 0
 10663  003F8C                     _isdigit:
 10664                           	opt callstack 0
 10665  003F8C  FFFF               	dw	65535	; assembler added errata NOP
 10666                           
 10667                           ;incstack = 0
 10668  003F8E  0ED0               	movlw	208
 10669  003F90  6E03               	movwf	??_isdigit& (0+255),c
 10670  003F92  0EFF               	movlw	255
 10671  003F94  6E04               	movwf	(??_isdigit+1)& (0+255),c
 10672  003F96  C001  F005         	movff	isdigit@c,??_isdigit+2
 10673  003F9A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10674  003F9E  5003               	movf	??_isdigit,w,c
 10675  003FA0  2605               	addwf	??_isdigit+2,f,c
 10676  003FA2  5004               	movf	??_isdigit+1,w,c
 10677  003FA4  2206               	addwfc	??_isdigit+3,f,c
 10678  003FA6  5006               	movf	??_isdigit+3,w,c
 10679  003FA8  E106               	bnz	u2970
 10680  003FAA  0E0A               	movlw	10
 10681  003FAC  5C05               	subwf	??_isdigit+2,w,c
 10682  003FAE  B0D8               	btfsc	status,0,c
 10683  003FB0  D002               	goto	u2970
 10684  003FB2  0E01               	movlw	1
 10685  003FB4  D002               	goto	u2980
 10686  003FB6                     u2970:
 10687  003FB6  FFFF               	dw	65535	; assembler added errata NOP
 10688  003FB8  0E00               	movlw	0
 10689  003FBA                     u2980:
 10690  003FBA  FFFF               	dw	65535	; assembler added errata NOP
 10691  003FBC  6E01               	movwf	?_isdigit,c
 10692  003FBE  6A02               	clrf	?_isdigit+1,c
 10693  003FC0  0012               	return		;funcret
 10694  003FC2  FFFF               	dw	65535	; errata NOP
 10695  003FC4                     __end_of_isdigit:
 10696                           	opt callstack 0
 10697                           
 10698 ;; *************** function ___wmul *****************
 10699 ;; Defined at:
 10700 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  multiplier      2    0[COMRAM] unsigned int 
 10703 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;  product         2    4[COMRAM] unsigned int 
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  2    0[COMRAM] unsigned int 
 10708 ;; Registers used:
 10709 ;;		wreg, status,2, status,0, prodl, prodh
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10715 ;;      Params:         4       0       0       0       0       0       0
 10716 ;;      Locals:         2       0       0       0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0
 10718 ;;      Totals:         6       0       0       0       0       0       0
 10719 ;;Total ram usage:        6 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    2
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_atoi
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text46
 10730  000064                     __ptext46:
 10731                           	opt callstack 0
 10732  000064                     ___wmul:
 10733                           	opt callstack 0
 10734  000064  FFFF               	dw	65535	; assembler added errata NOP
 10735                           
 10736                           ;incstack = 0
 10737  000066  5001               	movf	___wmul@multiplier,w,c
 10738  000068  0203               	mulwf	___wmul@multiplicand,c
 10739  00006A  CFF3 F005          	movff	prodl,___wmul@product
 10740  00006E  CFF4 F006          	movff	prodh,___wmul@product+1
 10741  000072  5001               	movf	___wmul@multiplier,w,c
 10742  000074  0204               	mulwf	___wmul@multiplicand+1,c
 10743  000076  50F3               	movf	prodl,w,c
 10744  000078  2606               	addwf	___wmul@product+1,f,c
 10745  00007A  5002               	movf	___wmul@multiplier+1,w,c
 10746  00007C  0203               	mulwf	___wmul@multiplicand,c
 10747  00007E  50F3               	movf	prodl,w,c
 10748  000080  2606               	addwf	___wmul@product+1,f,c
 10749  000082  C005  F001         	movff	___wmul@product,?___wmul
 10750  000086  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10751  00008A  0012               	return		;funcret
 10752  00008C  FFFF               	dw	65535	; errata NOP
 10753  00008E                     __end_of___wmul:
 10754                           	opt callstack 0
 10755                           
 10756 ;; *************** function _getchar *****************
 10757 ;; Defined at:
 10758 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  2   26[None  ] int 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10772 ;;      Params:         0       0       0       0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0
 10775 ;;      Totals:         0       0       0       0       0       0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    4
 10779 ;; This function calls:
 10780 ;;		_fgetc
 10781 ;; This function is called by:
 10782 ;;		_int_to_char
 10783 ;;		_float_to_char
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text47
 10788  000198                     __ptext47:
 10789                           	opt callstack 0
 10790  000198                     _getchar:
 10791                           	opt callstack 0
 10792  000198  FFFF               	dw	65535	; assembler added errata NOP
 10793                           
 10794                           ;	Return value of _getchar is never used
 10795                           
 10796                           ;incstack = 0
 10797  00019A  0E00               	movlw	0
 10798  00019C  6E03               	movwf	fgetc@fp,c
 10799  00019E  0E00               	movlw	0
 10800  0001A0  6E04               	movwf	fgetc@fp+1,c
 10801  0001A2  EC44  F01D         	call	_fgetc	;wreg free
 10802  0001A6  0012               	return		;funcret
 10803  0001A8  FFFF               	dw	65535	; errata NOP
 10804  0001AA                     __end_of_getchar:
 10805                           	opt callstack 0
 10806                           
 10807 ;; *************** function _fgetc *****************
 10808 ;; Defined at:
 10809 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10812 ;;		 -> NULL(0), 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  c               2    9[COMRAM] int 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  2    2[COMRAM] int 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10824 ;;      Params:         2       0       0       0       0       0       0
 10825 ;;      Locals:         2       0       0       0       0       0       0
 10826 ;;      Temps:          5       0       0       0       0       0       0
 10827 ;;      Totals:         9       0       0       0       0       0       0
 10828 ;;Total ram usage:        9 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    3
 10831 ;; This function calls:
 10832 ;;		_getch
 10833 ;; This function is called by:
 10834 ;;		_getchar
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text48
 10839  003A88                     __ptext48:
 10840                           	opt callstack 0
 10841  003A88                     _fgetc:
 10842                           	opt callstack 0
 10843  003A88  FFFF               	dw	65535	; assembler added errata NOP
 10844                           
 10845                           ;incstack = 0
 10846  003A8A  5003               	movf	fgetc@fp,w,c
 10847  003A8C  1004               	iorwf	fgetc@fp+1,w,c
 10848  003A8E  A4D8               	btfss	status,2,c
 10849  003A90  D012               	goto	l4650
 10850  003A92  507E               	movf	_ungetcnt,w,c
 10851  003A94  B4D8               	btfsc	status,2,c
 10852  003A96  D007               	goto	l4648
 10853  003A98  0E00               	movlw	0
 10854  003A9A  6E0B               	movwf	fgetc@c+1,c
 10855  003A9C  0E00               	movlw	0
 10856  003A9E  6E0A               	movwf	fgetc@c,c
 10857  003AA0  0E00               	movlw	0
 10858  003AA2  6E7E               	movwf	_ungetcnt,c
 10859  003AA4  D02F               	goto	l4652
 10860  003AA6                     l4648:
 10861  003AA6  FFFF               	dw	65535	; assembler added errata NOP
 10862  003AA8  ECFB  F01F         	call	_getch	;wreg free
 10863  003AAC  C001  F00A         	movff	?_getch,fgetc@c
 10864  003AB0  C002  F00B         	movff	?_getch+1,fgetc@c+1
 10865  003AB4  D027               	goto	l4652
 10866  003AB6                     l4650:
 10867  003AB6  FFFF               	dw	65535	; assembler added errata NOP
 10868  003AB8  EE20 F002          	lfsr	2,2
 10869  003ABC  5003               	movf	fgetc@fp,w,c
 10870  003ABE  26D9               	addwf	fsr2l,f,c
 10871  003AC0  5004               	movf	fgetc@fp+1,w,c
 10872  003AC2  22DA               	addwfc	fsr2h,f,c
 10873  003AC4  CFDE F005          	movff	postinc2,??_fgetc
 10874  003AC8  CFDD F006          	movff	postdec2,??_fgetc+1
 10875  003ACC  C003  FFD9         	movff	fgetc@fp,fsr2l
 10876  003AD0  C004  FFDA         	movff	fgetc@fp+1,fsr2h
 10877  003AD4  CFDE F007          	movff	postinc2,??_fgetc+2
 10878  003AD8  CFDD F008          	movff	postdec2,??_fgetc+3
 10879  003ADC  5005               	movf	??_fgetc,w,c
 10880  003ADE  2407               	addwf	??_fgetc+2,w,c
 10881  003AE0  6ED9               	movwf	fsr2l,c
 10882  003AE2  5006               	movf	??_fgetc+1,w,c
 10883  003AE4  2008               	addwfc	??_fgetc+3,w,c
 10884  003AE6  6EDA               	movwf	fsr2h,c
 10885  003AE8  50DF               	movf	indf2,w,c
 10886  003AEA  6E09               	movwf	(??_fgetc+4)& (0+255),c
 10887  003AEC  5009               	movf	??_fgetc+4,w,c
 10888  003AEE  6E0A               	movwf	fgetc@c,c
 10889  003AF0  6A0B               	clrf	fgetc@c+1,c
 10890  003AF2  EE20 F002          	lfsr	2,2
 10891  003AF6  5003               	movf	fgetc@fp,w,c
 10892  003AF8  26D9               	addwf	fsr2l,f,c
 10893  003AFA  5004               	movf	fgetc@fp+1,w,c
 10894  003AFC  22DA               	addwfc	fsr2h,f,c
 10895  003AFE  2ADE               	incf	postinc2,f,c
 10896  003B00  0E00               	movlw	0
 10897  003B02  22DD               	addwfc	postdec2,f,c
 10898  003B04                     l4652:
 10899  003B04  FFFF               	dw	65535	; assembler added errata NOP
 10900  003B06  C00A  F003         	movff	fgetc@c,?_fgetc
 10901  003B0A  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
 10902  003B0E  0012               	return		;funcret
 10903  003B10  FFFF               	dw	65535	; errata NOP
 10904  003B12                     __end_of_fgetc:
 10905                           	opt callstack 0
 10906                           
 10907 ;; *************** function _getch *****************
 10908 ;; Defined at:
 10909 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  2    0[COMRAM] int 
 10916 ;; Registers used:
 10917 ;;		None
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10923 ;;      Params:         2       0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0
 10926 ;;      Totals:         2       0       0       0       0       0       0
 10927 ;;Total ram usage:        2 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    2
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_fgetc
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text49
 10938  003FF6                     __ptext49:
 10939                           	opt callstack 0
 10940  003FF6                     _getch:
 10941                           	opt callstack 0
 10942  003FF6  FFFF               	dw	65535	; assembler added errata NOP
 10943                           
 10944                           ;incstack = 0
 10945  003FF8  6801               	setf	?_getch,c
 10946  003FFA  6802               	setf	?_getch+1,c
 10947  003FFC  0012               	return		;funcret
 10948  003FFE  FFFF               	dw	65535	; errata NOP
 10949  004000                     __end_of_getch:
 10950                           	opt callstack 0
 10951                           
 10952 ;; *************** function _UARTSendString *****************
 10953 ;; Defined at:
 10954 ;;		line 72 in file "serial.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;  c               2   32[BANK0 ] PTR unsigned char 
 10957 ;;		 -> STR_15(24), STR_14(13), STR_13(9), STR_12(13), 
 10958 ;;		 -> STR_11(9), STR_10(26), STR_9(9), STR_8(3), 
 10959 ;;		 -> STR_7(17), STR_6(12), STR_5(3), STR_4(24), 
 10960 ;;		 -> STR_3(29), int_to_char@result(10), 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  i               2   36[BANK0 ] int 
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  1    wreg      void 
 10965 ;; Registers used:
 10966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10972 ;;      Params:         0       2       0       0       0       0       0
 10973 ;;      Locals:         0       2       0       0       0       0       0
 10974 ;;      Temps:          0       2       0       0       0       0       0
 10975 ;;      Totals:         0       6       0       0       0       0       0
 10976 ;;Total ram usage:        6 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:    3
 10979 ;; This function calls:
 10980 ;;		_UARTSendChar
 10981 ;; This function is called by:
 10982 ;;		_main
 10983 ;;		_read_SRAM
 10984 ;;		_write_SRAM
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text50
 10989  003B12                     __ptext50:
 10990                           	opt callstack 0
 10991  003B12                     _UARTSendString:
 10992                           	opt callstack 0
 10993  003B12  FFFF               	dw	65535	; assembler added errata NOP
 10994                           
 10995                           ;serial.c: 73:   TRISCbits.TRISC7 = 0;
 10996                           
 10997                           ;incstack = 0
 10998  003B14  9E94               	bcf	3988,7,c	;volatile
 10999                           
 11000                           ;serial.c: 74:   int i = 0;
 11001  003B16  0E00               	movlw	0
 11002  003B18  0100               	movlb	0	; () banked
 11003  003B1A  6FA5               	movwf	(UARTSendString@i+1)& (0+255),b
 11004  003B1C  0E00               	movlw	0
 11005  003B1E  6FA4               	movwf	UARTSendString@i& (0+255),b
 11006                           
 11007                           ;serial.c: 75:   while (c[i] != '\0') {
 11008  003B20  D01E               	goto	l4966
 11009  003B22                     l4962:
 11010  003B22  FFFF               	dw	65535	; assembler added errata NOP
 11011                           
 11012                           ;serial.c: 76:     UARTSendChar(c[i]);
 11013  003B24  0100               	movlb	0	; () banked
 11014  003B26  51A4               	movf	UARTSendString@i& (0+255),w,b
 11015  003B28  25A0               	addwf	UARTSendString@c& (0+255),w,b
 11016  003B2A  6FA2               	movwf	??_UARTSendString& (0+255),b
 11017  003B2C  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 11018  003B2E  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 11019  003B30  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 11020  003B32  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 11021  003B36  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 11022  003B3A  6AF8               	clrf	tblptru,c
 11023  003B3C  0E05               	movlw	(high __ramtop+-1)
 11024  003B3E  64F7               	cpfsgt	tblptrh,c
 11025  003B40  D004               	bra	u5227
 11026  003B42  0008               	tblrd		*
 11027  003B44  FFFF               	dw	65535	; errata NOP
 11028  003B46  50F5               	movf	tablat,w,c
 11029  003B48  D005               	bra	u5220
 11030  003B4A                     u5227:
 11031  003B4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11032  003B4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11033  003B52  50EF               	movf	indf0,w,c
 11034  003B54                     u5220:
 11035  003B54  ECAE  F000         	call	_UARTSendChar
 11036                           
 11037                           ;serial.c: 77:     i++;
 11038  003B58  0100               	movlb	0	; () banked
 11039  003B5A  4BA4               	infsnz	UARTSendString@i& (0+255),f,b
 11040  003B5C  2BA5               	incf	(UARTSendString@i+1)& (0+255),f,b
 11041  003B5E                     l4966:
 11042  003B5E  FFFF               	dw	65535	; assembler added errata NOP
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;serial.c: 75:   while (c[i] != '\0') {
 11046  003B60  51A4               	movf	UARTSendString@i& (0+255),w,b
 11047  003B62  25A0               	addwf	UARTSendString@c& (0+255),w,b
 11048  003B64  6FA2               	movwf	??_UARTSendString& (0+255),b
 11049  003B66  51A5               	movf	(UARTSendString@i+1)& (0+255),w,b
 11050  003B68  21A1               	addwfc	(UARTSendString@c+1)& (0+255),w,b
 11051  003B6A  6FA3               	movwf	(??_UARTSendString+1)& (0+255),b
 11052  003B6C  C0A2  FFF6         	movff	??_UARTSendString,tblptrl
 11053  003B70  C0A3  FFF7         	movff	??_UARTSendString+1,tblptrh
 11054  003B74  6AF8               	clrf	tblptru,c
 11055  003B76  0E05               	movlw	(high __ramtop+-1)
 11056  003B78  64F7               	cpfsgt	tblptrh,c
 11057  003B7A  D004               	bra	u5237
 11058  003B7C  0008               	tblrd		*
 11059  003B7E  FFFF               	dw	65535	; errata NOP
 11060  003B80  50F5               	movf	tablat,w,c
 11061  003B82  D005               	bra	u5230
 11062  003B84                     u5237:
 11063  003B84  CFF6 FFE9          	movff	tblptrl,fsr0l
 11064  003B88  CFF7 FFEA          	movff	tblptrh,fsr0h
 11065  003B8C  50EF               	movf	indf0,w,c
 11066  003B8E                     u5230:
 11067  003B8E  0900               	iorlw	0
 11068  003B90  B4D8               	btfsc	status,2,c
 11069  003B92  0012               	return		;funcret
 11070  003B94  FFFF               	dw	65535	; assembler added errata NOP
 11071  003B96  D7C5               	goto	l4962
 11072  003B98  FFFF               	dw	65535	; errata NOP
 11073  003B9A                     __end_of_UARTSendString:
 11074                           	opt callstack 0
 11075                           
 11076 ;; *************** function _UARTNewLine *****************
 11077 ;; Defined at:
 11078 ;;		line 48 in file "serial.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;		None
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  1    wreg      void 
 11085 ;; Registers used:
 11086 ;;		wreg, cstack
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11092 ;;      Params:         0       0       0       0       0       0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0
 11094 ;;      Temps:          0       0       0       0       0       0       0
 11095 ;;      Totals:         0       0       0       0       0       0       0
 11096 ;;Total ram usage:        0 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    3
 11099 ;; This function calls:
 11100 ;;		_UARTSendChar
 11101 ;; This function is called by:
 11102 ;;		_main
 11103 ;;		_read_SRAM
 11104 ;;		_write_SRAM
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           	psect	text51
 11109  000148                     __ptext51:
 11110                           	opt callstack 0
 11111  000148                     _UARTNewLine:
 11112                           	opt callstack 0
 11113  000148  FFFF               	dw	65535	; assembler added errata NOP
 11114                           
 11115                           ;serial.c: 49:   TRISCbits.TRISC7 = 0;
 11116                           
 11117                           ;incstack = 0
 11118  00014A  9E94               	bcf	3988,7,c	;volatile
 11119                           
 11120                           ;serial.c: 50:   UARTSendChar(0x0a);
 11121  00014C  0E0A               	movlw	10
 11122  00014E  ECAE  F000         	call	_UARTSendChar
 11123                           
 11124                           ;serial.c: 51:   UARTSendChar(0x0d);
 11125  000152  0E0D               	movlw	13
 11126  000154  ECAE  F000         	call	_UARTSendChar
 11127  000158  0012               	return		;funcret
 11128  00015A  FFFF               	dw	65535	; errata NOP
 11129  00015C                     __end_of_UARTNewLine:
 11130                           	opt callstack 0
 11131                           
 11132 ;; *************** function _UARTSendChar *****************
 11133 ;; Defined at:
 11134 ;;		line 54 in file "serial.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  c               1    wreg     unsigned char 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  c               1    0[COMRAM] unsigned char 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      void 
 11141 ;; Registers used:
 11142 ;;		wreg
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11148 ;;      Params:         0       0       0       0       0       0       0
 11149 ;;      Locals:         1       0       0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0
 11151 ;;      Totals:         1       0       0       0       0       0       0
 11152 ;;Total ram usage:        1 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:    2
 11155 ;; This function calls:
 11156 ;;		Nothing
 11157 ;; This function is called by:
 11158 ;;		_UARTNewLine
 11159 ;;		_UARTSendString
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text52
 11164  00015C                     __ptext52:
 11165                           	opt callstack 0
 11166  00015C                     _UARTSendChar:
 11167                           	opt callstack 0
 11168  00015C  FFFF               	dw	65535	; assembler added errata NOP
 11169                           
 11170                           ;incstack = 0
 11171                           ;UARTSendChar@c stored from wreg
 11172  00015E  6E01               	movwf	UARTSendChar@c,c
 11173                           
 11174                           ;serial.c: 55:   TRISCbits.TRISC7 = 0;
 11175  000160  9E94               	bcf	3988,7,c	;volatile
 11176  000162                     l232:
 11177  000162  FFFF               	dw	65535	; assembler added errata NOP
 11178  000164  A2AC               	btfss	4012,1,c	;volatile
 11179  000166  D7FD               	goto	l232
 11180                           
 11181                           ;serial.c: 57:   TXREG = c;
 11182  000168  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
 11183  00016C  0012               	return		;funcret
 11184  00016E  FFFF               	dw	65535	; errata NOP
 11185  000170                     __end_of_UARTSendChar:
 11186                           	opt callstack 0
 11187                           
 11188 ;; *************** function _interrupt_enable *****************
 11189 ;; Defined at:
 11190 ;;		line 15 in file "serial.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		None
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11204 ;;      Params:         0       0       0       0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0
 11207 ;;      Totals:         0       0       0       0       0       0       0
 11208 ;;Total ram usage:        0 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    2
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_main
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text53
 11219  0001AA                     __ptext53:
 11220                           	opt callstack 0
 11221  0001AA                     _interrupt_enable:
 11222                           	opt callstack 0
 11223  0001AA  FFFF               	dw	65535	; assembler added errata NOP
 11224                           
 11225                           ;serial.c: 16:   INTCONbits.GIE = 1;
 11226                           
 11227                           ;incstack = 0
 11228  0001AC  8EF2               	bsf	4082,7,c	;volatile
 11229                           
 11230                           ;serial.c: 17:   INTCONbits.PEIE = 1;
 11231  0001AE  8CF2               	bsf	4082,6,c	;volatile
 11232                           
 11233                           ;serial.c: 18:   INTCONbits.TMR0IE = 1;
 11234  0001B0  8AF2               	bsf	4082,5,c	;volatile
 11235                           
 11236                           ;serial.c: 19:   INTCON2bits.TMR0IP = 1;
 11237  0001B2  84F1               	bsf	4081,2,c	;volatile
 11238                           
 11239                           ;serial.c: 20:   RCONbits.IPEN = 1;
 11240  0001B4  8ED0               	bsf	4048,7,c	;volatile
 11241  0001B6  0012               	return		;funcret
 11242  0001B8  FFFF               	dw	65535	; errata NOP
 11243  0001BA                     __end_of_interrupt_enable:
 11244                           	opt callstack 0
 11245                           
 11246 ;; *************** function _interrupt_disable *****************
 11247 ;; Defined at:
 11248 ;;		line 23 in file "serial.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		None
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11262 ;;      Params:         0       0       0       0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:    2
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_main
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text54
 11277  0001C8                     __ptext54:
 11278                           	opt callstack 0
 11279  0001C8                     _interrupt_disable:
 11280                           	opt callstack 0
 11281  0001C8  FFFF               	dw	65535	; assembler added errata NOP
 11282                           
 11283                           ;serial.c: 24:   INTCONbits.GIE = 0;
 11284                           
 11285                           ;incstack = 0
 11286  0001CA  9EF2               	bcf	4082,7,c	;volatile
 11287                           
 11288                           ;serial.c: 25:   INTCONbits.PEIE = 0;
 11289  0001CC  9CF2               	bcf	4082,6,c	;volatile
 11290                           
 11291                           ;serial.c: 26:   INTCONbits.TMR0IE = 0;
 11292  0001CE  9AF2               	bcf	4082,5,c	;volatile
 11293                           
 11294                           ;serial.c: 27:   INTCON2bits.TMR0IP = 0;
 11295  0001D0  94F1               	bcf	4081,2,c	;volatile
 11296  0001D2  0012               	return		;funcret
 11297  0001D4  FFFF               	dw	65535	; errata NOP
 11298  0001D6                     __end_of_interrupt_disable:
 11299                           	opt callstack 0
 11300                           
 11301 ;; *************** function _initialize_TX *****************
 11302 ;; Defined at:
 11303 ;;		line 30 in file "serial.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11317 ;;      Params:         0       0       0       0       0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0
 11320 ;;      Totals:         0       0       0       0       0       0       0
 11321 ;;Total ram usage:        0 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    2
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text55
 11332  000170                     __ptext55:
 11333                           	opt callstack 0
 11334  000170                     _initialize_TX:
 11335                           	opt callstack 0
 11336  000170  FFFF               	dw	65535	; assembler added errata NOP
 11337                           
 11338                           ;serial.c: 31:   TXSTAbits.TX9 = 1;
 11339                           
 11340                           ;incstack = 0
 11341  000172  8CAC               	bsf	4012,6,c	;volatile
 11342                           
 11343                           ;serial.c: 32:   TXSTAbits.TXEN = 1;
 11344  000174  8AAC               	bsf	4012,5,c	;volatile
 11345                           
 11346                           ;serial.c: 33:   TXSTAbits.SYNC = 0;
 11347  000176  98AC               	bcf	4012,4,c	;volatile
 11348                           
 11349                           ;serial.c: 34:   TXSTAbits.BRGH = 0;
 11350  000178  94AC               	bcf	4012,2,c	;volatile
 11351                           
 11352                           ;serial.c: 35:   TXSTAbits.TX9D = 1;
 11353  00017A  80AC               	bsf	4012,0,c	;volatile
 11354                           
 11355                           ;serial.c: 36:   SPBRG = 25;
 11356  00017C  0E19               	movlw	25
 11357  00017E  6EAF               	movwf	4015,c	;volatile
 11358  000180  0012               	return		;funcret
 11359  000182  FFFF               	dw	65535	; errata NOP
 11360  000184                     __end_of_initialize_TX:
 11361                           	opt callstack 0
 11362                           
 11363 ;; *************** function _initialize_RX *****************
 11364 ;; Defined at:
 11365 ;;		line 39 in file "serial.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;		None
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		wreg, status,2
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11379 ;;      Params:         0       0       0       0       0       0       0
 11380 ;;      Locals:         0       0       0       0       0       0       0
 11381 ;;      Temps:          0       0       0       0       0       0       0
 11382 ;;      Totals:         0       0       0       0       0       0       0
 11383 ;;Total ram usage:        0 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    2
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_main
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text56
 11394  000184                     __ptext56:
 11395                           	opt callstack 0
 11396  000184                     _initialize_RX:
 11397                           	opt callstack 0
 11398  000184  FFFF               	dw	65535	; assembler added errata NOP
 11399                           
 11400                           ;serial.c: 40:   RCSTA = 0x00;
 11401                           
 11402                           ;incstack = 0
 11403  000186  0E00               	movlw	0
 11404  000188  6EAB               	movwf	4011,c	;volatile
 11405                           
 11406                           ;serial.c: 41:   RCSTAbits.SPEN = 1;
 11407  00018A  8EAB               	bsf	4011,7,c	;volatile
 11408                           
 11409                           ;serial.c: 42:   RCSTAbits.RX9 = 1;
 11410  00018C  8CAB               	bsf	4011,6,c	;volatile
 11411                           
 11412                           ;serial.c: 43:   RCSTAbits.CREN = 1;
 11413  00018E  88AB               	bsf	4011,4,c	;volatile
 11414                           
 11415                           ;serial.c: 44:   RCSTAbits.ADDEN = 0;
 11416  000190  96AB               	bcf	4011,3,c	;volatile
 11417                           
 11418                           ;serial.c: 45:   RCSTAbits.RX9D = 1;
 11419  000192  80AB               	bsf	4011,0,c	;volatile
 11420  000194  0012               	return		;funcret
 11421  000196  FFFF               	dw	65535	; errata NOP
 11422  000198                     __end_of_initialize_RX:
 11423                           	opt callstack 0
 11424                           
 11425 ;; *************** function _initialize_PWM *****************
 11426 ;; Defined at:
 11427 ;;		line 5 in file "pwm.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  freq            2    0[COMRAM] int 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11441 ;;      Params:         2       0       0       0       0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0
 11444 ;;      Totals:         2       0       0       0       0       0       0
 11445 ;;Total ram usage:        2 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    2
 11448 ;; This function calls:
 11449 ;;		Nothing
 11450 ;; This function is called by:
 11451 ;;		_main
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text57
 11456  00011A                     __ptext57:
 11457                           	opt callstack 0
 11458  00011A                     _initialize_PWM:
 11459                           	opt callstack 0
 11460  00011A  FFFF               	dw	65535	; assembler added errata NOP
 11461                           
 11462                           ;pwm.c: 6:   T2CON &= ~(0x04);
 11463                           
 11464                           ;incstack = 0
 11465  00011C  94CA               	bcf	4042,2,c	;volatile
 11466                           
 11467                           ;pwm.c: 7:   PR2 = 0xFF;
 11468  00011E  68CB               	setf	4043,c	;volatile
 11469                           
 11470                           ;pwm.c: 8:   CCPR1L = 0xAA;
 11471  000120  0EAA               	movlw	170
 11472  000122  6EBE               	movwf	4030,c	;volatile
 11473                           
 11474                           ;pwm.c: 9:   CCP1CON |= 0x00;
 11475  000124  50BD               	movf	4029,w,c	;volatile
 11476                           
 11477                           ;pwm.c: 10:   T2CON = 0x07;
 11478  000126  0E07               	movlw	7
 11479  000128  6ECA               	movwf	4042,c	;volatile
 11480                           
 11481                           ;pwm.c: 11:   CCP1CON |= 0x0C;
 11482  00012A  0E0C               	movlw	12
 11483  00012C  12BD               	iorwf	4029,f,c	;volatile
 11484  00012E  0012               	return		;funcret
 11485  000130  FFFF               	dw	65535	; errata NOP
 11486  000132                     __end_of_initialize_PWM:
 11487                           	opt callstack 0
 11488                           
 11489 ;; *************** function _UARTRecieveChar *****************
 11490 ;; Defined at:
 11491 ;;		line 60 in file "serial.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;		None
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  1    wreg      unsigned char 
 11498 ;; Registers used:
 11499 ;;		wreg, status,2
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11505 ;;      Params:         0       0       0       0       0       0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0
 11507 ;;      Temps:          1       0       0       0       0       0       0
 11508 ;;      Totals:         1       0       0       0       0       0       0
 11509 ;;Total ram usage:        1 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; Hardware stack levels required when called:    2
 11512 ;; This function calls:
 11513 ;;		Nothing
 11514 ;; This function is called by:
 11515 ;;		_main
 11516 ;; This function uses a non-reentrant model
 11517 ;;
 11518                           
 11519                           	psect	text58
 11520  000038                     __ptext58:
 11521                           	opt callstack 0
 11522  000038                     _UARTRecieveChar:
 11523                           	opt callstack 0
 11524  000038  FFFF               	dw	65535	; assembler added errata NOP
 11525                           
 11526                           ;serial.c: 61:   while (RCIF == 0) {
 11527                           
 11528                           ;incstack = 0
 11529  00003A  D00E               	goto	l5120
 11530  00003C                     l239:
 11531  00003C  FFFF               	dw	65535	; assembler added errata NOP
 11532                           
 11533                           ;serial.c: 62:     if (RCSTAbits.OERR == 1) {
 11534  00003E  A2AB               	btfss	4011,1,c	;volatile
 11535  000040  D00B               	goto	l5120
 11536                           
 11537                           ;serial.c: 63:       RCSTAbits.OERR = 0;
 11538  000042  92AB               	bcf	4011,1,c	;volatile
 11539                           
 11540                           ;serial.c: 64:       RCSTAbits.CREN = 0;
 11541  000044  98AB               	bcf	4011,4,c	;volatile
 11542                           
 11543                           ;serial.c: 65:       RCSTAbits.CREN = 1;
 11544  000046  88AB               	bsf	4011,4,c	;volatile
 11545                           
 11546                           ;serial.c: 66:       _delay((unsigned long)((10)*(16000000/4000.0)));
 11547  000048  0E27               	movlw	39
 11548  00004A  6E01               	movwf	??_UARTRecieveChar& (0+255),c
 11549  00004C  0EFC               	movlw	252
 11550  00004E                     u5697:
 11551  00004E  FFFF               	dw	65535	; errata NOP
 11552  000050  2EE8               	decfsz	wreg,f,c
 11553  000052  D7FD               	bra	u5697
 11554  000054  2E01               	decfsz	??_UARTRecieveChar& (0+255),f,c
 11555  000056  D7FB               	bra	u5697
 11556  000058                     l5120:
 11557  000058  FFFF               	dw	65535	; assembler added errata NOP
 11558                           
 11559                           ;serial.c: 61:   while (RCIF == 0) {
 11560  00005A  AA9E               	btfss	3998,5,c	;volatile
 11561  00005C  D7EF               	goto	l239
 11562                           
 11563                           ;serial.c: 69:   return RCREG1;
 11564  00005E  50AE               	movf	4014,w,c	;volatile
 11565  000060  0012               	return		;funcret
 11566  000062  FFFF               	dw	65535	; errata NOP
 11567  000064                     __end_of_UARTRecieveChar:
 11568                           	opt callstack 0
 11569                           
 11570 ;; *************** function _Timer0_Init *****************
 11571 ;; Defined at:
 11572 ;;		line 8 in file "timer.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;		None
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;		None
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      void 
 11579 ;; Registers used:
 11580 ;;		wreg, status,2
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11586 ;;      Params:         0       0       0       0       0       0       0
 11587 ;;      Locals:         0       0       0       0       0       0       0
 11588 ;;      Temps:          0       0       0       0       0       0       0
 11589 ;;      Totals:         0       0       0       0       0       0       0
 11590 ;;Total ram usage:        0 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    2
 11593 ;; This function calls:
 11594 ;;		Nothing
 11595 ;; This function is called by:
 11596 ;;		_main
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text59
 11601  00008E                     __ptext59:
 11602                           	opt callstack 0
 11603  00008E                     _Timer0_Init:
 11604                           	opt callstack 0
 11605  00008E  FFFF               	dw	65535	; assembler added errata NOP
 11606                           
 11607                           ;timer.c: 9:  time_ms = 0;
 11608                           
 11609                           ;incstack = 0
 11610  000090  0E00               	movlw	0
 11611  000092  0100               	movlb	0	; () banked
 11612  000094  6FC4               	movwf	_time_ms& (0+255),b	;volatile
 11613  000096  0E00               	movlw	0
 11614  000098  6FC5               	movwf	(_time_ms+1)& (0+255),b	;volatile
 11615  00009A  0E00               	movlw	0
 11616  00009C  6FC6               	movwf	(_time_ms+2)& (0+255),b	;volatile
 11617  00009E  0E00               	movlw	0
 11618  0000A0  6FC7               	movwf	(_time_ms+3)& (0+255),b	;volatile
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
 11622  0000A2  9CD5               	bcf	4053,6,c	;volatile
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;timer.c: 11:  TMR0H = 0xFF;
 11626  0000A4  68D7               	setf	4055,c	;volatile
 11627                           
 11628                           ;timer.c: 12:  TMR0L = 0x34;
 11629  0000A6  0E34               	movlw	52
 11630  0000A8  6ED6               	movwf	4054,c	;volatile
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
 11634  0000AA  94F2               	bcf	4082,2,c	;volatile
 11635                           
 11636                           ;timer.c: 14:  T0CON = 0x00;
 11637  0000AC  0E00               	movlw	0
 11638  0000AE  6ED5               	movwf	4053,c	;volatile
 11639                           
 11640                           ; BSR set to: 0
 11641  0000B0  0012               	return		;funcret
 11642  0000B2  FFFF               	dw	65535	; errata NOP
 11643  0000B4                     __end_of_Timer0_Init:
 11644                           	opt callstack 0
 11645                           
 11646 ;; *************** function _timingISR *****************
 11647 ;; Defined at:
 11648 ;;		line 31 in file "timer.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;		None
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;		None
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      void 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0, cstack
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11662 ;;      Params:         0       0       0       0       0       0       0
 11663 ;;      Locals:         0       0       0       0       0       0       0
 11664 ;;      Temps:          0       0       0       0       0       0       0
 11665 ;;      Totals:         0       0       0       0       0       0       0
 11666 ;;Total ram usage:        0 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    1
 11669 ;; This function calls:
 11670 ;;		i2_Timer0_StartTimer
 11671 ;; This function is called by:
 11672 ;;		Interrupt level 2
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	intcode
 11677  000008                     __pintcode:
 11678                           	opt callstack 0
 11679  000008                     _timingISR:
 11680                           	opt callstack 0
 11681  000008  FFFF               	dw	65535	; assembler added errata NOP
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;incstack = 0
 11685  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11686                           
 11687                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
 11688  00000C  B4F2               	btfsc	4082,2,c	;volatile
 11689  00000E  AAF2               	btfss	4082,5,c	;volatile
 11690  000010  D00D               	goto	i2l295
 11691                           
 11692                           ;timer.c: 33:   TMR0IF = 0;
 11693  000012  94F2               	bcf	4082,2,c	;volatile
 11694                           
 11695                           ;timer.c: 34:   time_ms++;
 11696  000014  0E01               	movlw	1
 11697  000016  0100               	movlb	0	; () banked
 11698  000018  27C4               	addwf	_time_ms& (0+255),f,b	;volatile
 11699  00001A  0E00               	movlw	0
 11700  00001C  23C5               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
 11701  00001E  23C6               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
 11702  000020  23C7               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;timer.c: 35:   TMR0H = 0xFF;
 11706  000022  68D7               	setf	4055,c	;volatile
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;timer.c: 36:   TMR0L = 0x34;
 11710  000024  0E34               	movlw	52
 11711  000026  6ED6               	movwf	4054,c	;volatile
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;timer.c: 37:   Timer0_StartTimer();
 11715  000028  ECF3  F000         	call	i2_Timer0_StartTimer	;wreg free
 11716  00002C                     i2l295:
 11717  00002C  FFFF               	dw	65535	; assembler added errata NOP
 11718  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11719  000030  0011               	retfie		f
 11720  000032  FFFF               	dw	65535	; errata NOP
 11721  000034                     __end_of_timingISR:
 11722                           	opt callstack 0
 11723                           
 11724 ;; *************** function i2_Timer0_StartTimer *****************
 11725 ;; Defined at:
 11726 ;;		line 21 in file "timer.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  2    0[None  ] int 
 11733 ;; Registers used:
 11734 ;;		None
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11740 ;;      Params:         0       0       0       0       0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_timingISR
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text61
 11754  0001E6                     __ptext61:
 11755                           	opt callstack 0
 11756  0001E6                     i2_Timer0_StartTimer:
 11757                           	opt callstack 0
 11758  0001E6  FFFF               	dw	65535	; assembler added errata NOP
 11759                           
 11760                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
 11761                           
 11762                           ;incstack = 0
 11763  0001E8  8ED5               	bsf	4053,7,c	;volatile
 11764                           
 11765                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
 11766  0001EA  0012               	return		;funcret
 11767  0001EC  FFFF               	dw	65535	; errata NOP
 11768  0001EE                     __end_ofi2_Timer0_StartTimer:
 11769                           	opt callstack 0
 11770                           
 11771                           	psect	rparam
 11772  0000                     
 11773                           	psect	temp
 11774  00007F                     btemp:
 11775                           	opt callstack 0
 11776  00007F                     	ds	1
 11777  0000                     int$flags	set	btemp
 11778  0000                     wtemp8	set	btemp+1
 11779  0000                     ttemp5	set	btemp+1
 11780  0000                     ttemp6	set	btemp+4
 11781  0000                     ttemp7	set	btemp+8
 11782                           tosu	equ	0xFFF
 11783                           tosh	equ	0xFFE
 11784                           tosl	equ	0xFFD
 11785                           stkptr	equ	0xFFC
 11786                           pclatu	equ	0xFFB
 11787                           pclath	equ	0xFFA
 11788                           pcl	equ	0xFF9
 11789                           tblptru	equ	0xFF8
 11790                           tblptrh	equ	0xFF7
 11791                           tblptrl	equ	0xFF6
 11792                           tablat	equ	0xFF5
 11793                           prodh	equ	0xFF4
 11794                           prodl	equ	0xFF3
 11795                           indf0	equ	0xFEF
 11796                           postinc0	equ	0xFEE
 11797                           postdec0	equ	0xFED
 11798                           preinc0	equ	0xFEC
 11799                           plusw0	equ	0xFEB
 11800                           fsr0h	equ	0xFEA
 11801                           fsr0l	equ	0xFE9
 11802                           wreg	equ	0xFE8
 11803                           indf1	equ	0xFE7
 11804                           postinc1	equ	0xFE6
 11805                           postdec1	equ	0xFE5
 11806                           preinc1	equ	0xFE4
 11807                           plusw1	equ	0xFE3
 11808                           fsr1h	equ	0xFE2
 11809                           fsr1l	equ	0xFE1
 11810                           bsr	equ	0xFE0
 11811                           indf2	equ	0xFDF
 11812                           postinc2	equ	0xFDE
 11813                           postdec2	equ	0xFDD
 11814                           preinc2	equ	0xFDC
 11815                           plusw2	equ	0xFDB
 11816                           fsr2h	equ	0xFDA
 11817                           fsr2l	equ	0xFD9
 11818                           status	equ	0xFD8


Data Sizes:
    Strings     240
    Constant    0
    Data        7
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     59     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_145(CODE[3]), STR_141(CODE[3]), STR_136(CODE[3]), STR_132(CODE[3]), 
		 -> STR_127(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), STR_114(CODE[4]), 
		 -> STR_109(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_94(CODE[4]), 
		 -> STR_89(CODE[3]), STR_84(CODE[3]), STR_79(CODE[3]), STR_74(CODE[4]), 
		 -> STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), STR_54(CODE[4]), 
		 -> STR_49(CODE[3]), STR_45(CODE[3]), STR_40(CODE[3]), STR_36(CODE[3]), 
		 -> STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[4]), STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1724_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 29
		 -> STR_15(CODE[24]), STR_14(CODE[13]), STR_13(CODE[9]), STR_12(CODE[13]), 
		 -> STR_11(CODE[9]), STR_10(CODE[26]), STR_9(CODE[9]), STR_8(CODE[3]), 
		 -> STR_7(CODE[17]), STR_6(CODE[12]), STR_5(CODE[3]), STR_4(CODE[24]), 
		 -> STR_3(CODE[29]), int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    S43$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _write_SRAM->_int_to_char
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___lldiv->_ReadTime
    ___fltol->_get_temp
    _read_SRAM->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_SRAM
    _write_SRAM->_UARTSendString
    _read_SRAM->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  166948
                                             52 BANK0      7     7      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                    _UARTRecieveChar
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                  _interrupt_disable
                   _interrupt_enable
                          _read_SRAM
                     _set_duty_cycle
                         _write_SRAM
 ---------------------------------------------------------------------------------
 (1) _write_SRAM                                          14    14      0   57691
                                             38 BANK0     14    14      0
                           _ReadTime
                  _Timer0_StartTimer
                   _Timer0_StopTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                            ___lldiv
                           _get_temp
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (2) _write_op                                             2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
                           _ReadTime (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer0_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTime                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     547
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _read_SRAM                                            8     6      2   51623
                                             38 BANK0      8     6      2
                        _UARTNewLine
                     _UARTSendString
                        _int_to_char
                            _read_op
 ---------------------------------------------------------------------------------
 (2) _read_op                                              2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _int_to_char                                         18    14      4   49562
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (4) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UARTSendString                                       6     4      2    1784
                                             32 BANK0      6     4      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (2) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (3) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupt_enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_disable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UARTRecieveChar                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (12) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTRecieveChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _interrupt_disable
   _interrupt_enable
   _read_SRAM
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _read_op
   _set_duty_cycle
   _write_SRAM
     _ReadTime
     _Timer0_StartTimer
     _Timer0_StopTimer
     _UARTNewLine
       _UARTSendChar
     _UARTSendString
       _UARTSendChar
       _int_to_char (ARG)
         _getchar
           _fgetc
             _getch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     ___fltol
       _get_temp (ARG)
         _ADC_Init
         _ADC_Read
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
     ___lldiv
       _ReadTime (ARG)
     _get_temp
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _int_to_char
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
     _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3B      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      15        0.0%
DATA                 0      0      FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar  1 02:13:50 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                                l232 0162  
                                                                l163 2738  
                                                                l412 22AA  
                                                                l333 3D4A  
                                                                l414 22B4  
                                                                l334 3D32  
                                                                l239 003C  
                                                                l437 2C98  
                                                                l439 2CA2  
                                                                l457 3298  
                                                                l553 188C  
                                                                l394 3984  
                                                                l491 24B8  
                                                                l476 2AD6  
                                                                l493 24C2  
                                                                l637 3A72  
                                                                l478 2AE0  
                                                                l907 3654  
                                                       __CFG_CPB$OFF 000000  
                                                                _RC0 007C10  
                                                                _RB5 007C0D  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _abs 3EE0  
                                                                _lcd 00BB  
                                                                _pad 394E  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                   ?_UARTRecieveChar 0001  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               ?_abs 0013  
                                                               l1140 1D4A  
                                                               l1048 3560  
                                                               l1224 191E  
                                                               l1241 1BD6  
                                                               l1233 1B48  
                                                               l1058 387C  
                                                               l1234 1B42  
                                                               l1155 1E3E  
                                                               l1147 1F52  
                                                               l1139 1D72  
                                                               l1316 2F66  
                                                               l1228 1C0E  
                                                               l1164 1EB6  
                                                               l1165 1EB0  
                                                               l1319 2F70  
                                                               l1431 3CA0  
                                                               l1416 37E0  
                                                               l1272 3040  
                                                               l1265 2FB6  
                                                               l4010 2EC6  
                                                               l1362 3948  
                                                               l1426 3C96  
                                                               l4004 2E88  
                                                               l4100 086C  
                                                               l1268 30CC  
                                                               l1285 3F0C  
                                                               l4014 2EFE  
                                                               l4006 2E92  
                                                               l4008 2E9A  
                                                               l1288 3F16  
                                                               l4120 0974  
                                                               l5000 3A2A  
                                                               l4034 3750  
                                                               l5010 3A62  
                                                               l4036 3760  
                                                               l4140 0AD4  
                                                               l4116 0944  
                                                               l4060 0744  
                                                               l5020 35A8  
                                                               l4230 0FEA  
                                                               l4134 0A2E  
                                                               l4118 0964  
                                                               l4070 0766  
                                                               l4062 0756  
                                                               l5120 0058  
                                                               l3504 38BE  
                                                               l4400 17F2  
                                                               l4224 0F78  
                                                               l4216 0F04  
                                                               l4208 0E84  
                                                               l4144 0B0E  
                                                               l5040 360A  
                                                               l3514 3E32  
                                                               l3522 3FD0  
                                                               l3610 3168  
                                                               l3602 312A  
                                                               l4410 1840  
                                                               l4330 1466  
                                                               l4322 13F2  
                                                               l4314 1372  
                                                               l4234 0FF6  
                                                               l4154 0B78  
                                                               l4082 0784  
                                                               l4074 076E  
                                                               l4066 075E  
                                                               l4058 073E  
                                                               l3524 3FD6  
                                                               l3620 31C8  
                                                               l4244 103A  
                                                               l4164 0BF4  
                                                               l4084 07CA  
                                                               l5036 35F8  
                                                               l3518 3E4A  
                                                               l3542 397A  
                                                               l3702 3864  
                                                               l4406 1832  
                                                               l4254 1064  
                                                               l4238 1026  
                                                               l4174 0CD4  
                                                               l4078 0776  
                                                               l5054 3642  
                                                               l5046 3614  
                                                               l3552 39DA  
                                                               l3544 3990  
                                                               l3608 3152  
                                                               l3624 31E0  
                                                               l3640 33A0  
                                                               l4344 1570  
                                                               l4264 10F6  
                                                               l4192 0E2E  
                                                               l4184 0D7E  
                                                               l4096 083C  
                                                               l4416 1854  
                                                               l5048 3622  
                                                               l3714 3E1A  
                                                               l3538 396A  
                                                               l3722 3CBC  
                                                               l3650 33F8  
                                                               l4290 126E  
                                                               l4282 11FC  
                                                               l4274 1162  
                                                               l4098 085C  
                                                               l4530 1D5A  
                                                               l3548 39AA  
                                                               l3724 3CCA  
                                                               l3628 3208  
                                                               l3660 345C  
                                                               l3644 33C6  
                                                               l3820 2D6E  
                                                               l4372 1652  
                                                               l4436 3BB0  
                                                               l4532 1D60  
                                                               l4452 1C42  
                                                               l5420 2860  
                                                               l5412 2820  
                                                               l5404 27BC  
                                                               l4358 15F2  
                                                               l4438 3BD8  
                                                               l4710 18D8  
                                                               l4630 1F32  
                                                               l4518 1CF8  
                                                               l5430 28AE  
                                                               ?_pad 0011  
                                                               l3664 3484  
                                                               l3656 3444  
                                                               l3648 33E2  
                                                               l3752 22D2  
                                                               l3808 2CE2  
                                                               l4632 1F36  
                                                               l4480 1C96  
                                                               l4456 1C48  
                                                               l5424 2880  
                                                               l5416 2840  
                                                               l5360 2716  
                                                               l4650 3AB6  
                                                               l3738 2288  
                                                               l3850 325A  
                                                               l3674 34D2  
                                                               l3906 2C06  
                                                               l3930 24D8  
                                                               l4386 1728  
                                                               l4298 131C  
                                                               l4802 1B8E  
                                                               l4706 18C0  
                                                               l4626 1F28  
                                                               l4618 1EFE  
                                                               l4554 1DAA  
                                                               l5426 288C  
                                                               l4652 3B04  
                                                               l3596 3100  
                                                               l3756 22E2  
                                                               l3860 32B2  
                                                               l3676 34E8  
                                                               l4724 1906  
                                                               l4708 18C6  
                                                               l4556 1DB0  
                                                               l4564 1DC4  
                                                               l4476 1C90  
                                                               l5356 270E  
                                                               l3790 2468  
                                                               l3766 23DC  
                                                               l3838 2DE2  
                                                               l3686 3548  
                                                               l3694 3802  
                                                               l4806 1BAE  
                                                               l4734 1940  
                                                               l4726 190C  
                                                               l4582 1E66  
                                                               l4574 1E2C  
                                                               l5374 2750  
                                                               l5366 2730  
                                                               l4648 3AA6  
                                                               l3864 32CC  
                                                               l3696 3818  
                                                               l3944 252C  
                                                               l3936 2508  
                                                               l4592 1E7E  
                                                               l4488 1CBA  
                                                               l5384 2784  
                                                               l3786 244C  
                                                               l3882 334E  
                                                               l3874 3316  
                                                               l4818 1BF8  
                                                               l4842 2FE8  
                                                               l3868 32EE  
                                                               l4684 3D10  
                                                               l4844 2FF0  
                                                               l4836 2FC8  
                                                               l3990 2E2A  
                                                               l3878 3334  
                                                               l3982 26C0  
                                                               l3958 25C6  
                                                               l3966 2642  
                                                               l4782 1B08  
                                                               l4598 1E8C  
                                                               l4854 3068  
                                                               l4846 2FFE  
                                                               l3896 2B18  
                                                               l4776 1AE8  
                                                               l4872 30BA  
                                                               l4856 3076  
                                                               l4848 3026  
                                                               l4962 3B22  
                                                               l3988 2E24  
                                                               l4966 3B5E  
                                                               l3998 2E76  
                                                               l4998 3A1C  
                                                               STR_1 06C0  
                                                               STR_2 06EE  
                                                               STR_3 0601  
                                                               STR_4 0638  
                                                               STR_5 06EB  
                                                               STR_6 0686  
                                                               STR_7 0668  
                                                               STR_8 06EB  
                                                               STR_9 069B  
                                                               u3011 3132  
                                                               u3030 316E  
                                                               u3200 3E16  
                                                               u3121 34B2  
                                                               u3220 2256  
                                                               u3140 34EE  
                                                               u4020 09B0  
                                                               u3310 240E  
                                                               u3230 225A  
                                                               u4110 0BB2  
                                                               u4030 09B4  
                                                               u3311 240C  
                                                               u3320 241E  
                                                               u3400 2D7E  
                                                               u4200 0F32  
                                                               u4040 09C2  
                                                               u3090 33FE  
                                                               u3330 2424  
                                                               u3170 381E  
                                                               u4130 0C4E  
                                                               u5010 1B3A  
                                                               u3260 229E  
                                                               u3420 2DA0  
                                                               u3350 2434  
                                                               u3430 2DB0  
                                                               u4150 0D2E  
                                                               u4070 0A88  
                                                               u2800 3900  
                                                               u3280 22CA  
                                                               u3440 2DB6  
                                                               u3520 32E2  
                                                               u3600 2C32  
                                                               u4400 16AC  
                                                               u4320 1420  
                                                               u3601 2C30  
                                                               u3290 23EC  
                                                               u3610 2C42  
                                                               u4250 1124  
                                                               u4090 0B68  
                                                               u5050 1B9E  
                                                               u5220 3B54  
                                                               u3380 2C8C  
                                                               u3620 2C48  
                                                               u2900 3F7E  
                                                               u3700 25A0  
                                                               u4420 1782  
                                                               u4340 14C0  
                                                               u5060 1BBE  
                                                               u5140 3082  
                                                               u5230 3B8E  
                                                               u3390 2D48  
                                                               u3550 3364  
                                                               u2910 3F82  
                                                               u2830 3F46  
                                                               u3710 25A4  
                                                               u3471 323A  
                                                               u2920 3ED2  
                                                               u2840 3F4A  
                                                               u3640 24AC  
                                                               u4360 15CA  
                                                               u3810 2E72  
                                                               u3570 2ACA  
                                                               u2930 3ED6  
                                                               u3730 261C  
                                                               u5330 362A  
                                                               u5227 3B4A  
                                                               u3395 2D34  
                                                               u2780 38B4  
                                                               u2940 3C7A  
                                                               u3740 2654  
                                                               u3660 2528  
                                                               u4380 162C  
                                                               u5260 3A30  
                                                               u4540 1D1C  
                                                               u5500 2872  
                                                               u5237 3B84  
                                                               u3830 2F32  
                                                               u3910 37B6  
                                                               u2950 3C7E  
                                                               u3670 2562  
                                                               u4550 1D2C  
                                                               u3735 2608  
                                                               u3840 2F36  
                                                               u3760 2676  
                                                               u3680 2566  
                                                               u5280 3594  
                                                               u4800 1F0C  
                                                               u4720 1E92  
                                                               u4560 1D30  
                                                               u3761 2674  
                                                               u2970 3FB6  
                                                               u2890 3EF0  
                                                               u3770 2686  
                                                               u5290 35CA  
                                                               u2980 3FBA  
                                                               u3780 268C  
                                                               u4740 1EA8  
                                                               _RCIF 007CF5  
                                                               u4590 1D7C  
                                                               u5470 2812  
                                                               u5607 2090  
                                                               u5295 35BE  
                                                               u4680 1E52  
                                                               u5480 2832  
                                                               u5617 20BC  
                                                               u5537 289A  
                                                               u3970 08A8  
                                                               u5490 2852  
                                                               u5627 210A  
                                                               u5547 3D24  
                                                               u3980 08AC  
                                                               u5637 2136  
                                                               u5557 1F96  
                                                               u3990 08BA  
                                                               u5647 2176  
                                                               u5567 1FD6  
                                                               u4960 192C  
                                                               u5657 21A2  
                                                               u5577 2002  
                                                               u4970 1AA8  
                                                               u5667 21C4  
                                                               u5587 2042  
                                                               u5677 21F0  
                                                               u5597 206E  
                                                               u5687 2212  
                                                               u4975 1A9C  
                                                               u5697 004E  
                                                   ??_initialize_PWM 0003  
                                                       __CFG_STVR$ON 000000  
                                                               abs@a 0013  
                                                               _dbuf 00D5  
                                                 initialize_PWM@freq 0001  
                                                               _atoi 2E10  
                                                               _ctoa 3CA6  
                                                               _main 26EE  
                                                               _dtoa 222C  
                                                               _prec 00CE  
                                                               _otoa 2C76  
                                                               _nout 00CA  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr0h 000FEA  
                                                               fsr1h 000FE2  
                                                               indf0 000FEF  
                                                               fsr2h 000FDA  
                                                               fsr0l 000FE9  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 322E  
                                                               btemp 007F  
                                                               _utoa 2AB4  
                                                               _xtoa 2496  
                                                   __end_of_ADC_Init 01C8  
                                                   __end_of_ADC_Read 3D50  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                              write_SRAM@temperature 00B0  
                                                      __CFG_OSC$RCIO 000000  
                                                  int_to_char@result 0092  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                           __end_of_interrupt_enable 01BA  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 322E  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 1F58  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 34AA  
                                                              STR_10 061E  
                                                              STR_11 0692  
                                                              STR_20 06AC  
                                                              STR_12 0679  
                                                              STR_13 0692  
                                                              STR_14 0679  
                                                              STR_22 06AC  
                                                              STR_31 06AD  
                                                              STR_15 0650  
                                                              STR_40 06D0  
                                                              STR_16 06A8  
                                                              STR_18 06A8  
                                                              STR_34 06CA  
                                                              STR_27 06A9  
                                                              STR_43 06CD  
                                                              STR_36 06CA  
                                                              STR_52 06B4  
                                                              STR_45 06CD  
                                                              STR_54 06B4  
                                                              STR_62 06DC  
                                                              STR_38 06D0  
                                                              STR_47 06D3  
                                                              STR_64 06DC  
                                                              STR_72 06B0  
                                                              STR_49 06D3  
                                                              STR_74 06B0  
                                                              STR_82 06D6  
                                                              STR_59 06B5  
                                                              STR_67 06DF  
                                                              STR_84 06D6  
                                                              STR_92 06B8  
                                                              STR_69 06DF  
                                                              STR_94 06B8  
                                                              STR_79 06B1  
                                                              STR_87 06D9  
                                                    __end_of___flmul 1C14  
                                                              STR_89 06D9  
                                                              ?_otoa 001C  
                                                              STR_99 06B9  
                                                    __end_of___flsub 3D9A  
                                                    __end_of___fltol 365A  
                                                              ?_stoa 000A  
                                                    __end_of___lldiv 3A88  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 3586  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 38A2  
                                                              i2l295 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_getchar 01AA  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _fgetc 3A88  
                                                              _flags 00D0  
                                                              _getch 3FF6  
                                                              _errno 00C8  
                                                              _fputc 38A2  
                                                    __end_of_isalpha 3EE0  
                                                              _fputs 3E26  
                                                    __end_of_isdigit 3FC4  
                                                    __end_of_read_op 011A  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 00CC  
                                                              ctoa@c 001E  
                                                              _putch 01F6  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3F54  
                                                    __end_of_isspace 3E26  
                                                    __end_of_isupper 3F8C  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 3C50  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 37E6  
                                                    __end_of_toupper 3CA6  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1878 000D  
                                                    __initialization 3E68  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2F76  
                                                       __end_of_ctoa 3CFC  
                                                       __end_of_main 28D4  
                                                       __end_of_dtoa 2496  
                                                       __end_of_otoa 2E10  
                                                       __end_of_stoa 3372  
                                                       __end_of_utoa 2C76  
                                                       __end_of_xtoa 26EE  
                                                   __end_of_ReadTime 0148  
                                                 int_to_char@the_num 009C  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00B4  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             ?_fputs 000A  
                                                             STR_104 06C1  
                                                             STR_112 06BC  
                                                             STR_114 06BC  
                                                             STR_130 06E5  
                                                             _ADRESH 000FC4  
                                                             STR_123 06BD  
                                                             STR_107 06E2  
                                                             STR_132 06E5  
                                                             STR_116 06A4  
                                                             STR_109 06E2  
                                                             STR_141 06E8  
                                                             STR_118 06A4  
                                                             STR_134 06C4  
                                                             _ADRESL 000FC3  
                                                             STR_127 06A5  
                                                             STR_143 06C7  
                                                             STR_136 06C4  
                                                             STR_145 06C7  
                                                             STR_139 06E8  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 30D2  
                                                      ??_Timer0_Init 0001  
                                                    write_op@address 0002  
                                                i2_Timer0_StartTimer 01E6  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 3724  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 0064  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lldiv 000D  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 3E8E  
                                            __size_of_UARTSendString 0088  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                  main@input_address 00B6  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3FC4  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ??_read_op 0001  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 3BFA  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                   __end_of_write_op 00D6  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 3E96  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                  ?_Timer0_StopTimer 0001  
                                                     __pcstackCOMRAM 0001  
                                                 ??_Timer0_StopTimer 0001  
                                                       __pidataBANK0 01EE  
                                                      __end_of_fgetc 3B12  
                                                      __end_of_getch 4000  
                                                      __end_of_fputc 394E  
                                                      __end_of_fputs 3E68  
                                                __end_of_Timer0_Init 00B4  
                                                      __end_of_putch 01FC  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 00BB  
                                                          ?_ReadTime 0001  
                                                 __size_of_read_SRAM 02D4  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 0184  
                                                      _initialize_TX 0170  
                                                    _write_SRAM$2154 00A8  
                                                    _write_SRAM$2155 00AC  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                  ?_interrupt_enable 0001  
                                                            ?_strlen 0001  
                                                 ??_interrupt_enable 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                         ??_ReadTime 0005  
                                           __size_of_UARTRecieveChar 002C  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 008E  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 30D2  
                                                            ___fladd 1C14  
                                                            ___aomod 3372  
                                                            ___flmul 1892  
                                                            ___flsub 3D50  
                                                            ___fltol 3586  
                                                            ___lldiv 39F8  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 34AA  
                                                            ___lomod 37E6  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 3B12  
                                                            _address 00D2  
                                                            __pcinit 3E68  
                                                            __ramtop 0600  
                                                            __ptext0 26EE  
                                                            __ptext1 28D4  
                                                            __ptext2 00B4  
                                                            __ptext3 365A  
                                                            __ptext4 2F76  
                                                            __ptext5 3D50  
                                                            __ptext6 1C14  
                                                            __ptext7 1892  
                                                            __ptext8 3CFC  
                                                            __ptext9 01BA  
                                                          ?_write_op 0001  
                                                            _getchar 0198  
                                                          _T0CONbits 000FD5  
                                                  __end_of_read_SRAM 222C  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3EA4  
                                                            _isdigit 3F8C  
                                                            _read_op 00F8  
                                                         ??___xxtofl 0005  
                                                            _islower 3F1C  
                                                            _isspace 3DE2  
                                                            _isupper 3F54  
                                                            fgetc@fp 0003  
                                                            _time_ms 00C4  
                                                            atoi@neg 000E  
                                                            _sprintf 3BFA  
                                                         ??_get_temp 0034  
                                                            _strncmp 3724  
                                                            _toupper 3C50  
                                               end_of_initialization 3E96  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                    ___lldiv@divisor 0009  
                                                  __end_of_timingISR 0034  
                                                    ___lldiv@counter 0011  
                                                  __end_of_vfpfcnvrt 1892  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 3B9A  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                         ??_write_op 0002  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 00D6  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 01DE  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00A0  
                                                  ??_UARTRecieveChar 0001  
                                                         _write_SRAM 28D4  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 008E  
                                                        vfpfcnvrt@vp 0067  
                                             __end_of_set_duty_cycle 00F8  
                                          __size_of_Timer0_StopTimer 0008  
                                          __end_of_Timer0_StartTimer 01E6  
                                               read_SRAM@stored_temp 00AA  
                                                     __end_of_strlen 3FF6  
                                                start_initialization 3E68  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 3F1C  
                                                        __end_of_pad 39F8  
                                                 set_duty_cycle@mask 0003  
                                                  __size_of_ReadTime 0016  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00F5  
                                               __end_of_UARTSendChar 0170  
                                        __end_ofi2_Timer0_StartTimer 01EE  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 0080  
                                              set_duty_cycle@upper_8 0002  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                          __size_of_interrupt_enable 0010  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1721 0010  
                                                          _atoi$1722 0014  
                                                          _atoi$1723 0012  
                                                       ?_Timer0_Init 0001  
                                                          _dtoa$1075 002E  
                                                      UARTSendChar@c 0001  
                                                     _initialize_PWM 011A  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lldiv 0005  
                                                           ?___lodiv 0001  
                                                        ?_write_SRAM 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                  _interrupt_disable 01C8  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           ?_read_op 0001  
                                                           _ADC_Init 01BA  
                                                           _ADC_Read 3CFC  
                                                  __size_of_write_op 0022  
                                                           ?_islower 0001  
                                                 ?_interrupt_disable 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                          _read_SRAM 1F58  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 0080  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                ??_interrupt_disable 0001  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00A0  
                                                    UARTSendString@i 00A4  
                                             __end_of_initialize_PWM 0132  
                                                __end_of_int_to_char 3DE2  
                                                write_SRAM@curr_time 00B2  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 00C0  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 06F2  
                                          __end_of_interrupt_disable 01D6  
                                                          _xtoa$1111 002F  
                                                          _xtoa$1112 0031  
                                                  ___wmul@multiplier 0001  
                                                   _Timer0_StopTimer 01D6  
                                                          main@input 00BA  
                                                       _isspace$1758 0007  
                                                         ?_read_SRAM 00A6  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 3E7C  
                                                __size_of_write_SRAM 01E0  
                                                    _UARTRecieveChar 0038  
                                                           _ReadTime 0132  
                                                   ??_UARTSendString 00A2  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 015C  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lldiv 0090  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 0082  
                                                           ___xxtofl 2F76  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_read_op 0022  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 39F8  
                                                           __ptext11 3586  
                                                           __ptext20 3B9A  
                                                           __ptext12 01D6  
                                                           __ptext21 06F2  
                                                           __ptext13 01DE  
                                                           __ptext30 3724  
                                                           __ptext22 2496  
                                                           __ptext14 0132  
                                                           __ptext31 322E  
                                                           __ptext23 3C50  
                                                           __ptext15 00D6  
                                                           __ptext40 3E26  
                                                           __ptext32 2C76  
                                                           __ptext24 3F1C  
                                                           __ptext16 1F58  
                                                           __ptext41 38A2  
                                                           __ptext33 222C  
                                                           __ptext25 3F54  
                                                           __ptext17 00F8  
                                                           __ptext50 3B12  
                                                           __ptext42 01F6  
                                                           __ptext34 3EE0  
                                                           __ptext26 3EA4  
                                                           __ptext18 3D9A  
                                                           __ptext51 0148  
                                                           __ptext43 2E10  
                                                           __ptext35 3372  
                                                           __ptext27 2AB4  
                                                           __ptext19 3BFA  
                                                           __ptext52 015C  
                                                           __ptext44 3DE2  
                                                           __ptext36 30D2  
                                                           __ptext28 37E6  
                                                           __ptext61 01E6  
                                                           __ptext53 01AA  
                                                           __ptext45 3F8C  
                                                           __ptext37 3CA6  
                                                           __ptext29 34AA  
                                                           __ptext54 01C8  
                                                           __ptext46 0064  
                                                           __ptext38 394E  
                                                           __ptext55 0170  
                                                           __ptext47 0198  
                                                           __ptext39 3FC4  
                                                           __ptext56 0184  
                                                           __ptext48 3A88  
                                                           __ptext57 011A  
                                                           __ptext49 3FF6  
                                                           __ptext58 0038  
                                                           __ptext59 008E  
                                                   __size_of_isupper 0038  
                                                           _get_temp 365A  
                                                   _interrupt_enable 01AA  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                       _UARTSendChar 015C  
                                                        _int_to_char 3D9A  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 01E6  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 0198  
                                              __end_of_initialize_TX 0184  
                                                          stoa@F1152 00F5  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                     read_op@address 0001  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 00D4  
                                                           _ungetcnt 007E  
                                                           _vfprintf 3B9A  
                                                   read_SRAM@address 00A6  
                                         __size_of_interrupt_disable 000E  
                                                           main@temp 00B8  
                                              read_SRAM@time_elapsed 00AC  
                                                   ___aomod@dividend 0001  
                                                           _write_op 00B4  
                                                     _vfpfcnvrt$1126 005B  
                                                     _vfpfcnvrt$1127 005D  
                                                         _INTCONbits 000FF2  
                                            __end_of_UARTRecieveChar 0064  
                                                        ??_read_SRAM 00A8  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 01FC  
                                                          sprintf@ap 0090  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                   ___lldiv@dividend 0005  
                                                        _UARTNewLine 0148  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                       ??_write_SRAM 00A6  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                      read_op@result 0002  
                                                           sprintf@f 008A  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 0080  
                                                   ___lldiv@quotient 000D  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                 __end_of_write_SRAM 2AB4  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                           __end_of_Timer0_StopTimer 01DE  
                                                       ___aomod@sign 0012  
